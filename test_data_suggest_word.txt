git init
grep <string>
clear
vi <file>
ls
git clone <URL>
ls
cd ..
apt-get -f -y <string> <string>
git checkout <string>
rm <string>
ls <directory> -a
ls
ls -l
alias <string>
rm -rf <string>
git reflog expire --expire=<string> --all
nano <file>
bash
ls
bash
grep -v <string>
grep -v <string>
exec --no-startup-id <string> -c
kubectl apply --filename <file>
wc -l
vim <file>
curl -s <string>
cat <string>
ls
exit
vi <file>
git pull
<directory> <string>
git status
grep -Eio <string> <string>
npm run build
mv <string>
cd <string>
ping <string>
npm audit fix
sleep <number>
sudo apt-get install <string>
git add <string>
git push
history -cr <string>
ls -Gl
read <string>
chmod +x <string>
ls -a
rm -f <string>
git commit
npx <string>
apt-get install <string>
vi <file>
cd <string>
vim <file>
curl <string>
git pull --rebase <string>
cd ..
cd <string>
read -rp <string> <string>
exit
cd <string>
mkdir <string>
cd <string>
git add .
ls
ls
sed <directory>
npm run register
pico <file>
git checkout master
git add <string>
git status
sed <directory>
chmod u+x <string>
ls
cd <string>
sudo nano <file>
cd ..
cat <string>
vim <file>
git checkout
history
curl -L <URL>
exit
sudo npm
git pull
vim <file>
clear
git pull
ls
curl <string>
ls
cd ..
ls -la
git init
cd <string>
print <string>
git add <string>
fg
cd <string>
exit
ls
exit
ls
git br
ls++ -a
ls
nano <file>
cd <string>
vi <file>
exit
ls
chmod +x <string>
cd <string>
unset <string>
grep <string>
git help -a
exit <number>
git clone --bare <string>
exit
cd <string>
cd <string>
git fetch
tmux ls
git pull
exit <number>
ls
nano <file>
ps -u <string>
vi <file>
git commit -m <string>
sudo curl -L <URL> -s`-`uname -m` -o <directory>
docker ps
ls
<directory> -m <file>
git push -u <string> main
sleep
exit <number>
sudo flatpak override --filesystem=<file>
rm -f <string>
export <string>
cp <string>
git push main <string>
git commit -m <string>
find . -iname <string> -atime <string> -type <string> -exec <string> -lsa <string>
code .
ls
tail <file> -n <number>
vim <file>
git push
cd <string>
cd <string>
ls
ls=<string> -ld <string>
rm -f <string>
cd <string>
git add <string>
man <string>
locate
ls
git remote add origin <URL>
grep -Eh <string>
cd ..
reset
source <directory>
git pull origin master
exit
git pull
sudo ldconfig
clear
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
ls -la
cd <directory>
ls
apt-get update
cd <string>
git co -b <string>
clear
sudo reboot
history
chmod u+x <string>
python3 <file>
rm <string>
ls -lAF
cd ..
git status
cd ..
ls
sed <directory>
git pull origin master
docker ps
exit
rmdir <string>
ls
cd <string>
git add <string>
bash
vim <file>
vi <file>
sudo vim <file>
git status
rm <string>
ls -R <string>
ls
cd <directory>
rm <string>
vim <file>
exit
ls -la
sudo nmcli con mod <string> <string>
docker rmi <string>
exit
uname -a
ls
npm start
ls
ls
cd
git pull
sudo apt install <string>
ls
npm run start
git diff <string>
open .
done
git commit -m <string>
sed <directory>
ls
find . -empty -type <string> -print -delete
cd <directory>
ls
git pull
npm install
sleep <number>
curl <string>
find . -iname <file>
git push heroku main
do\
cd <directory>
ls
cd ..
git pull
done < <string>
docker run --rm -p <string>
ls
git status . <string>
ls
cd <string>
vim <file>
vim <file>
touch <string>
ls -la
sudo su
vim <file>
ls
ls -altr
ls -la
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
sudo nvidia-settings -a <directory>
rm -rf <string>
cd ..
cd ..
rm -rf <string>
cd <string>
sudo systemctl status <string>
ls --help
ssh dirlic@10.18.0.39 -p <number>
exit <number>
sudo cp -rf <string>
cd <string>
git status
sh
cp <string>
ls
awk <string>
top
yay -S <string>
service <string>
sudo make clean install
kill -9 <number>
fg
sudo node <file>
git add .
python3 <file>
sudo docker ps -a
vim <file>
ls
kill -9 <number>
sudo apt-key add -
sudo aura -A <string>
ls -a
awk <string>
make
tail -f <string>
ssh-keygen -f <directory> -R <file>
cp <string>
ls
clear
ls -haltrS <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
grep -Eio <string> <string>
ls
docker build -t <string>
ls
ls
sudo apt-get install -f
rm -R <string>
ls
cd ..
rm -r <string>
tail -f <string>
cd <string>
rm -f <string>
grep <string>
git commit -m <string>
ls
npm install npm install react-native-actions-sheet --force
cp <string>
vim
cd <directory>
ls
ls -la
ls
ls
mkdir <string>
ls
docker-compose build
ls
exit <number>
type <string>
cd <string>
git status
sort -nr
sudo mv <file>
grep -i <string>
setg RHOSTS <file>
cd ..
wget -t <number> --retry-connrefused -c -O <string>
cd <string>
code .
ls
clear
ls
find <directory> \( -iname <string> -or -iname <string>
ls -la
sh <file>
head
ls
mkdir <string>
git push
xargs -o <string>
sudo cp <string>
git config <file> <string>
mv <string>
ls
fg
curl -k -s <URL>
ls
sudo apt update
git config --global <file> <string>
cd <string>
git pull
ls
rm <string>
ls
git remote add origin <URL>
mkdir <string>
ls
cd <string>
sudo apk add <string>
ls
vi <file>
wget <URL>
sudo update-alternatives --set <string>
clear
sudo python3 <file>
top
git status
exit
ls
cd
cd ..
read <string>
cd <string>
clear
git diff
make clean
ls
ps -efww
cd <string>
git add .
ls -l
git push origin -u <string>
curl -XPUT <directory> -d <string>
find . -type <string> -printf <string>
wget <URL>
grep <string>
ls
vim <file>
npm i
find <directory> -maxdepth <number> -mindepth <number> -type <string>
cp -r <directory>
mkdir
mv <string>
cd <string>
clear
vi <file>
vim <file>
ls
cd <string>
sudo sed -i <directory>
cd <string>
tail -1)..HEAD --no-merges --pretty=<string>
ls
cd <string>
cd <string>
ls
ls
git branch -m <string>
cd <directory>
cd <string>
sudo apt-get remove <string>
git commit -m <string>
nano <file>
rm <string>
cd <string>
touch <file>
ls
cp -r <directory>
vim <file>
wget -P <directory>
su
git commit
npm i -g <string>
git commit -m <string>
python3.11 <file>
sudo ln -s <directory>
ls
rm -rf <string>
su
sudo shutdown
git init
cd
ls
docker exec -it <string>
cd <directory>
git clone <URL>
ls -l
git commit
ls
dir
exit
source <directory>
clear
rake <string>
exit
npm i
ls
done
sudo su
python3 <file>
git diff
rm -rf <string>
sudo apt upgrade -y
cd ..
more <file>
cd <directory>
git add <string>
scp <string>
sudo apt-get update
sudo apt-get upgrade -y
cd <string>
mkdir -p <string>
cd <string>
ls -la
exec <string>
vim
stat <file>
clear
cd <string>
vi <file>
cd ..
ls
cat <string>
ls
less <string>
git add <string>
cd ..
cd ..
git add .
cd <string>
cd ..
git config --global
vim <file>
ls
ls
ls
cd <directory>
read -rp <string> <string>
ls
sudo killall -9 -q -w
cd <directory>
cd <directory>
ls
npm install <string>
ls
git commit -m <string>
cd <string>
cd <string>
cd ..
cd <string>
ssh-copy-id
node
chmod <number> <string>
ls
find . -name <string> -type <string>
git commit -m <string>
sudo update-alternatives --install <directory>
git checkout master
unset color_prompt force_color_prompt
git log
cd <string>
cd ..
mv <string>
python3 <file>
cd <directory>
sudo apt install -y <string>
ls
cd
sudo apt install <string>
git gc --aggressive
cd <string>
fg
vim <file>
less
cd ..
vi <file>
git clone <URL>
open <string>
mv <string>
ls
cd <string>
cd <directory>
cd <string>
vim <file>
vim
ls -xAh
ls
grep <string>
git push origin master
cd <string>
grep <string>
cat <string>
sudo fdisk -l
mkdir -p <string>
git commit -m <string>
tail -f <string>
clear
clear
ls
curl -s <string>
ls
ls
sudo apt-get upgrade --fix-missing
cd ..
fg
python3 <file>
ls
rm <string>
read -n <number> -s -p <string>
vim <file>
ls
cd ..
read -n <number> -s -p <string>
ls
fg
ls -l
read -p <string>
ls
sudo dpkg --set-selections <string>
docker push <directory>
ls
ls
cat <string>
type -a <string>
tar -cvf <string>
git add <string>
ls
ls
git pull
grep <string>
vim
npm install <string>
gsettings set <file> <string>
read <string>
docker build -t <string>
cd <string>
rm <string>
rm -rf <string>
vi <file>
git remote add origin <URL>
rm -r <string>
sudo sed -i <directory> <file>
cd
ls
more <file>
sudo groupadd docker
git checkout <string>
cd <directory>
cd ..
pwd
exit <number>
sudo snap install vscode --classic
ls
git -am <string>
rsync -rt <string> <directory>
find . -name <file>
cd <string>
ls -l
ls
date
npm install <string>
exit
git status
vi <file>
git checkout -b <string>
nohup <directory> --env=<string> <string>
git add <string>
ls
docker run -it --rm -v <string>
cd <string>
read -r <string>
npm install
git commit -m <string>
pwd
cd <directory>
LANG=<string> rpm -qp --queryformat <string>
vi <file>
sudo chmod --reference==<directory> <string>
git add -A
ls
w
sudo pkill <number>
vim <file>
kubectl <string>
bash
cd ..
screen -S <string>
ls
git init
ls
sudo -H <string> install <string>
rm -rf <string>
ls
apt install -y <string>
cd <string>
bash <file>
rmdir <string>
mkdir -p <string>
ls
clear
cd <string>
vim <file>
python3 <file>
git status
ls
git diff <string>
cd <string>
cd ..
ls
sudo chmod +x <string>
nano <file>
vim <file>
sudo nvim <directory>
npm run dev
nano <string>
cat <string>
cd ..
mkdir <string>
ls
fg
nano <file>
kill -9 <number>
fg
cd <string>
sudo pacman -S <string>
cp -r <directory>
git pull origin master
vi <file>
clear
git commit -m <string>
grep <string>
find . -empty -type <string> -print -delete
nc <string>
wget <URL>
npm run coverage
rm -r <string>
vi <file>
cp <string>
git push origin master
ls
touch <string>
vi <file>
bash
sudo su -
diff -b <file>
curl <URL> -u <string>
cd ..
grep --color <string>
cd <directory>
git status
sudo -s -u <string> -H
ls -la
mv <string>
vi <file>
npm run dev
sudo chown <string>
ls
reboot
ls -la <directory>
git init
sudo xbps-install <string>
git checkout <string>
ping <string>
sudo chmod <number> <directory>
vim <file>
ls
kubectl --namespace <string>
cd <string>
cd <string>
vim <file>
chown -R <string>
rm <string>
ls -la
clear
fg
cd <string>
git push
ls
cd <directory>
find . -name <file> -type <string> -print -delete
ls
exit
pwd
cd <string>
git pull
sudo apt update
ls
mkdir -p <string>
ls
sudo apt update -y
rm -f <string>
ls
cd ..
git pull origin main
clear
then\
cd <string>
git add <string>
cd <string>
exit
ls
git commit -m <string>
ls
chmod <number> <string>
vi <file>
git switch <string>
xargs -L1 <string>
cat <string>
cd <string>
vim <file>
ls
ls
ls
ls
ls
docker tag <string>
exit
git push
cp -v <string> <directory>
cd <string>
rm -rf <string>
ls
fg
cd <string>
exit <number>
vim <file>
ls -ltr
ls
find . -type <string>
ls
mv <string>
python3 <file>
ls
cd <string>
python3
exit <number>
git rebase <string>
git add .
git pull
which <string>
cd <directory>
ls --help
git commit -m <string>
sed -i <string>
cd
ls
docker tag <string>
source <directory>
cd <string>
git remote remove origin
cat <string>
print <string>
ls
mkdir <string>
cat <string>
screen -r
ls
sudo apt-get install -y <string>
ls
head <filename> # outputs the first lines of file (default: <number> lines)
head
cd -
vi <file>
cp <string>
cd ..
ls
cat <string>
cd
ls
ls
vim <file>
vi <file>
export <string>
git add .
clear
ls
ls
sudo docker build -t <string>
php
cd <string>
sudo mv <file>
cd ..
git status
curl -o <string>
history -a
ls
git commit -m <string>
cat
cp -r <directory>
ls -ls
git add .
cd <string>
npm run package
cd ..
cd <string>
mkdir -p <string>
git merge <string>
cd <string>
cat <string>
sudo apt update
ls
fg
clear
ls -l
sed <directory>
cd ..
chmod u+x <string>
ls
npm
grep <string>
pwd
git branch
jq -r <string>
sudo apt install <string>
more <file>
ls
date
python3
vi <file>
sudo pacman -S <string>
git commit
exit
cd
git add .
ls
git status
sudo pip install --upgrade <string>
cat <string>
cd <directory>
git config <file> <file>
vi <file>
ls
sudo vim <directory>
chmod <string>
ls
npm run test
rm <string>
xrandr --output <string> --auto
ls
su root
ls
vi <file>
mv <string>
ls
python3 python -m <string>
cd <directory>
read -r <string>
git push
sudo init <number>
cd <string>
cd <string>
cd <directory>
vim <file>
exit <number>
ls
sudo pip3 install <string>
cd
wget <URL>
git pull origin master
git pull
ls
uniq
vi <file>
cd <directory>
sh
ps ux
git commit
apt install -y <string>
grep -e <string>
vim <file>
exit
cd <string>
curl -kL <URL>
sudo cp <string>
ls
sudo service nginx restart
ls -la
sudo -H <string> install --upgrade <string>
sudo node <file>
bash <file>
clear
mkdir <string>
bash
ping <file>
sudo mkdir -p <directory>
ls
true
npm i --save <string>
ls
vim
sudo chmod +x <directory>
cd <directory>
sudo git config --system <file>
git remote add origin <URL>
vim <file>
ls
read -p <string>
sudo yum update -y
ls
rm -rf <string>
fg
git push
npm test
vim <file>
git init
exit
git status
fg
sudo systemctl start <string>
cd ..
git pull --rebase
cd <string>
cd <string>
python3 <file>
sed -e <directory>
sudo apt-get remove <string>
su
cat <string>
ls
vim <file>
cd <string>
git commit -m <string>
ls
cd <string>
cd ..
npm run dev
set
nano <file>
ls
read -p <string>
exit <number>
rm -r <string>
git clone <URL>
code .
vim <file>
git clone <URL>
sudo shutdown -r <string>
ls -AF
mkdir <string>
mv <string>
git config --global <file> <string>
egrep -v <string>
ssh -L <string>
cd ..
ls
rm <string>
ls
rm -rf <string>
clear
git clone <URL>
sh
cd <directory>
git commit -m <string>
git rebase <string>
git add .
rm -d <string>
chmod u+x <string>
sudo git clone <URL>
cp <string>
else\
cd
python3 <file>
find <directory> -name <file>
git status
cd
cat <string>
patch -p1 <string> <file>
python3 <file>
ls
vi <file>
done
npm start
vi <file>
chmod <string>
ls
rm <string>
node <file>
sudo
done
<string> - <string>
nano <string>
pkill <string>
vim <file>
cd <directory>
dpkg -L <string>
exit
cd ..
cd <string>
git pull
ls
wget <URL>
clear
snap remove <string>
clear
curl -v -H <string> <URL>
rm -rf <string>
git --v
read -s -n <number>
vim <file>
cd <string>
cd <directory>
cd <directory>
cd <string>
ls
sudo prometheus --config.file=<directory>
ls -ltr
wget -nd -m -nv <URL>
cd <string>
git log
cd <directory>
ls
git pull
systemctl start docker
mv <string>
pavucontrol
cd <string>
cd ..
clear
code .
sudo tar -xzf <file> -C <directory>
ls
apt-get update
rm -rf <string>
ls
cd
grep <string>
cd ..
cd <string>
cd <directory>
exit
cd <string>
grep -vE <string>
unset <string>
sed -E -e <directory>
find . -name <file> -type <string> -print -delete
pkill <string>
vim <file>
systemctl restart <string>
ls
ps -ef
cd ..
cd <string>
cd
cd <string>
git config --list
ls
ssh <string>
vim <file>
ssh dirlic@10.18.0.39 -p <number>
git fetch origin\
screen
clear
cd <string>
python3 <file>
git status
git init
git --version
git branch -D <string>
shutdown -h <string>
git add <string>
vi <file>
ls
mkdir <string>
cd ..
cd ..
vim <file>
git add .
cd <string>
sudo python3 <file>
git clone <URL>
sleep <number>
sudo sed -i <directory>
chsh -s <directory>
cd <string>
cd <string>
then\
clear
cat <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cat <string>
git config
rm <string>
sudo usermod -a -G <string>
ls
env
ls
sudo prime-select nvidia
git add -A
cd <string>
ls
vi <file>
vim <file>
chmod +x <string>
touch <file>
ls
mkdir <string>
source <string>
bash <file>
vim <file>
git commit --allow-empty -m <string>
ls -l
vi <file>
git rm --cached
sudo apt update
sed -i <directory>
sudo bash -
rm -rf <string>
rm <string>
m -P"Inspect <string>
sudo pip install <string>
cd <string>
awk <string>
ssh <string>
clear
clear
fg
find . -name <file>
ls
exit <number>
ls
shutdown -h <string>
git -u -f <string>
sudo pacman -Qu <string>
git clone <URL>
curl -so- <URL>
ls
git push origin <string>
wget -q -O -http://10.0.0.10:30168
curl <string>
ls
clear
sudo rsync
git push
git add .
git commit -m <string>
git init
sudo chmod <number> <string>
git init
vi <file>
cd <directory>
python3 <file>
stat -c <string>
ls
git commit -m <string>
git pull
sudo useradd <string>
npm install <string>
ls
cd <string>
sudo bash -c <string>
ls
git clone <URL>
du -hs <string>
sudo port install <string>
ls
git remote add origin <URL>
clear
kill -9 <number>
curl <string>
ls -la
cd <directory>
git commit -m <string>
cp <string>
wget -P <directory>
ls
chmod u+x <string>
git checkout -b <string>
ls
ls
git add .
git ls-files
find <directory> -type <string> -exec <string> <number> <string>
reset
ls
sudo apt-get -y <string>
ls
ssh-copy-id <string>
cd <string>
ls
git checkout -b <string>
find . -name <file>
git filter-branch --index-filter <string>
ls
grep -r <string>
cd ..
cd ..
ls
read <string>
shift
ls=<string> -ld <string>
zcat <file>
cd <directory>
done
git init
sudo aptitude install <string>
cd ..
git pull
git add
git checkout <string>
sleep <number>
lsof -i:9030
npm run start
git add -A
rm <string>
docker exec -it <string> bash
git push origin <string>
ls++ -a
cd <string>
cat <string>
cd ..
vim <file>
touch <string>
rm -f <string>
sudo apt upgrade
clear
apt-get install -y <string>
local <string>
cd <string>
ls
exit <number>
ls
tar xf <file>
git commit -m <string>
sudo su
export <string>
chmod +x <string>
ls
git init
sed <directory>
python3 <file>
wget $flutterLINK -O <file>
tail -f <string>
ls
rm -rf <string>
ls
git stage
cat <string>
grep -ERho <string>
vim <file>
git stash pop
nano <file>
sudo vim <directory>
cd <string>
sudo adduser <string>
sudo apt-get install <string>
ls -F
cat <string>
git branch
ls
exit
shutdown now
git push -u <string> master
git commit -m <string>
cd <string>
killall <string>
cd ..
bash
nano <string>
sudo apt-get install <string>
git status
cd <string>
clear
grep <string>
cd <directory>
rmdir <string>
sudo sed -i <directory> <file>
lsblk
git clone <URL>
git status
clear
sudo apt-get install <string>
tmux a
wc -L <file>
ls
fg
exit <number>
do\
exit
cd ..
npm run devstart
ls
sudo npm install -g --unsafe-perm <string>
cd
ssh-keygen -t <string> -b <number>
git push -u <string> master
ls
ls
ls
git push -u <string> main
find . -name <file> -type <string> -print -delete
cd <directory>
sudo shutdown -hP <string>
ls
npm install --save <string>
cd ..
ping <string>
nano <string>
ls
cd <directory>
ls -la
git add <string>
cd <string>
ls
sudo sed -i <directory>
mv <string>
xargs -I <string>
cd <string>
ls -latr
set -x
ls
cd <directory>
vim <file>
git push
nano <file>
git commit -m <string>
find . -empty -type <string> -print -delete
vi <file>
cd <directory>
vi <file>
vi <file>
git commit -m <string>
cat <string>
find . -name <file>
apt-get upgrade
fg
clear
git submodule add <URL>
sudo su -
ls
vim <file>
ls
cd
rm <string>
cd ..
sudo apt-get install -y <string>
ls
git status
kubectl <string>
cd <string>
exit
ls
rm <string>
cd <string>
ls
cd ..
rm -f <string>
subl <string>
which <string>
exec zsh
sudo fc-cache -fv
then
sudo curl -L <URL> -o <directory>
git diff <string>
git branch -M <string>
wget -P <directory>
ls
ls -la
rm <string>
rm <string>
vim <file>
vim
ls
ls
ls
ps ax
cd <string>
ls
read -sp <string>
rm -f <string>
cd
sudo apt-get install <string>
git branch
cd ..
ls
sudo apt-get -y <string>
vi <file>
cd
vim <file>
cd <string>
vi -t <string>
vi <file>
ls
npm install long --save
ls
ls
ls
git add <string>
cat <string>
cd <directory>
sudo npm uninstall -g <string>
mkdir <string>
ls
git clone <URL>
git remote -v
cd <directory>
find -name <string>
git config --global <file> <string>
sudo apk add <string>
mkdir <string>
git push origin master
xargs docker rm -v
tmux a
date <string>
more
cd <string>
cd <directory>
cd <directory>
git add .
ls
exit
cd ..
ping
cd <string>
then\
ls -lt
git remote add origin <URL>
sudo apt install <string>
cat -A <string>
tail -f <directory>
vim <file>
git commit -m <string>
ls
ls
chown -R <string>
git commit -m <string>
sudo apt upgrade
git clone <URL>
cd
clear
yarn add <string>
sudo reboot
sudo git clone <URL>
git push
npm update
sed <directory>
sudo add-apt-repository --remove <directory>
git push origin
clear
cd
history
ls
nc <string>
sort -n
hexdump
cp -r <directory>
ls -la
cd ..
git remote -v
git init
cd <directory>
sudo systemctl start <string>
clear
clear
cd <string>
sudo apt-get install <string>
clear
cd <string>
mv <string>
cd <directory>
pwd
git push origin master
ls
clear
mkdir <string>
which <string>
clear
vim <file>
sudo service nginx reload
cd
ls
git status
rm -f <string>
sudo docker ps -a
ls
ls
exit <number>
vim
cd <directory>
git commit -am <string>
ls
cd <string>
git commit -m"hhhh"
rm -f <string>
read
vim <file>
sort -u <string>
vim <file>
mkdir -p <string>
fg
vim <file>
df -h
grep <string>
top
read <string>
ip a l
sudo mkdir <directory>
ls -ltr
ls
ls
ss
clear
unzip <file>
sudo apt-get install fonts-noto-color-emoji -y
mkdir <string>
ls
git clone <URL>
cd <string>
cd
vim <file>
grep <string>
code .
cp -r <directory>
cd <string>
sudo ntpdate -q <string>
git clone <URL>
top
cd <directory>
sudo apt install <string>
nano <file>
cd <string>
history
sudo mv <file>
git remote set-url origin <string>
cat <string>
ssh isl-env <string> -p <file>
chmod -x <file>
sudo wget -r <URL>
ls -la
vim
pwd
sudo systemctl reload <string>
git fetch --all
cut -c <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
curl -L -o <string>
grep -i <string> >files
docker system prune --volumes
mv <string>
perl <file>
cat <string>
npm install <string>
vi <file>
cd <string>
clear
cd <string>
ls
printf <string>
sudo apt-get install -y <string>
less
open .
sudo chown -R <string>
sudo apt install <string>
npm install
ls
sudo apt install <string>
sudo sed -i <directory>
exit
cd
cd <string>
git pull
vim <file>
nice
ls
cd <string>
gsettings set <file>
python3 <file>
chmod +x <string>
vim
exit <number>
ssh dirlic@10.18.0.39 -p <number>
vim <file>
vim <file>
ls
tail -${cols}
sudo stop uwsgi
ls
rm -r <string>
git status
git clone <URL>
source <string>
perl <file>
fg
man <string>
cd <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
ls
cat <string>
git add <string>
git add .
ssh <string>
ls
cd <string>
sudo ufw enable
git commit -m <string>
cat <string>
docker-compose up -d --build
python3.11 <file>
sudo nano <string>
sudo kill -9 <number>
sudo apt-get install <string>
git status
sudo make install
env <string>
cd
cd <string>
vi <file>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
python3.11 <file>
ls
ls
git init
git stauts
sudo useradd --home <directory> --group <string> --shell <directory>
sudo sed -i <directory>
cd <string>
ls
sudo -i
cd <directory>
git push --set-upstream <string>
cd <string>
cd ..
sleep <number>
sudo apt-get update
ls
cd ..
docker image rm -f <string>
ls
fg
which
sudo sed -i <directory>
sudo apt upgrade -y
cd <string>
grep <string>
vim
vi <file>
ls
egrep <string>
sudo vi <file>
ls
ls -altr
clear
cd <string>
wget -qO - <URL>
<file> program
cat <string>
ls -aF
git remote -v
ls
fg
git init
cd <string>
nano <file>
sudo mkdir <string>
git stash
sudo apt-get install --reinstall <string>
vim <file>
sudo netstat -tuln
git status
clear
ls
cd <string>
git init
fg
diff <file> <file>
git pull
cd <directory>
git push
ls
exit <number>
done
npm uninstall <string>
exit
git rebase <directory>
cd ..
clear
npm i <string>
sudo dnf install <string>
cd ..
sudo mkdir <string>
grep <string>
nano <file>
grep <string>
sudo -i
cd <string>
mount
git rm --cached <string>
cat <string>
mv <string>
bash <file>
screen -s <string>
vi <file>
ls
ls
make clean
vim <file>
rm -f -- <string>
git push -u <string> master
curl -s --user <string>
npm run test
exit
chsh -s <string>
exit
ls
fg
sleep
git add .
cat <string>
python3 <file>
rm <string>
ls
dir
exit
sudo pacman -S --noconfirm <string>
cd <string>
do\
git add <string>
clear
ls
fg
git pull origin master
ls
touch
vim <file>
vim
git rebase -i <string>
vim <file>
rm <string>
sudo nano <file>
mkdir <string>
cd <directory>
sed -i <string>
vi <file>
cd <directory>
read -sp <string>
vim <file>
sudo service nginx restart
sudo stop uwsgi
git branch
git push -u <string> main
clear
fg
git add .
git add <string>
clear
ls
sudo nano <file>
vim <file>
git pull
vim <file>
aptitude install <string>
ls
ls
cd <string>
nano <file>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
cat <string>
rm <string>
sudo su
cat <string>
sudo apt-get install <string>
git remote add origin <URL>
read -s -n <number>
reset
git push
git push -u <string> master
ls
vim <file>
git add .
clear
less <string>
touch <file>
sudo apt-get remove --purge <string>
git status
vi <file>
git push -u <string> master -f
clear
done
mkdir <string>
sudo stop uwsgi
exit <number>
npm run bench -- -c <file> -n <file>
sudo sed -i <directory>
alias
ls
exit
git commit -m <string>
git push origin main
rm -rf <string>
ls
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
chown <string>
ls
mv <string>
clear
grep <string>
sudo zypper install <string>
vi <file>
python3 <file> --model-path <file> --conf <string> --img-size <number>
sudo apt update
less <string>
cd <string>
curl --fail -s <string>
sleep <number>
vi <file>
tcpdump --help
clear
sudo cp <string>
sudo apt update
ls
git push
history # shows command line history
rm <string>
cd <string>
pwd
cd <directory>
cd <string>
vi <file>
vim <file>
set -x
mkdir -v <string> <number>
sudo apt install docker-ce -y
grep <string>
htop
kubectl get <string>
git fetch
fg
git branch -M <string>
source -v
curl <URL> -k
ls -la
apt-get install <string>
vi <file>
vim <file>
history
clear
git gc --prune=<string>
sleep <number>
ls
ls
vim <file>
cd ..
curl --proto <string> --tlsv1.2 -sSf <URL>
ls
git stash push -m <string>
git remote add origin <URL>
git status
cd <string>
vim <file>
mkdir <string>
diff <file>
alias <string>
git checkout -
cd <string>
sudo pip3 install --extra-index-url <URL>
grep -wirc <string>
ls
cd ..
grep -iE <string>
vi <file>
clear
ls
git pull origin <string>
git add .
cat <string>
cd ..
git status
ls -lisa
git commit -m <string>
chmod <string>
clear
top
date <string>
dpkg-query
git push -u <string> main
sudo apt -y <string>
apt
exit
git commit -am <string>
ls ..
git switch main
ls
ls
wget -q -O <file>
mv <string>
ls
curl <string>
clear
git checkout -b <string>
cp <string>
git commit
ls
ps -ae
xargs grep <string>
find <directory> -type <string> -name <string>
git push origin master
git please
git status
mkdir -p <string>
git branch -m <string>
cd <string>
cd ..
ls
git pull
rm -r <string>
git branch -a
mkdir -p <string>
git init
sudo chmod <number> <directory>
head out -n <string>
git commit
yay -S <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
rm -rf <string>
touch <string>
git pull origin development
ls -la
ls
sleep <string>
ls -lart
sudo
git config --global <file> <file>
ls
git clone <URL>
cd ..
cd
ls
fg
time <directory> -cpuprofile=<file>
cd <string>
git remote add origin <URL>
git
mkdir <string>
cd <string>
git config --global <file>
ls
rm -f <string>
npm start
vim <file>
sleep <number>
cd <string>
ls
cd
sed -E -e <directory>
cd
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
ls
sed <directory>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cd <string>
uniq wc -l
sudo apt-get update
cd <string>
git push
cd <string>
ls
cd ..
ls
gunzip <file>
docker-compose up -d --build
vim <file>
source <file>
docker-compose up -d --build
pwd
ls
fg
ls
ls
cat <string>
ls
sed -E -e <directory>
cd ..
screen -r
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
find <directory> -type <string> -ls
fg
less
sudo udevadm trigger
ls -la <directory>
ls
npm run dev
curl -so- <URL>
npm install --save <string>
cd <string>
ls
git add .
exit
git push pay <string>
curl -F <string>
cd ..
git commit -m"fixed <string>
rsync <directory>
grep -o <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
npm install
git push
python3 -m <string> --version
cd <string>
python3 <file>
rm -rf <string>
grep -a -i -E --no-filename <string>
sed -e <directory> -e <directory>
cd <directory>
vim <file>
clear
ls
vi <file>
ls
exit
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
brew cleanup -n <string>
cd <string>
ls
vim
sleep <number>
ps -ef
ls
cat <string>
rake <string>
ls
git commit -m <string>
rm -d <string>
eval <string>
cd <directory>
git add .
sudo -E <string> -
rm <string>
ls
git push
du -h --max-depth=<number> <string>
cd <string>
nano <file>
git push
git pull origin development
git commit -m <string>
ls
chmod +x <string>
ls
git add <string>
cd <directory>
find <string> -not <string> -wholename <file> -prune <string> -type <string>
lsblk
ls -al
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
vi <file>
ls
gzip --version
npx
rm -r <string>
clear
git merge <string>
sudo su
cat <string>
git add .
clear
df -k
mvn compile
grep <string>
patch
grep -F <string>
cd <directory>
git add -A
ls
clear
sudo rm -rf <string>
ls
npm install --save <string>
sudo sed -i <directory>
rm -rf <string>
cat <string>
clear
cd <string>
wget -q <URL> -O <file>
cd ..
git commit -m <string>
ls -alF
ls
cd <string>
tar -xzvf <file>
head -n <string>
clear
ls
cd <string>
sudo apt install -y <string>
rm <string>
ls
ls -latr <directory>
cd <string>
brew install <string>
cd ..
git init
cd ..
exit
killall
cd <directory>
ls
git reset --hard
cd <string>
git push
sudo vi <directory>
vim <file>
cd ..
cat <string>
mkdir <string>
git fetch
git add .
grep -x <string>
vim <file>
vim <file>
exit
exit
cp -r <directory>
ls
cd <string>
ls
cat <string>
cd <string>
git branch -M <string>
git stash
chmod <number> <string>
exit
grep <string>
vi <file>
git checkout <string>
cd <string>
ls
cd ..
cd <directory>
rm <string>
tail -f <string>
ls
ls
vim <file>
read -r
nano <string>
cd <string>
sudo localectl set-x11-keymap <string>
npm install -g <string>
exit
brew install <string>
cat <string>
eval <string>
cat <string>
ls
find ~ -name <string>
history
sudo apt-get -y <string>
git add --all
cd <string>
cd <string>
clear
sudo usermod -aG <string> $USER
sudo su - <string>
ls
sudo docker rm <string>
ls
grep -i <string>
exit
cp <string>
sudo nmcli con mod <string> <string>
cat <string>
screen -wipe
exit <number>
find . -empty -type <string> -print -delete
cd
ls
ls
ls
ls
cd <string>
ls
sudo gedit <string>
ls
ls -l
git status
diff <file>
ls
git add <string>
cd <string>
sudo apt update
git pull
ls
ls
curl <string>
bash
cd <directory>
cd
git config --list
vim <file>
git config --global <file>
alias <string>
cd <string>
cd <string>
ls
grep -i -A <string>
chmod -v <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
ls
mkdir <string>
curl -SL <URL> -o <directory>
ls -lrt
mv <string>
cd <string>
head
ls
clear
ls
sudo mv <string>
cd <string>
git pull
ls -alF --color=<string>
cat <string>
git push -f <string> <string>
sudo su
ls
then\
git pull origin master
ls
git add <string>
cd ..
wget --no-check-certificate <URL> -O -
sudo python <file>
git commit -m <string>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
mkdir <string>
vim <file>
cd ..
git status
ls
git status
npm http <number>
bash
sudo sed -i <directory> <file>
read <string>
exit <number>
ls
ls
cd <string>
cd <string>
vim <file>
git pull
ls
ls -la
cd <string>
sh <file>
sed <directory>
grep --color=<string> <string>
clear
npm i -D <string>
tail -f <directory>
fc-cache
rm <string>
cd
nano <string>
apt-get install -y <string>
cd ..
git branch --no-color <string> <directory>
sudo locale-gen <string>
exit
git commit --amend --no-edit --no-verify
cd <directory>
ls
cd <string>
vim
grep -n <string>
git remote add origin <URL>
sudo apt remove <string>
exit
ls
bash
cd
ls
git pull
git status
sudo pacman -Syyu
sudo certbot certonly --standalone --agree-tos --non-interactive --email <string> --domains <string>
sudo python3 <file>
cd <string>
rm -f <string>
sudo userdel bob
cd <string>
sudo apt-get update
cd <string>
touch <string>
find . -type <string> -a <string> -name <file> -o -name <file>
mvn clean <string>
git diff <string>
python3 <file>
pwd
git remote
cd <string>
cd <string>
clear
curl --create-dirs -O --output-dir <directory>
cd ..
exit
vim <file>
rm -rf <string>
node
cd <directory>
ls
git status
vim
ls
cd ..
ls
openssl rand -hex <number>
cd <string>
git push
vi <file>
htop
sudo nano <directory>
wget <URL>
brew install <string>
ls
ls
ls -i
docker stop --help
ls
time <string>
cat <string>
vi <file>
find . -empty -type <string> -print -delete
git commit -m <string>
service apache2 restart
mv <string>
git clone <URL>
more <file>
cd <string>
ls -al
ls -haltr
ls
ls -a
docker commit <string>
ls
exit
find src
ssh -p <string> user@host # connects to host on specified port as user
grep <string>
ls
vim <file>
vim <file>
ls
curl -sL <URL>
cd <directory>
more <file>
git cm -m <string>
docker-compose logs
python3 <file>
tar -xf <string>
vi
rm -f <string>
vi <file>
ssh -R <string>
ls
fg
ls
git st
cd <directory>
mv <string>
less
ls
cd <string>
cd ..
file <string>
exit
less <string>
systemctl start kubelet
git add -A
cd <string>
ping <string>
chmod <number> <string>
ls
cd <string>
yarn add <string>
apt-get -y <string>
exit <number>
cd <string>
ls
cat <string>
ls
git add .
mv <string>
sudo apt update
ls
clear
ls -l
git rebase -i <string>
sed -i <directory>
git add <string>
git config --global <file> <string>
vim <file>
ls
git rev-parse --verify --quiet <directory>
ls
ls
ls++ -a
vi <file>
tail -f <string>
cd <string>
vim <file>
git rm --cached <string>
cut -c <string>
git checkout <string>
ls
sh
ls
ls
cat <string>
ls
cd <string>
chmod <string>
npm install
cd ..
ls
ls
cd <directory>
sudo -i
docker-compose up
ls
ls
mkdir -p <string>
git status
sudo adduser <string>
cat <string>
cd <directory>
ls
wget
wget -q -O <file>
vim <file>
ls
xargs -L1 <string> clone
mkdir <string>
clear
sudo apt install -y <string>
grep -oP <string>
dpkg -i <file>
docker-compose logs --follow <string>
ls
cd
ls
cd <directory>
sudo make
git add <string>
sleep <number>
docker stop <string>
ls
npm i
vim <file>
cd <directory>
sed -e <string> -e <directory> -e <string> \
ssh dirlic@10.18.0.39 -p <number>
vim <file>
git commit -m <string>
vi <file>
ls
git filter-branch --env-filter <string>
cd <string>
git push
cd <directory>
ls
less <string>
git push
sudo reboot
setg RHOSTS <file>
git pull upstream <string>
rm <string>
cd <directory>
cd
apt-get
clear
git commit
vi <file>
cd <string>
ls
cd
tail -n7
sudo rm -rf <string>
cat <string>
rm -f <string>
ls
touch <file>
xargs sed -i <directory>
cd ..
chmod <number> <string>
mkdir <string>
vim <file>
cd <string>
git commit -"frankenstien's <string>
tail <file> -n <number>
cd <string>
cd
rm
sudo mv <file>
touch <string>
pwd
cd ..
ps aux
vi <file>
touch <string>
vi <file>
sudo systemctl stop <file>
ls
fg
chmod <number> <string>
cat <string>
cat <string>
tail -f <directory>
grep -v <string>
uniq
git push origin
ln -sfn <directory>
clear
git add --all
sudo vi <directory>
git add .
python3 <file>
ls
ls
vi <file>
vim <file>
git add .
ls
npm start
npm run test
ls
xargs -n1 <string>
ls -CF <string>
git commit -m <string>
git commit -m <string>
git log
LANG=<string> rpm -qp --queryformat <string>
bash <file>
grep -i <string>
ls
cd <string>
sudo sed -i <directory>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
ls
cp <string>
vim <file>
sudo -s -u <string> -H
ls
curl <string>
sudo docker run -v <directory>
brew install <string>
mv <string>
sudo ln -s <directory>
npm publish
history
rm -rf <string>
ls -alF
clear
npm --version
ls
curl -T <directory> <string>
sudo npm install -g <string>
select(.status.containerStatuses[].name==<string> <string>
clear
sudo groupadd docker
read <string>
git push origin master
cd ..
chmod +x <string>
exit
vi <file>
ls
cd ..
clear
cd <string>
ls
ls
ls
cd <string>
apt-get install -y <string>
cd ..
git status
systemd-resolve --status
clear
git config --global <file> <file>
sudo pacman -Syu <string>
curl -o- <URL>
clear
sudo pacman -S <string>
pkill <string>
man <string>
npx create-react-app spotify-practice --template <string>
npm start
git diff <string>
sudo xbps-remove <string>
git pull origin master
npm i sass -D
ls
find . -name <file> -type <string> -print -delete
sudo vim <directory>
npm install -g <string>
cd <string>
ls
git add <string>
wget <URL>
git commit -m <string>
chmod -x <file>
sudo apt -h
ls
print <string>
ls
ping <file>
export <string>
df -lh
ss
git add <string>
docker volume <string>
ps aux
cd <directory>
su
sudo wget -O <directory>
vi <file>
ls
ls
sudo sed -i <directory> <file>
sleep <number>
git status
clear
ls
vim <file>
git init
vim <file>
ls -a
ls
sed <directory>
npm run watch
cat <string>
git push
ls
code <string>
exit
sudo apt-get install <string>
ls
grep -q <string>
cd <string>
sudo rmdir <string>
cd <directory>
sudo docker ps -a
git clone <URL>
git add <string>
git commit -m <string>
done
source <file>
cd <string>
vim <file>
cd <string>
git filter-branch -f --tag-name-filter <string> --env-filter <string>
cd ..
ls
chmod <number> <string>
git add .
cd <directory>
sudo python <file> --cascade=<file> <number>
cd <string>
history -r <string>
sudo tail -f <directory>
vi
rm <string>
wget <URL>
cd <string>
clear
sed -En -e <directory>
unset color_prompt force_color_prompt
git status
git remote add origin <URL>
set <string>
cd <string>
vi -t <string>
time
find . -name <string> -type <string>
exit
cd <string>
sudo apt install <string>
sudo systemctl enable NetworkManager --now
clear
sudo systemctl start <string>
npm start
apt-get install -y <string>
cd <string>
sudo chmod +x <directory>
cd <string>
ls
export <string>
nohup node <file>
vi <file>
read -n <number> -s -p <string>
cd ..
find <directory> -type <string> -name <string>
cd ..
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
read -rp <string> <string>
cd <directory>
ls
clear
ls
ufw
sudo rpm -i <string>
cat <string>
systemctl daemon-reload
done
git commit -m <string>
source <directory>
npm install -g <string>
mvn install
cd <string>
top
sudo apt-get install <string>
sudo swapon <directory>
git push -u <string> master
mkdir
rm <string>
source <string>
git add .
ls
cp <string>
git checkout <string>
cd <string>
docker-compose up
sudo apt update
node <file>
pwd
fg
rm -r <string>
docker-compose up -d --build
touch <file>
rm -r <string>
exec zsh
git add .
ls
find . -type <string> -name <file> -exec <string> -B5 -A10 <string>
fg
vi <file>
mkdir <string>
vim <file>
cd ..
ls
touch <string>
ls
sudo git init
ls
ls
ls -alX
ls
ls
exit <number>
git commit
vim <file>
cd <directory>
python3 -m <string> install <string>
cd <directory>
git add .
cd <string>
zcat <file>
ls
npm run dev
touch <file>
git commit -m <string>
sudo grubby --update-kernel=<string> --args=<string> <string>
git add .
wget <URL>
sudo su
cd <string>
sudo su
cd <directory>
git commit -m <string>
cd ..
rm -rf <string>
ls
ls -lah
groups <string>
sed -n <string>
sudo pip3 install <string>
cut
cd <directory>
cat <string>
git push
exit
ls
wget -r <URL>
sudo yum update -y
git add .
touch <file>
cd <string>
sudo apt install -y <string>
npm run start
git commit -am <string>
cd
sudo apt-get install <string>
sed -i <string>
shutdown -now
curl <string>
cd
ls
fg
ls
cd <directory>
ls -l
sudo python <file> --cascade=<file> <number>
git commit -m <string>
cd <string>
cat <string>
cat <string>
vim <file>
vi <file>
rm -r <string>
git remote -v
cd <string>
lsblk
sudo nano <directory>
mv <string>
git add .
git remote add origin <URL>
nano <file>
npm run bench -- -c <file> -n <file>
git add .
kill -9 <number>
python3 <file>
npm install -g <string>
cd ..
cd <string>
cd ..
ls
exit
ls
cd ..
git filter-branch --index-filter <string> HEAD
ls
git push --set-upstream <string> main
vim <file>
ls
git pull
ls
clear
sudo docker rm corrade
sudo journalctl -u <string> -e
fg
fg
git push
cd ..
ls
npm install -g <string>
exit <number>
ls
ls
cp <string>
sudo supervisorctl status
ls
git commit -m <string>
cd <string>
git push -u <string> main
ls
sudo yum install <string>
df -h
less <string>
ls -a
clear
ls
git push origin main
git add <string>
clear
cd <string>
vim
ls
docker image ls
sudo systemctl status <string>
ls
exit
cd <string>
clear
cat <string>
chmod <string>
ls
find <directory> -name <string>
git commit -m <string>
git commit -m <string>
cat <string>
bash <file>
vim
git remote add origin <URL>
cat <string>
vim <file>
ls
git status
vim <file>
bash --version
ls
sudo apt-get -y <string>
screen -rd <string>
ls
git add <string>
vim <file>
cd <string>
sed -E -e <directory>
sed <directory>
ls
cd <directory>
docker-compose up -d --build
git push
npm run prod
sudo xbps-install <string>
vim <file>
sudo dnf install -y <string>
ls
ls
cd <string>
npx <string>
git add --dry-run -v <file>
exit
ls
cd <string>
chmod <number> <string>
clear
cat <string>
more <file>
vim <file>
git submodule update
git push -u <string> master
cd <string>
sudo apt-get autoremove -y
npm run build
mkdir -p <string>
git status
ls
cd <string>
ps ax
cd <directory>
rm <string>
tar -zxvf <file>
history
ls
git push -u <string> master
read <string>
git reset <string>
cd <string>
ls
cd <directory>
sudo apt show <string>
ssh <string>
ssh -X <string>
ls
man -k <string>
git checkout <string>
cd ..
sort -nr
cp <string>
vi <file>
cd <string>
sudo rm -rf <string>
vi <file>
sudo python3 <file>
ls
ls
cd <directory>
cd <directory>
ls
vim <file>
clear
clear
git commit -m <string>
cd <string>
git add .
cd <string>
cd <string>
find . -type <string> -name <string>
git branch
tar -xpf <string>
ps aux
git init
git commit -m <string>
vim <file>
sudo pip install <string>
ls -alt
python3 <file>
nano <file>
export <string>
cd <string>
ls -la
cd <directory>
ls
ls -la
python3 <file>
cd <directory>
sudo nano <directory>
git checkout <string>
git commit --amend --no-edit --no-verify
cd <string>
killall -SIGUSR1 <string>
sudo sed -i <directory>
grep <string>
cat <string>
rm <string>
sudo git add <string>
cat <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> --wrap=<string> --from <string> --to <string> <string> -o <file> <string> {} \
sudo chown `id -u` <string>
ls
ls
ls
git status
exit <number>
ls
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
cd <directory>
ls -ltr
sudo su
ls
git add <string>
git init
ls -la
sudo sed -i <directory>
pwd
cp <string>
vim <file>
ls -la
git rev-list --all
vim <file>
ls
wget -r <URL>
npm run test
mkdir <string>
python3 <file>
sort -g
sudo pacman -S <string>
sed -i <directory>
less <string>
source <directory>
curl <string>
git add -A
ls -altr
ps axfu
cd ..
cd <string>
cat <string>
exit
fg
read -rp <string> <string>
gpg --keyserver <string>
git init
rm <string>
sudo apt-get install <string>
cd <string>
sudo usermod -l <string>
clear
tail <file> -n <number>
cd <string>
git add <string>
cd <directory>
cd <string>
ls -a
sudo lighty-enable-mod <string>
ls
sudo systemctl stop <string>
vi <file>
clear
exit <number>
ls
ls -la <directory>
cd <string>
ls -la <directory>
cd ..
sleep <number>
git config --list --show-origin
sudo sed -i <directory>
ls
git filter-branch --force --index-filter <string> --prune-empty --tag-name-filter <string> -- --all
exit
git branch -a
npm install --save-dev <string>
ls
ls
cd <string>
git add <string>
ln -s <string>
python3 <file>
cd <string>
sudo apt install <string>
vim <file>
sudo sed -i <directory> <file>
git clone
cd ..
grep <string>
clear
git init
more <file>
clear
git push origin master
grep --color <string>
cp <string>
sed -i <directory>
git commit -m <string>
cd <string>
ls
cd <string>
npm create <string>
cd <string>
cd <string>
docker login <file> -u <string> --password-stdin <string>
git status
htop
ls -l
rm <directory> -rf
sed <directory>
git checkout <string> --force
env
ls <directory> -r
git status
ps aux
sudo dpkg-reconfigure <string>
git push
chmod -x <file>
exit
dpkg --get-selections <string> <file>
ps aux
ssh-add -L
git add .
vi <file>
ls
vi <file>
exit <number>
sudo su
cd ..
cd <string>
git push -u <string> detail
npm run start
clear
cd ..
tail -n <string>
shutdown -h <string>
exit
chmod <number> <string>
git push
cd <directory>
perl -ne <string>
grep <string>
cd <string>
date
cat <string>
exit <number>
vim <file>
ls
exit
perl <file>
open .
systemctl status <string>
ls
git remote -v
ls
ls
ssh dirlic@10.18.0.39 -p <number>
ls
cd..
ls
grep <string>
ls -las
ls
rm -rf <string>
cd <string>
git status
tail -f <string>
ls
sudo sed -i <directory>
vi <file>
docker-compose up -d --build
git add
cd <directory>
ls
jq <string>
cd ..
cd <directory>
mvn clean
ls -l
vi <file>
npm install netlify-cli -g
sudo vi <directory>
rm -rf <string>
sudo apt install <string>
vi <file>
gsettings set <file> <string>
cd
rm -r <string>
cd ..
wget <URL>
vim <file>
sed <directory>
cp <string>
ls
git co -t -b <string>
sudo snap install heroku --classic
cat grep -v <string>
cp -v <string> <directory>
ls
ls
less <string>
ls
git checkout
vim <file>
find . -empty -type <string> -print -delete
ls
git remote add origin <URL>
ls
sudo apt-get install <string>
git add <string>
egrep -r <string>
sleep <number>
vi <file>
ssh dirlic@10.18.0.39 -p <number>
git add .
git fetch origin <string>
fg
cd <directory>
pico <file>
cd <string>
git commit -a -m <string>
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
fg
find . -type <string> \( -name <string> -o -name <string> -o -name <string> -o -name <string> -o -name <string>
ls
git st
git ls-remote <string>
ls
ls
xargs -L1 <string>
vi <file>
ls
cd ..
pwd
cd
cd
sudo stop uwsgi
ls
cp <string>
apt-get clean
date
systemctl start <string>
dmidecode
curl -s <string>
ls
su
cd <string>
bash <file>
git config --global <file> <file>
ls
cd <string>
ls
sudo apt-get install <string>
ls
ls -1
cat <string>
cat <string>
git pull
clear
sleep <number>
git diff
npm install
cp <string>
nano <file>
git commit -m <string>
cut -d <string> -f <number>
git status
clear
docker rmi <string>
grep -i <string> >files
code .
ls
ls
ls
docker-compose up -d --build
git fetch origin <string>
tmux a
ls
git push -u <string> main
cd ..
rm -f <string>
mkdir <string>
ls
sudo dnf builddep -y <string>
git status
sudo add-apt-repository -y <directory>
fg
git status
vim <file>
git status
sudo pacman -Fyy
find . -name <string> -type <string> -prune -exec <string> -rf <string>
ls
ls
rm <string>
vi -t <string>
vi <file>
find $dir -type <string>
sudo python <file>
exit <number>
ls
vi <file>
systemctl list-units
ip
ls
ps aux
git commit -m <string>
cd ..
lsblk
clear
ls
sudo bash <string>
cd <string>
python3
vim <file>
git push
cd <string>
cut -d':' -f <number>
git fetch origin
rm -f <string>
vi <file>
git fetch
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
cd <directory>
cd ..
cd
cp <string>
wget <URL>
git config --global <file>
clear
ls
ls
sudo
git diff
git commit -m <string>
ls
cd ..
docker build --build-arg <string> -t <directory>
git pull origin master
sudo start uwsgi
sudo sed -i <directory> <file>
mkdir <string>
vim <file>
cd ..
ps ax
python3 <file>
cd <directory>
vim <file>
git checkout -b <string>
git add <string>
wget <URL>
git status
sudo apt-get update
ls
exit
cd <string>
cd <string>
sudo start uwsgi
exit
cd <string>
cd <string>
kill -9 <number>
vim
ls
touch <file>
exit
mkdir <string>
find . -name <file> -type <string> -print -delete
touch <file>
git checkout <string>
cd <string>
cd ..
curl <string>
uniq
grep <string>
vim <file>
su deployer -c <string>
ls
chmod +x <string>
cd <string>
git clone <URL>
sed -e <directory>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
ls
pwd
chown -R <string>
htop
vim <file>
sed <directory>
sed <directory>
sudo apt-key adv --keyserver <string> --recv <string>
ls
ls
cd <string>
curl -# -u <string>
git status
shutdown -h <string>
git init
ls
cd ..
zcat <file>
git config --system --unset <file>
grep -E <string>
sudo xbps-install -Su
sudo snap alias <file>
ls
ls
ls
sudo systemctl restart <string>
git --version
ls
sudo apt-get update
sudo apt install <string>
ls
apt list --upgradable
ls
chmod -x <file>
cd <string>
cd <string>
git add <string>
git add .
cd <directory>
which <string>
cd -
vim <file>
which <string>
rm -rf <string>
vim <file>
source <string>
git push -u <string> master
cd <directory>
vi <file>
clear
cd
git push
git pull
clear
vim <file>
grep -i <string> >files
sudo apt-get upgrade -y
rm -rf <string>
sudo sed -i <directory> <file>
cd ..
docker run -d -p <string>
ls
npm audit fix -f
npm-recursive-install
man -k <string>
wget <URL> -O -
ls
sudo snap install <string>
exec zsh
less <string>
fg
apt update
cd <string>
clear
ls
bash --version
wget -q <string> -O <file>
cd <directory>
cd ..
git commit -m <string>
cd <directory>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git add <string>
sudo apt-get install -y <string>
ls
ls
source <directory>
reboot
cd <string>
exit
cp <string>
clear
git commit -m <string>
rm -rf <string>
read -e -p <string>
git status
ls
npm init -y
cd <string>
ls
docker ps -a --filter <string> --format <string>
fg
git push
ls
git add .
sudo systemctl enable <string>
ls
git push
git pull origin main
grep <string>
python3 -m
git push
git init
mkdir <string>
fg
cd <string>
history -r
ls
git commit -m <string>
clear
git status
cd <string>
git status
sed -i <directory>
grep -wPirn <string>
clear
exit
sort -g
ls
git add --all
git clone <URL>
read -p <string>
sudo apt-get upgrade
rm -r <string>
python3 <file>
pwd
clear
exit <number>
ip
grep -v <string>
wget -O <file>
grep -a -i -E --no-filename <string>
ls
source <directory>
who
cd <directory>
touch <file>
rsync <directory>
cd
ls
ls -a
cd <string>
ls
git remote add origin <URL>
python3 <file>
grep -a <string>
exit <number>
htop
top
cd <string>
ls
sudo apt install lamp-server^ -y
clear
exit <number>
git pull
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a
wget <URL>
cd <string>
clear
git reset HEAD^
ls
sudo rfkill <string>
exit
cd <directory>
grep <string>
clear
cd ..
exit <number>
ls
sort
sudo systemctl daemon-reload
git status
chmod +x <string>
else\
cd <directory>
php <file>
su
ps
vim <file>
cd <string>
less <string>
git status
ls
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
rm -f <string>
ls
ls
done
df -h <string>
git branch
cd <string>
ls
cd <string>
cd
mvn compile
git diff
read -p <string>
vim <file>
cd <string>
sudo pacman -S <string>
mkdir <string>
exit
docker run -it --rm -v <string>
su - <string>
rm -rf <string>
vim
read -s -n <number>
dpkg
sudo pip install <string>
ls
git checkout <string>
cd ..
ls
rm -r <string>
git add .
exit <number>
git commit -m <string>
sudo apt-get update
clear
egrep -v <string>
cd <string>
cd ..
ls
rm <string>
ls
chown -R <string>
ls
sleep <number>
git merge <string>
cd ..
docker images
rm -rf <string>
exit <number>
ls
ls -a
ls
chmod <number> <string>
python3 <file>
rm -R <string>
mv <string>
vim <file>
cd <directory>
git config --global <file> <string>
mkdir <string>
cd ..
clear
apt update
vim <file>
cat <string>
ls
ls
curl -s <string>
ls
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
cp <string>
git commit --allow-empty -m <string>
ssh <string>
ls
mkdir <string>
cp -r <directory>
git pull origin development
read -r -p <string>
rm -f <string>
ls
ls
git status
ls
git status
mkdir <string>
tar -xf <string>
ls
ls
ls
ls
git reset --hard
git add .
python3 <file>
sudo apt install <string>
curl -s -D- -onul <URL>
cd <string>
git push
git pull
cat <string>
ls
code <string>
ssh <string>
chmod <number> <string>
else\
exit
exit
ls
git clone <URL>
ps aux
git status
scp <string>
git commit
cd ..
exit
dd
git pull
cd <directory>
sudo raspi-config
mkdir <string>
ls -ltr
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
history
ls
sudo systemctl status <string>
rm -rf <string>
docker-compose logs
ssh <string>
cd <string>
ls
vi <file>
sleep <number>
npm install
npm install <string>
sudo su
cd <string>
git add <string>
sudo apt-get install <string>
git push -u <string> master
ls
ps
cd ..
ls
vim <file>
vim <file>
cd <string>
setg RHOSTS.*
cd
<directory> <file> -- <string>
clear
git add <string>
npm ERR! <string>
<directory> -m <file>
cd ..
then\
vim <file>
sudo nala install <string>
sudo systemctl status <string>
docker build -t <string>
vim <file>
cd ..
npm install
git checkout -- <string>
cat <string>
source <directory>
sudo apt upgrade
vi <file>
grep <string>
sudo pip install <string>
exit
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
clear
xrandr --list
free
ls
git add .
cat <string>
apt-get install libxslt-dev -y
ls -l
sudo add-apt-repository <directory>
grep <string>
git push -u <string> master
ls
npm install <string>
cd <string>
ls -l
sudo apt upgrade --fix-broken -o <string>
ls
ls
sudo service nginx restart
vim <file>
sudo <file> -L <string>
unset <string>
sudo nginx -t
git status
git push -u <string> main
npm start
docker-compose down -rmi <string>
scp <string>
cd ..
docker ps
dpkg-query -W -f=<string>
exit
tail -f <string>
sudo apt-get install <string>
unset color_prompt force_color_prompt
ls
python3.11 <file>
tmux new-window -t <string> -n <string>
sudo apt-get update
ls
cd <string>
clear
cd ..
vim <file>
nano <file>
sleep <string>
git commit -a
printf <string>
cd <string>
vi <file>
sudo su
git remote -v
mkdir <string>
git commit -m <string>
sed -i <directory>
git add .
ls
git remote add origin <URL>
wc -l
ls
vim <file>
git init
vim <file>
clear
docker-compose up -d --build
sudo npm install --v <string>
ls <directory> -l
clear
git init
sudo apt install code -y
head -n1\
vim <file>
sudo service nginx reload
git push
ps -ef
cat <string>
vi <file>
git pull
git status
mount -B <directory>
sudo mkarchiso -v -w <string> -o <string> slim-iso -r
cd ..
ls -lr
sudo apt-get install <string>
df -hT
ls
ls
vi <file>
clear
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ls
a ! href <string>
cd ..
docker ps -a
dpkg -l
cd <string>
git branch -M <string>
sudo xcode-select --install
ls
git config -l
else\
ls
git format-patch -n --stdout <string>
exit
cd <directory>
ls
vim <file>
cd <string>
ls
man <string>
column -s <string> -t <string>
cp -r <directory>
sudo chmod -R <number> <string>
sudo systemctl status <string>
cd <directory>
git config --global --add <file>
git clone <URL>
cd ..
xargs perl -pi -e <directory>
git remote add origin <URL>
grep -i <string> >files
git clone <URL>
exit
mv <string>
ls
git rm --cached <string> -rf
ip a l
cd ..
ls
bash <(curl -L <directory>
exit
git clone <URL>
cd ..
cd <directory>
git --version
tar zxf <file>
fg
sudo pacman -R <string>
cat <string>
cd <string>
vi <file>
rm -r <string>
ls
cd <string>
vi <file>
git status
git add <string>
git commit -m <string>
cd -
sudo su
git tag <string>
vi <file>
pwd
cd ..
eval <string>
sudo sed -i <directory> <file>
npm audit fix
ls -l
vim <file>
ls
vim
apt-get install -y <string>
git add .
vi <file>
pwd
git remote add origin <URL>
git merge -s <string>
python3 <file>
docker push <directory>
cat <string>
ls
LANG=<string> rpm -qp --queryformat <string>
mv <string>
git config --global --add <file>
exit <number>
rm -r <string>
rm -f <string>
vim
cd <directory>
xrandr
apt-get install -y <string>
git fetch origin\
grep <string>
ls
sudo ufw <string>
git add <string>
git pull
git status
git commit -a
cd <string>
git commit -m <string>
ls
git commit -m <string>
vim <file>
ssh dirlic@10.18.0.39 -p <number>
sudo npm install -g <string>
python3 <file>
cd <directory>
sudo pacman -Syyu <string>
ls
rm -f <string>
source <directory>
python3 <file> --snapshot
cd <string>
vim <file>
sudo cp -r <string>
git stash pop
cat <string>
vi <file>
grep <string>
exit
git pull
ls
ls
init
git commit -m <string>
git commit -m <string>
which <string>
cd <string>
docker-compose
ls
sudo mount <directory>
clear
cd <string>
cd <string>
vim <file>
ls
rm <string>
ls
exit
git add --all
systemctl status <string>
vim <file>
clear
cd ..
ls
ls
cd ..
done
git push origin main
git --help
vim <file>
nano <string>
ls
sleep <number>
sudo groupadd docker
cat <string>
find . -name <file> -type <string> -exec <string> -rf <string>
cd
exit <number>
git push origin <string>
find ~ -name <string>
cd ..
cut -d':' -f3 <file>
clear
ls
exit
sudo apt-cache search <string>
chmod +x <string>
sudo sed -i <directory> <file>
mv <string>
vi <file>
grep <string>
git config --global <file>
rm <string>
cd ..
cd <string>
time
else\
wc
git push -u
cd <string>
cd ..
ls
sudo chmod <number> -R <directory>
grep <string>
cd
ls
ls
sed -E -e <directory>
cd <directory>
find . -type <string>
npm run start
nano <string>
<file> <file>
git add .
rm -rf <string>
sudo add-apt-repository <directory>
cd ..
sudo sed -i <directory>
cd ..
ls
cd <directory>
curl -k -s <URL>
cd ..
curl -L <URL>
sudo -H <string>
cd <string>
cat <string>
chown <string>
git commit -m <string>
git commit -m <string>
tail -5
ls -l
vim <file>
cd
sudo chmod a+rwx <directory>
git push origin
vim <file>
cd <string>
sed <directory>
cp <string>
ls -l
ls
unset color_prompt force_color_prompt
sudo lvextend -l <string>
cd ..
apt-get update
vi <file>
chmod +x <string>
cp <string>
clear
ls
wget -r <URL>
mkdir <string>
git push -u <string> master
cd <string>
clear
ls
git clone <URL>
cd <directory>
top
ls
git br -d <string>
git status
npm install
find . -name <file>
sudo usermod -a -G <string>
curl <string>
sudo gpasswd -a <string>
cd <directory>
git add .
ls
ls
cd <string>
cd ..
cd <string>
rm -rf <string>
vi <file>
read <string>
sed -i <string>
ls
git rm <directory> -f
tmux new -s <string>
ls
chmod +x <string>
ls -lrt
ls
exit <number>
git status
clear
ls
git format-patch -n --stdout <string>
history -c
fg
journalctl
vim <file>
grep -E <string>
scp <string>
git pull --force
print <string>
git commit -v -a -m <string>
ls
ping <string>
clear
git pull
tar -xzvf <file> -C <directory>
exit
ls
ls
sed <directory>
sudo apt-get install -y <string>
which <string>
cd <string>
git clone --depth <number> <URL>
ls
mvn install
git pull
sudo apt-get update
npm http GET <URL>
ls -arlt
git merge --continue
npm run test
ls
ls
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
cd <string>
git commit -m <string>
rm -rf <string>
git pull
cd <string>
sudo apt purge <string>
docker exec -t -u <string>
cat <string>
mkdir <string>
exit
cd <string>
git add .
ls
ls
ls
clear
clear
cd ..
sudo pacman -S <string>
pwd
kill -9 <number>
cd <string>
git fetch
clear
cd <string>
ls
vim <file>
git add <string>
cd ..
ls
ls
git commit -m <string>
ls
sudo lpoptions -d <string> -l
git add .
kubectl --namespace <string>
htop
clear
source <string>
clear
cd <string>
vi <file>
git commit -m <string>
cd <directory>
systemctl enable <string>
rm -rf <string>
sed -i <directory>
cd <directory>
ls
cd <string>
git add <string>
git remote add origin <URL>
exit
sudo wget -O - <string>
npm install
ls
cd <string>
ls -l
git clone <URL>
sed <directory>
ls
sudo supervisorctl status
sort -u <string>
cd <string>
cd ..
exit
sudo pip3 install <string>
ls
clear
git clone <URL>
cd <string>
clear
ls
vim <file>
bash <file>
git add .
history
grep --invert-match <string>
git branch -M <string>
vi <file>
rm <string>
grep <string> -A4 <string>
ls
exit
vim <file>
read -p <string>
cd ..
sudo rm -r <string>
sudo tar -xvzf <file>
exit
git push -u <string> master
cd <string>
sudo apt-get update
sh -c <string>
cd ..
sudo dnf search <string>
fg
ls
git config --global <file> <string>
date -h
ls
sudo git branch <string>
ls -lA <directory>
top
sudo add-apt-repository -y <directory>
ls
sed -n <string>
cd
clear
ls -la
ls
date
cd <string>
ls
cd <string>
cat <string>
<file> <file>
git init --bare
sudo reboot
ls
sudo kill -9 <number>
sudo apt-add-repository <directory>
exit
ls
nano <file>
git add .
mkdir -p <string>
ls
clear
ls
sudo pacman -S <string>
sudo reboot
clear
ls
ls
touch --help
df -h
git commit -m <string>
ls -la
git add -A
sudo light -Q <number>
git branch -D <string>
ls
ls -lisa
git status
cd <directory>
ls -ltr
cd
cd ..
git clone <URL>
ls
fg
cd ..
touch <string>
exit
grep -v <string>
cd <string>
cp -r <directory>
git status
sudo apt-get update
cd <directory>
exit <number>
cd <string>
wget <URL>
ls
git diff master --name-only
ls
apt-get install <string>
npm run test
sleep <number>
mkdir <string>
mv <string>
rm <string>
wc -m <file>
tmux
cat <string>
sudo systemctl daemon-reload
sudo sed -i <directory> <file>
vi <file>
sudo
mv <string>
ls
ls
ssh-add
cat <string>
ls
git push
sudo apt update
rm -rf <string>
yarn add <string>
git commit -m <string>
ls
ls
mkdir <string>
cd <directory>
git commit -m <string>
git clone <URL>
nc <number> <number>
cd ..
git remote add origin
sudo cp <string>
git clone <URL>
npm i <string>
ls
ls
sudo ifup <string>
ls
ls
mkdir <string>
ls
clear
vim <file>
cd <directory>
sudo npm list -g
git status
git clone <URL>
ping <file>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
ls
vim <file>
cd <string>
more <file>
ls
docker inspect --format=<string> <string>
which <string>
exit
sudo python <file>
npm start
cd <string>
clear
curl -v -H <string> <URL>
sudo nano <directory>
git push
git add .
clear
cpio -p -d -v <string>
vim <file>
grep -i <string>
vi <file>
ping <string>
cd <string>
sudo -s
cd <string>
cd <string>
cd
git reset --hard <string>
clear
ls
cd ..
read -p <string>
git commit -m <string>
git add -A
vi <file>
nano <string>
python3 <file>
sudo apt upgrade -y
ls
sudo yum <string>
cd <directory>
cd ..
wget <URL>
man <string>
exit
ls
clear
ls
ls -la
cd <string>
ls
shutdown
cd <directory>
git commit -m <string>
cp <string>
tmux source <file>
npm start
python3 <file>
cd ..
set -e
exit
git cat-file -p <string>
cp <string>
git commit -m <string>
git pull
ls
vi <file>
grep <string>
git commit -m <string>
sudo nano <file>
chmod +x <string>
top
ls
cd ..
sudo nginx -t
git status
vi <file>
tar -xpJf <file> -C <directory>
ls
cat <string>
then
python3 <file>
ls
cd <directory>
ls
ls data* -l
git push origin master
git push origin main
unset <string>
ls -l
git add -p
cd <directory>
python3 <file>
pwd
su root
sudo dnf update
cd ..
git push -u <string> master
clear
nano <string>
rm -f <string>
docker exec -it <string> bash
git pull origin main
git clone <URL>
vi <file>
chmod --help
nano <file>
npm i <string>
rm -r <string>
cd <string>
ls
sudo yum install <string>
vim <file>
sudo systemctl status <string>
cd <directory>
git log
rm -rf <string>
cd <string>
sudo docker build -t <string>
rm <string>
sleep <number>
git init
cd <directory>
clear
ls
curl -sL <URL> -o <directory>
source <string>
cat <string>
cd <directory>
ls
git status
ssh dirlic@10.18.0.39 -p <number>
cd <string>
git commit -m <string>
exit <number>
ls
ls -al
ls
cd <string>
exit <number>
sudo apt install <string>
tail <file> <number>
npm run coverage
vim <file>
clear
mkdir <string>
script/build.sh
sudo python <file>
cd <string>
ls
date
sudo sed -i <directory> <file>
docker rm <string>
python3 <file>
git init
git pull
cd <string>
code .
exit
vim
nano
ssh <string>
unset -f <string>
git push origin master
sudo sed -i <directory> <file>
sudo apt-get install <string>
npm install <string>
clear
read -r -p <string>
git merge --countinue
ip -6 <string>
cd -
sort -g
rm <string>
mvn compile
cd <string>
cd <string>
git commit -a -m <string>
cd <string>
clear
git status
git flow <string>
rm -rf <string>
git add <string>
exit
cp <string>
vim <file>
python3 <file>
git checkout <string>
ps ax
cd <string>
cd <string>
npm start
ps -p <string>
ls
ls
ls
ls
vi <file>
cd <string>
git commit -m <string>
grep -a -i -E --no-filename <string> */*.log*
git add <string>
ls
git status
git fetch origin <string>
ls
vi <file>
ls
systemctl status <string>
nano <string>
git clone <URL>
exit <number>
tail -f <directory>
ls
git status
git commit -m <string>
git clone <URL>
clear
ls
export <string>
sudo pacman -S <string> --asdeps
cd <string>
git submodule add <URL> -f
exit <number>
ls
rm -rf <string>
cd <string>
exit <number>
sudo docker kill corrade
cd <string>
ls
cd <string>
cut -c <string>
git clone <URL>
sudo sed -i <directory> <file>
ls
source <file>
docker
ls
cd ..
vi
cd ..
ls
ls
dpkg-reconfigure <string>
ls
cd <directory>
cd <directory>
git commit -m"update"
grep -v <string>
find -name <string>
uname
scp <string>
which <string>
ssh-add <directory>
sudo curl -L <URL> -o <directory>
rm -rf <string>
git push
git fetch origin <string>
ls
vim <file>
exit
ls
rm <string>
ls -l
vim <file>
sudo add-apt-repository <string>
chmod u+x <string>
touch <string>
sudo service nginx restart
docker run -it --rm --net <string> --name <string> --env <string> --env <string>
find . -empty -type <string> -print -delete
rm -r <string>
ls
vi <file>
exit
git pull
git push
cd ..
npm -v
ls
ls
sudo nmcli con <string>
grep -iE <string>
source <directory>
ls
git remote -v
mkdir <string>
git add <string>
cd <string>
exit <number>
select(.status.containerStatuses[].name==<string> <string>
cd ..
ssh esther@10.18.0.41 -p <number>
ls
df
curl -fsSL <URL>
ls
npm install
read <string>
sudo apt-get install <string>
git log
cd <directory>
vi <file>
sudo apt-get -y <string>
mkdir -p <string>
find <directory> -type <string>
ping <string>
find . -name <file>
ls
cd <string>
cd
ls
cd <string>
git clone <URL>
ls
npm -i -g <string>
ls
git branch -D <string>
cd ..
ls
sudo start uwsgi
grep <string>
git add <string>
rm -rf <string>
git show -b --format=<string> <string>
wget -qO- <URL>
ls -lh
cd ..
script/build.sh
cd <directory>
cd <string>
ln -sf <directory>
ls
open .
ls
nano <file>
sudo dnf install -y <string>
git commit -m <string>
sort
mv <string>
cd <directory>
git commit
ssh <string>
ip a
vi <file>
git commit -m <string>
docker network <string>
sudo sed -i <directory> <file>
sudo pacman -S <string>
clear
which -a <string>
vim <file>
clear
sed -E -e <directory>
done
sudo nvidia-xconfig -a --cool-bits=<number> --cool-bits=<number> --cool-bits=<number>
npm install <string>
mv <string>
grep <string>
cd <string>
sudo apt -y <string>
cd ..
rm <string>
cd <string>
cd <string>
exit <number>
sudo nano <string>
script/build.sh
clear
grep -i <string>
read -rp <string> <string>
sudo apt install <string>
git pull origin master
exit
sudo add-apt-repository <string> [arch=<string> <URL>
vim
clear
vim <file>
top
ls
nano <file>
shuf --h
sudo sh <file>
ls -ltr
clear
shutdown
cd
touch <string>
then unset <string>
cd
ls
mv -f <string>
vi <file>
sudo python <file>
cat -n <file>
mv <string>
sudo rm -rf <string>
ls -l
git commit -m <string>
mkdir <string>
vim <file>
ls -al
git push
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
ls
ls -a
sudo python <file>
chmod +x <string>
git commit --amend --no-edit --no-verify
ls
cd <string>
python3 -m <string> install <string>
ls
clear
ls
git push
docker ps -a
sudo make install
cd <string>
ls
sudo nala install <string>
vim <file>
git clone <URL>
git status
ls
vim <file>
sort
cd ..
cd <string>
source <string>
npm install
vim <file>
sudo nano <string>
ls -alrt <string>
ls
sudo yum -y <string> nodejs
git pull origin development
git remote add origin <URL>
ls
read -s -n <number>
sudo service nginx restart
ls
rm -f <string>
cd <string>
git checkout <string>
cd <directory>
kscript --clear-cache
cd <string>
git remote add origin <URL>
sudo docker images
exit
sudo apt-get install <string>
ssh <string>
grep -P <string> -win <string>
sort
sudo apt install <string>
npm install
ls -R <string>
vim <file>
code <string>
git branch
cd <string>
mkdir <string>
cd <string>
clear
rm <string>
cd ..
git add .
ls
ls
rm <string>
sed -i <string>
ps -f -q <string>
sudo nano <string>
cd
find . -name <file>
ls
cp -r <directory>
vi <file>
grep <string>
ls
npx create-react-app my-app --template <directory> --use-npm -f
cat <string>
sudo add-apt-repository <directory>
htop
git add .
cd <string>
cd <string>
sed -E -e <directory>
ls
git remote add origin <URL>
sudo touch <directory>
sudo cp <string>
dpkg -L <string>
ls -la
git push origin
cd <directory>
ls
cd ..
ls
more
exit
chmod u+x <string>
apt-get install <string>
exit
vi <file>
ls
ls
which <string>
cd
ls
cd <string>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
npm install -g <string>
clear
ls
cd <string>
find . -size <string> -exec <string> -f <string>
exit
clear
git co PTS-578_redirects_not_updating_automatically
fg
git pull
docker-compose down -rmi <string>
git push -u <string> master
sudo rpm -qlp <file>
cd <string>
rm <string>
vim <file>
ls -lh
git commit -m <string>
cd <string>
wc -l
rm -f <string>
git status
apt-get install <string>
touch <file>
cd <string>
ls
git add <string>
ls
cd <directory>
export <string>
sudo python <file> -cascade==<file> <number>
pwd
kubectl get <string>
ls
cd <directory>
ls
npm install
uniq -c
ls
ps aux
grep <string>
ps auxww <string>
clear
sudo sh <file>
rvm install <string>
npm config set prefix <string>
fg
rm -rf <string>
open .
cat <string>
rmdir <string>
find . -empty -type <string> -print -delete
sudo apt-get update
rm <string>
df -h
wget <URL>
less <string>
vi <file>
find . -name <file> -exec <string>
pwd
cd
sudo apt update
clear
ls
sleep <number>
cd <string>
npm i -g <string>
brew tap <directory>
ls
sudo su -
git pull
vim <file>
ls
source <directory>
sudo su -
ls
git init
git branch -M <string>
ls
sudo systemctl restart nginx
vim <file>
sudo sed -i <directory> <file>
ls
docker compose <string>
cd <directory>
stat <file>
git commit -m <string>
exit
touch <file>
vi <file>
ls
sleep <string>
nano <file>
vi <file>
git cm -m <string>
rsync -arv --exclude=<string> <string>
git push
cat <string>
useradd -m -G <string> -s <directory>
sudo start uwsgi
awk -F/ <string> -1
export <string>
ls -a
cd <directory>
exit <number>
cat <string>
clear
rm <string>
cd ..
sudo chmod <number> <directory>
cd ..
git push --set-upstream <string> master --force
touch <string>
cd <directory>
cd <string>
ls
ls
grep <string>
history
ls
git ls-files -co --exclude-standard
cd <string>
ls -lh
git status
sudo git clone <URL>
zgrep -i <string>
sudo -i
exit
mkdir -p <string>
git log
git config
ls
git push
npm run coverage
exit <number>
cd ..
tr
git add <string>
sudo su
rm -r <string>
bash
cd <directory>
uname -r
exit
ls
date
vi <file>
git status
umount <directory>
docker rm <string>
ls
ls
vi <file>
rm <string>
find . -size <string>
cd ..
git pull
grep <string>
rm -r <string>
clear
dpkg --remove-architecture <string>
cd <directory>
nano <file>
ls
printf <string>
cd ..
clear
git status --porcelain
clear
open <string>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
ls
ls
su
df -h
vim <file>
ls
sudo usermod -aG <string> $USER
ls -la
cd -a
ip route <string>
mkdir <string>
npm i <string>
ls
ls
ls
sudo apt -y <string> <string>
git reset --hard <string>
exit
ls
systemctl status <string>
sudo nano <string>
ls
rm <string>
sudo python <file>
cd ..
clear
apt install <string>
vi <file>
sudo -i
sudo npm install -g <string>
ls
sudo nano <file>
npm install
find . -name <string> -type <string> -print -delete
npm install semistandard -g
cd <directory>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
ftp <string>
exit
git commit -am <string>
git status
cat <string>
sudo pacman -S --noconfirm <string>
ls
ls
sleep <number>
cp <string>
git merge <string>
fg
cd ..
sudo apt update
git init
git add
ls
sort -nr
cd <directory>
ls
git push -u <string> main
groups <string>
ls
code
git push -u <string> main
git pull
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
cd <string>
ls
git rm -r <string>
cd ..
vim <file>
tee <file>
jq <string>
tail -f <directory>
git init
ls
git push
git push --set-upstream <string> <string>
tail -f <directory>
ls
cd <directory>
sudo vim <directory>
git add -A
git push origin master
clear
unset color_prompt force_color_prompt
ls
sudo chmod a+rx <directory>
git push
ls
vi <file>
git verify-pack -v <file>
cd <string>
git branch -M <string>
clear
cd
python <file> runserver 0.0.0.0:2016
history -r <string>
w
npm run coverage
less <string>
git push origin main
source <file>
python3
git pull
ls
grep -i <string> >files
clear
gpg --gen-key
sudo apt install <string>
brew install <string>
cd <directory>
git restore
man <string>
read -s -n <number>
ls
sudo ls <directory> -a
exit <number>
ls
rm -rf <string>
fg
tar -zxvf <file>
apt-get update
cp <string>
sudo localectl <string>
cd <string>
git commit -m <string>
grep -i <string>
sudo systemctl status <string>
exit <number>
cd <string>
cd <string>
ps -eal
cd <string>
clear
source <string>
cd <directory>
xargs -L1 <string>
ls
sudo wget -O <directory>
ls
git commit -m <string>
exit
cd ..
tar -xf <string>
git status
clear
git commit -m <string>
wget <URL>
exit
exit
cd ..
npm i
vim <file>
script/build.sh
rm -rf <string>
git push
git commit -m <string>
cd ..
vi <file>
export -n <string>
python3 <file>
vim <file>
ls -l
cd ..
cat <string>
ls
git config --global <file> <string>
sed <directory>
ls
cat <string>
git push
git pull
ls
sudo dnf config-manager --remove-repo <URL>
npm i
rm -r <string>
git commit -m <string>
mkdir -p <string>
vim <file>
wget <URL>
less <string>
ls
wget -r -A <URL>
unzip -o -d <string>
docker ps
touch <file>
sudo su
grep <string>
git push
curl
ls
ls
git status
sudo tar -zxvf <file>
kubectl apply --filename <file>
ls -la
ssh <string>
sudo docker kill corrade
git add <string>
ls -la
sudo systemctl restart <string>
mv <string>
exit <number>
php <file>
mkdir <string>
npm run bench -- -c <file> -n <file>
cd <string>
ls -al
rm -rf <string>
sudo apt-get update
exit
git add .
fg
cd ..
read <string>
ls -la
sudo ls -a <directory>
grep -Ri <string>
exit
rm <string>
cd <string>
ls
ls
sudo vim <directory>
ls
rm -rf <string>
setg RHOSTS <file>
grep <string>
cd <directory>
cd <directory>
git clone <URL>
ls
wget -O <file>
sudo cp <string>
ls
clear
cd <string>
pwd
vi <file>
ls
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
sleep <number>
ls
sleep <number>
cd <string>
git add .
ls
sudo systemctl start <string>
fg
npm i <string>
fg
git status
git add <string>
ps -auxwf
git status
grep -Ev <string>
ls -la
clear
clear
npm i
ls
top
cd ..
sudo apt-get update
docker commit <string>
git commit -am <string>
systemctl --version
ls
cd
git status
ls
iptables
git push -d <string>
ls
docker compose up
cd ..
ls
mv <string>
env
cd ..
ssh
exit
ls
fg
curl <string>
vim <file>
grep <string>
ls -la
vim <file>
python <file> runserver 0.0.0.0:2016
wget <URL>
git clone <URL>
sudo apt-get update
dir
source <file>
vim <file>
git status
git checkout
clear
sudo chmod +x <string>
sudo apt-add-repository <directory>
ls
git pull
cd <directory>
ls
code <string>
sed -i <directory>
rm -vi <string>
tail -f <directory>
ls -la
unset color_prompt force_color_prompt
ls
fg
sort
git commit -m'Starting <string>
ls -la
kubectl get <string>
cd <directory>
python3 <file>
vi <file>
git push -u <string> main
unset <string>
git commit -m <string>
git remote add origin <URL>
sudo pacman-mirrors -f0
ls
sudo less <directory>
ls
curl -s <string>
rm <string>
ls
exit
git reset --soft <string>
ls # <string>
ps -ef
vi <file>
vim <file>
vi <file>
sudo rm -rf <directory> <directory>
less <string>
sudo apt install <string>
cp -a <string>
done
ls
ls
cat <string>
clear
sudo sed -i <directory> <file>
git branch -M <string>
git status
chmod <string>
exit
curl <string>
brew cask install <string>
kubectl version --client <string>
ls -la
git push -u <string> master
npm run register
vi <file>
curl <string>
git add .
ls
cd <directory>
cd <string>
npm run start
cd <string>
npm-recursive-install
ls
ls -la
git log
clear
done
ls
sudo cp <string>
git status
ls
rm -r <string>
clear
vi <file>
xargs -L1 -I'{}' <string> -rE <string>
ls
ls projects
vim <file>
vim <file>
less <string>
then\
git pull
cd ..
pico <file>
cd ..
ls
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
ls
mount -t <string> -o <string>
git config --list
git fetch
sudo su
ls
git status
cd <string>
git update-index --no-assume-unchanged <string>
sudo umount <directory>
ls
sh <file>
ls
fg
sudo sgdisk --new=<string> --typecode=<string> --change-name=<string> <directory>
git commit -m <string>
cd <string>
vi <file>
ls
ls
git push
sudo su
exit <number>
wget --header=<directory> --user-agent=<string> <string>
ls
mkdir -v <string>
sudo apt update
cd <string>
cd <string>
git show --format=<string>
done
sed -i <string>
ls
wget <URL>
cd <directory>
git push origin <string>
ls
git pull
mkdir <string>
exit
dpkg --get-selections <string> <file>
dir
ls
vim <file>
clear
cd <string>
grep -E <string>
cat <string>
cd <directory>
cd ..
ls
cd <string>
git commit -m <string>
cd
fg
grep -iC2 --color=<string> <string>
cd <directory>
pwd
ls
ls
tmux a
source <string>
cat <string>
cp -r -T <directory>
ls
man <string>
npm build --prod
exit <number>
find . -empty -type <string> -print -delete
fg
clear
ls
docker-compose logs
git clone <URL>
diff <file>
sudo reboot
sed -n <string>
exit
ls
sudo apt-get install <string>
done
ls
sudo apt-key add -
git status
sudo apt install <string>
vim <file>
ls
sudo apt-get purge --auto-remove <string>
git help <string>
git pull
cd <directory>
mkdir <string>
ls
cd <string>
cd <directory>
sudo zypper <string>
ssh <string>
chmod +x <string>
cd <string>
fg
ls -l
mkdir -p -v <string>
xargs -I <string> docker rm -f <string>
cd <string>
tr <string> <string>
less <string>
wc -l <string>
cd ..
git commit
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls++ -a
cd <string>
sudo apt update
find -name <string>
tail -f <directory>
head -c <string>
ls
git pull origin master
cd <string>
ls -l
pacman-key --populate <string>
ls -lh
ls -la <directory>
vim <file>
git co master
sudo apt remove <string>
which <string>
cd <string>
cd ..
git add .
chmod <string>
jq <string>
exit
sudo vim <directory>
cd <directory>
vi <file>
ls
git status
git status
ls
cd <directory>
ss
wget <URL>
ls -la
ls
docker rmi -rf <string>
reboot
printf <string>
head -n1
cd <directory>
chmod +x <string>
python3 <file>
ls
ls
cat <string>
exit <number>
unset color_prompt force_color_prompt
ls
cat <string>
sudo zypper ve -r <string>
vim <file>
ls
python3 <file>
git init
cd <string>
git commit -m <string>
ls
cd <string>
exit
git add .
grep -i <string> >files
mkdir <string>
git remote -v
history
ls
ls
ls
sudo docker rm <string>
git pull
npm run make
awk <string>
ls
scp <string>
rm -rf <string>
git init
cd <string>
ln -s <string>
tail -n <string>
sudo apt-get install <string>
nano <file>
cd <string>
ls
mv <string>
git commit -m <string>
git remote add origin <URL>
ls
fg
vim
cat <string>
column -t
wget -r -A <URL>
cd ..
cd <directory>
cd <string>
cd <string>
cd <string>
ls
ls
git add <string>
cut -c <string>
git commit -m <string>
cd <string>
sudo apt-get upgrade
vi <file>
ls
clear
exit
git push
ls
grep -v <string>
cd <directory>
ls
cd <string>
fg
vim <file>
ls
mkdir <string>
service <string>
rm <string>
alias
git commit -m <string>
chown <string>
git status
cd <string>
setg RHOSTS.*
cd
git commit -m <string>
vim <file>
diff <file>
pacman -Syy
cd <directory>
find . -type <string> -name <string>
git push
mkdir -p <string>
python3 <file>
ls
cd <directory>
systemctl daemon-reload
cd <string>
cd <string>
sudo chmod <number> <string>
cd ..
systemctl --user <string> <file>
python3 <file>
sudo apt install <string>
cd <directory>
git clone --depth <number> <URL>
cd <string>
ls -la
cat <string>
ls
less
ls
cp <string>
ls
ls
useradd <string>
sudo sed -i <directory> <file>
clear
jq <string>
cd <string>
git pull -s <string> -X <string>
find <directory> -type <string> -execdir <string>
rm -f -- <string>
vi <file>
ls
cat <string>
yay -S <string>
cd <directory>
ls
su - <string>
sudo vim <directory>
git diff <string>
ssh -i <string> remote_user@remote_host
vi <file>
ls
nano <file>
ls
vim <file>
vi <file>
cd <directory>
tail -f <directory>
scp <string>
exit <number>
reboot
ls
grep <string>
cd <string>
code .
history
npm run coverage
history # <string>
sudo sed -i <directory>
exit
wget <URL>
awk <string>
cd
cd ..
ls
rm -rf <string>
git status
find . -name <file>
sudo docker kill corrade
npm i <string>
cd <directory>
ls
git --virsion
rm <string>
tr <string>
ls
cd ..
vim <file>
npm install react-native-actionsheet --force
ls -l
git add <string>
ls
nano <file>
apt-get install <string>
then\
ls -la
ls
apt-get install --reinstall <string>
ls
vim <file>
<directory> <string>
ls
telnet <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
ls
exit
grep <string>
sudo sed -i <directory>
kill -9 <number>
git branch
reset
vi <file>
cd <directory>
npm run test
git clone <URL>
exit
git diff
grep -v <string>
ls
cd <string>
systemctl restart <file>
cd <string>
mkdir -p <string>
sudo cp <string>
<directory> <string>
cat <string>
docker run -d <string>
sed <directory>
git clone <URL>
find . -type <string> -exec <string> <directory> {} +
npm audit fix -f
xargs -L1 <string> clone
git status
sudo chkconfig <string>
rm <string>
du -sh
cd <string>
cd <string>
head -1 <file>
nano <string>
git add -A
mkdir -p <string>
git push
sudo curl -L <directory> -o <directory>
sudo apt install <string>
find -Es <string> -type <string> -regex <file>
git init
sudo kill <number>
scp <string>
cat <string>
cp -r <directory>
ls -al
find . -type <string> -exec <string> <number> -- <string>
grep <string>
sudo nano <file>
git
exit
ls
vim <file>
npm audit fix -f
ls -lrt
nano <file>
git status
vim <file>
sh <file>
cd
cp <string>
ls
ls
sudo rm -rf <string>
sudo rm -rd <directory>
date
git reset <string>
cd
git status
vi <file>
cd <string>
apt update -y
head -n1
cd <directory>
cd <string>
ls
clear
git branch -d <string>
ls
local <string>
ls -a
git push -u <string> master
git status
cd <string>
ls -l
apt install -y <string>
cd ..
git status
exit
git pull origin master
cat <string>
ls
history
sed <directory>
cd <string>
mkdir <string>
ls -al
sudo tar xvzf <file> -C <directory>
python3 <file>
git add <string>
git status
vi <file>
mvn
git checkout <string>
ls
cd <directory>
ls
sudo groupmod -n <string>
ls
docker run -d <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
mkdir <string>
cd <string>
git fetch origin
git remote add origin <URL>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
vi <file>
vim <file>
type <string>
rm -r <string>
cd -
cd <string>
git add .
cd <directory>
rm -rf <string>
mv <string>
rm <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cat <string>
more <file>
df -Th
ls
git rm <string>
git commit
sudo pacman -U <file>
alias <string>
rm <string>
clear
sudo rm -rf <string>
git add.
exit <number>
vi <file>
ls
mkdir -f <directory>
git reset HEAD^
sudo apt-get update
tar -cvf <string>
vi <file>
cd <string>
cd <string>
git checkout <string>
exit <number>
exit
git reset --hard
cd <string>
mkdir -p <string>
fg
exit
cd ..
cd <string>
curl <string>
ls
git init
git add <string>
cd <string>
make
cd <string>
env
read -e <string>
cd <string>
exit
cd <string>
ls
sudo systemctl status <string>
ls
apt-get install <string>
fzf --height <string> --reverse --inline-info)"
cd <string>
git push
ls -alrt
exit
python3 <file>
open <string>
npm install <string>
ls -a <string> lists all <string>
clear
cd <string>
vi <file>
more <file>
cd ..
git add -v -f <string>
sudo rm -r <string>
cd <string>
cd <string>
docker ps
git push
ls
systemctl start kubelet
tail -n <string>
cd <string>
sudo npm cache clean -f
docker-compose --version
vi <file>
git status
fg
fg
ls
git checkout <string>
cd ..
vi <file>
ls
npm-recursive-install
python3 <file> -sI <string> -sM <string> -dM <string> -dI <string> -v
ls
rm -r <string>
cd <string>
cd
ls
ls
uname -a
vi <file>
read -rp <string> <string>
read <string>
curl -sS <string>
cd ..
ip a
git push
grep -v <string>
cd <string>
tmux
cp -pr <string>
python3 <file>
ls
open <string>
git checkout <string>
cd <string>
exit <number>
vi <file>
done
sudo apt install -y <string>
ps aux
vi <file>
sudo loadkeys <string>
xrandr -q
ls
set <string>
sudo mv <string>
ls
sudo usermod -aG <string> $USER
sudo apt upgrade
cd
tmux kill-session
docker image <string>
ls
git commit -m <string>
cd <string>
curl <string>
sudo add-apt-repository <directory> -y
bash <file>
done
exit
ls
cd <string>
cp -r <directory>
git pull
cat <string>
cd <string>
git pull --ff
grep -v <string>
git add <string>
ls -p --color=<string> <string>
git pull origin master
sudo usermod -l <string>
source <directory>
git commit -m <string>
ls -a
cd ..
ls
cd ..
ls
uniq
clear
git push -u <string> main
tail
sudo pacman -U <file>
clear
mv <string>
vim <file>
ls
apt-get -y <string> <string>
cat <string>
mkdir <string>
printf <string>
du -h <directory>
ls
fg
cd ..
cd..
ls
git push
ls
sudo apt-cache search <string>
chmod <string>
git clone <URL>
cat <string>
cd
cd <string>
git checkout -
ls
ls
cd ..
ls -la
git commit -m <string>
mkdir -p <string>
ls
sed -i <directory>
ls
cd ..
sudo -E <string> -
ls
cd <directory>
ls
pwd
vi <file>
ls
cat <string>
chmod +x <string>
less <string>
mv <string>
telnet <string>
sudo chown <string>
ls
pkill -h
sudo apt install openjdk-8-jdk -y
find
bash <file>
ls
vi <file>
vim <file>
ls
ls
cd <directory>
git add .
git push
docker-compose logs --follow <string>
exit <number>
less <string>
sed -e <directory>
exit
ls -alF
wget <URL>
git commit -m <string>
exit
ls
ls
pwd
cd <string>
ls
git add -all
git add <string>
git commit -m <string>
exit
cd <directory>
pico <file>
mkdir -p <string>
vim
ls
git pull origin master
sudo apt update
vim <file>
git init
cat <string>
ls
ls -a
vi <file>
hexdump -h
sed <directory>
fg
cd <string>
tmux send-keys -X <string>
diff <file> <file>
cat <string>
git remote add origin <URL>
wget <URL>
cd <string>
cd ..
ls
cp <string>
git rm --cached -r <string>
git pull
curl <string>
cp <string>
git remote add origin <URL>
git merge develop
exit <number>
cd
sudo apt-get update
which <string>
grep <string>
sudo apt remove <string>
git add <string>
vim <file>
sed -e <directory>
ps -aux
clear
npm http <number> <URL>
rvm <string>
cd <directory>
ls -la
ls -la
sudo snap install <string>
docker rm <string>
git push
git config <file> <file>
ls
clear
ssh -L <string>
cd ..
git commit -m <string>
git add <string>
dir
ls
mv <string>
vim
cp -r <directory>
ls
git push -u <string> main
npm install -g <string>
clear
git checkout <string>
cd <string>
find <directory> -type <string> -print0
ssh <string>
ls
cd <directory>
fg
git status
curl -X <string> -d <string>
docker stop <string>
ls
pwd
sudo apt upgrade
ls
ls
df # shows disk usage
git commit -m <string>
open <string>
ls
cd <string>
cd <directory>
<file> - <number>
mkdir <string>
sudo xcode-select -s <directory>
rm <string>
tmux
sudo cp <string>
cat <string>
git config --global <file> <string>
source <string>
sudo npm i -g <string>
ls
git push origin master
mkdir -p <string>
grep -E <string>
cd <string>
curl -F"shorten=<string> <URL>
export <string>
rm -rf <string>
git pull
wget -q -O <file>
git ls-files
sudo sed -i <directory> <file>
grep -i <string>
ls
ls -al
ls
setg RHOSTS <file>
LANG=<string> rpm -qp --queryformat <string>
cat
sudo systemctl start <string>
cd <string>
ls
clear
fg
touch <file>
curl -L <URL>
sudo modprobe <string>
ls
sed <directory>
git commit -m <string>
cd <string>
git co master
chmod +x <string>
ls -lah
exit <number>
clear
ls
python3 <file>
sudo update-alternatives --install <directory>
cd <directory>
vim <file>
ssh <string>
ls
clear
cd ..
ls
exit
ls
sh <file>
curl <string>
vim <file>
code <string>
cd <string>
cd..
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
vi <file>
sudo apt-get install <string>
clear
cd
cat <string>
ls
ls
exit
exec zsh
git commit -m <string>
ls -1
cd <directory>
npm run test
git status
git add <string>
ls
cd <string>
cd <string>
python3 <file>
git remote -v
git add .
clear
apt-cache search <string>
mkdir <string>
rm <string>
vi <file>
cd <string>
sudo apt install <string>
ls
vim <file>
rm -r <string>
ls
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
ls
ls
cd <directory>
uname -a
ls
vim <file>
find <directory> -name <string>
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
clear
ls
git push
git commit -m <string>
vim <file>
ls -ltr
git commit -m <string>
git add <string>
docker-compose logs
vi <file>
git pull
git pull
yarn <string>
clear
ping <file>
ls
fg
cd
ls
cd <directory>
cd <directory>
ls
su
sudo vi <directory>
ls
sh
clear
sudo apt-get install <string>
cd <directory>
sudo cp <string>
ls
git pull origin development --no-ff
cd ..
cd <string>
grep <string>
shutdown -h <string>
find . -type <string> -mindepth=<number>
mkdir <string>
ls
su root
chmod +x <string>
clear
mv <string>
git add <string>
awk <string>
vi <file>
sed -n <string>
ls
cat <string>
ls
ls
df -h
sudo apt purge <string>
cp -R <string>
exit
cd <string>
sudo aptitude install <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec -print <string>
git commit
sudo apt-add-repository -y <directory>
sudo pgrep -a
npx <string>
sudo pacman -S <string>
ls
sed -e <directory>
wget -r -A.html <URL>
cd <directory>
git add <string>
sort
docker-compose up -d --build
cd <string>
ls
ls
git clone <URL>
sudo python3 <file>
cat <string>
cd <string>
clear
git remote add origin <URL>
ls
cd ..
git status
cd <string>
cp <string>
cd <string>
cd <directory>
sudo chmod -r--r--r-- <string> chmod <string>
nano <string>
vim <file>
ls
ls -alht <string>
mv <string>
clear
ls
ls <directory> -a
git status
exit
cd <string>
grep <string>
git pull --no-rebase
ls
vi <file>
sleep <number>
ls
sleep <number>
cd <directory>
vi <file>
git commit -m <string>
ls
ls -altr
awk <string>
exit <number>
sudo restart
sudo apt-get purge nodejs npm
grep <string>
sudo ln -s <directory>
fg
less <string>
xrandr --output <string> --right-of <string>
ls
ls++ -a
ls
sudo sed -i <directory> <file>
fg
vim <file>
python3 <file>
rm -rf <string>
find <directory> \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <string> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file>
git commit -m <string>
scp <string>
sudo nala <string>
then\
git push origin master
cp
chmod u+x <string>
sudo sed -i <directory> <file>
cd <string>
ls
git push origin master
clear
sleep <number>
man <string>
ls
vi <file>
cd ..
find <directory> -name <file>
dpkg-shlibdeps: erro: <string>
cd <string>
ls
sudo nmcli con mod <string> <string>
sudo usermod -a -G <string>
cd ..
sudo dnf install lame\* --exclude=<string>
sudo dpkg -i <file>
git rebase -i <string>
sudo apt-get install <string>
cd <directory>
sudo curl -fsSL <URL> -o <directory>
sudo apt-get install <string>
cd <string>
history
sudo systemctl enable <string>
service apache2 restart
sed -i <string>
exit <number>
sudo apt-get update
exit
git st
wget <URL> -O <file>
docker run --help
cd <directory>
docker-compose up -d --build
cd <string>
ls <directory> -al
git add <string>
sudo rm -rf <directory> <directory>
cd <string>
sudo bash -
tar -zxvf <file>
apt-get update
less <string>
cd
cd <string>
ls -a
git pull
cd <string>
docker-compose up -d --build
chmod <string>
sh <file>
cd ..
grep <string>
cd <string>
ls
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
ls
vi <file>
cd <directory>
cd <string>
vi <file>
git commit -m <string>
npm run build
kubectl api-resources --api-group=<string>
git merge <string>
cd <string>
sudo apt install <string>
exit
git remote set-url origin <string>
clear
ls
clear
rm -r <string>
git pull
select(.status.containerStatuses[].name==<string> <string>
git add .
ls
cd <string>
clear
ls -G
ls
open .
git remote -v
cat <string>
exit
cd <directory>
ls
sudo sed -i <directory>
git submodule add <URL>
cd <directory>
sudo shutdown -h <string>
vim <file>
cd ..
git add .
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
ls
systemctl status
chmod u+x <string>
cd
rm -r
grep -i <string> >files
git add -A
ls
sudo systemctl stop <string>
sudo apt install <string>
git push
sudo cat <file>
source <string>
ls
jq -r <string>
sudo ntpdate
stat -c <string>
npm uninstall <string>
openssl version -a\
git add <string>
gsettings set <file> <string>
ls
clear
cd <string>
ls
chmod <number> <string>
sudo touch <directory>
git add -A -- <string>
sudo -i
npm install
ls
mv <string>
less <string>
pwd
vi <file>
cd <string>
cd ..
exit
sudo oor -D
vi <file>
cd <string>
ls
git commit
exit <number>
chmod +x <string>
git pull
python3 <file> --num_gpus=<number>
cd <string>
ls
git push -u <string> master
exit <number>
ls
chmod +x <string>
npm i -g <string>
set -e
mv <string>
git status
cd <string>
find . -name <file> -type <string> -print -delete
ls
<directory> -m <file>
git add <string>
cd <string>
ls -la
ls
vi <file>
<directory> <string>
ls
vi <file>
vim
ls
git add .
exit
wget <URL>
cd <string>
rm <string>
cat <string>
git commit -a -m'Initial <string>
cd ..
apt-get -y <string> <string>
git status
awk <string>
rmdir <string>
ls
wget -q -O <file>
exit
vi <file>
ls -l/
cd
ls
pwd
cd <string>
read -p <string>
view <string>
ls
ls
vim <file>
ls
git checkout <string>
npm i <string>
cd
vim --version
docker run -v <string>
npm start
ls
ls
cd <directory>
ls
ls
ls
cd <string>
git push -u <string> main
curl -sL <URL>
ls
ls
sudo dnf install <string>
mkdir -p <string>
vim <file>
cd ..
clear
exit <number>
mkdir <string>
exit
sudo yum install <string>
find
cd ..
read -r -a <string>
sed -Ei <directory>
cd
exit <number>
sudo chsh -s <directory>
git status
git pull
ls
ls
cd <string>
mkdir <string>
cd <string>
cd <directory>
cd <string>
docker ps
sudo chmod a+rwx <directory>
git pull
git config --global <file> <string>
read <string>
vi <file>
cd <directory>
sudo su
curl -fssl <URL>
npm run dev
ssh-keygen -t <string> -f <directory>
ls
exit
cd ..
locate <string>
touch <string>
sudo nala <string>
fg
vi <file>
ls
rm -- <string>
ls
cat <string>
git push
done
cd ..
tmux a
sudo apt update
cd ..
cd ..
git commit -m <string>
ls
sed -e <directory> -e <directory>
tail -$2 <directory>
clear -ls
cd <string>
ls -al
sudo apt-get install <string>
git fetch
git push
sudo sed -i <directory> <file>
git stash pop
sudo mkarchiso -v -w <string> -o <string> slim-iso -r
git status
curl -1sLf <directory>
git status
ls -a
git commit -m"add"
git push
git commit -m <string>
exit
exit
sed -E -e <directory>
docker-compose up
read -p <string>
mkdir <string>
cd <string>
cd <string>
sudo make clean install
ls
exit
ls
df
ls
wget -q -O <file>
code .
cd <string>
ls
vim <file>
cd <directory>
brew cask install <string>
clear
exit
rm -r <string>
ls
chsh -s <directory>
cd ..
cd ..
sudo
cat <string>
vim <file>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
ls
cd <string>
sudo chmod 775 <string>
apt-get update
printf <string>
ls
exit
cd <directory>
cat <string>
ls
git remote add origin <URL>
cd <string>
exit
exit
rm <string>
sh <file>
uniq -c
wget -O <file>
cd <string>
ps
source <file>
find . -type <string> -name <string>
sudo kill -9 <number>
ls
cat <string>
apt-get update
wget <URL>
read -r <string>
touch <string>
git remote rm
vim <file>
git commit -a
rm <string>
find . -name <file> -type <string> -print -delete
exit
exit <number>
ls
sudo ln -s <directory>
cd <string>
find . -name <string> -type <string> -print -prune -exec <string> -rf <string>
cd ..
cd <directory>
ls
clear
install <string>
read <string>
vi <file>
ls
ls
git status
ls
git status
sudo apt update
docker-compose up -d --build
git push
clear
cat <string>
ls
sleep <number>
ls
git pull origin master
brew uninstall --force <string>
exit
sudo rm <directory> -rf
vim <file>
wget <URL>
git push --force
git status
ls
git status
find . -mindepth <number> -type <string> -exec <string> a -mx=<number> <directory>
cd <string>
curl -L <string> -o <file>
ls
clear
cd ..
source <string>
ls
ls -la
clear
git clone <URL>
cd ..
exit <number>
nano <file>
clear
fg
nano <string>
sudo -i
cd <string>
clear
cd <string>
which <string>
setg RHOSTS.*
git init
unset color_prompt force_color_prompt
sudo service nginx reload
sed <directory>
apt-get update
ls
vi <file>
sudo resize2fs <directory>
ssh -i <string> remote_user@remote_host
mkdir -p <string>
git
date
git pull
git pull
git remote add origin
pwd
find . -name <string> -type <string>
cd
ls
fg
less <string>
clear
ls
ls
cd <string>
ls
npm i pm2 -g
vim <file>
npm run test
ls
code <string>
mv <string>
sudo subl <string>
systemctl enable <string>
ls
ls -la
ls
sudo ip route add <string>
ls
git add <string>
cd <directory>
exec swaymsg -q <string> --no-startup-id <string> -c
vim <file>
sudo pico <string>
sudo ufw enable
git pull
cd <directory>
ls
npm install react-native-reanimated-carousel --force
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <string> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file>
git checkout <directory> -f
ls
rails server -b <string>
sudo shutdown now
ls
clear
cd <string>
ls
unset color_prompt force_color_prompt
sed <directory>
info
ls
curl --silent <string>
ls
htop
curl <string>
ls
ping <string>
grep <string>
cd <directory>
git status
top
sed <directory>
scp <string>
cd
npm install -f
git status
git commit -m <string>
sudo systemctl enable <string>
cd <string>
cd
ls
cd <directory>
mkdir -p <string>
curl -s <string>
git push origin --delete <string>
setg RHOSTS.*
cd <string>
nano <file>
cat <string>
read -rp <string> <string>
ls
git commit -m <string>
git init
git commit -m <string>
git clone
mv <string>
rm -rf <string>
cd <string>
sudo apt-get --assume-yes <string> <string>
fg
npm i <string>
vi <file>
mkdir -p <string>
git status
sudo cp <file> <file>
cd <string>
vi <file>
cd <directory>
cd ..
cd ..
ls
cd <directory>
ls
xrandr -list
ls -las
exit <number>
tail -f <directory>
sudo apt-get update
brew install --cask <string>
clear
cd <string>
cd
exit
export <string>
mkdir -p <string>
sudo sed -i <directory> <file>
touch <string>
cat <string>
curl -H <string> -H <directory> -X <string> <directory> -d <string>
git add .
rm -rf <string>
exit
sudo apt install <string>
git push origin <string>
ls
ls
pwd
cd <string>
ls
git config <file> false
cat <string>
apt -y <string> <string>
curl -sSL <URL>
git add .
python3 <file>
cd ..
sudo vim <file>
clear
ls
ls
vim <file>
sudo ifconfig en0 ether <string>
fg
cd ..
wget <URL>
git push
git --version
clear
cp <string>
clear
git checkout <string>
fg
ls
cd <string>
<file> - <number>
git push
sudo nmcli con mod <string> <string>
git remote add origin <URL>
vi <file>
ls
exit
cd <string>
vim <file>
ls
git add <string>
more
ls
nano <string>
bash <file>
cd ..
git add .
source <directory>
fg
git push -u <string> main
npm run test
xrandr --listactivemonitors
npm run start
clear
npm start
sudo make install
git commit
sudo pacman -Rs <string>
systemctl start docker
git commit -m <string>
git stash
clear
cd..
python3
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ls -lt
clear
cd <directory>
tail -f <directory>
git status
sudo vim <file>
ls -a
cd <string>
ls
ls
nl
mkdir <string>
clear
date
sed -E -e <directory>
rm <string>
git push
chmod <number> <string>
find --help
ls
cat <string>
cd <string>
clear
git add <string>
cd <directory>
cd <string>
ls
ls
chmod +x <string>
cd <directory>
export <string>
ps ax
grep <string>
mkdir <string>
diff <file> <file>
git pull origin master
sudo python <file> --cascade=<file> <number>
ls
touch --version
init
git remote add origin <URL>
git commit -m <string>
git add <string>
git pull
ls
git status
cd ..
cd <directory>
sudo su
cd <string>
rm -f <string>
sudo make install
cd <string>
cd <directory>
wget -r -A <URL>
cp <string>
git add <string>
apt-get update
sudo tail -F <directory>
git pull
chmod +x <string>
vi <file>
vi <file>
sudo gem install <string>
cd ..
chmod <number> <string>
sed -E -e <directory>
service apache2 reload
cd <string>
chmod +x <string>
sudo cp <file> <file>
ls
docker ps -a
fg
git commit -m <string>
mv <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
view <string>
git add -v <string>
cd <string>
exit
true
vi <file>
chmod <string>
cat <string>
sudo apt install <string>
ls
git push
docker run -ti --rm -v <directory>
cd ..
sudo ln -s <directory>
git commit -m <string>
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
docker run -it -p <string>
source <file>
git add <string>
git clone <URL>
rm <string>
ls
tail +n # Print nth line from file.
exit
ls
cd <string>
sudo pacman -S <string>
sudo tar -xj --strip-components <number> --overwrite -C <string>
sleep <number>
sudo openvpn <file>
sudo chown -Rv <string>
read -r <string>
ls
ls
clear
ls
cd <string>
cd <directory>
mkdir <string>
ls
npm install
sudo nano <string>
sudo apt-get upgrade -y
ls -art
cd ..
cd <string>
git commit -m <string>
rm -rf <string>
apt-get install <string>
exit
ls -la
less <string>
ls
mkdir <string>
rm -rf <string>
paste <(cut -d" <string>
ps -ef
date
sudo apt update
cd <string>
unset color_prompt force_color_prompt
bash <file>
ls
sudo docker ps
cd <directory>
source <string>
mkdir <string>
then\
ls
yarn add <string>
usermod -G <string>
ls -l
sleep <string>
git config --global <file> <string>
cd <string>
grep -Fxq <string>
xargs -0 -r -i <string> -a <string>
sort
git
find -name <file> -prune -o -name <file> -print <string>
cd <string>
done
nc <string>
ls
ls
printf <string>
sudo apt install <string>
curl -sSfL <URL>
exit
rm -rf <string>
cd <string>
rm -f <string>
cd <string>
ls
clear
ls
ssh <file> -p <number> -i <string>
exit <number>
ls
exit
vi <file>
git push
cd
cd <string>
wget -qO- <URL>
more <file>
mkdir -p -- <string>
ls
kill -p <number>
sudo ansible-playbook -i <directory>
mkdir -p <string>
cd <directory>
ls
ls
git push -u <string> main
find $SRC -name <file> -or -name <file> -exec <string> xzvvf -C <string>
git add <string>
ls -r
git commit -m <string>
git checkout -b <string>
cat -n <string>
grep <string>
sudo ufw <string>
rm <string>
wget <URL>
xrandr --output <string> --auto
sudo yum-config-manager --add-repo <URL>
git config --global <file>
git commit -m <string>
ls
sudo apt upgrade -y
ls
sudo apt-get update
print -Pnr -- <string>
ls
sudo systemctl restart <file>
sudo vim <file>
npm update
python3 <file>
apt-get list --installed
openssl rand -hex <number>
cd <string>
cd <directory>
su
vim <file>
dotnet
rvm install <string>
git checkout <string>
cd <string>
unset -f <string>
sleep <string>
sort > <file>
vi <file>
ls
exit
ls
grep -v <string>
ls
cd <directory>
git status
cd <string>
cd <string>
cd <directory>
cd ..
clear
sudo xbps-install -Su
cd
git clone <URL>
init
rm <string>
git commit -m <string>
vi <file>
git pull
kubectl get <string>
clear
exit
git commit -m <string>
htop
cd
cd <string>
ls
git init
vi <file>
pwd
git push github --tags
clear
rm -i <string>
sudo apt install <string>
grep -wirl <string>
npm i lebab -g
git add .
find . -type <string> -exec <string> -nHi --color=<string> -R <string>
cd <directory>
sudo npm install -g <string>
cd..
sudo apt-key add
sudo apt update
ps -e
ls
alias <string>
git clone <URL>
git info
ls
printf
ls
ls
clear
cd <string>
cp <string>
sudo curl -fsSL <URL> -o <directory>
rm <string>
su - <string>
ls
vi <file>
sleep <number>
terraform <string>
cd
vim <file>
cd
cd <string>
vim <file>
find . -empty -type <string> -print -delete
cat <string>
exit
sudo systemctl restart <string>
vi <file>
ssh esther@10.18.0.41 -p <number>
ls
ls
ls
chmod <string>
ls
touch <string>
docker-php-ext-install <string>
exit
ls -l
cd <string>
ls
ls
git config --global <file> <string>
git status
pkill picom
sudo touch <directory>
ls
find . -name <string> -delete
cd <string>
git pull origin development
find src
ls
cd
ls
cd <string>
git status
ls
read -p <string>
sudo sleep
git add .
ls
cd <string>
git push origin
sudo npm i -g <string>
ls
vi <file>
cd <string>
git config --global <file> <string>
vi <file>
grep -i <string> >files
ls -la
git diff
nano <file>
git fetch
ls
ls
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
ls
rm -rf <string>
git add <string>
rm <string>
vim
mv <string>
ls
chmod <number> <string>
vim <file>
chmod +x <string>
git pull
git status
ls
git pull
git reset --soft <string>
cd <string>
sudo npm install <string>
git commit -m <string>
bash
source <string>
sudo sed -i <directory>
cd -
sudo apt-get install <string>
clear
find . -empty -type <string> -print -delete
ls
npm init -y
grep -i <string>
git pull origin master
git status
cd <string>
git push -u <string> master
git push
su
uname
ls -ltr
ls
git status
ls
git add .
sudo apt install <string>
ls
read -n <number> -s -p <string>
cd <string>
cat <string>
ls
ls
rm <string>
cd ..
wget
ls
cd ..
cd ..
ls
chmod <number> <string>
exit <number>
git pull origin master
bash <file>
git status
go tool pprof <file>
cd ..
rm <string>
git add <string>
ping <file>
sudo tail -30 <directory>
screen
find . -size <string>
git config --replace-all <file>
npm init
sed -i <string>
ls -la
vim <file>
rm -rf <string>
perl -e <string>
sudo apt-get upgrade
sudo mysql -u <string> -p
ls
vim <file>
npm start
sudo vim <file>
sudo lsof -i -P -n
vim <file>
cd <string>
sleep <number>
cd ..
clear
apt-key adv --keyserver <string> --recv <string>
ls++ -a
ls
cd <string>
git push origin
cd <string>
vi <file>
npm run make
telnet <string>
clear
git commit -m <string>
git remote add origin <URL>
cd <directory>
ls
git config --global --get <file>
vim <file>
exit
exit\
exit
sed -i.bak <directory>
cd <string>
sudo start uwsgi
vim <file>
git checkout <string>
npm --version <directory>
cd <string>
sed -E -e <directory>
git push
ls
git commit -m <string>
cd ..
ls
vi <file>
ls
cd <string>
sudo apt update
mkdir -p <string>
ls
cd ..
ls
sudo apt-get update
cd
cp <string>
grep -rl <string>
yarn
git status
cd <string>
cd <string>
sudo lpoptions -d <string> -l
rm -rf <string>
sudo dpkg --get-selections
ls
mkdir <string>
cd ..
rm <string>
cp <string>
ls
npm run
ls
sudo pacman -Syu <string>
git add <string>
wget -q <URL> -O-
clear
cat <string>
cd <string>
cd <string>
git push
grep -E <string>
cd <string>
git reset <string>
ls
vim <file>
s/:/ <directory>
ps -ux
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
export <string>
top
cd <directory>
sudo git add <string>
git push heroku master
cd <string>
cat <string>
git push -u <string> master
ls
mkdir <string>
clear
npm run start
git add -A
sudo nala remove --purge <string>
uniq -i -c
vi <file>
npx tailwindcss init -p
git clone --help
ls
rm <string>
view <string>
cd <string>
sudo systemctl daemon-reload
git add <string>
cd <directory>
ip a
vi <file>
ps
cd ..
chmod -x <file>
ls -lX
npm install <string>
git push
git push --set-upstream <string> main
rm <string>
git init
cd <string>
rm -r <string>
ls
ls
ls
ls
cat <string>
git commit -m <string>
git commit -m <string>
sudo apt remove <string>
git add -n
ls
git pull
ls
cd <string>
sudo apt-get install <string>
cd <directory>
grep -v <string>
cd <directory>
cat <string>
vim <file>
systemctl stop <string>
cd <string>
mv <string>
diff -u <string>
a
cd <string>
git push
cd <directory>
cd.
ls
cd <directory>
cd <directory>
egrep <string>
vi <file>
find -i <string>
git push
cat <string>
sed -E -e <directory>
exit <number>
sudo udevadm control --reload-rules
cd ..
ls
cat <string>
ls
lsblk
cd <string>
vi <file>
more <file>
cd
cd <string>
clear
sed -i -e <string>
rm -rf <string>
clear
exit <number>
cd <string>
cp -r <directory>
brew install <string>
apt
cd ..
ls
dpkg-shlibdeps: <string>
ps auxf
docker pull <string>
ls
git stash pop
cd ..
cd <directory>
sed -i -e <string>
vim <file>
systemctl enable <string>
vim <file>
egrep -ri <string>
ls
cd <string>
git push
git add .
cd <string>
chmod <number> <string>
git status
git ls-files
git config <file> <string>
history
mv <string>
cd <directory>
ls
git reset --hard <string>
ls
yarn add <string>
sudo sshfs -h
exit <number>
exit
clear
reboot
do\
cat <string>
cd <string>
history -c
sudo ifconfig en0 ether <string>
cat <string>
git push
npm run start
ls
du -sh <directory>
touch <string>
mkdir <string>
cd <string>
cd ..
ls
man <string>
sudo supervisorctl status
ls
cd ..
git commit
sudo apt-get -y <string>
sudo mv <string>
chmod <number> <string>
chmod <number> -R <directory>
nano <file>
ls
git rm -rf <string>
cd ..
cd <string>
cd <directory>
sudo vim <file>
history
pwd
docker ps
ls
sudo apt-get -y <string> <string>
ls
xargs -n1 <string>
top
ls
cd <string>
code .
grep <string>
ls
ls
cd <directory>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git init
git remote add origin <URL>
ls
hostname
curl -skI <string>
clear
git push origin master
ls
mvn clean
exit
rm <string>
git checkout master
ls -l -t <string>
clear
sudo systemctl enable <string>
ls
npm run start
less <string>
git commit -m <string>
sudo mount -t <string> -o <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git push origin master
sudo cp -r <string>
exit
cd ..
curl <string>
ls
sudo apt-get update
sudo systemctl restart <string>
cd ..
unset color_prompt force_color_prompt
cat <string>
git remote add origin <URL>
cd <directory>
vim
ls -la
git init
git clone <URL>
clear
cat <string>
nano <file>
ls
ls
sudo chmod -R <number> <string>
git push
ls
sudo apt-key adv --keyserver <string> --recv <string>
mv <string>
sudo apt-get install -y <string>
ls -l
code <string>
npm run test
vi <file>
mkdir <string>
touch <file>
ls
xargs cat
read -r <string>
bash
env
sed -e <directory> -e <directory>
exit
git config --global <file> <string>
vim <file>
sudo rm -rf <string>
cat <string>
git remote add origin <URL>
npm -v
time <string>
df -h
python3 <file>
cp <string>
git add .
git clone <URL> --depth <number> --branch <string> --single-branch
source <directory>
apt-get install <string>
exit
clear
npm run test
clear
uniq
cd <directory>
cd <string>
ls
ls -ltr
sudo make install
cd <string>
ls
cd ..
ls
sed <directory>
find . -size <string> -a -print -a -exec <string> -f <string> \
cd
sudo mkarchiso -v -w <string> -o <string> slim-iso
cd <directory>
vi <file>
rm -r <string>
docker image ls
find <directory> -iname <file> -type <string> -exec <string> -c <string>
sudo nvim <directory>
ls
sudo apt-add-repository <directory>
cp <string>
fg
git push origin
clear
rmdir <string>
ls
sudo lpadmin -x <string>
cd <string>
lsblk
ls
ls
git remote add origin <URL>
vim -O <file>
git push
sh <file>
fg
grep -v <string>
ls
ls
ls
cp -r <directory>
sudo apt update
cd ..
ls
sudo -H <string> install keras_applications --no-deps
git status
cut -f-12,16,17,21- <string>
fg
ls
vi <file>
sed -i <string>
cd -
touch <string>
git init
ls
ls # lists your files in current directory, ls <dir> to print files in a specific directory
sudo docker rm corrade
ls
cd <string>
cp <string>
ls
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
sed -E -e <directory>
cp -v <string> <directory>
ls
git pull
vi <file>
df -n
chmod <number> <string>
nano <string>
ls
clear
cd ..
vi <file>
ls
watch -n <string>
git add .
ls
sort
ls
git push
fg
ls
git status
git commit
ls
ls
cd <string>
vim <file>
<directory> <string>
rm <string>
git commit -m
clear
rm -rf <string>
sudo chmod +x <string>
git init
git remote
ls
ln -s <string>
git clear
ls -la
chmod <string>
mv <string>
vim <file>
node <file>
vim <file>
kill -9 <number>
ls
ls
df -H --output=<string>
cd <string>
git pull
ls
diff <file>
systemctl start <string>
systemctl status <string>
tar -C <directory> -xzf <file>
head -2 <file>
ls
git reset
git status
git status
git pull
else <string>
vim <file>
ls
git add <string>
find <string> -exec <string> <string>
ls
git pull
vi <file>
ls
chmod +x <string>
git reset <string>
ls
ls -lh
shutdown now
ls
chmod +x <string>
mv <string>
docker logs <file>
git add <string>
ls -la
cd <string>
cd <string>
git commit -m <string>
git status
ls
uname
git rm --cached <string>
ls
vim <file>
ls
ls
cd <directory>
git pull origin master
cd <directory>
git add .
python3 <file>
cd <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
ls
fg
ls link
ls
vi <file>
sudo apt-key add -
cd <directory>
ls
python3 <file>
vim <file>
vim <file>
ssh <string>
git push origin master
git fetch
pwd
git add .
sudo sed -i <directory>
ls
ls
<directory> <string>
rm -rf <string>
cd <string>
git add <string>
sudo pacman -S <string>
clear
sudo apt install code -y
exit
grep <string>
git push
git commit -m <string>
python3 <file>
cd <string>
sed <directory>
docker exec -it <string> bash
ping <string>
ls
exit
git status
rmdir <string>
cd <string>
git commit -allow-empty -m <string>
alias <string>
npm start
editor
exit
mv <string>
xsel --clipboard
ls -ltr
cd <string>
ls
cd <string>
sudo sed -i <directory> <file>
ls++ -a
cd <string>
vi <file>
ls
mv <string>
more <file>
clear
git clone <URL>
cd ..
ls
code <string>
ls
ls
vim <file>
cd <directory>
sed -i <string>
git commit -m <string>
sudo sed -i <directory>
netcat <string>
sudo apt-get purge nodejs --auto-remove
vi <file>
git status
docker ps
cd <string>
git config --global <file> <string>
grep <string>
clear
ls -a
ls
ssh-agent
git commit -m <string>
sudo apt update
sed -e <directory> -e <directory>
ls
tmux source <file>
sync
npm audit fix
exit
git st
vim <file>
npx shadcn-ui@latest add <string>
clear
git add .
ls
ls
sudo modprobe -r <string>
ls
su
vim <file>
read -s -n <number>
git add .
ls
git fetch
cd ..
cd ..
fg
sudo cp <string>
vim <file>
source <directory>
rake <string>
git init
curl -so- <URL>
clear
mkdir <string>
npm run dev
npm help
ls
ls
git push
cd <directory>
ls
sudo port <string>
sudo vi <file>
chmod <number> <string>
clear
cd <directory>
sudo reboot
cd <string>
file <string>
ls -a
exit <number>
chmod u+x <string>
cd <directory>
kill -9 <number>
wget <URL>
cd <string>
ls
time curl --header <file>
cd <string>
sudo vim <directory>
git add <string>
sudo python3 <file>
clear
git checkout -b <string>
git add <string>
ls -laR <string>
history -a
ls
ls
git pull
ls
cd..
exit
history
git commit -m <string>
ls
exit
exit
sudo add-apt-repository <directory>
ls
history
git init
ls
python3 <file>
ls
exit
ls
sudo apt install <string>
git add .
ls
cd <string>
cd <directory>
docker-compose up -d --build
ps -ef
exit <number>
ls
ls -la <directory>
sudo apt update
ls
git pull origin <string>
git add <string>
cd ..
git remote add origin <URL>
git clone <URL>
git
cd <directory>
git add .
ls
vi <file>
cd <string>
cd
clear
pwd
true
rm -rf <string>
sudo ln -s <directory>
cd
fg
cd <directory>
ls -l
cd <string>
ls -l
git submodule update --init --recursive
sudo apt update
docker
cd <string>
perl --version
vi <file>
ls
ls
git commit -m <string>
vi <file>
apt install <string>
git init
ls
cd <string>
ls
docker run -d -p <string>
sudo sed -i <directory> <file>
ls
vi <file>
ls
mkdir <string>
cat <string>
exit <number>
history
fg
git status
cd <string>
cd ..
cd <directory>
curl
git hist
sudo killall <string>
ls
git branch 2> <directory>
npm i <string>
git config --list
ls
git commit -m <string>
find src
grep <string>
pwd # tells you where you currently are
clear
sort -nr
netcat <string>
ls
clear
chmod +x <string>
cd <directory>
git checkout -
cd ..
cd
grep -vE <string>
exit
cd <string>
cd <string>
grep <string>
sort -u
rm -rf <string>
cd <string>
git init
awk <string>
git commit -m <string>
git push
sudo apt-get check
git add .
xargs grep <string>
ls
cd <string>
vim <file>
git push -u <string> master
mkdir <string>
kubectl apply -f <string>
sudo apt update -y
clear
cat -n -s <file>
ls -a
cd <string>
ls
cd <string>
ls
history
ls -l
npm run test
wc -l
cd ..
sudo restart <string>
ls
cd ..
ssh <string>
pwd
ls
sudo service nginx restart
df # shows disk usage
sudo systemctl restart <string>
ls
ps auxf
cd <string>
touch <file>
ls
mkdir --parents <string>
source <directory>
ping <string>
select(.status.containerStatuses[].name==<string> <string>
rm -r <string>
nano <string>
exit
git status
cd <string>
touch <string>
clear
grep <string>
cd <string>
vim <file>
python3 <file>
cd ..
ls
exit
cd <string>
sudo npm i -g <string>
rm -f <string>
git add <string>
vim <file>
sudo passwd <string>
vi <file>
htop
vim <file>
ls
cd <directory>
git rm --cached
ls
export
pwd
ls
<file> --hel
git add <string>
npm install pm2 -g
read -l <string>
clear
vim <file>
pico <file>
ls
python3 <file>
time go run <file>
sh
ls
clear
git clone <URL>
du -shx <string>
ls
sudo -i
ls
du -sh <directory>
ls -ll
ls
cd <string>
sudo sed -i <directory> <file>
clear
git pull origin development
ls
rm -rf <string>
clear
vi <file>
git grep -iI <string>
cd <string>
find . -empty -type <string> -print -delete
cat <string>
ls
git status --porcelain -s <string>
cd <string>
git config --global <file> <file>
git status
sudo systemctl start <string>
git pull
vim <file>
vim <file>
nano <file>
cd <directory>
export <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> --wrap=<string> --from <string> --to <string> <string> -o <file> <string> {} \
clear
cd <string>
git pull
cd <string>
git commit -m'Cool, <string>
git pull
xhost +
python3 <file>
git init
ls
git commit -m <string>
clear
ls
fg
ls
sudo -s -u <string> -H
ls
cd <directory>
free -h
read -p <string>
find . -type <string> -name <file> -print0
ls
sudo nano <file>
vi <file>
ls
sudo rm -rf <string>
ls
cp <string>
xargs -0 <string>
ls
wget -q -O - <URL>
sudo apt source pulseaudio
rm -rf <string>
vi <file>
docker run -it --name <string>
sudo apt-get update
npm run watch
git branch -D <string>
git commit -m <string>
sort -k2,2 -nr <string>
xargs -0 <string>
sudo apt-get upgrade --fix-missing
ls
cd <string>
git tag <string>
cd ..
npm run develop
clear
vim
chmod <string>
ps -ef
rm <string>
git init
vim <file>
cd
perl <file>
apt update
git rm --cached -r <string>
ls
git push origin main
journalctl
grep <string>
ls
env
tail -f <string>
which <string>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
cd <string>
cd <directory>
vi <file>
ps aux
sudo pip install --upgrade <string>
clear
clear
exit
ls
sudo poweroff
npm create vite@latest
find . -name <file>
ls -al
ls
clear
npm start
sudo pkill -u <string>
vim <file>
npm audit fix
ls
clear
ls
cd <string>
sudo -H <string> install -U <string>
cd <directory>
ls
unzip -o -d <string>
ls
ls
git commit -m <string>
cd
git init
read -p <string>
git push
ps
ls
cd <string>
true
sudo service nginx reload
htop
grep -i <string>
cd ..
ls -la
cat <string>
cd <string>
tail -f <directory>
mkdir <string>
git remote add origin <URL>
cat <string>
sudo apt-get install -y <string>
systemctl status <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
clear
ls
cat <string>
sudo python3 <file> install
cd ..
python3 <file>
cd <string>
git add .
cd ..
cat <string>
vim
cd ..
sudo mv <string>
ls
python3 <file>
curl --version
clear
git status
exit
ssh <string>
git status
grep -e <string>
dpkg-query -W -f=<string>
chmod +x <string>
ls
git grep <string>
mkdir <string>
pwd
rm Desktop -rf
ls
vim <file>
chsh -s <directory>
cat -n <file>
git pull
touch <file>
rm -f <string>
nano <string>
ls
git init
git push origin master
git pull
git add -u
cd <string>
tail -n <string>
yarn add -D <string>
wget -O <file>
wc -l <string>
cd <string>
ls
grep -r <string>
git add .
cd <string>
cd <string>
vim <file>
ls
git remote add origin <URL>
ping <string>
mkdir <string>
ufw
find <directory> -iname <file> -atime <string> -type <string> -exec <string> <string>
vi <file>
git checkout -f <string>
ls
sed -r <directory>
sudo apt-get update
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd <directory>
clear
git checkout <string>
npm run devstart
clear
ls
vi <file>
exit
git commit -m <string>
cd <directory>
cd <string>
ls
cd <string>
source <directory>
npm install -f
git branch
su root
python3 -m <string> install <string>
vim <file>
clear
git remote -v
exit <number>
ls
vi -t <string>
pulseaudio --check
vim <file>
git pull
sudo yum install <string>
vi <file>
screen -r
sed -e <directory> -e <directory>
brew rm <string>
ls
cp <string>
ls
ls
ls
git add <string>
ls -a
sudo apt-get install -y <string> --allow-unauthenticated
ls
ls
ls
sudo apt-get install <string>
ssh <string>
clear
cd ..
chmod +x <string>
pwd
sed -e <directory> -e <directory>
su
ls -lh
sed <directory>
cat <string>
ssh dirlic@10.18.0.39 -p <number>
ls
cd <directory>
rsync <directory>
ls
tmux info
ls -la <directory>
sudo apt update
docker ps -a --filter <string> --format <string>
vi <file>
ls
cd <string>
cd <string>
clear
cat <string>
ls
gunzip <file>
npm run bench -- -c <file> -n <file>
systemctl daemon-reload --user
cd <directory>
vim <file>
clear
git add <string>
cd <directory>
git add .
su - <string>
sudo yum install <string>
cd <string>
vi <file>
ls
git commit -m <string>
kill <number>
cp -r <directory>
ls++ -a
read -p <string>
git pull
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
cd <string>
docker rmi <string>
grep <string>
git add .
exit
ls
sudo modprobe -r <string>
ps -a <string> selects all processes with a tty except session leaders
cp -pr <string>
ls
ps -ef
cd <string>
cd ..
cd <string>
ls
cd <directory>
mkdir <string>
ls
fg
ls
vi
sed <directory>
cd <string>
cp <string>
python3 <file>
git commit -am <string>
xrandr -list
ls -lah
git pull
ls
docker exec -it <string>
find . -type <string>
fg
cd <string>
cat <string>
python3 --version
ls
git push
rm -r <string>
ls
vim <file>
ls
exit <number>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
su - <string>
grep <string>
dpkg --add-architecture <string>
userdel
cd <string>
apt-get purge <string>
sudo vim <directory>
ls
cd <string>
du -hsx <string>
ls
ls
vi <file>
clear
docker exec -it <string>
git push --set-upstream <string> master
sleep <number>
cd <string>
cat <string>
ls -a
apt-get install <string>
fg
find . -type <string> -size <string> -ls <directory>
ls
rm -f <string>
git init
git pull
htop
make clean
ln -s <string>
sudo shutdown now
mv <string>
history -a
ls
git status
screen -r
git clone <URL>
grep <string>
cd <string>
code
git checkout master --force
sed -ri <string>
sudo apt-key add -
ls
cd <string>
ls
sudo shutdown
ls
curl <URL> -o <file>
ls
mkdir <string>
git push origin <string>
ssh -X <string>
exit
git status
ls data -ld
sed -n <string>
npm install
cd <string>
cd ..
sudo docker rm corrade
history # shows command line history
rm -f <string>
sudo chown -R <string>
clear
docker build -t <string>
ls
ls
cd <directory>
ls -lT
npm i sass -D
chmod <number> <string>
cd <string>
node <file>
find <directory> -type <string> -exec <string> -H <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
cd <directory>
type <string>
vim <file>
cd ..
cat <string>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
git commit -m <string>
pwd
exit <number>
grep <string>
ls
cd <directory>
git checkout master
sudo npm install -g <string>
vim <file>
ls
ps ax
sudo rm -r <string>
sudo stop uwsgi
fg
ls
exit
git push origin main
cd <directory>
chown <string>
sudo service nginx reload
ls
rm <string>
vim <file>
bash
docker-compose -p <string> -f <string>
ps -ef
vim <file>
cd <string>
cd <string>
cd ..
cd
git status
rm -r <string>
sudo apt-get update
top
python3 <file>
cd <string>
git
grep <string>
mkdir -p <string>
ls
sudo nano <directory>
mv <string>
exit
git commit -m <string>
hg <string>
vim <file>
clear
sudo -H <string> install <string>
open <string>
git submodule deinit -f <string>
sudo sed <directory> <directory>
ls
source <file>
git add <string>
clear
ls
ls
git config --global <file> <file>
sudo python <file>
cat <string>
cat <string>
cd <string>
ls _build
sudo node <file>
cd <directory>
cd
ls
ls
cd ..
sudo curl <URL>
npm run dev
git push origin <string>
mkdir <string>
git add <string>
sudo certbot --nginx -d <file>
git push -u <string> master
uniq -c
chmod <number> <string>
cd <directory>
sed -e <directory> -e <directory>
clear
sudo apt-get update
npm audit fix -f
sudo tee <directory>
clear
cd <string>
exit
ls
git branch
ps aux
git checkout <string>
kubectl --namespace=<string> <string> <string>
npm install <string>
screen -r
umount <directory>
yarn add <string>
time <string>
git add .
sudo apt-get autoremove
cd
git branch
ls
perl <file>
cd <string>
apt-get update
ls
cd
read -p <string>
git clone <URL>
ps aux
grep -v <string>
cd <directory>
vim <file>
git add .
sleep <number>
ls
cd <directory>
bash
vim <file>
npm run prod
git diff
ssh <string>
git clone <URL>
ls
ls -tlr
git add -A
git remote remove origin
git clone <URL>
find . -type <string> -name <string> -delete
rm
clear
sudo apt install -f
ls
ls
cp <string>
sudo updatedb
tail -n <string>
cd <string>
vi <file>
cd <directory>
sudo ifup <string>
ls
git push -u <string> main
pwd
source <string>
top
vim <file>
sudo apt-get upgrade --fix-missing
git branch -b <string>
read -e <string>
ls -al
git commit -m <string>
sudo lighty-enable-mod <string>
clear
cat <string>
tee <file>
sudo apt-get install <string>
apt-get -y <string>
cd <directory>
git add <string>
ls
mkdir <string>
cat <string>
wget <URL>
grep -Eo -e <string>
curl
ls -l
ls
touch <string>
cd <string>
mv <string>
sudo systemctl start <string>
git push
git init
python3 <file>
lsblk
git remote -v
ps
cd <string>
curl -o- <URL>
ls
apt list --upgradable
python3 <file>
cd <string>
cd ..
vim <file>
rm <string>
python3 <file>
sed <directory>
ls
killall -SIGUSR1 <string>
clear
curl -o- <URL>
mv <string>
npm i <string>
clear
systemctl start <string>
tar xvzf <file>
rm -rf <string>
exit <number>
git add -A
cd <directory>
grep -a <string>
ls
cd
su root
su root
clear
cat <string>
git add .
cd <string>
cd <string>
clear
sudo chmod --reference <directory>
sudo apt-get clean
sudo udevadm control --reload-rules
git add <string>
cd <directory>
npm run start
ls
ls
git commit -m <string>
ls
exit
vim <file>
vim <file>
ls
cd <directory>
cd ..
ls
cd <string>
ls
sed <directory>
git status
ls
sudo apt-get install <string>
grep -i <string> >files
sed -E -e <directory>
less <string>
cd <directory>
sed <directory>
vi <file>
apt update
ls
cd <string>
useradd -m <string>
mv <string>
ssh-keygen -t <string> -C <file>
git add <string>
source <string>
cd
cd <string>
sudo chmod <number> <string>
apt-key adv --keyserver <string> --recv <string>
sudo ufw status
sudo apt-get update
sudo apt install <string>
vi <file>
sudo make install
sudo sed -i <directory> <file>
grep <string>
vim <file>
ls
date
ssh -L <string> -N -f -l <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git config --global --unset <file>
rm -rf <string>
cd ..
ls
exit
git init
git pull origin <string>
mv <string>
ls
vi <file>
vim <file>
wget -r <URL>
npm init -y
ls
sed <directory>
cd <string>
npm install
ls
read -r <string>
<directory> <string>
clear
ls -l
exit <number>
find <directory> -mindepth <number> -type <string> -exec <string> -t <directory> --backup=<string> <string>
ls
chmod <number> <string>
find . -size <string> -a -print -a -exec <string> -f <string> \
ls -la
cd <string>
cd <string>
cat <string>
cd ..
cd ..
sed -i <directory>
sudo apt-get update
git commit -m <string>
yarn
ls
npm install
sudo systemctl start <string>
cd
npm run dev
cd <string>
fg
ls
exit <number>
clear
source <file>
ls -la
npm i
git push -u <string> master
exit <number>
cat <string>
clear
pwd
tmux
cd <string>
ls
npm install
vim <file>
code <string>
date
htop
ls
git checkout master
ls
ls
cd <string>
curl <string>
cd <string>
nano <file>
ls
exit <number>
git status
pwd
ls
less <string>
vi <file>
sudo reboot
date <string>
git add <string>
git clone --depth <number> <URL>
unset color_prompt force_color_prompt
exit
chown -R <string>
pwd # <string>
sudo sed -i <directory> <file>
ls
rm <string>
sudo dnf remove <string>
git clone <URL>
vim <file>
su
git add .
wget <URL>
ls
exit
cd ..
more <file>
curl <string>
sudo apt-get update
vim <file>
cat <string>
ls
fg
vim <file>
ls
cd <directory>
pwd
sudo mv <string>
exit
sudo apt-get update
clear
git add <string>
python3 <file>
ls
grep <string>
mv <string>
chmod u+x <string>
ls
fg
cat -n <file>
git push -u <string> master
rm <string>
history
tail <file> -n <number>
npm run dev
touch <string>
ls
git clone <URL>
sed <directory>
fg
cd <directory>
ls
npm http <number> <URL>
sudo poweroff
sudo dnf search <string>
ls -la
find . -empty -type <string> -print -delete
git add .
ls
vi <file>
cd <string>
sudo partprobe <directory>
fg
git commit -m <string>
ls
ls
sudo nano <directory>
cd <string>
ip -a
cd <string>
cd <string>
bash <file>
read -r -p <string>
cd <directory>
git commit -a
git clone --branch <string>
reboot
git push heroku master
rm -f <string>
git fetch origin\
cd <string>
ln -s <string>
git status
sort -u <string>
sudo emacs <string>
vim <file>
cd
ls
rm -rf <string>
vi <file>
cp -r <directory>
sudo ln -sf <directory>
ls
read -r -p <string>
clear
cd <string>
grep <string>
fg
pavucontrol
yarn <string>
git status
exit
python3 -m <string> install <string>
cat <string>
grep -v <string>
python3 <file>
docker logs <file>
init <number>
ls -a
ls
rm <string>
git branch 2> <directory>
git submodule update --init --recursive
ls
apt-get install nginx -y
cd <string>
unzip <file>
ls -la
ls
ls
ls
cd
ls
vi <file>
rm -f <string>
cd ..
mv <string>
git clone <URL>
git push -u <string> main
source <file>
exit <number>
cp <string>
ls
grep <string>
git clone <URL>
vim <file>
exit
rm -f <string>
exit
exit
cd ..
cat <string>
pkill <string>
ls
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
sudo snap install <string>
ls <directory> -la
ls
ls
ls
find . -empty -type <string> -print -delete
vim <file>
cd <string>
git push
wget <URL>
ls
sudo pacman -Ss <string>
clear
clear
npm install <string>
cd ..
ls ..
<directory> <directory>
sudo nginx -t
done
curl -G <directory>
python3 <file>
sudo systemctl daemon-reload
sudo poweroff
git status
docker exec -it <string> bash
clear
ls
ls
cd <string>
tmux set-option -g <string>
uniq -c
cd <directory>
mkdir <string>
ls
clear
read -p <string>
docker-compose up -d --build
sudo apt-get install <string>
git reset --hard
ls
git fetch origin\
pico <file>
git commit -m <string>
ls
git push --force
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
git
ls
ls
cat <string>
ls
git status
exit
exit
git add .
git checkout master
cd <directory>
cd <string>
sed -Ei <directory>
git log
systemctl status
ls
sudo grep <string>
docker images
cut -f <string>
exit <number>
grep -E <string>
ls
clear
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
git push
ls
fg
sudo systemctl enable <string>
cd ..
grep <string>
cd ..
history
sudo docker exec -it <string>
exit
cd <string>
groupadd <string>
ls
ln -s <string>
sleep <string>
cd <directory>
cd ..
cd <string>
chmod +x <string>
vim <file>
cd <string>
python3 <file>
git status
vim
git push
tee <file>
sudo mkdir <directory>
sudo -i
sudo vim <file>
git init
history
apt-get install <string>
ls
git clean -f
docker-compose
sudo apt update
git push origin main
docker run -it --net <string> --entrypoint=<string> --name <string> -v <directory>
git remote add origin <URL>
clear
cd <directory>
git push
mvn compile
docker-compose up -d --build
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
<directory> <directory>
ls
git config <file> <string>
vi <file>
cd <directory>
ls
ls
grep <string>
tmux
touch <file>
sudo systemctl stop <file>
cp -r <directory>
curl -s <string>
history
cat <string>
git clone <URL>
sudo -s -u <string> -H
git submodule init
ls
mkdir <string>
ls -al
find . -type <string> -print0
sudo ldconfig
git remote
clear
sudo curl -0 <URL>
else
git init
source <file>
mv <string>
reboot
ls
git push
df
service apache2 reload
man <string>
rm -rf <string> -f
ls
ls
git init
cd <string>
cat <string>
rm <string>
man <string>
git add .
clear
sudo vim <file>
wget <URL> --no-check-certificate
docker run -p <string>
grep <string>
ls
mkdir <string>
cp <string>
git fetch
vim <file>
git status
cd
ls
git push -u <string> master
ls
git init
git status
ps
git add .
cd <string>
cd <string>
fc
cd ..
sudo apt-get install -y <string>
cd <string>
kubectl rollout status deploy imc-controller -n <string>
sudo apt-get install <string>
ls
curl -o- <URL>
sudo localectl set-x11-keymap <string>
git branch -M <string>
ls
ssh-add <directory>
sudo npm install -g <string>
cd <string>
ls
git status
sed -i <directory>
cd <directory>
ls
cd <string>
which <string>
wget -O <file>
cd <string>
pacman -Rs <string> --noconfirm
vim <file>
vim <file>
python3 <file>
ls
mkdir <string>
ls
cd <string>
tr <string>
ls
cd <string>
sudo git pull origin master
git checkout <string>
cd <string>
systemctl status <string>
rm -r <string>
bash
rm -rf <string>
git pull
rm <string>
exit
git add .
sleep <number>
cd <string>
ls
mkdir <string>
rm <string>
clear
git push -u <string> master
ls
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
rm -rf <string>
ls
sudo apt install <string>
git commit -m <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
grep <string>
vi <file>
mkdir <string>
lsblk
rm -r <string>
docker-compose up -d --build
grep -w <string>
done
ls
git init
cd <string>
python3 <file>
vim <file>
chmod u+x <string>
git push
docker logs <file>
xargs grep -nH <string>
ls
npm install <string>
git add <string>
git init --initial-branch <string>
ls
ls
ip a
git commit -m <string>
mkdir -p <string>
git fetch
sudo python3 <file> install
python3 <file>
cd <string>
cd <directory>
npm install <string>
cd <directory>
cd <string>
head -n <string>
ls
ls
git init
open <string>
make clean
ls
clear
read -n <number> -s -p <string>
sudo userdel <string>
dir
ls
git checkout
ps -u <string> # lists your processes
cd <directory>
git tag <string>
docker build -t <string>
ls
clear
ls
ls -lAF
ls
sudo shutdown now
cd <string>
git restore --staged <string>
ssh <string>
sudo vim <directory>
cd <directory>
ls
vi <file>
vim <file>
cat <string>
git commit -m <string>
exit
fg
cd
npm install
sudo curl <URL>
cd <string>
find . -type <string> -exec <string> -i <directory>
sudo -i
ls
cd <string>
byobu -v
ls
apt update
sudo rm -rf <string>
fg
grep -rl <string>
sudo python <file>
sudo raspi-config
pico <file>
docker rmi -f <string>
grep -v <string>
npm update
ls
pwd # tells you where you currently are
npm run coverage
a
ls -ltrh
cp -r <directory>
git status
ps
mv <string>
ls
sudo tcpdump <string>
exit
cd <directory>
cd <string>
sudo apt-get update
ls
rm -r <string>
sudo pacman -Rsn <string>
sudo pip install <string>
cd
chmod +x <string>
git add .
ls
pkill <string>
sudo apt-get install <string>
cd ..
git bisect good <string>
cd <string>
vim <file>
rm -rf <string>
script/build.sh
dpkg --info
vim <file>
vi <file>
exit <number>
git pull
sed <directory>
git push -u <string> master
cd <directory>
git merge <string>
cd <string>
sh
vi <file>
git pull origin master
rm <string>
git rm --cached <string>
sudo rm -rf <string>
find . -empty -type <string> -print -deletefind <string> -empty -type <string> -print -delete
sudo firewall-cmd --state
git config --global <file> <file>
ls
exit <number>
cd <directory>
vim <file>
mkdir <string>
curl <URL> -u <string> -d <string> -d <directory> -d <directory> -d <string>
source <string>
vi <file>
clear
ls
git diff
cd <string>
clear
cd <directory>
less <string>
lsof -p <number>
sudo wgnord <string>
ls
systemctl restart <string>
cp -r <directory>
apt list --upgradable
ls
git push
ls
cp -R <string>
cd ..
git branch -D <string>
cd <directory>
clear
clear
sudo apt update
cd <directory>
sudo apt-get upgrade --fix-missing
cd <string>
cd <string>
unset color_prompt force_color_prompt
cd <string>
find . -empty -type <string> -print -delete
chmod
git remote add origin <URL>
cd <directory>
sudo apt-get install -f
mv <string>
sudo find <directory>
git init
scp -r <string>
sudo sysctl -w <string>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
vi <file>
clear
ping <file>
git push -u <string> main
docker-compose down <string>
base64
git commit -m <string>
cd
<directory> -m <file>
ls -a
man <string>
sudo apt-get update
pwd
sed -i <directory>
git push -u <string> master
python3 <file>
pwd
ls
print <string>
sudo pacman -U <file>
time <string>
printf <string>
git add.
cd <directory>
git commit -m <string>
screen
sudo apt-get update
git config --global <file> <string>
pwd
exit <number>
curl --compressed <string>
service --status-all
cd <string>
git push
find . -name <file>
exit
tail +n # Print nth line from file.
rm -m <string>
python3 <file>
docker-compose down <string>
history -a
exit
mkdir <string>
sudo nohup mongod --fork --logpath <directory>
cd <directory>
cd
ls -ltr
exit
ls
git remote set-url origin <string>
sudo apt update
rm -rf <string>
ls
service apache2 reload
git status
exit <number>
cd ..
ls
history -c
git commit -m <string>
cd <string>
ls
git ls-remote <string>
wc -l
less <string>
npm init
ls -al
rm -r <string>
git pull origin development
git push origin master
git clone <URL>
cd <string>
awk <string>
sudo dpkg -r <string>
git pull upstream <string> --no-edit
sudo apt install <string>
top
sudo shutdown -r <string>
cd..
cd <directory>
less <string>
cat <string>
cd ..
cd <string>
clear
git status
ls
git
ls
ls
docker
exit
sed -i <directory>
cd <string>
exit <number>
cd <directory>
ls
git pull
ls
clear
git commit -am <string>
cd <directory>
ls
ls -l
rm -rf <string>
git config --global <file>
ls
git push
history tail
read <string>
done\
grep -win -C <number>
cd <string>
init
history -r
ls
sudo apt-get update
cd ..
sleep <number>
fg
exit
cd <string>
sudo apt install <string>
git init
mkdir <string>
history -n
ls
ls # lists your files in current directory, ls <dir> to print files in a specific directory
cd <directory>
clear
ls
sudo chmod <number> <directory>
cd <string>
cat <string>
vi <file>
fg
sleep <number>
cd <string>
export <string>
curl <string>
su
ls
ls
file
fg
vim <file>
git pull --all <string>
rm -r
nano <file>
exit
ls
clear
source <file>
bash <file>
cat <string>
sudo systemctl start <string>
git add .
ls
pacman -S <string>
cd ..
git merge
df -lh
exit
vi <file>
sudo systemctl restart <string>
ls
sudo dnf install -y <string>
ls
cd <directory>
sudo apt update
cd <string>
vim <file>
git commit -m <string>
git status
sudo usermod -a -G <string>
cd <string>
passwd
php -f <file> -- <string>
git status
ls
ls
sudo apt install <string>
cd ..
ls
cd <string>
cd <string>
cd <string>
touch <string>
python3 <file>
vi <file>
cd <string>
python3
clear
vi <file>
nc -l <number>
wc -l
ls
exit <number>
ls
git push -f
vim <file>
mysql -h <string> -u <string> -p <string>
git remote -v
ls
sed -e <directory> -e <directory>
cd ..
git --v
sed -i <string>
cd
git branch
sudo groupadd <string>
touch <string>
git add .
ls
vim <file>
sudo sed -i <directory> <file>
docker tag <string>
cd <string>
git grep -l <string>
nano <file>
vim <file>
time
sudo ip route add <string>
mv <string>
sudo pacman-key --lsign-key <string>
wget <URL>
cd <string>
git branch -M <string>
sed -i -e <string>
git add <string>
sudo python <file>
git commit -m <string>
git commit
rm -rf <string>
sleep <number>
sleep <string>
git add .
cd <string>
ps -ae
fg
ss
ls
git config --get-all
ls++ -a
git commit -m <string>
cat <string>
ls
git add -v <string>
sed <directory>
wc -l
tail -f <directory>
cd ..
nano <file>
git commit -m <string>
tmux a -t <string>
find . -name <file> -exec <string>
rm <directory> -r
cd
tmux
sudo apt-get install <string>
ls
sudo apt update
pwd
cd
ping <string>
ls
git pull
ls
exit <number>
bash
code <string>
ls -ltr
sudo rpm -Uvh <string>
git reset --hard <string>
php --version
ls
git commit
cd <string>
sudo pip3 install --upgrade <string>
sudo apt-get install <string>
git diff
docker ps -a --format <string>
tail -f <string>
ls
read -s -n <number>
sudo vi <file>
cd <string>
cd ..
ls
sudo usermod -aG <string> <string>
cd <string>
find . -empty -type <string> -print -delete
vim <file>
sudo ln -s <directory>
cd ..
chmod +x <string>
ls
git status
cd ..
ls
npm publish --access <string> --scope=<string>
clear
clear
sudo apt-get upgrade -y
sudo vim <file>
sudo su
more <file>
mkdir
set -e
ls
mv <string>
git commit -m <string>
rm <string>
vi <file>
head
cp <string>
sudo apt-get install -y <string>
sudo usermod $username -s <directory>
cd <string>
cd <directory>
sed -e <directory>
systemctl --help
cut -f <number> -d <string>
cd <string>
python3 <file>
git remote add origin <URL>
rm <directory> -fr
git add .
ls -a
update-alternatives
git push
docker
ls++ -a
cd <string>
vi <file>
rmdir <string>
apt-get install nodejs -y
cd
head -y <file>
grep <string>
git rm <string>
cd
git clone <URL>
git push -f
code
ls
fg
ls
ls
docker
git status
cd <string>
find . -empty -type <string> -print -deletefind <string> -empty -type <string> -print -delete
sudo apt update
git branch -a
ip a
npm run start
git add <file> -f
<directory> <string>
sudo aptitude install <string>
git commit -m <string>
ls
ls
git remote add origin <URL>
sudo rm -r <string>
cd ..
du -sh <directory>
ls -la
vim <file>
mv <string>
sed -i <string>
cd
vim <file>
cd
cd ..
git commit -m <string>
grep
cd ..
git stash pop
sort -u <string>
host <string>
fg
git add <string>
sudo apt-get install <string>
kubectl rollout status deploy autoscaler -n <string>
ls
vi -t <string>
cp <string>
touch <string>
rm -f <string>
code <string>
ls
sed -n <string>
git rebase <string>
ls
git status
code .
cd <directory>
grep <string>
ls
cd <string>
brew install <string>
sudo apt remove <string>
ls
cd <string>
find . -type <string> -exec <string> <directory> {} +
sudo xbps-remove <string>
vim <file>
htop
patch <file>
ls
vim <file>
sudo docker exec <string>
rm <string>
sudo journalctl -u <string> -f
cd ..
cd <string>
ls -l
ls
clear
ls
read -p <string>
sort
cp -v <string>
git commit -m <string>
ls
head -n1
sudo apt update -y
cat <string>
ls
ls
ls
git status
man <string>
git commit -v -a -m <string>
git status .
clear
ls
cd <string>
ls
cp <string>
cd <directory>
cd ..
sed <directory>
brew install <string>
cd <string>
cd <string>
ls
clear
sudo sed -i <directory> <file>
sudo chmod <number> <directory>
git clone <URL>
git status
ls
ls
sudo yum install <string>
git init
ls
npm install -g <string>
apt-get install -y <string>
ls
ls
git commit -m <string>
diff <file> <file>
cd ..
sh
cd <string>
vim <file>
rvm <string>
killall <string>
clear
exit <number>
cd <string>
cd <directory>
sudo apt-get -f <string>
cd <directory>
cd ..
sudo mkdir -p <directory>
ls
uniq
sudo pacman -S <string>
cd <directory>
sudo pacman-key --populate
grep <string>
cd <string>
cd <directory>
vim <file>
rm -rf <string>
ls
clear
read -r <string>
ls
cd <string>
curl -T <directory> <string>
git status
printf <string>
git pull
sudo sed -i <directory> <file>
ls
git clone <URL>
kill <number>
cp -r <directory>
rm -rf <string>
python3 <file> runsslserver <number> --certificate <file> --key <file>
find . -empty -type <string> -print -delete
touch <string>
cp -r <directory>
grep -r <string>
git rm <string>
sudo rm -r <string>
ls
ls
sudo poweroff
git --help
sudo su -
cd ..
cd <string>
git status
docker run <string>
ls
bash
git add .
cd ..
git push origin
cat <string>
cd
cd <directory>
ssh-keygen
sudo reboot
vi <file>
vim <file>
ls
brew update
grep <string>
ls
cd ..
kill
ls
sleep <string>
ls
mv <string>
mkdir <string>
sudo stop uwsgi
vim <file>
curl -i -s <URL>
git status
ls
ls
sed -E -e <directory>
git config --list
rm -f <string>
cd <string>
ssh <string>
vim <file>
git add <string>
sudo udevadm control --reload-rules
vim <file>
df # shows disk usage
ls
done
sh <file>
clear
cd <string>
vim <file>
rm <string>
vim <file>
vi <file>
cd <string>
ssh dirlic@10.18.0.39 -p <number>
git clone <URL>
cd <string>
df -h
cp -ip <string>
sudo xbps-install <string>
head -n <string>
setg RHOSTS <file>
ip a
sed -e <string> -e <directory> -e <string> \
cd ..
ls
chmod <number> * -R
reset
sudo sed -i <directory> <file>
rm -rf <string>
cd <string>
fg
git push origin <string>
systemctl restart <string>
apt full-upgrade -y
cd
sudo ufw status
git status
ls
mv <string>
cd <string>
git init
ls
sudo systemctl status <string>
zeus.polsl.gliwice.pl - <number>
git commit -m <string>
mkdir <string>
sudo setfacl -d -m <string>
cd <directory>
cd ..
ls
su root
npm install --save <string>
npm start
clear
top
python2
ls
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
cd <directory>
git remote add origin <URL>
cd..
sudo sed -i <directory> <file>
unset color_prompt force_color_prompt
cd <string>
cd <string>
vim <file>
ls
ls
vi <file>
python3 <file>
sudo cp <string>
ls -1 <directory>
ls
npm install --save <string>
cd <string>
ls
git fetch upstream
cut -f <string>
python3 <file>
ls
grep -i <string>
cd <directory>
ping <string>
fg
script/build.sh
pwd
exit <number>
vim
sed -n <string>
vi <file>
vim <file>
clear
git commit -m <string>
exit
setg RHOSTS <file>
sudo poweroff
touch <string>
cd <directory>
cd ..
vi <file>
cd <string>
sudo apt-get install software-properties-common -y -qq
ls
git commit -m <string>
git status
mv <string>
docker build -t <string>
git add .
pwd
git init
git push -u <string> master
git pull origin master
sudo apt-get update
ls
ls
ls
cd <directory>
cd <string>
ls -latr <directory>
cd <string>
git push -u <string> master
clear
sed -n <string>
ls
git status
grep <string>
ls
sleep <number>
sudo mkdir <directory>
else\
docker ps
sudo apt-get install <string>
blaze-from-html -v <string>
git commit
sudo nmcli <string>
cd <string>
git log
cd ..
cd <string>
ls
vim <file>
cd
sudo lvcreate -n <string> -l <string>
python3 <file>
do\
sudo apt-get install <string>
git clone --depth <number> <URL>
sudo apt update
sudo apt-get install <string>
cd <directory>
chmod <number> <string>
cd <string>
clear
ls
clear
ls
cd <directory>
vi
git clone <URL>
awk -F\" <string>
cd <string>
cd <string>
git add .
git pull origin main
export <string>
ls
which <string>
git push
ls
ls -la
git add
cd <string>
git push origin master
cd <string>
cd ..
ls
vi <file>
clear
ip link
read -r -p <string>
sudo umount <directory>
cd <string>
ls
find . -type <string> -exec <string> <directory> {} +
cd <string>
clear
git status
ls
sudo rm -rf <string>
tar -xf <string>
vim <file>
python3
wget <URL>
npm install <string>
docker-compose up -d --build
git push origin main
ls
vim <file>
ls
sudo cp <string>
clear
git pull
git add .
fg
touch <string>
ls
sudo apt autoremove
ls -ca
git add .
cd <directory>
git status
find . -name <file>
exit
vim <file>
mount -B <directory>
cut -d',' -f2 <file>
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cd <string>
sudo apt install <string>
ls -l
ls
vim <file>
cd <string>
npm-recursive-install
nano <file>
ls
git log <directory> --oneline
diff <file>
git remote add origin <URL>
exit
cd ..
git log
ls
git commit
sed <directory>
find . -name <string> -type <string>
ls -lrt
cd
git add -A
chsh -s <string>
sudo docker pull <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
export <string>
npm init -y
hostname
pwd
cd <string>
sudo -s -u <string> -H
sudo systemctl restart <string>
ls
clear
exit
rm <string>
mkdir <string>
ssh <string>
ls
sudo restart -h
ls
cd <string>
cd ..
git status
sudo apt purge <string>
ls
codedown javascript > <file>
ls
ls
vim <file>
ps -ef
git add -A
ls
python3 <file>
git commit-tree <string>
ls
npm install
cd <string>
clear
python3 <file>
npm run start
fg
read <string>
ls
else\
cd ..
git reflog
cp <string>
mkdir <string>
tmux
clear
ls -la
git add .
cd <string>
ls
git init
ps aux
npm i
cut -d: -f1 <string>
git status
pwd
<directory> <directory>
clear
git diff
vim <file>
cd ..
ls
cd ..
<directory> <string>
git commit -m <string>
vim
sudo pacman -Qs
tar xvzf <file>
cd <directory>
git status
exit
git status
history
vim
git add .
git push
git remote add origin <URL>
cd <string>
sudo docker run -d --restart <string> --network=<string> -p <string>
cp <string>
cd <string>
ls
git push origin main
sudo ln -s <directory>
vim <file>
find Personal -name <file> -type <string> -print0
chmod +x <string>
ps aux
cd <string>
python3 <file>
ls
grep <string>
git status
git add .
git config --global <file> <string>
git reset --hard <string>
git commit -m <string>
ls
rm <string>
ls
ls
git status
cd <directory>
cd <string>
cd <directory>
cd <string>
gsort -h
mkdir <string>
sudo ln -s <directory>
grep <string> -r
exit <number>
sudo python3 <file> install
ls
ls
clear
cat <string>
ls
chmod <string>
vi <file>
vim <file>
rm -fr -- <string>
sudo python <file>
cat <string>
read -n <number> -s
mkdir <string>
tail -f <directory>
ls
ls
fg
python3
git reset --hard
cd <string>
sudo vim <directory>
ls
git status
sudo useradd -m -g <string>
cd <string>
sudo nano <file>
git clone
git rm --cached <string>
vi <file>
sudo sed -i <directory> <file>
docker ps -a
ls
cd ..
sudo systemctl stop <string>
wget <URL>
ls
printf <string>
cd <string>
npm install netlify-cli -g
git init .
find -ls
ssh <string>
cd <string>
ls
vi <file>
cd <string>
ls -la <directory>
cd <string>
cd <string>
git commit -m <string>
cd <directory>
cd <directory>
npm uninstall --save <string>
docker container run -d --name <string>
sudo apt-get install iptables -y
git status
git push
cd <string>
git checkout <string>
which <string>
mkdir -p <string>
curl -q <URL>
cp <string>
ls
ps aux
ls
git init
python3 <file>
exit <number>
cd
sudo chmod <number> -R <string>
sudo su -
git status
vim <file>
vi <file>
npm init
cd ..
cd <directory>
vim <file>
cd <string>
ls
ls
cd <directory>
git push -u <string> master
git commit -n <string>
git commit -m <string>
git branch -M <string>
git clone <URL>
sudo apt-get install -y <string>
sudo rm -r <string>
cd <directory>
xrandr --output <string> --mode <string> --right-of <string>
cd -
clear
journalctl -xeu <file>
cd <directory>
cd <string>
exit
vim <file>
ls
clear
ls
ls
ls
reboot
cd <directory>
wget -qO- <URL>
clear
grep -v <string>
sh <file>
sudo apt-get update
git commit -m <string>
python3 <file>
cd <string>
done
vi <file>
ls
pwd
top
sort -hr
git commit -m <string>
sudo systemctl status <string>
ls
clear
ls
ls
sudo python <file> --cascade=<file> <number>
ls
vi <file>
ls
ls
python3 -m <string>
sudo service nginx reload
grep <string>
sudo mv <file>
cat <string>
git remote add origin <URL>
git status
sudo env <string>
cd ..
docker-compose up -d --build
su root
ls
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
unset <string>
ls
sed -n <string>
sudo vi <directory>
git commit -m <string>
ps axfu
sudo apt-get install -y <string>
ls
sudo dpkg -i <file>
cd <string>
rm <string>
cut -d: -f1 <string>
ls
sh
rm <string>
cp <string>
sudo wget <URL>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git status
cd <string>
ls
history -a
cd <string>
vim <file>
ls
cd
lsblk -O
cd <string>
ftp 198.19.255.136
sudo lighty-enable-mod <string>
nohup node <file>
cp -r <directory>
git push -u <string> master
sudo snap install --classic <string>
vi <file>
vim <file>
ls
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
sudo apt install -y <string>
git co -- <string>
clear
ftp <string>
open <string>
read -rp <string> <string>
ls
ls
cd <string>
read -p <string>
ls
ls
cat <string>
git status
cd <string>
more <file>
find . -type <string> \( -name <string> -o -name <string> -o -name <string> -o -name <string> -o -name <string>
mv -r <directory>
rm <string>
cd <string>
git commit -m <string>
ls
sudo rm -rf <string>
vim <file>
ls
cd <directory>
cd <string>
ls -tlr
sed -i <directory>
vim <file>
python3 -m <string> install --user
python3 <file>
sudo reboot
ls
ls
git branch -D <string>
git clone <URL>
sudo apt-key --keyring <directory>
clear
vi <file>
mkdir <string>
pwd
git push -u <string> master
npm uninstall -g <string>
tr -d <string>
clear
cd <string>
ls
top
read -p <string>
cd <string>
cd ..
ls -l
curl -vk <URL>
vi <file>
git pull
sudo shutdown -h <string>
read -r <string>
init <number>
touch <string>
cp <string>
sed -e <directory>
python3 <file>
ls
sudo sudo -u <string>
vi <file>
sudo apt-get install -y <string>
printf <string>
git branch -M <string>
cd <string>
git remote set-url origin <string>
git clone
git add .
docker ps -a
curl <string>
git commit -m <string>
vim <file>
jq <string>
sudo umount <directory>
sudo iptables -I <string> -p <string> --tcp-flags <string>
pwd
git config --list
ls
ls
git commit -m <string>
fg
cat <string>
find . -depth -exec <string> <string>
cat <string>
ls
cd <string>
git pull
clear
git init
apt-get install <string>
cd ..
exit
git commit -m <string>
npm http GET <URL>
cd <string>
gunzip <file>
ls
npm i <string>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
git stash
cd ..
cp -r <directory>
ls -al
cd <string>
read -p <string>
exit
find <directory> -iname <file> -type <string> -exec <string> -c <string>
cd <directory>
cd
npx create-react-app <string>
ssh <string>
vim <file>
cd ..
ls
sudo apt-get install <string>
cd ..
tail -f <string>
rm -r <string>
ls
ls
ln -s <string>
git status
git commit -m <string>
head -1 <file>
kubectl <string>
vim <file>
pwd # tells you where you currently are
git add -A
ls
export <string>
exit
setg RHOSTS.*
open <string>
ls -ltr
cd <string>
ssh <string>
exit
man <string>
cd ..
cp -r <directory>
ls
nano <file>
clear
ls
git status
git add <string>
kubectl <string>
ps aux
find . -empty -type <string> -print -delete
ls
cd ..
ufw status
grep -iE <string>
vim <file>
cat <string>
cd
python3 -m <string>
pwd
ls
sleep <number>
ls
cd <directory>
cd <string>
clear
cd ..
curl <string>
ls -al
cd <string>
find . -name <file> -type <string> -print -delete
code .
reset
psql -h <string> -U <string> -d <string> -L <file> -a <string>
cd ..
exit
python3 <file>
git reset --hard
apt-cache policy <string>
cd <string>
vi <file>
sudo dd <string>
awk <string>
read -p <string>
git pull
wget -q -O - <URL>
git push origin <string>
cd <string>
git push
cd <string>
ls
unset color_prompt force_color_prompt
ls
cd <directory>
source <file>
open <string>
npm install -g <string>
cd <directory>
git commit -m <string> --no-verify
ssh-keygen -t <string>
vim
screen
sudo tee <directory>
ls
exit
git status
vim
sudo start uwsgi
git check-ignore -q <string>
exit
cat <string>
git push origin master --force
git commit -m <string>
git push -u <string> master -f
source <directory>
cd <string>
less
sudo supervisorctl <string>
cd <string>
tail -f -n200 <directory>
git branch -a
cd <string>
sudo chmod a+wr <directory> -R
cat <string>
sudo python <file>
ls
git init
ls
sudo find . -name <string>
sudo apt install <string>
cd <string>
sed <directory>
sudo mysql
vi <file>
ls -a
ls
sort -uf <string>
cd <string>
systemctl status <string>
grep * -e <string>
rm -r <string>
rm -r <string>
clear
pkill <string>
git push
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
cd <string>
git status
vim <file>
cd ..
cd <string>
npm install <string>
ls -ltr
cd ..
sudo apt install <string>
cd <string>
ls
git status
unset color_prompt force_color_prompt
vim <file>
ls
python3 <file>
rm <string>
history -r
vi <file>
tar -xzf <string>
cd.
chmod +x <string>
ls
exit <number>
npm i <string>
clear
ls
exit <number>
fg
git clone <URL>
ls -lCl
vim <file>
ls
setg RHOSTS <file>
ls
clear
cat <string>
cd
sudo apt-get install <string>
git add .
cd <directory>
su root
cd ..
git checkout master
vim <file>
cd <string>
vim <file>
clear
chmod u+x <string>
help
cd <directory>
less <string>
vim <file>
cd <string>
top
clear
xrandr --listactivemonitors
clear
cd <string>
read -rp <string> <string>
ls
top
python3 <file>
rm <string>
vim <file>
ls
cp <string>
sudo apt-key add -
git pull
tail -40 <string>
rm <string>
ls
ping <file>
chmod u+x <string>
clear
ls
cp -f <string>
cd
which <string>
vim <file>
ssh <string>
git add <string>
cd ..
python3 <file>
sudo apt-get update
ls
cp -R <string>
ls
nano <file>
ls -al
cd ..
sudo xbps-remove <string>
apt install -y <string>
touch <string>
ls
sed -e <directory> -e <directory>
exit
cd <directory>
ls
git init
git commit -m <string>
ls
ls
ls
git add <string>
rmdir <string>
ls
sudo nala install <string>
sudo apt-key add -
ls
rm -r <string>
git pull origin <string>
npm run test
cd <string>
git rebase -i <string>
cd <string>
vim <file>
sudo sed -i <directory>
exit <number>
git push
docker-compose up -d --build
ls
sudo pip install <string>
vi <file>
npm install <string>
head -n <string>
git add -v <string>
fg
open <string>
ls
history
cat <string>
wget -q -O <file>
cd <string>
sudo tar -xvf <file> -C <directory>
clear
mkdir <string>
rm <string>
git push origin master
grep -wc <file>
ls
cd ..
mv <string>
df -lh
ls
clear
npm install
vim
ps aux
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
git difftool -y <string>
git status
vim <file>
git remote -v
ls -all <directory>
exit
git pull origin <string>
git add <string>
ls
npm config set prefix <string>
git add <string>
cd <string>
cd ..
ls
git checkout <string>
dir <string>
sed -E -e <directory>
git add <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
cat -n <string>
vi <file>
cat <string>
git add .
shutdown
ls
cd <string>
cd <string>
grep <string>
tmux a
cd <directory>
clear
ls
ls
ls
cd -
cd <string>
rm <string>
fg
sed --version
cd ..
kubectl apply -f <string>
vim
wc -c
mvn install:install-file -Dfile=<file> -DgroupId=<string> -DartifactId=<file> -Dversion=<string> -Dpackaging=<string> -DgeneratePom=<string> -Dspring.test.skip=<string> -Dspring.profiles.active=<string>
ls -ltr
sudo dnf config-manager --add-repo <URL>
git submodule update --init --recursive
cd ..
ls
git add.
nc <number> <number>
wget -O <file>
ls
touch <file>
find . -iname <file>
grep <string>
curl <string>
mkdir -p <string>
ls
cd <string>
pwd
curl --silent --location <URL>
kubectl get pods -n <string>
sudo rm -rf <string>
cd <string>
ls
git add .
cd ..
git commit
uniq -i -c
mv <string>
curl --fail -s <string>
git commit -m <string>
tail -f <string>
df
vi <file>
sudo chmod <number> <string>
cd <directory>
git push -u <string> main
cd <directory>
vim <file>
fg
sed -i <directory>
git commit -m <string>
cat <string>
git add .
ls
git commit -m <string>
git checkout <string>
git commit -m <string>
ls
git commit -m <string>
rm -f <string>
vi <file>
vim <file>
cd <directory>
ls
su -
free
cd ..
git push
grep -i <string> >files
ls
ping <file>
du -ach
git init
uname -v
sudo python <file>
node <file>
chmod +x <string>
ls
rm -f <string>
git reset HEAD^
ls
nano <string>
docker-compose up -d
sudo vi <directory>
git init
git checkout <string>
cd <directory>
ls
python3 <file>
chmod u+x <string>
ls
cd <string>
cp <string>
fg
git commit -m <string>
vi <file>
git add <string>
cd <directory>
vi <file>
ls
git init
mv <directory> -r <directory>
nano <file>
sudo vim <directory>
chmod <number> <string>
clear
cat <string>
cd <string>
cp <string>
sudo chroot <string>
grep <string>
cd <directory>
git clone --depth <number> <URL>
tail -f <string>
source <directory>
mkdir <string>
npm run dev
exit
cd ..
sudo -V
ls
git commit
grep <string>
npm audit fix
git commit -m <string>
sudo apt-get install <string>
cp <string>
git add
sudo apt update
rm <string>
export <string>
git config --global <file> <file>
grep -i <string> >files
cd <string>
git add -v --dry-run <string>
ls
git add .
ls
git fetch origin\
less <string>
exit
python3.11 <file>
clear
cd <string>
less <string>
sed -i <directory>
print <string>
grep -i <string>
git status
grep <string>
ls
sudo apt install <string>
cd <string>
ls
cd ..
ls
git remote add origin <URL>
capsctrl <directory> & disown
exit <number>
exit
npm i <string>
ls
pwd
ls
top -p <number>
chmod +x <string>
mvn compile
sudo tail -f <directory>
git add .
sudo apt-get install <string>
cd <directory>
grep -i <string> >files
chmod -R <number> <directory>
git restore <file>
cd
nano <file>
cd <string>
ls
chmod <number> -R <directory>
git add <string>
ps -ef
touch <string>
grep <string>
git remote -v
tmux a
ls -la
git status
sudo shutdown
sync
ls -l
ls
cat <string>
sudo python
wc -c <file>
git commit -am <string>
docker-compose -f <string>
clear
curl -sS -H <string>
ls
date
ls
less <string>
git adog
ls -l
less <string>
python <file> runserver 0.0.0.0:2016
cd <string>
exit
head <filename> # outputs the first lines of file (default: <number> lines)
sudo nala install <string>
rm <string>
ls
ls
grep <string>
ls
mv <string>
sed -i <directory>
fg
ls
sed -e <string> -e <directory> -e <string> \
cd ..
ls
systemctl stop <string>
chsh -s <directory>
git reset <string>
find . -name <file>
set -u\
sudo rm -rf <directory> <directory>
cd ..
ls
ls
cp -v <string> <directory>
rm <string>
cd <string>
cd <directory>
git push origin master
vim <file>
sudo tar --extract --file=<string> --strip-components=<number> --directory=<string>
git push
ls
ls
rm -r <string>
ls
ls
ls
rm -rf <string>
more
ls
sudo systemctl start <string>
ls
sudo python3 <file>
alias <string>
ls
fg
sudo pico <string>
sudo systemctl restart <string>
systemctl start docker
strings <file>
ls
vim <file>
cd ..
git add .
grep -a -i -E --no-filename <string> */*.log*
ls
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
sudo mkswap <directory>
curl <string>
sudo ldconfig
clear
git push -u <string> main
cd <string>
vim <file>
ls
sleep <number>
ls -lA <directory>
git add -v -f <string>
ls -al
chmod +x <string>
git commit -m <string>
ls
git status
mkdir <string>
clear
docker images
git status
git status
rm -rf <string>
open .
sudo apt-get install <string>
git init
cp -r <directory>
ls
brew update
git pull origin master
cd ..
cd <string>
udevadm info <directory>
cd <string>
cat <string>
ls
cp <string>
cat <string>
tail -f <directory>
cd <string>
curl <string>
vim <file>
ls
git commit -m <string>
exit
lsblk -f
git status
fg
telnet <string>
cd <string>
ls
env
git add <string>
git clone <URL>
ls
cd ..
nano <file>
exit <number>
rm <string>
vim <file>
done
then\
ls
cd ..
cd <string>
ls
git touch bob
ls
exit
ls
mkdir <string>
ls -la
ls
sudo pacman -S <string>
clear
sudo aptitude install <string>
grep -iIHrn --color=<string> <string>
cd
ls -alF
unset <string>
ls
find . -empty -type <string> -print -delete
git remote
cd <string>
ssh -p <string> user@host # connects to host on specified port as user
cd <string>
cd
cd <directory>
ls -a
npm install
git commit --all -m <string>
git checkout master
grep <string>
cd ..
sudo rm -rf <string>
sudo apt update
ls
du -hs
grep <string>
cd <directory>
sudo chmod <number> <directory>
sudo systemctl enable <string>
<directory> -c <string>
git add .
update
exit
clear
more <file>
type <string>
npm run test:watch
cd <string>
capsctrl <directory> & disown
git push origin master
service apache2 reload
cd <string>
cd <string>
cp <string>
exit
git add <string>
python3 <file>
rm -rf <string>
curl <string>
ls
sudo su
nano <file>
touch <string>
cd ..
uniq
mount --types <string> overlay --options <string>
ls -la
cd ..
cd
curl <string>
vi <file>
git checkout <string>
ls
scp <string>
cd <string>
cd <string>
grep <string>
diff <file> <file>
sed -i <directory>
clear
cd <string>
cd <directory>
sudo reboot
ls -ltr
git status
cd <directory>
ls -la
ssh-add <directory>
cd <string>
cd <directory>
cd ..
git config --global
cd <string>
sudo curl -o <directory>
read <string>
exit
clear
git add <string>
vi <file>
curl --location <directory>
cd <string>
docker build --tag <string> -f <string>
fg
cat <string>
exit <number>
git init
ls
then\
ls -alrt <string>
ls
ls
cd <string>
git pull origin development
npm audit fix -f
clear
ssh dirlic@10.18.0.39 -p <number>
cat <string>
cat <string>
ls
fg
docker rm -vf <string>
cd <string>
ip a
exit
npm run dev
ls
clear
cd <string>
history -c
ls
cd
exit
sort
chmod +x <string>
git config --unset <file>
git add --all
npm -v
sudo sed -i <directory> <file>
cd ..
git add .
grep <string>
tail +x # want to display all the lines from x to y. This includes the xth and yth lines.
sudo nginx help
su -
vim <file>
cd ..
man <string>
source <file>
ls
cd ..
cat <string>
clear
vim <file>
mkdir <string>
sudo inxi -v <number> -AGN
sudo nano <file>
docker-machine rm -y <string>
sudo chmod -R <number> <string>
cd <string>
ls
cd ..
sed <directory>
rm -r <string>
clear
sudo apt install <string>
ls
cat <string>
vim <file>
cd <directory>
sudo
vim <file>
open <string>
sudo systemctl restart <string>
cd <string>
cd <string>
git clone <URL>
ls
git push
git commit -m <string>
ls
rm -rf <string>
rm -rf <string>
git status
export <string>
apt-get -y <string>
cd <string>
python3 <file>
git commit -m <string>
npm install
cd <string>
mv <string>
git commit -m <string>
git commit
git add .
rm <string>
ls
ls
vi <file>
awk -F'>' <string>
cd <string>
git branch view
setg RHOSTS <file>
unset color_prompt force_color_prompt
sudo apt-get update
git push
touch <string>
cd <string>
exit
cat <string>
find . -size <string> -a -print -a -exec <string> -f <string> \
git push
cd ..
sudo apt-get update
npm i <string>
cp <string>
clear
cp <string>
apt-get upgrade
sudo docker logs -f <string>
cd <string>
cd <string>
uname -a
mv <string>
sudo sysctl -q -w <string>
clear
ls
cd <string>
git remote add origin <URL>
ip a
cd <string>
git add <string>
cat <string>
ls
vim <file>
git please
git status
clear
cd <directory>
git pull
ls
pwd
sudo python <file>
cat <string>
npm install -g <string>
ls -a
source <file>
cat <string>
ls
sudo sed -i <directory> <file>
cd <string>
sudo rm -f <directory>
ls
ls
cp -v -t <directory>
cd <string>
sed -i <directory>
cp -v <string> <directory>
lsof
touch <file>
git clone <URL>
sudo git config --system <file>
git status -v
vim <file>
fg
cd <directory>
pwd
sudo npm install
sleep <number>
cd ..
cd <string>
clear
vim <file>
git commit -m <string>
export <string>
git pull
ls
export <string>
cd <string>
git log
cat <string>
nano <file>
sed <directory>
ls
cd <directory>
source <string>
grep <string>
sudo usermod -aG <string> $USER
rm -rf <string>
ps -ef
pwd
mv <string>
docker run -itd --name <string> -p <string>
cd <string>
ls
ls
sudo apt-get update
xrandr --output <string> --off
wget <URL>
sudo shutdown now
ls
git commit -m <string>
exit <number>
finger <user> # displays information about user
grep <string>
vim <file>
ls -ltr
htop
grep <string>
cd <string>
curl -L <URL>
cd <directory>
sudo pacman -Syu
ls
source <string>
git pull
mkdir <string>
touch <file>
which <string>
cd <string>
rmdir <string>
make -j <string>
git push -u <string> master
git push
sudo journalctl -u <file>
cd <string>
tmux kill-session -t <string>
sed <directory>
clear
cd ..
git status
ls
git add .
cd
read -r <string>
find . -size <string> -a -print -a -exec <string> -f <string> \
cd <string>
cd <string>
sudo sed -i <directory> <file>
cd <string>
sudo make install
rm <string>
ls
mkdir -p <string>
sudo apt-get -y <string>
exit
git commit -m <string>
ls -la
ls
sudo apt-get -y <string>
ls -alh
git remote add origin <URL>
cat <string>
ls
ls -la
grep <string>
cat <string>
mv <string>
ls
git push origin
fg
cd ..
ls
vi <file>
npm list -g --depth=<number>
ls
ls
git config --global <file> <string>
vi <file>
cd <string>
git config --set <file>
cd <directory>
vi <file>
gpg --import <string>
ls
git branch
cd <directory>
nano <string>
cd <string>
sed <directory>
vi <file>
git add <string>
cd
git checkout -b <string>
vim <file>
clear
ls
ls
git add -A
ls
sudo apt-get update
ls
cd <string>
sudo <directory> --config.file=<directory>
grep -a -i -E -o --no-filename <string>
cd <string>
ls
ls
rm <string>
dotnet <string>
nano <file>
tcpdump -i <string> <string>
git merge <string>
ls
git config --replace-all <file>
exit
ls
docker images
git push -u <string> master -f
exit <number>
clear
git commit -m <string>
git add <string>
sudo add-apt-repository <string> [arch=<string> <URL>
cat <string>
clear
cd <directory>
cd <string>
cp -r <directory>
sudo apt update
grep -Eio <string> <string>
ssh dirlic@10.18.0.39 -p <number>
sudo apt install <string>
docker exec -it <string> bash
git add .
git add <string>
ls
ls
cd ..
unset <string>
fg
sleep <number>
npm test
git branch
sed -i <directory>
mkdir <string>
vi -t <string>
git status
su root
cd ..
sudo init <number>
clear
sudo mkfs.ext4 <string>
git status .
sh <file>
vi <file>
ls
wget <URL>
git commit -m <string>
git checkout <string>
vim <file>
sudo systemctl enable <string>
xargs -0 -I <string> cat file <string>
rm <string>
ps # prints a line of information about the current running login shell and any processes running under it
exit <number>
git add <string>
clear
cd
git add .
sudo apt-get -f <string>
mv <string>
git init
cd <string>
touch <file>
rm -rf <string>
ls
npm install
sudo lsof -i <string>
git branch 2> <directory>
clear
read
mv <string>
tail -f <string>
sudo sed -i <directory> <file>
touch <file>
git reset --hard <string>
git push -u <string> master
cd <directory>
cat <string>
cd <string>
git status
du -hs <string>
exit
which <string>
sudo apt update
ls
ls
cd ..
ls
git add .
sudo dnf install -y <string>
ls
vim <file>
docker images
clear
sudo ntpdate -d
cd <directory>
sudo apt-get install -y <string>
ls
vim <file>
ls
exit
htop
cat <string>
pwd
git commit -m <string>
ls
ping
git add <string>
exit
cp <string>
exit <number>
more <file>
docker rm <string>
wget -i <URL>
npm run build
vim <file>
ls
scp -r <string>
exit
sleep <number>
git reset --hard
ls
ls
ls -la
cp -t <directory> -a <directory>
sudo yum install <string>
read <string>
git --oneline
date
ls
grep -i <string>
else\
ls
vi <file>
vi <file>
clear
cd <string>
read -p <string>
ping <file>
history
netcat
ls
cp -v <string> <directory>
git st
ls -G
git log
git add .
cd ..
ls
init <number>
wget --content-disposition <string>
git init
sudo apt-get upgrade
ls
git log
ls
export <string>
cd ..
exit <number>
ls
done
unzip <file>
clear
git commit -m <string>
ls
cd
vi <file>
git commit
fg
vim <file>
cat <string>
mv <string>
cd <string>
cut -f-12,16,17,21- <string>
cd <string>
cat -n <file>
sed <directory>
rm <string>
cd <directory>
git commit -m <string>
sudo service nginx restart
fg
git add <string>
ls -lh
sudo find . -type <string> -name <string>
git add <string>
wget -q -O <file>
python3 <file>
sudo apt-get update
tail -n <string>
git reset
cd <string>
git push
sudo
vim <file>
ps ux
vi <file>
mkdir -p <string>
git config <file> -global <string>
curl -L <URL>
cd <string>
su root
docker-compose up -d --build
vim <file>
mv <string>
ls
cd <string>
git push origin <string>
fg
git commit -m <string>
git status
sudo -s -u <string> -H
sudo apt-get update
cd <string>
git fetch
curl -o- <string> -o- <URL>
exit
code <string>
git clone <URL>
fg
rm -f <string>
git checkout <string>
sed -i <directory>
cd <string>
more <file>
rm <string>
cd <string>
ls
cd <string>
grep <string>
go test
ps # prints a line of information about the current running login shell and any processes running under it
cat <string>
git status
grep <string>
npm uninstall <string>
history
cd <string>
sh <file>
sleep <number>
git commit -m <string>
rm <string>
git status
sudo npm i --global <string>
exit
cd <directory>
npm run bench -- -c <file> -n <file>
cd <string>
git push origin master
ls
cd <string>
awk <string>
docker start postgres-container
npm install querystring --save
curl
ls
cd
rake <string>
patch -p1 <string> <file>
vim
cd
git co HEAD
git push -u <string> master
clear
cd <string>
sudo dnf install <string>
vim <file>
ls
sudo ln -s <directory>
curl -F <string>
vim <file>
exit <number>
cd <string>
done
cat <string>
git remote add origin <URL>
exit
cd <directory>
chmod +x <string>
git add <string>
vim <file>
clear
clear
curl <URL> -u <string> -H <string> -G
printf <string>
wget <URL> -O <file>
ls
ls
vim <file>
cd <directory>
git clone <URL>
less <string>
cat <string>
cd <string>
npm run bench -- -c <file> -n <file>
mkdir <string>
cd <string>
type <string>
ls
git fetch upstream
git push
git add .
exit <number>
cp -r <directory>
cat <string>
sh
fg
sudo yarn global <string>
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
terraform plan <string>
git add --all
cd <string>
more
ls
ls
sudo mv <string>
cd
which <string>
users
sudo apt-get install <string>
history
cd ..
sudo <directory> <string>
ls
bash
perl -e <string>
ps -auxwf
else <string>
cd..
ls
vi <file>
grep -a -i -E --no-filename <string> */*.log*
ls
find . -name <file>
cd <string>
git checkout -b <string>
bash
ls
sudo apt-get -y <string> <string>
sed <directory>
find . -empty -type <string> -print -delete
ssh-add <directory>
git push
sudo gem install <string>
ls -la
cd ..
sudo npm install -g <string>
git remote -v
cp <string>
grep <string>
ps ax
ls
sudo chown -R <string>
cp <string>
cd <directory>
ls
sed <directory>
cd <string>
sudo xbps-install -Su
grep <string>
ls -ltra
npm init -y
ls
ls -la
git add <string>
ls
git config --global <file> <string>
clear
sleep <number>
stat <file>
git push origin <string>
docker-compose up -d --build
git commit
ping <string>
cd <string>
ls
pwd
cat <string>
vi <file>
sudo cryptsetup <string>
set
cat <string>
ls
sudo node <file>
ls
head <filename> # outputs the first lines of file (default: <number> lines)
sudo update-rc.d <string>
cd ..
node <file>
ls
mkdir <string>
sudo apt-get update
sed -ne <directory>
cd <directory>
ls
git push -u <string> master
history
sort
cd <string>
git commit -m <string>
code .
sudo kill -9 <number>
cd <string>
ls
sudo add-apt-repository <directory>
cd <directory>
vim <file>
sudo wgnord <string>
cd <string>
service <string>
uname -r
exit
git push
ls
npm start
git checkout <string>
touch <string>
git push
sudo journalctl -u <file>
exit
sudo nano <directory>
rm -r <string>
cat <string>
clear
ls
git add .
mkdir -p <string>
systemctl
ls
cp -r <directory>
zgrep -i <string>
git add --all
cd <string>
cd <string>
more <file>
curl -fLso <file>
awk <string>
vim <file>
ls
cd ..
apt list --upgradable
git commit
cd <string>
git commit --allow-empty -m <string>
ls
git add .
curl -v --data <string>
cd <directory>
ls
ls -la
nano <string>
clear
ls
vi <file>
sudo mount <directory>
cd <string>
sudo aptitude install <string>
tmux new-session -d <string>
git add <string>
git status
nano <file>
exit
vi <file>
pwd
git clone <URL>
cd <string>
cat <string>
find . -name <file>
ls
clear
ls
ls
clear
sudo apt-get install -y <string>
sed -i -e <string>
git branch -M <string>
cd ..
tail -f <string>
pacman -S <string>
git config --global <file> <file>
tail -n2000
git add .
cp -r <directory>
pwd
ls++ -a
<file> program
ls
sudo python <file> --cascade=<file> <number>
sudo apt install -y <string>
git push
cd <string>
ls
ls
vi <file>
done\
ls
cd <string>
ls
wget -q -O <file>
ls
vim <file>
git add .
find . -type <string> -name <string> -print0
sudo sed -i <directory>
cd <string>
git add .
uname -r
git push -u <string> master
unzip <file>
vim <file>
less <string>
grep <string>
cd <string>
cd <string>
cd <string>
sudo <directory> --config.file=<directory>
ls -l
git status
git remote add origin <URL>
find . -name <file> -type <string> -print -delete
cd <string>
cd <string>
git push
fg
git commit -m <string>
git push
git commit
tail -1)"\
git branch
exit
ls -la <directory>
sudo chown -R <string>
htop
git commit -m <string>
git checkout <string>
ps -ef
npm install
ls
git add .
diff -b <file>
ls
more <file>
npx tailwindcss init -p
cd <string>
git remote -v
true <string>
clear
sort
cd <string>
sudo sed -i <directory> <file>
git checkout -b <string>
export <string>
cd <string>
vi <file>
git commit -m <string>
bash -s <string> --rails
zeus.polsl.gliwice.pl - <number>
ls
cd <string>
git pull
cd <string>
cd <string>
ls
git commit -m <string>
ls
sudo apt-get -y <string>
sudo apt update -y
ls
sudo shutdown -h <string>
cd <directory>
cd <string>
ls
git push
git add <string>
ls
ls
ps -a <string> selects all processes with a tty except session leaders
git push
git branch -D <string>
exit
clear
ls
ls
sudo pacman -S <string>
vim <file>
ls
git push origin2
cd <string>
curl <string>
cd <string>
ls -la
git status
cd <directory>
ls
export <string>
docker ps
fg
cd <string>
cut -d":" -f2) <string> -d" <string> -f16 <string>
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
dpkg --listfiles <string>
cd <string>
cp -r <directory>
vi
npm install
exit <number>
tail -f <directory>
cd
find . -iname <string> -exec <string> -rf <string>
git --version
ls
chmod <string>
cat <string>
cat <string>
find . -empty -type <string> -print -delete
git branch -M <string>
touch <file>
man <string>
ls
vi <file>
npm run prod
git remote add origin <URL>
source <string>
wget <URL>
git status
sudo chown <string>
vim <file>
sudo apt-get install <string>
clear
git push -u <string> master
python3 <file>
man <string>
git clone <URL>
fg
cd <string>
git commit
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
done
sed <directory>
sudo apt-get install --reinstall <string>
ls
sudo vim <file>
cd ..
rm <string>
sudo shutdown
perl <file>
rm -f <string>
exit
clear
ls -l
nano <file>
git status
ls
grep --help
python3 <file>
sed <directory>
python3 <file>
find . -size <string> -exec <string> -f <string>
script/build.sh
cd
rm <string>
clear
python3 <file>
rm -rf <string>
sudo chmod +x <string>
cd <string>
ls
git commit -m <string>
sort -n
nano <file>
history
git status
ls
ls
rm -rf <string>
sleep <number>
source <file>
cd <string>
exit <number>
hostname
ls
ls
man <string>
git add -A
git stash
then
ls
more <file>
exit
ls
touch <string>
git co PTS-578_redirects_not_updating_automatically
exit
ls
sudo snap install <string>
cat <string>
ls
sudo pacman -S <string>
ls
vim <file>
ls
ls -l
df -lh
nc <string>
python3 <file>
exit <number>
ls -l
grep -i <string> >files
ls
git init
code <string>
setg RHOSTS <file>
exit
vi <file>
cd <string>
cd <directory>
git add -A
git add <string>
mv <string>
git add .
find . -type <string> -exec <string> <directory> {} +
git checkout --ours <file>
vi <file>
cd ..
ping <file>
cd <string>
git clone <URL>
git commit -m <string>
ls
sudo vim <directory>
cd <directory>
cat <string>
ls
ls
python3 <file>
gzip --best <file>
tail -f <string>
cd <string>
git remote add origin <URL>
ls
git remote -v
find $dir -type <string> -size <string> -exec <string> -B <string>
ls <directory> -l
cd <directory>
git git
ls
sudo nano <file>
ls
git commit --amend --no-edit --no-verify
sudo yum install <string>
chmod +x <string>
sudo start uwsgi
killall <string>
pwd
git add .
ls
ls
ls
rm <string>
ls
yay -S <string>
mv <string>
sudo mv <string>
fg
npm install -g <string>
ls
ls
sudo sed -i <directory> <file>
git push
find . -name <file> -type <string> -exec <string> -rf <string>
git push
ls
openssl rand -hex <number>
sudo
vim <file>
cd
ls
apt list --upgradable
sudo nano <directory>
find <directory> -name <string>
ls
nano <file>
python3 <file>
exit
cat <string>
ls
docker -v
npm install npm install react-native-action-sheet --force
ls
ls
cd <string>
mkdir -p <string>
docker build <directory> -t <string>
vim <file>
chmod +x <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
ls
rm -rf <string>
curl -X <string> <URL> -H <directory> -d <string>
kill -9 <number>
cp -r <directory>
git clone <URL>
cd <string>
git push origin <string>
mkdir <string>
cd <string>
done
vi <file>
git push --set-upstream <string> <string>
cd ..
code .
locale-gen
git commit -m <string>
find . -maxdepth <number> -regextype <string> -regex <string> -type <string>
ls
vim <file>
sh
rm -f
ls
git fetch upstream
git submodule add <URL> -f
git status
cat <string>
ls
vi <file>
man <string>
sh <file>
pwd
head -n1
cd <string>
sed -E -e <directory>
less <string>
rm -rf <string>
git commit -m <string>
git status
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
clear
cd
ls
sudo apt install <string>
ls
reboot now
systemctl enable --now <string>
ls
ls
cd <string>
go build <file>
cat <string>
exit <number>
apt-get install webmin --install-recommends
sort -h
exit
ls
chmod u+x <string>
ls
type <string>
read -r <string>
git push
sudo sed -i <directory> <file>
ls -la
ls
more <file>
ls
sudo enable ufw
ls
touch <file>
mkdir <string>
ls
cd ..
python3 <file>
done
ls
ls
find . -type <string>
touch <string>
cd <string>
ls
sudo -u <string>
ls
python3
rmdir <string>
cd
sudo yum install -y <string>
exit
ls
vi <file>
ls
exit
git --help
vi <file>
cd <string>
git checkout <string>
sudo dnf install <string>
docker ps # <string>
find . -type <string> -print0
grep -i <string>
wget <URL>
find . -empty -type <string> -print -delete
npm i semvar -g
npm -v
clear
cd
chmod -R <string>
grep -oE <string>
cat <string>
clear
ls
git clone <URL>
sudo apt install <string>
mkdir
npm start
find . -size <string> -a -print -a -exec <string> -f <string> \
vi <file>
sudo systemctl start <string>
clear
cd <string>
grep
ls
cat <string>
ls
find . -type <string> -name <string> -exec <string> -r <string>
sudo yum install <string>
ls -l
read -rp <string> <string>
sudo systemctl restart <string>
sudo apt install <string>
cd <string>
git push --set-upstream <string> master
ping <file>
ls
git push
rm -r <string>
mkdir <string>
ls
cd <string>
git rev-parse --show-toplevel
cd <string>
dpkg -i <file>
mkdir <string>
sudo apt-key adv --keyserver <string> --recv-keys <string>
uname -a
find . -name <file>
kill <number>
cd <string>
vim <file>
nano <file>
curl 172.17.48.70:8080 --silent
clear
ls -ltr
nano <file>
git branch 2> <directory>
git commit -m <string>
cd <string>
ping -c <string>
sed <directory>
tail -f <string>
exit
cp -r <directory>
vi <file>
man <string>
python3
cd <string>
clear
ls
git pull
sed <file> -r <string>
ls -la <directory>
sudo addgroup <string>
git st
git commit -v -a -m <string>
cd <string>
vi <file>
sed --regexp-extended <string>
ls
top
grep -o <string>
ls
ls
git commit -a -m <string>
npm start
git pull
git commit -a
git push
more <file>
vi <file>
git commit -m <string>
git merge --abort
perl <file>
ls
sudo curl -O <URL>
ls
cd <directory>
ls -ltah
sudo mkdir <directory>
clear
ls
ls
ls
git pull upstream <string>
python3 -m <string> install <string>
git push origin master
ls
ls
cd <string>
sudo apt-get install -y <string>
sudo mount --bind <directory>
man <string>
vi <file>
grep -r <string>
clear
cat <string>
git init
vim
exit
vi <file>
service <string>
git commit -m <string>
pwd
yay -S <string>
find -name <string>
vim <file>
ls
ls
read -rp <string> <string>
ls
sudo apt install <string>
cd <string>
ls -al
ls
git commit -m <string>
ls
ls
cd <string>
hg <string>
cd <string>
cd ..
git status
cd <string>
sudo stop uwsgi
ls
cat <string>
exit
rm -fr <string>
apt-get install <string>
grep -Fx -f <string>
cd
sudo start uwsgi
pwd
ls
git init
ls
git mv -- <string>
sudo apt install <string>
grep -v <string>
ls
history -c
sudo su -
exit
docker login
kubectl get <string>
cd <string>
docker-compose up
git commit -m <string>
kill -s <number> <number>
sudo nano <directory>
git add .
cd <directory>
cd <directory>
chmod +x <string>
ls
exit
vim <file>
clear
rm -Rf <string>
ls
export <string>
nano <string>
codedown javascript
cd <string>
wget <URL>
cd <string>
ls
cd <string>
cd ..
su
cd
ls -la
find . -empty -type <string> -print -delete
npm run test
fg
mv <string>
apt-key
exit
ls -la <directory>
cat <string>
cd <string>
ls
git commit -m <string>
cd <string>
curl -fsSL <URL>
git remote add origin <URL>
read -s -n <number>
cp <string>
ls++ -a
<directory> <directory>
mv <string>
ls
clear
nano <file>
git pull
sudo su
git checkout <string>
cd ..
vim <file>
cd <string>
ls
npm-recursive-install
vim <file>
fg
python3 <file>
cd ..
vi <file>
sudo python <file>
sudo stop uwsgi
exit
git push -u <string> master -f
git add <string>
sudo python3 <file>
git init
sudo gpg --dearmor -o <directory>
ls
sudo xbps-remove <string>
cat <string>
ls
awk -F <string>
cd <directory>
cd <string>
clear
cd <directory>
sudo npm start
cd <directory>
clear
mkdir -p <string>
sudo restart <string>
git push
ls
git commit -am <string>
git status
cd ..
shutdown
chmod +x <string>
cd <string>
sudo -i
ls
read -rp <string> <string>
clear
rm -f -- <string>
chmod +x <string>
find . -name <file> -type <string> -print -delete
cd
<directory> <string>
mkdir -pv <directory>
git status
git add .
cd ..
eval <string>
ssh <string>
clear
docker exec -it <string>
cd ..
df -lh
git checkout <string>
ls -altr <string>
ls
tmux source <file>
timedatectl <string>
vim <file>
sudo apt-get install -y <string>
ls
ls
git add .
npm run test
sleep <string>
sudo <directory> -d <file>
sudo stop uwsgi
sed -r <directory>
size
ls
cd <string>
git commit -m <string>
cd ..
ls
mkdir -p <string>
python3 <file>
yarn add <string>
cd ..
vim <file>
help <string>
less
python3 -m <string> install <string>
sed -i -E <string>
cd <directory>
cd <string>
vi <file>
tail -f <string>
nc <string>
less <string>
cd <string>
npm run test
ls
vi <file>
git add -n
exit <number>
cd ..
nano <file>
git pull -f
ls
exit <number>
ls
sudo rm -rf <directory> <directory>
cd <directory>
grep <string>
vim <file>
cd <string>
sort -k <number> -r
sudo nmcli con <string>
more <file>
git remote remove <string>
sudo apt-get update -y
cd <directory>
scp <string>
cd <string>
sudo sed -i <directory>
exit <number>
git stash
sudo ntpdate -d <string>
sudo touch <file>
cd <string>
sudo npm i -g <string>
cd <directory>
git init
npm i <string>
git co -b <string>
perl <file>
clear
ls
git push
vi <file>
rm <string>
cd <string>
cd ..
sleep <number>
cd <string>
sudo systemctl restart <string>
vim <file>
cd <directory>
clear
rm <string>
mkdir -p <string>
clear
cd <string>
cd <directory>
vi <file>
git status
cd <string>
git commit -m <string>
file <string>
cd ..
sudo apt-get update
git commit -m <string>
rm <string>
less <string>
ls
mkdir <string>
cd ..
cd <string>
sudo pacman -S <string>
fg
apt install -y <string>
ss
sudo apt install <string>
top -h
rm <string>
ls
clear
python3
git pull origin development
lsblk
docker images
clear
cd ..
git add <string>
cd <string>
rm -rf <string>
ping <string>
git reset <string>
cd <string>
git commit -m <string>
apt list -a <string>
git pull
cd ..
ls -la
cd <string>
git pull
npm i <string>
LANG=<string> rpm -qcp <string>
sudo halt <string>
vim <file>
grep <string>
ls
kubectl --namespace <string>
ls
ls -la <directory>
sudo apt-get update
ls
ls
git push heroku main
ls
ls
reboot
open <string>
git commit -m <string>
cd ..
chmod <number> <string>
ls
npm init -y
sudo rm -rf <string>
ls
npm install -g <string>
xclip -selection <string> -t <string>
<directory> <string>
ls
rm <string>
ls
cat <string>
cd <string>
sudo systemctl status prometheus
sudo systemctl start <string>
git commit -m <string>
read -r <string>
done
git add .
ls -l
cd <string>
sudo ufw allow <string>
chmod u+x <string>
service apache2 restart
tr <string>
rm <string>
pkill <string>
git reset HEAD^ --hard
watch -n01, <string>
ssh-add <directory>
git push
ls
ls
type <string>
less <string>
docker run --name <string> -d -p <string> -p <string>
cd
ls
git add .
vi <file>
git status
rm <string>
grep <string>
vim <file>
ls
ls -lah
ls
chmod <number> <string>
chmod +x <string>
sudo reboot
vim <file>
cd <string>
git rm <string>
ls
tail -f <directory>
git add <string>
sudo apt install <string>
git init
sudo apt install <string>
git clone <URL>
ls
vi <file>
cd ..
python3
cp -a <string>
npm start
bash -l
ls
wget -O <file>
sudo apt update
cd ..
ls
cd <string>
ls
cd <string>
ls
unset <string>
cd <string>
sudo npx <string>
uname -m
ls
exit
ls
ls
sudo kill <number>
cd <directory>
docker commit <string>
npm run start
cd ..
cd <string>
history
git pull
cd <directory>
sudo rmdir <string>
read <string>
cd <string>
sudo sed -i <directory> <file>
cat <string>
git config --global <file> <file>
clear
ls -ltra
sudo find . -name <string>
ls -la
rm -f <string>
npx <string>
sudo ln -sf <directory>
docker-compose logs
docker images
ls
diff -u <string>
git branch -vv
shred -uz <directory>
git add <string>
ls
vim <file>
vim <file>
clear
cat <string>
awk <string>
curl -sSL <URL>
df -h
ls
cp -v <string> <directory>
rm -rf <string>
docker ps
clear
rm -rf <string>
ls -la
sudo apt install <string>
docker-compose up -d --build
ls
git remote add origin <URL>
cd <string>
docker build -t <string>
find . -type <string>
git status
cp <string>
ls
cd <string>
apt-get update
cd <string>
cd <string>
git add .
git commit -m'Cool, <string>
ls
cat <string>
vim <file>
rm <string>
cut -f <string>
cd <string>
docker ps
git remote add origin <URL>
xargs -0 <string> -iH --color=<string> <string>
touch <string>
cd <string>
cd ..
cd <directory>
sudo apt-get install <string>
find . -name <string> -type <string>
sudo python3 <file>
cd <string>
ls
python3 <file>
fg
fzf
su root
ls
npm run test
docker stop <string>
ls
cd <string>
git init
vim
ls
ls
git bisect <string>
exit
ls
sudo ln -s <directory>
history
sudo gem install <string>
xargs du -h
cp <string>
ls
ls
chmod <number> <string>
ls
cd
su root
sudo apt-get update
git grep -l <string>
which <string>
chmod +x <string>
git checkout -b <string>
base64
export <string>
npm install --save <string>
kill -9 <number>
history
ls
ls
shutdown
vi <file>
clear
ls
ls
cd <string>
exit <number>
exit
npm run test
git remote rm <string>
du -h --max-dept=<number>
ls
docker run -d --name <string> -p443:443 <string>
vim <file>
code
cd <directory>
vim <file>
kubectl create -f <file>
git add <string>
wget -O <file>
sudo apt-get install -y <string>
ls
mvn clean <string>
cd <string>
fg
cd ..
git branch -d <string>
ls -ls <file>
git rm <string>
vi <file>
cd <directory>
mv <string>
ls
cd
git remote add origin <URL>
sudo vim <directory>
git clone <URL>
cp <string>
clear
cd <string>
ls
ls
git add <string>
git status
cd <directory>
cp <string>
npm install --only=<string>
read <string>
curl -s <string>
tail -f <string>
man <string>
ls
exit <number>
git pull origin master
grep <string>
python3 <file>
kill -9 <number>
sudo service <string>
git cd <string>
npm start
rm -rf <string>
python <file> runserver 0.0.0.0:2016
fg
vim <file>
mkdir <string>
bash <file>
ls
npm install --global <string>
sudo service <string>
read -p <string>
ls
rm -rf <string>
vim
vim
sudo apt upgrade -y
grep -E <string>
grep -i <string>
git commit -m <string>
nano <file>
tail -f <string>
docker push <directory>
docker logs <file>
git commit -m <string>
git add <string>
git add .
rm <string>
ls -la
git status
ls
<directory> <string>
ls
rm <string>
vi <file>
docker-compose up -d --build
ls
vi <file>
ls
killall
sudo vim <file>
cd <directory>
git pull
cat <string>
find . -depth -exec <string> <string>
clear
git commit -m <string>
git add .
git remote add origin <URL>
sudo sed -i <directory> <file>
git revert <string>
apt-get install -y <string>
ls -la <directory>
clear
git branch -a
clear
cd ..
clear
read -p <string>
diff <file>
ls
git st
journalctl
ls -a
cd ..
sudo add-apt-repository -y <directory>
rm <string>
git init
git submodule add <URL>
sudo apt-get install dnsmasq -y
sudo apt update
done
vi <file>
cd <string>
sudo fstrim -av
clear
docker ps
docker ps
sed <directory>
vi <file>
vim <file>
ls
ls
ls
sudo chmod +x <string>
cd <string>
mv <string>
sudo systemctl start <string>
open .
cd <string>
curl -o <string>
ls
cd <string>
cd ..
docker ps
clear
git commit -m <string>
systemctl restart <string>
exit
git commit -m <string>
mv <string>
tar -xf <string>
rm -r <string>
diff --git <string>
rm <string>
touch <string>
rm <string>
vim <file>
cd <string>
ls
ls
tail -f <string>
git config --global <file> <string>
cd <string>
cd ..
clear
cd <string>
ls -ltr
ls
ls -l
clear
vim <file>
bash <file>
docker compose up
cd <string>
nohup gunicorn -c <file>
read -p <string>
git commit -m <string>
sudo pip install -U <string>
git co PTS-578_redirects_not_updating_automatically
cd
ls
cp -v <string> <directory>
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
cd <string>
git push
cd ..
vim <file>
git branch
ls
rm <string>
wc
git branch -M <string>
fg
npm run build
ls
sudo apt install <string>
unset color_prompt force_color_prompt
git pull
python3 --version
ls
kill -9 <number>
cd <string>
git commit
htop
sed -E -e <directory>
reset
ls -l
print <string>
cd -
clear
git push
sudo nano <file>
df -ah
git add <string>
vim <file>
clear
sudo nvidia-xconfig -a --cool-bits=<number> --allow-empty-initial-configuration --enable-all-gpus
rm -rf <string>
cd <string>
cp <string>
cd ..
nano <string>
cat <string>
LANG=<string> rpm -qp --queryformat <string>
exit
cd <string>
python3 <file>
ls
sudo service <string>
ls
git add <string>
cd <string>
exit <number>
git clone <URL>
git bisect good
ls
git init
ls
ssh-keygen -t <string> -b <number> -f <directory> -C <string>
ls -l
tail -n <string>
ps -a
sudo vim <file>
docker ps
exit
cd ..
docker logs <string>
ls
sudo nano <directory>
vim <file>
git commit -m <string>
cd
git clone <URL>
vi <file>
shutdown
ssh -t <file> tmux new -As0
npm install
ls -ls <file>
sudo apk add <string>
cd ..
cd <string>
exit
git add .
ls
npm list -g --depth <number>
type <string>
git add <string>
git clone <URL>
grep <string>
vim <file>
git add <string>
man <string>
fg
cd
docker run -it --name <string>
cd ..
cd ..
more <file>
ls
mkdir <string>
sudo
ls
ls
npm run devstart
ls
ls
sudo apt upgrade
<file> program
ls
cd <string>
nano <file>
awk <string>
sudo snap install --classic <string>
sudo ufw enable
sudo apt install <string>
apt-get update
cd <string>
df -lh
vim <file>
vi <file>
git add <string>
find . -name <file>
pwd
ls
npm install --save <string>
grep -i <string> >files
git init
exit
git add .
vim <file>
python3 <file>
gsettings set <file>
ls
rm <string>
git add .
git commit -am'first'
ls
du -ach
sed -i <string>
mkdir -p <string>
git status
less <string>
ls
code <string>
rm <string>
cd <string>
cd <directory>
cp <string>
ls
sudo cp <string>
vim
wget <URL> -P <directory>
ls
git add -A -f -- <string>
cd ..
git checkout <string>
sudo rm -f <directory>
sudo vim <file>
sudo mv <file>
ls
then\
clear
done\
ls
cd <string>
grep <string>
ls
exit
cd <string>
tmux
ls
git push -u <string> main
git add <string>
git commit -m <string>
ps
git status
cd <string>
find
clear
ls
sudo apt install <string>
cd <string>
kill -9 <number>
exit <number>
chmod <number> <string>
sudo chmod <number> <string>
ss
sudo apt install <string>
grep <string>
sudo apt-get update
cd ..
sudo apt-get install <string>
npm install <string>
ls
cd <string>
rm <string>
grep <string>
cd
ls -ltr
clear
htop
ls
perl -e <string>
npm run dev
rm <string>
clear
git push
sudo -E <string> -
rm -f <string>
exit
curl -sS --fail <string>
ls
sudo bash -c <string>
sudo sed -i <directory>
npm run dev
sed -i <directory>
pwd
git config --global <file> <file>
cd <directory>
docker-compose
composer <string>
cp -v -t <directory>
cat <string>
mv <string>
ls -lh
clear
sudo -u <string>
cd <string>
more <file>
sudo adduser <string>
rm -r <string>
cd <string>
sudo adduser --disabled-login <string>
git rm --force <string>
ls
mv <string>
ls
vi <file>
ls -la <directory>
vi <file>
clear
npm ERR! npm -v <string>
wget <URL>
vim <file>
sudo reboot
git add .
grep <string>
dir
cd <string>
ls
sudo systemctl enable <string>
alias <string>
git add .
git status
mkdir <string>
git add <string>
cd <string>
git push -u <string> master
xargs grep <string>
ls
git checkout <string>
docker-machine ssh <string>
ls
git commit
ls
ls
vim <file>
git commit -m <string>
git commit -m <string>
sudo mkdir <directory>
sudo apt-key adv --keyserver <file> --recv-keys <string>
kubectl <string>
cat <string>
cd <directory>
exit
cd <string>
rm <string>
git commit -am <string>
clear
ls
cut -d <string> -f <number>
git push origin <string>
htop
mount
more <file>
vim <file>
head
ls
ps -ef
git status
git pull
sudo add-apt-repository <directory>
vim <file>
cd <string>
fg
ls
ls
git commit -m <string>
git add <string>
ls
xargs sed -i <directory>
git add <file> -f
apt install <string>
npm run build
npm install <string>
wget <URL>
install <string>
code .
bash <file>
git status
clear
cd <string>
git rebase <string>
cd <directory>
vim <file>
npm init -y
mkdir <string>
cd <string>
docker run -d -p <string>
vim <file>
cd <directory>
sudo rm -rf <string>
ls
reboot
cd ..
sudo apt install <string>
ls
nano <string>
python3 <file>
git commit -m <string>
ls
fg
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
mkdir -p -public/images
git push
history # shows command line history
find . -name <file> -type <string> -print -delete
history -a
ps -auxwf
fg
sudo docker kill corrade
cd <string>
ls
ls
rm <string>
git remote remove origin
tmux -v
find . -size <string> -a -print -a -exec <string> -f <string> \
ls
more <file>
cd <directory>
python3 <file>
clear
mkdir <string>
fg
perl <file>
clear
ls
cp <string>
cd ..
rm <string>
wget -q -O - <URL>
fdisk <directory>
fg
npm install
sudo apt-get upgrade
tmux new-window -t <string> -n <string>
ls
bash
ls -l
cd ..
sudo python <file> --cascade=<file> <number>
ls -la
git remote add origin <URL>
exit
vi <file>
npm config <string>
npm run dev
vim <file>
python3 <file>
ls
exit <number>
grep -E -e <string>
sudo python3 <file>
exit
cd <string>
git stash
clear
then\
cd ..
git fetch
mkdir -p <string>
cp -rp <string>
git branch -a
git status
sudo vi <file>
npm install
sudo mv <string>
cd ..
source <string>
cp <string>
export <string>
date
ls
sudo apt-key add -
ls
ls
touch <string>
mkdir <string>
pwd
git init
ls
kubectl top pods --all-namespaces
vim <file>
ls -al
chmod +x <string>
pwd
cd <string>
touch <string>
sudo kill <number>
ls -l
find . -size <string>
wget <URL> -O <directory>
git commit -m <string>
ls
npm cache clean --force
cp <string>
sudo add-apt-repository <string>
cd <string>
sudo <directory> restart
python3 <file>
ls
vim <file>
touch <string>
git pull origin master
ssh
curl -sOL <URL>
git commit -m <string>
ls
mv <string>
docker stop <string>
git st
git status
cd ..
ls
sudo shutdown -h <string>
git merge
sudo ls <directory>
exit <number>
git clone <URL>
rm -rf <string>
vim <file>
top
git commit -m <string>
curl <URL> -u <string> -H <string> -G
done
mv <string>
git status
git status
ls
docker-compose logs
clear
vim <file>
clear
cp -r <directory>
exit <number>
git commit -m <string>
ping <string>
ls
git commit -m <string>
pwd
ls -R <string>
dir
sudo apt-get install <string>
code <string>
bash <file>
git add .
vim <file>
clear
cd
git add <string>
ls -alrt
sh <file>
git commit -m <string>
ls
ls
npm run dev
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
ls
ls
source <string>
git add <string>
rm -rf <string>
ls
vim <file>
ln <file> <string>
ls
sed -i <string>
git push
git init
cd ..
ls
nano <string>
ls
export
git pull origin master
cd ..
cd
ls
mvn clean
sudo pacman -S <string>
git status
sudo systemctl disable <file>
clear
screen -r <string>
tail -f <string>
git status
cd ..
curl --silent <string>
ls
cd <string>
git push
clear
cd <string>
cd
cd ..
mv <string>
tmux attach
sudo apt-get update
ls
apt-get install <string>
cd <string>
yarn add <string>
ls
history -s <string>
git status
ls
git init
ls
sudo ufw <string>
git add <string>
cp <string>
git push -u <string> master
cd ..
ls
npm start
cd ..
sudo rm <directory> -Rf
grep <string>
sudo tee -a <directory>
npm run devstart
exit <number>
ls
git add .
ls
curl -s <string>
ls
cut -f <string> -d <string>
npm init
cd <directory>
script/build.sh
su - <string>
cd <string>
git add <string>
git push -u <string> master
read -p <string>
sudo systemctl start <string>
ps -ef
git add <string>
vim <file>
clear
sudo apt-get install <string>
git commit -m <string>
cd <directory>
kill -9 <number>
grep -Eo <string> -e <string>
git push --help
npm start --production
git pull origin main
ls
cd ..
ls
sudo npm i prettier -g
sudo sed -i -e <string>
git init
docker build -t <string>
cd
git pull -v
ls
cd <directory>
bash
ls
ls
vi <file>
sudo -s -u <string> -H
exit
cd <string>
npm -v
cd <directory>
wget <URL>
vi <file>
source <file>
vi <file>
sudo apt-get update
mkdir <string>
killall <string>
docker ps
cd
clear
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
curl -sL <directory> -o <file>
git st
touch <string>
ssh <string>
python3 <file>
vim <file>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git push origin master
tr <string>
ls
vi <file>
fg
ls
ls
cd <string>
rm <string>
tail -f <string>
cd <string>
sudo vi <file>
rm <string>
then\
mv <string>
docker run <string>
cd ..
ls
fg
git init
curl -k <URL>
fg
sudo add-apt-repository <string> [arch=<string> <URL>
df
grep <string>
ls=<string> -ld <string>
cd <string>
cd ..
cd ..
ls
ls
cd <string>
cd ..
ls
git stash pop
wc -l <string>
clear
sudo systemctl restart <file>
git pull origin master
ps -ef
grep -vE <string>
mkdir <string>
git add <string>
wget <URL>
sed -E -e <directory>
vi -t <string>
ls
cat <string>
git status
git revert <string>
git push
cd <string>
cd ..
ls
cd ..
git rebase --continue
wget -q -O <file>
git pull
passwd
exit
read -r <string>
ls
ls
grep <string>
sudo apt install <string>
source <string>
ls
cd <string>
git init
ls -la <directory>
vim <file>
npx create-react-app <string>
chmod <number> <string>
man <string>
apt-get install <string>
cd <string>
cd <string>
clear
mkdir -p <string>
cd <string>
clear
exit <number>
ls -R
xargs rm -f
vim <file>
cd <string>
python3 <file>
docker rmi -f <string>
nohup
grep <string>
ls
cd
exit <number>
ps axfu
git status
cd <string>
clear
ls
mkdir <string>
cd <directory>
rm -r <string>
ls
node <file>
git init
ss
ls -l
ls
cd ..
git add .
curl -s <string>
nano <string>
clear
rm -rf <string>
clear
cat <string>
git checkout <string>
rm -rf <string>
fc-cache
cd <string>
git pull
cp <string>
git add <file> -f
rm -rf <string>
ls
vim <file>
setg RHOSTS.*
cd <string>
tail -f <file> --lines=<number>
vim <file>
cd
pwd
git commit -m <string>
cd <directory>
sort
exit
sudo npx create-next-app --example <string>
ls
ls
sed -i <directory>
vim <file>
git commit -m <string>
ps -aux
git pull origin development
chmod u+x <string>
curl <string>
npm run bench -- -c <file> -n <file>
npm run test
clear
cat <string>
git status
ls
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
cat <string>
cd <string>
npm install -f
wget <URL> -O <file>
grep -v -e <string> -e <string>
git status
<directory> <string>
npm build <string>
ps
npm start
cd <string>
sudo rm -r <string>
sudo mv <string>
node
xargs -L1 <string>
fg
history
cd <string>
cd <string>
sudo apt upgrade -y
git checkout -b <string>
curl <string>
mv <string>
git commit -m <string>
source <file>
man <string>
git push -u <string> main
git add <string>
cd <string>
ls
npm run test
exit
unset color_prompt force_color_prompt
vim <file>
ls
ls
git init
vim <file>
cd <directory>
sudo -i
chmod +x <string>
cat <string>
uname
bash
git status
cd <string>
sudo sed -i <directory>
cd <string>
git push -u <string> master
git add <string>
ssh <string>
ls
cat <string>
ls
git push
sudo rm -rf <string>
nano <file>
exit <number>
cd <directory>
exit <number>
git pull
ls
fg
sed -i.bak <directory>
vi <file>
cd..
git status
ls
grep --binary <string>
find . -type <string> -exec <string> <directory>
git clone <URL>
tmux a
vi <file>
nano <string>
nano <file>
rm -r <string>
ls
read <string>
sudo lsof -i <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a
ls -la
cd <directory>
cd ..
sleep <string>
cd ..
docker-compose logs
cd <string>
cd <string>
sudo chown -R --reference=<string> <string>
git push origin <string>
cd <string>
cd ..
alias <string>
cp -r <directory>
cp -r <directory>
git checkout -b <string>
ssh <string>
vi <file>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
openssl rand -hex <number>
cd <directory>
su
sudo su -
cd <string>
vi <file>
ls -l
cd <string>
git config --global <file> <string> --timeout=<string>
ps aux
ls
cd
pwd
awk <string>
sleep <string>
grep --color <string>
git push
ls
cd <string>
less <string>
sudo apt-get install <string>
ls
ps aux
find -name <string>
ls
cat <string>
sudo sed -i <directory> <file>
cd <directory>
git status
vim <file>
mkdir -p <string>
cd <string>
git add
exit <number>
cd ..
git commit
ip addr <string>
curl <string>
curl -o- <URL>
cd ..
fg
cd ..
git init
git co HEAD .
git commit -m <string>
systemctl --user <string>
ls
sed <directory>
ls
ls
git remote add origin <URL>
vim <file>
sudo reboot
git commit -m <string>
sudo vim <directory>
mkdir -p <string>
cd <string>
clear
ls -la
ls -la <directory>
ls -la
sudo apt-get install <string>
git status
exit
ls
sudo apt-get upgrade
wc -l
git checkout master
python3 <file>
git push origin main
ls -ltr
vim <file>
screen -r <string>
cd <string>
git init
grep -Eqi <string>
cd <string>
tail <file> -n <number>
brew install <string>
cd <string>
curl <string>
ls
clear
exit
ls
ls
curl -O <URL>
git clone <URL>
vim <file>
git add .
chmod <number> <string>
rm -rf <string>
cd <directory>
docker run -dt --name <string> --env-file=<string> -v <string>
git ls-remote <string>
mount <directory> <directory>
rm -rf <string>
git push
ps aux
apt upgrade
cd ..
git commit --amend
cd <string>
git remote add origin <URL>
cd
sort
docker volume ls
cd <string>
ls
vim
ls
cd <directory>
lsof
ls
git push -u <string> master
git commit -m <string>
git clone <URL>
npm jest --clearCache
nano <file>
cd <string>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
cd <directory>
git status
vi
cd <string>
clear
apt-add-repository <directory>
ls
cd <directory>
ping <file>
env
sudo nala purge -y <string>
sh
clear
vim
cd <string>
ps aux
ls
ls
cd <directory>
ls
vim <file>
kill -s <number> <number>
git diff --color-words=<string>
tail -$2 <directory>
git add .
git add .
rm -rf <string>
exit
grep <string>
git init
ls
code
ls
git add .
git add .
find india -type <string>
ls -la <directory>
top
docker-compose logs --follow <string>
git log
read -p <string> -r <string>
sudo apt upgrade
vim <file>
ls
git commit -m <string>
builtin printf <string> <string>
fg
lsblk
git add .
fg
ls
curl -s <string>
npm init
cat <string>
vim <file>
cd..
ls
read -s -n <number>
exit <number>
cd ..
vim <file>
chsh
sudo apt install <string>
rm <string>
npm start
vim
ls
cd
git push -u <string> master
ls
git add .
ls
find . -name <file>
git add .
chmod <number> <string>
rm -f <string>
cut -d <string> -f <number>
lsblk
npm uninstall -g <string>
set <string>
systemctl status <string>
vim
python3 <file>
rm -rf <string>
nano <string>
fg
touch <file>
ls
sudo userdel bob
ls
ls
ls
fg
cd <directory>
ls
git clone <URL>
git status
rm -f <string>
man <string>
git rm -r <directory> -f
cd <string>
cd <directory>
tmux -V
cp <string>
grep * -Ir <string>
cd ..
cd <string>
git push
ls
clear
ls
ls -la
git stash
npm install -g <string>
cd -
read <string>
curl <string>
fg
ls
mv <string>
git fetch
ls
ls
vim
sudo nala <string>
clear
cd <directory>
ls
sudo init <number>
cd <string>
vi <file>
rm -rf <string>
vim
ssh -i <string>
cd <string>
cd <string>
cd <string>
wc -w
mkdir <string>
cd <string>
mkdir <string>
ls
sudo dnf install <string>
ls
find <directory> -name <string>
eval <string>
cd ..
ls -al
ls
ls
docker run --name <string> -p <string> -e <string> -v <directory>
npm run bench -- -c <file> -n <file>
cd <directory>
ls
sdiff -Wia <file>
clear
sudo mkfs.ext4 <string>
dotnet <file> -f <directory> --body <directory> --bodyf <file> --blf --bdl <string>
docker images
lsblk
docker-compose build teh-germinator
cd
cd <directory>
rm -rf <string>
sudo apt-get update
ls
cd <string>
cat <string>
clear
git status
find . -empty -type <string> -print -delete
fg
ls
git diff --name-only <string>
df
cd <string>
ls
ls -l
git commit -m <string>
ls
dpkg
which <string>
python3 <file>
ls -alrt <string>
wget <URL>
sudo port <string>
vim <file>
git commit -m <string>
cd <string>
vi <file>
grep -iE <string>
cd <directory>
cd <string>
npm run build
find . -empty -type <string> -print -delete
cut -f <string> -d <string>
cd <string>
vim <file>
ls
cat -n <string>
exit
ls
find . -empty -type <string> -print -delete
npx <string>
ls -alrt <string>
git rev-list -n <number>
read -p <string>
sudo yum install tree -y
sudo cp -r <string>
reboot
ls
cp <string>
find . -empty -type <string> -print -delete
cd <string>
ls
ls
git branch
exit
ls
wget --no-check-certificate <string>
ls
rm <string>
ls
cat <string>
python3 --version
yarn install
ls
sudo mongod --dbpath <directory>
export <string>
cd <string>
touch <file>
git remote
ip a
docker history
cd ..
touch <file>
du
rm <string>
ls
vi <file>
sudo fc-cache -f -v
cat <string>
setg RHOSTS <file>
cd <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string>
bash
cd <string>
touch <file>
tail -f <directory>
node --version
cd ..
vim
sed -i <directory>
read -rp <string> <string>
sudo service nginx restart
dir
find . -perm <number>
rm -rf <string>
git merge <string>
open .
ls
git commit --amend -m <string>
ping <string>
docker-compose up -d --build
ls
cp <string>
sudo apt install <string>
cd <string>
hostname
done
cd <directory>
setg RHOSTS <file>
cd ..
ls -al
ssh-keygen
git push
read -p <string>
ls
clear
ls -la <directory>
ls
cd ..
ls
sudo docker rm corrade
sed -i <directory>
ls
git branch
ls
ls
cd ..
git commit -m <string>
cd ..
rm <string>
git rebase <string>
git add .
clear
git commit -am <string>
git commit -m <string>
ls
clear
python3 <file>
git co master
sed -n <string>
mkdir --parents <string>
sudo rm -r <string>
git clone <URL>
ls
find . -type <string>
git commit -m <string>
git pull
ls
vim <file>
ls
ls
sort -un <string>
cd <directory>
ls
sleep <string>
ping <string>
sudo su
vim <file>
cd <string>
ls
cd
git add -A
npm run dev
cd <string>
cd ..
rm -rf <string>
find . -name <file>
ls
ls
fg
exit
git describe --tags --exact-match <string>
sudo snap install go --classic
git add .
ls
git status
mv --interactive -- <string>
sudo sed <directory> <string>
sed <directory>
vi <file>
sudo reboot
source <string>
ls
exit <number>
ls
mvn install
ls
cat <string>
ls
git push -u <string> master
kill -9 <number>
man <string>
vi <file>
git pull origin development
git status
true
sudo sed -i <directory>
exit
grep -a <string>
cd ..
fg
cd
man <string>
vim <file>
do\
sudo apt-get install <string>
read -p <string>
cut -d <directory> -f <number>
cat <string>
sudo apt install <string>
cp -r <directory>
vim <file>
cd <string>
date <string>
cd <string>
ls -R
cd ..
git clone <URL>
tail -n5 <string>
clear
npm i -g <string>
apt-get --fix-broken <string>
exit
chmod -R <number> <directory>
top
python3.11 <file>
ls
cd <directory>
cut -d <string> -f <string>
vi <file>
pwd
sudo apt update
clear
cd <string>
find . -empty -type <string> -print -delete
git push --set-upstream <string> <string>
grep <string>
egrep <string>
dir
clear
cd <string>
git push
tmux new-session -d <string>
unset color_prompt force_color_prompt
git pull
wget <URL>
cd <string>
read <string>
sudo pacman -S <string>
vi <file>
du -h -maxdepth <number>
cd <string>
sudo yum install -y <string>
mkdir -p <string>
sudo chattr -i <directory>
docker ps
cd ..
rm -rf <string>
wc -l
sudo npm install -g <string> -f
tar xvzf <file>
clear
fg
sudo dnf install -y <URL> -E <file>
docker-compose build teh-germinator
git status
sleep <number>
grep -i <string> >files
exit
ls
ls
ls
sed -i <directory>
cd <string>
unique -t
grep -v <string>
ls
hostname
git branch -a
git update
sudo ln -s <directory>
which <string>
clear
npm install -g <string>
tail -n10
npm install
ls
clear
exec zsh
rm <string>
sudo yum install git -y
sudo ifconfig <string>
cd <string>
cp -r <directory>
exit
cd <directory>
kubectl --namespace <string>
ls
ls
chmod +x <string>
docker exec -it <string>
sudo reboot
source <file>
git branch
sleep <string>
ls
rm -rf <string>
cd <directory>
cd <string>
git checkout -b <string>
fg
egrep -R <string> <string>
cat <string>
cd ..
ls
vim <file>
vim <file>
cd <directory>
ls -altr
cd <string>
ls
cd <string>
sudo rm -rf <string>
cd ..
vim <file>
curl <string>
git commit -m <string>
cd <string>
mv <string>
git rebase <directory>
tmux
cat <string>
exit
cd -
git status
git add .
sudo sed -i <directory> <file>
cd <string>
clear
done
git push
git commit -m <string>
ls
rm <string>
git commit -m <string>
vim <file>
cd <directory>
apt-get install <string>
docker-compose logs
ls
cd <string>
git commit -m <string>
<directory> install --from-paths <string> --ignore-src -r -y
grep -Eio <string> <string>
vim <file>
git add .
git push
sudo usermod -a -G <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string>
tr <string>
uniq
ls -la
ls -l
exit <number>
ls
git add .
npm run dev
pkill <string>
sudo apt update
sleep <number>
ls
systemctl restart <string>
curl --header <string>
<directory> -m <file>
sudo pacman -Syyuu
ls
pwd
npm init -y
ls
sudo firewall-cmd --reload
ls
ls
mv <string>
sort > <file>
ls -la
npm i <string>
git clone <URL>
ls
sudo apt purge <string>
done
exit
sudo xbps-install <string>
cd <string>
git config --global <file> <file>
ls
sudo sed -i <directory> <file>
sudo chmod <number> <string>
npm i <string>
git init
cd <directory>
cd <string>
exec zsh
dpkg -i <file>
awk -F <string>
cp -r <directory>
exit <number>
rm <string>
grep <string>
cd ..
sudo rm -rf <directory> <directory>
cd ..
chmod <number> <string>
sed -i <directory>
git commit -m <string>
git commit -m <string>
vi <file>
sudo apt-get -f <string>
npm install <string>
cd <string>
ls
git stash --help
clear
git cat-file -p <string>
rake <string>
cut -d <string> -f <number>
npm run watch
less <string>
vi <file>
ls
ls
git pull origin master
find <directory> -mindepth <number> -type <string> -exec <string> -t <directory> --backup=<string> <string>
cat <string>
git push
cd ..
cd <string>
kubectl apply --filename <file>
git push -u <string> master -f
cd <string>
ls
vi <file>
cat <string>
unset color_prompt force_color_prompt
read -p <string>
ls
cd <string>
git commit -m <string>
cd <string>
cd <string>
apt-get install <string>
cd
systemctl start <string>
ls
gsettings set <file> <string>
git checkout -b <string>
git push origin
ls
vim <file>
cd
cd -
exit
cd <string>
git stash pop
ls
mkdir -p <string>
cd ..
sudo apt-key add -
ls
ls
ls
vi <file>
cd <string>
ls
pacman -S <string>
sudo mysql -u <string> -p --socket=<directory> <string>
rm <string>
clear
clear
cat <string>
wget -q --show-progress -N <URL> -P <directory>
nano <file>
kill <number>
git init
ss
sudo mkdir -p <directory>
exit
sudo dpkg -i <file>
ls
git status
cd <string>
clear
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
tail -f <string>
sudo python <file>
ls
ls
git status
cd <string>
cd ..
zcat <file>
read <string>
rm -R <string>
sudo apt-get install <string>
kubectl version --short
cat <string>
mv <string>
code <string>
read
cd <directory>
git init
cat <string>
python3 <file> -- <string> @CAMERA=<string> <string>
tmux
ls
ls
sudo git clone <URL>
vim <file>
tmux -a
sudo apt-get install apache2 -y
npx shadcn-ui@latest add <string>
ls
git checkout <string>
find . -name <string> -print0
cd <string>
fg
sudo nvim <directory>
git status
vi <file>
su root
awk <string>
git checkout <string>
ps
clear
git pull
cd <string>
git add -A
cd
docker run -e <string> -v <directory>
git commit -m <string>
git add <string>
find . -type <string> -exec <string> <directory> {} +
git merge <string>
ls
npm http <number> <URL>
cd <string>
ls
chmod u+w <directory> -R
git commit -m <string>
vim <file>
vim <file>
rm <string>
apt-get update
sed <directory>
cat <string>
cd ..
vim <file>
rm -rf <string>
ssh dirlic@10.18.0.39 -p <number>
git push origin <string>
ls
mvn -e <string>
grep -v <string>
ls
grep -x <string>
cp <string>
sudo apt-key add -`
vim <file>
sudo journalctl -u <string> -xe
sudo npm start
sudo pacman -S <string>
chmod <number> <string>
ls
gsutil cp <file>
nano
cd <string>
exit
clear
ls
ls
sudo su
clear
fg
ls
ls
cd <string>
ls
cd <string>
exit
alias
ls
fg
cd ..
sudo reboot
ls
cp <string>
<directory> <string>
ls
git init
git commit -m <string>
git commit -m <string>
ls
sed <directory>
git status
git commit -m <string>
sudo rm -rf <string>
done\
sudo apt upgrade -y
sudo flatpak override --filesystem=<file>
vi <file>
git add .
cd <string>
cd <string>
cd <directory>
exit <number>
file <string>
find . -type <string> -exec <string> -i <directory>
ls
curl <string>
git --user -config
git clone <URL>
alias <string>
git commit --amend --no-edit --no-verify
git add .
ls
dpkg-reconfigure locales
setg RHOSTS <file>
vim <file>
pwd
jq <string>
git clone <URL>
rmdir <string>
ls
vim <file>
pkill
vi <file>
exit
git status
code .
git status
lsblk -fs
sudo service <string>
cd <string>
git status
vim <file>
sudo -s
gsutil cp <file>
sudo chmod <number> <directory>
sudo pacman -Syyu <string>
read -p <string>
sudo pip3 install <string>
touch <string>
ls
git clone <URL> --depth=<number>
vim <file>
find ~ -name <string>
rm -r <string>
git pull
ls
ls
git merge <string>
python3.11 <file>
exit
mv <string>
sudo nano <string>
sudo adduser <string>
git --help
ls -l,a
code .
chmod <number> <string>
curl -o- <URL>
cd <string>
npm i <string>
cd Ex-Yu\ -\ <string>
npm run test
killall <string>
ls
ls
cd <directory>
cd ..
cat <string>
ls -l
cd <string>
rm -rf <string>
cd ..
clear
cd <string>
sudo start uwsgi
git stash pop
cd <directory>
git stash
ls
ls
sudo chmod <number> <directory>
git commit -m <string>
ls
sudo pacman -S <string>
sudo apt-get install <string>
ls
vim <file>
sleep
cd <string>
find . -type <string> -print0
sudo apt autoremove
git add .
touch <string>
sudo apt install docker-ce -y
egrep -v <string>
git remote -v
cd <string>
cd <string>
docker ps -a
ls
ls -a
ls
ls -la
sudo add-apt-repository <directory>
sudo apt-get remove tex-common --purge\
kill -9 <number>
vim <file>
nano <file>
cd <string>
git pull
vim <file>
cd <string>
tmux set-option -g <string>
source -v
grep <string>
git update-index --really-refresh -q <directory>
ls
clear
cp -r <directory>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
sudo wget <URL>
ls
git status
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
wget -q -O <file>
cd <string>
rm <string>
git remote add origin <URL>
ls
sudo python <file>
git stage <string>
exit
cd <string>
git push -u <string> bryan-guner
git pull origin development
ls
screen -r
cd <directory>
cd <directory>
ls
git pull origin main
ls
history -c
ls
reboot
ls
cd <directory>
sudo apk add <string>
sudo pacman -S <string>
ls
iptables -L
pwd
ls
ls
fg
ls
cd ..
ls -ltr
ls
clear
sudo yum install <string>
cd
git branch 2> <directory>
git add .
grep -win -B <string>
ls
sed -E -e <directory>
ls
du -k --max-depth=<number>
cd <string>
cd ..
vi -t <string>
vim
sudo sh -s <string>
exit
cd <string>
cut -d"/" -f2-
sed -r <directory> > <file>
sudo vim <file>
git add -A
rm -rf <string>
sudo php <string>
exit
source <string>
rm <string>
cd <string>
cd ..
ls
ls
ls
ls
rm <string>
ls
sudo apt-get install <string>
cd <string>
head -n <string>
sudo nano <directory>
ls -la
sed -i <directory>
npm install -g <string>
sudo add-apt-repository <directory>
cd <string>
awk <string>
reboot now
vim <file>
cat -s -n <file>
git clone --depth=<number> <URL> <directory>
cd ..
docker cp <string>
git add .
sudo apt-get install <string>
git commit -m <string>
sudo mv <string>
systemctl --type=<string> --state=<string> --all
file <string>
cd <string>
read -p <string> -n <number> -r
head -n <string>
ls
ls
sudo apt-get upgrade
cd <string>
code
done
ls
ls
sudo vim <directory>
find . -empty -type <string> -print -delete
ls
rm -f <string>
git remote
git log --oneline --graph --parents
sort
pipewire <string>
vim <file>
history -a
sudo modprobe -r <string>
sudo add-apt-repository <directory>
exit <number>
find . -empty -type <string> -print -delete
exit
sudo apt-get install <string>
sudo service --status-all
cd ..
ls
git config --get <file>
service <string>
npm init -y
cp <string>
sudo dnf install <string>
ls
ls -la <directory>
ls
git remote -v
fg
curl <URL> -u <string> -d <string> -d <string> -d <string> -d <string>
git init
ls
clear
ls
npm ls
clear
grep -c <string>
ln -s
git config --global <file> <string>
cd <string>
ls
sudo sysctl -q -w <string>
pwd
exit
tr <string>
cd <string>
tail -100 <file>
rm <string>
git init
git commit
sudo nano <file>
bash
git clone <URL>
curl -L <URL> -o <string> -s
git status
vi <file>
sudo lsof -ti:8889
ls
ls -a
cd <string>
cd <string>
git add -u
git clone <URL>
cd
ls
rm <string>
nano <file>
usermod -aG <string> <string>
ls
clear
vi <file>
bash <file>
ls
rm -rf <string>
ls
mkdir <string>
python3 <file>
chmod u+x <string>
sed -i <directory>
git push origin <string>
grep -e <string>
cp <string>
git push --set-upstream <string> <string>
exit <number>
ls
git co -t -b <string>
vi <file>
git please
wget -r <URL>
xargs docker rmi
grep <string>
clear
sudo python3 <file>
ls
ls
ls
ls
git add <string>
clear
clear
cd..
vi <file>
git push origin main
vi <file>
script/build.sh
cd <string>
pavucontrol
rm <string>
cd
cd <string>
tmux
clear
docker network ls
ls
sudo nano <directory>
ls -la
git clone <URL>
sudo start uwsgi
rm -rf <string>
pwd
read -p <string>
cat <string>
git push
ls
vi <file>
rm <string>
sudo apt-get install <string>
ls -lart
man <string>
sudo pip3 <string>
grep <string>
python3
cd <string>
docker-compose logs --follow <string>
ps
clear
lsof -i:8000
git status
git pull
wget -O <file>
git rebase --onto <string>
curl -L <URL>
cd <string>
ls
done
git status
unset <string>
git pull
grep <string>
clear
nano <file>
git add <string>
chmod +x <string>
cd <string>
cd <string>
ping <file>
exit
git checkout <string>
ls
yay -S <string>
cd ..
sort
git status
cd ..
git config --global <file> <file>
curl -o- <URL>
ls
ls data -ld
git diff
exit
ls
clear
g++ -std=<string> <file> -o <string>
ls
docker-compose
git commit -am’’
cd <string>
man <string>
history
curl -s <directory> -A <string> -H <directory>
git push origin main
ls
python3 <file>
vim <file>
git add <string>
sudo cp <string>
sudo ls <directory> -al
ss
nohup <string>
<directory> <string>
ls -ltr
rm -rf <string>
mv <string>
docker run <string>
cd ..
cd
git status
git commit -m <string>
exit
vi <file>
cp -v <string> <directory>
ls
git reset --hard <string>
cd
sudo apt install <string>
cat <string>
ls
cp <string>
grep <string>
ps axfu
cd <string>
git pull
ssh-agent bash
git config --global <file> <string>
vi <file>
cd ..
touch <string>
ls
sed -i <directory>
sudo curl -L <URL> -s)-$(uname -m) -o <directory>
mkdir <string>
sort
cd ..
ls
mv <string>
cd <string>
cd ..
ls
python3 <file>
ls
vim <file>
vi <file>
source <directory>
code .
read -s -n <number>
rm -r <string>
rm -rf <string>
cd <directory>
ls
cd <directory>
ls
cd <string>
npm install
sudo ifconfig en0 ether <string>
vim <file>
grep -x <string>
ssh <string>
cat -b <file>
clear
cd ..
python3 <file>
cd <string>
git clone <URL>
ls
rm <string>
more <file>
git add <string>
sudo rm <directory> -r
nano <string>
cd ..
grep -v <string>
sleep <number>
git add <string>
ls
cd <directory>
cd <directory>
vi <file>
docker images
ls
git push -u <string> main
npm run test
ls
ssh kuaidi@192.168.228.183 -p2222
git remote add origin <URL>
ls
git lfs install
cd <directory>
cd ..
cp <string>
ls
mkdir <string>
git reset HEAD^
ls
ls
docker build --tag <string>
ls
clear
ls -la
git status
cd
sudo apt-get update
read -rsn1 -p"Press <string>
git checkout master
git status
source <string>
cd <directory>
read -p <string>
ls
npm run start
fg
clear
exit
exit <number>
cd ..
exit <number>
clear
git clone <URL>
sudo mv <string>
git commit -m <string>
fg
git status
cd ..
file <string>
rm -f <string>
git rm -rf <string>
exit
sudo vi <directory>
cd <string>
awk <string>
nano <file>
ls
cd <directory>
git status
curl -v -X <string> --anyauth -u <string>
git config --global <file> <string>
chmod
clear
cd
git commit -m <string>
head
vim <file>
ls
git commit -m <string>
vim <file>
mv <string>
find . -type <string> -exec <string> -i <directory>
ls
vi <file>
npx <string>
read -rp <string> <string>
git commit -m <string>
wget -O <file>
cd ..
ls -ltr
clear
vim <file>
cd <string>
help <string>
curl <string>
mkdir <string>
git add <string>
cd <string>
clear
git checkout <string>
exit
git push
cd <string>
ls
systemctl start docker
git commit -m <string>
git commit -m <string>
rmdir <string>
cp -r <directory>
grep <string>
sudo sed -i <directory>
cd
touch <string>
cd ..
wget <URL>
npm init -y
ls
cd <directory>
node <file>
dir <string>
cd <string>
ssh <string>
sudo -i
ls
git commit -m <string>
cd <string>
cd <string>
git push --set-upstream <string> <string>
exit
ls
rm <string>
su - <string>
rm -r <string>
cd <string>
mkdir -p <string>
grep -v <string>
git status
git status
curl -s <string>
git commit -m <string>
tail -f <string>
vim <file>
cd ..
npm-recursive-install
kubectl --namespace <string>
rm -r <string>
tar -xvf <file>
sudo yum install <string>
git push -u <string> main
ls
ln -s <string>
git push
sudo sed -i <directory> <file>
sudo reboot
npm run frontend
apt-get install <string>
npm start
head
cd <string>
sudo python3 <file>
git commit -m <string>
ls
clear
node <file>
sudo apt install <string>
ls
git push -u <string> master
exit <number>
git pull upstream <string>
git commit -m <string>
ls
ls
vim <file>
git remote
rm <string>
docker volume create --name=<string>
cd <string>
git status
clear
vi <file>
ls
cd
npm i <string>
git push -u <string> master
ls
touch <string>
clear
exit
curl --version <string>
git add .
vi <file>
sudo add-apt-repository -y <directory>
exit <number>
grep -ve <string> -e <string>
fg
ls
date
export <string>
ls -alrt
cd ..
git co -t -b <string>
cd ..
git pull origin <string>
rm -rf <string>
sudo apt purge <string>
git add <string>
ls
sudo shutdown now
npm run dev
jq <string>
sudo chown -R <string>
top
ls
sort -u <string>
sudo apt-get install -y <string>
npm start
find <directory> -iname <file> -o -iname <file>
less <string>
head -n <string>
sudo apt -y <string>
ls -la
ls
vim <file>
clear
cd <string>
clear
cd <directory>
exit
cd <string>
cd <string>
git checkout -b <string>
git branch -D <string>
ls
rm -r <string>
cd ..
git commit -am <string>
exit
grep -rl <string>
git diff
ls
cd <string>
ps aux
curl <string>
cd <string>
git config --global <file> <file>
awk <string>
apt list --upgradable
sudo apt-get install sane -y
vim <file>
git status
git remote add origin <URL>
rm <string>
docker start <string>
fg
ls
cd ..
sudo chmod <number> <directory>
docker images
git push
cp -R <string>
then\
ls link
ls
git commit -m <string>
ls
code .
git config --global <file> <file>
cd <string>
pwd
git add <string>
git stash pop
ls
wget <URL>
git push
git checkout <directory> -f
ls -h
sudo pip install <string>
sudo apt-get install <string>
ls service
ls
vim
ls
cat <string>
git push -u <string> master
docker ps
cd <string>
git config --global <file> <file>
cp -r <directory>
curl -o- <URL>
sudo pacapt --noconfirm -S <string>
python3 <file>
service apache2 restart
git --version
rm <string>
cd ..
cd ..
cd <string>
git init
printf <string>
vim <file>
sudo pacman -S <string>
unset color_prompt force_color_prompt
cd <string>
ls
then
cd ..
git add .
rm -rf
xargs
cp <string>
script/build.sh
ls
git add <string>
ls
ls
sudo apt-get upgrade
vim <file>
git clone <URL>
sed -i <directory>
ls
ls
<file> program
sudo apt install <string>
ls
git push origin <string>
wget <URL>
sudo cp <string>
sudo curl <URL> -o <directory>
kill -9 <string>
vi <file>
xrandr
git push -u <string> main
ls
cd <directory>
grep -q <string>
rm -rf <string>
sudo systemctl restart <string>
sudo su
vim <file>
ls
unzip -o -d <string>
git checkout master
mkdir <string>
git status
exit
chmod <string>
git status
git remote add origin <URL>
local <string>
sudo chown -R <string>
ln -s <string>
sudo apt update
docker ps
clear
pwd
ls
perl <file>
diff <file>
cp <string>
ls
mkdir <string>
git config <file> false
sudo rm -rf <string>
exit <number>
cd <string>
ls
rm -f <string>
exit
docker rm <string>
cd <string>
git init
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
find . -empty -type <string> -print -delete
ls
vi <file>
cd <string>
vi <file>
sed -i -e <string>
git push -f
vi <file>
curl <string>
rvm <string>
ls
sudo mount <directory>
man
rm <string>
git clone <URL>
ls
git remote add origin <URL>
tmux send-keys -t <string>
ls -lt
vim <file>
vi <file>
exit
git merge <string>
chmod <string>
ls -al
exit
sudo chmod <number> <directory> -R
git add <string>
cd <directory>
git add .
git add .
cd <directory>
cd ..
vim <file>
git add <string>
ls
ls
ls -la
cd <string>
sleep <string>
ls -la
tar -xf <string>
git commit -m <string>
git commit -m <string>
ls -alf
sed <directory>
vim
vim <file>
npm -v
git describe --contains <string>
grep -i <string>
clear
ls
cd ..
vim <file>
git commit -m <string>
sed -e <string> -e <directory> -e <string> \
pico <file>
nano <string>
cd
apt-get update
tar -zxvf <file>
rm -rf <string>
ls
ls
sudo sed -i <directory>
sudo fuser -k <directory>
cd <string>
cd <string>
vim <file>
touch
vim <file>
source <file>
umount <directory>
ls
tail -f <string>
picom --experimental-backends -b
git checkout -b <string>
unzip <file>
ls -la
vi <file>
sudo yum-config-manager --add-repo <URL>
source <file>
tail -f <file> --lines=<number>
ls -la
sudo sed -i <directory> <file>
ls
grep <string>
npm install -g <string>
jq <string>
git commit -m <string>
exit
vi <file>
git push
curl -fsSL <URL> -o <file>
ls
cd <string>
python3 <file> <number> --country <string>
vim <file>
curl -sL <URL>
cd <string>
cd <directory>
sudo apt-cache search <string>
find . -type <string> -name <string> -print0
git add <string>
export <string>
source <directory>
sudo dnf install <string>
wget <URL>
cd ..
mkdir <string>
cd <directory>
ls
git push
scp <string>
cd <string>
ls -a
cd ..
ls
vim
apt-cache policy <string>
git add .
sudo update-alternatives --install <directory>
clear
exit <number>
ls -la
vim <file>
pwd
cd <directory>
less
mv <string>
cd <string>
docker-compose up -d --build
ls
mkdir <string>
ls
pwd
git push origin <string>
clear
cd <string>
read -p <string>
df
sed -e <string> -e <directory> -e <string> \
exit <number>
vi <file>
cd <directory>
du
vi <file>
git commit -m <string>
script/build.sh
npm i sass -D
sudo apt-get -y <string>
clear
cd <string>
cd ..
cd ..
find . -size <string>
ls
setg RHOSTS <file>
sudo apt-get install <string>
tar xvzf <file>
git add <string>
ls
cd <directory>
cd <string>
cd <string>
git push github <string>
sysctl -n <file>
cd <string>
time <string>
rm -f <string>
ls
cd <string>
exit
sudo sed -i <directory>
git log
curl -sH <string> <directory>
git add <string>
cd <directory>
clear
cd <string>
vim <file>
cd <directory>
npm run dev
sudo apt install <string>
sed -i -e <string>
grep <string>
apt-get install -y <string>
ls
sudo apt install <string>
vi <file>
head
exit <number>
find . -size <string> -a -print -a -exec <string> -f <string> \
sudo apt install <string>
ls
ls
git clone <URL>
git add .
rm <string>
read -rp <string> <string>
git stash
node <file>
ls -l
ls
git commit -m <string>
npm run build
ls -la
vi <file>
ls
cd ..
ls
which <string>
cp <string>
cd <string>
systemctl stop kubelet
clear
ls -l
read -r <string>
history -c
find . -empty -type <string> -print -delete
sudo apt-get install <string>
cd <string>
ls -l
git checkout <string>
cd <string>
sudo chmod <number> <directory>
sudo apt-get -y <string>
brew install <string>
git status
npm run dev
npm run dev
cd <directory>
cd <string>
ls -AF
git status
git status
cd
fg
chmod +x <string>
npm i
sudo cp <string>
touch <string>
sed <directory>
python3 <file>
vim <file>
codedown javascript > <file>
cd <directory>
cd <string>
ls
git clone <URL>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
npm run coverage
make clean
sudo sed -i <directory> <file>
ls
rm <string>
git fetch
vi <file>
cd <string>
rm <string>
vim <file>
git clone <URL>
cd
vi <file>
rm -r <string>
sleep <number>
fg
git pull
kill -9 <number>
sudo apt-get install -y <string>
cd ..
sed -E -e <directory>
mkdir <string>
sudo pacman -S <string>
ls
git commit -m <string>
git checkout <string>
ls
cd <string>
clear
sed -i <string>
fg
cd
git status
cat <string>
exit <number>
sudo apt-get install <string>
cd ..
ls
git commit -m <string>
cd <string>
vim <file>
sudo chsh -s <directory>
exit
nano <file>
ls
sudo sed -i <directory> <file>
sudo nano <string>
git push -f
sort -k2,2 -nr <string>
journalctl -b -4 -e
grep -E <string>
cd <string>
git add <string>
vim <file>
git commit
python3 -V
rm -rf <string>
cd ..
cd <directory>
cd <directory>
mkdir <string>
zcat <file>
cd ..
ls
ls
tail -f <directory>
clear
git push
wget -q -O - <URL>
mkdir <string>
ls
ls
tmux source <file>
vi <file>
tail -f <string>
mkdir -p <string>
git clone <URL>
exit
git commit -m <string>
bash
clear
ls
cd <string>
git push origin master
ls
ls
sudo -i
cd <string>
curl -sL <URL>
ls
cd <string>
sudo chmod a+x <string>
git pull
cd <directory>
git diff <string>
git status
cut -d=<string> <string>
exit <number>
git commit
docker ps
git commit -m <string>
cd <string>
vim <file>
sudo apt install <string>
ls
cd <string>
vim <file>
sed -i.bak <directory>
npm install -D <string>
clear
rm -rf <string>
git pull
cd <directory>
clear
ls
zgrep -i <string>
ls
ls
cut -d <string> -f <number>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
grep <string>
curl -k -s <URL>
cd <string>
sudo apt-get install <string>
ls
sudo vim <file>
ls
wc -l
ls
head -n1
sudo docker ps
ls
more <file>
sed -r <directory>
ls
git push
sh -c <string>
ls
source <file>
<file> - <number>
sudo sed -i <directory>
git status
git commit -m <string>
cat <string>
cat <string>
git push
git commit
find . -name <file>
grep <string>
sudo apt install <string>
sudo tee <directory>
type <string>
docker run -it --name <string>
git add -v <string>
done
cd <string>
git pull -s <string> -X <string> <URL> -f
sudo -i
psql -U <string> -h <string> nzdpu_wis
git pull
fg
curl -s <string>
npm run register
ls
scp <string>
apt-transport-https \
cd
bash <file>
ls
read <string>
cat <string>
mkdir <string>
exit
ls # lists your files in current directory, ls <dir> to print files in a specific directory
grep <string>
git add <string>
ls
rm <string>
sudo apt-get purge nodejs npm
grep -i <string> >files
sudo tar zxvf <file> -C <directory>
ls
ls -l
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
sudo apt install <string>
ls -la
git clone <URL>
cd
vim
find . -empty -type <string> -print -delete
git config -list
python3 <file>
find -f <string>
sudo <file> --register-app
cd <string>
mkdir <string>
docker run -itP -v <string>
vim <file>
grep --help
nano <string>
ps -e
killall -s <number>
man <string>
git config --global --edit
git status
find . -type <string> -exec <string> -i <directory>
sudo cp <string>
man <string>
chmod +x <string>
apt-get install <string>
grep -i <string> >files
vi <file>
cd <string>
grep <string>
clear
npm update express -g
read <string>
git clone <URL>
cd <string>
ssh <string>
python3 <file>
sudo apt-get install -y <string>
vim <file>
vim <file>
npm install -g <string>
cd ..
mkdir -p <string>
exit
ls -ltr
cd <directory>
ls
ls
gpg --dearmor
cd ..
cd
ls -lh
less <string>
exit
cp <string>
git tag -a <string> -m <string>
sudo sed -i <directory> <file>
top
exit <number>
rm -f <string>
ls # lists your files in current directory, ls <dir> to print files in a specific directory
exit
cd <string>
exit
ls
vim <file>
vim <file>
man -k <string>
npm install <string>
systemctl restart <string>
git commit -m <string>
ls
find src -type <string> -iname <string>
git branch --list --all -vv
rm <string>
git commit
git commit -m <string>
cd ..
cd
git status
sudo zypper ve -rruby
exit
exit
git rm --cached <string>
ping <string>
ls -alrt
pwd
sudo zypper <string>
npm install <string>
cp <string>
sudo su -
sudo poweroff
sudo chkconfig <string>
systemctl start docker
cat <string>
ls
g++ -std=<string> <file> -o <string>
mkdir <string>
git checkout -b <string>
vim <file>
sudo stop uwsgi
clear
sudo rm temp -rf
ip addr <string>
cd <string>
cd ..
vi <file>
which <string>
git pull
git ci -m <string>
git status
clear
setg RHOSTS <file>
git add <string>
vi <file>
cd <directory>
git status
ls
git status
git checkout <string>
find . -empty -type <string> -print -delete
ls
cd <string>
sudo gpasswd -a <string>
find . -type <string> -name <string>
rm <string>
ls -la
rm -f <string>
vim <file>
sudo apt-key adv --keyserver <file> --recv <string>
done
cut
ls
grep <string>
cp <string>
cd <string>
ls
ls
cd
ls
ls
cd <directory>
chmod +x <string>
nano <file>
alias <string>
git commit
git status
vi <file>
git branch -M <string>
npm init -y
exit <number>
cd <directory>
cd <string>
ls
source <file>
ls -la
npm http <number>
git add .
git pull origin development
ls
sort -u <string>
cd <string>
make clean
git init
date <string>
bash <file>
sudo rm -r <string>
sed <directory>
mkdir <string>
git push
cat <string>
npm start
unset color_prompt force_color_prompt
cd ..
git add .
ssh -T <string>
export <string>
man <string>
ls
grep <string>
chmod <number> <string>
clear
reboot
cd <directory>
git add <string>
git fetch origin\
vim <file>
fg
rm <string>
pwd
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git init
cd
cd ..
sudo pacman -Syu
ls
cd
cd <string>
df
git init
ls -la
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
cd <string>
vim <file>
sudo systemctl stop <string>
git merge <string>
sudo sed -i <directory>
git status
sh
cd <string>
sudo apt install <string>
cat <string>
ls
sudo git branch -a
env
chmod <number> -R <directory>
clear
npm run bench -- -c <file> -n <file>
python3 <file>
ls
git stash apply
cd <string>
vi <file>
ls
ls -la
mvn compile
git remote add origin <URL>
cat <string>
git status
sudo vim <file>
cp <string>
ls
git -C <string>
tail -n <string>
git pull origin development
wget <URL>
bash <file>
touch <file>
ls
git status
cd <directory>
cat <string>
grep -e <string> -e <string>
makepkg -sci
ls -la
vi <file>
cd <string>
shutdown
vi <file>
ls
export <string>
ls -l
diff <file>
cd <string>
git branch -d <string>
ps aux
sudo sed -i <directory> <file>
cd <directory>
exit
sudo sed -i <directory>
cd <string>
cd <string>
find . -empty -type <string> -print -delete
ruby
ls
ls
awk <string>
ls
cd <string>
ls
touch <string>
git pull
sudo apt install -y <string>
sudo dpkg --configure -a
brew update
ls
mkdir <string>
ls
ls
cd <string>
clear
git push origin <string>
cd <string>
cat <string>
clear
cd ..
done\
git commit -m <string>
sudo rpm -e --allmatches <string>
vim <file>
ping <string>
ls
bash
git push -u <string> master
docker-compose up -d --build
ls
cd <directory>
sudo rm -rf <string>
ls
cd <string>
ls -la
sudo apt-get upgrade python3
ls -a
grep -R <string>
top
git submodule update --init --recursive
ls
sudo apt install <string>
git add <string>
find . -name <string> -type <string>
git add .
ls
git commit -m <string>
read -p <string>
ls
git add <string>
ls
cd
cd <string>
cd <string>
cp <string>
git status
rm <string>
clear
git add -A
cat <string>
ls
brew cask install <string>
cd <string>
git add .
git status
git commit -m <string>
tmux
vim
git init
curl -G <directory>
cd ..
ls
sudo rm -rf <string>
rm <string>
cd <string>
apt update
ls
cut -d <string> -f <number>
npx create-react-app <string>
git add .
ls
cat <string>
git add .
vim <file>
npx tailwindcss init -p
git submodule add
vi <file>
date
git commit -m <string>
ls
cd <directory>
npm install <string>
cd <string>
ln -s <string>
sudo poweroff
rm -r <string>
cat <string>
cd -
cd <string>
ls
xargs grep <string>
pwd
git push heroku master
ls
cat <string>
ls
grep -E <string>
sudo su
ls
vi <file>
sudo virsh -c <directory> <string>
cut -d=<string> <string>
uname -a
mkdir <string>
git commit -m <string>
bash -s <string> --rails
cd
cd <string>
vi <file>
dir
<file> program
clear
sudo npm list -g <string>
find FOLDER -type <string> -delete
sh
sudo apt install <string>
cd <string>
cd <directory>
ls
git status
scp <string>
wget <URL>
fg
ls
sudo service <string>
alias <string>
exit
git init
exit <number>
sh -c <string>
ls
git remove <string>
open <string>
cd ..
exit <number>
ls
vi <file>
git push -u <string> main
git add <string>
chmod +x <string>
touch <string>
ls -al
rm -rf <string>
sudo apt-get install -y <string>
sudo apt-get install <string>
cd <string>
git bisect <string>
sudo rsync -av -n --progress <directory>
git status
git add .
sudo poweroff
git add .
git commit
clear
cat <string>
ls
cd <string>
git pull
cp -r <directory>
clear
git add <string>
npm install
sudo pacman -S <string>
ls
ls
cd <string>
ls
history
cat <string>
open <string>
rm -rf <string>
cd <string>
git add .
mv <string>
cd ..
node <file>
cat <string>
ls
sudo apt-get install <string>
ls
cd <string>
ls -la
ls
mv <string>
ls
npm start
cd <directory>
ls
history
cd ..
ls
git commit -m <string>
unset color_prompt force_color_prompt
mv <string>
cd <directory>
docker run -d -p <string> --name <string>
git status
ls
open <string>
grep <string>
cd ..
ls
cat <string>
nano <string>
cd <directory>
docker
sudo npm update
exit
git push origin
find -type <string> -name <string> -print0
ls -la <directory>
vim <file>
git status
cd <string>
exit
script/build.sh
cd <string>
git commit
cd ..
git rev-list --objects --all <string>
sudo sed -i <directory> <file>
tail -f <directory>
sudo dpkg -i <file>
sudo sed -i <directory> <file>
find . -name <file> -type <string> -print -delete
ls
git commit -m <string>
ls
cd ..
cd ..
sudo apt-key adv --keyserver <string> --recv-keys <string>
wget $flutterLINK -O <file>
ls
exit
cd
ls -r
cd ..
cd <string>
git status
sudo rm -r <string>
which <string>
cd <string>
git add .
mvn exec:java -Dexec.mainClass"cs1302.sorting.BubbleSort"
ls <directory> -l
git status
nano <string>
mkdir <string>
find . -empty -type <string> -print -delete
sudo python <file>
git init
grep <string>
exit
sudo port install <string>
mkdir -vp <directory>
git push origin --delete <string>
git checkout <string>
vim <file>
curl -sH <string> <directory>
service apache2 reload
gunzip <file>
cd ..
df -lh
mv <string>
ls
ls -l
cd <string>
git init
sudo cp <string>
git add .
git st
cd
git branch
su root
vim <file>
cp -r <directory>
cd
ls -la <directory>
rm <string>
vim <file>
cat <string>
cd ..
git remote
git commit -m <string>
npm install -g <string>
cd <string>
sudo sed -i <directory> <file>
grep <string>
rm <string>
cd ..
vi
code .
clear
clear
cd <string>
ls -la
rm -rf <string>
git commit -m <string>
git add <string>
grep <string>
reboot
cd <directory>
cd
cd
rmdir <string>
npm start
git branch -M <string>
docker image ls
ls
npm run coverage
git add <string>
sudo dd <string>
cd <string>
sudo service nginx reload
vim <file>
yarn <string>
git add .
cd <string>
npm start
du $arg -- <string>
git push -u <string> main
git add .
clear
npm install
cd ..
ls
sudo visudo
rm -rf <string>
exit
sudo sed -i <directory> <file>
ls -la <directory>
ls
sudo sed -i <directory>
cd <directory>
ls
clear
git pull
sudo sed -i <directory> <file>
cd <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd ..
git --config
sudo python <file>
vim <file>
vim <file>
fg
cd <directory>
cpio -pdmv <directory>
cd <directory>
cd <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
ls
sudo su
mkdir <string>
sudo addgroup <string>
ls
rm <string>
ls
open <string>
sudo apt update
sudo -i
nano <string>
git add --all
mkdir -p <string>
exit
git status .
tmux
vi <file>
exit
sudo apt-get clean -y
sudo stop uwsgi
unset <string>
ls
ls -lih <directory>
exit
vi <file>
ls
git config --global <file> <file>
chown <string>
ls
npm start
sudo cp <string>
sudo apt update
sudo sed -i <directory> <file>
git push
make clean
git pull origin master
git config --global <file> <string> --timeout=<string>
npm install -g <string>
sed <directory>
ls
cd <string>
cd ..
grep -i <string> >files
curl -L <URL> -o <file>
sudo lvextend -r -l <string>
docker login -p
sort -u
ls
find . -maxdepth <number> -regextype <string> -regex <string> -type <string>
git init
mkdir <string>
git branch -M <string>
npm run dev
sudo apt update
git push -u <string> main
ls
sudo yum install <string>
git add <string>
clear
sudo apt-get install -y <string>
cd ..
cut -f <string> -d <string>
sed -i <string>
cd ..
clear
sudo udevadm control --reload-rules
grep <string>
git branch -v
git push -u <string> master
git checkout
history
ls
source <string>
tail -f <directory>
ls
npm install -g <string>
sed <directory>
git push -u <string> bryan-guner
exit
help
yarn install
npm run test
git add <string>
screen -r
cd <string>
npm start
cat <string>
rm <string>
cd <string>
ls
ls -la
mkdir <string>
cd ..
npx <string>
ls -a
cd <string>
ls
cp -r <directory>
vim <file>
npm i
ls
git push
systemctl status <string>
cd ..
sudo su
git checkout <string>
curl -fsSL <URL>
cd <string>
sudo chmod -R <number> <string>
docker build -t <string>
git pull
git remote add origin <URL>
ls
cd <string>
git commit
ls -la
git add .
which <string>
ls
sudo apt update
find $dir -type <string>
fg
git stash
cat <string>
vi <file>
ln -s <string>
exit
vim <file>
git checkout
ls
ls
ls
git commit -m <string>
cd <directory>
exit
vim <file>
df -aTh
rm -rf <string>
open .
tail -f <string>
clear
grep -v <string>
cd ..
ssh-keyscan
cat <string>
unzip -o <directory> -d <directory>
git branch -M <string>
rm <string>
ls
top
cd <string>
cd ..
ls
cd <string>
cd <directory>
clear
git add <string>
bash -
cd <directory>
ls
vi <file>
python3 <file>
cd <string>
cd <string>
sed -i <string>
setg RHOSTS.*
cp -r <directory>
chmod <number> <string>
git tag <string>
ls
ls
ls -alh
cat <string>
exit
vim <file>
export <string>
ls
git checkout -b <string>
cp <string>
npm install <string>
bash <file>
vim <file>
exit
git push -u <string> main
ls -ltr
cd ..
git clone <URL>
cd <string>
tail -f <string>
sudo rm -r <string>
tmux split-window -t <string> -h
git commit -m <string>
ls
cd ..
git add --all
rm -rf <string>
git push
cd
npm install
sudo nano <file>
git rm --cached <string> -f
apt-get install <string>
tcpdump -i <string> -v <string> <string>
chmod +x <string>
ls -l
clear
sudo chmod +x <string>
exit
ls
tr -s <string>
grep -rl <string>
git log
ls -a
ls
sudo apt-get update
ls
cp <string>
python3 -m <string> install --upgrade <string>
fg
cd <directory>
git status
git status
cp <string>
mkdir <string>
sudo vim <file>
sudo make clean install
cd <directory>
vi <file>
ls -xAh
cat <string>
cd ..
git push
apt search <string>
sed -i <directory>
git clone <URL>
node -v
xargs -L1 -I'{}' <string> -rE <string>
cd <string>
git status
cd <string>
cd <string>
man <string>
mkdir <string>
git push
git commit --allow-empty -m <string>
cd <string>
vim <file>
reset
git reset HEAD --
exit <number>
source <file>
git add .
git pull
git commit --amend --reset-author
cd <string>
cd
cd ..
git add <string>
top
gpg --verify <file> <string>
sudo virsh -c <directory> <string>
cd <directory>
ls
cat <string>
ls
read -rp <string> <string>
ls
sudo mv <string>
cd <string>
mv <string>
ls
git diff
git commit
git status
git add .
fg
git status
kill -9 <string>
git pull
grep <string>
cd <string>
mkdir -p <string>
vim <file>
vi <file>
sudo docker run hello-world
sudo nano <file>
wget -q -O - <URL>
ls
mkdir <string>
git push
git pull origin master
cd ..
git add .
sed -e <string> -e <directory> -e <string> \
vim
ls
vim <file>
ls
git config --global <file> <file>
ls
grep <string>
ls
cd <string>
python3
ls
ls
vi <file>
sudo poweroff
ls -la <directory>
mv <string>
ls
git clone <URL>
ls
cd <string>
ls
history -n
man <string>
cd ..
ssh --help
git commit -m <string>
cd <directory>
clear
ls
cd <string>
cd <string>
ls
vim <file>
git pull
git clone <URL>
git push origin
sudo yum -y <string> <string>
cd <directory>
sudo service nginx restart
git commit -m <string>
npm i <string>
ls
cd <directory>
exit
less <string>
sudo node <file>
cat <string>
mv <string>
sudo nano <string>
cat <string>
ss
clear
sudo cp <string>
sudo su
git push
sudo mkdir <string>
ls
npm run frontend
code .
git checkout <string>
read <string>
git push -u <string> master
cd <string>
setg RHOSTS.*
wget <URL>
read -s -n <number>
git commit -m <string>
sudo modprobe <string>
rm -rf <string>
vi <file>
rm -rf <string>
sudo netstat -tulpn
rm <string>
cd <string>
vim <file>
cp <string>
fg
ls
sudo apt-get update
find <string> -type <string> -name <string> -exec <string> -EHn <string>
nano <string>
ls -all
vim <file>
git clone <URL>
mv <string>
cd <string>
bash -c <string>
cd <directory>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
sudo halt
npx shadcn-ui@latest add <string>
cat <string>
cat <string>
openssl rand -hex <number>
sudo stop uwsgi
git status
vi <file>
cd <string>
sudo docker kill corrade
ls
exit\
cat <string>
clear
ls
clear
reset
git pull
git push -u <string> master
git add
sleep <number>
byobu-tmux
cd
chmod -R <string>
git push -u <string> main
wget <URL> -O <file>
touch <string>
sudo apt update
less <string>
ls
cd <string>
wget -q -c <string> -O <file>
fg
ps -ef
cd <string>
open <string>
cd <directory>
git push origin
git commit -m <string>
rm -f <string>
vi <file>
sudo usermod -G <string>
sudo apt upgrade
sudo apt install -y <string>
find . -empty -type <string> -print -delete
ls
ls
vi <file>
sudo nano <string>
git add .
rm -rf <string>
vi <file>
date -u <number>
sudo apt-get upgrade
ls
ls
mv <string>
cd <directory>
read -r -p <string>
man -k <string>
vi <file>
cd <string>
curl -sF <string> -w <string>
git commit -m"update"
ls
sudo mv <string>
which <string>
sudo usermod -aG <string> <string>
sudo apt install <string>
git push -f
xargs --null <string> -nPH <string>
sudo apt-get remove <string>
git remote add origin <URL>
ls
git add <string>
sudo make uninstall
vi <file>
chmod <number> <string>
mkdir <string>
ls -r <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
ls
sudo grep -y
vim <file>
ls
clear
tr -d <string>
ls
chmod <number> <string>
ls -la
ls
bash
git checkout <string>
git add .
apt-cache search <string>
ls
ls <directory> -l
ls
wget -q -O <file>
rm <directory> -rf
sudo chmod <number> <directory>
git add .
cat <string>
npm start
ls
exit
find . -name <file>
ls
cd ..
sudo sh
ls
git commit -m <string>
ls
git config --global <file> <file>
pwd
cd <string>
cd ..
a ! href <string>
vi <file>
rm -f <string>
grep <string>
mkdir -p <string>
ssh -p <string> user@host # connects to host on specified port as user
vi <file>
sudo apt-get install <string>
cd <string>
cd <directory>
sudo pacman -S <string>
docker-compose logs --follow <string>
vim <file>
vi <file>
python3 <file>
reset
clear
vi <file>
ls
sudo ip route <string>
git init
docker run --rm <string>
ls
ls
ls
fg
bash
alias <string>
git branch
ls
find . -type <string> -mmin -60 -exec <string> -c <string>
cat <string>
ls
sed -e <directory> -e <directory>
ps aux
sudo python <file>
ls
pulseaudio -D
git add .
vim <file>
killall -SIGUSR1 <string>
clear
cd <directory>
diff -b <file>
cat <string>
git config <file> <string>
su - <string>
git commit -m <string>
wget <URL>
docker-compose logs --follow <string>
uniq
go build <file>
less -N <string>
touch <file>
vi <file>
cd <string>
vim <file>
clear
ls
git push
clear
docker pull <string>
sudo bpftrace -e <string>
npm run start
ls
rm -rf <string>
rm <string>
vim <file>
sudo vim <directory>
exit
sudo loadkeys
cd
vim <file>
cd <directory>
ls
find . -type <string> -name <string>
clear
find . -empty -type <string> -print -delete
ping
clear
cd ..
ip a
cat <string>
npm config set prefix <string>
less <string>
nano <file>
exit <number>
clear
grep <string>
git add <string>
ls
cd ..
cd <string>
systemctl restart <string>
cd <string>
rm -rf <string>
fg
grep -qw <string>
git commit -m <string>
sed -i <string>
sudo service nginx restart
cd ..
npm install
ls
g++ -std=<string> <file> -o <string>
rm -rf <string>
git add .
ls
cd
git add .
ls
npm start --cups-printer=<string>
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git commit -m <string>
ls
ls
clear
done\
cd <directory>
git status
ls
fg
cd <directory>
ls
clear
sudo apt update
chmod -x <file>
git init
vim <file>
cd <directory>
npm install karma --save-dev
git init
cd ..
sudo tar -C <directory> -xJ
uniq -c
vim <file>
cd ..
find . -name <string> -delete
vim <file>
ls
git push -u <string> master
vim <file>
git status
ls
cd <directory>
ls
git pull
git fetch origin\
read <string>
clear
cat <string>
git remote add origin <URL>
clear
git add .
git pull
code .
clear
chmod +x <string>
sudo apt update
docker-compose up -d --build
cd ..
exit <number>
curl -OL <URL>
ls
ls
cd <string>
less
grep <string>
man <string>
exit
shutdown -h <string>
sudo sed -i <directory> <file>
sudo gem install <string>
find . -empty -type <string> -print -delete
ls
npm install <string>
cd <directory>
git init
grep <string>
brew install <string>
sudo start uwsgi
git commit -m <string>
cd <string>
ls
ls
w
ln -s <string>
cd <directory>
git stash
printf <string>
cd <directory>
mkdir <string>
ls
ls
vim <file>
cd -
exit
ls
ls
clear
git push
clear
source <string>
cd <string>
git init
docker-compose -f <string>
cd <directory>
ps -ef
clear
chmod u+x <string>
cat <string>
mkdir <string>
git push -u <string> main
more <file>
tail -f <directory>
history
ls -la <directory>
clear
clear
cd <string>
npm install --save <string>
clear
sudo apt-get upgrade
cd <string>
cd <string>
git add -A
curl -L <URL>
exit
sudo apt-get update
cd <string>
wget <URL>
git stash
top
git branch
git remote add origin <URL>
docker-compose down
find . -size <string> -exec <string> -f <string>
sudo curl -O <URL>
npm run start
cd..
sed -E -e <directory>
grep <string>
cd <directory>
npm run coverage
sudo mysql -u <string> -p
python3 <file>
git push origin
ip a
vim <file>
vim <file>
cd <string>
then\
sudo apt update
cat <string>
rm -f <string>
git pull origin master
exit
pwd
git status
exit
sudo systemctl stop <file>
ls
vim <file>
awk <string>
tmux
ls
git push
rm <string>
rm -rf <string>
read -r <string>
cd <string>
grep --help
npm install -g <string>
source <directory>
docker
git add .
vim <file>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
exit
su
git remote add origin <URL>
curl -sL <URL>
git commit
ls
sudo code <file>
grep -E <string>
git touch
ls
git add .
git add .
find . -size <string> -delete
awk <string>
sudo sed -i <directory> <file>
brew services <string>
su
docker kill <string>
git clone
read -r <string>
cd <string>
rm -rf <string>
git add .
su
ls
curl
ls
curl <URL> -o <file>
git pull
vi <file>
vim <file>
ls
vi <file>
ls
ls -l
clear
which <string>
git commit -m <string>
ls
git branch
wget <URL>
git remote add origin <URL>
vim <file>
export <string>
ps aux
sudo sed -i <directory> <file>
ls
cd ..
git add .
cd
git add .
sed <directory>
curl -X <string> -d <string> OR SELECT <string>
curl -fSsL <URL>
sudo find <directory>
cat <string>
vi <file>
sudo rm -r <string>
git commit
npx <directory> -i <string>
cd ..
sudo apt install <string>
exit <number>
xargs grep <string>
apt list --upgradable
man <string>
sudo mv <string>
ls
exit
find <ディレクトリ> -not -name <string> -type <string>
chmod +x <string>
rm <string>
ls
sudo python <file>
ls
vi <file>
cd <string>
git push
mv <string>
fg
mkdir <string>
ls -a
ls
chmod --all
ls -ltr
ls
chmod <number> <string>
ls
perl -i -pe <directory>
read <string>
sudo docker run hello-world
clear
source <directory>
grep -r <string>
sudo aptitude <string>
sudo poweroff
npm install
git commit -m <string>
pwd
ls
grep -v <string>
git remote add origin <URL>
vim <file>
tail -f <string>
nano <file>
cd <directory>
ls
cd ..
npm start
cd ..
journalctl -xeu <file>
clear
read -n <number> -s -p <string>
wget -q -O - <URL>
git reset --soft <string>
cd <directory>
base64
clear
git remote -v
ls -altr
cd <string>
sudo ln -s <directory>
ssh dirlic@10.18.0.39 -p <number>
git chekout <string>
git commit -m <string>
man <string>
touch
grep <string>
cd <string>
git commit
source <directory>
clear
set
cd ..
git add <string>
read <string>
vim <file>
cat <string>
git init
curl <URL> -u <string> -d <string> -d <string> -d <string> -d <string>
git clone <URL>
chmod +x <string>
less <string>
tmux
fg
vim <file>
git clone <URL>
git commit -m <string>
apt install <string>
ls
cd <directory>
cat <string>
dir
sudo pip install <string>
sed -i <directory>
clear
vi <file>
rm -rf <string>
cd ..
sudo apt-get install <string>
ls
sudo rfkill <string>
sudo python3 <file>
vim <file>
exit
dir
sed -e <directory>
ls -la
git push
cd ..
sudo service <string>
find . -name <file>
ls
sudo chown -R <string>
pulseaudio
grep -w <string>
find . -empty -type <string> -print -delete
sudo wget -q -O - <URL>
unset color_prompt force_color_prompt
sudo apt update
docker-compose up -d --build
vim <file>
cd <directory>
sudo passwd <string>
cd <string>
cp <string>
exit <number>
cd <string>
sudo nano <string>
cd <string>
nc <number> <number>
vim
cd <string>
cat <string>
cat <string>
ls -l
ls
cat <string>
find . -maxdepth <number> -mindepth <number> -not -name <string> -print0
cd <string>
su
touch <string>
ls
cd ..
git status
docker images
vi <file>
git add <string>
vi <file>
scp -r <string>
cd <string>
git commit -m <string>
cd
exit
vim <file>
sudo apt-get autoremove
cd <string>
ssh -L <string> -N -f -l <string>
sudo su laravel
sudo snap install <string>
more
mv <string>
tmux kill-server
ls -l
sudo apt-get update
cp <string>
ls -R
cat <string>
git stash
ls
sudo apt install <string>
vi <file>
bash
ls
sudo apt upgrade
cd <string>
else
exit
git push heroku master
cd <directory>
curl -o- <URL>
wc -l <string>
git commit -m <string>
dpkg
ls
ps axfu
ls
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
code .
fg
sudo bash
exit <number>
git init
npm install --global <string>
ls
cd <string>
git commit -m <string>
ln -s <string>
bash <file>
docker stop <string>
sudo sed -i <directory> <file>
rm -vrf <directory>
ls
npm i sass -D
ps
cd ..
git status
history
cd <string>
vim <file>
cat <string>
ls
cd <directory>
ls
git push origin main
cut -d <string> -f <string>
git commit -m <string>
git filter-branch --force --index-filter <string>
systemctl start <string>
npm install -g <string>
cd <string>
rm -rf <string>
touch <file>
fg
git push -u <string> master
git push
cd <string>
vi <file>
mv <string>
git please
ls -la <directory>
sudo poweroff
pwd
git remote add origin <URL>
sudo apt-get install <string>
rm -rf <string>
python3.11 <file>
ls
git --help
sudo nano <file>
chmod <number> <string>
grep <string>
cd <string>
cd <directory>
cd <string>
ls
ls
vi <file>
cd <string>
vi <file>
su root
ls
lsof -i
docker ps -q
sudo apt install <string>
clear
rm -r <string>
cd <string>
cd <string>
cd ..
git commit
sudo dpkg -i <file>
chmod <string>
cd <directory>
source <string>
more <file>
npm i
exit
ssh -b
tr <string>
cd <string>
git branch
sudo apt-get install -y <string>
cd <string>
unset <string>
cd <string>
ls
sudo chown -R <string>
git commit -m <string>
cd ..
ls
ls
vi <file>
find . -name <string> -type <string> -prune -exec <string> -rf <string>
git add .
sudo chmod <number> <string>
sudo docker kill corrade
clear
pacman -S <string>
cd ..
read -p <directory> -n <number> -r <string>
curl <string>
npm audit fix
cd <string>
cd <string>
sudo mv <file>
ls
sudo python <file>
ls -ltr
read -r <string>
read -p <string>
cd
docker cp <string>
fg
git clone <URL>
sudo lshw -C <string>
ls
git init
cp <string>
touch <file>
exit <number>
git pull
exit <number>
journalctl -u <file>
git pull
ls
git status
cd ..
less <string>
cd ..
read -p <string>
sed <directory>
sudo sed -i <directory>
read -r -p <string>
ls
cd <string>
ls
read <string>
vi <file>
cd <directory>
git commit -m <string>
sudo rm -rf <string>
rm <string>
git commit -m <string>
touch <file>
ls
vim <file>
su root
cd ..
sudo vi <file>
git push origin <string>
grep <string>
ls
rm -rf <string>
ls
nano <file>
rm -r <string>
sudo apt upgrade
ls
sudo virsh -c <directory> <string>
git status
exit
git diff --color <string>
sudo reboot now
rm -r <string>
ls
clear
cd <string>
cd <string>
mkdir <string>
cat <string>
cat <string>
vi <file>
git push origin PTS-372_Remove_components_from_daily_tracker --force
wget -qO- <URL>
capsctrl <string>
systemctl restart <string>
git add .
exit
nano <file>
cd <string>
grep -v <string>
git commit
exit
history
grep -vFx -f <string>
screen -rd <string>
cd <string>
npm run start
cd <string>
clear
ls
tail -2 <string>
vi <file>
ls
exit <number>
vi <file>
ls
which <string>
vi <file>
clear
vi <file>
ls
cd
cd <directory>
rm -r <string>
git commit
git add -A
cd ..
cd <string>
sudo ufw allow <string>
ls
sed -e <directory>
source <string>
rm -f <string>
ls
vim <file>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
tr <string> <string>
docker build -t <string>
wget <URL>
git stash
source <string>
sudo tee <directory>
find . -empty -type <string> -print -delete
ping <file>
git status
read -p <string>
ls
git commit -m <string>
exit
git add .
open <string>
ls
cd <directory>
sudo apt-get install <string>
wc -l
sudo su
wget -q -O <file>
history -a
cd ..
sudo docker kill corrade
ls -la
cd <string>
cd ..
ls
sudo git add -A
ls
reboot
vi <file>
sed -r -n <string>
cd ..
python3 <file>
cd ..
git pull
clear
umask <number>
cd <directory>
rm -rf <string>
sudo find <directory> -type <string> -exec <string> -H <string>
ls
cat <string>
ls
ls
sudo npm install --save <string> -f
nano <file>
git status
touch <file>
screen -a
git remote -v
nano <file>
sudo npm install -g <string> -unsafe-perm
npm init
vim <file>
ls
git add .
localectl <string>
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
man -k <string>
git diff
exit
git clone <URL>
ls <directory> -lh
mv <string>
rm -rf <string>
find . -iname <string>
cat <string>
exit
mv <string>
ls
ls -latr
cut -c <string>
git checkout -
mkdir <string>
cd <string>
ls
sudo apt-get install <string>
ls -a
git add <string>
ls
printf <string>
cd <string>
sudo lvcreate -L <string> -s -n <string>
sudo du -h --max-depth=<number>
cd <string>
git branch --no-color <string> <directory>
sudo cp -r <string>
git clone <URL>
rm <string>
ps aux
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
xargs -n2 <string> tag
cp <string>
git status
ls
tr <string>
git branch
ls
view <string>
sh
ls
cd <directory>
sudo apt-get install <string>
rm -rf <string>
sudo apt install <string>
mv <string>
rm -r <string>
ls
df
docker image ls
sudo python3 <file>
git remote add origin <URL>
ls
cd
env
git reset --hard <string>
exit
cd <string>
sudo systemctl stop <string>
cd <directory>
exit
clear
sudo apt-get install <string>
vim <file>
ls
yarn
du
read -p <string>
ls
cut -d' <string> -f7-
sudo pacman -S <string>
ls -la <directory>
apt install -y <string>
git status
vim <file>
stat <file>
xargs ls -l
ls
git remote add origin <URL>
sudo -E <string> -
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
cd <string>
cd <string>
ls
cd ..
git commit -m <string>
openssl req -new -key <file> -out <file>
vim
npm start
cd <directory>
python3 <file>
sudo apt-get install <string>
cat <string>
git push origin main
vim <file>
cd <string>
python3 <file>
sudo npm install -g <string>
mkdir <string>
grep
cd <directory>
vim <file>
help
git add -A
htop
bash <file>
mv <string>
sed -r <directory>
vi <file>
cd <string>
vi <file>
ls
cd <string>
curl -fsSL <URL>
ls
ls
git status
ls
mkdir <string>
cd <string>
grep -E <string>
git status
su
cd ..
mkdir <string>
git commit -m <string>
curl -s -L <URL>
cd <string>
git clone --recursive <URL>
ls
ls
ls -la
nano <file>
ls
ls -la
clear
cd <string>
nano <string>
ls
clear
vi <file>
cd <string>
ssh <string>
read -s -n <number>
clear
bash
sudo service nginx reload
cd <directory>
clear
exit
vim <file>
rm <string>
ls
rm <string>
git log --oneline --all
npm i
ls
vi <file>
git add .
exit <number>
sudo python3 <file>
ls
sudo sed -i <directory> <file>
exit
git commit
git push -u <string> main
ls -la
cd <string>
git push origin master
clear
python3 <file>
cd <string>
python3 <file>
mv <string>
node <file>
makepkg -sci
git commit -m <string>
ls
cp <string>
sudo systemctl status <string>
ls -tr
tmux ls
systemctl
clear
ls -alrt
sudo reboot
exit <number>
fg
ls
clear
sudo vim <file>
ls
ssh <string>
git commit -m <string>
wget <URL>
mv <string>
grep <string>
ls -C
sudo apt-get update
ls
sudo chown <string>
git please
scp
ls
cd
sudo docker ps -a
exit
cd <directory>
sudo systemctl reload <string>
git commit -a -m <string>
cd <directory>
pacman-key --populate <string>
git push
cat <string>
cd <directory>
vi <file>
ls
git fetch origin
history
git commit
wget <URL>
cat <string>
clear
exit
vi <file>
g++ -std=<string> <file> -o <string>
cd <directory>
ls
git init
fg
sudo apt-get purge <string>
vim <file>
history
ls
ls -lrt
cd <string>
scp <string>
awk <string>
cd
mv <string>
cp <string>
sudo apt install <string>
cd <directory>
fg
cd <string>
cd <string>
fg
git status
python3 <file>
ls
unset color_prompt force_color_prompt
rm -rf <string>
exit
cd <string>
sudo apt install <string>
vim <file>
git init
nano <file>
mkdir -p <string>
do-release-upgrade
sudo nano <file>
ls
exit
sed -r <directory>
git commit -m <string>
ping <file>
git checkout
cd ..
cd ..
ls
git clone <URL>
top
npm start
cd <string>
cd <directory>
fg
curl -v -X <string> <directory> -H <directory> -H <string> -H <string> -H <string> -H <string> -H <string> -H <string>
npm install pushstate-server --save
yarn <string>
ls
fg
tee <file>
python3 <file>
ps
cd <string>
git reset HEAD^
docker ps
exit
ls
ls
sh <file>
cd <string>
git help -g
ls
cd
ls
clear
sleep <number>
mv <string>
ls
ls
git add <string>
python3
ls -la
wget -O <file>
sudo apt install <string>
exit
ls
cp <string>
sudo su
more <file>
git log
git add <string>
cd ..
cd ..
ls
xargs grep -sin <string>
ls
ls
cat <string>
cd <string>
cat <string>
chmod <number> <string>
sudo vim <file>
docker ps
sleep <number>
cd <string>
touch <string>
ls
ls
cd <directory>
exit
git --git-dir=<string> <string> --format=<string> <string>
vim <file>
git clone <URL>
ls
history
git add --all
curl -sSL <URL>
cat <string>
git commit -v -a -m <string>
git push
ls
cd <directory>
docker-compose up -d --build
nano <file>
git clone <URL>
git -version
git show <string>
cd
ls
ls
git commit -m <string>
killall <string>
ls
ls
git push -u <string> master
cd <string>
sudo apt install <string>
cd
git commit -m <string>
cd ..
git commit -m <string>
ls
code .
cd ..
ls
vi <file>
ls
find . -empty -type <string> -print -delete
sudo sed -i <directory> <file>
sed <directory>
top
git pull
npm run dev
cd ..
docker -c
vim <file>
docker run --name <string> -d -p <string> -p <string>
git status
vim <file>
sudo apt-get install <string>
git commit -m <string>
find . -iname <file>
vim <file>
sudo mv <string>
sudo docker run hello-world
git status
npm install -g <string>
tail <file> -n <number>
rm -rf -- <string>
clear
git branch -d <string>
sudo apt remove <string>
git stash
nano <file>
sudo nano <directory>
find . -name <file> -type <string> -print -delete
screen -r <string>
sudo stop uwsgi
docker rm <string>
grep -P <string>
cd <string>
git pull
find . -type <string> -exec <string> <directory> {} +
ls
vi <file>
clear
sudo sed -i <directory> <file>
git push
chmod +x <string>
cd <directory>
git status
ln -s <string>
ls
ssh -o <string>
ls -ltr
brew install <string>
git commit
clear
ls -l
kill -9 <number>
clear
vim <file>
git add <file> -f
touch <file>
ssh <string>
ls
sudo apt install <string>
sudo service nginx restart
mv <string>
git push -u
rm -rf <string>
vim <file>
ls
sudo stop uwsgi
find . -type <string> -name <file> -print0
git init
git add -A
cd ..
cd <string>
cd <string>
sudo apt install <string>
git pull
kubectl api-resources --api-group=<string>
source <string>
cd <string>
sudo apt-get install -f
vi <file>
ls
ls
ls
sudo apt install <string>
docker rmi <string>
git config --global <file> <string>
rm <string>
tr <string> <string>
cd <directory>
git clone <URL>
nc <file> <string>
ls
cd <directory>
ls
cat <string>
sudo ln -s <directory>
git co HEAD .
sudo pip install --upgrade <string>
cd <string>
ls
git pull
python3 <file>
ps
clear
clear
apt-get -y <string>
find $dir -type <string>
git clone <URL>
sudo apt-get install -y <string>
cd <string>
ps
cat <string>
git push
cd ..
sudo pacman -Rns <string>
ls
cp -v <string> <directory>
history -c
wget <URL>
cd <directory>
vi <file>
git remote add origin <URL>
cd <string>
git st
date
sudo sed -i <directory> <file>
git pull
ls
find $dir -type <string> -exec <string> -alt --time-style=<string> --color=<string> <string>
sudo gem install <string>
psql -h <string> -U <string> -d <string> -L <file> -a <string>
sudo vi <file>
cd <string>
sudo nvidia-xconfig --cool-bits=<number>
less <string>
clear
ls
npm install <string>
vim <file>
exit <number>
ls
git clone <URL>
vi <file>
exit
cd <string>
cd <string>
cd <directory>
cd <directory>
grep --exclude-dir=<string> -rnw <directory> -e <string>
ls
npm run watch
nano <string>
git clone
sleep <string>
ls
apt-get update
ls
sudo systemctl enable <string>
history -a
vi <file>
clear
ls
git fetch origin\
git remote add origin <URL>
bash
done
git status
cd <string>
ls
clear
cd <string>
mkdir <string>
vi <file>
git checkout <string>
cd <string>
mkdir -p <string>
npm -g <string>
apt-get update
clear
ss
sudo apt-get install -y <string>
top
ls -l
rsync <directory>
ls
sudo nano <directory>
ls
sudo mkswap <directory>
grep -v <string>
git pull origin master
git -c <string>
git commit
git commit -m <string>
git branch
cd ..
ls
git restore <file>
clear
cd ..
cat <string>
sed <directory>
xargs -0 <string> -lad --
sort -nr
ls
cd <directory>
curl -s <string>
cp -r <directory>
ls
sudo make install
ls
sudo flatpak override --filesystem=<file>
ls
cd ..
git clone <URL>
git commit -m <string>
npx create-react-app spotify-practice --template <string>
grep -i <string> >files
ls -alf
ls
grep <string>
cat <string>
grep <string>
tail -f <string>
open .
ls
cd <directory>
git please
cp <string>
ls
vim <file>
ls
sudo chmod <number> <string>
vi <file>
touch <file>
rmdir <string>
git status
less <string>
rm -rf <string>
git commit -amend
update-alternatives --list <string>
ls
clear
sh <file>
git checkout <string>
cp <string>
cd <string>
git merge <string>
curl -o <string>
git remote add origin <URL>
fg
read <string>
python3 <file>
cd ..
ls
cd <string>
cd <string>
exit
cd <directory>
wget -q -O <file>
ls
ls -alS
fg
git add .
git config <file> <string>
git branch -a
ls
git pull
ls
cd <string>
ls
git commit -m <string>
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
mv <string>
apt-cache search <string>
tail -f <file> -n <number>
read -p <string>
cd ..
python3 <file> --hid_Unit <number> --lrn_rate <string> --drop_out <string> --epochs <number> --testmode <string>
grep <string>
find <directory> -type <string>
sudo apt-get update
ls
xargs -0 <string>
git add <string>
pacman -S <string>
cd <string>
git push -u <string> master -f
ls
sudo apt-get install linux-headers-$(uname -r)
vim <file>
exit
sudo -H <string> install -U <string>
cd <directory>
docker compose -f <file>
sudo apt-get -y <string>
source <file>
ls
ls
ls
cd <string>
sudo sed -i <directory> <file>
git status
git commit -m <string>
sudo certbot certonly --nginx
git add <string>
ls
ls
fg
cd <string>
git add .
ls -la <directory>
npm run dev
sudo poweroff
cd <string>
ls
nc
ls
cd <directory>
cd ..
ls -la
rm <string>
cd <directory>
curl -sSL <URL>
diff -b <file>
read <string>
rm <string>
clear
ls
cat <string>
cd ..
ls -la
curl <string>
openssl
git add <string>
sed <directory>
ip -o -4 <string>
env
touch <string>
clear
exit
tmux source <file>
git stash
cd <string>
git add .
npm
git pull
sudo nano <directory>
bash <file>
nano <file>
rm <string>
git status
exit
clear
tmux
cd <string>
awk <string>
cp <string>
wget <URL>
git remote add origin <URL>
cd <directory>
rm -r <string>
ls
tail -f <directory>
tmux kill-server
cd <string>
curl -fsSL <URL>
touch <file>
find <directory> -name <string> -type <string> -user <string> -delete
vim <file>
ls
cd ..
ls
curl <string>
tar -C <directory> -strip-components <number> -xJf <file>
git pull
ping <string>
rm <string>
cd <string>
cd <directory>
clear
ls -la <directory>
rmdir <string>
python3.9 -m <string> --upgrade
unset <string>
ls
git stash pop
ls
cd <directory>
set -e
tr <string> <string>
pwd
docker ps --filter <string> --format <string>
sh -c <string>
sudo pacman -Ss <string>
cd <directory>
cd <string>
npm list <string>
ls
npm --version
sudo unlink <string>
sudo apt install <string>
cd <string>
cat <string>
tail -f <directory>
git push
cd <string>
git add
ls -al
git add -r <directory>
cd <directory>
less <string>
vim <file>
cd <string>
find . -empty -type <string> -print -delete
fg
docker-compose logs
vi <file>
sudo netstat -lpn
cd <string>
find. -name <string> -print
pwd
exit <number>
mkdir -p <string>
cd <string>
cd ..
exit
sudo nala install <string>
git add <string>
chmod <number> <string>
mkdir <string>
cd ..
git log
wget <URL>
ls
sudo -H <string> install --upgrade <string>
sleep <number>
exit
tar -xzvf <file> -C <string>
ls -lh
sudo apt update
pwd
git status
npm run start
git add <string>
sort -nrk <string>
ls
ls
cd ..
clear
chmod <string>
ssh -X <string>
git add .
vim <file>
exit <number>
mkdir -p <string>
cd
pwd
find $* -type <string> -empty -print0
git commit -am <string>
python3.11 <file>
git clone <URL>
vi <file>
ls
find . -name <string> -type <string> -prune -exec <string> -rf <string>
sudo <directory> restart
ls
sudo pacman -S <string> docker-compose -y
unset color_prompt force_color_prompt
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE <string>
ls
find . -type <string> -newermt <string>
nano <string>
ls
ls
git push
cd <string>
ls
sudo apt-get install <string>
cd ..
rm <string>
cd <string>
git checkout <string>
cd <directory>
ls
mv <string>
clear
cd <string>
git merge develop
exit
rm <string>
fg
sudo apt-get -y <string>
cd
wget -nc <URL>
ls
clear
npm install
ls
open <string>
curl <string>
vi <file>
ls
vim <file>
npm run register
git commit -m <string>
open <string>
ls
cd <string>
ls
ls
python3 <file>
cat <string>
cd <string>
sudo apt-get install ros-indigo-desktop-full -y
read -r -p <string>
vim <file>
docker stop boost
kill
source <string>
git remote add origin <URL>
git config --global --unset <file>
vi <file>
git push origin master
ssh dirlic@10.18.0.39 -p <number>
git filter-branch --index-filter <string>
cd <directory>
unset <string>
git push -u <string> master
pwd
git commit
ls
source <string>
cat <string>
git rm --cached <string>
nano <file>
vi <file>
fg
git push -u <string> master
sudo <directory> restart
ls
sudo sysctl -w <string>
sed <directory>
cd ..
nano <file>
ls
php <file>
git clone <URL>
cd <string>
ls
curl <string>
tr -duc <string>
pwd
cat <string>
ls
git commit -am <string>
git status
rm <string>
sudo apt-get install -y <string>
exit <number>
cp -v <string>
clear
cd <directory>
vim <file>
exit
cd <string>
vi <file>
cd ..
git rm <string>
nano
python3.11 <file>
apt-get install <string>
chmod +x <string>
npm init
cat <string>
git add <string>
cd <directory>
cd <string>
cd ..
rm -rf <string>
python3 <file>
wget <URL>
git add <string>
git add <string>
rm -r <string>
git config --global <file> <file>
git commit -m <string>
sudo apt-get -y <string>
sudo nvim <directory>
vim <file>
git log
npm ERR! <string>
clear
chmod <number> <string>
cd <string>
init <number>
rm -f <string>
git status
cd <string>
vim <file>
sudo sh <file>
docker run --rm --privileged <directory> --reset -p <string>
cd
exit
ls
apt update
egrep <string>
cd
exit
npm install sharp --save
exit <number>
git init
cd <string>
alias <string>
cd <directory>
cd <string>
ls
ls
cd
grep -i <string> >files
nano <file>
grep <string>
pwd
print <string>
chmod -x <file>
rm -r <string>
vi <file>
git pull origin development
ln -s <string>
clear
cd ..
exit
cp <string>
nano <string>
vim <file>
git init
source <file>
git add .
vim <file>
read -rp <string> <string>
date
sudo rm <directory> -rf
env
script/build.sh
git config --unset-all <file>
head -n50 <file>
git status
git add <string>
apt-get -y <string> --purge
cd <string>
sed <directory>
git config --global <file> <string>
sed
git commit -m <string>
git pull
cd <string>
touch <file>
find --option
git push
curl -X <string> -d <string> OR SELECT <string>
cd <directory>
cd <directory>
ls
dpkg --set-selections <string>
sudo ls <directory> -al
vim <file>
cd <directory>
ln -s <string>
docker volume rm <string>
ls
cd <string>
git init\
ls
cp -r <directory>
vim <file>
sudo sed -i <directory>
git branch -M <string>
cd <directory>
git br
vim <file>
cd
grep <string>
rm -rf <string>
git config <file> false
docker push <directory>
clear
perl -nle <string>
docker ps
docker rmi -f <string>
mkdir <string>
sudo pip install -U <string>
ls
ls
npm config ls -l
then\
sudo add-apt-repository <string>
ls
git pull origin main
git clone <URL>
docker --help
cd ..
ls
git add .
cd <string>
exit\
cd <string>
vi -t <string>
date
rm -f <string>
cd
git checkout master
sudo ls <directory>
git diff <string>
vim <file>
sudo apt -y <string> $(sort -u <string>
ls
git clone <URL>
ls
sudo apt-get update
cd <directory>
ls
cp <string>
sudo pacman -S <string>
rm -rf <string>
sudo docker rm corrade
ls
sudo docker build -t <string>
exit <number>
cd <string>
ls
vim <file>
curl -I <URL>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
cd ..
git push -u <string> bryan-guner
make clean
ls -al
ping <string>
mv <string>
npm run test:watch
git status
ls
ls
rm -rf <string>
git commit -a -m'WIP: <string>
tar -zxvf <file>
cd <string>
clear
ls
ls -d <string>
ls
sed -i <string>
cd
git remote add origin <URL>
mkdir <string>
ls
sudo groupadd docker
screen
mkdir <string>
ls
sudo apt install ecryptfs-utils --reinstall
ls
git add
clear
chown <string>
cd ..
sudo restart <string>
sudo nano <string>
cat <string>
npm i
cd ..
git status
clear
sed -i <directory>
sudo ln -s <directory>
exit <number>
vim <file>
chmod <number> <string>
ls
chmod -x <file>
sudo wget -O <directory>
sudo rmdir <string>
ls -l
git commit -m <string>
git branch
clear
sudo kill -9 <number>
cd <directory>
exit
make clean
cp <string>
ls
cd <string>
vi <file>
less <string>
sudo service <string>
ls
cd <string>
python3 <file>
man <string>
cd <directory>
ls -ltr
git add
less
clear
git remote remove origin
grep <string>
read -r -p <string>
cd ..
awk -F\" <string>
ls -la
grep <string>
sudo apt-get install <string>
cd <string>
find . -empty -type <string> -print -delete
ls
vi <file>
ls
chmod +x <string>
vi <file>
clear
ls
cp <string>
pkill picom
exit
docker-compose up -d --build
sudo apt -y <string>
git init
find <file> -type <string> -name <string> -o -name <string> -exec <string> <string>
ls
sudo chown <string>
exit
history -w
git add <string>
sudo mkdir <directory>
ls
xargs -I <string> -0 <string> <string>
vim <file>
wget -O - <URL>
git status
clear
pacman -Sy <string>
dpkg --get-selections <string> <file>
sleep <number>
vi <file>
cd ..
ls
cd <string>
npm start
ls
git add <string>
git push
vim <file>
history -r
sudo apt-get install <string>
systemctl --user <string> <file>
git submodule add <URL> --force
git status
git status
cd <string>
git add .
sudo yum install <string>
docker-compose up -d --build
shutdown
git checkout <string>
grep -r <string>
ls
cd <string>
ps -auxwf
sed <directory>
touch <string>
vim <file>
mv <string>
ls
systemctl start <string>
cd
head -n1\
sudo apt-get install -f
cd <string>
ls
git push -u <string> master
ls
cp <string>
bash
python3 <file>
vi <file>
git status
sudo docker rm <string>
tmux source <file>
sudo bash -
clear
vim <file>
vim <file>
sudo apt-get upgrade
npm-recursive-install
git add <string>
chmod <string>
vim <file>
rm -r <string>
bash
sudo add-apt-repository -y <directory>
cd <string>
npm start
git status
ln -s <string>
sed -r <directory>
ls
bash
git status
cat <string>
ls
ls
cd <string>
reboot
git push
pwd # tells you where you currently are
cd
exit
docker ps
grep <string>
sudo chmod -R <number> <string>
grep -v -e <string> -e <string>
npm install <string>
ls
sudo pacman -Suu
npm install -g <string>
grep -i <string> >files
git status
cd ..
ls
cd <directory>
tee <file>
ls
chsh -s <string>
git checkout -b <string>
ls
vim <file>
git status
sudo stop uwsgi
git status
ls
rm <string>
exit
cd ..
awk <string>
ls
git add .
cd
cd <string>
cd <directory>
git add -A
vi <file>
pwd
clear
mkdir -p <string>
sudo fdisk <directory>
ps -ef
export <string>
print
ls
ls
chown <string>
grep <string>
vim <file>
git push origin master
ls
sudo apt-get install <string>
cd ..
git checkout -b <string>
git push -u <string> main
cd <string>
vim <file>
fg
ls
sudo cp <string>
ls
cd <string>
ls
codedown javascript > <file>
cd <string>
cd <string>
cd <directory>
cd..
cat <string>
unset <string>
mkdir -m <number> -p <string>
git remote add origin <URL>
ls
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
read -rp <string> <string>
clear
git commit -m <string>
fg
find $blacklists_dir -name <string> -execdir <string> <string>
git tag <string>
cd ..
ls -la <directory>
ls
vim <file>
ls
ls
git push
ls
sudo tune2fs -l <directory>
npm run bench -- -c <file> -n <file>
code <string>
sudo make install
cd ..
ls
mkdir <string>
rm -rf <string>
git push
sed -i -e <string>
git pull origin master
vi <file>
ls
ls
cd <string>
git checkout <string>
cd <string>
sudo apt-get install <string>
cd <string>
git push -u <string> master
git adog
git commit -m <string>
pwd
ls
ls
sudo apt-get update
git commit -m <string>
docker images
git -v
cd ..
ls
ls
tr <string>
exit
sudo su
wget <URL>
sed <directory>
vim <file>
cd <string>
htop
sudo apt-get update
git init
vi <file>
pwd
ps -ef
pwd
cp <string>
clear
sudo yum install -y <string>
git push -u <string> master
clear
git clone <URL>
git branch -M <string>
ls
cd <string>
sudo pacman -Si <string>
vim <file>
ls
cd <string>
exit <number>
ls
sudo reboot
git init
npm start
exit <number>
sleep <number>
rm -rf <string>
sudo pacman -S <string>
git commit -m <string>
ls
exit
tar xvzf <file>
exit
yarn <string>
rm -rf <string>
wget <URL>
ls
ssh <string>
docker compose <string>
sudo npm install <string>
cd
git log
history
cd ..
grep <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
ls
xargs grep <string>
cd <directory>
sudo sed -i <directory> <file>
sudo docker kill corrade
cp -r <directory>
ls
cd <directory>
ls
ls
git commit -m <string>
git push
find . -name <file> -type <string> -print -delete
cd ..
git commit -a -m <string>
exit
git add <string>
cd <string>
exit <number>
git init
git status
ls
top
ls
bash
python3 <file>
mkdir <string>
tail -n7
git pull
vim -
read -r -n <number>
cd <directory>
git push -u <string> main
find src
clear
cd ..
sudo sed -i <directory> <file>
sudo su -
git pull
fg
hostname -I
ls
rm <string>
git status
ls
cd <string>
find <directory> -type <string> -exec <string> {} -maxdepth <number> -type <string> -iregex <string>
ls
find . -type <string> -name <string>
git rm --cached <directory>
ls
chmod <number> <string>
wget <URL>
npm start
cat <string>
grep -v <string>
clear
ls
sudo apt update
git push -u <string> bryan-guner
ls
ls
uname -o
cd <directory>
ls
ls
grep <string>
vi <file>
screen -ls
git clone <URL>
wget --content-disposition <string>
sudo vim <file>
python3 <file>
sudo chmod +x <string>
vim <file>
cd <string>
git add <string>
ls
fg
git status
mkdir -p <string>
cd <string>
sudo python3 <file>
cd <string>
wget -r -A <URL>
mv <string>
cd ..
git add <string>
git pull
rm -rf <string>
git symbolic-ref HEAD <directory>
vi <file>
exit
cd ..
cut -d <string> -f <number>
git commit
npm start
npm install
rm <string>
cd ..
sudo xbps-remove <string>
cd ..
exit
read -n <number> -s -p <string>
cd <directory>
vim <file>
ls
npm start
code .
ls
cd ..
mkdir <string>
cd <string>
git stash
kubectl rollout status deploy imc-dispatcher -n <string>
bash
pwd
grep <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
vim <file>
sudo apt-get -y <string>
vi <file>
sudo apt update
vim <file>
find $dir -name <string> -exec <string> -alt --time-style=<string> --color=<string> <string>
cd <string>
apt
shutdown -h <string>
python3 django -h
wc
vim <file>
git commit -m <string>
ls
cd <string>
cd <string>
ls
ls
cd <string>
git add <string>
git init
git clone <URL>
git push -u <string> main
sudo update-rc.d -f <string>
git commit -am <string>
ls
sh -c <string>
clear
ls
read -p <directory> -n <number> -r
dpkg --list
git add .
sudo add-apt-repository <directory>
git remote add origin <URL>
git commit -m <string>
tail
git push origin master
git push origin master
sudo rm -r <string>
tar -xvzf <file>
cd <string>
fg
cd <string>
find . -type <string> -name <file> -print0
docker rm <string>
chmod -v <string>
fg
touch <string>
ls
ls
ls
uname -a
kubectl --namespace <string>
sudo nano <directory>
ls
git push -u <string> master -f
git commit -m <string>
update -yy
rm -rf <string>
sleep <number>
python3.11 <file>
git config --global <file> <string>
cd ..
vi <file>
read -rp <string> <string>
rmdir <string>
cp <string>
ls -ltr
npm install -g <string>
git add -v <string>
ssh <string>
rm -r <string>
sudo service <string>
mv <string>
cd <string>
rm <string>
sudo npm install -g <string>
ls
ps ax
cd <string>
chmod +x <string>
ls
exit
sudo sysctl -w <string>
ls
clear
git ls-files --deleted -z
git pull
git init
rm -r <string>
clear
capsctrl <directory> & disown
head -n <string>
cd <string>
git clone <URL>
cd ..
cd ..
git commit -m <string>
ls
npm run dev
git rm -r --cached <directory>
read <string>
npm install
cd <directory>
exit
tmux a
else
clear
git checkout master
git push
cd..
npm install querystring --save
chmod -x <file>
grep <string>
cd ..
cd ..
du -m --max-depth <number>
sudo nano <directory>
ls
mkdir <string>
sed -E -e <directory>
cd <string>
ls -l
sudo chown -R <string>
ls
source <directory>
git add .
cd <directory>
unset color_prompt force_color_prompt
ls
docker exec -it -u <string>
git status
cd
vi <file>
cp <string>
read -r -p <string>
ls
wget -q <directory> -O <directory>
brew install --cask <string>
rm -fr <string>
grep <string>
read -rst0.5 -N1 -u0
xargs -L1 <string>
ps -ef
cd <string>
mkdir -p <string>
git push
rm -r <string>
pwd
git
cd <string>
git add .
cd <string>
ps -ef
ls -n
ls
git status
ls -lt
cd <string>
curl <string>
docker-compose logs
cd <directory>
clear
cat <string>
git pull origin development
ls
ls
journalctl
git add <string>
tail -f <string>
npm install -g <string>
ls
export <string>
cd
clear
ls
cd
ssh <string>
git push
ls
ls
git add .
clear
git checkout HEAD -- <string>
git commit -am <string>
setg RHOSTS.*
git push -u <string> master
git merge <string>
git clone <URL>
ls
cd <string>
su field
timedatectl <string>
vim <file>
killall <string>
df -lh
ls
git commit -m <string>
git init
cd <string>
ls
cd <string>
exit <number>
npm install
sudo cgcreate -g <directory> -a <string> -t <string>
cd <string>
ls
git diff
rm -rf <string>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
vim <file>
cd <string>
sudo apt install gufw -y
rm -rf <string>
clear
cd ..
git
cd <string>
sudo pacman -S <string> --asdeps
cd ..
git init
sudo php <file> --install-dir=<directory> --filename=<string>
done\
openssl version -a
clear
vim <file>
sudo docker-compose up -d
cat <string>
ls
git config --global <file> <file>
exit <number>
cd ..
cat <string>
git add <string>
ls
git commit -m <file> --author <string>
fg
cd <directory>
ls
ls
cp <string>
apt-get -y <string> <string>
git fetch origin <string>
cd
node <file>
clear
ping <string>
git push
ls
cd <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git checkout <string>
read -p <string>
cd ..
clear
cd <string>
git remote add origin <URL>
lsblk --help
apt-get upgrade -y
ls
ls -l
date
service <string>
git pull
git status
git rebase -i <string>
git push origin master
git status
man <string>
rm <string>
byobu-tmux
vim <file>
exit
vi <file>
vim <file>
wget <URL>
ls
ls
sudo reboot
mkdir <string>
curl -sL <URL>
git remote -v
docker-compose up -d --build
git status
git filter-branch --index-filter <string>
cp <string>
cd <directory>
ls
more <file>
npm run devstart
git pull
docker tag <string>
clear
vim -E -s -u <file>
exit
clear
git branch -M <string>
cd <string>
git commit -a
exit
cd <directory>
git push -u <string> master
ln -s <string>
git remote add origin <URL>
cd <string>
docker exec -it <string> bash
git commit
rm -rfi <string>
unset <string>
ls
setg RHOSTS <file>
clear
chmod <string>
cd ..
npm i beautify -g
exit
touch <string>
cd <string>
man <string>
cat <string>
exit
yarn add -D <string>
git add <string>
ls
git status
vi <file>
npm run coverage
git add .
chmod -R <string>
rm -rf <string>
git restore --staged --worktree <directory>
cd <string>
git add <string>
cd <string>
vim <file>
cd <string>
clear
ls -l
cd <directory>
ls
python3 -m <string>
vim <file>
git log
mkdir <string>
cd <directory>
git status
git status
man <string>
vi <file>
exit
git init
git log
cat <string>
apt-get install <string>
read -s -n <number>
clear
sudo rm -R <string>
docker run --name <string> -d -p <string> -v <directory> -u <string>
ls -al
git fetch
clear
rm <string>
ls
vim <file>
cd <string>
cd <string>
ls
ls
chmod <number> <string>
git init
read -r <string>
cat -n <file>
git push -u <string> master
rm -rf <string>
systemctl enable <string>
sudo sed -i <directory>
exit <number>
sudo chown <string>
clear
cd..
git push
exit
ls
mv <string>
ps aux
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
vim <file>
mv <string>
cd <string>
ls
ls -l
ls
read -p <string>
git status
mkdir -p <string>
sudo sed -i <directory>
git rebase -i <string>
npm run package
sudo dnf install -y <string>
cd <directory>
ls
git pull
git clone <URL>
git commit -m <string>
git commit -m <string>
vim <file>
git remote -vvv <string>
ls
ls
fg
ls
git branch -a
git commit -m <string>
cd
tail -f <directory>
ls
exit
sudo apt remove <string>
telnet -v
cd <directory>
cd <directory>
sudo usermod -G <string>
ls
ls
php --version
git push
grep -v <string>
python3.8
exit
vim <file>
npm i <string>
cd <string>
ls
tmux kill-server
cd <string>
git status
mkdir <string>
vim <file>
git fetch
nc <string>
docker container ls
git add .
sudo apt-get -y <string>
sudo pacman -Syu
cd <directory>
ls
pwd
vi <file>
sudo modprobe <string>
sudo chown -R <string>
ls
ls
cd ..
cd <directory>
cd <directory>
head <filename> # outputs the first lines of file (default: <number> lines)
ls
yarn <string>
vi <file>
cd <string>
exit <number>
cd <directory>
vi <file>
cd <string>
date <string>
cd ..
cd ..
printf <string>
cat <string>
cd <string>
sudo loadkeys <string>
ls
history -a
nohup <string>
cd <string>
touch <string>
git status
git reset --hard <string>
cd ..
tail <file> -n <number>
chmod -x <file>
code <string>
mv <string>
sudo pacman -S <string>
ls
cd ..
ls
ls
rm -rf <string>
ls
ls
wget -qO- <URL>
rsync -rt -e <string>
ls
cd ..
git log
ls
cd
sed -i <string>
chmod +x <string>
mkdir <string>
read -r
cd <string>
fg
git clone <URL>
grep -E <string>
git add <string>
git commit -m <string>
cut -d' <string> -f <string>
man
ls
ls
ls
wget <URL>
sudo make install
git add .
rm -r <string>
vim <file>
cd <directory>
history -a
sudo python <file>
git checkout <string>
touch <string>
vim <file>
git clone <URL>
vim <file>
sudo apt-get install -y <string>
ls
git st
sudo nano <directory>
pwd
wget -q <URL> -O <file>
mkdir -p <string>
cd <string>
cd <string>
git commit -m <string>
git checkout master
exit <number>
docker ps
git init
exit <number>
vi <file>
ls
code .
git init
grep <string>
git clone <URL>
ls
npx <string>
clear
ls
yarn <string>
fg
tail -f <directory> --lines=<number>
cd <string>
sudo -s -u <string> -H
ls
ls
clear
ls
ls
clear
git branch
screen -S <string>
npm i <string>
git push
ls
sudo -H <string> install <string>
ls
ls
ls -ltr
sudo python <file>
cd ..
ls
ls
vim <file>
su - <string>
npm run build
git rebase --continue
screen -r <string>
ls
sudo systemctl daemon-reload
ping <file>
git push origin <string>
ls
cd <directory>
sort
date <string>
fg
grep
ps aux
sudo snap install <string>
ls
fg
sudo ufw allow <string>
sudo swapon <directory>
git read-tree -u --prefix=<string> <directory>
cd <string>
docker-compose up
cd <string>
ls
sudo sed -i <directory>
ls
sudo prometheus --config.file=<file>
cd ..
sudo apt install <string>
ssh --J
ssh-keygen
git diff
read -r <string>
grep <string>
php -v
cd ..
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
curl -X <string> -H <string>
vi <file>
wget -q <URL> -O <file>
cd <string>
git checkout <string>
git revert <string>
vi <file>
clear
sudo sed -i <directory> <file>
ls
cd <string>
pwd
sudo su
docker image <string>
exit
ls
cd
ls
git checkout -f <string>
ssh <string>
clear
code <string>
ls
cd <string>
more <file>
sudo docker ps
sudo apt install wordpress -y
mvn install:install-file -Dfile=<file> -DgroupId=<file> -DartifactId=<string> -Dpackaging=<string> -Dversion=<string>
ls
cp -v <string>
vi <file>
cp -f <string>
ls
cd <string>
git status
git push origin PTS-578_redirects_not_updating_automatically --force
git checkout <string>
cd
ls
git config --global <file> <string>
git commit -m <string>
cd <directory>
cd <string>
cd -
grep -i <string>
cp <string>
awk <string>
print <string>
git diff
git add <string>
rm -rf <string>
clear
vi <file>
vim <file>
cd <string>
clear
sudo apt-get install <string>
ls
touch <string>
cd <string>
cd <string>
ls
sudo php <string>
find src
git format-patch -n --stdout <string> <string>
git clone <URL>
fg
clear
ls -latr <directory>
sudo chmod 775 <string>
git clone <URL>
cd <string>
rm <string>
ls
chmod +x <string>
fg
clear
cd <directory>
cd ..
mkdir <string>
clear
cd <directory>
less <string>
git status
sleep <number>
sudo pacman -Rscn <string>
cd <string>
ls
git branch -M <string>
git clone --bare <string>
ls
killall <string>
git config --global <file>
nano <file>
cd <string>
cd ..
vim <file>
ls
cd <directory>
vi <file>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
docker login <string> -u <string> --password-stdin <string>
sudo apt -y <string>
cp --help
exit
sudo sed -i <directory>
ls
vim <file>
mkdir <string>
git status
fg
vi <file>
source <string>
ex --help
vim
ls
<directory> -m <file>
ls
clear
docker run <string>
cp <string>
sudo npm start
docker rmi --help
ls
cd <string>
chsh <string>
mkdir <string>
git status
xrandr --output <string> --off
grep -rnw <directory> -e <string>
rm -f <string>
cd <string>
fg
rm -r <string>
code .
git commit -m <string>
ssh dirlic@10.18.0.39 -p <number>
less
clear
bash <file>
rm -rf <string>
docker run --rm -it <string>
ls
ls
tail -n100 -f <directory>
sudo git reset
sudo ifup <string>
git add .
sudo apt-get install -y <string>
git pull
sudo snap install <string>
sudo vim <directory>
git commit -am <string>
git clone <URL>
git status
curl -o- <URL>
exit
rm <string>
exit <number>
type <string>
git commit -m <string>
sudo ls <directory>
fg
sudo add-apt-repository <directory>
cd <directory>
docker rmi <string>
sudo yum install -y <string>
sudo addgroup <string>
ls
sudo nano <string>
ls
rm -f <string>
ls
ls
git status
snap install <string>
git gc
sudo systemctl restart <string>
code .
git add .
grep -i --color=<string> <string>
rm -rf <string>
sudo cp <string>
ls
mv <string>
cp -R <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
git checkout -b <string>
git add <string>
sleep <string>
git clone <URL>
git push
cat <string>
sed -e <directory>
chmod u+x <string>
vim <file>
ls
cd ..
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
docker push <directory>
ls
sudo -E <string> -
mkdir <string>
sudo npm i -g <string>
ls
sed <directory>
rm -f <string>
vim <file>
git status
npx npm-check-updates -u
sudo npm install -g <string>
vi <file>
clear
ls -lH
ls
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
reboot
ls
npm install
cp <string>
sleep <string>
find . -empty -type <string> -print -delete
git commit -m <string>
vi <file>
git fetch
cd <string>
ls -ltr
cd <string>
sudo apt install <string>
npm i <string>
sudo apt-key add -
cd
ls
git add <string>
cd <string>
sudo rmdir public_html
sudo systemctl status <string>
git clone <URL>
fg
cd <directory>
python3 <file>
tmux source <file>
exit <number>
curl -X <string> -d <string> OR SELECT <string>
vim <file>
unset <string>
sudo apt-get purge <string>
git add <string>
vim <file>
ls
ls
sed <directory>
rm <string>
exit <number>
vi <file>
git init
ls
ps -u <string> # lists your processes
ls
git checkout --
sudo mkdir -p <directory>
cd <string>
<directory> <string>
watch -n <string>
cat <string>
git pull
sudo service nginx restart
head
git add <string>
sudo apt-get upgrade
git co - <string>
git status
git add <string>
sudo cp <string>
scp
git status
ls
ls
git status
clear
cd <string>
git status
git push -u <string> main
cd <string>
cd <string>
cp -r <directory>
git add .
wget <URL>
cd ..
sudo make
git commit -m <string>
cd <string>
sudo su
vim <file>
grep <string>
cd <directory>
git ci -m <string>
exit
cd <string>
vim <file>
ls
vi <file>
wget <URL>
clear
grep -i <string>
clear
ps ax
git add <string>
cp -r <directory>
sed -i <string>
sudo apt install -y <string>
grep <string>
rm <string>
ls
clear
ls
git add <string>
cd <string>
git add -u
cd <string>
git grep <string>
cp <string>
cd <string>
top
cd <string>
exit
npm run bench -- -c <file> -n <file>
cat <string>
docker exec -it <string>
vi <file>
rm -r <string>
ssh <string>
vim
sh -c <string>
vim <file>
<directory> install --from-paths <string> --ignore-src -r -y
cd <string>
vi <file>
npm run test
docker run -d -p <string>
npx shadcn-ui@latest add <string>
vi <file>
npm run start
cd ..
chmod +x <string>
ssh <string>
ln -s <string>
rm <string>
docker ps
docker ps
exit
ls
git add <string>
bash -v
sudo nano <directory>
ls
git status
find <directory> -type <string>
cd <string>
sudo python3 <file>
aptitude -y <string>
rm -f <string>
ls
vim <file>
sudo apt-get install <string>
cd <directory>
ls
sudo apt-get install <string>
sed --regexp-extended <string>
npm install --force
vi <file>
npm i
ls
sed <directory>
mvn exec:java
apt install -y <string>
export <string>
sudo mkdir -p <directory>
wget <URL>
exit <number>
exit
git add <string>
ls
pico <file>
git status
vim <file>
cat <string>
sudo snap install slack --classic
cd ..
ls
ls
git status
exit <number>
fg
cp <string>
ls
ls
stat <file>
ls
git init
init <number>
cut -d <string> -f <string>
sudo usermod -a -G <string>
vi <file>
sudo yum <string>
git push origin master
cd <string>
touch <file>
sudo make install
curl <string>
wget <URL>
sudo apt remove <string>
cat <string>
git pull
egrep -v <string>
git log
ls -R
git push
sed <directory>
vi
ls
git pull
fg
cd
mv <string>
ls
python3 <file>
ls
cd <directory>
pwd
sleep <number>
vim <file>
sudo usermod -a -G <string>
clear
git commit -m <string>
git push
exit
git remote set-url --add <string>
php <file> -profile=<string> -mode=<string>
codedown <string>
rm <string>
fg
mkdir <string>
rm -rf <string>
sudo rm -rf <string>
git pull -s <string> -X <string>
cd <directory>
wget -r <URL>
exit
more
cd
ls
mv <string>
chmod +x <string>
git pull origin master
exit
cd <string>
git init
apt-get install <string>
git status
npm install <string>
ls
vim <file>
ls
git rm -r <string>
clear
ls
vim
find . -empty -type <string> -print -delete
grep <string>
git pull
git config --get <file>
apt install -y <string>
ls
more <file>
mv <string>
git co master <file>
sudo cp -R <directory>
ls
sudo sed -i <directory> <file>
unset color_prompt force_color_prompt
ls
git pull
tail -2 <string>
cd ..
ls
sudo apt install <string>
sudo apt-get update
man <string>
curl -fsSL <URL>
sudo make
rm -rf <string>
read -rp <string> <string>
python3 <file>
cd <directory>
git commit -am <string>
ls
git pull origin
vim <file>
npx <string>
ls -a <string> <string>
clear
touch <file>
cd <directory>
nano <file>
clear
nano <string>
ls
code .
strings <file>
git reset HEAD -HARD
git branch
cd <directory>
git commit -m <string>
sudo pacman -Syu <string>
clear
sudo ifconfig en0 ether <string>
vim <file>
sudo supervisorctl update
export <string>
kubectl --namespace <string>
grep -i <string> >files
source <file>
rm <string>
grep -q <string>
sed -E -e <directory>
git status
vim <file>
ls
cd ..
killall <string>
cat <string>
git status
sudo python3 <file>
ps -df
chmod +x <string>
sudo chmod +x <string>
cd <directory>
cd <string>
cat <string>
git add <string>
exit
sudo sed -i <directory> <file>
exit <number>
git commit -m <string>
cat <string>
ls
cd
python3 <file>
vi <file>
diff <file>
sed -i <directory>
cat <string>
grep <string>
tee -a <string>
clear
vim <file>
sudo vim <file>
ls++ -a
cd <string>
rm
ls
sleep <string>
type <string>
cd <string>
sudo raspi-config
git add .
vi <file>
mv <string>
ls
mvn dependency:copy-dependencies -DoutputDirectory=<string>
sudo certmgr -ssl -m <URL>
git stash clear
cd ..
git push origin
ls
cd <string>
vim <file>
ls
source <file>
vim <file>
git add .
npm login
ls
exit
rm -f <string>
git add -u <string>
code .
bash
ls
git push -u <string> master
git clone <URL>
git push
git status
git pull
ls
ls++ -a
ls
vim
git push -u <string> main
sudo sh -c <string>
git status
ps aux
ls
cd <directory>
apt-get -y <string>
ls
brew tap <directory>
rm -rf <string>
su
sudo apt-get install -y <string>
ls
ls
npm run start
vi <file>
ls
sudo apt-get install <string>
git
code <string>
git push origin master
git commit -m <string>
vim <file>
ls
cd ..
ls
rm -rf <string>
chmod +x <string>
npm init -y
rm <string>
git pull
cd <directory>
npm install
vi <file>
sudo nano <directory>
git config <file> <string>
git diff
sudo rpm -Uvh <string>
cd <string>
sudo a2enmod <string>
cd <directory>
vim <file>
cd
grep -P <string>
sudo rpm --import <URL>
git push -u <string> master
git pull origin master
vim
git diff --no-ext-diff --cached --quiet
git commit -m <string>
clear
systemctl stop <string>
ps -eal
cd <string>
cd <string>
git push --tags
git init
python3
mkdir <string>
grep -q <string>
ls
git commit
vi <file>
cut -d <string> -f <string>
cd <string>
git rev-list --objects --all
fg
cat <string>
sudo service nginx reload
git push
ls
ls -lah
sudo apt install <string>
cd <directory>
exit
git add <string>
ls
ls
git clone <URL>
byobu-tmux
ls
npm install
git add <string>
git pull
ls
cd <string>
ps aux
docker ps
wget <URL> -O -
ls
cd ..
ssh dirlic@10.18.0.39 -p <number>
docker exec -it <string>
cd
wget <URL>
git status
sudo apt dist-upgrade
cd <string>
cd <string>
rm <string>
sudo apt install -y <string>
find . -name <file> -type <string> -print -delete
vim <file>
vim <file>
apt-get update
python <file> runserver 0.0.0.0:2016
sed <directory>
sed -i <string>
npm install <string>
git diff
ssh-keygen -t <string> -C <file>
cd <string>
sudo apt install apt-transport-https -y
mkdir -p <string>
ls
ls
exit
cd <directory>
htop
touch <file>
git status
vi <file>
sudo apt -y <string>
vi <file>
fg
git add <string>
ls
git commit -m <string>
git stash
ls
vim <file>
exit
cd <string>
cd <string>
ls
tail -n1"\
less <string>
rm -r <string>
ls -l
sudo apt upgrade
mkdir -p <string>
read <string>
vim <file>
export <string>
ls
npm install -g <string>
cd ..
ls
vi <file>
cd <string>
grep -v <string>
ls -lisa
sudo sed -i <directory> <file>
exit
ls -l
cd <directory>
fg
npm start
unset <string>
cat <string>
vim <file>
clear
exit
cd <string>
sudo shutdown
cd ..
<directory> <string>
cd ..
cd <string>
python2.7 -m <string>
cd <string>
rm <string>
ls
sh -s - <string> --cluster-init
sudo add-apt-repository <directory>
ls
npm audit fix -f
cd <string>
cd ..
find . -type <string> -exec <string> <directory>
git config --global <file> <file>
apt-get update
pwd
git commit -m <string>
sudo apt install <string>
sed <directory>
docker tag <string>
curl -X <string> -d <string> -H <directory> -H <string> -H <string>
userdel demouser
cd
grep -v <string>
man <string>
rm -f <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
npm install
git co -t -b <string>
sudo docker run hello-world
ls
exit
git st
su -c <string>
sudo apt remove <string>
ping <string>
history
git init
sed -i <directory>
sudo find . -empty -type <string> -print -delete
sed <directory>
git remote -v
sudo apt install zsh -y
vim <file>
sudo rm -rf <directory> <directory>
cat -v <string>
git add <string>
cd ..
cd <directory>
docker-compose up -d --build
sudo sed -i <directory>
ls
ls
ls
cd ..
ls
git add <string>
<file> program
ls
git commit
git remote -v
git commit -m <string>
ls
cd <string>
sudo pacman -S <string>
ssh -t <file> tmux new -As0
exit
ls -lhr
cd <string>
wget <URL>
git status
read -p <string>
python3.11 <file>
git branch -M <string>
git pull
vi <file>
which <string>
git add .
git clone <URL>
rm -r <string>
vim <file>
cd <string>
git commit -m <string>
cd <string>
ln -s <string>
ls
cd ..
ls
exit
wget <URL>
nano <string>
cd <string>
bazel build -c <string> --config=<string> <directory>
cd ..
clear
wget <URL>
exit
kubectl delete --filename <file>
sudo apt-get install <string>
cd ..
cd <string>
grep -R <string>
sleep <number>
ls
npm install -g <string>
curl -fsSL <URL>
clear
npm start
cd <directory>
ls -lr
mkdir <string>
git log --oneline
git add <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
cd <string>
git push
cd <directory>
cd <directory>
wc -l <string>
cd..
ls
cd <string>
ls
find . -type <string> \( -name <string> -o -name <string> -o -name <string> -o -name <string> -o -name <string>
sudo su
exit
exit <number>
grep -rE <string>
vi <file>
cd ..
npm install bit-bin -g
cat <string>
ls
cd <string>
ls -al
exit
git status
sudo xbps-install -Su
touch <string>
sed <directory>
mkdir <string>
open .
rm -f <string>
du -shc <directory>
git push
sed -i <directory>
chmod -x <file>
dir
clear
cd -
su - -c <string>
wget <URL>
ls
then\
mkdir <string>
chmod <string>
git push -u <string> main
grep <string>
ls
ls
sudo mount -t <string>
cd <string>
ls
npm i glob -f
git status
sudo dpkg --configure -a
tail -5
ls -la
ls
sudo apt install <string>
cd <directory>
ls
diff <file> <file>
python3 <file>
exit
cd ..
mkdir <string>
docker login
sudo sed -i <directory> <file>
cd
clear
sed <directory>
ls
exit <number>
mkdir <string>
ls
sudo apt-get update
ls
ls
git status
cd <string>
less <string>
python3 -m <string>
git add <string>
su
ls
cd <directory>
grep -R <string>
git --version
cd <string>
cat <string>
ls -l
byobu-tmux
ls
ls
journalctl -b
git clone <URL>
ls
cd <string>
vim <file>
screen -r <string>
ls
gsettings set <file>
mkdir <string>
git status
git status
exit <number>
mkdir <string>
cp <string>
cd ..
ls
exit <number>
sudo apt-get install <string>
docker-compose up -d --build
sudo apt-get install <string>
cd ..
rm <string>
sudo mkdir -p <directory>
npm install
ssh -X <string>
grep <string>
ls
ls
cd <string>
git push
sudo sed -i <directory>
git add <string>
ls -la
ls
clear
python3 <file>
sudo apt install gdebi -y
cp <string>
apt-transport-https \
cd ..
killall <string>
git commit -m <string>
sudo ldconfig
nano <file>
screen -r <string>
code
cd ..
cd <string>
rm -rf <string>
reboot
nano -w <directory>
ls
git add .
ls
sed -n -f <string>
git commit -m <string>
w
ls
cd <string>
ls
git commit -m <string>
git init
ls
git clone <URL>
cd <directory>
cd ..
cp <string>
cd ..
cd ..
ls
sudo ansible all -a <string>
printf <string>
rm -rf <string>
cd
ls -la <directory>
python3 <file>
rm <string>
ls
npm run test
npm install --save <string>
du -skh <string>
git config --system <file>
ls
ls
cd <directory>
cd ..
vim <file>
vi <file>
sort
cd <string>
npm install -g <string>
cd <string>
rm -r <string>
git clone <URL>
vim <file>
sudo apt-get purge <string>
chmod <string>
clear
sudo apt install <string>
ls
ls
git init
ls
ls
vi <file>
fg
ls
ls
git commit -m <string>
ls
cd <string>
cp <string>
s/:/ <directory>
cd ..
sudo chown <string>
ls
cd <directory>
ex
vi <file>
vi <file>
rm -fr <string>
exit
lsblk
exit
git commit -m <string>
cd
sudo apt install <string>
clear
ls
cat <string>
cd <string>
git clone <URL>
cd <string>
ls
ls
yarn add <string>
git init
find . -size <string> -a -print -a -exec <string> -f <string> \
capsctrl <directory> & disown
chmod +x <string>
git pull -f
ls
vim <file>
cd <string>
exit
curl <string>
uniq
vi <file>
cd <string>
git pull origin
sudo vi <directory>
clear
git commit -m <string>
apt-get -y <string> --no-install-recommends <string>
cd ..
git diff
ls
sh -c <string>
sudo -E <string> <string>
nano <string>
ls
cd <string>
sudo systemctl restart <string>
fg
npm i
perl -e <string>
rm -rf <string>
ruby -e <string>
zeus.polsl.gliwice.pl - <number>
ls
rm <string>
sudo apt-get install grep -y
sudo ufw status
cd <directory>
mv <string>
sudo apt-get install <string>
git push
vim <file>
git init
ls
cp -r <directory>
ls
cd ..
git push -u <string> master
vi <file>
npm start
cd <string>
sudo pacman -Syu
git commit
ls
git checkout <string>
sed -i <string>
cd ..
ls
dmesg
git add .
cd ..
ls
vim <file>
cd <directory>
git commit -m <string>
cd <string>
clear
npm install
ls
cd <string>
sudo sed -i <directory> <file>
date
wget <URL>
vi <file>
fg
ls
mkdir <string>
git clone <URL>
rm <string>
docker login <string>
npm run devstart
sudo alternatives --set <string> <directory>
git add .
ls
cd <string>
vim
clear
git status
git push
find . -name <file> -type <string> -exec <string> -rf <string>
python3.11 <file>
chmod <number> <string>
dir
vim <file>
eval <string>
sudo apt install <string>
cd <string>
ls -alrt
nano <file>
npm i --save-dev <string>
cd <directory>
exit
grep -r <string>
cd <string>
cd ..
docker images
ps
git status
go build <file>
ls
sudo sysctl --system
ps aux
git add .
less <string>
yarn add <string>
sleep <string>
cd <directory>
exit
clear
cd <string>
cd <string>
touch <file>
vim <file>
wget -q -O - <URL>
cd ..
cat <string>
sudo <directory> --install -DCMAKE_BUILD_TYPE=<string> --install-space <directory>
more <file>
ls
vim <file>
cd <directory>
cd <string>
git status
rm -rf <string>
sudo apt-get -y <string>
kubectl <string>
read -s -n <number>
cd
grep -i -E -o --no-filename <string>
python3 <file>
cd <string>
wget <URL>
git push -u <string> main
cd <string>
wget $URL -O <string>
done
chmod +x <string>
cd <string>
pacman -Syy
cd <string>
sudo ln -s <directory>
find <directory> -type <string> -name <file> -exec <string> -xf <string>
curl -sL <URL>
mount -l
free
cd <string>
read <string>
git remote remove origin
git add <string>
mkdir <string>
npm run prod
diff <file>
unset <string>
git add <string>
vi <file>
df -h
cd <directory>
kubectl get databases -n <string>
cd
cat <string>
npm test
npm init -y
grep <string>
cd.
git init
grep <string>
nano <file>
git checkout -b <string>
rm -f <string>
wget -q <string> -O <directory>
mv <string>
grep <string>
reset
sudo swapon --show
ping <file> -c <number>
source <directory>
top
git remote add origin <URL>
vi <file>
xargs -L1 <string>
sed -i <string>
git commit -a -m <string>
ls
git config --global <file> <file>
ls
ls
sudo wget <directory> -O <directory>
ls
ls -l
ls -alrt <string>
python3 <file>
mv <string>
ssh -i <string> remote_user@remote_host
su -{user} <string>
code .
git push -u <string> master
git add .
cp -r <directory>
sleep <number>
ls
cd <directory>
diff <file> <file>
ls
bash <file>
tr -dc <string>
sudo ifconfig en0 ether <string>
ls
mv <string>
vi <file>
ls -ltr
sudo apt install <string>
git add .
cd <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
git log
git add .
clear
dir
cd ..
sync
grep -P <string>
ls
cat <string>
fg
cd <string>
ls
tmux a
ls -l
git push
tmux new -s <string>
cd
source <directory>
bash <file>
mv <string>
cd <directory>
sudo vim <directory>
sudo npm install --save <string>
sudo rm -rf <directory> <directory>
cd <directory>
vim <file>
vim
cd <string>
ps aux
git pull
yarn add <string>
ls -a
exit
ls
sync
vi <file>
sudo docker exec -it <string>
git pull
rmdir <string>
ls -lh <string>
grep -r <string>
vim <file>
sudo sed -i <directory> <file>
exit
cd <string>
sudo lshw
nano <file>
vi <file>
npm run start
ls
ls
git status
sudo vi <directory>
clear
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
nano
git clone <URL>
grep -i <string> >files
vim <file>
cat <string>
clear
cd <directory>
npm create vite@latest
cd <directory>
ls
reboot
cd <string>
ls
ssh <string>
sudo pip3 install <string>
ls
vim <file>
code .
rm -r <string>
cd <string>
cd <string>
mkdir -p <string>
ls++ -a
pwd
sudo cat <directory>
exit
grep <string>
then\
git status
npm run make
pwd
cd <directory>
clear
vim <file>
patch <file>
cd <string>
cd ..
git status
cd ..
read
su
docker-compose up -d --build
clear
exit <number>
git add <string>
cp <string>
then
sudo nano <file>
dir
curl -fssl <URL>
cp <string>
done\
git diff
cd <directory>
openssl genrsa -out <file>
cd <string>
touch <string>
cd <string>
ls
fg
ls
sudo apt -o <string> -o <string>
ls
ps
rm -if <string>
ls++ -a
git pull
find . -name <file>
ls -l
git add --all
read -s -n <number>
ls
<directory> <string>
ls
rm -rf <string>
git push
ls
ls -la <directory>
git commit -m <string>
git status
ls
node <file>
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
git checkout master
ls
git commit --amend
cp <string>
ls
git checkout master
ls -lAF
ls
rm -r <string>
npm init -y
git switch --create <string>
ls
git add <string>
rm -rf <string>
curl <string>
git submodule update --init --recursive
git checkout -b <string>
ssh <string>
clear
then\
sudo sed -i <directory> <file>
npm i
clear
ls
clear
fg
cd <string>
git pull origin master
git commit -m <string>
ls
yarn
sudo reboot
ls
cd
mkdir -p <string>
git clone <URL>
git push --set-upstream <string> main
git remote add origin <URL>
exit <number>
ls
ls -lah
git commit -m <string>
ls
ls
unzip <file>
service <string>
read <string>
git hist
cd <string>
sudo apt update
ls
ls
clear
git checkout <string>
rm <string>
sudo apt update
sort -rn
ls -ltr
sudo nano <string>
rm -fr <string>
curl -fLo <file> --create-dirs <string>
df
ls
rm <string>
mkdir -p <string>
sudo vim <file>
sudo apt-get update
docker run -d -p <string> <string>
cd <directory>
ip a
wget <URL> -O <directory>
vim <file>
<directory> <string>
cd <string>
ls
cp <string>
ls
read <string>
ps -auxwf
curl -T <directory> <string>
sudo sed -i <directory>
clear
exit -1
cd <string>
ls
cd <directory>
grep <string>
ls
git config --global --edit
chmod u+x <string>
ls
ls
npm run dev
git status
git status
ls
sudo apt-get install <string>
cd <string>
ls
cat <string>
sudo dnf remove <string>
npm start
exit
bash
vi <file>
rm -f
git status
read -e -n1 -r <string>
ls
ls
ls
sudo service <string>
vi <file>
cd <directory>
chmod +x <string>
curl -fsSL <URL>
cd <string>
sudo mv <string>
awk -F'/' <string>
git commit -m <string>
sudo rm -rf <string>
more <file>
sudo mkdir -p <directory>
npm install
git status
git push
cd <directory>
ls
kubectl get pods -n <string>
git init
npm install
ls
clear
git remote -v
npm install
rm -r <string>
nano <file>
git push origin <string>
cd <string>
cd
ls
git init\
mkdir -p <string>
sed -i <directory>
ls
ls
clear
nano <file>
grep <string>
cd <string>
git add <string>
nano <file>
ls -ltr
which <string>
more <file>
cp <string>
sudo vi <directory>
rm -rf <string>
scp <string>
nano <file>
git status
cd ..
exit
sudo apt update
fg
cd <string>
vi <file>
ls
npm install <string>
cd <string>
git commit -m <string>
su field
rm <string>
vi <file>
clear
cat <string>
git merge <string>
ls
ls -lah
vim <file>
sed <directory>
git diff
cd ..
sudo apt-get install <string>
ls
git remote add origin <URL>
find src
npm install --save <string>
cd ..
cd <string>
read -r -p <string>
sudo apt-get dist-upgrade
clear
git checkout master
grep -rF <directory> --exclude-dir <string> --exclude-dir <string>
exit
sudo systemctl daemon-reload
update-alternatives --config <string>
exit
sudo apt install <string>
cd <string>
vi <file>
alias <string>
ls
cd <directory>
shutdown -h <string>
cd <string>
ls
grep <string>
git add <string>
cp <string>
cd <directory>
cat <string>
man <string>
git
git clone <URL>
curl -s <string>
ls
python3 <file>
cd ..
git status
clear
apt-get install -y <string>
ls
clear
ls
vim <file>
npm run coverage
sudo port <string>
find <directory> -group <string>
cd ..
python3 <file>
mv <string>
cd
cd
vim <file>
cd ..
export <string>
cd <string>
fg
fg
ls
telnet <string>
npm start
unset <string>
ip addr
pwd
cd <directory>
curl -o- <URL>
cd <directory>
vim <file>
cd ..
ping <string>
cd <string>
git pull
ls
ls -al
ls
vi <file>
vi <file>
git commit -m <string>
telnet <string>
ls
sort
fg
git status
cd <string>
git add .
source <file>
curl $IMGURL -o <file>
sudo apt update
cat <string>
git commit -m <string>
cd <string>
chmod u+x <string>
ls
kill -9 <number>
git merge <string>
vi <file>
cd <string>
sudo systemctl status <string>
curl -s <directory> -s <directory>
cd ..
clear
tr <string> <string>
ls
cd <string>
wget --content-disposition <string>
ls
ls -ltr
cd ..
git add .
cp <string>
vim <file>
cd ..
sudo systemctl enable <string>
find <directory> -name <file> -type <string> -print <string>
ls
ls
cd <string>
apt update
git rebase -i <string>
cd <directory>
git commit -m <string>
cd
exit
awk <string>
vim <file>
ls
clear
cd
vim <file>
ssh-keygen -l -f <directory>
cd ..
read -rp <string> <string>
git init
cd <directory>
cd <directory>
cd ..
git clone
npm audit fix
ls
cd ..
ls
cat <string>
ls
clear
npm install <string>
git add <string>
ls
find . -name <file> -type <string> -print -delete
git --version
ls -la
git add <string>
vim <file>
git commit -m <string>
cd <directory>
source <directory>
vim <file>
exit
cd <directory>
git pull
cp <string>
ls
nano <file>
kill -9 <number>
git add <string>
cd <string>
head -10\
clear
cd <string>
ls
clear
ls
rm -rf <string>
docker
cd <directory>
pkill <string>
clear
git branch -v
xargs grep <string>
sed <directory>
ls
hostname
mvn hpi:run -Djava.awt.headless=<string> -Djetty.port=<number>
cd ..
npm run bench -- -c <file> -n <file>
git config --global <file> <string>
ls -l
ls
git clone <URL>
cd ..
shutdown -h <string>
ls
ls
mkdir <string>
docker push <directory>
ls
screen -rd <string>
cd <string>
touch <string>
git commit -m <string>
cut -d <string> -f <number>
sort
ls
top
git grep -l <string>
clear
ls
sudo apt update
git add .
cd <string>
sudo login root
cd <directory>
npm i
ls
git remote add origin <URL>
sleep <number>
mv <string>
vi <file>
git status
sudo bash <file>
<directory> -m <file>
else\
sudo apt install openjdk-11-jdk -y
vim <file>
apt-get -y <string> <string>
npm start
ls
mv <string>
git remote -v
find . -name <file>
head <filename> # outputs the first lines of file (default: <number> lines)
cd ..
ls
git push origin
pwd
ssh <string>
vim <file>
ls
killall <string>
docker exec -ti <string>
sed -e <string> -e <directory> -e <string> \
exit <number>
ps
brew install --cask <string>
cd <directory>
sudo sed -i <directory> <file>
perl <file>
ls
cd ..
npm run test
docker-compose
cd <string>
git add .
vi <file>
git clone --depth <number> <URL>
sudo sed -i <directory>
ssh-add <directory>
cd <string>
cd <string>
cd <directory>
ls
rm -R <string>
grep <string>
ls
exit
git init
git add .
exit
git checkout -b <string>
git restore <file>
clear
ls
clear
ls
touch <file>
mv <string>
git add <string>
ls # lists your files in current directory, ls <dir> to print files in a specific directory
cd <string>
cd <directory>
tail -f <directory>
mv <string>
more <file>
history
cd <directory>
ls
kill -9 <number>
cd <string>
git reset --hard
sudo reboot
sudo -H <string>
ls
sed <directory>
cd
vim <file>
sudo docker kill corrade
git commit -m <string>
bash
cd
ls
history -r
clear
ls
cat <string>
mv <string>
xrandr --help
done
cd <directory>
ping <string>
cd <string>
vi -t <string>
ls
vi <file>
exit
git commit -m <string>
python3 <file>
sudo nano <directory>
vi <file>
ls
cd <directory>
sudo dnf install -y <string>
cd <directory>
cd <string>
clear
git add .
git commit
sudo -H <string> install <string>
yarn <string>
curl -fsSL <URL>
grep <string>
git init
git pull origin master
git push origin master
ls
mkdir <string>
clear
ls
vi <file>
ls -la
exit
git clone <URL>
ls
tmux set-option -g <string>
fg
git rebase -i <string>
ip a
clear
ls
git diff
rm <string>
xargs -L1 <string>
cd ..
cat <string>
rm <string>
git tag <string>
export
npm create vite@latest
ls
sudo systemctl daemon-reload
ls
ls
git add <string>
git please
systemctl --type=<string>
cat <string>
ls
du
cd <string>
cut -d <string> -f <string>
vim <file>
vi <file>
cd <directory>
sudo rm -rf <string>
ls
sudo -u <string>
head -1
sudo python <file>
python3 <file>
cd <string>
rm -r <string>
ls
git add <string>
cd <string>
git clone --depth <number> <URL>
exit
sudo apt-get dist-upgrade
git push
git add .
git rebase --continue
tail -f <directory>
sudo apt-get install <string>
ls
rm -rf <string>
vim
git fetch
mv <string>
cd
cd <string>
cd <string>
find . -name <string> -type <string>
ls
sudo apt-get update
cp -f <string>
git pull
cd <string>
cut -c <string>
kill -9 <number>
sudo <file> -v -w <string> -o <string>
cd
clear
pwd
ls
apt-get install <string>
nano <file>
git push -u <string> main
git log
sh <file>
cd <string>
cat <string>
cat <string>
git init
ls
cd <string>
ls
ls
ls
clear
git diff <string>
cd
ls
clear
git push
cd <directory>
shutdown now
cd <string>
ps aux
git add .
ls
clear
vi <file>
tail <file> -n <number>
cd <string>
apt-get
mkdir <string>
npm i <string>
exit <number>
npm run start
grep -i <string>
pwd
sed -i <directory>
perl <file>
cd <string>
grep -Eio <string> <string>
ls
diff --h
nohup <string>
cd <directory>
sudo swapon --show
sudo vi <directory>
ls -lh
mkdir <string>
sudo systemctl status <string>
ls
git branch -d <string>
git add .
git branch -M <string>
clear
read -rp <string> <string>
clear
cd ..
cd ..
vim <file>
code <string>
vim <file>
vi <file>
kubectl exec --stdin --tty <string> -c <string> -- <directory>
git add -A
fg
sudo cron status
python3 <file>
cd <directory>
mv <string>
read -p <string>
sudo apt-get install <string>
npm i --legacy-peer-deps
git co master
uname -m
sudo nano <string>
sudo pip install <string>
git push
sudo apt-get install <string>
sudo ln -s <directory>
vi <file>
cp <string>
mkdir <string>
wget <URL>
sudo python3 <file> install
read -p <string>
git add .
docker tag <string>
curl <URL> -u <string> -d <string> -d <directory> -d <directory> -d <string>
mkdir <string>
ls
mkdir <string>
tmux
ls -la <directory>
docker run
git commit -m <string>
git checkout <string>
ls
cd <directory>
git add .
python3 <file>
ip a
cd <directory>
chmod +x <string>
ps aux
ls
ls
cat <string>
npm publish
ls
ls
vim <file>
ls
exit
g++ -std=<string> <file> -o <string>
ls
ls
ls -la
ls
exit
cp <string>
sudo python3 <file>
cd <string>
xargs grep <string>
ls -l
ls
strings <file>
sudo chmod -R <number> <string>
cd <directory>
done
ls
nc <number> <number>
git push
nano <file>
wget -O <file>
git remote add origin <URL>
sudo pip install <string>
rm -r <string>
mkdir <string>
git commit -m <string>
vi <file>
zcat <file>
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
vi <file>
python3 <file>
git push --set-upstream <string> master --force
halt
ls
sed -i <string> -e <string>
diff -u <string>
ls
exit
rm -rf <string>
sudo chmod a+wr <directory> -R
git commit -m <string>
git diff --name-only --relative --diff-filter=<string>
sudo pacman -Scc
ls
cd <string>
rmdir <string>
grep -i <string> >files
setg RHOSTS.*
wc
mv <string>
npm run dev
sudo apt purge $(dpkg -l
vi <file>
ls
ls -l
git add .
ex
history -s <string>
sudo pacman -S <string>
sudo aptitude purge <string>
cd
ls
sudo service <string>
vim <file>
tmux source <file>
python3 <file>
git add --all
sudo add-apt-repository -y <directory>
cd ..
ls
rm <string>
chmod <number> <string>
curl -sLo <file> --create-dirs <URL>
scp <string>
dpkg-shlibdeps: <string>
ls
grep -n <string>
wget <URL> -O <file>
sudo npm uninstall -g <string>
exit <number>
fg
vim <file>
sudo apk add <string>
cd <string>
curl <string>
cd <string>
rm -rf <string>
cd ..
ls
git fetch
git stash
ls
sudo rm -R <string>
code
ls
cat <string>
cd <string>
touch <string>
find <directory> -name <string>
ls
git init
ls
nano <string>
vi <file>
git hist
cd <string>
npm install <string>
ping <file>
<directory> <directory>
cat <string>
ls
ls
ls
git init
docker exec -it <string> bash
ls
sudo mkdir -p <directory>
cat
sed <directory>
sudo docker ps
cd <string>
python3 <file>
mkdir <string>
docker-compose up -d --build
git pull
fg
chmod <number> <string>
git add -v <string>
ls
sudo lsblk -o <string>
sudo adduser --system --no-create-home --group <string>
cd <directory>
rails <string>
ls
git add .
ls
sudo wget <URL>
reboot
ls
git add .
grep -Eo -e <string>
ls
ls
cd <directory>
ls
git remote -v
head -n1\
git commit -m <string>
git commit-tree <string>
npm run test
systemctl list-units --type=<string>
python3 <file>
rm <string>
wc
git commit -m <string>
ls
apt-get install -y <string>
printf <string>
git diff --cached
pwd
git commit -m <string>
git --no-pager <string> -n <number> --pretty=<string> <string>
cd <directory>
nc <string>
sudo chmod +x <string>
ls
ping <string>
git push
ls -ltr
killall <string>
python3 <file>
rm <string>
git checkout -b <string>
sudo apt-get --assume-yes <string> <string>
git pull
tail -f <directory>
done
vim <file>
vi <file>
git status -ignore
cd <directory>
cd <string>
cd ..
rm -f <string>
cd <string>
chown <string>
npm run coverage
vi <file>
clear
python3 <file>
clear
ln -s <string>
who
sudo rm -rf <string>
ls --help
cd <string>
sudo mkfs.ext4 <string>
sudo apt -y <string>
ping <file> -DA
git status
cd <string>
exit <number>
export <string>
clear
git remote -v
clear
git submodule add <URL>
npm start
git pull origin development
cp
find . -name <file> -type <string> -print -delete <string> pull git pull -f <string> pull find . -name <file>
grep -n <string>
ls
sudo pacman -S <string>
chmod <number> <string>
clear
ls
sudo pacman -U <file>
cd ..
clear
rm <string>
cd
ls
git add <string>
open <string>
cd <string>
ls
rm -rf <string>
rm -rf <string>
curl -T <directory> <string>
vim <file>
cp <string>
grep <string>
grep -B1 --color -E <string>
cat <string>
cd -
cd ..
ls
git push origin main
cd
cd ..
ls
cd ..
tail -f <string>
ls
cd ..
sudo apt-key adv --keyserver <string> --recv <string>
fg
sudo cat <directory>
history
python3 <file>
chmod +x <string>
cd <directory>
grep -a <string>
git init
sed <directory>
vi <file>
cd ..
rm -rf <string>
git bisect good <string>
cd <string>
cd <string>
gpg --recv-keys <string>
ls
exit
sudo python3 <file>
cd <string>
sed <directory>
cd <string>
ls
sudo apt -y <string>
exit
ls
git submodule init
vi <file>
sudo rm -f <directory>
vim
cd <string>
sleep <number>
docker exec -it <string> bash
ls
cd <directory>
ssh-copy-id <string>
git init
ls
git init
grep -v <string>
read <string>
fg
clear
vi <file>
tee <file>
exit <number>
man <string>
cp -r <directory>
git stash
sudo chmod <number> <string>
awk <string>
git add <string>
then
pwd
code <string>
sudo npm install -g <string>
git add .
head
ls
ls
ls
git clone <URL>
pwd
git status
cd <string>
clear
find $dir -type <string>
du -sh <directory>
cd <directory>
git remote add origin <URL>
grep -ia <string>
cd <string>
git add .
cd <string>
ls -al
grep <string>
tmux --a
cd <string>
ls
git branch
exit
sudo sed -i <directory>
cd <directory>
ls
cd <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE <string>
cd ..
cd <directory>
ls
chmod <string>
npm run test
sudo apt install <string>
tail -f <string>
ss
wget -O <file>
ls
curl -Is <string>
git init
cd <string>
vim <file>
git commit
cd
rm -fr <string>
clear
grep <string>
mkdir <string>
exit
docker exec --tty --interactive <string>
ls
ls
sudo systemctl start <string>
ls
mv <string>
git add .
cat <string>
cat <string>
npm start
git add -A
mkdir <string>
sudo nala purge <string>
exit
lsblk
git commit -m <string>
clear
cd <string>
vim
ls
cd ..
sed -i <directory>
npm run dev
mkdir <string>
git clone <URL>
sudo sed -i <directory> <file>
vim
sed -E -e <directory>
cd ..
cd ..
ln -sfn <directory>
scp <string>
mkdir -p <string>
touch <file>
clear
rake <string>
vi <file>
ls
ls
exit
nano <file>
git add <string>
rm -rf <string>
source <file>
htop
cp <string>
sudo pcmanfm
cd <directory>
git pull
git init
git push -u <string> master
rm <string>
ls
clear
sudo chmod +x <string>
man <string>
cp -v <string> <directory>
env
exit
ls
git remote -v
ls
ls
ls -la
read <string>
npm run test
ls
cd <string>
ls
ls data* -l
ls
tail +x # want to display all the lines from x to y. This includes the xth and yth lines.
cat <string>
read -r -p <string>
nano <file>
vim
vi <file>
ls
cd <string>
ls
git add -A
ls -la
git branch
touch <string>
ls
xargs -0 <string> --color=<string> -sn <string>
curl -o <string>
ls
cd <directory>
cd <string>
kill -9 <number>
rm -r <string>
cd <string>
mkdir -p <string>
fg
env
git clone <URL>
sudo make install
ls
exit
docker images
touch -a -m -t <string>
npm run pretty
exit
vim <file>
cd <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
cd <string>
diff <file>
lshw -short
bash
uniq
clear
npm start
git clone <URL>
git init
node <file>
ls
git commit -m <string>
ssh root@127.127.127.127 -i <directory>
clear
sed <directory>
egrep -ri <string>
vim <file>
git pull
ls
grep -v <string>
cd <string>
cd <string>
unzip <file>
grep <string>
sudo vi <directory>
cd <string>
find . -name <string> -type <string>
cd <directory>
git add <string>
git add .
git add .
ls
vi <file>
ls
sudo rm -rf <directory> <directory>
cd <string>
sudo apt-get install <string>
rm -rf <string>
ls
exit <number>
git push -u <string> master
sudo apt update
ls
curl -fsSL <URL>
wget -q -U <string> --post-file <file> --header <string>
git add .
rm <string>
ls
git branch -M <string>
sudo journalctl -u <file>
cd ..
ls
cd <string>
sh
gpg --list-sigs
fg
local <string>
nano <string>
grep -i <string>
exit
ls
sudo stop uwsgi
sudo systemctl enable <string>
python3 <file>
exit
script/build.sh
patch -p1 <string> <file>
sudo git push <string>
chmod +x <string>
man <string>
ls
fg
ls
sudo flatpak override --filesystem=<file>
ls
read -r -p <string>
openssl rand -base64 <string>
sudo -H <string> install <string>
touch <string>
git fetch
ls
sudo reboot
ls
cd <string>
fzf
scp <string>
vim <file>
cd <string>
clear
vim <file>
git status
ssh-add <directory>
ls
exit <number>
ls
rm <string>
ls
ls
cd ..
cd <string>
cd <string>
python3 <file>
git clone <URL>
ls
git status
sudo npm i --legacy-peer-deps
ls
vim <file>
git status
exit
npm config set prefix <string>
sudo apt-key add -
cp <string>
read -p <string> -r <string>
cd <string>
sudo vim <directory>
sudo service nginx restart
ls
clear
vi <file>
rm <string>
vim <file>
fg
git push heroku main
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
cd <directory>
stat --help
npm run dev
touch <string>
find . -type <string> -exec <string> -i <directory>
fg
wget <URL>
exit
cd
apt install -y <string>
vi <file>
ls
ps aux
cd <string>
cat <string>
rm -r <string>
git log
ls
git commit
clear
service <string>
vi <file>
cat <string>
cd <directory>
git fetch
ls
cd ..
cd ..
ls++ -a
cd <directory>
git add .
cd ..
ln -s <string>
cd <string>
touch <string>
pwd
dpkg -L <string>
ls -alrt
git add .
vi <file>
ls
ufw -man
npm i
sudo lvremove <directory>
sudo du
git commit -m <string>
cd <directory>
vim <file>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
sudo semodule -i <file>
find . -name <string> -exec <string> -- <string>
mv <string>
git status
git add .
ls
ls -la
sudo apk add <string>
npm install react-native-reanimated-carousel --force
git commit -m <string>
vi <file>
git status
ls
scp <string>
export <string>
sudo chown -R <string>
git push
ls
git add .
sudo mount <directory>
cd
ls
git add .
du -ah <directory>
read -r <string>
cd ..
exit
node <file>
ls
grep --?
cat <string>
git push origin main
uniq
cd <directory>
nano <file>
git commit -m <string>
ssh-keygen
git status
cd <string>
ls
grep <string>
npx -v
git add .
ls
ls
sed -E -e <directory>
nano <file>
sudo apt install <string>
sudo sed -i <directory> <file>
ls
sudo sed -i <directory> <file>
git add <string>
git push -f <string> <string>
sudo apt-get install <string>
ls
pwd
cd <directory>
ls
fg
fg
git commit -m <string>
cd <string>
clear
git remote add origin <URL>
cd ..
cd ..
which <string>
curl -fsSL <URL>
ls
done
cd ..
rm <string>
mkdir <string>
ls -l
git pull
sudo npm install -g <string>
ls
vim
cd <directory>
git add .
git init
cd <string>
grep -i <string>
git log
clear
cut -d',' -f1 <file>
less
git push
nano <string>
cd <directory>
git checkout <string>
git commit -m <string>
df -lh
ls
git add <string>
ls
python3 <file>
cd ..
vi <file>
sort -nr
cd <string>
curl
sudo apt install <string>
docker tag <string>
touch <file>
cd
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
mv <string>
fg
ls
read <string>
git checkout <string>
rm -r <string>
ls
tmux a
ls
git add .
ssh <string>
npm -v
git init
python3 <file>
python3 <file>
cd
touch <string>
ls
cat <string>
cat <string>
cat <string>
cd <string>
clear
npm install
chmod +x <string>
open .
cd <directory>
sleep <number>
tail -$lineas2 <string>
cd <directory>
npm install
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
find . -type <string> -name <string> -print0
git clone <URL>
cd <string>
kill -9 <string>
ls
ls
cd <string>
find . -empty -type <string> -print -delete
ls
ls
grep <number> -nrw
cd
git push
history -a
sudo
ls
vi <file>
ls
top
cd <string>
ls
ls
read -p <string>
cd <string>
ls
cd <directory>
apt update
nano <file>
ls
ls -l
ls
cat <string>
cd <directory>
cp <string>
sudo apt install <string>
ls
ls
git status
ss -lntu
cd <string>
yarn install
vi <file>
ls
xrandr --help
git reset --hard
ls
ls
cd <string>
curl -fsSL <URL>
ls -lah
sudo apt update
sudo apt-get install <string>
find $dir -type <string>
cd ..
awk <string>
cd ..
exit
cd <string>
htop
read -r <string>
cd <directory>
ls
cd <string>
git status
sudo vi <directory>
ls
ls
open <string>
ls
ls
npm i -g <string>
grep <string>
cd <string>
docker ps
ls
git add .
bash <file>
vim <file>
docker start <string>
sudo apt-get install <string>
sudo apt-get install <string>
ps -aux
git clone <URL>
ls
cd <string>
tail -f <directory>
ls -lah <string>
git pull
exit <number>
vi <file>
touch <file>
cd - <string> <string>
ls
git pull origin development --no-ff
cd ..
exit
ls
python3 <file>
pwd
cd <string>
git remote add origin <URL>
ls -a
vim <file>
ls
ls
cd ..
git
rm -rf <string>
find . -name <file> -type <string> -exec <string> -rf <string>
ls
man <string>
cd ..
grep <string>
ls
exit <number>
sudo make install
vim <file>
systemctl --type=<string> --state=<string> --all
vim <file>
history
sudo sed -i <directory> <file>
git init
curl <URL> -o <string> --template=<string>
git status
mv <string>
ls -la <directory>
vim <file>
sudo mount -t <string> -o <string>
fc-cache -fv
npm install <string>
uname -m
rm -rf <string>
ls
cat <string>
cd ..
curl --progress-bar -L -O -C - <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
sudo -i
sudo rm -rf <string>
git add .
git add .
sudo -H <string> install <string>
ls
git config --global <file> <file>
git add <string>
ls
ls -ltr
scp <string>
cd <string>
cd <directory>
git commit -m <string>
chmod +x <string>
git remote add origin <URL>
xargs sed -i <string> -e <directory>
curl -s <string>
exit
git pull
cd <string>
eval <string>
ls
xargs -I <string> git -C <string>
pacman -S <string>
cd <string>
ls -l
git checkout <directory> -f
vim <file>
cd <string>
cd <directory>
sudo apt-get install <string>
docker ps
ls
rm -f <string>
ls
vim <file>
git rebase -i <string>
cd <string>
mkdir -p <string>
vi
exit
source <string>
wget -qO - <URL>
vim <file>
ls -a
cd <directory>
ssh <string>
rm -r <string>
ls
grep -v <string>
ls
rm -rf <string>
cp <string>
rm -r <string>
sudo mv <file>
git add .
fg
sudo shutdown
npm install -g <string>
apt update
cd <string>
sudo python <file>
ls
git remote add origin <URL>
git add <string>
git stash
code .
sudo apt-key add -
cd ..
cd <string>
ls
ls
sudo poweroff
cd ..
git log
cd <string>
cd <directory>
npm install
vim <file>
mkdir <string>
sudo nano <file>
help
cd <string>
lsof -n -i4TCP
rm <string>
sh <file>
python3 <file>
sudo cp <string>
find <directory> -type <string>
ls
bash
rm -rf <string>
find . -type <string> -mtime <string>
ls
wget -O <file>
grep -i <string> >files
git remote set-url origin <string>
git tag <string>
exit
git add .
fg
ls
exit
cd <string>
clear
git commit -m <string>
cd <string>
python3 <file>
git push origin master
ssh -L <string> -N -f -l <string> <string>
ls
source <file>
cd <string>
sudo python <file> -cascade==<file> <number>
ls -la
cd <string>
sudo rm -rif <string>
clear
ls
git add .
apt-get -y <string>
bash
cd <directory>
cd <string>
clear
grep -Fxq <string>
exit <number>
mv <string>
sudo vim <directory>
open <string>
ls
sed -e <directory>
cat <string>
ls
npm i
sudo apt install <string>
sudo do-release-upgrade
cd
ls
git checkout --track <directory>
cd ..
clear
clear
exit <number>
man <string>
pwd
exit
source <file>
sudo python <file>
exit
ls _build
npm install clipboard --save
script/build.sh
ls
ls
vim <file>
bash
sudo pacman -S <string>
exit
ls
git config <file> <string>
pwd
cd <string>
cd <directory>
rm <string>
history -c
sed -e <directory> -e <directory>
git pull
rm <string>
ls
ls
git push
tmux
export <string>
cd ..
git branch -a
git add .
exit
sudo systemctl restart <file>
chmod +x <string>
clear
npm ERR! <string>
git commit -m <string>
cd ..
vim <file>
sudo ls <directory>
git init
git pull
ls
git push
cd <string>
npm start
ls
exit
cd <string>
exit
sudo apt-get update
git status
tmux
wget <URL>
cd <string>
cd ..
python3 <file>
cd..
git pull origin main
npm install
touch <file>
sudo serve -s <string>
cd ..
grep -v <string>
exit
ls
cd <string>
ping <string>
exit
cd ..
clear
git rev-list --all
mv <string>
git submodule update --init --recursive\
cd <string>
docker-compose logs --follow <string>
mv <string>
vim <file>
apt install --only-upgrade <string>
passwd
stat -c <string>
cd <string>
git push
egrep <string>
cd <string>
ls
touch <file>
ls -a
clear
sudo apt-get upgrade
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
git log --oneline
kubectl apply --filename <file>
git pull --rebase
ls
ls
pwd
cd <string>
git add <string>
ls
vim <file>
sudo apt-get update
cd <string>
find . -empty -type <string> -print -delete
ls
rm -rf <string>
git commit --allow-empty -m <string>
cd <string>
do\
apt-get install ruby1.9.1-dev -y
node <file>
npm instal -g <string>
cat <string>
grep --include=<file> -r <number>
ls
rm -rf <string>
ls
clear
git add
fg
fg
ls
git commit -m <string>
open <directory> --remote-debugging-port
npm i <string>
touch <string>
tmux
ls
cd <string>
sudo sed -i <directory> <file>
npm i
sudo apk add <string>
done\
git config --global <file> <file>
bash <file>
cd <directory>
ls
fg
sudo nmcli con mod <string> <string>
ls
fg
ls
unset -m <string>
git push
sudo crontab -e
ls
cd <string>
history -c
sudo su
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
node <file>
service apache2 reload
cd <directory>
git init
cd ..
sudo mkdir -p <directory>
ls
ls
done
cat <string>
exit
sudo pacman -S <string>
cd <string>
sudo ldconfig -v
cd <string>
cd <directory>
sudo systemctl restart nginx
ls
read -r <string>
cd <directory>
git clone <URL> -b <string>
sudo python <file> --cascade=<file> <number>
ls
<directory> <string>
exit
fg
ls
clear
vim <file>
pacman -S <string>
cd <directory>
git add <string>
cp <string>
cd ..
docker rm -f <string>
cat <string>
rm -rf <string>
ls
sudo ufw allow <string>
exit <number>
git add <string>
python3 <file>
mv <string>
clear
git status
git status
git checkout
ls
brew install <string>
ls
ls
clear
git rm <string>
ls
cat <string>
git st
cat <string>
git push
git clone <URL>
mv <string>
chmod <number> <string>
cd <string>
git co master
docker tag <string>
cat <string>
git push -u <string> master
ps # <string>
docker ps
ls
npm run coverage
brew install <string>
npm install
sudo umount <directory>
cat <string>
vim <file>
vi <file>
ls
cd <string>
python3.11 <file>
ls -a
vim <file>
python3 --version
sed -i <directory>
git add .
grep <string>
cd ..
ls -l
vim <file>
git push -u <string> main
grep <string>
hostname
sudo update-alternatives --config <string>
sudo vim <directory>
git add .
cd
git add .
ls
cd ..
ps -u <string> # lists your processes
make clean
then\
exit
exit <number>
ls
cd
cd ..
sudo npm install --global <string>
ls
git pull
sed <directory>
cd <string>
git add .
vim <file>
ls
done
ls
ls -la
find . -empty -type <string> -print -delete
mv <string>
sed <directory>
ls
git add <string>
ls
mkdir <string>
npm http <number> <URL>
mkdir <string>
mkdir <string>
cd -
npm run start
curl -LO <string>
npm run build
mkdir <string>
sudo vim <directory>
docker start postgres-container
docker compose up
cd <string>
git branch
clear
chmod u+x <string>
nano <file>
cat <string>
ls
clear
ls
git add <string>
git push
sudo mv <string>
git push origin <string>
git push
git commit -m <string>
sudo vim <file>
curl -OJL <URL>
cd ..
npm i <string>
sudo apt install <string>
date --help
git stash
git remote add origin <URL>
fg
ls
ls
ls
top
git checkout master
sudo systemctl restart <file>
wget -q -O <file>
git status
sudo apt install <string>
cat <string>
git push
cd ..
mkdir <string>
ls
curl <string>
sudo su -
vim <file>
cd <string>
sudo nano <directory>
nano <file>
ls -
git st
du -ch
less
ls
cd ..
ls
git status
cd <directory>
vi <file>
exit
ls
grep -Eo <string>
cd ..
npm start
shift
ssh <string>
ls
sudo systemctl status prometheus
sed -i <string> -e <string>
git status
ls
cd ..
clear
git clone <URL>
reset
cd <string>
ls
ls
exit
grep <string>
su
cd <string>
git status
git push -u <string> master
python3 <file>
git add .
cd <string>
cd <directory>
git add .
cd
git clone <URL>
git status
sudo poweroff
git status
grep -Ev <string>
git push origin master
vi <file>
sudo pacman -Ss <string>
ls
cd <string>
git pull
fg
clear
cd <directory>
chmod <number> <string>
ls
cd <string>
vim <file>
git commit -m <string>
ls
git push pay <string>
xargs -0 <string>
perl -pe <string>
ls -la
ls
rm <string>
sudo apt-get install <string>
grep <string>
ls
ls
cd <string>
rm -rf <string>
ls
vim <file>
cd <string>
sh <file>
vim <file>
git clone <URL>
cd <string>
npm install -g <string>
mkdir <string>
cd <string>
cd <string>
vim <file>
docker push <directory>
git commit -m <string>
ls
find <string> -name <file>
ls
ls
git fsck --full
cat <string>
sudo pacman -S <string>
brew tap <directory>
unzip -r <string>
clear
source <directory>
cat <string>
cd <string>
grep <string>
git pull
mv <string>
exit
git push --set-upstream <string> master
git merge <string>
cd <string>
git status
ssh-add
awk <string>
sudo python3 -m <string>
git add .
cd <string>
nano <file>
exit
ls
gpg --verify <file> <string>
sudo reboot
nano <file>
pwd
alias <directory> -c <string>
exit
git commit -m <string>
docker rm 1b13d10b5de2 -f
ssh <string>
nano <string>
sudo dpkg -i <file>
exit
ls
ls
vim <file>
ls
ls
exit
source <string>
ls
ls
fg
sudo mkswap <directory>
telnet <string>
ssh <string>
fg
read -r <string>
cd <string>
chmod <string>
rm <string>
ls
cd
sed -E -e <directory>
git status
htop
ls
ls
git add .
cd <string>
git status
sed <directory>
chmod +x <string>
ls
mkdir -p <string>
ls
rm -rf <string>
ls
cd
git push origin master
git fetch
git commit -am <string>
ls
sudo vim <directory>
find . -name <file>
cd
vim <file>
npm install
mv <string>
fg
git commit -m <string>
vim <file>
vim <file>
sudo apt install <string>
grep -o^ <string>
cd <directory>
sed -i <directory>
sudo su
git pull
sudo vim <file>
npm i -g <string>
git status
cd <string>
ls
ls
pwd
sudo grub2-mkconfig -o <directory>
cd <directory>
done
git branch --set-upstream-to=<directory> <string>
fg
find -name=<file> <string>
ls
vim <file>
git fetch
cp <string>
ls
chmod u+x <string>
ls
cd <directory>
ls
git pull
git log
vi <file>
sed <directory>
curl -L <directory> --output <file>
ls
cd <string>
cd <string>
unset color_prompt force_color_prompt
ls
clear
cd <directory>
date
wget <URL> -P <string>
sudo apt-get install <string>
cd <string>
cd <string>
ls
tail -f <string>
bash
pwd
ls
git symbolic-ref HEAD <directory>
vim <file>
su - <string>
sudo tee <directory>
docker ps -a
sudo halt
exit
wget -q -O - <URL>
mv <string>
cd <string>
nano <file>
cd <string>
grep <string>
ls
cd <string>
git init
wc -L
sed <directory>
git push
git clone <URL>
curl <string>
sudo stop uwsgi
sort -k <number> -n
cd <string>
cd <string>
cd
cd <string>
clear
grep <string>
sed <directory>
mv <string>
unzip <file>
clear
sudo poweroff
xargs -I <string> -0 <string> <string>
tail +x # want to display all the lines from x to y. This includes the xth and yth lines.
ls -al
ls
vi <file>
git add .
ps ax
sudo apt update
git config --global <file> <file>
mv <string>
ls
cd ..
chmod +x <string>
systemctl status <string>
git checkout <string>
find . -name <string> -type <string>
vi <file>
ls
cd <directory>
tar -xvf <file>
cd <string>
ls
su root
fg
ls
git push origin master
tar -zxvf <file>
cd <string>
rm -rf <string>
find . -maxdepth <number> -type <string> -executable -delete
git clone <URL>
cd <string>
uniq
clear
npm run watch
git commit -m <string>
cd <string>
ls
open <string>
tmux
git checkout -b <string>
sudo pacman -Sy
cd <string>
cd <string>
git adog
ls
npm install
sudo sed -i <directory> <file>
ls -lrt
ls
npm install -g <string>
git push
ls++ -a
sh <file>
cd <string>
exit
lshw -short
su
ping
ps -aux
sudo nvim <directory>
git pull origin <string>
clear
sudo aptitude <string>
read -p <string>
cd <directory>
sudo add-apt-repository <directory> -y
cat <string>
ls
mkdir -p <string>
git status
find . -empty -type <string> -print -delete
rm <string>
grep -Eo <string>
git status
vim <file>
git add <string>
mkdir -p <string>
ls
cd <string>
exit <number>
service <string>
ls
npm init
sudo systemctl restart <string>
clear
ls
cd <directory>
ping <file>
ls
read <string>
grep
ls
apt-get -y <string> <string>
ping <string>
sudo dpkg -i <file>
ls
sudo poweroff
cd ..
cd..
cd ..
cd ..
python3 <file>
tail -$2 <directory>
ls
cd
sudo apt-get install <string>
pkill <string>
ls
git push origin master
which <string>
exit\
tail -n10
git commit -am <string>
git remote add origin <URL>
vim <file>
source <file>
cd <string>
bash <file>
sudo python3 <file>
code
git push
rm -r <string>
cat
git remote add origin <URL>
ls
git clone <URL>
cd <string>
cd <directory>
vim <file>
cd <string>
clear
sudo python3 <file>
vim <file>
vim <file>
sudo vim <file>
cd ..
ls
grep <string>
exit
git pull
cat <string>
ls
sudo chroot <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
fg
fg
sleep <number>
grep <string>
grep <string>
ls
cd <string>
ls
ls
cat <string>
grep -v <string>
git checkout -b
rm -f <string>
ps -aux
git push
sudo apt install <string>
ls -alF
cd
git config --global <file> <file>
ls
git status
cd <string>
exit
cd <string>
sudo dpkg --set-selections <string>
find . -type <string> -print0
ls
mkdir <string>
git remote add origin <URL>
git remote add origin <URL>
git commit -m <string>
python3
ls
uname -m
printf <string>
git fetch
source <file>
cd <string>
rm -rf <string>
sudo gedit <string>
sudo apt purge <string>
cd ..
mkdir <string>
exit
vi <file>
vi
sudo sed -i <directory> <file>
apt-transport-https \
git co HEAD .
rm <string>
clear
git branch -d <string>
cd
clear
read -p <directory> -n <number> -r
sudo apt-get -f <string>
ls
ls
ls
docker-compose logs --follow <string>
env
cd <string>
sed -i <directory>
cat <string>
git reset --hard
git config --global <file> <string>
source <directory>
clear
ls
cd ..
cd ..
sudo git clone <URL>
ls -a
sed -r <directory> > <file>
cd ..
ping <file>
grep -i <string>
git remote -v
read -p <string>
git pull
npm login
cd <string>
ls
ls
cd <string>
ls
git status
cd <string>
sudo apt-cache search <string>
ls
ls
ls -l
cd <string>
ls
cd <string>
cp -a <string>
sudo apt-get install <string>
ls
npm install -g <string>
git init
git add .
git init
vi <file>
npm run develop
service <string>
sudo cat <directory>
ls
sudo apt --purge <string>
ls
ls
find <directory> -type <string> -size <string>
ln -s <string>
vim <file>
cd
chmod <number> <string>
git commit -m <string>
exit <number>
git add .
git push --follow-tags
ls
cd <directory>
cut -f <string>
git push
git branch
sudo service <string>
docker-compose up -d
sed -E -e <directory>
cd <string>
git push
grep <string>
ls
cd
ls
git remote -v
git push -u <string> master
cd <directory>
sudo apt get update
ls -lt
pkill <string>
git add .
cd ..
rm -rf <string>
cd ..
clear
mkdir <string>
cd <string>
gpg --export --armor -vvv --output <string>
column -t -s <string>
clear
sed <directory>
chmod +x <string>
vi <file>
done < <string>
wget -q -O <file>
git push --set-upstream <string> master
top
git commit -m <string>
ls
docker exec -it <string>
git init
time <directory> -cpuprofile=<file>
sudo serve -s <string>
env
cat <string>
curl -sfL <string>
git add .
clear
cd
sudo cp <string>
rm <string>
docker push <directory>
stat <file>
ls -l
cd <directory>
cd <string>
curl -sL <URL>
rm <string>
dir
cd <string>
git push -u <string> master
tar xvzf <file>
ls
ls
git commit -m <string>
ls
curl <string>
rm -rf <string>
ls
git status
git pull origin development
npm --verison
vim <file>
ls
ls
cd <directory>
vi <file>
fg
curl <string>
chmod <string>
git add <string>
sed -i -e <string>
sudo apt update
cp -v <string> <directory>
cd ..
ls -alrt <string>
git commit -m <string>
killall <processname> # kill all processes with the name
sudo aptitude -y <string> install <string>
cd <directory>
exit <number>
ls
vim <file>
sudo npm install -g <string>
cd <string>
git status
ls
unset <string>
git push origin PTS-578_redirects_not_updating_automatically --force
docker-compose up
exit
cd <string>
ls
openssl genrsa <number>
git checkout -b <string>
sed -i <string>
git rebase -i <string>
git commit -a -m'Remove <string>
wget -r -A.html <URL>
exit
sudo apt-get install <string>
docker exec -it <string>
cd <string>
clear
sudo chown -R <string>
cp <string>
cd <directory>
ls
npm install
git commit -m <string>
cd <string>
git pull origin master
docker-compose stop
cd <string>
cd <string>
git commit -m <string>
sudo mkdir -p <directory>
cd ..
cd <string>
cd <directory>
git add <string>
git commit -m"merge <string> <string>
ls -la <directory>
true
alias <string>
npm -v
git checkout <string>
pygmentize -O <string> -f <string> -g
du
ls
cd <string>
cd
cp -r <directory>
which <string>
git init
clear
vi <file>
mkdir -p <string>
cd <string>
bash
sudo apt upgrade
sudo curl -L <directory> -o <directory>
ls
git remote add origin <URL>
head -1 <file>
cp -R <string>
vim <file>
ls
vim <file>
history
vim <file>
cd <directory>
rake <string>
git add <string>
chmod -R <string>
git remote add origin <URL>
sudo -i
apt upgrade
npm audit fix -f
sudo apt-get purge <string>
ls
ls
pwd
npm -v
ls
code .
sudo apt-get install <string>
git push
ps -auxwf
git add -A
git commit -m <string>
git add <string>
kubectl create -f <file>
wget <URL>
cd <string>
read -r <string>
sudo tar -zxvf <file>
git checkout <string>
cd <string>
ls
sudo apt-key add -
cd <string>
kill <number>
sed <directory>
git push origin main
exit
docker pull <string>
cd <directory>
ls -alrt <string>
git co master <file>
bash <file>
sudo apt-get install -y -q <string>
less <string>
ls
man <string>
sudo ani-cli -U
docker --version\
ls -l
fg
cd ..
cd ..
vi <file>
sudo bash -c <string>
ls
sudo npm i -g <string>
rm -rf <string>
jq <string>
docker-compose logs
find -L <string> -type <string> -print
git clone <URL>
sed -E -e <directory>
git branch --list
ls -lia
chmod +x <string>
sudo aptitude install <string>
cd
python3 <file>
cd <directory>
shutdown
git add <string>
exit <number>
git commit -m"~"
diff <file> <file>
ls
sudo supervisorctl status
ls
cd
rm <string>
ps aux
cp <string>
clear
bazel run --config=<string> <string>
sudo apt remove <string>
apt-get install <string>
ls
cd <string>
cd <directory>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
clear
ls
git status
sudo nvim <directory>
cd ..
ls
mvn -e <string>
ssh <string>
clear
cat <string>
date
cat <string>
vim <file>
git submodule update --init --recursive
systemctl status <string>
vi <file>
sudo shutdown -h <string>
vi <file>
tail -100 <file>
cd <directory>
sudo pip install <string>
vi <file>
which <string>
sudo curl <URL> -o <directory>
clear
git status
awk <string>
docker exec -it --user=<string> <string>
nano <string>
find . -empty -type <string> -print -delete
git flow <string>
sudo nano <directory>
exit
tmux --version
exit
vim <file>
tmux source <file>
git pull
clear
fzf
cd <directory>
cd ..
LANG=<string> rpm -qp --queryformat <string>
curl -sSL <URL>
vim <file>
cd ..
rm <string>
cd <string>
git pull origin master
cd <directory>
sudo dnf install -y <string>
git checkout <string>
ls
sudo apt-get upgrade -y
rm -rf <string>
cd <string>
cd <directory>
ls
ls
cd <directory>
exit <number>
cd <directory>
cat <string>
sudo ltrace -f -p <number> -o <file>
cd <directory>
htop
ls
vim <file>
python3 <file>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
sudo yum install git -y
git push origin <string>
wget
cd <string>
git push -u <string> master
git push origin master
rm <string>
cd <string>
cd <string>
cd ..
ls
git pull
mkdir <string>
sudo dnf install <URL> -E <file>
git diff
grep <string>
wget <URL>
git add <string>
clear
exit <number>
sudo yum <string>
ls
rm -rf <string>
exit
mv <string>
clear
rm -r <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string>
vim <file>
<directory> -m <file>
top
git add .
nano <file>
git pull
cd ..
ls
rm -rf <string>
exit
vim <file>
npm
cd ..
git status
exit
vim <file>
<directory> <string>
rm -f
npm start
sleep <number>
clear
cd <directory>
exit
cd <directory>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
chmod -R <string>
chmod -R <number> <directory>
read -p <string>
cp <string>
cd <string>
cd <string>
docker rm <string>
wget -O <file>
script/build.sh
awk <string>
ls
git push
git status
sudo apt autoremove
pwd
cp <string>
fg
sudo nala install <string>
ls
ls
cd <string>
mv <string>
npm start
git add <string>
dir
cd ..
git
ls
sudo apk add <string>
vi <file>
python3
sleep <number>
git commit -m <string>
vi <file>
read -p <string>
git commit -m <string>
find . -type <string> -name <file> -exec <string> -il <file>
npm run bench -- -c <file> -n <file>
ls
ls -laSh
cd ..
ls
git clone <URL>
ls
rm -rf <string>
cp <string>
cd <string>
ls
cd ..
sudo cp <string>
vim <file>
git commit --allow-empty -m <string>
ls -l
rm -f <string>
git init
ls
git pull
cd ..
git checkout <string>
read -rp <string> <string>
git stash -m <string>
npm install <string>
sudo
rm <string>
clear
history -r <string>
cd
git commit -m''
clear
git commit -m"update"
mv -r <directory>
cd <string>
npm run build
git add --all
clear
python3 <file>
docker-compose logs
nano <file>
rm -f <string>
exit <number>
systemctl stop kubelet
git commit -am' <string>
which <string>
git pull
ls
git status
sudo apt autoremove
git commit -m <string>
nano <string>
clear
cd <directory>
cd ..
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
git push -u <string> master
sh <file>
sudo rm -R <string>
cd <string>
clear
git clone <URL>
wget <URL>
git add .
view -
top
ls
curl -Lo <string>
mkdir -p <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
chmod +x <string>
cd
docker pull <string>
find src
ls
ls
clear
vi <file>
ls
ls
cd ..
rm -r <string>
ls
git reset --soft <string>
cd <string>
grep <string>
git push
sudo apt-get install <string>
ls
mkdir <string>
vim <file>
cd ..
cat <string>
grep --only-matching <string>
print <string>
else\
tmux set-option -g <string>
ls
cd <string>
grep <string>
ls
usermod -aG <string> <string>
git commit
ls
cat <string>
cat <string>
ls -lh
npm i <string>
git commit -m <string>
cd <string>
cd <string>
git status
clear
awk <string>
git commit -m <string>
cd <directory>
cat <string>
ls
sudo service nginx reload
ls
cd ..
cd
git rm --cached <directory>
vi <file>
git commit -m <string>
git add -v --dry-run <string>
sudo ls
less <string>
ls
clear
exit
npm run serve
mkdir --parents <string>
uniq -c
clear
openssl x509 -outform <string>
npm run dev
docker rmi -f <string>
git log
exit
git status
tmux kill-session -t <string>
top
mkdir <string>
cd <string>
git push
ls
exit <number>
git config --global <file> <file>
git add -A
vim <file>
ssh-add
vi <file>
git add <string>
cd <directory>
exit
sudo systemctl restart <string>
cat <string>
python3.11 <file>
rm <string>
exit <number>
git add <string>
history
ls
chmod +x <string>
ps -ef
exit
ls
sort -nk1,1
sudo apt-get install <string>
git branch
cp <string>
clear
ls
ls
git push
cat <string>
ls
ls
ls
npm
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
exit
cd <string>
sort
sed <directory>
ls
make clean
ls
mv <string>
git rebase <directory>
touch <string>
ps -A
<directory> <directory>
npm start
ls -l
fg
tail -f <string>
git commit -m <string>
git add .
tee -a <string>
git init
npm install
ls
ls
ls
sudo pacman-key --init
git fetch
ls
grep -Eqi <string>
find . -name <string> -type <string>
rm -rf <string>
cd <directory>
sudo apt-get update
ls
mv <string>
cd <string>
git switch <string>
cat <string>
sudo add-apt-repository --remove <directory>
touch <string>
curl <string>
cd ..
vi <file>
unset <string>
vim <file>
cat <string>
git checkout <string>
sudo update-alternatives --install <directory>
ls
ls
git push -u <string> master
w
cat <string>
mv <string>
npm i -g <string>
vi <file>
cd ..
ls
cd <string>
clear
ping <string>
cd <string>
cd <string>
cd <string>
rm -rf <string>
mv <string>
code .
ls
git clone <URL>
rm -rf <string>
ls
ls
sh
git status
python3 <file>
python3 <file>
git status
git add .
cd <directory>
touch <file>
ps -ef
ping <string>
cd <string>
npm run dev
sudo apt install -y <string>
sudo apt install nodejs -y
mkdir <string>
ls -l
ls -al
ls
clear
LANG=<string> rpm -qp --queryformat <string>
sudo apt-get install docker-engine -y
ls
sudo sed -i <directory>
ls
ls
git checkout -b <string>
git status
ls
perl -pe <string>
cat <string>
ls
ls
ls
cd ..
mv <string>
cd <string>
brew uninstall --force <string>
python3 <file>
clear
ls
pwd
cd <directory>
fg
npm i -g <string>
fg
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
read -p <string>
ls
cd <directory>
fg
vim <file>
git clone --mirror <string>
clear
npm install
done
history
sleep <number>
ls
tar -xf <string>
cd <string>
vim <file>
ls
grep <string>
history -r <string>
awk <string>
cd <string>
cd <string>
ls
git branch
git status
xargs docker rm
docker ps
nc -l <number>
ssh <string>
cd <string>
npm run dev
man <string>
ls
npm start
git init
vim <file>
git commit -m <string>
ls
apt-get clean
sudo sed -i <directory>
git commit -m <string>
cd <directory>
cd ..
sudo vim <file>
cd <string>
sudo sudo apt install <string>
sudo mv <file>
fg
ls
mkdir <string>
ls -F <string>
exit
ls
ls
more <file>
ls
clear
git branch -M <string>
ls
wget -O <file>
mvn compile
cd <string>
git
sudo vi <file>
cd
ls
cd <string>
sudo nginx -t
ls
ls
cp <string>
curl -s -D- -onul <URL>
su root
ls
grep <string>
mv <string>
wget <URL>
ls
cd ..
ls
docker build -t <string>
exit
clear
sed <directory>
which <string>
vim <file>
cd <string>
cp -r <directory>
sudo reboot
exit
git branch -M <string>
exit <number>
cat <string>
fg
git diff <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
cd <string>
git push
cd
exit
read -p <string>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
git add .
exit
ls
git status
ls
git add .
cd <directory>
ls -al
git log --all --pretty=<string> <string>
python3 <file>
rm <string>
sudo stop uwsgi
sudo apt-get update -y
git push -u <string> master
ip a
ls
grep <string>
cp <string>
cd <string>
curl -o <string>
cd <directory>
sudo su
ls
cd ..
read <string>
ls
cd ..
exit
git push
clear
ls
cat <string>
cp <string>
git clone <URL>
grep -v <string>
cd <directory>
pwd
ls
cd <directory>
git commit -m <string>
git commit -m <string>
vim <file>
ls
git diff
egrep -ri <string>
ls
git status
pwd
cd <directory>
cd <string>
rm -rf <string>
dir
mv <string>
git push pay --all
git status
chmod <number> <string>
pwd
git commit -a
zgrep -i -E -o --no-filename <string>
ls
exit <number>
wget --load-cookies <directory>
ls
grep -i -E -o --no-filename <string>
sudo su
ls -alrt
sudo python <file>
cd <string>
ls
git log
cd
ssh <string>
git merge develop
ls -lh <string>
vim <file>
ls
ls
ls
curl -fSsLo <file>
npm uninstall --save <string>
tmux ls
scp <string>
done
cd <string>
ls
cd ..
ln -s <string>
ls
cd ..
python3 <file>
sudo apt-get install -y <string>
cd <directory>
ls
vi <file>
source <file>
sudo dpkg -i <file>
npm install marked -g
patch --version
git status
git config --global <file>
ls
sudo lshw # -[short]
npm -v
cd
sudo dpkg -r <string>
clear
cd ..
npm install
du -sh <directory>
vi <file>
cd <directory>
clear
open .
sudo apt install <string>
exit
ls
cat <string>
ls
sudo netcfg <string>
cat <string>
lsblk
git branch -M <string>
ls
clear
cd <string>
git commit -m <string>
chsh <string>
cd <directory>
python3 <file>
vim
cd ..
python3 <file>
chmod <string>
git add .
git pull
npm init -y
clear
python3 <file>
sudo reboot
vi <file>
node <file>
source <directory>
cd <directory>
git stash apply
service <string>
exit
then\
wget -r -A <URL>
cat <string>
ls
cp <string>
export <string>
git --version
npm init
tail -f <directory>
tar xf <file>
vim <file>
ls
ssh <string>
more <file>
sudo ntpdate <string>
sudo swapon <directory>
ls
git mv <string>
sudo mv <string>
ls
exit
cp <string>
cd <string>
vim <file>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
sudo nano <directory>
git add <string>
cd
ls
su root
unset <string>
git add <string>
ls
vim
git co master
ls
ls
sudo python <file>
git commit -m <string>
exit
ls
ls
git commit -m <string>
cd <string>
ls
tmux source-file <file>
exit <number>
cd <directory>
cat <string>
ls
ls
ls -al
git commit -m <string>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
chmod -x <file>
git commit -m <string>
sudo systemctl start <string>
vi <file>
vim <file>
ls
git push
git add .
ls -la
ls
tar -xzvf <file> -C <string>
mysql -p <string>
rm -rf <string>
npm install
ls
vi <file>
ls
cd <directory>
wget <URL>
sudo rm -r <string>
sudo pip3 install <string>
sed -n <string>
rm <string>
cat <string>
clear
rm <string>
ls -lAF
touch <string>
ls
docker-machine ssh <string>
clear
cd <directory>
ping <string>
git log --diff-filter=<string> --summary <string>
cd <string>
git commit -m <string>
git diff --color-words=<string>
byobu-tmux
ls
cd <string>
grep <string>
ls
cat <string>
ls -alF
grep <string>
cat <string>
cd ..
ls -la
ls
exit
sudo reboot
sudo npm i -g <string>
env <string>
npx create-react-app <string>
ls -R
ls
systemctl enable <string>
cat <string>
rm <string>
git commit -m <string>
cd ..
git add <string>
kill -9 <number>
git add -A
find . -name <file> -type <string> -exec <string> -rf <string>
xargs git branch -D
ls
git clone <URL>
vi <file>
ls $PWD -l
history
git commit -m <string>
git remote -v
touch <file>
git config
grep -Evf <file>
cat <string>
git pull
git branch
cd ..
ls
git status
cd <string>
git commit -m <string>
sudo git fetch
cp <string>
ls
cd
nano <file>
touch <file>
cd <directory>
cd <directory>
nano <file>
ls
git commit --amend -m <string>
ls
ls
vim <file>
cd ..
sudo apt-get install <string>
ls
ls
exit
cd <directory>
cd <string>
python3 <file>
vi <file>
cd <directory>
cd <string>
mkdir <string>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
mkdir <string>
git log
ls
ls
apt-get autoremove
git commit -m <string>
nano <file>
source <string>
cd ..
uname -a
vim <file>
cd <string>
clear
ls
ls
ls
chmod <number> <string>
sudo passwd <string>
cd <string>
fg
cd <directory>
clear
tail -f <string>
fg
git remote -v
tmux --kill-sessions
ls
pacman -S --needed <string>
ls
clear
cat <string>
vi <file>
grep <string>
bash <file>
git status
ls
cd <string>
cd ..
exit <number>
apt list --upgradable
cp -v <string> <directory>
cd <string>
npm run dev
clear
sudo git init
git pull
ls -l
ls
git checkout <string>
mv <string>
sudo <file> -v -w <string> -o <string>
git commit -m <string> --no-verify
cd ..
vi <file>
rm <string>
sudo apt-get install <string>
ls
mkdir <string>
mkdir <string>
cd <directory>
git push
column -t
rm -rf <string>
sed <directory>
cd <string>
ls -lAF
exit
ln -sf <directory>
git commit -m <string>
git branch --help
wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=<string> --domains <file> --no-parent <URL>
git add <string>
ls
cd <directory>
source <string>
ps aux
cd ..
open .
cd <directory>
shutdown
ls
ls
exit <number>
du -ach
cp -r <directory>
vim <file>
curl -L <URL> -o <file>
cd
sudo apt-get -y <string>
htop
sudo smbpasswd -e <string>
ls
ls
ls
git log
mkdir <string>
clear
print <string>
ls
sed --in-place <string>
sudo apt update
which <string>
git pull
ls
sudo apt-get install -y <string>
tmux a
git add .
ls
ls
touch
sudo docker ps
less <string>
cut -d <string> -f <number>
top
chmod <number> <string>
ls -l
adduser <string>
cd <string>
ls
cd ..
ls
cd
grep $CPP_SOURCE -rFl <string>
ls
mv <string>
rm -f <string>
systemctl status python-validity --user
vi <file>
mvn clean <string>
python3 -m <string>
git push -u <string> main
exit
rm -r <string>
cd ..
ls
ls
docker -version
touch <file>
curl --silent <string>
cd <string>
ls
git status
reset
mkdir <string>
vim <file>
sudo apt-get upgrade -y
nano <file>
bash <file>
export <string>
cd <directory>
sudo docker run -p <string> -p <string> -p <string> -e <string> -e <string> -v <file> -v <directory>
wget <URL> -O <file>
cd ..
rm <string>
sleep <number>
docker ps
cd ..
nc
sudo apt-get upgrade
git status
pwd
clear
reboot
clear
vim <file>
ls
vim <file>
fg
cd <string>
man <string>
git add <string>
vim <file>
ls -alrt
mv <string>
cd <directory>
ping <string>
git submodule init
git switch main
read -r <string>
vim <file>
git remote add origin <URL>
ls
rm <string>
git branch -m <string>
mkdir <string>
ls
ls -la <directory>
mkdir <string>
git co HEAD .
sudo snap install <string>
cd <directory>
systemctl enable <string>
git pull
sudo apt-get update
git remote add origin <URL>
ls
sudo git config <file>
cat <string>
python3.11 <file>
git submodule update --init --recursive\
git push -u <string> main
git commit -m <string>
git commit -a -m <string>
ls
git commit -m <string>
cd <string>
code
ls
clear
ls -l
ls
cat <string>
pwd
read -sp <string>
clear
cut -d\< -f <number>
sudo -s -u <string> -H
cd ..
ls -a
npm install
git status
cut -d',' -f2 <file>
python3 <file>
fg
ls <directory> -Sal
tail -f <directory>
npm start
git diff
sudo apt upgrade
vi <file>
vim <file>
find . -type <string> \( -name <string> -o -name <string> -o -name <string> -o -name <string> -o -name <string>
rm -rf <string>
python3 <file>
python3 <file>
git commit -m <string>
python3.11 <file>
sed -E -e <directory>
git push
cd <string>
python3.11 <file>
git
cd <string>
git commit -m <string>
cd
git commit -m <string>
vi <file>
open .
git rm --cached <string>
ls
exit <number>
git add .
cd
git diff <string>
npm start
git log --graph --decorate --oneline --branches --all
tee <file>
history
fg
git push
cd <string>
df
clear
ls
ls
sed <directory>
su
rm -rf <string>
sleep <number>
sudo cp <file> <file>
git clone <URL>
find . -name <file>
grep <string>
grep <string>
git branch -a
ls -la <directory>
sudo sed -i <directory> <file>
git status
grep <string>
dir
docker stop bigballers
ls
cd <string>
git init
ls
ls
cd <directory>
curl -I <URL>
cd <string>
cd
read -rp <string> <string>
git branch --merged
git pull
cd ..
vim <file>
alias <string>
cd <string>
vi <file>
git commit -m <string>
cd <string>
nano <file>
sudo python <file>
cd <directory>
vim <file>
df -sh
sudo su
vim
help
ls
git diff <string>
cd <string>
mv <string>
nano <file>
sudo dpkg-reconfigure locales
ls
dir
find . -size -5k
cd <string>
screen -r <string>
chmod +x <string>
npm run test
cd <string>
cd <string>
exit <number>
cd <string>
sudo apt install <string>
exit
vi <file>
ls
ls
scp <string>
npm install <string>
git pull
ls
sed -i <directory>
sudo pacman -S <string>
ls
git commit
clear
open <directory> --args --remote-debugging-port=<number>
cd ..
find . -type <string>
ls
vi <file>
cd ..
git init
ls
clear
sudo nano <file>
sudo pacman -S <string>
cd <directory>
curl <string>
ls
man <string>
mkdir <string>
sudo apt-key add -
rm -rf <string>
git init
vi
sudo usermod -aG <string> $USER
cd <directory>
git push
ls
ls
git add -A
cd <string>
pwd
ls
ls -d -- <directory>
npm run test
vim <file>
sudo sed -i <directory> <file>
code .
git push
git push origin <string>
ls
more <file>
clear
cd ..
clear
find . -type <string> -exec <string> <directory> {} +
man <string>
sudo sed -i <directory> <file>
git commit -m <string>
git commit -m <string>
git push origin
ls
date <string>
git add <string>
ls
cd <string>
cd ..
cd <directory>
git init
git config --global <file> <string>
exit
wget <URL>
git restore <file>
cd <directory>
git push -u <string> main
ls
vim <file>
git co master <file>
clear
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
cd ..
rm -rf <string>
cd..
ls -la
git init
vim <file>
sudo make install
cd ..
ls
file <string>
sudo dpkg -i <file>
localectl <string>
git remote add origin <URL>
ls
exit
git add <string>
ls
git merge
git add <string>
find <directory> -type <string> -name <file> -exec <string> <string>
cd <string>
git commit -m <string>
git push
sudo snap install <string>
nano <file>
ls
sudo apt update
cd <directory>
read -s -n <number>
ls
ls
clear
cd ..
exit <number>
find . type f -print0
cd <string>
ls
sudo apt-get update
git push -u <string> master
sudo apt upgrade
chmod <number> <string>
vim <file>
ls -l
ls
cd <string>
cd
ls
ls
ls
cd <directory>
sudo snap install node --classic
grep -Ei <string>
ls
cd ..
exit
sudo rm -rf <string>
sudo apt-get install <string>
wget <URL>
git diff
sudo systemctl restart <string>
clear
ls
ls
git add <string>
git status
sed -e <string> -e <directory> -e <string> \
git status
sudo docker run --restart=<string> --name <string> -d -p <string> -p <string>
cd ..
git status
<file> program
git status
clear
git push origin master
ls
fg
cd
ls -la
git status
history
ls
exit <number>
ls
cd ..
git commit -am <string>
ls
cd <string>
cd
cd <directory>
python3.11 <file>
mkdir <string>
git commit
read -r <string>
ls
chmod <number> <string>
sudo su
sleep <number>
npm install <string>
cd ..
python3 <file>
exit <number>
HEAD <string>
docker rm <string>
sudo port
nano <file>
cd <string>
vi <file>
git --version
ls
cd <string>
vim <file>
cd <string>
bash <file>
git clone <URL>
find <directory> -type <string> -iname <string> -exec <string> -rf <string>
clear
codedown javascript
npm init -y
ls
cd ..
sudo
rm <string>
exit
clear
cat <string>
rm <string>
cd <string>
sudo virsh -c <directory> <string>
ps -ef
git commit -m <string>
sudo userdel -r <string>
clear
cd <directory>
cd <string>
rm -rf <string>
vim <file>
cd <string>
ls
git push
clear
grep -oE <string>
sudo apt-key add -
ls
cd <string>
vi <file>
git pull
env
do\
cd <directory>
exit
vi <file>
pwd
vi <file>
ps -auxwf
git push --set-upstream <string> <string>
clear
mkdir <string>
git commit -m <string>
code .
git push
cat <string>
cd <string>
find -L <directory>
ls
sudo vim <file>
clear
vim <file>
sudo mv <string>
git clone --mirror <string>
git add <string>
ls
ls
sudo apt install <string>
vim <file>
git status
cd <directory>
cd <string>
git add -A
ls
cd <string>
vi <file>
cat <string>
fg
cd <string>
unzip -h
ls
docker tag <string>
ls
ls -l
git pull origin master
cd
apt-get -f <string>
git pull
sudo nginx -t
git status
cd <string>
sed <directory>
sudo service nginx restart
sudo usermod -aG <string> $USER
docker-compose up -d --build
exit
htop
read <string>
ls
<file> program
git push -u <string> main
clear
sudo apt-get -y <string> <string>
cd <directory>
git status
pwd
pwd
exit <number>
ls
git pull origin
apt-get update
git pull
git remote add origin <URL>
cd <directory>
kill <number>
git checkout <string>
cd <directory>
sudo <directory> -m <number>
git commit -m <string>
sudo useradd -m -U -r -d <directory>
clear
ls
sudo git clone <URL>
vim <file>
ls -la
mkdir -p <string>
ls
source <directory>
cd -
ls
rm -f <string>
git pull
cd ..
pwd
git pull
cd <string>
cd <directory>
sudo ufw <string>
cd <directory>
git submodule deinit <string>
cd <directory>
lsof -u <string>
git stash apply <string>
ls -ltr
rm <string>
ls
<string> -print0
ls
git -f <string> --cached <directory>
git add <string>
gpg --keyserver <file> --recv-key <string>
sudo lvcreate -n <string> -L <string>
mvn archetype:generate -DinteractiveMode=<string> <string>
mkdir <string>
grep -rl <string>
curl -s <string>
cd
cd <directory>
npm i
python3
cd <string>
shutdown -r <string>
git add .
sudo apt-get install -y <string>
more <file>
source <string>
npm run test
git clone <URL>
date
ls
sudo dd <string>
pwd
ls
sudo dnf remove <string>
sudo apt update -y
cd <string>
vim <file>
sudo mkdir -p <directory>
code .
sudo apt-get install <string>
clear
rm -f <string>
ls
pkill <string>
sudo sed -i <directory> <file>
rake <string>
git commit --allow-empty --message <string>
cd
pwd
cd ..
git push
alias <directory> -c <string>
openssl s_client -connect <string> -showcerts <string>
cd <directory>
sudo rm -rf <string>
ls
sudo pip install <string>
ls
cd <string>
fg
vi <file>
git ls-remote <string>
source <directory>
git add <string>
cd <string>
ls
cat <string>
unset color_prompt force_color_prompt
python3 <file>
git add <string>
grep <string>
nano <file>
grep <number> -wr
mkdir <string>
ls -la <directory>
clear
sh
scp <string>
apt-get update
ls
vim <file>
sudo rm -r <string>
sudo apt-key add -
xrandr -list
chmod <string>
ls -a
cd <string>
sudo yum install <string>
ls
cd ..
clear
ls
source <file>
cd <directory>
clear
sudo sed -i <directory> <file>
wget -q -O <file>
alias <string>
sudo pacman -Syu
ls
ls
ls
sudo systemctl status <string>
picom --experimental-backends -b
sudo usermod -a -G <string>
sudo <directory> -b
fg
cat <string>
exit
ls
cd ..
done
print <string>
docker ps -a
rm -f <string>
ls
git fetch
docker build -f <directory> <string>
cd ..
git fetch
git add .
ls
clear
git commit -m <string>
fg
clear
sed -i <string>
rm <string>
ls
sudo apt install <string>
touch <string>
ls
npm uninstall gulp -D
git add .
git commit
git checkout master
ls
chmod +x <string>
ls
cd
history
sudo systemctl reload <string>
ping <string>
ls
ls
ls
sudo sshfs <directory>
tail -f <directory>
cd <string>
git add .
cd <string>
npm run start
npx create-react-app <string>
git pull
apt -y <string> <string>
grep <string>
vim <file>
grep <string>
clear
git push
cp <string>
git pull
git init
git config --global <file> <string>
sudo uftrace <file>
service apache2 reload
exit
sudo cryptsetup --type <string>
git push -f
exit
vim -O <file>
git stash
ls
sudo apt-get install <string>
find -name <string>
ls
apt-get install <string>
diff <file>
ls
cd <string>
find <directory> -maxdepth <number> -type <string> -exec <file>
ls
ls
nano <string>
cd ..
exit <number>
sudo apt-get install <string>
cd ..
ls -lah
fg
clear
clear
git remote remove origin
cat <string>
ssh kuaidi@192.168.248.203 -p2222
done
cd <string>
sleep <string>
git remote add origin <URL>
ls
git init
cd ..
cd <string>
ls
service apache2 reload
sudo netstat -lptu
ls -alrt <string>
cd <string>
source <directory>
curl -o- <URL>
cd <string>
df -h
rm <string>
git status
done < <string>
docker-compose up -d --build
vim <file>
clear
clear
ls
cd <string>
ls
rm -rf <string>
cd <directory>
rmdir <string>
sudo apt-key add -
read <string>
vim <file>
sh <file>
npm install
docker stop <string>
git clone <URL>
ssh -T <file>
vim <file>
cd <string>
git add .
ls
exit
python3 <file>
vim <file>
ls
sudo nano <directory>
ls
scp <string>
tail -f <directory>
ls
ssh <string>
git config --get
vim <file>
mkdir -p <string>
cd ..
docker ps -a
wget -r <URL>
vi <file>
ls
cd ..
cd
git push origin master
vi <file>
cd ..
npm i -g <string>
git stash apply
docker-compose up -d --build
vi <file>
docker-compose logs
ls -all <directory>
clear
man <string>
df
exit <number>
do\
sudo vi <file>
sudo mkfs.ntfs <directory>
fg
cat <string>
npm install <string>
sudo systemctl start <string>
cd <string>
ls
vim <file>
cd <string>
ls
git push -u <string> master
wget -q <directory> -O <directory>
git add -A
git commit
sudo systemctl start <string>
find . -name <file>
cd ..
chmod +x <string>
nano <file>
git fetch origin\
cd <string>
vim <file>
make clean
wget <URL> -O <directory>
cd <string>
python3 <file>
clear
git add <string>
cd <string>
apt list --installed
sudo systemctl reload <string>
git commit -m <string>
mv <string>
cd <directory>
sudo pip install <string>
sudo vi <directory>
cd ..
cat <string>
touch <file>
du -h
ls
git add .
git reset HEAD^
sudo pmset -a <string>
git commit -m <string>
git push --set-upstream <string> main
rm <string>
ls
grep -i <string> >files
ls
systemctl start <string>
ps
ls
git reset HEAD^
ls
git add .
ls
mkdir <string>
vim <file>
ssh dirlic@10.18.0.39 -p <number>
mv <string>
kubectl <string>
npm run coverage
git commit -m <string>
git checkout <string>
mv <string>
vim <file>
sudo poweroff
ls
time <string>
ls
python3 <file>
git add <string>
cd ..
sudo vi <file>
rm -rf <string>
grep --help
sed <directory>
git status
node <file>
ls
sudo pacman -S <string>
ls -al
<file> program
ls -lh
cd <string>
cd <string>
ls
npm start
cd <string>
export <string>
ls -ltr
git commit
chmod +x <string>
vi <file>
tr <string>
apt-get -y <string> <string>
sudo passwd <string>
nano <file>
vim <file>
cd -
ls
git merge <string>
vi <file>
wget <URL>
nano <file>
cd <directory>
rm <string>
find . -iname <string> -exec <string> <string>
cd <string>
ls -la <directory>
history -a
ls
cd ..
sudo python <file>
npm install -g <string>
cd <string>
sudo tar zxf <file> -C <directory>
grep <string>
cd
swapon <directory>
cat <string>
ps -u <string> # lists your processes
docker-compose logs
exit
bash
cd <string>
ls
sudo nano <directory>
git init
ls -a
history --help
exit
less <string>
docker tag <string>
ls
ls
rmdir <string>
systemctl enable <string>
exit
rm -r <string>
cat <string>
ls
clear
npx <string>
vi <file>
ln -s <string>
ls
python3 <file>
git commit -m <string>
git push -u <string> master
curl -O <URL>
cd <string>
ls -al
git commit -m <string>
clear
clear
sudo git commit
git commit -m <string>
ls
sudo wgnord -c <string>
ip a
sudo cat <string>
dpkg --add-architecture <string>
ls
ls
cd ..
sudo apt install <string>
git fetch origin
ls -l
ls
else sh -c <directory>
sudo virsh -c <directory> <string>
clear
sudo apt-get dist-upgrade
sudo node <file>
git push origin master
cd <string>
killall <string>
pwd
clear
git commit -m <string>
git branch -m <string>
mkdir <string>
find <directory> -name <string>
cat <string>
sudo vim <file>
find . -name <file>
ls
vim <file>
git push
printf <string>
sudo add-apt-repository <string> [arch=<string> <URL>
ls
pico <file>
ls
sudo su
cd <string>
docker login -u <string> --password-stdin <string>
pwd
npm install -g <string>
cd <string>
ls
npm i <string>
git stash apply <string>
nano <file>
npm run bench -- -c <file> -n <file>
sudo docker exec -it <string>
cd ..
git add .
<file> - <number>
fg
grep -R <string>
sudo rm -rf <string>
docker-compose up -d --build
strip --strip-unneeded <string>
vim <file>
git fetch upstream
do\
wget <URL> -O <directory>
reset
sudo systemctl stop <file>
read -rp <string> <string>
apt list --installed
cp <string>
docker rmi <string>
git clone -b <string>
sed -n <string>
sudo apt update
less <string>
ls
mkdir -p <string>
grep <string>
docker exec -it <string> bash
unset color_prompt force_color_prompt
ls
grep
rm <string>
mv <string>
exit <number>
set -ex
sudo systemctl start <string>
vi <file>
find <string> -name <file>
touch <file>
clear
git diff --cached
ls
dpkg-reconfigure
git commit -m <string>
awk <string>
vim
ls
vi <file>
cd <string>
ls
ssh-keygen
grep -v <string>
ls
git remote -v
ls
curl <string>
cd <directory>
perl <file>
git init
cat <string>
cd ..
vi
ls -lh
cd <directory>
sudo gem install <string>
cp <string>
git init
tail -f <string>
vim
python3 -m <string> install --user --upgrade <string>
grep -o <string>
ls
git log
mkdir <string>
git commit -m <string>
clear
bash
sudo pip install <string>
ls
ls
ls
ls
rm -r <string>
ls
ssh <string>
nano <file>
ls
sudo adduser <string>
sudo apt install <string>
vim
mkdir <string>
umask --help
npm start
wget <URL> -O <file>
done < <string>
ls
git add <string>
git status
vim <file>
curl -L -o <string>
npm install express --save
fg
xargs -L1 <string>
cd <string>
cd <string>
ls
git status
cd ..
git clone <URL>
rm <string>
eval <string>
cd <string>
cd <directory>
mv <string>
sudo apt-get --purge <string>
ls
ls
cd ..
git fetch origin\
sed <directory>
cd <directory>
npm
npm install
setg RHOSTS.*
sudo su
cd <directory>
ls
git clone <URL>
find . -name <file> -type <string> -print -delete
rm <string>
exit
vi <file>
vi <file>
read -rp <string> <string>
ls
cd <string>
sudo docker rm corrade
docker-compose logs --follow <string>
cd <string>
cd <string>
find . -name <file>
which <string>
sudo rm -rf <string>
cd <string>
cut
npm i <string>
git add <string>
git pull --rebase
ssh <string>
grep <string>
ls
git commit -m <string>
cd <directory>
cd <string>
code .
grep <string>
git add <string>
git reset --soft <string>
rm -fr <string>
git commit -m <string>
cd <directory>
cd ..
clear
npm install -f
cd -
curl --request
cd <string>
cd ..
cd <string>
clear
cd <string>
clear
htop
ls
ls
gsettings set <file> <string>
sed -i <string>
strip
git add .
apt-get update -y
git checkout <string>
cd
ls -latr
ls
cd <string>
sudo python <file>
sudo pacman -Syu --noconfirm
then\
sort
ping <string>
ls
ls
cd <string>
kubectl --namespace=<string> <string> <string>
mkdir <string>
git push
rm -Rf <string>
python3 -m <string> install -r <file>
exit
ls
git stash pop
cat <string>
ls -lt
env <string>
git push
cd ..
ls -lrt
then
git commit -m <string>
ls
fg
npm ERR! <string>
cd <string>
git commit -n
cat <string>
source <string>
ls
git remote add origin <URL>
read -p <string>
git log
cd <directory>
ls
cd <string>
git rm <string>
sort -n
rm <string>
clear
paste -d <string>
sed -i <directory>
curl <URL> -G <string>
git remote set-url --push <string>
clear
ls
cd <string>
cd <string>
ls -lSh
git commit -m <string>
alias
ls -a <string> <string>
ls
screen -r
sudo rpm -e <string>
sudo chmod <number> <string>
find . -empty -type <string> -print -delete
awk -F\" <string>
git clone <URL>
sudo apt-get update
find . -maxdepth <number> -name <file> -delete
exit <number>
sudo ifup <string>
git status
docker pull <string>
exit
git status
sudo python <file>
sudo apt-get install <string>
reboot
less <string>
python3 odoo-bin --no-database-list
find <directory> -mindepth <number> -type <string> -exec <string> -t <directory> --backup=<string> <string>
git push -u <string> main
find . -name <file> -type <string> -print -delete
git checkout <string>
wget <URL>
clear
git commit
git br
git pull
cat <string>
cat <string>
sudo apt-get install <string>
git commit -m <string>
nano <file>
rmdir <string>
ls
cd <directory>
ls
clear
clear
sudo apt-key adv --keyserver <file> --recv-keys <string>
exit <number>
git status
cd ..
exit <number>
grep <string>
read -p <directory> -n <number> -r
chmod +x <string>
sudo passwd <string>
cd <directory>
cd <directory>
done
ssh-keygen -t <string>
rm <string>
mv <string>
ls
cd <string>
ls -la
ps # <string>
cd <directory>
cp <string>
ls
git add <string>
git stash pop
ls
ls
ls
cd ..
fg
ls
node <file>
docker exec -t -u <string>
sudo rm -r <string>
vim <file>
vim <file>
git add .
cd
sed -i <string>
git push
git remote
fg
ls
tar -cvf <string>
brew update
clear
cd <directory>
cd <string>
fg
rsync
cd <directory>
apt-get autoremove
sudo git pull
mkdir <string>
vi <file>
ls
cd <string>
wget <URL>
ls
docker-compose stop
cd <string>
ssh-add -K <directory>
ls
vim <file>
clear
cd <directory>
tmux ls
cat <string>
ls
tail -n <string>
git add .
ls
ls
open <string>
docker-compose up
exit
ls
ls
git init
sudo ln -s <directory>
mv <string>
chmod <string> -- <directory>
ping <string>
pkill <string>
sudo pacman -S <string>
kubectl <string>
ls
vim <file>
sed -e <directory> -e <directory>
git add .
sudo rm -rf <string>
docker exec -it <string> bash
sudo sed -i <directory>
<file> program
history
npm run dev
git commit
ls
pwd
sudo python3 <file>
sudo apt install <string>
ls
source <string>
sudo apt remove <string>
git add <string>
docker-compose logs
ls
sed -i <directory>
cd
cd <string>
read -r -p <string>
cd ..
source <string>
git pull
chmod +x <string>
ls
nano <file>
ls
exit <number>
mkdir <string>
git remote add origin <URL>
cd <directory>
git push
su - <string>
cd ..
date
du -h --max-depth=<number>
fdisk -l
source <directory>
sudo apt remove <string>
ssh <string>
clear
sudo apt-get install <string>
ls
cat <string>
touch <string>
ls
grep -i <string>
sudo yabai --uninstall-sa
vim <file>
ls -la
sudo find <directory> -type <string> -exec <string> -v <string>
grep <string>
nano <file>
cd <string>
find <directory> -iname <file> -type <string> -exec <string> printf <directory>
sudo nvim <directory>
sh -i <string>
clear
ls
vim <file>
ls
df
vim <file>
git checkout master
less <string>
sudo systemctl restart nginx
ls
exit
git add .
ip a
sudo sed -i <directory> <file>
sudo ifconfig en0 ether <string>
cd <directory>
ls
ls
vi <file>
ls
npm install <string>
clear
sudo su
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cat -
ls
wget
sudo <directory> -s <file>
sudo usermod --shell <directory>
tar -xvzf <file>
cd <string>
cd
git commit -m <string>
sudo apt-get remove --purge <string>
git add <string>
mv <string>
pwd
fg
sudo reboot
ls
ls
git status
ls
ls
ls
grep <string>
chmod -R <number> <directory>
grep -rnw <directory> -e <string>
rm -rf <string>
cd <string>
tmux source-file <file>
sudo mkdir <string>
cd ..
grep -v <string>
vi <file>
git checkout <string>
ls
dpkg-reconfigure <string>
npm run start
ls
sed -e <directory>
git push
git fetch origin <string>
cd <directory>
cd <directory>
git status
cd <string>
mkdir <string>
clear
python3.11 <file>
pacman -Sy --needed <string>
wget
read -s -n <number>
cd <directory>
systemctl start <string>
ls
ls
awk <string>
ls
cd <string>
cd <string>
tmux new
ls
clear
code .
sudo cp -rf <string>
pacman --noconfirm -S <string>
npm i <string>
sudo pacman -Syu
cd <string>
mkdir <string>
sudo locale-gen <string>
exit <number>
git restore <file>
apt-get -y -f <string>
rm -f <string>
git commit -m <string>
cd <string>
git commit --allow-empty -m <string>
git push origin master
ls -a
ls
cd <string>
git add <string>
history
cd <directory>
ps aux
grep -E -5 <string>
nano
cd
cp -r <directory>
vim <file>
source <file>
git log
cd <string>
vim <file>
rm <string>
find $dir -type <string>
cd <string>
sudo mysql
make clean
vim <file>
ls
screen -pts
exit <number>
ls
vi <file>
dotnet <string>
cd <directory>
sudo apt-get upgrade
sudo apt install <string>
vim <file>
cd ..
cd ..
docker rm -f -- <string>
exit
ls
sudo chown -R <string>
git status
clear
npm audit fix
ls -la
git push
git push origin
cd <string>
git branch
ls
cd <directory>
git checkout <string>
wc -l
service apache2 reload
npm i <string>
git push
sed -I <string>
mv <string>
yay -S <string>
sudo apt-get install <string>
mv <string>
ls
ls
mkdir <string>
git commit -m <string>
sudo apt install <string>
mkdir <string>
mkdir <string>
xargs kill -9
cd <string>
git push -u <string> master
ls -ltr
cd ..
ls
ls
ls
mv <string>
cd ..
read -r <string>
cd
vi <file>
psql -U <string> -h <string> <string>
sudo curl -fsSL <URL>
git diff --no-ext-diff --cached --quiet
cd <string>
history -n
ls
git commit -m <string>
tail -f <directory>
wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=<string> --domains <file> --no-parent <URL>
cd <string>
git add .
exit <number>
cat <string>
find .
cd <string>
git st
cd <string>
cp -r <directory>
npm i <string>
ls
vim <file>
ls
ls -la
ls
vim <file>
sudo ln -s <directory>
git fetch origin\
sudo dnf config-manager --add-repo <URL>
nc-docker <string>
npm i <string>
git add .
vim <file>
touch <file>
tmux a
sudo vim <file>
ls
git branch
ls
ls
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
ls
cat <string>
mkdir <string>
killall -s <number>
cd <string>
git pull
unset <string>
vi <file>
enable <string>
rm -rf
clear
cd
systemctl --help
code .
rm <string>
cd <directory>
ls
sed
setg RHOSTS <file>
print <string>
ls
df -lh
ls
docker pull <string>
ls -alrt
git status
cd ..
curl -X <string> -d <string>
cd <directory>
cd <directory>
cd <string>
git commit -m <string>
fg
exit
sed -i <directory>
cd <string>
cd <directory>
sudo enable ufw
ls
sudo start uwsgi
git push
git commit -m <string>
cd
git init
npm run dev
cd ..
find <string> -type <string> -maxdepth <number> -mindepth <number>
chmod <number> <string>
history -c
cd <directory>
sort -nr
ls
git stash pop
exit
sort
scp <string>
mkdir -pv <directory>
sudo sed -i <directory>
read -rp <string> <string>
fg
cd
head -n20 <file>
cd ..
grep <string>
sudo apt-get install <string>
python3 <file>
ls
shutdown -h <string>
sed -e <directory> -e <directory>
rm -rf -- <string>
vi <file>
ls
sudo python <file>
mkdir <string>
less <string>
git init
git init
npm i --save-dev <string>
cd <string>
sudo apt-get install <string>
chown -R <string>
clear
cd ..
cd ..
npm i <string>
ls
vi <file>
cd <directory>
ls
nl
sudo sed -i <directory>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git push
read -rp <string> <string>
grep <string>
sudo su -
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
exit <number>
ls -l
sed <directory>
git add <string>
cd <string>
cat <string>
sudo apt install <string>
cd ..
cd
ls
vi <file>
clear
python3 <file>
sudo deluser <string>
clear
git commit -m <string>
cd <string>
git --version
sudo sed -i <directory> <file>
ls
exit
cd <string>
rm <string>
cat <string>
sudo apt update
vim <file>
ls
cd ..
git init
clear
cd <directory>
vi <file>
git push
git add .
ls
cd ..
sudo wgnord <string>
grep -iaH <string>
cd ..
cd <directory>
ls
sudo python3 <file>
cat <string>
cd <string>
git push -u <string> master -f
tail -f <directory>
python3 <file>
git push -u <string> main
df -a -B <string>
cd ..
wget -qO- <URL>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
git commit -m <string>
curl <string>
ls
find <directory> -type <string> -execdir <string>
grep --help
ls
ls
top
ls
vim <file>
cd ..
exit <number>
su root
cd
ls
git commit -m <string>
clear
ls
ls -l
docker rmi <string>
cp <string>
ls
exit
cp -v <string> <directory>
cd ..
python3 -m <string> venv
git status
clear
cd -
git add <string>
ls
git log --pretty=<string>
npm install <string>
ls
find . -name <directory> -type <string> -prune -exec <string> -rf <string>
git rebase -i <string>
npm uninstall <string>
du -h <directory>
rm -rf <string>
htop
setg RHOSTS.*
cd <string>
sudo apt-get install <string>
find <directory> \( -iname <string> -or -iname <string>
clear
python3 <file>
apt-transport-https
clear
git pull -s <string> -X <string> <string>
cd <string>
sudo apt-get
git merge
rm <string>
cd <string>
dpkg --configure -a
bash --help
curl -fsSL <URL>
vi <file>
cd ..
unset color_prompt force_color_prompt
docker-compose logs --follow <string>
ls
top
ps aux
vi <file>
ls
cd ..
git remote
code
grep -r <string>
sudo apt install <string>
set <string>
ls
clear
npm install -g <string>
clear
ls
sh
sed -i.origin <directory>
git help <string>
vim <file>
git brunch -M <string>
cd <string>
exit
git push -u <string> main
ls
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
cd ..
ls
code .
rm <string>
cd <string>
sudo docker kill corrade
mkdir <string>
code .
mvn clean
sudo ufw enable
cd ..
git fetch
hostname
git config --global <file>
git reset <string>
sudo modprobe
sudo modprobe <string>
grep <string>
sudo chown <string>
git pull origin <string>
cat <string>
git checkout -b <string>
cd <string>
ls
fg
git clone <URL>
sudo xcode-select --install
man <string>
cd <string>
then\
git push -u <string> master
ls
docker ps
git restore <file>
sudo vi <directory>
ls
git add <string>
tail -$2 <directory>
less <string>
clear
nano <file>
ssh-add <directory>
cat <string>
git clone --depth=<number> <URL> <directory>
sudo apt-get upgrade --fix-missing
ls
ls
cd <directory>
ls ..
nano <file>
mv <string>
cd <string>
docker exec -it <string> bash
subl -v
source <file>
ls
mv <string>
rmdir 2001\ -\ <string>
sudo rfkill <string>
sudo ln -s <directory>
ls
vi <file>
cd <string>
gpg --export --armor -vvv --output <string>
apt-get telnet
ls
ls
ls
cd
vi <file>
ls
exit <number>
clear
exit
ls -la
git add <string>
ls
sudo vim <directory>
cp -r <directory>
chmod +x <string>
sudo curl -sSL <URL> -o <directory>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
rm -fr <string>
git clone <URL>
tcpdump -i <string> -v <string>
vi <file>
tail +x # want to display all the lines from x to y. This includes the xth and yth lines.
npx <string>
cat <string>
cd <string>
git add .
cd <directory>
cd
tail -f <string>
read <string>
npm start --cups-printer=<string>
cd <string>
cd <directory>
git pull --rebase <string>
nano <file>
clear
ls
sudo ln -s <directory>
git checkout <string>
vi <file>
git pull
chmod +x <string>
sudo su - <string>
sudo <directory> restart
git status
cat <string>
cd <string>
vim <file>
chmod <number> <string>
ls
ls
cd ..
mount -l
npm install --save <string>
ls
date
cd <string>
clear
git push -u <string> main
git push -u <string> master -f
fg
du -skh <string>
df -lh
sudo <directory> restart
cd <string>
mkdir -p <string>
ping <string>
ps ax -f
ls
cd <string>
pkill <string>
git diff <directory> -- <file>
sudo pacman -S --needed <string>
ls
grep -i <string> >files
history
cd
sudo systemctl status <string>
ls
clear
mkdir <string>
fg
cd <directory>
find . -empty -type <string> -print -delete
exit
cd ..
git status
git add <string>
git commit
apt-get install -y <string>
git checkout -- <string>
mv <string>
sudo nala install <string>
ls
find . -empty -type <string> -print -delete
ls
curl <string>
npm i -g <string>
git commit -m <string>
mkdir <string>
ssh <string>
sudo nano <directory>
git clone <URL> -b <string>
cd <string>
exit
ls
git push -u <string> master
find . -name <file> -type <string> -print -delete
sudo -u <string>
sleep <number>
vi <file>
git config --global <file> <file>
grep <string>
cd <directory>
git remote add origin <URL>
rm -rf <string>
ls
cd <string>
git clone <URL>
cd <directory>
clear
git pull
vi <file>
cd ..
openssl rand -hex <number>
ls -l
du -h -maxdepth=<number>
ls
git push
rm <string>
git commit -m <string>
killall <string>
git config <file> false
ls
man -k <string>
cd ..
vim <file>
sudo reboot
vim <file>
sudo nala install <string>
cd <string>
sudo nano <directory>
ls
git push -u <string> bryan-guner
source <file>
vi <file>
apt-get remove -y <string>
vi <file>
tac <string>
cd <string>
cd
git add .
cat <string>
git clone --depth=<number> <URL>
rm -r <string>
ls
find . -type <string> -exec <string> -i <directory>
ls
git add <string>
git status
scp <string>
chmod <number> <string>
cd <directory>
vim <file>
ls
npm run start
clear
cd
make clean
ls
git pull
vim
sudo zypper se <string>
grep <string>
mkdir <string>
clear
ls -lhrt
cd <directory>
ls
cd <string>
kubectl <string>
cd <directory>
git branch 2> <directory>
ls
code <string>
git pull origin <string>
sudo do-release-upgrade -c
git reset --soft <string>
git commit -am <string>
cd <directory>
cd <directory>
export <string>
ls
npm start
exec swaymsg -q <string> --no-startup-id <string> -c
exit <number>
mkdir -p <string>
code .
cd <string>
ls
ls
clear
wc -l
sudo find <directory> -type <string> -name <file>
find . -name <file>
ls
cd <string>
ls
export <string>
sudo apt-get autoremove
git add .
git commit -m <string>
vi <file>
git push -u <string> main
telnet <string>
sudo chown -R <string>
cat <string>
ls
exit
cd <string>
fg
clear
lsof -n -i
cd <string>
ls
ls
find $dir -type <string>
npm install
cd <directory>
which <string>
man <string>
cd <string>
git diff
ssh dirlic@10.18.0.39 -p <number>
cd <string>
cat <string>
rm <string>
git branch
ps ax
exit
wget <URL>
docker-compose up
sudo dnf install <string>
mkdir <string>
exit
ls
tmux a -t'attributes'
tar xvf <file>
git status
npm install
head -y <file>
vi <file>
exit
cd <string>
git add <string>
cd <string>
ls
export <string>
ls
vim <file>
git push origin master
less
cd <directory>
git commit -m <string> --no-verify
cd <string>
sudo rm -r <string>
vim <file>
git commit -am <string>
wc -l
cat <string>
sudo pacman -S <string> --needed
sudo npm install <string>
vim <file>
docker-compose -f <string>
ls
mkdir <string>
ls
less <string>
sed <directory>
time go run <file>
bash <file>
ls
cp <string>
git clone <URL>
vim <file>
git add .
mkdir -p <string>
sudo apt install <string>
sudo su
clear
top
ls
git config --unset <file>
wc -l
exit
ls -l
cd
git log --all --pretty=<string>
ls
file <string>
cp -r <directory>
git status
git clone <URL>
ls
sudo apt upgrade
python3 -c <string>
patch -p1 <string> <file>
top
rm -r <string>
ls
git filter-branch --index-filter <string>
cd <string>
read <string>
ls
ls
ls -l
git pull
git fsck --full
sudo sed -i <directory> <file>
sudo sed -i <directory>
cd <string>
find . -empty -type <string> -print -delete
sudo pacman -S <string>
uniq
gsettings set <file> <string>
vim <file>
git stash
mv <string>
curl -sL <URL>
vim
df -h <string>
git clone <URL>
cat <string>
curl -L --help
ls
sudo apt-add-repository -y <directory>
ls -lrt
ls
sed -n <string>
ls
git remote remove <string>
cd <directory>
vim <file>
ls -lh
ls
unset color_prompt force_color_prompt
git commit -m <string>
npx shadcn-ui@latest add <string>
node <file>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
ssh -o <string>
npx <string>
git status
history -a <string> -a <string>
cd <string>
git pull
ls
ls
sudo chsh -s <directory>
cd <string>
exit <number>
ls
fg
git status
wget --quiet <URL>
sed -i <directory>
bash
pwd
awk <string>
git add .
git add <string>
time <string>
ls
vim <file>
git add .
exit
docker ps -a
vim <file>
clear
curl -v --data <string>
sudo update-alternatives --config <string>
find . -type <string>
ls
git commit -m <string>
clear
chmod -R <number> <directory>
mkdir <string>
rm -rf <string>
sudo apt-get update
wget <URL>
clear
ls -la
docker-compose -f <string>
bash <file>
sudo dpkg --configure -a
sudo snap install node --classic --channel=<number>
ls -al
vi <file>
cd <string>
sudo source <directory>
cd ..
python3 <file>
ls
mkdir <string>
ls
sleep <string>
git init\
sudo touch <directory>
npm run dev
ls
find <directory> -iname <file> -type <string> -exec <string> -c <string> --wrap=<string> --from <string> --to <string> <string> -o <file> <string> {} \
read -n <number> -p <string>
sudo groupadd <string>
mv <string>
sudo apt list --ugpradeable
fg
uniq
ls
ls
ls
cd <directory>
cut -f2-
tmux new -s <string>
rm <string>
ls
exit
clear
sudo supervisorctl status
ls
git init
sudo sed <directory> <directory>
git commit -m <string>
ls
git commit -m <string>
chmod +x <string>
ls
git commit -m <string>
vi <file>
sudo apt-get -y <string>
git config -l
sudo stop uwsgi
bash
cd <directory>
top
cd <string>
git clone <URL>
docker ps -a
tmux source <file>
find <directory> -type <string> -exec <string> -H <string>
ls
git --help
tar -xf <string>
docker ps
ls
ls
code .
more <file>
cd <string>
ls
rm <string>
sudo apt-get update
git clone <URL>
docker logs <file>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
cd <directory>
ls
ls -ald <string>
sudo sed -i <directory> <file>
vim <file>
cat <string>
cd <string>
dpkg --help
cd <directory>
wget -c <URL> -O <file>
type <string>
ls
cd <string>
cd <string>
cd <directory>
vim <file>
sed -i <directory>
curl -k <URL>
docker image ls
sudo apt-get install <string>
ls
screen -r
df -h
ls
ls -al
git rm -r <string>
more <file>
openssl req -new -key <file> -out <file>
cd <string>
cd <string>
grep <string>
sudo -n <string> <file>
vim <file>
sed <directory>
sudo add-apt-repository <string> [arch=<string> <URL>
python3 <file>
fg
vim <file>
sudo apt-get update
wget <URL>
cd <string>
git clone <URL>
shuf --help
exit <number>
git commit -a -m <string>
xargs sed -i <directory>
npm install --save <string>
cd
read -p <string>
docker stop boost
npm i require-dir-all -f
mysql <string>
ls
clear
git checkout --keep-ours <file>
cd <directory>
ps -ef
git status
git --help
clear
sudo airport --disassociate\
npm install -g <string>
sudo sysctl -w <string>
cd <string>
git commit -m <string>
sudo tcpdump -i <string> -l <string>
vim <file>
mv <string>
ls
tee -a <string>
ls
git init
vim <file>
git add <string>
rm -r <string>
ls
cd <directory>
exit
touch <file>
chmod <number> <string>
docker-compose logs
ls
clear
git commit -m <string>
cd <directory>
git clone --recursive <URL>
sudo apt install <string>
git reset --hard <string>
rm <string>
sudo -E <string> -
docker-compose logs
cd <string>
vim <file>
git commit -m <string>
git commit -m <string>
git co master
cd <string>
clear
brew update
mkdir <string>
vi <file>
mkdir <string>
ls
cd <string>
mkdir <string>
ls
clear
git pull
git status
git clone <URL>
find . -type <string> -print0
curl -fsSL <URL>
ls
mv <string>
sort -u
tail -f <string>
cd ..
npm i prettier -g
sudo apt install <string>
git add .
vim
sudo pip install <string>
vim <file>
apt-get install <string>
alias
cat <string>
touch <file>
mkdir -p <string>
ls
sudo apt autoremove
mkdir <string>
cd ..
grep <string>
du -sh
ls
sudo apt update
git fetch origin\
exit
unzip <file>
clear
which <string>
git gc
python <file> runserver 0.0.0.0:2016
cd ..
git pull
export <string>
vi <file>
ls
git fetch -r
grep <string>
ls
bash <file>
sudo apt update
vim <file>
git pull
rm <string>
cd <directory>
exit <number>
git push -u <string> main
clear
view <string>
cd <directory>
ls
ls
python3 <file>
cd <string>
git diff
xclip -i
sudo apt-get update
cd ..
git pull origin master
touch <string>
ls
ping <string>
cd <directory>
rmdir <string>
cd ..
npm init
<file> - <number>
docker-compose up -d --build
cd <string>
git reset --soft <string>
vi <file>
su root
exit <number>
cat <string>
git log --oneline --graph <directory>
node <file>
rm <string>
rm -rf <string>
ls
fg
cd ..
sed <directory>
sudo fdisk -l <string>
fg
wget <URL>
git clone --depth=<number> <URL> <directory>
ls
git merge <string>
vi <file>
cd <string>
mkdir -p <string>
fg
sudo chmod a+rwx <directory>
ls
ls
git pull
ls
ls
sudo apt purge <string>
ls
ls
vim <file>
exit <number>
npm start
sudo find <directory> -depth -iname <string> -exec <string> -rf <string>
ls
rm <string>
ls
apt-get update
ls
cd <directory>
cd ..
sudo usermod -aG <string> $USER
vim <file>
cd ..
sudo apt-get install <string>
ls
sudo apt-get update -y
fg
sudo apt-get autoremove -y
cat <string>
git commit -m <string>
nano <file>
git status
git checkout master
ls
cd <directory>
exit
git add .
grep <string>
bash
ls
mkdir <string>
ls
npm start
chmod +x <string>
git show
git status
cd <directory>
pwd
ls
git commit -m <string>
ls
cd
read <string>
clear
cd <string>
git diff --name-only <string>
read -p <string> -r
systemctl --user <string> <file>
less <string>
clear
nano <string>
mkdir <string>
sed <directory>
git remote add origin <URL>
sudo pacman -Scc
fg
sleep <string>
date
git init
ls
npm run dev
git init
rm <string>
su root
tr <string>
vim <file>
clear
ln -s <string>
ls
ls
sudo reboot now
cd <directory>
vi <file>
ls
git commit -m <string>
cd <string>
cd <string>
cd <string>
ls
cat <string>
exit
sudo apt install i3 --no-install-recommends
sudo python3 <file>
mkdir -p <string>
ls
cp <string>
vi <file>
sudo python <file>
sudo service <string>
sudo python3 <file>
git add .
sudo apt-get update
ssh <string>
git commit -m <string>
git adog
read -r -p <string>
git add .
ls -l
cd
ls
cd ..
vim <file>
cut -f-12,16,17,21- <string>
sudo mkdir -p <directory>
cd ..
python3 <file>
ls
cd <string>
ls
ls
git init
git stash
git commit -m <string>
sudo apt install <string>
ls
rm <string>
cd <string>
brew install <string>
LANG=<string> rpm -qp --queryformat <string>
stat <file>
sudo stop uwsgi
npm start
zgrep -i <string>
cd <string>
wget
ls
fg
git add .
git status
ls
git commit -am <string>
cd ..
curl -L <URL> --output
vi <file>
ls
exit
git status
sudo apt-get install <string>
sleep <string>
cd <string>
ls
python3 <file>
cp <string>
exit <number>
journalctl -xeu <file>
man <string>
history
telnet <string>
tail -n+2
cd <string>
ls
cat <string>
tail -100 <file>
grep --help
npm install
df -
cd ..
sudo vim <file>
cd <string>
sudo stop uwsgi
git remote add origin <URL>
sudo systemctl daemon-reload
<file> program
apt-get clean
git
cd <directory>
git stash
cd <directory>
sudo apt install <string>
ls
find . -name <file> -type <string> -print -delete
cp -r <directory>
git commit --allow-empty -m <string>
vi <file>
git config push --set-upstream <URL>
git checkout master
more <file>
touch <string>
cp -r <directory>
git add .
clear
git status
npm install
kubectl <string>
ls -la
ls
export <string>
ls
sudo apt-get install <string>
ls
df
vim
cp -r <directory>
cp <string>
cp <string>
mkdir <string>
ls
fg
ls -la -F --color=<string> --group-directories-first
cd ..
git reset --hard <string>
perl --version
mv <string>
cd ..
npm install
touch <file>
sudo apt-get update -y
sed <directory>
ls
git add .
cd <string>
history
cd
find . -name <file>
history -a
true
pwd
git fetch
git reset --hard
git clone <URL>
ls
git rm --cached <string> -f
wget <URL> -P <directory>
wget -q -O - <URL>
date
grep <string>
man <string>
rm -rf <string>
docker rm <string>
git add .
git push -u <string> master
ls
clear
git commit -m <string>
apt-get -y -qq <string> <string>
git status
ls
ls
nano <string>
curl -sSL <URL>
ls
python3 <file>
ls
cd
git add .
exit <number>
exit <number>
ssh-keygen -t <string> -f <directory> -C <string> -b <number>
mv <string>
sudo sed -i <directory>
ls
grep <string>
git status
vi <file>
export <string>
ls > <file>
find . -name <string> -type <string>
grep -rl <string>
ls
npm install <string>
vim
wget -qO - <URL>
cut -f <string> -d <string>
exit <number>
true
git reset <string>
cd
cp <string>
git status
cp <string>
sudo ln -s <directory>
ls
fg
fg
ls
docker ps
rm -rf <string>
rm <string>
git pull
cd <directory>
ls
git add <string>
cat <string>
vim <file>
cd
vim <file>
grep <string>
sudo -i
npm run start
nano <file>
cd <directory>
git pull
npm run start
su
df -h
cd <string>
clear
git init .
mkdir <string>
sudo kill -HUP <number>
setg RHOSTS <file>
rm <string>
vim <file>
clear
perl <file>
touch <string>
touch <file>
chmod +x <string>
cd <directory>
sudo apt update
touch <file>
sudo apt install <string>
source <string>
find <directory> -name=<file>
cd <directory>
sudo apt install -y <string> -r)
sudo python <file>
ps
find <file> -exec <string> -c <string>
tee <file>
pwd
cat <string>
git clone <URL>
ls
ln -sv <string>
docker run --shm-size=<string> --rm -p <string> -v <string>
cd <directory>
bash
ls
rsync -a <string>
ls
sed <directory>
ls
cd <string>
cd <string>
git branch -M <string>
clear
clear
git reset <string>
mkdir -p <string>
exit
chmod <number> <string>
cd <string>
sudo add-apt-repository <string> [arch=<string> <URL>
ls -a
find . -iname <file> -exec <string> -H <string>
ls
ls
cd <string>
cd ..
su - <string>
cd <directory>
sudo vim <file>
ps -ef
sudo nano <directory>
vim <file>
vim <file>
ls
sed -ri <string>
git co -b <string>
sudo su
ls
git remote -v
sudo stop uwsgi
cd <string>
exit
sed -i <directory>
exit
cd <string>
ssh-keygen
vim <file>
sed -i <string>
cp <string>
git diff <string>
git init
cd ..
grep <string>
more <file>
sleep <number>
sudo gpg --dearmor -o <directory>
ls
git fetch
ls
npm test
mkdir <string>
ls
nano <file>
rm -rf <string>
gsettings set <file> <string>
open <string>
grep <string>
sed -i <string>
sudo curl <URL> -o <directory>
sudo docker ps -a
cd <string>
git pull
cd <directory>
sudo nano <directory>
cd ..
git push origin main
npm run bench -- -c <file> -n <file>
date
sed <directory>
fg
git commit -m <string>
git update-index --assume-unchanged <string>
ls
git checkout <string>
chmod <number> <string>
git merge <string>
ls
exit <number>
cd <string>
cat <string>
touch <string>
git status
ls -lh
ls
cd
nano <string>
grep -i <string> >files
mkdir <string>
python3 <file>
git init
clear
git remote -a
git add .
ls
cd <directory>
npm init
ls
grep -i <string> >files
cat <string>
git checkout -b <string>
exit <number>
ls -l
ls
cd <directory>
sudo apt-get update
reboot
vi <file>
git remote add origin <URL>
sudo chmod <number> <string>
ls
sudo apt update
ls -l
read <string>
cd ..
cp <string>
clear
npm install -g <string>
cd
ls
git commit -m <string>
mkdir -pv <directory>
xargs -0 -I{} <string> xf {} -C <string>
cat <string>
exit
clear
exit <number>
ls
ls
find . -type <string> -exec <string> -i <directory>
ls
git config --global <file>
cd <string>
git pull
git rev-parse --short <string>
ls
ls
df -lh
find . -exec <string>
cd <string>
git clone <URL>
cd ..
ls
ls
git push --mirror <string>
cd <string>
ls -a
ls
cd <string>
cd <string>
cd..
sudo su
read -r <string>
git clone <URL>
sudo rm -rf <string>
rm -rf <string>
ls
vi <file>
git add .
npm install -g <string>
cd
cd ..
ls
sudo su
sudo dnf search <string>
pwd
ps
exit <number>
clear
npm publish --access <string> --scope=<string>
git commit -m <string> --no-verify
rm -rf <string>
cd
git add .
mkdir <string>
cd ..
ls
cat <string>
ping <string>
git rm <string>
cd <string>
sudo xrandr --output <string> --auto
git commit -m <string>
cd <string>
clear
sudo apt-get dist-upgrade
ls
sudo yum install <string>
sudo apt-get install <string>
git commit -m <string>
ls
cd
chmod u+x <string>
git status
ls -a
df
vi <file>
sudo halt
apt-get update
docker run <string>
git clone <URL>
sudo apt-get install <string>
ls
ls
grep <string>
sudo fallocate -l <string>
source <file>
cd <string>
grep <string>
open <string>
sudo flatpak <string>
cat <string>
git branch
done < <string>
git commit -a
clear
cd <directory>
cd ..
git branch
cat <string>
which <string>
git commit -m <string>
sudo sed -i <directory>
ls
git hist
git branch -D <string>
sudo update-alternatives --install <directory>
sudo vim <directory>
dpkg -L <string>
cd ..
git remote add origin <URL>
chmod +x <string>
git pull origin master
ls
cd <string>
grep <string>
top
ls
ls
wget --no-check-certificate <string>
git commit -m <string> --no-verify
sudo apt-get update
ls
rm -rf <string>
tar xz --strip <number> -C <string>
sudo poweroff
mkdir <string>
pico <file>
python3 <file>
sudo rm -f <directory>
git log --oneline --all
cd <string>
cp -r <directory>
vim <file>
sudo ln -s <directory>
git diff <string>
sudo apt-get upgrade -y
ls
mkdir <string>
git remote add origin <URL>
git add .
tr <string> <string>
sudo apt-get upgrade
wget -q -O <file>
vim <file>
clear
git push
sleep <number>
ls
pwd # tells you where you currently are
sudo ufw allow <string>
ls
git fsck
clear
git add <string>
rm <string>
git ps -u <string>
git add
mkdir <string>
sed -i <directory>
fg
grep <string>
ls -la
cd <string>
ls
clear
cd <string>
clear
sudo npx <string>
cd <string>
sudo -E <string> -y <directory>
git add <string>
git status
git commit -a -m <string>
cd <string>
ls
grep -vw <string>
ls
cd <string>
ls
cd <string>
git add .
git push
cat <string>
bash
dir
ssh <string>
sudo nano <directory>
cd <directory>
cd ..
ls
dir
cd ..
read <string>
awk <string>
git push -u <string> master
find . -name <file>
cd ..
git branch -D <string>
cat <string>
mkdir <string>
git push origin <string>
cd <string>
python3 -m <string> venv
vim <file>
cd <directory>
ls
else\
cd <directory>
wc -l
ls
sudo apt upgrade -y
open .
sed -i <directory>
cat <string>
cd <string>
ls
cd <string>
apt-get install <string>
python3 <file>
sleep <string>
cd..
git checkout <string>
ls
sudo halt -n
rm -rf <string>
cd <directory>
ls
python3 <file>
vi <file>
vim <file>
git pull
sudo git commit -m <file>
ls
ls
clear
git config --get-all -l
git stash list
<directory> install --from-paths <string> --ignore-src -r -y
sudo poweroff
git status
curl <URL> -u <string> -d <string> -d <file> -G
grep <string>
git clone <URL>
cd <directory>
git add .
cat <string>
git pull
docker
zeus.polsl.gliwice.pl - <number>
ls -lh
npm install
clear
rev
git merge develop
ls
vim <file>
kill <number>
exec <string>
clear
yarn add <string>
git commit
ssh <string>
cd <string>
mv <string>
ls
wget -O <file>
cat <string>
vim <file>
nano <file>
fg
git add
apt-get -y -qq <string> <string>
vim <file>
cd ..
git status
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
sudo su -
sudo apt upgrade
cd <directory>
cp -r <directory>
chmod +x <string>
awk <string>
ls -la
cp -r <directory>
npx tailwindcss init -p
clear
sudo gem install <string>
ssh <string>
sudo sed -i <directory> <file>
git init
ls
sudo apt-get install <string>
apt install <string>
cat <string>
cd <string>
git status
grep -rli <string>
sudo service <string>
cp <string>
du -shx <string>
clear
ls
grep <string>
docker-compose up
mv <string>
cd <string>
git log
exit
ls
cd <string>
ls
npm start
ls
git init
sudo cat <directory>
cd <string>
sudo cp -p <directory>
sed -i <string> -E <directory>
git push
sort -nr
python3 <file>
git pull --no-edit
grep <string>
cd <directory>
git add <string>
git log
cd <directory>
systemctl status <string>
git commit -m <string>
unset color_prompt force_color_prompt
pwd
chmod +x <string>
exit <number>
history
ls -alF
ls
npm install -g <string>
exit <number>
ls
sudo sed -i <directory> <file>
touch <file>
ls
vim <file>
read -s -n <number>
head -n1
exit
git switch main
find . -empty -type <string> -print -delete
cd <string>
git add .
cd ..
ls
rm <string>
cd ..
sudo python3 <file>
cd <string>
chmod <string>
vi <file>
clear
docker
exit <number>
git push
grep <string>
fg
vim <file>
cd <directory>
git push -u <string> master
git push
chmod <number> <string>
ls
egrep -i <string>
bash <file>
rm <string>
awk <string>
setg RHOSTS <file>
cd <string>
mkdir <string>
python3 <file>
mv <string>
git push
exit
sed -i <directory>
man <string>
wc -l
unset <string>
cd <string>
git add <string>
screen -dmS <string>
git merge -s <string>
ls
cat <string>
git add .
cd <directory>
git add .
mkdir <string>
cd ..
cd <directory>
sudo mkdir <directory>
cd <directory>
mvn compile
git restore <file>
git all -A
cd <string>
mv <string>
exit <number>
ls -l
cd <directory>
ls -a
git remote add origin <URL>
ls
ls -la
cd ..
exit
cd <directory>
npm run dev
vim <file>
cat <string>
grep <string>
sudo cp <file> <file>
cat <string>
sudo su
ls
htop
help
clear
npm http GET <URL>
ls
nano <file>
vi <file>
sudo useradd --home <directory> --group <string> --shell <directory>
ssh-add -k <file>
git push origin main
git push
ssh estunnel -N
cp <string>
cd ..
docker commit <string>
ls
git status
git pull
cd <string>
zeus.polsl.gliwice.pl - <number>
git co master
git add .
ls
git pull
rsync <directory>
ls
ls -lah
vi <file>
vi <file>
sudo php <string>
cat <string>
sudo apt upgrade -y
exit <number>
ls
git push origin master
cd <string>
systemctl --user <string> <file>
git add .
clear
cat <string>
cat <string>
ls
sleep <number>
cd ..
ps -u <string> # lists your processes
git status
cd <string>
cd <directory>
ls
ls
kill -9 <number>
sudo apt-get install netdata -y
cd ..
cut -c <string>
ls
cat <string>
cd <string>
wget <URL>
cd <directory>
ping <string>
cd <directory>
systemctl status <string>
ls
cd <directory>
ls
curl <string>
cp -r <directory>
cd ..
cut -d, -f9
man <string>
sudo apt-get update
ls
sudo su -
git remote add origin <URL>
exit
sudo lvremove <directory>
sudo prime-select nvidia
init <number>
tail -f <directory>
ls
git status
ls
ls
systemctl --user <string> <file>
ls
sudo apt-get install <string>
vim <file>
cat <string>
git stash list
find . -name <file>
sed -i <string>
cd -
git commit -m <string>
git commit -m <string>
locate <string>
cat <string>
cd <directory>
ls
ls
cut -d=<string> <string>
find . -empty -type <string> -print -delete
vi <file>
read -p <string>
sudo apt-get update
history
git status
git fetch
git mv -- <string>
npm run start
git push origin master
ls
ls
sudo sysctl <string>
cd <string>
git status
sed -i.bak <directory>
cd <string>
cd <string>
exit
sudo apt autoremove
ls
ls
cd <directory>
cd <string>
git init
rm -r <string>
sudo ln -s <directory>
cd
su root
cd <directory>
git clone <URL>
kill <number>
touch <string>
git checkout -
git push -u <string> main
cd
ls
scp <string>
ls
ls
cd <string>
git branch
vi <file>
git commit -m <string>
clear
sudo git clone <URL> --force
sudo apt update -y
cd ..
vim <file>
clear
grep <string>
sudo apt-key add -
cd
ls
read -p <string>
ls
cd ..
cd <string>
chmod <number> -R <directory>
cd <directory>
cd <string>
grep <string>
dir
vim <file>
clear
cat <string>
cat <string>
ls
docker-compose up -d --build
exit
fg
nano <string>
ls
cd <directory>
man <string>
docker-compose build teh-germinator
fg
grep -i <string>
cd <string>
cd <string>
cd <string>
ls
git status
cd <string>
git push
fg
rm <string>
cd
git add
ls
ps -p <string>
cd <string>
git br -d <string>
mv <string>
git rebase
clear
ls
apt-key adv --keyserver <string> --recv-keys <string>
sed -i <string> -e <string>
rm <directory> -rf
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
ls
vim <file>
ls
sudo vi <file>
git remote add origin <URL>
git status
git commit -m <string>
du -h --max-depth=<number>
rm --recursive --dir <file>
vi <file>
git merge --help
rm -rf <string>
cd <string>
pwd
find <directory> -type <string> -print0
clear
cd <string>
vim <file>
ls
vi <file>
git add .
ls
vi
fg
python3 <file>
cat <string>
cd ..
history
cd <string>
<directory> <string>
ls
git branch -M <string>
ls
cd <string>
sh <file>
clear
ls
cd <string>
vim <file>
head
git status
cd <string>
touch <file>
cd ..
clear
fg
git config --global <file> <file>
cat <string>
git commit -m <string>
ls
rm -rf <string>
wget -r <URL>
ls -la
clear
git
exit <number>
userdel -r <string>
cd <directory>
service <string>
nano <file>
ls
ls
exit
sudo apt update
python3.11 <file>
ls
ls -l
git add <string>
cd <string>
cd <string>
clear
ls
sudo mkfs -t <string>
ls
done
local <string>
cd <directory>
sudo sed -i <directory> <file>
ls
ls -l
clear
git push
git push
git pull
cd ..
ls
docker stop boost
git pull
pkill <string>
vim <file>
vim <file>
exit <number>
cd ..
ls
ls
rm <string>
cd..
git clone <URL> --depth <number>
vim <file>
ls
python3 <file>
cd <directory>
clear
cd
ls
ls
sudo apt install <string>
python3 <file>
find -name <string>
chmod +x <string>
clear
git add .
git init
rm -rf <string>
vim <file>
less
ls
cd <string>
fg
cat <string>
git restore <file>
vim
sudo apt-get install texlive-pstricks -y
sudo apt-get install -y <string>
python3 <file>
apt install <string>
rm <string>
clear
git status
git status
git status
vi <file>
npm i <string>
sudo apt-get -y <string> <string>
vim <file>
ls
cd <string>
perl -p -i -e <directory>
ls -l
cd ..
sudo bash
cd <directory>
eval <string>
vim <file>
su
cd <directory>
exit <number>
git log
sudo c_rehash <directory>
su -
mkdir <string>
apt-get update
podman run -i -t --rm -v <directory>
chown <string>
wget <URL>
git pull
ls
ls
npm audit fix -f
cd <string>
git status
ls
sudo timedatectl <string>
service apache2 reload
exit <number>
git commit -m <string>
cd <string>
git push
pwd
sed -i <directory>
exit <number>
ls
sed <directory>
grep <string>
curl --help
cat <string>
rm <string>
cd ..
ls
clear
ls
npm i
npm run coverage
cd <directory>
find . -name <file>
sudo apt-get install <string>
uniq
wc -l <string>
sudo port
git reset --soft
pwd
clear
cd <directory>
find . -type <string> -perm <number>
cd <string>
vim
cd <directory>
vim <file>
git push
exit
git init
git push
cd <string>
grep <string>
ls
sleep <number>
ls
sudo nohup mongod --fork --logpath <directory>
git add .
sudo reboot
clear
cat <string>
ls
mkdir <string>
cd ..
git merge <string>
cp <string>
git add .
git commit -m <string>
ls
wget -q -O <file>
cd <string>
ls
ls
vim
sudo apt-get install <string>
git push
ls -al
exit <number>
awk <string>
npx tailwindcss -i <file> -o <file> --watch
ls
git
git branch
cd <string>
rm -rf <string>
vim <file>
docker run -e <string> -v <directory>
cut -f1 -d" <string>
touch <string>
ls
git add .
git status
git push
fg
clear
ls
ls
git commot -m <string>
ssh <string>
less <string>
ls
ls -lh
apt-get update
cd <string>
git status
sudo mv <string>
cat <string>
ls
clear
git pull
exit <number>
git init
ls
ls
git add .
sudo systemctl status <string>
git add .
cd
cp <string>
clear
else
ls
grep -v <string>
git commit -m <string>
git commit -m <string>
sudo reboot
sudo killall -HUP <string>
ls
bash <file>
sudo apt-get install <string>
ls
cd ..
ls
git add .
nano <file>
git add .
chmod +x <string>
capsctrl <string>
ls
cd <string>
ls
git commit -m <string>
clear
cd ..
wc -l
pwd
cd ..
sudo dnf install <string>
ssh <string>
clear
git push
sudo apt-get install <string>
cd <directory>
head -c <string>
ls
rm <string>
ls
git push -u <string> master
ls++ -a
mkdir <string>
cd <string>
setg RHOSTS.*
git pull
ls -la
touch <string>
rm -d <string>
cd <directory>
df -lh
exit <number>
git rm --cached <string>
git branch main
cd <string>
df # shows disk usage
rm -rf <string>
git rm <string>
mkdir <string>
ls
unset color_prompt force_color_prompt
git checkout --orphan <string>
ls
sudo apt upgrade -y
ls
make install
ls -la
git add .
touch <file>
exit
python3.11
cd <string>
touch <string>
exit
ssh <string>
pipewire
cd
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
host <string>
git status
head -1 <file>
vim <file>
top
cd <string>
git commit-tree <string>
cd <directory>
awk <string>
who <string>
sed -n <string>
ls -l
cp -r <directory>
cat <string>
unset color_prompt force_color_prompt
ssh <string>
rm <directory> -fr
cd
exit <number>
ls
xrandr --output <string> --auto
cd <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <string> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file>
vim
git add <string>
sudo sed -i <directory> <file>
git commit -m <string>
sudo sed -i <directory>
exit
cat <string>
mkdir <string>
cat <string>
sudo docker rm corrade
git branch 2> <directory>
docker-compose logs
python3 <file>
ls -l
mkdir -p <string>
sudo apt-get update
uname
less
git clone <URL>
open .
script/build.sh
ls
GET <directory>
cd ..
kill -s <number> <number>
file -l <file>
vim <file>
cd ..
ls
cat <string>
sed -ibak -E <directory>
ls
cd <string>
git pull
python3 <file>
vim <file>
sudo nano <directory>
cd <string>
git remote add origin <URL>
ls
git status
ln -s <string>
sudo apt-get install <string>
rmdir -r <string>
rm -R <string>
cd <string>
cd <string>
du
exit
sudo -i
ls
git init
cd <string>
sudo rm -rf <string>
docker build -t <string>
ls
sudo killall -9 <string>
ls -al
git push
git reset <string>
ls
ls
ls
git commit -m <string>
ls -al
sed -i <directory>
git pull origin master
yarn add <string>
sudo apt update
docker ps --no-trunc --format <string>
exit
sed <directory>
clear
chmod <number> <string>
git push
ls -al
git branch
ls
cd ..
ls
cd <directory>
sudo du -h --max-depth=<number>
history # shows command line history
cd <directory>
vim <file>
clear
ls
git remote -v
npm start
clear
git config --global <file> <file>
cd <string>
vim <file>
sudo
cat <string>
ls
python3 <file>
vim <file>
vim <file>
vim <file>
ssh dirlic@10.18.0.39 -p <number>
ls
ls
git clone <URL>
git pull
cd ..
clear
sudo chmod <number> <string>
chmod <number> <string>
python3 <file>
git add <string>
gpg --verify <file> <string>
git status
git checkout <string>
cd <string>
read -p <string>
cd <string>
cd <string>
exit <number>
exit
git clone <URL>
clear
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
mkdir <string>
git clone <URL>
exit <number>
rm -r <string>
top
htop
killall <string>
cp <string>
fg
cd <string>
sed -i <string>
ls -a
cd <directory>
cd <string>
ls
sudo hostnamectl set-hostname <string>
git status
git commit -m <string>
done\
ls
sudo python3 <file> install
ls
exit <number>
sudo pacman -Syu <string>
cd
sed -E -e <directory>
clear
cd <string>
sudo apt install -y <string>
cd <string>
git remote add origin <URL>
git push origin master
vim <file>
grep -C <string>
make clean
clear
ls
local <string>
mv <string>
awk <string>
npm install <string>
cd <string>
sudo apt-get update
code <string>
ls
lsblk
ls
diff -u <string>
touch <file>
git pull origin master
vim <file>
git add <string>
systemctl status <string>
git add .
git commit -m <string>
done
cd ..
ls
cd <directory>
clear
cd <string>
scp <string>
sudo apt install <string>
sudo apt-get update
fg
npm install
cd
source <string>
cd ..
clear
ps -a
cp <string>
ls
ls
chmod <string>
ssh <string>
ls
fg
cd <string>
ls
cd <string>
git branch -M <string>
pwd
df -h
ls
grep <string>
find . -name <file>
sudo pacman -Syyu
rm <string>
cd
sudo nano <string>
ls
setg RHOSTS <file>
vim <file>
cd <directory>
vim
python3 <file>
mkdir <string>
ls
python3 <file>
ping -c <string>
sudo -H <string> install <string>
cd <directory>
python3 <file>
git add .
ls
tar -ztvf <file>
dotnet <string>
git config --global <file> <file>
mv <string>
ls -a
cd <string>
cd <string>
clear
<directory> <string>
cd <string>
cd -
apt-get update
curl <string>
cd <string>
apt update
ls
git reset --hard
vim <file>
sudo subl <string>
pwd
python3 <file>
git status
python3 <file>
cd <string>
cd <string>
git add <string>
ssh-agent
date --format <string>
nano <file>
vi <file>
clear
cd <string>
ls
ls
grep <string>
ls
sudo flatpak override --env=<string>
cp <string>
sudo apt-get install <string>
grep -v <string>
grep -c <string>
shutdown
cd <directory>
git push origin
cd <directory>
npm run dev
apt-get install -y <string>
npm install sharp --save
touch <string>
exit <number>
export <string>
sudo mount -t <string> -o <string>
sudo rm -rf <string>
ls
bash
exit
fg
ls
ls
ls
ping <string>
cd <directory>
clear
clear
ls
apt full-upgrade -y
cp <string>
ls
git add .
cd ..
touch <string>
time <directory> -cpuprofile=<file>
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
history -w
mkdir <string>
cat <string>
ls
sudo apt --fix-broken <string>
sudo ansible all -m <string>
ls
exit
sudo docker run -d -p <string> --name <string>
sudo pacman -Syu
vim <file>
touch <string>
date --help
cat <string>
clear
docker --version
grep <string>
nano <file>
git commit -m <string>
mkdir <string>
ls
clear
npm help
fg
mkdir <string>
true
ls
cd <string>
then\
cd <string>
cd
git push --help
curl <URL> -u <string> -H <string>
cd <string>
ln -s <string>
sudo touch <directory>
ls
grep <string>
rm -rf <string>
cd <directory>
git push
sudo rm -rf <string>
cd <string>
cd <directory>
chmod <number> <string>
ssh <string>
git status
sysctl <string>
mkdir <string>
grep -o <string>
sudo mkdir <directory>
mkdir -p <string>
cd
sed -i <string>
cd ..
sudo sysctl -w <string>
git commit -am <string>
find . -empty -type <string> -print -delete
ls
vim <file>
ps -ef
ls
cd
ip a
sudo dpkg -i <file>
git branch
dpkg --force-elp
git commit -m <string>
git push
ls
export <string>
wget <URL>
cd <directory>
exit <number>
cat <string>
ls
cat <string>
sudo apt -f <string>
vi <file>
ping <string>
git commit -m <string>
ls
vim <file>
sudo apt dist-upgrade
vim <file>
ls
pacman -S <string>
sed <directory>
cp <string>
bash <file>
npm install <string>
npm
git clone <URL>
wget <URL>
clear
ls
sudo chmod a+rx <directory>
ls
sudo pacman -S <string>
clear
date
byobu-tmux
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
exit
cd <string>
git pull origin <string>
npm install
open <string>
ls
sudo apt-get -y <string> <string>
ls -l
sudo swapoff -a
sudo find <directory> -type <string> -iname <string>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
clear
npm install pm2 -g
sudo dpkg-reconfigure console-setup
ls
ls
du -hs <string>
grep -r <string>
sudo pacman -Syu
python3.8 <file> --ds_path <file> --device <string>
ls
vi <file>
git pull
cd <directory>
fg
ls
ls
ls
vi <file>
sudo <directory> --chip <string>
cd <string>
git remote -v
ls
git pull
ls -l
cd <string>
wget <URL>
cd <string>
ls
clear
ls
git rebase <directory>
clear
ls
cd <string>
cd ..
pwd
ls
pwd
mkdir <string>
ls
mv <string>
sudo umount <directory>
clear
cat <string>
git status
ls
cd <directory>
rm -rf <string>
pwd
git add <string>
ls
cd <string>
grep <string>
cd <string>
sudo add-apt-repository <directory>
cd <directory>
git add <string>
git status
cd <string>
cd <directory>
cd ..
sudo chown -R <string>
python3 --version
awk <string>
touch <string>
du -sch <string>
rm -fr -- <string>
vim <file>
sudo su
cd ..
rm <string>
npm i
git add .
sudo python <file>
python3 <file>
rm <string>
git init
ls
then
read -p <string>
git push -u <string> master -f
sudo reboot now
bash <file>
cd <string>
git checkout master
vi <file>
clear
git commit
ls -tr
ls
git add <string>
ls
ls -R
ls
ls
script/build.sh
sudo nano <directory>
clear
git push -u <string> master
ls <directory> -a
vi -t <string>
cd ..
git status
pacman -S <string>
time go run <file>
git init
pwd
clear
clear
wget -r -A.pdf <URL>
git log
open <string>
clear
sed <directory>
cd <string>
bash <file>
sudo apt-get -y <string>
ls
mv <string>
ls
sudo nano <directory>
cd ..
ls
sudo nohup rsync -avzhP --exclude <string> --exclude <string> --exclude <string> --exclude <string> --exclude <string> -e <string>
cd <string>
sudo reboot -h <string>
npm run test
cd ..
cd <string>
sudo su
fg
cd <string>
tcpdump -i <string> -c10 -nn -A <string>
git push -u <string> master
git reset --soft
cd <string>
git init
vim <file>
ls
ls
cd <string>
ls -al
exit
exit
git status
ls
cd
ls
done
vim <file>
vim <file>
docker start postgres-container
cd ..
npm cache clean --force
which <string>
cd <directory>
git add .
git add .
tmux attach
cd <directory>
ls
git push
mv <string>
git please
git config --global <file> <file>
bash <file>
cd ..
ls
ls -la
cd ..
git commit
cd ..
cd ..
vi . -NO
git commit -m <string>
sed -e <directory>
clear
more <file>
npm i <string>
grep -r <string>
git push
cat <string>
pwd
rm -rf <string>
git clone <URL>
cp <string>
cd <string>
free -m
ip a
file <string>
rm -rf <string>
rm <string>
ls
vim <file>
rm <string>
git reset <string>
git commit -m <string>
cd <directory>
read -p <string>
source <directory>
pacman -Q
cd <directory>
ls
sudo lvremove <directory> -f
ls
git clone <URL>
rm -rf <string>
pwd
sudo bash
who
git status
ls
git commit -m <string>
go build <file>
cp -r <directory>
vi <file>
command cp -i <string>
openssl req -new -x509 -nodes -sha256 -days <number> -key <file>
npm i -g <string>
cd
man rm -R
vim <file>
git pull origin <string>
curl <string>
uname
cd <directory>
cd <string>
cat <string>
ps ux
ls
<directory> <string>
<file> <file>
ls
grep <string>
git add .
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
exit
rm -f <string>
git add <string>
sudo apt-get install <string>
ls
curl -L <URL>
vi <file>
cd <string>
reboot
sudo gem install <string>
egrep -v <string>
vim <file>
cp -i <string>
sed -i <directory>
cd -
git restore --staged <string>
read -s -n <number>
sudo git pull origin master
git pull
curl -v -H <string>
history
git log
git commit -m <string>
git status
ls
cd <string>
cat <string>
exit
npm install -g <string>
vim <file>
git submodule add <URL>
cd <string>
ls
ls
cd <string>
cd ..
sudo dpkg -l
shutdown -h <string>
find -name <string>
ls
ls
pwd # <string>
sudo add-apt-repository <string> [arch=<string> <URL>
cp <string>
wget --no-check-certificate <string>
cd <string>
cd <string>
ls
tail -f <string>
cd -- <string>
vi <file>
vim
ip a
git revert
git status
ls
ls -las
find . -name <file> -exec <string>
go <string>
grep <string>
docker logs <string>
ps aux
ls
cd <string>
npm audit fix
ls
git push
ls
cd <directory>
cd ..
cd <directory>
cd <string>
ping <string>
git status
ls
git clone <URL>
ls
ls
mkdir -h
code .
sudo apt install <string>
git push origin master
wc -l
clear
ps -ef
ls
pkill -f <string>
mkdir <string>
nano <file>
killall -l
screen
vi <file>
cat <string>
xargs grep <string>
ls
touch <string>
ls
exit
uname -a
ls
cd ..
cd ..
rm <string>
git push -u <string> master -f
ls
touch <file>
sed -e <directory> -e <directory>
ls
clear
ps aux
ls
git status
cd <string>
clear
cd <directory>
ls <directory> -ltr
chmod <number> <string>
grep <string>
sudo apt-get install -y --force-yes <string>
npm test
scp <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
cd <string>
ls -ltr
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
cd <directory>
killall <string>
git branch
cd <string>
sudo stop uwsgi
pwd
sudo apt-get install <string>
fg
sudo rm -f <directory>
cd ..
ls
grep -i <string>
docker run --rm --entrypoint <string> $GL_IMG_REPO -c <string>
git checkout -b <string>
cd
git commit
curl --version
cd <directory>
cd ..
npm start
ls -las
cd <string>
git commit -m <string>
npm run bench -- -c <file> -n <file>
git push
npm i -f
cd <string>
cd <string>
rm <string>
git commit -a
sudo chmod -R <number> <string>
clear
dotnet
git status
docker image <string>
touch <file>
bash <file>
ls
git init
sudo chmod +x <string>
cut -d, -f1,4,8
source <directory>
ls
ls
ls
ls
clear
sudo deluser <string>
python3 <file>
history
sudo nano <string>
docker run -p <string>
cd <string>
git commit
cd <string>
sudo ufw enable
git commit
rm -rf <string>
mv <string>
git pull
tr <string>
docker exec -it <string> bash
vim <file>
cat <string>
cd
ls
time go run <file>
sudo systemctl reboot
ls -al
sudo apt-get purge <string>
ping <file> -c <number>
git clone <URL>
source <file>
sudo git push <string>
git push
git config --global <file> <string>
sudo apt-get install -y <string>
rm -rf <string>
ls
docker rm <string>
kubectl apply --filename <file>
ls
git add .
a ! href <string>
ls
git commit -am <string>
more <file>
git branch
ls
ls
ls
history
ls
git add <string>
sudo vim <directory>
cd <string>
less <string>
nano <string>
mv <string>
git status
column
rm -f <string>
exit
vi <file>
cd <string>
patch -p1 <string> <file>
reboot
pwd
unzip <file>
cd <string>
ls
git branch -M <string>
open <string>
cd <directory>
less -n <number>
git cat-file -p <string>
cd ..
ls
sed -i <directory>
nano <string>
npm test
exit <number>
cd <directory>
sudo ln -s <directory>
git --version
npm run test
ls
pwd
ls
cd
ps axfu
git push
exit
ls
vim <file>
sudo apt-get install <string>
cp -r <directory>
npm run devstart
ls
git config <file> false
ls -ltra
awk -F'>' <string>
ls
exit
git add <string>
cd ..
ls
cd ..
sudo ufw allow <string>
ps -eal
cat <string>
head -10
cat <string>
sudo fdisk <directory>
else\
df -lh
grep -i <string>
git push -u <string> master
grep -R <string>
dir
more <file>
apt search <string>
su root
mv <string>
git stash
cd <string>
ls
cd <string>
uname -a
date
mkdir -p <string>
cat
exit <number>
rm <string>
sudo apt update
npm run dev
cd <string>
vim <file>
sudo apt-get remove <string>
sudo python <file> -cascade==<file> <number>
sudo make install
ls
stat -c <string>
ls
sudo apt-get install <string>
ls
sudo git fetch
rm -r <string>
git push
ping <file>
git reset --hard
read -d <string> <string>
cd <string>
npm run dev
git add <string>
fg
ls -l
su
rm -rf <string>
source <string>
cd ..
sudo python <file>
vim <file>
cd ..
touch <string>
ls
cd <directory>
ls
nohup python3 <file> <string>
ping <string>
cd ..
git add .
exit <number>
script/build.sh
sudo apt update
cp -r <directory>
cd <string>
cd ..
sudo xcodebuild -license <string>
cp -r <directory>
clear
rm <string>
rm -rf <string>
cd ..
git add <string>
mkdir <string>
cat <string>
ls
cd <directory>
egrep -i <string>
clear
exit
fg
vim <file>
shift
cat <string>
mv <string>
cp <string>
cd
cd <string>
python3 <file>
ls
cp <string>
cd ..
git clone <URL>
cd <string>
cd <string>
rm -rf <string>
npm install -g <string>
sudo xbps-install -Su
sudo docker kill corrade
apt-get install <string>
ls
ls
docker-compose up -d --build
history
composer create-project --prefer-dist <directory>
zgrep -i -E -o --no-filename <string>
cd <string>
vim <file>
ls
git add .
git config --global <file> <string>
exit <number>
git push origin master
cd <string>
ls
cd <directory>
ls
cd <string>
ls
tmux a
cd
sort -u <string>
type <string>
git push
git clone <URL>
exit
rm -rf <string>
ls
cd <string>
rm -r <string>
sudo systemctl status <string>
go tool pprof <file>
sudo nano <directory>
sudo apt-get install <string>
fg
cd ..
cd
sudo pacman -s <string>
git add .
htop
cd <directory>
vi <file>
sudo sed -i <directory>
git add <string>
grep -i <string> >files
ls
git push -u <string> master -f
unset color_prompt force_color_prompt
tail -f <directory>
cd <directory>
ssh dirlic@10.18.0.39 -p <number>
git init
cp -v <string> <directory>
ssh-keygen -t <string> -b <number>
git -version
sed -n <string>
ls
cd <directory>
cp <string>
cd <string>
cd <directory>
grep <string>
exit
ps -h
sudo dpkg-reconfigure <string>
cd <string>
ls
exit
clear
open
git push
cat <string>
grep <string>
sudo npm install <string>
pwd
ps aux
npm run coverage
vi <file>
vi <file>
git status
ls
ls
rm -r <string>
cd <directory>
rm -r <string>
git add .
cp <string>
clear
cd <string>
git commit -m <string>
ls
stat <file>
git push origin master
cd <string>
git add .
ls
chmod <number> -R <directory>
cd ..
ls
cd ..
sudo timedatectl set-timezone <directory>
alias <string>
git branch 2> <directory>
apt upgrade
cd <string>
docker-compose logs --follow <string>
npm run prod
exit <number>
ls
cd ..
git add -A
clear
git commmit -m <string>
ls
ls
find . -name <file>
sudo apt remove <string>
curl -o- <URL>
vim <file>
df -h
ls
clear
read -rp <string> <string>
docker
clear
git push origin master
ls
sudo pacman -S <string>
git add .
git rm -r --cached <directory>
apt-get install <string>
git commit -am <string>
ls
apt-get -y -qq <string> <string>
git clone <URL>
git clone <URL>
ls
sudo apt-get update
killall <processname> # kill all processes with the name
find . -empty -type <string> -print -delete
ls
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a
git add .
perl -pi -e <directory>
clear
git commit -am <string>
node <file>
ls
sudo rm -rf <directory> <directory>
cd <string>
sudo apt update
mv <string>
git switch -b <string>
cd <string>
mkdir <string>
sudo apt --purge <string>
ls
mkdir <string>
sudo chmod <number> <string>
mv <string>
git add <string>
cd -- <string>
python3 <file>
head
code .
cd ..
git status
cd <string>
npm install express-generator -g
cut -d' <string> -f <string>
exit
cd <string>
cd <directory>
ls
vim <file>
clear
exit <number>
vi
vi <file>
awk <string>
ls -lah
ls
sudo reboot
ls
ls
chmod u+x <string>
docker run --rm <string>
sudo code --install-extension <file>
git push origin master
cd <string>
cd <directory>
ls
sudo nano <file>
ls
vim <file>
rm <string>
ls
git fetch
cp <string>
sed <directory>
cd ..
git status
cat <string>
ls
sudo usermod -aG <string> $USER
cat <string>
git config --global <file> <file>
cd <string>
cd ..
cd <string>
ls
vim <file>
cd ..
ls -l
nano <file>
ls
python3 <file>
cd ..
cd
ls -alh
ls
git commit -m <string>
git add .
ls
sudo apt update
ls
sudo tar zxf <directory> -C <directory>
ls
man <string>
ls
vi <file>
git co HEAD .
ls
ls
read -p <string>
top
systemctl --type=<string>
docker ps
ls
sudo docker run -ti --rm <string>
source <string>
ls
watch
cd ..
rm -rf <string>
cd ..
git add <string>
screen -a <number>
find . -name <file> -type <string> -print -delete
git stash
docker-compose logs --follow <string>
clear
ls
ls
then\
exit
git init
grep -v <string>
cd ..
ls
cd <string>
sudo nmcli con mod <string> <string>
cd ..
systemctl status <string>
cd ..
sudo nginx -t
vim <file>
cd ..
sudo sed -i <directory> <file>
cd <string>
python3 -m <string> install <string>
cd
ls -la
clear
chmod <number> <string>
tee --unbuffered <directory>
ls
git reset
sudo su
source <string>
sudo apt install -y <string>
find . -name <file> -exec <string> -c <string> - <string>
mkdir <string>
ls
kill -9 <number>
cd <directory>
git add .
mkdir <string>
git add <string>
apt-get -y <string> <string>
vi <file>
cd
git push origin PTS-578_redirects_not_updating_automatically --force
cd <string>
git pull
git checkout -
cd <string>
cd <string>
sudo sed -i <directory> <file>
git co - <string>
cd <string>
vi <file>
sudo python3 <file>
ls
sudo apt install <string>
git config --global <file>
chmod <number> <string>
cd <directory>
cd <string>
sudo ufw enable
npm create vite@latest <string>
cd <string>
unzip <file>
cat <string>
sudo apt-get install <string>
sudo zypper install <string>
mv <string>
cd ..
ls
git remote add origin <URL>
code <string>
sudo npm install -g <string>
vim <file>
cd
wget <URL>
git cat-file -p <string>
exit
git status
ls
ls
ag -v <string>
git checkout -b <string>
done
nc <string>
git init
cd <string>
cd <directory>
sleep <number>
git add <string>
clear
cd <string>
ls
sudo snap install <string>
git status
ls
clear
fg
source <directory>
exit
rm <string>
clear
git status
sudo apt install <string>
ls
apt install -y <string>
ls
vi <file>
git status
python3 <file>
ls
cd <directory>
cd <string>
find . -empty
vim <file>
vim <file>
exit
rm <string>
git push
ls
git push -u <string> master
export <string>
cat <string>
cd <directory>
ls
rm -fr -- <string>
sudo openvpn <file>
sudo apt update
curl -X <string> -H <string>
git clone <URL>
grep <string>
git status
vim <file>
cd <string>
cd
ls
python3 <file> <number> --country <string>
sed -r <directory>
docker run -e <string> -v <directory>
ps aux
vi
git grep <string>
fg
sudo apt-get -y <string>
head -n <string>
chmod +x <string>
cd <directory>
ls
sed -i <directory>
sed -i <directory>
cd ..
cd <string>
git push -u <string> master
vim <file>
cd <directory>
tmux a
apt-get -y -qq <string> <string>
cd <string>
sort -r <string>
less <string>
clear
vim <file>
ps aux
cd <string>
sudo <directory> <string>
alias <string>
sudo sed -i <directory> <file>
ls -laSh
read -rp <string> <string>
mv <string>
rm -rf <string>
unset <string>
ps --help <string>
ls -la
exit <number>
sudo ufw <string>
ls++ -a
exit <number>
vim <file>
ls
git commit -m <string>
ls -a
ls
ag -v <string>
cd ..
git commit -m <string>
mkdir <string>
cd <string>
ls
sort -u <string>
git clone <URL>
exit
docker-compose up -d --build
python3 <file>
clear
cd <string>
ls
curl -s <string>
exit <number>
cp <string>
mkdir <string>
ls
clear
grep <string>
cd <string>
systemctl start kubelet
cp -r <directory>
cd <string>
rm -R <string>
find . -empty -type <string> -print -delete
vi <file>
ls -laSh
tee -a <string>
exit <number>
ls -l
read -p <string>
touch <string>
top
cat <string>
git clone <URL>
vim <file>
git clone <URL>
cp <string>
exit
git push -u <string> master
python3 <file>
ls -l
rm -rf <string>
git pull
sed -i <directory>
npm run start
ls
clear
mv <string>
git reset --hard
git status
vim <file>
vim <file>
git status
cd ..
git remote set-url <string>
cd
ls
sudo apt install <string>
git commit -m <string>
find $blacklists_dir -name <string> -execdir <string> <string>
git pull
sudo mkdir -p <directory>
sh
vim <file>
git commit -m <string>
sed <directory>
clear
ls
ls
git push origin <string>
apt-get -y <string>
git clone <URL>
mount
git status
ls
git status
ls
exit
cd <string>
ls
ls
ls
cd <string>
man
ls
git describe --tags --exact-match <string>
sudo apt-get update -y
source <string>
ssh-copy-id <string>
cd <string>
git fetch
fg
git add <string>
ls
git grep <string>
cd <string>
sh
curl <string>
ls
find . -type <string> -mtime <string>
cd <directory>
cd <string>
sudo su
git init
wc -l
locate <string>
yarn <string>
ls -las
sudo apt-get install <string>
ls -ltr
ls
git clone <URL>
sudo apt install nodejs -y
ls
open <string>
wget <URL>
git log --full-history --pretty=<string> <string>
git status
docker rm <string>
cd
ps -ae
mv <string>
cd <directory>
ls -a
ls
ls
npm login
ls <directory> -ldL
sudo python <file> --cascade=<file> <number>
xargs -i <string> <string>
git add <string>
clear
rm <string>
sudo sed -i <directory> <file>
export <string>
cd <string>
sudo apt install <string>
mkdir -p <string>
cd ..
sudo kill <number>
git commit --amend --no-edit --no-verify
git add .
code .
ls
mv <string>
ls -la <directory>
ssh-add <directory>
sed -I <string>
git branch
touch <file>
clear
cd ..
sed <directory>
git cat-file -p <string>
git init
sudo apt -y <string>
curl -fsSLo- <URL>
ls
clear
mv <string>
git pull
nano <file>
tail -f <string>
vi <file>
sudo reboot
cd <directory>
sort
apt-get install -y <string>
git add -A
nano <file>
cd <string>
cd <string>
git remote -v
sudo apt-get install <string>
cd <string>
rm -rf <string>
cd <string>
git add <string>
cat <string>
sed <directory>
vim <file>
npm install
cd <directory>
git clone <URL>
sudo add-apt-repository <string>
ls
rm -rf <string>
git push
git add .
clear
docker-compose exec -T <string>
npm run bench -- -c <file> -n <file>
rm <string>
alias <string>
cd ..
fg
npm i jest --save-dev
sudo dpkg -i <file>
ls
ls
systemctl status <string>
cd <string>
cd <string>
ls -la
python3 <file>
cd <string>
sudo sed -i <directory>
cd <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
vi <file>
fg
git add <string>
exit
npx <string>
grep <string>
cp <string>
curl -L <URL>
docker container <string>
git push -u <string> bryan-guner
cat <string>
ls
exit <number>
sudo nvidia-xconfig -a --cool-bits=<number> --allow-empty-initial-configuration --enable-all-gpus
vim <file>
bash
cd
setg RHOSTS.*
man <string>
chmod <number> <string>
vim <file>
do\
fg
cd <directory>
ls -lah <string>
clear
vi <file>
git add .
export <string>
find . -mindepth <number> -type <string> -exec <string> -r <directory>
git rebase -i <string>
man <string>
git checkout <string>
git status
ls
cd <string>
git status
git clone <URL>
ls
mvn exec:java -Dexec.mainClass=<file>
cd ..
sudo apt-get install <string>
ls
git remote add origin <URL>
git status
curl <string>
timedatectl <string>
ls -la
vim <file>
ls -latr
git add .
sudo apt update
ls
su root
pwd
ls
ls
clear
sudo apt-get update
ls
mkdir <string>
ls
cd <string>
sudo usermod -aG <string> <string>
clear
cd <directory>
git status
sudo apt-add-repository -y <directory>
mkdir -p <string>
ls
clear
find . -name <file> -type <string> -print -delete
ls
cd <directory>
ls
exit
cd <string>
cd <string>
clear
clear
cd <string>
git status
clear
ls
mkdir <string>
read -t <number> -s <string>
cd
sudo fdisk -l
ls -la
git commit -m <string>
cd ..
ls
sed -i <string>
ls
vi <file>
ls -l
git checkout <directory> -F
cd ..
ls
ls
npm update
cd <string>
bash <file>
rm -f <string>
tail -f <directory>
git add <string>
git init
fg
cd
ls -al
git add -a
ls
rm -- <string>
telnet <string>
ls -la <directory>
vi <file>
sudo supervisorctl update
ps -ef
rm -rf <string>
cd <string>
wget <URL>
git status
sed -n <string>
git add .
mkdir <string>
git clone <URL>
git add -A
cd
grep <string>
cd <directory>
sudo prime-select nvidia
sudo lsof -ti:8888
sudo apt-key add -
local <string>
npm uninstall react-native-actions-sheet --force
ls
ls
sudo pacman -S <string> --noconfirm
rg <string>
npm i
cd <string>
sed -e <directory>
vi <file>
ls
cd ..
git commit -m <string>
rm -rf <string>
sudo apt-get update
exit
date
git commit -m <string>
cp -r <directory>
cd <string>
ls
git status --ignored
cd ..
cd ..
cd <directory>
ls -l
lsblk
ls
sudo apt update
touch <file>
cd <string>
git add <string>
sudo chmod <number> <directory>
sudo gpg --dearmor -o <directory>
vim <file>
ls
vi <file>
python3 <file>
git remote add origin <URL>
cp <string>
cd <directory>
done
git rebase -i <string>
export <string>
git init
cd <string>
vim <file>
rm -r <string>
ls
touch <string>
ls -la
df -lh
exit <number>
rm <string>
exit <number>
cd <string>
cd
wget <URL>
cat <directory> - <file>
exit
ls
ls
find -name <string>
vi <file>
open <string>
ls
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
ls
ls -la
sudo python <file>
clear
clear
cat <string>
git status
ping -c3 <string>
git clone <URL>
vim <file>
ls
ls
yarn <string>
grep <string>
tar xvzf <file>
vi <file>
git branch -q -f <string>
ls
cd ..
clear
stat -x <string>
exit
scp <string>
vi <file>
df -h
git push origin master
git commit -m <string>
git push -u
mv <string>
kubectl apply -n <string> -f -
git diff master --name-only
pacman -S <string>
ps auxww
ls
cd ..
git commit -m <string>
cp -r <directory>
sudo python <file> --cascade=<file> <number>
cd
python3 <file>
cd <directory>
exit <number>
vim <file>
apt-get -f <string>
nc <string>
git status
sudo dnf install -y <string>
ls
clear
cd <directory>
cd <string>
source <directory>
git config <file> <file>
ls
ls
vi <file>
mv <string>
rm -f <string>
ls
kubectl get <string>
clear
ls data -ld
git grep <string>
cd <string>
git clone <URL>
history -a
git commit -m <string>
ls
ls
sed <directory>
ls
git add .
vim
rm -rf <string>
code .
cd <string>
exit <number>
ls
sudo snap install <string>
docker run -d --privileged -p <string> -v <file> -v <directory>
man <string>
sudo apt install <string>
tail -f <directory>
ls -l
cd <directory>
ls
vi <file>
git status
chsh -s <directory>
read -p <string>
ls -l
head <filename> # outputs the first lines of file (default: <number> lines)
git add -A
cd <string>
cat <string>
sudo rm -rf <string>
ls
mvn compile
sudo zypper install <string>
ls
sed <directory>
git commit -m <string>
vim <file>
tcpdump -i <string> -v <string>
sudo nvim <directory>
cd <string>
grep -i <string>
curl --silent <string>
cd <string>
cd <string>
sudo chmod +rwx <string>
python3.11 <file>
cd <string>
git add <string>
ls -al
npm config <string>
ls
cd ..
npm i -D <string>
exit
read -s -n <number>
cd ..
sudo -rm -rf <directory>
python3 <file>
ls
sudo dnf config-manager --add-repo <URL>
ls
git add -A
cp <string>
python3 <file>
cd <string>
ls
nc <string>
cd <directory>
ls
git push origin main
docker stop <string>
clear
code .
git checkout <string>
date
ls
rm <string>
sudo apt remove --purge <string>
grep <string>
rake
chmod +x <string>
git pull
git commit -m <string>
vim <file>
git status
head -n <string>
vim <file>
git config --global <file> <file>
git config --global <file> <string>
cd <directory>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
grep <string>
vim <file>
pwd
sudo sed -i <directory> <file>
tcpdump -i <string> -v <string>
sudo find <directory> -type <string> -size <string> -exec <string> -lh <string>
cd <string>
vi <file>
git restore <file>
ls
cd ..
git push origin master
cat <string>
ls
clear
wget <URL>
git branch -M <string>
sudo zypper install <string>
cd <string>
vim <file>
cd ..
apt-get install <string>
git co PTS-578_redirects_not_updating_automatically
git pull origin main --force
ls
cat <string>
grep -iIHrn --color=<string> <string>
sed -r <directory>
perl <file>
git commit -m <string>
clear
uname -r
wget -r -np -l <number> -A <string>
cd <string>
ls
cd
git commit -m <string>
git add <string>
cd ..
clear
vim <file>
unset color_prompt force_color_prompt
ls
ls
ls
ls -lat
ls
cd <directory>
npm i gatsby-cli -g
git add <string>
cd <directory>
wget <URL>
cd
git st
ls
git init
git branch -a
wget -O <file>
read -rp <string> <string>
ls
ls
su - <string>
else\
ls
less <string>
chmod <string>
cd <string>
ls -la
cd <string>
rm -rd
sudo mkdir <directory>
sudo apt update\
set
ls
exit <number>
exit
systemctl stop kubelet
ls
git pull
npm install --only=<string>
clear
exit
nano <file>
git status
python3.11 <file>
apt-get update
ls
read -r <string>
git reset --hard
git status
git push --set-upstream <string> <string>
ps aux
wget --no-check-certificate <URL> -O -
cd ..
git commit -m <string>
npm init
cat <string>
sudo apt update --force
rm <string>
dpkg-shlibdeps: <string>
cd <string>
vim <file>
true
ls
sudo journalctl -u <file>
cd <directory>
sudo su
fg
kubectl --namespace <string> <string>
curl -s <string>
sudo journalctl -u <file>
sudo update
export <string>
git push
git commit -am <string>
python3 <file>
ls
cd <string>
sort -n
git status
ping <string>
clear
touch <file>
git add .
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
git status
ls
cat <string>
sudo systemctl status prometheus
cd <directory>
ls
ls
fg
grep <string>
sed -E -e <directory>
ps -auxwf
cd
killall <string>
mv <string>
sudo apt install <string>
nano <file>
sudo sed -i <directory>
ls
sudo yum install <string>
vi <file>
mkdir <string>
ls
sed <directory>
cd ..
git commit -a -m <string>
ls
jq <string>
cd <directory>
less <string>
exit <number>
tar -zxvf <file>
ls
mv <string>
git add .
ls
git push
ping <file>
sudo apt-get install <string>
ls
cd ..
bash
vim <file>
cd ..
git push -u <string> master
vim <file>
git add .
sed -E -e <directory>
git branch -a
cp <string>
grep -E <string>
sudo apt remove <string>
ls
git add <string>
cd
ls -a
apt install <string>
ls
ls
ls
ls
sudo loadkeys <string>
zcat <file>
ls
vim <file>
git add .
sudo apt-get install <string>
nano <file>
git clone <URL>
ls
sudo python3 <file>
docker stop <string>
clear
cut -f2,4 <string>
cd <directory>
exit <number>
cp <string>
vim <file>
mkdir <string>
ls
grep <string>
ls
ls -l
grep -winr -C <number>
awk -help
ls
docker container <string>
exit <number>
ls
htop
cd
clear
ls
clear
ls
python3 <file>
vim <file>
cd <string>
bash
clear
vim <file>
git clone <URL>
ls
vim <file>
npm audit fix -f
cd
su -apache2
ls
ls -la <directory>
npm run test
ls
tail -f <directory>
mkdir <string>
git clone <URL>
ls
cd ..
less <string>
ls
cd <string>
script/build.sh
git config <file> <file>
sudo xbps-install <string>
sudo apt update
mkdir <string>
ls
ps -auxwf
fg
sudo npm test
sed -i <directory>
clear
pwd
command -v <string>
cd <string>
reset
cd
htop
usermod -aG <string>
ls
ls
clear
ls ..
unset <string>
git clone --depth=<number> <URL>
source <directory>
git add .
exit
cd <string>
git add .
sudo mkdir -p <directory>
mkdir <string>
cd <string>
cd ..
cd
ls
ls -lt
ls
clear
cd <directory>
vi <file>
printf <string>
cd <string>
cat <string>
clear
sudo tar -C <directory> -xvf <file>
sudo sed -i <directory>
fg
ssh dirlic@10.18.0.39 -p <number>
vim
git checkout -b <string>
ls
gzip <string>
ls
git ls-files --deleted
less <string>
ls
git add <string>
wget <URL>
ls
touch <file>
ls
vi <file>
git add .
fg
awk <string>
touch <file>
ls
git commit -m <string>
chmod <number> <string>
git commit -am <string>
sudo apt-get update
ls
ls
vim <file>
git commit -m
sudo dpkg -i <file>
vi <file>
sleep <number>
npm install
ls -R
read -rp <string> <string>
exit
ls
sleep <number>
diff --git
find . -empty -type <string> -print -delete
ls
vim <file>
vi <file>
rm <string>
ls -ltr
docker-machine <string>
sudo python <file>
vi <file>
cd ..
sudo ldconfig
git please
ls
clear
git config --global <file> <string>
python3 <file>
find . -empty -type <string> -print -delete
cd <string>
sudo fdisk <directory>
python3 <file>
vi <file>
sudo apt update
cat <string>
sed -i <directory>
sudo sed -i <directory> <file>
rm -rf <string>
ps aux
touch <string>
df -lh
find . -name <string> -type <string> -prune -exec <string> -rf <string>
sudo apt install <string>
ls
git commit -m <string>
docker-compose logs
rm -rf <string>
ls
cd <string>
vi <file>
ls -la <directory>
zcat <file>
mkdir -p <string>
clear
npm start
cd ..
nano <string>
sudo gem install <string>
systemctl restart <string>
read -s -n <number>
cd
vi <file>
ls
git pull origin development
ls
npm install
ls
chmod <number> <string>
awk <string>
git status
fg
ls
ls
bash <file>
npm init
sudo systemctl enable <string>
ls
cd ..
sudo wpa_supplicant -i <string> -c <directory> -B\
sudo apt update
clear
ls
vi <file>
cd <directory>
ls
sudo apt-get remove <string>
rm -rfa <directory>
fg
sudo vim <file>
git commit -m <string>
cd <string>
cd <string>
exit
ps -a
git clone <URL>
cd <directory>
vi <file>
clear
ls
exit
sudo mkdir -p <directory>
git status
pwd
ls
rm <string>
vim <file>
read <string>
chmod +x <string>
ls
sudo nvpmodel -f <file>
chmod +x <string>
cd <string>
git commit -am <string>
cd <directory>
mv <string>
cd <string>
groups
cd <directory>
exit
cd <string>
sudo -E <string> <string>
exit
npm init
fg
mkdir <string>
git add <string>
fg
kill -9 <number>
pulseaudio -k
git status
sed -i <directory>
git commit -m <string>
exit
git cat-file -p <string>
finger <user> # displays information about user
vim <file>
sudo apt update
cd <string>
sudo su
touch <string>
exit
cd <string>
cd ..
cd ..
cd <string>
cp <string>
ls
cd -2
ls
clear
find . -type <string>
git clone <URL>
ls
vim <file>
ls
rmdir <string>
cd <directory>
git pull
cut -d',' -f3 <file>
cp -r <directory>
mkdir <string>
grep <string>
clear
ip a
cat <string>
ls
ls
cat <string>
mv <string>
rm -rf <string>
rm --help
cd <directory>
sudo docker rmi <string>
cd ..
ls
code <string>
sudo pacman -R <string>
cd <directory>
git pull
cd <string>
sudo python <file> --cascade=<file> <number>
git add .
wget -r <URL>
git add <string>
sh
cd <directory>
git status
cd ..
clear
clear
ls
cd <string>
ls
source <string>
ls
docker run --name <string>
fg
man <string>
exit
sudo rpm -i <string>
git stash apply <number>
git rebase -i <string>
sudo mv <string>
cd <string>
curl --location <directory>
sudo sgdisk --new=<string> --typecode=<string> --change-name=<string> <directory>
ls
ls
read <string>
ls++ -a
ls
git commit -am <string>
cd
mkdir -p <string>
tail -f <directory>
ls
rm <string>
git push -f
git pull origin <string>
git status
sudo systemctl restart <string>
exit
git checkout -b <string>
paste <string>
ls
cd <directory>
ls
cd <string>
git add <string>
exit
git commit -m <string>
cd <string>
ls
curl <string>
git commit -m <string>
pwd
print <string>
sudo cp <string>
pbcopy
git init
git checkout <string>
cd <string>
ls
do-release-upgrade
git diff
python3 <file>
sudo stop uwsgi
ps aux
ls
ping <string>
git branch -r
ls
git add.
npm start
ls
clear
ls
vim <file>
vim <file>
git config --global <file> <file>
sudo apt install <string>
sudo python <file>
cd <string>
cd <string>
chmod +x <string>
cd <directory>
sudo chown -R <string>
ls -l
cd
sudo sed -i <directory>
ls
sudo add-apt-repository <directory>
wget -qO- <URL>
brew cask install <string>
ssh-keygen -t <string>
df -h <string>
mkdir <string>
npm run dev
git status
cd <directory>
git add -A
egrep -r <string>
cd <string>
git add <string>
which <string>
cd <string>
vim <file>
git add .
git status
rm -rf <string>
sleep <number>
ls
cd ..
git push
exit <number>
ls
ls
git clone <URL>
find . -name <string> -type <string>
python3 <file>
cat <string>
git push -u <string> master
git stash
nano <string>
grep -i <string> >files
sudo apk add <string>
unset color_prompt force_color_prompt
ls
exit <number>
git add <string>
cd <string>
kubectl top pods --all-namespaces
sudo make -j <number>
ls
cd..
then
python3 <file>
yarn <string>
cd <string>
sudo sed -i <directory>
ls -la
python3 <file>
ls
cd ..
ls
psql -U <string> -h <string> nzdpu_wis
ls -ltr
git commit -m <string>
sudo xhost +
find . -empty -type <string> -print -delete
cat <string>
ls
git status
LANG=<string> rpm -qp --queryformat <string>
ls
capsctrl <directory> & disown
source <directory>
grep <string>
ls
cd <directory>
git commit -m <string>
ls
sudo wget <URL> -O <directory>
sudo git add <string>
read -r -p <string>
grep -i <string> >files
base64
docker volume <string>
ls
sudo apt-get update
git branch -a
ls
git commit -n <string>
exit
docker rmi <string>
chmod --help
exit
vim <file>
clear
git clone <URL>
npm install <string>
git init
grep <string>
ls
clear
cd ..
rm <string>
mkdir <string>
exit <number>
groups <string>
ls
curl -o <string>
ls
git clone <URL>
ls
npm init -y
curl -L -s <directory>
cd <string>
ls -lag
ls
cd
ls
fg
npm i <string>
npm init
ls
git init
cd <string>
vi <file>
git add .
git status
ping <string>
fg
ssh <string>
vim <file>
man <string>
git merge <string>
ls
exit
sudo sysctl --system
git status
git push -u <string> main
pwd
cp <string>
ls -al
then
clear
code <string>
sudo apt install <string>
cd <string>
ls -l
sudo rm -rf <string>
mv <string>
ls
cd <directory>
sudo apk add <string>
ls -la
rm <string>
sudo apt-get update
read -r <string>
ln -s <string>
chmod u+x <string>
apt update
npm run start
code .
grep -i <string> >files
cd
code .
cd
git add .
git remote
git status
node -v
git branch
exit
cd ..
ls
git config --global <file>
vim <file>
rm -r <string>
curl -sSL <URL>
grep -i <string> >files
ls
exit
git commit -m <string>
ls
git commit -m <string>
sudo zypper <string>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
ls
git checkout <string>
nano <string>
sudo shutdown -hP <string>
vim <file>
sudo port install <string>
cd <string>
git fetch origin\
git status
grep -iE <string>
fg
grep -rl <string>
git add <string>
cd <directory>
cat <string>
cd <directory>
vim <file>
code .
ls
cd ..
rm -rf <string>
cd <string>
git push -f
cd ..
read <string>
code .
cd <string>
ps aux
rm kitty -rf
git remote add origin <URL>
vi <file>
vim <file>
tail -d <file>
cd <string>
cd ..
shutdown -h <string>
else
cd <directory>
ls
ls
find -name <string> -type <string>
rm <string>
ls
ls
git clone <URL>
exit
vim <file>
ls
chmod <string>
cd ..
cd
sudo ansible web -m <string>
top
chmod u+x <string>
<file> <file>
cd <directory>
history -r <string>
cd ..
git push -u <string> master
git add <string>
git push origin PTS-578_redirects_not_updating_automatically --force
python3 <file>
fg
cd <string>
sudo poweroff
ls
history
sudo python <file>
ls
cd
git status
sudo mv <string>
git push
ls -l
sudo easy_install <string>
fg
cd <string>
git status
diff <file>
ls
ss
sudo apt install <string>
git pull
sed -i <string>
vim <file>
sudo nano <directory>
exit
sudo snap install --classic <string>
sudo nano <directory>
ls
ls -latr <directory>
sudo shutdown -r <string>
sudo apt-get install <string>
fg
apt install <string>
git clone <URL>
cd <string>
awk <string>
source <string>
git add --all
ls
sudo nano <string>
git push
nano <file>
git add <string>
vim
cd <string>
exit
git co - <string>
git push
cd <string>
git branch -M <string>
cd ..
git log
git push -u <string> main
rm -r <string>
grep <string>
exit
cp -r <directory>
sudo cat <file> <string>
ls -lah
ls
exit <number>
rm -f <string>
exit
rmdir <string>
sudo sed -i <directory>
grep <string>
cd ..
npm install
cd ..
ls -al
ls
systemctl start kubelet
ls
ls -l
cat <string>
sudo ufw allow <string>
ls
cd <string>
git commit -am <string>
cat <string>
ls
scp <string>
cd <directory>
less <string>
grep <string>
git rebase --continue
ls
git push
ls
ls
ls
git push
sudo start uwsgi
sudo apt -y <string> $(sort -u <string>
<directory> <string>
code .
curl <string>
cat <string>
ls
dpkg -l <string>
clear
docker ps
source <string>
python3 <file>
vi
touch <file>
reboot
fg
ls
sudo apt update
curl <string>
exit <number>
sudo rm -rf <string>
sudo git remote <string>
ls -a
ls
ls
sudo vim <directory>
git config <file> <string>
git push
clear
cd <string>
sudo ufw status
find <directory> -iname <file> -type <string> -exec <string> -c <string>
sed -i <directory>
cd <string>
sudo curl <URL>
cd ..
git commit --amend --no-edit --no-verify
sudo udevadm trigger
sudo <directory> -z
ls
rm -rf <string>
bash <file>
ls
git status
cd <string>
source <string>
cd <directory>
ls
cd <string>
exit
cd <string>
git pull origin master
rm <string>
psql -h <string> -U <string> -d <string> -L <file> -a <string>
cat <string>
python3 <file>
git ci -m <string>
ls -ltr
python3 <file>
clear
sudo install <string>
cd <directory>
git add .
ln -s <string>
cd <directory>
ls
sudo chmod <number> <string>
cd <string>
wget <URL> -O <file>
chmod <number> <string>
clear
rm -rf <string>
cd <directory>
ls
ls
ls -ltr
cd <string>
ls
git pull
find . -maxdepth <number> -regextype <string> -regex <string> -type <string>
git push
sync
ls
sudo python <file> --cascade=<file> <number>
sudo dnf install <string>
git pull
exit <number>
ls
ls -a
exit
awk <string>
curl <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
cd <directory>
sudo apt install <string>
cd <directory>
ls
git push origin master
git pull upstream
git please
tail -2 <string>
uname -a
git add .
find . -size <string>
sed -r <directory>
vim <file>
vim <file>
ls -lh
ls
curl -sSL <URL>
ls
git checkout -b <string>
grep -i <string>
sudo sed -i <directory>
ls
git push
git flow <string>
vim <file>
cd <string>
ls -la
rm <string>
find . -name <string> -exec <string> -c <string>
python3 <file>
sudo snap install -classic <string>
htop
sudo add-apt-repository <directory>
cd ..
docker images
npm run dev
ls
sudo systemctl enable <string>
git add .
ls
systemctl status <string>
ls -1 <directory>
cd
ls
sudo apt install <string>
clear
xargs -i <string> <string>
git config --local <file>
cd ..
man <string>
cd ..
git checkout -b <string>
ls
ls -la <directory>
open .
cd <string>
sed -i -r <directory>
sudo add-apt-repository <string>
<directory> install --from-paths <string> --ignore-src -r -y --simulate
npm -l
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
curl -X <string> <URL> -d <string> -d <string> -d <string>
git status
git clone <URL>
ls
sudo apt-key add -
last
git push
fg
ssh <string>
sudo su
sudo python3 <file>
vim <file>
ping <string>
exit <number>
vim <file>
git add <string>
sudo cp <string>
python3 <file>
sudo apt-get -y <string>
cd <string>
cd <string>
wget -O <file>
vim <file>
unset <string>
cd <string>
codedown javascript > <file>
sudo vim <directory>
chmod +x <string>
find <directory> -type <string> -delete
sudo apt-mark <string>
done\
cd <string>
sudo ufw enable
cd <directory>
git add <string>
git remote -v
git add .
ls
ls
mv <string>
ls
apt-get -f -y <string> <string>
ls -R
ls
git commit
git push
cd
ls
less <string>
cd
git add <string>
git push origin
ls
htop
clear
grep <string>
dmesg
ls
cd <string>
cd ..
cd <directory>
sudo dnf -y <string> unzip curl <string>
npm i
sudo bash
clear
uniq -c
ls
git branch -d <string>
mv <string>
ls
apt list --installed
python <file> runserver 0.0.0.0:2016
cat <string>
git push origin main
cd
git rebase <directory>
cut -d <string> -f <string>
ls
ls
git status
cp -r <directory>
sudo dnf install <string>
clear
cd
ls
python3 <file>
git stash
unset color_prompt force_color_prompt
npm start
sudo wget <URL>
clear
git co -b <string>
bash
cd <directory>
ping <string>
ls++ -a
git commmit -m <string>
exit
git clone <URL>
git config --global <file> <string>
npm i <string>
git add .
ls
sleep <number>
uniq -f <number>
ls
git add .
exit
cd <string>
ls
rm <string>
pacman -Qqm
ls
ls -lAF
cd ..
ls
exit
ls
cd <string>
ls
cd
ls
sudo service nginx reload
sudo rm -rf <string>
ls -latr
rm -f <string>
sudo python <file>
man <string>
git add <string>
perl -nle <string>
sudo touch <directory>
then
man <string>
ls
clear
ls
fg
sudo apt purge <string>
find . -size <string> -exec <string> -f <string>
mkdir <string>
apt-get clean
git push
chmod +x <string>
git checkout --orphan <string>
xargs -0 <string> <string>
ls
sed -e <directory>
cd <string>
python3.9 -m <string>
vim <file>
ls
apt-get install xterm -y
cd <string>
cd <string>
date
ls
git status
mv <string>
vi <file>
git push
clear
vim <file>
vi <file>
ls
finger <user> # displays information about user
sudo vi <file>
cd ..
cd ..
cp <string>
cd ..
git init
cd <directory>
mkdir <string>
clear
cd ..
mv <string>
git push origin <string>
pwd
python3 <file>
ls > <file>
cd ..
ls -la
vim <file>
sudo apt update
ls
sudo pacman -S <string>
git stash
exit
cd <string>
ls
ls -la
git cat-file -p <string>
ls
cd <string>
ls
cd <directory>
ls
git rebase <directory>
cd <string>
git push
sudo python3 <file>
cd <string>
cat <string>
vi <file>
ln -s <string>
ls -la <directory>
npm start
cp <string>
cd
docker
clear
vim <file>
cd ..
npm audit fix
git branch 2> <directory>
docker rmi <string>
exit
cd <string>
git status
sudo apt-key adv --keyserver <string> --recv <string>
go tool pprof <file>
ps -aux
vim <file>
source <string>
git push
service <string>
pwd
cd <string>
sudo fuser -k <directory>
sudo apt -y <string>
cat <string>
cd <string>
git commit -m <string>
ls
git commit -m <string>
git commit --amend
git add -A
sed <directory>
ls
cd -
cd ..
sudo rm -rf <string>
cd <string>
curl <string>
git commit -m <string>
hostnamectl set-hostname <string>
cd <string>
git restore <file>
ls
<directory> <directory>
git switch <string>
clear
git add <string>
vim <file>
LANG=<string> rpm -qp --queryformat <string>
ls
git push
grep <string>
exit <number>
ls
git push origin2
git add <string>
docker tag <string>
git config --global <file> <file>
cd <directory>
git clone <URL>
cd <string>
cd ..
fg
ls
sudo virsh -c <directory> <string>
cd <directory>
clear
ls
cd <string>
sudo apt autoremove -y
ssh-keygen
ls
ls
sudo dnf search <string>
mkdir -p <string>
npm init -y
git commit -m <string>
git init
tail -$mitad2 <string>
sudo sed -i <directory> <file>
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
ls
cd <directory>
git pull
git commit
git config --global <file> <file>
date
env <string>
grep -iE <string>
git push -u <string> master
ls
sudo ln -s <directory>
ls
sudo lvcreate -n <string> -l <string>
exit <number>
mv <string>
ls
printf <string>
git status
find . -name <file>
cd ..
git add <string>
sudo apk add <string>
sed <directory>
ls
ls
ls -la
curl <URL> -k
ls
git status
ls
tmux source <file>
ls
exit
sudo vim <directory>
cd <directory>
git commit -m <string>
npm install
vim <file>
tail -f <string>
cd <string>
loadkeys fa
git log
ls
find . -type <string> -print0
fg
npm publish
cd <string>
cd <string>
tmux kill-session -t <string>
ls
ls
sudo pacman -S <string>
ls
htop
ls
cd
wget <URL>
cd <string>
mkdir <string>
exit <number>
source <file>
read -sn <number> -p <string>
unset color_prompt force_color_prompt
cd <string>
touch <string>
ls
sudo unzip <file>
cd <string>
cat <string>
git status
fg
make clean
python3 <file>
cd
git add <string>
git commit -m <string>
source <string>
ssh-copy-id -i <string>
npm audit
rm <string>
sudo git clone <URL>
ls
rm <string>
git init
sudo stop uwsgi
cd <string>
grep -rl <string>
sudo apt update
sudo -u
yay -S <string>
grep <string>
git clone <URL>
cd <string>
cp <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git pull
find . -empty -type <string> -print -delete
shutdown -h <string>
sudo apt-get update
cd
wget <URL>
clear
ps -u <string> # lists your processes
screen -dr
cd
git status
python3 <file>
sudo usermod -a -G <string>
git please
cd ..
ls
ls
ls
clear
git fetch
exit <number>
git add <string>
ls
git push -u <string> master
cd <directory>
cd <directory>
pwd
tmux source <file>
cd <directory>
ls
exit
vim
sudo apt install <string>
sudo rm -rf <string>
ls
rm -rf <string>
cd ..
cd <string>
vim <file>
sudo curl -fsSLo <directory>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
sudo udevadm control --reload-rules
git push
ls
sudo mv <string>
ls
cd <string>
mount --types <string> overlay --options <string>
rev
ln -s <string>
vim <file>
git status
npm install
vim <file>
exit
sudo apt install <string>
cd <directory>
sudo npm install --save <string> -f
apt man
apt-cache search <string>
which <string>
mvn compile
git checkout
mkdir <string>
exit
exit
ftp <string>
modprobe <string>
sudo apt -y <string> <string>
git remote remove origin
sudo make install
cat <string>
sudo chown -R <string>
ls
rm -rf <string>
cd <directory>
wget <URL>
ls
git push -u <string> master
ls
vim
wget <URL>
vim <file>
nano <file>
source <file>
git branch -M <string>
sudo su
cat <string>
sudo service nginx reload
ls
vim <file>
code <string>
vi <file>
git commit -m <string>
git pull
cd <directory>
git commit --amend --no-edit
mv <string>
sudo apt-get install <string>
ls
cd
vim <file>
sudo apt install -y <string>
vim
sed -i -E <string>
apt-get update
g++ -std=<string> <file> -o <string>
git commit -m <string>
fg
history -c
cd ..
sudo modprobe <string>
cd <string>
vi <file>
ls
sudo sed -i <directory> <file>
code <string>
cd ..
uname -r
sudo python <file> --cascade=<file> <number>
grep <string>
exit
cd <string>
sudo git pull origin master
rmdir <string>
ls
rm <string>
python3 <file>
cd <string>
git diff <string>
npm install <string>
sudo git config --global <file>
git commit -m <string> --no-verify
tail -f <directory>
vim <file>
git pull
git add .
cd <string>
docker
git checkout <string>
git commit -m <string>
clear
vi <file>
ls
sudo mv <file>
git commit -m <string>
vi <file>
cd <string>
ls
cd ..
rm <string>
mkdir <string>
ls
cd <string>
ls
ls
nohup <string>
ls
clear
sort -g
vim <file>
cd <string>
git push origin <string>
sudo chmod +x <string>
history -s <string>
chmod <number> <string>
tmux new-session -d <string>
npm config <string>
sh
git init
cd
su root
fg
git history
sudo chmod a+wr <directory> -R
cd <string>
awk <string>
ls -l
cd <string>
git push -u <string> main
cd ..
vi <file>
clear
cat <string>
git clone --depth <number> <URL>
tail -f <string>
ls
mv <string>
open <string>
set
git push
mv -f <string>
ls
cd ..
tmux --version
cd <directory>
rm -f <string>
npm i <string>
ps aux
git add .
clear
sudo usermod -a -G <string>
ls
ls
ls
ls -la <directory>
<directory> <directory>
source <string>
<directory> <string>
ls
cd <string>
less
sudo add-apt-repository <directory>
git add .
docker history <string>
vim <file>
cd <string>
ls -l
ssh-agent <string>
grep <string>
exit <number>
git checkout -b <string>
git clone <URL>
sudo apt-get update
bash -s <string> --mirror <string>
sudo apt-key add -
ls
git add .
sudo apt-get -y <string>
grep -x <string>
source <directory>
export
ls
which <string>
git init
rm <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cd <string>
tr -s <string>
rm <string>
python -mjson.tool
clear
git pull origin master
ls
git rm --cached <string>
code .
sudo make clean install
ls
pwd
vi <file>
ls
npm run coverage
git init
cd <string>
pwd
ls
find . -name <file> -type <string> -print -delete
git commit
cd <string>
sleep <number>
npm i <string>
sudo pip install <string>
git status
chmod <number> <string>
clear
ls
chmod +x <string>
ls
ls
ls -d <string>
man <string>
ls
cd <string>
cd ..
git push
cp <string>
ls
grep <string>
cd <string>
print <string>
vim <file>
ls
exit
sudo apt update
man -k <string>
nano <file>
ls
read -p <string> -r <string>
cd <string>
git merge develop
read -p <string>
ls -ls
git push
init <number>
pwd
cd <string>
tmux a
ls
npm start
ls
mkdir <string>
kill -9 <number>
vim <file>
sudo apt-get purge npm --auto-remove
ls
ls -l
ls
code .
ls
git status
exit <number>
sudo ln -s <directory>
git add <string>
rm
cd
ls
cd <directory>
sudo apt install <string>
git init
cd <string>
nc <number> <number>
ping <file>
ls
ls
exit <number>
cd <directory>
git init
git pull
git push
xrandr -q
clear
git commit
git push -u <string> master
ls
sudo dar -c <directory>
exit <number>
ls
ls
git commit -m <string>
ls
git commit -m <string>
ls
cd <string>
ls
ls
find . -maxdepth <number> -type <string> -exec <file>
ls
bash <file>
fg
cd <string>
python3 <file>
mkdir <directory> -p
head -n <string>
ls
ls
git push origin master
done\
cd <directory>
sudo apt-get upgrade
cd <directory>
git status
cat <string>
nano <file>
ls
chmod +x <string>
cd <string>
ls
cd <string>
cat <string>
cd <string>
cd <string>
zcat <file>
sleep <number>
git clone <URL>
ls
unset color_prompt force_color_prompt
exit
git commit -m <string>
ls
git push
cat <string>
screen -S <string>
clear
ls
setg RHOSTS <file>
clear
docker exec -it <string>
ssh dirlic@10.18.0.39 -p <number>
cd <string>
cd <string>
npm start
cd ..
npm i
git grep -l <string>
cut -f <number> -d <string>
clear
nano <file>
cd <directory>
vim <file>
cut -c5-8 <string>
git push origin master
rm -r <string>
cat <string>
sh <file>
cd <string>
grep -Ril <file>
service <string>
ls
cat <string>
cd <directory>
read -n1 -r <string>
clear
ls
ls
ls
sudo kill <number>
clear
grep <string>
vim <file>
ls
cd <directory>
sudo yum update -y
sudo depmod -a <string>
exit <number>
cd ..
history
ls
exit
rm -f <string>
git init
sudo light
clear
clear
ls
env <string>
exit <number>
unset <string>
git init
git --work-tree=<string> --git-dir=<string> <string> -f <string>
docker images
exit
systemctl enable <string>
ls
top
ls
clear
tail -f <string>
man <string>
ls
mv <string>
history -c
ls
read -p <string>
exit <number>
exit <number>
cd ..
chmod +x <string>
cd <string>
ls
bash <file>
cd <directory>
code <string>
grep -i <string> >files
apt-get purge --auto-remove <string>
ls -ltr
vim <file>
git add <string>
ip addr
ls
exit
git add .
cd <string>
cd ..
ls
vim <file>
exit
vim <file>
apt-get update
git add .
openssl rand -hex <number>
cd <string>
git config --global <file>
clear
clear
cd <directory>
clear
vi <file>
npm run bench -- -c <file> -n <file>
ls
git remote add -m <file>
python3 <file> <directory> --network2=<string>
ls
git clone <URL>
du -sh <directory>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
sudo reboot
sudo flatpak override --system --filesystem=<directory> <file>
grep -i <string>
mv <string>
ls
cd <string>
git add
sudo apt-key adv --keyserver <file> --recv <string>
cd <string>
git clone <URL> --branch <string>
sudo apt-get install build-essential -y
ls
git commit -m <string>
ls
vi <file>
which <string>
docker-compose logs
clear
ls
git stash
ln -sfn <directory>
git clone <URL>
ls
ls
cd <string>
ls -l
npx shadcn-ui@latest add <string>
git pull
git config --list
ls
ls -r
grep <string>
rsync <directory>
git format-patch <string>
sudo apt-key add -
exit
ls
cd
nano <file>
exit <number>
git add .
less <string>
ls
exit
git push -u <string> main
vim <file>
head -y <file>
node --version
git clone <URL>
rm <string>
npm start
cd <string>
sudo service <string>
cat <string>
git commit
git pull
vim <file>
ls
exit
ssh dirlic@10.18.0.39 -p <number>
mkdir -p <string>
scp <string>
ls
cd ..
awk <string>
npm run make
git pull origin master
sudo pacman -S <string>
git diff <string>
sudo apt install -y <string>
git pull
curl -O -L <string>
git pull
vim <file>
exit
git push -u <string> main
python3
tail -f <directory>
vi <file>
mv <string>
ls
tail <file> -n <number>
ls
git status
clear
exit <number>
exit
scp <string>
clear
exit
sudo ufw <string>
clear
pwd
git commit -m <string>
ls
cd ..
ls
git add .
tail -f <string>
yarn add <string>
cd ..
python3 <file>
ls
vi <file>
ip a
cd <string>
man <string>
git pull origin main
sudo docker commit <string>
curl <string>
cat <string>
git remote add origin <URL>
sh
git add .
sort
xargs -0 <string> -i <string>
git add .
wget <URL>
cat <string>
cd <string>
pwd
clear
sudo nginx -t
exec swaymsg -q <string> --no-startup-id <string> -c
ls
docker-machine ssh <string>
ls
ls
chmod
sudo apt install <string>
git push --set-upstream <string> master
patch <file>
ls
ls
nohup node <file>
docker ps -a
cd <directory>
<directory> <directory>
yarn add <string>
python3 <file>
ls
cd <string>
less
ls
cd ..
git commit -m <string>
cd
vim <file>
sudo update-alternatives --config <string>
chmod <number> <string>
clear
source <string>
cd <string>
service <string>
cd <string>
npm start
ls
ls -la
ls
npm install <string>
ls
ls -l
vim <file>
npm-recursive-install
cd ..
git status
sudo yum -y <string>
journalctl -xeu <file>
git push
ls
sudo chmod <number> <string>
mv <string>
source <string>
docker run -d --name <string> -v <directory> -e <string> -p <string>
cd <string>
vim <file>
vi <file>
sudo make clean install
cd ..
yarn <string>
cd <string>
git add .
ssh -L <string> -C -N -l <string>
ls
rm -rf <string>
ls
dmesg
ls
ps -auxwf
mkdir <string>
ls
nc <string>
dir
git init
cd <string>
mv <string>
cd ..
cd <directory>
clear
du -h --max-depth=<number> <string>
sudo apt install git vim -y
ls -lh
ls
pwd
sudo apt-get update
ls
cd <string>
vi <file>
chmod u+x <string>
python3.11 <file>
grep --version
ls
cd <directory>
git add .
git commit --amend --no-edit --no-verify
ls
chmod -v <string>
code <string>
git add .
fg
ls
exit
mkdir <string>
mkdir <string>
sudo apt-get remove <string>
sudo python <file>
sudo reboot now
git status
ls
cd
sudo pip3 install <string>
git rebase -i <string>
fg
php <file>
ls
ls
ls
ls
rm -r <string>
dpkg -l
fg
fg
vim <file>
ls
sudo npm start
exit <number>
cat <string>
cd ..
vim <file>
apt-get install -y --no-install-recommends <string>
npm config set <string>
git push origin PTS-372_Remove_components_from_daily_tracker --force
vim <file>
vim <file>
ls
cd ..
vim <file>
ls
git push origin master
ls
xargs -0 <string> -iH --color=<string> <string>
rm <string>
clear
ls
git pull -u <string>
sudo apt install <string>
docker kill <string>
cd
df
git add .
fg
apt-get install --reinstall <string>
sed -i <string>
top
sudo dnf install -y <string>
sudo apt update
ls
ls
cd
vim <file>
git pull origin master
cd <string>
cd <string>
cd <directory>
sudo systemctl --now <string> docker
ls
grep -i <string> >files
git push
mv <string>
ls -l
vi <file>
cd <string>
ls -lah
grep -B1 <string>
git --help
cd ..
ls -al
exit <number>
git add .
git commit -m <string>
vi <file>
htop
docker tag <string>
mkdir <string>
ls
ls
capsctrl <directory> & disown
mv <string>
find . -iname <file>
rails <string>
ls
node <file>
grep -i <string> >files
cat <string>
vim <file>
source <directory>
ls
ls
wget <URL>
git commit -m <string>
cd <string>
eval <string>
git add .
cp <string>
ls
systemctl restart <file>
systemctl status <string>
ls
composer
npm-recursive-install
ls
ls
then\
ls
git status
cat <string>
ls
cd ..
ls
git config --global <file> <string>
git init
set -e
exit
clear
rm -f <string>
git add <string>
bash
npm install npm@latest -g
pwd
exit
sudo mv <string>
git clone <URL>
mv <string>
ls
git commit -a
printf <string>
docker run -d -p <string>
cd ..
git init
ls -la
git commit -m <string>
git commit -m <string>
rm <string>
cd <string>
cd <string>
vim <file>
git pull
sudo apt-get upgrade -y
pwd
ls
ls
cp <string>
sudo -i
clear
code
ls
cp -R <string>
vi <file>
vim <file>
unset color_prompt force_color_prompt
git add .
ls
source <file>
python3 <file>
git clone <URL>
rm -f <string>
ls
egrep -v <string>
cd <directory>
source <string>
cd <string>
git add -v <string>
ls
docker network
curl <string>
ls
cd <string>
ls
cd
git pull
cd ..
vi <file>
cd <directory>
ls
docker-compose up -d --build
git status
sudo pacman -Syyu <string>
ls
cd ..
git filter-branch --force --index-filter <string> --prune-empty --tag-name-filter <string> -- --all <string> push --all --force
exit
ls
mysql -hlocalhost -uroot -p
exit\
ls
clear
rm -rf <string>
sudo gpasswd <string>
true
grep <string>
exit
ls -lh
ls
git push
git pull
sudo rm -rf <directory> <directory>
git add -A
cat <string>
cd <string>
sudo apt update
cd <string>
sudo pip install -r <file>
clear
sudo apt install <string>
ls
mv <string>
git add .
sudo journalctl -b
sh <file>
rm -rf <string>
vim <file>
cd <string>
ls
sudo nano <file>
ls
apt-get update
top
mkdir <string>
pwd
find . -iname <file>
grep -x <string>
git init
ls
exit <number>
ls
cd ..
ls
man <string>
npx tailwindcss init -p
mkdir <string>
sudo code . --no-sandbox
sudo pacman -Ss <string>
mv <string>
git push -u <string> main
sudo mv <string>
python3 -m <string> install --upgrade <string>
cd <string>
cd <directory>
cd ..
ls
man <string>
sudo apt-get update -y
git status
git commit -m <string>
ls
clear
docker inspect --type=<string> <string>
sudo rm -r <string>
ls
sudo ssh -f -N -w <string>
ls
cd <string>
date
rm <string>
exit
ls
source <directory>
wget -r -A.pdf <URL>
ls
git push
git push
sudo chmod +x <string>
ls -la
curl <URL> -u <string> -d <string>
npm i
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ls
ls -al
vim <file>
kubectl get <string>
git add <string>
vim <file>
su field
git rebase --continue
tail -100 <file>
ls
sed -i <string>
sudo apt upgrade
ls ..
sudo apt -t <string>
ls
git pull
mvn exec:java -Dexec.mainClass=<file>
git
sudo apt remove --purge <string>
sed -n <string> -- <string>
cd ..
grep <string>
ls
ls
git push origin <string>
cd <directory>
tail -16 <file>
awk <string>
sudo sed -i <directory> <file>
ls
curl
sed -i <string>
chmod -x <file>
clear
git commit -m <string>
git commit -m <string>
curl -o- <URL>
cd <string>
rm -rf <string>
df -h <string>
cd ..
cd ..
cd ..
git config --global <file> <file>
git add <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE <string>
clear
cd ..
docker run -d -p <string>
touch <string>
rake <string>
uniq
git remote -v
pwd
sudo add-apt-repository <directory> -y
ls
ls
cd <directory>
docker-compose
clear
cat <string>
docker run --name <string> -it -d <string>
ls
ls
ps -auxwf
ls
pwd
ls
ls
ls
print <string>
cp -r <directory>
ls
ls
vim <file>
ls -l
clear
clear
cd <directory>
npm run frontend
git pull
cp <string>
ls
sudo halt
git init
cd <string>
cat <string>
cd <string>
history
exit
find . -empty -type <string> -print -delete
git push origin
ls
tail -f <directory>
nano <string>
cd <directory>
sed <directory>
rm <string>
ls
vim <file>
groups <string>
last
npm start
kubectl get deployments -n <string>
clear
find . -name <string> -not -path <directory>
chmod <number> <string>
rmdir <string>
rm <string>
vim <file>
sudo flatpak update
ls -alF
tail -f <string>
git add .
ls
cd <directory>
git add .
cd <directory>
grep <string>
sudo chown <string>
cat <string>
ls -lh
ls -Cl
ls
cd <string>
ls -l
sudo ln -s <directory>
cp -r <directory>
cd <string>
git remote remove origin
wget <URL>
ls
sudo mount -t <string>
exit
sudo ifconfig --help
grep -w <string>
git add <string>
cd <directory>
cd <directory>
<directory> <directory>
ls
git status
ls
cd <directory>
sudo add-apt-repository <string> [arch=<string> <URL>
grep <string>
ls
sudo ifup <string>
cd
git add .
cd ..
ls
ls
codedown javascript
cd <directory>
exit
ls
vim <file>
ls
cat <string>
sudo xcode-select --install
sudo vim <directory>
read -r -s <string>
mkdir <string>
rm <string>
ls
pwd # <string>
npm audit fix
cd <string>
sudo install -m <number> -d <directory>
ls
cd ..
sudo apt-get update
clear
exit <number>
git restore <file>
clear
mkdir <string>
sudo apt-get install -y <string>
ls
cat <string>
code
docker build -t <string>
chmod <number> <string>
ls
ls
cd <string>
cd
git commit -m <string>
mvn install:install-file -Dfile=<file> -DgroupId=<string> -DartifactId=<file> -Dversion=<string> -Dpackaging=<string> -DgeneratePom=<string> <string>
git commit -m <string>
chmod +x <string>
ln -s <string>
git commit -m <string>
xargs docker rm
cd ..
ls -ltr
htop
cd <directory>
vim <file>
ls
exit <number>
exit <number>
ls
mkdir -p <string>
docker build -t <string>
cp <string>
ls
rm -rf <string>
ls
sudo dpkg -i <file>
cd
cd ..
cd <string>
git add <string>
sudo cat <directory>
cd <string>
sudo rm -rd <directory>
cd
clear
cd <string>
git commit
exit
rm <string>
sleep <number>
cp -r <directory>
ls
ls
cd <string>
cat <string>
sudo umount <directory>
vim <file>
mkdir <string>
systemctl --help
ls
cp <string>
exit
mkdir <string>
git add .
scp <string>
tail -f <directory>
ssh -X <string>
git commit -m"update"
cat <string>
cd <string>
git config --list
exit <number>
ip systemd-resolve --status
git add .
rm -rf <string>
ls
touch <file>
git status
cd <string>
git status
git --version
ping <string>
tmux source-file <file>
git log
ls
ls
cat <string>
psql -h <string> -U <string> -d <string> -L <file> -a <string>
cd <string>
cd ..
git branch
clear
pwd
git rm --cached <directory>
ls
cd <directory>
ls
find -name <string>
git status
git commit -m <string>
cd ..
sed -i <string>
find extracted -name <string> -exec <string> -c <string>
sudo pip3 install <string>
git push -u <string> bryan-guner
vi <file>
cd <string>
wc -c <file>
git add <string>
git checkout <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
ls
rm -f <string>
cd ..
git remote add origin <URL>
cd <string>
ls -l
npm install npm install <directory> --force
mount --types <string> overlay --options <string>
cd <directory>
wget -nd -m -nv <URL>
ls
mv <string>
git log
git commit -m <string>
mkdir <string>
ls
cd
git status
cat <string>
vi <file>
htop
df -h
mv <string>
ls
ls -al
clear
cd <string>
ls
ls
git status
ls
exit
git push -u <string> master
cd <string>
exit
touch <string>
sudo reboot
cd <string>
cd ..
sh <file>
cat <string>
fg
ls
ls
ls
git cat-file -p <string>
nano <file>
git submodule update --init
vim <file>
ls
cat <string>
cp -r <directory>
clear
cd <string>
git commit
git init
cd <directory>
vi <file>
wget <URL>
xrandr --output <string> --on
ls
mkdir <string>
vi <file>
cd
rm -rf <string>
chmod -x <file>
cd ..
cd ..
sudo nvidia-xconfig --enable-all-gpus --cool-bits=<number>
exit
ls
npm install
cd ..
cd <string>
git add -A
cd <string>
cd <string>
ls -la <directory>
clear
vi <file>
ls
find .
npm install
clear
git pull
ls
ps -ae
more <file>
cd ..
npx <string>
pwd
cd <string>
journalctl -f
git pull
which <string>
sudo python <file>
vi <file>
git commit -m <string>
ls
cd <string>
code .
grep <string>
cd..
sed -i <directory>
ls -l
git filter-branch -f --prune-empty -d <directory>
git reset --hard <string>
cat <string>
cd <string>
cd <string>
ping <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ls
cd ..
grep -r <string>
vim <file>
ls
git add .
docker rmi <string>
ls
wget -qO - <URL>
<file> program
sudo apt-get install <string>
sysctl <string>
ls
less <string>
more <file>
sudo apt-get update
sudo port <string>
find $BASEDIR -maxdepth <number> -mindepth <number> -type <string>
git status
local <string>
vi <file>
df
mv <string>
cat <string>
exit
ls -a
cd ..
git init
ssh-keygen -t <string> -b <number> -C <file>
rm -f <string>
cd <string>
fg
fg
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
find src
ls
sed -i <directory>
git clone <URL>
ls
vim
touch <string>
find . -empty -type <string> -print -delete\
ls
find . -empty -type <string> -print -delete
cd <string>
read -r -p <string>
ls
pwd
export <string>
git push -u <string> master
export <string>
clear
ls
cd <directory>
vim <file>
cd <string>
sudo apt-get install -y <string>
git fetch
mkdir <string>
cd ..
git tag <string>
cd
cd -2
pwd
cd <directory>
mkdir <string>
cd <string>
exit
vim <file>
clear
sudo RESPONSE=<string> --system --print-reply --dest=<file> <directory>
ls
git clone <URL>
sudo apk add <string>
cd <string>
sudo apt-get update
ls
apt-key add -
cd <directory>
cd ..
ls
sudo ifconfig <string>
vi -t <string>
cd ..
git add .
mkdir -p <string>
git config --global <file> <string>
sudo rm -rf <directory> <directory>
kill <number>
open .
bash <file>
ls
ls
git status -v
vim <file>
git commit
cp <string>
git add .
pwd
ping <string>
ls
clear
exit
ls
git commit
sudo curl -sS --compressed -o <directory>
git hist
ls
kubectl <string>
git add .
cd <directory>
git add <string>
git branch 2> <directory>
ls
ls
git commit -m <string>
docker-compose build
cd ..
curl -fsSL <URL>
ls -al
cp --help
git init
sudo systemctl start <string>
rm <string>
sudo timeshift --create
cd ..
vi <file>
git stash
sudo ln -s <directory>
ls -R <string>
cd ..
mkdir <string>
ps
cd <string>
shutdown -h <string>
ls
clear
mv <string>
clear
kill -9 <number>
ls
cd <string>
byobu-tmux
stat
cd <directory>
vi <file>
env
exit <number>
cd <string>
ls
ls
clear
npm start
ls
cd
ssh <string>
cd
uniq -c
ls -a
sudo apt-get install <string>
read <string>
journalctl
chmod +x <string>
vim <file>
git commit -m <string>
git remote add origin <URL>
git push
git push
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
ls
exit
cd <directory>
mkdir -p <string>
git commit -m <string>
sudo apt install <string>
rm -rf <string>
less <string>
xargs docker volume rm
tee -h
git reset --hard
ls
git commit
cd <directory>
ls
clear
vi <file>
ps -auxwf
cd <directory>
ls
vi <file>
wget <URL>
git remote add origin <URL>
mkdir <string>
docker pull <string>
cd <string>
cp -v <string> <directory>
sudo apt install <string>
rm -r <string>
git commit -m <string>
cd <string>
cd <directory>
git status
cd <string>
chmod <string>
cd <string>
ln -s <string>
python3 <file>
docker container ls
git status
git remote add origin <URL>
ls -l
mount
man <string>
npm ls
rm <string>
exit
ls -ltr
vi <file>
sudo apt-get update
cd <string>
sudo su
curl -I <URL>
git push origin master
cd <string>
exit <number>
ls
git remote
usermod -U
bash
git rebase
git remote add origin <URL>
cd <directory>
cd <string>
git diff <directory> -- <file>
ls
ls
psql -U <string> -h <string> nzdpu_wis
which <string>
docker stop <string>
fg
sudo npm i prettier -g
cd <string>
ls
grep <string>
pwd
sudo certbot --nginx -d <file>
ls
cd <string>
cd ..
set <string>
history
cd <string>
ls
clear
ls
clear
cd ..
exit
pwd
vim <file>
curl -I <URL>
fg
npm install <string>
go test
then\
yarn install
cp -r <directory>
cd -
python3 -m <string> install <string>
less <string>
cd <string>
read -r -d <string> <string>
brew install <string>
nano <file>
cd
docker exec -ti <string>
sudo vim <file>
ls
cd
cd <directory>
python3 <file>
git add .
exit <number>
sh -s <string>
cd ..
vi <file>
ls
cd <string>
source <file>
ls
cd <directory>
cd <string>
git branch
git remote add origin <URL>
sudo yum install -y <string>
vim <file>
node <file>
ls
vi <file>
cd <directory>
ls
ls
git status
tail -n$KEEP <string>
ls
cd <directory>
git add .
git add .
cd ..
ls
cd <directory>
git commit -m <string>
cd <directory>
cat <string>
clear
vim <file>
python3 <file>
chmod <number> <string>
npm -v
ls
cd <string>
date
fg
ls
ls -alrt
docker images
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
exit <number>
fg
cd <string>
ls
ls
rm -fr <string>
cd <string>
find . -type <string> -exec <string> <directory> {} +
rm -rf <string>
cd <directory>
docker exec -it <string> bash
ls -al
python3 <file>
bash <file>
ls
bash <file>
ssh <string>
ls
wget <URL>
curl -kLs <file> -o <file>
cd <string>
git push
ls
cd <string>
cd <string>
cd <string>
cd <string>
exit
cd <string>
vim <file>
history -c" - <string>
exec --no-startup-id <string>
git push origin master
reboot
cd <directory>
vim <file>
curl <string>
cd <directory>
git push
mkdir <string>
docker ps
ls
cd
sudo chown <string>
cd
vim <file>
find <directory> -name <file>
git switch main
sudo sed -i <directory> <file>
exit <number>
cd <directory>
tcpdump -i <string> -c <number>
vim
vim <file>
ls
sudo apt-get install <string>
git push -u
sudo apt upgrade -y
ls
apt-cache policy <string>
sudo apt-get install <string>
git push -u <string> master -f
cd <string>
cd <directory>
sudo apt upgrade -y
perl -pe <string>
vi <file>
script/build.sh
cat <string>
python3 <file> --parameter <string> --model <file>
ls
git push origin master
git clone <URL>
ls -lrt
exit
cd <string>
cd <string>
git add <string>
git status
apt-get update
git status
cd <string>
exit <number>
vim <file>
grep <string>
vim <file>
git push origin master
ls
npx <string>
git fetch origin
cd <string>
reboot
cd <directory>
git push origin
cat <string>
ls
cd <string>
apt update
sudo gem install <string>
ls
cp <string>
cd <string>
cd <string>
ls
rvm --create --ruby-version <string>
cat <string>
fg
git remote -v
npm install <string>
pwd
cd <directory>
cd <directory>
sudo sed -i <directory> <file>
cd <directory>
byobu-tmux
vi <file>
sudo apt-get upgrade
ls
git push
ls -a
ping <string>
ls -altr
git clone <URL> --depth=<number>
cd <string>
fg
sudo apt-get install <string>
ls
cd <directory>
npm test
ls
kubectl apply --filename <file>
pwd
fg
sleep <string>
cd <string>
cd
ls
ls -la
rm <string>
sudo dnf install <string>
cd <directory>
less <string>
exit
ssh-add
cd <string>
mkdir <string>
grep <string>
git rm --cached <string>
sudo reboot
read -p <string>
git status
top
ls
ls
ls
ls
apt -y <string> <string>
wget -q -O <file>
ls -alF
cd
du -smc <directory>
vi <file>
touch <file>
cd <string>
sort -h
cd..
ls -l
sudo su
ls
cd <directory>
cd <string>
git push
mkdir <string>
cd <string>
git checkout <directory> -f
vim <file>
git commit -m <string>
less <string>
git push
kill <number>
git push
npm run register
curl -sSL <URL>
docker images
ls
cd ..
git clone --branch <string>
sudo mkdir <directory>
cd <string>
nano
find . -empty -type <string> -print -delete
cd <string>
npm install -g <string>
cd <directory>
wc -l
source <directory>
setg RHOSTS.*
rm -f <string>
git add .
git status
sudo apt-get install -f
exit <number>
cd <string>
git checkout <string>
python3 <file>
more <file>
pwd
nano <string>
find . -name <file>
cd ..
less <string>
rm -rf <string>
ls -altrd <string>
ls
ls -la <directory>
wget <URL>
chmod u+x <string>
cut -d- -f2-
cd ..
ls
python3
vim <file>
pacman -S <string>
git commit -a -m <string>
pwd
sed -i <directory>
cd <string>
which <string>
ls
ls
find --help
cd -
cd <directory>
ls
less <string>
git checkout <string>
ls
cd <string>
clear
ls
sudo ntpq -p
exit <number>
clear
apt-get update
git checkout -- <string>
rmdir <string>
ls
git push -u <string> master
<file> --bg=<string> --palette=<string> <string>
cd <string>
clear
nano <file>
ls
git push
source <directory>
su
sudo apt-get install <string>
cd <string>
vim
cd <string>
sleep <number>
cd <directory>
cd <string>
git add .
sudo nano <file>
alias <string>
sudo pacman -R <string>
git add <string>
sleep <number>
python3 <file>
pwd
git pull
git clone <URL>
yarn
vi <file>
sudo ln -s <directory>
ls
clear
ln -s <string>
git add <string>
sudo npm i prettier -g
git checkout
sed <directory>
psql -U <string> -h <string> nzdpu_wis
ls
cd <directory>
ls
man -m <directory>
exit
ls
git rm <string>
view <string>
ping <string>
ls
<file> program
adduser <string>
cd <string>
ls
cd
ls
vi <file>
export <string>
cd <string>
pwd
git push origin <string>
git add .
git commit -m <string>
vi <file>
sudo apt purge <string>
clear
cat <string>
exit
hostname
ls # lists your files in current directory, ls <dir> to print files in a specific directory
node --version
vi <file>
sudo apt-get update
git add <string>
cd ..
ls -al
mv <string>
ls -la
cd <string>
git pull
python3 <file>
sudo service nginx reload
docker run -itd -p <string> --name <string>
sudo apt install linux-headers-`uname -r`
sudo snap install code --classic
cd ..
vim <file>
git status
sudo python3 <file>
ls
sudo systemctl enable <string>
cd <string>
vi <file>
scp <string>
git add .
sudo apt-get -y <string>
sudo apt-get update
source <string>
git status
ls
sudo vim <file>
cd <string>
touch <file>
git status
cd <string>
less <string>
ls
npm install <string>
cd <directory>
cd <directory>
sudo nano <string>
sudo sed -i <directory> <file>
ls
unset color_prompt force_color_prompt
cd <directory>
cat <string>
mv <string>
git status
wget -cO <string>
cut -d <string> -f <number>
more <file>
killall <processname> # kill all processes with the name
cat <string>
fg
cat <string>
cat <string>
exit
cd -
sudo systemctl enable <string>
sudo sh <file>
ls
ls
mkdir <string>
cd ..
git init
ls -a
date
git add .
vim <file>
cd ..
wget <URL>
git push
exit <number>
cd <directory>
git remote add origin <URL>
mvn compile
git commit -m <string>
git checkout <string>
screen
ls
sudo yum install -y <string>
export <string>
docker-compose up
sh
code <string>
read -r <string>
clear
chmod <string>
cd <string>
sed <directory>
git init
cd <string>
ls
node <file>
cd <string>
rm <string>
python3 <file>
cd <directory>
sudo python <file> --cascade=<file> <number>
ls
ls
git push -u <string> master
sudo usermod -aG <string> $USER
sudo mv <string>
git add .
rm -r <string>
grep <string>
ls
git commit -m <string>
cd ..
sudo rm -r <string>
cd ..
ls
cd <string>
read -r <string>
read -s -p <string>
git push -u <string> master
git config --global <file>
sudo vim <file>
git status
git add <string>
git add .
unzip <file>
ls
rm <string>
ls
git status
cd ..
vi <file>
git status
cd <string>
exec
git pull
exit <number>
cd <string>
cd <string>
sudo <directory> <string>
sudo nano <directory>
git push -u <string> main
sudo apt-get update
npm install <string>
ls
ls
ls
npm i --save <string>
exit
xargs sed -i <directory>
sudo start uwsgi
wget <URL>
git remote update --prune
stat <file>
curl -sL <URL>
sudo dpkg --remove <string>
pkill <string>
cd ..
cd <string>
rm <string>
sudo usermod -a -G <string> <string>
mkdir <string>
man <string>
cd <string>
git clone <URL>
ls -\t
fg
rm <string>
cd ..
git clone <URL>
read -p <string>
git commit -m <string>
sudo git lfs install
sudo rm -f <directory>
sed -E -e <directory>
cd <directory>
nano <file>
cat <string>
git add <string>
su
docker rmi <string>
npm start
ls
cp -v <string> <directory>
sudo rm -rf <string>
sudo systemctl status prometheus
clear
git remote add origin <URL>
ls
sleep <number>
clear
cd
nano <file>
sudo apt-get update
cat <string>
ls
cd <string>
cd <string>
git stash
cd ..
cat <string>
sudo docker run hello-world
git add <string>
chmod <number> <string>
curl <string>
ls
cd <string>
git commit -m <string>
cd <string>
clear
ls
sed -E -e <directory>
ls
sudo kill <number>
man ls -C
cat <string>
git commit -m <string>
su - <string>
chmod <number> <string>
sudo apt-get update
ls
df
git add <string>
ls
git commit -m"update"
ss
apt-get update
mv <string>
clear
vim <file>
ls
ls
vim <file>
git status
git branch
node <file>
sudo sed -i <directory> <file>
tmux set-option -g <string>
git clone <URL>
clear
cd ..
git add -A
clear
exit
vi <file>
touch <string>
ls
git add .
tmux a -t'attributes'
zeus.polsl.gliwice.pl - <number>
git config --global <file> <string>
exit <number>
nl
git commit -m <string> -f
git status
nano <string>
exit
cat <string>
git add .
vim <file>
ls
git clone <URL>
ls
cd <directory>
ls
cat <string>
nano <file>
git pull
cd <directory>
find . -name <string> -type <string>
journalctl
sed <directory>
cd
cd <string>
sudo vi <directory>
ls
cd ..
cd
ls
clear
ls
sudo dpkg-reconfigure locales
cd <directory>
git stash
cp -r <directory>
ssh <string>
grep -sh <directory>
git clone <URL>
ls
wget -q -O <file>
sudo ufw <string>
ps -ef
sudo apt-get install <string>
npx <string>
vi <file>
git commit -m <string> --no-verify
git status
sudo supervisorctl <string>
sudo sed -i <directory> <file>
apt-get update
pwd
sed -En <string>
exit
cat <string>
cd ..
git commit -m"skeletonzier <string>
cp <string>
git commit -m <string>
ls
git checkout -f <string>
cd ..
cd <string>
vi <file>
cd <string>
cd -
git push origin master
top -p <number>
cd <directory>
git clone <URL>
git log
find . -name <file> -type <string> -print -delete
git remote add origin <URL>
git grep -n --break -C <number> -I -E <string>
cd <directory>
git branch -u <directory>
kubectl apply <file> -n <string>
sudo cp <string>
tmux split-window -t <string> -v
ls
ls
mv <string>
mkdir <string>
cd <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git pull
exit <number>
git switch main
sudo port install <string>
sudo dpkg --configure -a
ls Downloads/syncthing-linux-amd64-v1.27.8 -al
ls
cd
clear
git clone <URL>
git config --global <file> <file>
ls
ls
npm init
ls -la <directory>
cd <string>
grep -rl <string>
git config --global <file> <string>
cd <string>
git branch
rm -r <string>
fg
git add .
cd <string>
sudo apt autoremove
ls
cp <string>
vim <file>
exit
clear
ls
git add .
cd <string>
ls
sed <directory>
exit
clear
git log --oneline
ls
tr <string>
mkdir <string>
ls
ss
dpkg-shlibdeps: erro: <string>
read -p <string>
cat <string>
cp -r <directory>
git init
cd ..
sudo a2enmod <string>
ls
mkdir -p <string>
cd <string>
htop
brew install --cask <string>
mkdir <string>
vi <file>
npm install
sudo sed -i -e <string>
ls
sed -n <string>
git push
ls
vim
ls
ls
perl -nle <string>
modprobe pcspkr
read -p <string>
ls
cd <directory>
df
git clone <URL>
chmod +x <string>
source <file>
python3 <file>
git status
git push -u <string> master -f
npm run start
grep <string>
exit
vim <file>
ls
ls
git add -A
ls
cp -r <directory>
git init
exit
cp -r <directory>
cp <string>
nano <string>
vim <file>
ls
xargs rm -f
cd <string>
apt-get install -y <string>
git remote -v
cat <string>
docker stop <string>
rm -r <string>
fg
man <string>
clear
cd
ls
ls
history
cd <string>
bash -s <string> --rails
vim <file>
ls -d <string>
sudo <directory> --prefix=<directory> --openssldir=<directory>
sudo pacman -S <string>
wget <URL>
cd <string>
sudo sed -i <directory> <file>
ip addr
clear
sudo nano <string>
vim <file>
cd ..
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
nano <file>
cd <string>
dir
vi <file>
vi <file>
cd <string>
nano <file>
ls
cd <string>
ls
mkdir <string>
vim <file>
git add <string>
ls -l
cp <string>
cd <string>
clear
git config --global <file> <string>
exit <number>
kubectl get <string>
touch <string>
ls
git init
git checkout <string>
cd <string>
cd <directory>
systemctl stop kubelet
git cat-file -p <string>
git remote -v
npm install -g <string>
docker run -it --rm <string>
wget <URL> -O <file>
mv <string>
git init
cd <directory>
xrandr --listmonitors
ls -ltr
ls
ls
cd <directory>
ls
cd ..
ls -a
grep -i <string>
find . -empty -type <string> -print -delete
python3 <file>
git add <string>
tee -a <string>
ls
read <string>
cd <directory>
ls
tar xvzf <file>
rg <string>
ls
tail -2
sudo add-apt-repository <directory>
find . -name <file> -type <string> -print -delete
git commit -m <string>
sudo ifconfig --help
cd <string>
top
wc -l
ls
git commit -m <string>
scp <string>
ls
sudo dpkg -i <file>
npm install <string>
wget $flutterLINK -O <file>
cd ..
type <string>
ls
exit <number>
apt-mark
init
python3 <file>
git init
curl -sfL <string>
clear
cd <string>
cd <directory>
ls
git commit -m <string>
rm <string>
cd <string>
python3 -m <string> install --upgrade <string>
ls
cat <string>
chmod <string>
zgrep -i <string>
chmod -v <string>
vim <file>
sudo stop uwsgi
lsblk
sudo sed -i <directory> <file>
git commit -m <string>
apt-get -y <string> <string>
ls
fg
ls -ltr
npm i -D <string>
cd ..
git add .
export <string>
git status
git pull
vi <file>
chown <string>
git remote
sudo groupadd -g <string>
cd <string>
exit <number>
cat <string>
ls
systemctl start <string>
ls
npm run test
cd <string>
ls -r
ls -la
ls
npm i prettier -g
apt-get purge <string>
ls
git diff <string>
cd <directory>
git init
cd ..
vi <file>
ls
cd <string>
ls
clear
cd <string>
ls
rm -rf <string>
ls
vim <file>
exit
git commit -am <string>
ls
git add <string>
ls
sudo systemctl restart nginx
