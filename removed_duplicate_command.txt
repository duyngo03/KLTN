column -c3 -s <string> -t
docker images --no-trunc
git remote add
sudo apt install wget -y
ssh-keygen -m <string> -f <string>
apt-get install -f <string>
grep * -Ir <string>
sudo systemctl status <string>
sort -n -k <number> -r
hostname -I
<file> -m <string>
sudo pip3 install <string>
history -r <string>
apt-get upgrade -y
curl -sSLf -o <string>
git restore -A
git log --pretty=<string> ---abbrev-commit
git rm --cached -r <string>
ufw -man
sudo fdisk <directory>
find -name=<file>
git branch --list --all
sudo touch <file>
sudo phpenmod -v <string>
git push -u <string> main -f
npm help
ls -Tl
nc <number> <number>
vi <file>
git -f <string> <file>
set --help
curl -i <string>
less -S
sudo mount -t <string> -o <string>
lsblk -N
curl -fssl <URL>
git commit -a
npm install --save <string> --force
docker rmi --f <string>
curl <URL> -u <string>
python3 <file> runsslserver <number> --certificate <file> --key <file>
xrandr --listactivemonitors
sudo <directory> -m <string>
git push heroku main
sudo snap install authy --beta
docker events --since=<string> --filter <string> --format <string>
locate -i <string>
grep -Evf <file>
python3 -m <string> install --no-cache <string>
sudo killall -9 -q -w
sudo pmset -a <string>
sudo mousepad <directory>
python3 <file> --parameter <string> --model <file>
git commit -m'form_action'
rm -la
df -h -T -t <string> -t <string>
npm install <file> --save
ls ..
sudo npm install -f
sudo pacman -Rss <string>
touch <string>
git config --global --get <file>
du -h -maxdepth=<number>
docker container <string>
timedatectl set-timezone <directory>
ps -auxw
sudo
more <file>
sudo setfacl -R -m <string>
sudo pacman -Qo <string>
ls -l-a
xargs -0 <string> -l <string>
open <directory> --remote-debugging-port
sudo apt-key adv --recv-keys --keyserver <string>
<directory> install --from-paths <string> --ignore-src -r -y --simulate
git commit -a -m'WIP: <string>
find <directory> -type <string> -exec <string> -H <string>
ps --no-headers -o <string>
sudo -u <string> -i <string>
xargs -n1 <string>
curl -fsSLo <file> --create-dirs <string>
sed --in-place <string>
curl -ks <URL>
unzip -o <directory> -d <directory>
apt-cache search <string>
tmux rename-session -t <string>
pygmentize -O <string> -f <string> -g
grep -n -c <number> -i <string>
sudo dpkg --set-selections <string>
df -lh
sudo bash -
sudo bash -c <string>
docker run -it --rm --add-host=<string> <directory>
sed -re <directory>
sed <file> -r <string>
sudo git config <file>
sudo apt install python3 -y
git commit help
chmod a-w-r-x,u+r -- <string>
sort -n -k2
ls Downloads -a
su -i
sudo rm -f <directory>
chmod <number> <string>
git archive --remote=<string> --format=<string> <string>
npm start -- --reset-cache'
git config --list --local
docker login -u <string> -p <string>
sudo nvim <directory>
sudo rm -rf
docker run -d -p <string> -p <string> --name <string> --restart=<string> -v <file> -v <directory>
done < <(which -a <string>
git gc --prune=<string>
find . -type <string> -newermt <string>
grep -i <string>
ls -ltra
git remote update --prune
wget -r <URL>
rsync -rt <string> -port=<number> <directory>
history --help
docker run --rm -i -t <string>
sudo chmod <number> -R <directory>
sudo inxi -v <number> -AGN
git clone --branch <string>
docker run -d <string>
lsblk -q
read -rst0.5 -N1 -u0
git commit --amend
apt-get install git -y
git filter-branch --tree-filter <string> --prune-empty <string>
sudo pacman -Rsn <string>
xargs -n1 <string> -p
git fetch -p <string>
apt-cache search
wget -t <number> --retry-connrefused <URL>
pacman -Sy <string>
journalctl -b -4 -e
export -n <string>
ls -ln
openssl req -new -key <file> -out <file>
rsync -rt <string> <directory>
du -sh <directory>
cut -d',' -f1 <file>
find . -iname <file>
cat grep -v <string>
grep -ia <string>
mount -t <string> -o <string>
docker cp <string>
sudo bash curl -s <URL>
find src
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
git clear
awk -F. <string>
sudo <file> -a
find <directory> -type <string>
apt search <string>
git commot -m <string>
xargs -0 -I <string>
git push -f
tmux --v
sed -n -f <string>
docker-compose --version
git rev-list --count <string>
sudo do-release-upgrade
usermod
ls -la <directory>
sudo rpm --import <URL>
sed -r -n <string>
sudo ls <directory> -al
chown -Rv <string>
sudo iptables -t <string> -A <string> -m <string> --cgroup <string> -j <string>
git diff master --name-status
sort -Rz
bash -s <string> --rails
git commit --no-edit --no-verify --message <directory>
npm start --cups-printer=<string>
unzip <file>
ufw --man
less --help <string>
systemctl restart <string>
ls -las
sudo lvremove <directory>
git checkut -b <string>
sudo do-release-upgrade -y
file --help
docker build --tag <string> -f <string>
dpkg -i <file>
awk -F[\
node
grep listen -nrw <file>
git --config
wget -q --show-progress -N <URL> -P <directory>
grep -iER <string>
sudo git clone --depth <number>
find . --name=<file>
sudo fdisk -l <string>
grep -B1 --color -E <string>
ssh -CqTnN -D <string>
sudo sed -i <directory> <file>
grep -F --color=<string> <string>
tmux kill-server
mv
python3.9 <file> --target<sys.path>
sudo apt udpate -y
paste -s <string>
sudo zypper ve -r
exec --no-startup-id <string>
curl <URL> -u <string> -H <string>
sudo pacman -Sw <string>
find . -type <string> -exec <string> <directory>
rm passwords -rf
sed
sudo dar -c <directory>
cut -d <string> -f1 <string>
cut -d":" -f2
apt-get info <string>
perl -e <string>
git push -u --force <string>
sudo vi -w <directory>
tcpdump -i <string> -v <string> <string>
grep -v
stat <file>
gunzip -d <file>
su -c <string> -O - <directory>
sudo npm audit fix --force
grep $BAZEL_GREP -nrE <string>
sudo git status
sudo grep
scp <string>
sudo <directory> -o <directory>
find . -name <file> -type <string> -print0
history tail
apt-get install mysql-server -y
xargs -0 <string> -i <string>
cut -d\ -f3
curl -sOL <URL>
npm -i -g <string>
sudo env <string>
git revert --abort
sudo mysql -u <string> -p --socket=<directory> <string>
find . -not -name <string> -ls -delete
npx unlighthouse --urls <URL>
find . -type <string> -newermt <string> -exec <string> -cb <string>
timedatectl <string>
pulseaudio
sudo zypper ve -D <string>
grep -ERho <string>
curl -s -o <file>
git filter-branch -f --index-filter <string>
npm run start
wget -P <directory>
install -g <directory>
userdel demouser
wget -q -O <file>
cut -d=<string> <string>
sudo chsh
sudo crontab -l
git log --all --pretty=<string>
npm install react-native-permissions --force
npm install clipboard --save
curl -H <string>
git push origin solution --force-with-lease
git pull -all
sed -i.origin <directory>
ls=<string> -G
sudo -s
<directory> install --from-paths <string> --ignore-src -r -y
sudo npm install express -g
sleep
sudo npm install express --save
ssh -Y <string>
find <directory> -name <string> -o -name <string> -exec <string> <string>
find . -name <directory> -type <string> -prune -exec <string> -rf <string>
tar zxvf <file>
sudo curl -fsSL <URL>
sudo sshfs --help
grep $BAZEL_GREP -rE <string>
sudo npm run build --legacy-peer-deps
cut -f2 -d,
git cm -m <string>
git push --help
git commit --amend --no-edit
ls -t <string>
apt-get -y <string> --purge
read -rst <string>
grep -win -B <number> -A <number>
wget --no-check-certificate <URL> -O <file>
docker run -it --rm -v <directory> -p <string>
find . -name <string> -exec <string> -- <string>
find . -name
git gc
sudo snap install insomnia --classic
wget $url --user-agent=<string> --load-cookies=<file> --output-document=<string>
sh -s <string>
git log --pretty=<string> <string>
git grep <string>
python3.9 <file> --target <string>
sudo pacman -S <string> docker-compose -y
docker run --name <string> -d -p <string> -p <string>
add-apt-repository <directory>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
tmux -v
docker images --filter <string> --filter=<string> -aq
git remote
ls -r
xargs -L <number> -I <string> git update-index --add --cacheinfo <number>
iptables -L
git pull origin <string> --rebase=<string> --no-edit
npx <string>
git init --separate-git-dir <directory>
grep --invert-match <string>
sudo mysql -u <string> -p
dirname <directory>
npm start --active-arch-only -- --resetCache <string>
sysctl status <string>
git rebase -i <string>
sudo apt-get install --reinstall <string>
wget -O <file>
git commit --amend --no-verify <string>
git fetch origin <string>
xargs grep <string>
docker-compose stop -d <string>
ls -li
sudo xcode-select --install
git status --short
sudo pmset <string>
git bisect
npm express update
git log --02_code1
df -m
git log --max-count <number> --pretty=<string> --abbrev-commit --decorate <string>
git --nopager <string> --oneline
grep --quiet <string>
docker run -itd -p <string> --name <string>
find . -type <string> \( -name <file> -o -name <file>
git clone
python3 <file> -i
git commit -m <string>
bash -s <string> --ruby
sudo apache2 --version
cmake -S <string> -B <string>
sudo apt install ruby-dev -y
npm install cookie-session --svae
git git pull
find . -empty -type <string> -delete
kubectl rollout status deploy autoscaler -n <string>
sudo snap install <string>
docker-compose
apt upgrade -y
npm run devstart
sudo docker build --tag <string>
find . -type <string> -name <file> -exec <string> <directory>
npm install compound -g
ssh kuaidi@192.168.248.203 -p2222
gpg --verify <file> <string>
python3 -m <string> --version
ruby
apt-get -y <string> --no-install-recommends
wget -r -A <URL>
vim $(grep -l <string>
npm install
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE <string>
curl -Lo <file> --create-dirs <URL>
docker volume ls -qf <string>
docker run --name <string> -d -p <string> -v <directory> -u <string>
sudo npm install --v <string>
sudo nmcli <string>
python3 -V
vim -c <string>
sudo -H <string> install -U <string>
ssh-keygen -t <string> -b <number> -N <string> -C <file> -f <string>
npm express -V
sudo apt yt-dlp -U
git push -u <string> detail
git branch -m <string>
ssh root@ -v
mount --types
sudo certbot certonly --standalone --agree-tos --non-interactive --email <string> --domains <string>
docker ps
wget -r -A.html <URL>
apt list -a <string>
hexdump -b <file>
rm Downloads -rf
git commit-tree <string>
sudo docker pull <string>
git --no-pager <string>
sh <(curl -L <URL> --no-daemon
grep -win -B <string>
ssh
sudo snap install dotnet-sdk --channel <directory> --classic
git branch -q -f <string>
expand -t <number>
sudo apt upgrade --fix-broken -o <string>
print -P <string>
sudo chmod a+xr <string>
mkdir -pv <directory>
sudo git add -u
ls -alh --directory
sudo make modules_install -j3
emacsclient --alternate-editor=<string> -nw <string>
head -$prune <string>
sudo curl -o- <URL>
dpkg --configure -a
uname -s
grep -i -A <string>
iptables -I <string> -p <string> --dport <number> -j <string>
sudo apt install python3 -pip
git diff -G'(^[^\*# <string>
grep -v -e <string>
dmidecode
npx <directory> -i <string>
sudo lsof -i -P -n
sudo tree -d <string>
sudo docker-compose up -d
sort -nr -k <number>
cp -t <directory> -a <directory>
grep -vi <string>
sudo dpkg -i --force-overwrite <string>
find <directory> -name=<file>
ls -laR <string>
docker container ls --all
kill -l
gpg --dearmor
npm run register
sh -s - <string> --cluster-init
ls -ltah <string>
systemctl hostname <string>
cat -n -s <file>
kubectl <string>
sudo ansible webservers -m <string> -a <string>
telnet <string>
npm i <directory> -f
find -name <file> -prune -o -name <file> -print <string>
rm -ir <string>
git br -a
grep -r -i -n --exclude-dir=<string> <string>
git difftool --cached
sudo install -C <string>
find . -type <string> -ctime <string>
sudo yum remove -y <string>
go build <file>
chmod --reference=<string> <directory>
usermod -G <string> -a <string>
git pull upstream
yarn
psql -h <string> -U <string> -d <string> -L <file> -a
shuf --h
cut -d\" -f12
ls -lShr
sudo apt-cache policy <string>
rm -im <string>
sudo letsencrypt --email <string> --domains <string> --agree-tos --renew-by-default --manual <string> --preferred-challenges <string> --server <directory>
wc find . -iname <file>
go get -u <directory>
sudo powertop --calibrate
find . -name -type <string>
make -j <string>
git flow <string>
mount --types <string> overlay --options=<string> <directory>
sed -i -e <directory> -e <directory>
egrep -r <string>
ls -laF
git add -v <string>
git co HEAD .
sudo usermod -a -G <string> <string>
sudo dpkg-reconfigure <string>
find `pwd` -name <string> -exec <string> -inHP -A <number>
git commmit -m <string>
find . -maxdepth <number> -type <string> -executable -delete
npm i gatsby-cli -g
sudo apt-key fingerprint <string>
sudo -rm -rf <directory>
sudo cryptsetup <string>
git commit --dry-run
cut -d, -f1,4,8
python3.8 -m <string>
su - -c <string>
sudo adduser --system --home <directory> --shell <directory> --no-create-home --gecos <string> --ingroup <string> --disabled-login --disabled-password <string>
find -ls
chmod +x <string>
sudo dpkg -r <string>
sudo pacman -Syyu <string>
sudo wgnord -c <string>
sudo nvidia-settings -a <directory>
python3 python -m <string>
git pull origin <string>
sudo ansible-playbook <file>
ls -l/var/tmp
ls -lA
sudo keytool -genkey -alias <string> -keyalg <string> -keystore <string>
git pull --force
git reflog expire --expire=<string> --all
git diff
git branch --set--upstream-to=<directory>
sudo bash
grep -r -i <directory>
ssh -t <string> -L <string>
docker build -t <string>
git fetch -r
ping
git rebase -p <directory>
git log --oneline
sort -nr -k1
sudo docker run -d -it -p <string> --name <string>
sudo su - <string>
sudo journalctl -xeu <file>
then\
df -aTh
command <string>
git replace --graft <string>
curl -L -O <URL>
sudo dnf sudo dnf <string>
ls -lsA
npm run test --force
sudo nvidia-xconfig --enable-all-gpus
sudo netstat -nlpt
find $BACKUP_ROOT -name <string> -mtime <string> -delete -print
git status -v
ssh-copy-id
du -m --max-depth <number>
git branch -D <string>
sudo youtube-dl --update
vim --not-a-term <string>
cd../ git remote -v
apt -y <string> build-essential <string>
rev
grep -v <string>
sudo add-apt-repository <directory>
vim -d <string>
docker images --format <string>
git commit -m <string> --amend
sudo add-apt-repository universe -y
git tag -f <string>
git log --pretty=<string> --abbrev-commit
df -hP
time go run <file>
aptitude -y <string>
git branch -rm <string>
sudo apt install ubuntu-restricted-extras -y
git filter-branch --index-filter <string> HEAD
brew services info <string>
sudo docker exec <string>
sudo mv <file>
git reset
git help <string>
find . -type <string> -exec <string> -s <file> -t <string> -o <file>
grep <number> -nrw
git rm --cached -f <string>
npm -g <string> <string>
df -aH
swapon <directory>
ls -1
rm -rf* <string>
cat <string>
grep -f
alias <directory> -c <string>
then cd <string>
git diff --name-status
grep -Ir <string>
usermod -aG <string>
sudo apt-get purge nodejs npm
ps -t
module <string>
cut -f2-4
sudo add-apt-repository <string> [arch=<string> <URL>
bash --help
free
tmux a -t'training'
sudo docker exec -it <string>
wget --recursive <URL>
ssh -help
find <string> -type <string> -exec <string> -l <string>
sudo certbot --nginx -d <file> -d <file> -d <file>
ls -alh --group-directories-first
find . -name <string> -maxdepth <number>
git commit -a --amend -m'Fix <string>
git rev-parse --show-toplevel
journalctl -u <file>
sudo nala update -y
awk -F'>' <string>
xargs -o <string>
git branch 2> <directory>
cut -f <string>
docker build -t <string> -f <directory>
npm run test:watch
sudo tar -xzf <file> -C <directory>
git --user -config
sudo wget -r <URL>
pacman -Qe
git filter-repo --path-glob <string> --invert-paths --force
sudo service nginx restart
apt-get install nginx -y
curl -fLSs <URL>
ls -ltrR <string>
git push github --all
printf
terraform apply -var=<string>
find -type <string> -name <string> -print0
sudo rpm -qlp <file>
grep -iv <string>
wget <URL> -O <directory>
docker run -t -i <string>
ps -la
docker login <file> -u <string> --password-stdin <string>
sudo addgroup <string>
python3 <file> --model <string> --batch_Size <number>
sudo umount <directory>
sudo chmod +X <file>
grep -E -e <string>
git config --file <file>
xargs find
sudo apt install xclip -y
sudo du
wget -nd -H -p -A <string> -e <string>
find . -type <string> -not -path <directory> -not -path <directory> -exec <string> -vf <string>
git filter-branch --force --index-filter <string>
sudo nmap -T4 -A -v -Pn -O <string>
git pull -s <string> -X <string> <string>
npm -l
git hash-object -w --stdin
xargs --null <string> -nHP <string>
ls -C -b
xargs sudo apt-get -y <string> --purge'
lsof -u <string>
sudo rmdir public_html
ls <directory> -la
ls -1p <string>
apt list --installed
php -m
mkdir -h
docker logs <string>
find . -name <file> -print0
git log --graph --decorate --oneline --branches --all
tar -xzf <string>
sudo cat <file>
ftp -help
df -a -h
find <directory> -group <string>
find . -iname <string> -type <string>
find . -type <string> -name <file> -exec <string> -il <file>
size
ss
git submodule update --remote
sudo ntpdate -d
npm install pm2@latest -g
sudo apt install curl -y -qq
sudo chmod u+w <directory>
git grep -I --color=<string> <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
gpg --keyserver <file> --recv-key <string>
sudo apt-get install sane -y
lsblk -O
find . -printf <string>
git push --force <string>
bunzip2 <string>
cut -c <string>
helm init --service-account <string> --upgrade
sudo crontab -e
rm -rf: <string>
head -20
yarn -v
sudo dnf install lame\* --exclude=<string>
ps -eo <string>
host <string>
git format-patch <string>
mvn install:install-file -Dfile=<file> -DgroupId=<string> -DartifactId=<file> -Dversion=<string> -Dpackaging=<string> -DgeneratePom=<string> -Dspring.test.skip=<string> -Dspring.profiles.active=<string>
sudo pacman -Qu <string>
docker run -d
sudo dnf repolist -v
xargs -n1 -P4 <string> a -mx=<number> <directory>
npm install <directory> --force
grep -Fxqi <string>
sudo <file> -i <file>
wget --quiet -O - <URL>
sudo find . -name <string>
find ${DirFindRoot} -type <string> -name <string> -print0
grep -e <string> -e <string>
sudo mysqld_safe --skip-grant-tables
curl -sL <URL> -o <file>
npm help login
sudo unlink <string>
sed -i -e <string>
type -P <string>
vim :%!xxd -r <string>
unset -f <string>
info <string>
find . -empty -type <string> -print -deletefind <string> -empty -type <string> -print -delete
git submodule update --remote --merge
cut -f2- -d' <string>
wget -q <string> -O <string>
sudo angular-cli-ghpages --repo <file> --message <string> --dir <directory> -S
chsh -l
sudo apt autoclean -y
git --git-dir=<directory> --work-tree=<directory> <string> -a -m <string>
sudo aptitude -y <string> <string>
sudo apt update --allow-unauthenticated
sudo lsof -n -i4TCP
composer create-project --prefer-dist <directory>
sudo im-switch -s <string> -z <string>
curl -L <string> -o <file>
umask
git --no-pager <string> --oneline
git push origin <string>
lsblk
mysql <string>
xargs mkdir -p <string>
head -1 <file>
git tag <string>
sudo swapon -s
sudo iptables -I <string> <number> -m <string> --state <string> -p <string> --dport <number> -j <string>
git diff --name-only <string>
ls -C -w <string> --color=<string>
ln -sudo <string>
apt full-upgrade -y
mv -h
top -p <number>
rm <directory> -fr
sleep --help
rm plugins -rf
xargs git tag -d
fsck -l
sudo iptables -I <string> -p <string> -s <directory> --dport <number> -j <string>
git rm -r --cached <string> -f
shuf -n <number> -o <string> <file>
sudo curl -SL <URL> -o <directory>
sudo install -m <number>
sort -o <file>
exit\
git config <file> -global <string>
docker compose up -d
sudo dhclient -v <string>
git mv -- <string>
cut -f1,3 <file>
sort -hn
cat curl -L <URL>
cut -d'"' -f <number>
zip -FS -q -r <file>
tail -1000 <string>
wget -r --no-parent <string>
sudo make clean install
git gc --prune
npm install react-native-actions-sheet --save
sudo prometheus --config.file=<file>
find ~ -mmin <number> -type <string>
git --global
sudo login root
npm http GET <URL>
env
sudo apt install gcc -y
sudo -rm <string>
sudo apt install binwalk -y
docker container -ls
kubectl rollout status deploy eventing-webhook -n <string>
xrandr --output <string> --connected
sh <file> -U
curl -H <string> -H <directory> -X <string> <directory> -d <string>
python -c <string>
cp -h
sudo pacman-key --init
sudo apt-get install -y -q <string> <string>
curl -X <string> -H <directory> --data-urlencode <string>
sudo dnf install nsolid -y
uname -m
exec uwsgi --master --processes <number> --die-on-term --uid <string> --https <file> --module <file>
ls n?d* -d
apt-add-repository <directory>
docker swarm --force <string>
sudo find <directory> -name <string>
sed <directory>
npm run test
find -name <string> -type <string> -printf <string>
ssh -i <string> remote_user@remote_host
sudo npm i -g <string>
sudo killall <string>
name=<string> -o <file>
sudo apt -h
git config --origin <file>
find <directory> -name <file> -type <string> # -print <string>
find <directory> -name <file> -type <string> -a -xtype <string> -printf <string>
sudo snap info <string>
tar -t <file>
tail -1)
wc
sudo fstrim -av
open -a <string>
rm -f -- <string>
ping -c3 <string>
ps -e -orss=<string>
sudo rsync -aXS <directory>
modprobe
dpkg --force-elp
docker commit <string>
tmux
git reflog
sudo pacman -Ss <string>
vim <file>
sudo rdate -s <file>
helm install --name <string>
sudo restart
npx <directory> --input_format <string> --output_format <string>
git rebase --onto <string>
sudo nala purge -y <string>
grep --exclude-dir=<string> -rnw <directory> -e <string>
xargs -0 -I <string> cat file <string>
pulseaudio -k
sudo source <file>
tail -f
ls <directory> -Sal
curl -sL <directory> -o <file>
screen
cp -af <string>
wget -q <URL> -O-
command curl -sSL <URL>
sudo apt-get purge -y <string>
tmux --version
git push --tags --force <string>
more
git config --unset <file>
wget -i <URL>
python3 -m <string> install -U <string>
docker -l
pacman -Sy --needed <string>
sudo dnf update
tail -1)..HEAD --no-merges --pretty=<string>
sudo mkdir -m <number> -p <directory>
sudo passwd <string>
tmux ls
sudo -rf <directory>
find -prune <directory>
sudo apt-get upgrade -y --force-yes
grep -Fq <string>
docker exec -it <string> -- <string>
ls -l
git remote remove origin
docker --version
git pull --ff-only <string>
sudo yum --enablerepo=<string> <string> <string>
docker exec -it --user=<string> <string>
sudo lshw
cron
read
find <directory> -name <file> -type <string> -exec <string> -i <directory>
tcpdump -i <string> -c5 -nn <string>
diff -y <string>
xargs -L1 -I'{}' <string> <file>
find `pwd` -name <string>
sudo iptables -I <string> -p <string> --tcp-flags <string>
sudo -l
ls -tlr <string>
git config --get-all <file>
grep -Eq <string>
vim -
sudo su mv <directory> <directory>
git tag -a <string> -m <string>
grep -v -e <string> -e <string>
sudo nala purge <string>
read -l <string>
sudo gem update --system <string> --no-ri --no-rdoc
mvn exec:java
grep -r <directory> -e <string>
docker rmi -f
docker run --rm -v <string>
curl -d <string>
bash <(curl -L <directory>
sudo systemctl start <file> --user
sudo a2enconf <string>
find path -type <string>
df -t <string>
curl --compressed -o- -L <URL>
npm i react-native-swiper-flatlist --force
git clone --bare --branch=<string> --single-branch <URL>
cut -d - -f1 <file>
sudo install -m <number> -d <directory>
rm -fr -- <string>
xargs tar -cvzf <file>
sudo lsblk -e <string> -o <string>
npm install -save <string>
sudo xrandr --addmode <string>
sudo yum groupinstall -y <string>
git branch --verbose
sort -n <string> <string>
command -v <string>
find <directory> -type <string> -print0
sudo xbps-remove <string>
sed <directory> -i <string>
sudo chmod a+x <string>
head -n10
sudo iptables -A <string> -i <string> -o <string> -m <string> --state <string> -j <string>
sudo apt autoremove -y
rm -iR <file>
git log --diff-filter=<string> --summary
npm uninstall react-native-action-sheet --foce
sudo useradd -d <directory> -m <string>
apt -y <string> <string>
sudo git reset
ls -s
rm Desktop -rf
go tool pprof <file>
docker login -u <string> --password-stdin <string>
ls -xAh
sort -hr
rm path -rf
tar -xpJf <file> -C <directory>
ls -altr
ssh-agent <string>
sudo docker run -it --name <string> --entrypoint <string> -u <string> --privileged -v --rm <directory>
python3 -m
sudo npm install -g --unsafe-perm <string>
find
docker top
type -a <string>
sudo chgrp -R <string>
sudo find <directory> -type <string> -exec <string> <number> <string>
git log --graph --oneline
git config --remove-section <string>
git log --oneline --all
ssh-keygen -t <string> -P <string>
docker run --tty --interactive <directory>
grep <string>
passwd new
sudo snap find <string>
mount -t <string> overlay -o <string>
git push origin --delete <string>
tail -n7
sudo <directory> <string>
git log -p <string>
ls <directory> -1
mount --types <string> overlay --options
rm
touch -r <file>
brew update
sudo sh <file>
egrep <string>
npm install typescript -g
grep <string> -r <string>
sudo su -
capsctrl <string>
install -Dm644 <file>
cut -d' <string> -f <string>
npm run frontend
git log --oneline --graph <directory>
sudo mkswap <directory>
yay
ssh -X -o <directory>
curl -sl <URL>
curl <URL> -o <string> --template=<string>
kubectl exec -ti -n <string>
ls -lSh
export -f <string>
sudo chkconfig --add <string>
tar -xpf <string>
find <directory> -user <string>
npm uninstall react-native-action-sheet --force
curl -k <URL>
curl <directory> --data <string>
ls -lx
git init
find . -type <string> -perm <number>
usermod -G <string>
grep -Ril <file>
sudo certbot --nginx -d <file>
find <scope-to-search> -name <string>
update-alternatives --install <directory>
git log --oneline --graph --decorate --parents
sudo wrmsr -p${core} <string>
git bisect good
sudo modprobe -a <string>
cd -P -- <string>
ssh-keygen -t <string> -f <directory> -C <string>
docker info
aptitude install -y <string>
ps -l
chmod -options <string> # lets you change the read, write, and execute permissions on your files
grep --exclude=<file> -rnw <directory> -e <string>
xrandr -r
npx tailwindcss -i <file> -o <file> --watch
git config --get-all -l
docker run -v <directory> --rm -it <string>
test $c -eq <number>
docker-compose stop
cp -rf <string>
sort --human-numeric-sort --reverse
docker-compose run -d --service-ports <string>
sudo ufw allow <string>
sudo pacman -Sdd <string>
bash --norc
curl -vvv --silent --unix-socket <string> -X <string> --data-binary <string> --header <string>
code
ls --version
find . -maxdepth <number> -type <string> -executable
git --git-dir=<file> --work-tree=<string> <string>
sed -i <directory> -e <directory> -e <directory>
tee --unbuffered <directory>
find pc_* -mtime <string> -exec <string> <string>
xrandr --output <string> --right-of <string>
git nano <string>
sudo apt -o <string> -o <string>
sudo apt -get <string>
sudo find <directory> -depth -iname <string> -exec <string> -rf <string>
find . -type <string> -name <string> -exec <string> -H <string>
read -t <number> -n <number>
sudo apt-get clean
sudo dpkg -R <string>
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
ssh-keygen -t <string> -C <file>
sort -nrk <string>
tmux source <file>
bash -s -- <string>
sudo sudo apt-get install ufw
apt-get -f <string>
git pull --all
cut -d' <string> -f3-7 <string>
curl -X <string> -H <directory> -d <string>
sort -uk2
docker run --rm --entrypoint <string> $BROKER_IMG_REPO -c <string>
emacsclient -n <string>
cd <directory>
cd <directory> -las
git push -u <string> master
git filter-branch --index-filter <string>
cut -d <directory> -f1 <string>
gpg --list-sigs
brew
git filter-branch --force --index-filter <string> --prune-empty --tag-name-filter <string> -- --all <string> push --all --force
sudo firewall-cmd --zone=<string> --add-port=<directory> --permanent
mkdir <string>
sudo sed -i -e <string>
read -r -p <string>
wget <URL>
sudo fdisk -l
nvm_grep <string>
sudo su laravel
git inti -b <string>
find . -type <string> -mtime -1 <string>
find . -name <string> -type <string> -print -delete
docker run -it --rm -v <string>
grep -i
curl <URL> -u <string> -d <string> -d <string> -d <string> -d <string>
grep -Syu
curl -s -L -o <directory>
ip -6 <string>
git merge -v
curl -sSL --fail <file> -o <file>
sudo dmidecode -t <number>
curl -s --header <file> --referer <URL> --user-agent <string>
grep -cv <string>
find . -name <file> -exec <string> -c <string>
sudo netstat -anp
sudo luarocks install <string>
sort -u <string>
git diff-tree -r --no-commit-id --name-only --diff-filter=<string> <string>
git tag --contains <string>
git commit -M <string>
git commit --no-edit
sudo apt install --install-recommends <string>
find . -iname <file> -mtime -120 -print
sudo sysctl -w <string>
ls -alSX
rm -f <string> --date=<string> <string>
apt-get -y -qq <string> <string>
ls -lah
<directory> -m <string>
rm -fv <string>
sudo apt-get install texlive-pstricks -y
git commit -m <string> -f
date --help
sudo pip3 install -i <URL>
sudo php <string>
nohup
usermod -G
sudo airport --channel=<string>
sudo grubby --update-kernel=<string> --args=<string> <string>
curl -sS -H <string>
git checkout -f <string>
mkdir -r <directory>
grep -wrn <string>
sudo date -s <string> -sD - <file>
ssh -t <file> sh -c <string> attach
git pull origin master
ls -art
grep -P <string>
nohup node <file>
dpkg --search <directory>
du -B <string> --max-depth <number>
git fetch upstream
curl -H <string> -L <string>
kubectl get pods -n <string>
docker run --name <string> --rm -p <string>
git filter-branch -f --env-filter <string>
sudo wget -qO- <URL>
ping -c <string>
kubectl get databases -n <string>
sed -ri <string>
curl -sSN <string>
npm i prettier -g
find <string> -name <string> -type <string> -print0
ss -N <file>
find . -type <string> -mindepth <number>
docker run --detach --name=<string> --env=<string> <string>
git log -p -- <file>
<file> -L <string>
sudo yabai --uninstall-sa
unset color_prompt force_color_prompt
ls -C
docker run -v <directory> -w=<directory> -p <string> --rm -it <directory>
gzip -c <file>
ls -ll
bash -c <string>
sudo wget -q -O - <URL>
sh -i <string>
git diff -G"^[^ <string>
find -maxdepth <number> -type <string>
cp -fp <string>
sudo luarocks --lua-version <string>
sudo apt-get install typora --fix-missing
cp -a <string>
bash -ls
sudo systemctl enable <file> --now
cut -d" <string> -f1,6-\
rg <string>
git describe --contains <string>
sudo pacman -Syyu
xargs git push origin --delete
git -push
sudo httrack --ext-depth=<number> <URL>
sudo apt --fix-broken <string>
xclip -i
cp -r <directory>
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
sudo nala install <string>
docker compose up
journalctl -b -5 -e
npm-recursive-install
sudo pip install -e
nohup java -Xmx${xmxMb}m -jar <directory> -flatfile <directory>
sudo dpkg -l
sudo apt --remove-essential <string> --no-fix-broken
git log --name-status <string>
man <string>
sudo lsof -t -i:3000
xz -9 <file>
df -hl
docker rm <string>
curl --request
ps -U <string> -u <string>
docker run -it --entrypoint <directory>
xargs grep -sn <string>
sudo docker run -it --name <string> --entrypoint <string> -u <string> --privileged --rm <directory>
apt-cache policy <string>
sudo yum remove tree -y
nano -w <directory>
git pull -u -m
dpkg --print-architecture
ls -1G
git remote add origin
g++ <file> -o <number>
lsblk -fs
ls link
sudo chown admin:admin -R <directory>
login
sudo apt purge kde* -y
curl --silent -L -o <directory>
xargs -n1 <string> -i <string>
sudo iptables -A <string> -i <string> -o <string> -j <string>
sudo <directory> --chip <string>
sudo cp -i <directory>
psql -U <string> -h <string> nzdpu_wis
terraform plan -var=<string>
cd --
test -t <string>
npm i gulp -D
apt list --upgradable
xrandr -list
python3 <file>
pax -w -f <file>
git commit --AMEND --RESET-AUTHOR
sudo useradd --uid <string> --home-dir <string> --gid <string>
sudo snap install ruby --classic
sudo -H <string> install keras_preprocessing --no-deps
git add --a
find . -maxdepth <number> -name <file> -delete
xargs -a <file>
git commit -m"update"
sudo smbpasswd -d <string>
sh <file>
dpkg --remove-architecture <string>
firefox-trunk --jsconsole --jsdebugger --devtools
sudo apt-get install slimbookbattery -y
sed -i -e"s/# <string>
sudo sshfs -o <directory> -p <string>
sudo pacman -S <string> --asdeps --needed
git push --all
rmdir <string>
sudo shoutdown -h <string>
sudo apt install git curl wget -y
git submodule add <URL>
dpkg --get-selections <string> <file>
rm -vrf <directory>
ls -al
git gc --aggressive --prun
sudo sed <directory> <string>
sudo resize2fs -p <directory>
npm install npm@latest -g
journalctl -b -1 -e <string>
git init --bare
sudo docker run -it -d -p <string> -v <directory>
sudo apt install ruby -y
sudo fc-cache -f -v
git status --ignore
git init .
sudo install -Dm644 <file>
curl -XPUT <directory> -d <string>
docker exec -it -u <string>
npm start --active-arch-only
sudo dnf upgrade --refresh -y
docker-compose down <string>
python3 -m <string> install <string>
npm http <number>
tcpdump -w <directory> -i <string> -v <directory>
openssl version -a
xargs -0 <string> -i -pe's/$1/$2/g'
xargs docker rmi
sudo npx <string>
sudo visudo
git push origin master --tags
vi -t <string>
git push -u
tmux a
curl Ropts -F <string>
ls --h
history -c
sudo apt update\
git pull --all <string>
find --option
tail -n <number> -f <directory>
pacman -S <string>
sudo apt-get install google-chrome-stable -y
kubectl version --short
set -x
systemctl --version
grep -o -P <string>
git merge -s <string>
grep -A5
sudo apt --purge <string>
git checkout --track <directory>
sudo mkdir -pm755 <directory>
nc -U <directory>
docker service ls
xrandr -d <string> --output <string> --auto
groups <string>
wget -t <number> --retry-connrefused -O <directory>
sudo apt install -y <string> -r)
xargs -L1 --no-run-if-empty <string>
grep -F <string>
lshw -short
grep -Eom <number>
dpkg --print-foreign-architectures
git difftool -y --cached
python3 -c <string>
git fetch -q
curl -s -F <string>
sudo tar -xf <file>
npm run dev
sudo dnf -y <string> <string>
sudo ls -ld <directory>
curl -sSH <directory>
sudo tlp-stat -s
sudo docker cp <file>
find folder -type <string> -name <file>
tmux select-pane -t <string>
tail -20
git show --pretty=<string> --name-only <string> <string>
find <directory> -name <string> -type <string>
ruby -run -ehttpd <string> -p8000
sudo groupdel <string>
xargs kill -9
ls -p --color=<string> <string>
sudo docker system <string>
git fetch origin
npm ls -g
git --no-optional-locks <string> --error-unmatch -m --directory --no-empty-directory -o --exclude-standard <directory>
curl -V <directory>
find . -maxdepth <number> -name <string> -exec <string> <string>
npm install react-icons --save
sudo rm -rif <string>
<file> --root-dir=<directory> <string>
diff
tty-clock --center
sudo snap install drawio --classic
dpkg --clear-selections
find <directory> -name <string> -print
grep <directory> -winr <string>
sudo apt install nginx -y
git git remote -v
sudo yum-config-manager <string>
sort -gr
ls -a -l
sudo docker run -p <string> -p <string> -p <string> -e <string> -e <string> -v <file> -v <directory>
sudo install -b <file>
sudo mv -v <directory>
wget -SO <directory>
sort -nr
rmdir 2001\ -\ <string>
chgrp -R <string>
sudo usermod -l <string>
python3 <file> test --keepdb
docker run --network <string> --rm <directory> -s <string>
curl -o- <URL>
sudo lshw -C <string>
git push -f --set-upstream <string>
sudo apt install --no-install-recommends <string>
pacman --noconfirm -S <string>
git branch --a
sudo update-alternatives --set <string>
find . -name <string> -type <string> -delete
g++ <file> -o <string>
which --all
curl --user <string> -X <string> <string>
rm --cached <string>
ssh-add
curl -Is <string>
find . -type <string> -size <string> <directory>
docker run -d --privileged -p <string> -v <file> -v <directory>
docker rm -vf <string>
unzip -h
git filter-repo --force --commit-callback <string>
awk <string>
sudo docker run hello-world
python3 <file> -sI <string> -sM <string> -dM <string> -dI <string> -v
sudo git add -A
docker run --rm <string>
less -R <string>
find . -iregex <string>
docker start postgres-container
exec swaymsg -q <string> --no-startup-id <string> -c
sudo apt-get install cloudflare-warp -y
<directory> -c <string>
rm -fR <string>
sudo nmap -sT -O <directory>
git status -s
sudo tcpdump -D
sudo pacman -Scc --noconfirm
ln -sf <directory>
then
locate <string>
docker ps -f <string> --format <string>
df -n
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
npm install jquery --save
find <directory> -type <string> -exec <string> {} -maxdepth <number> -type <string> -iregex <string>
gpg --import <string>
git submodule update --init --recursive
ps -p <string>
find . -name <file> -exec <string>
bash -v <string>
dpkg --info
ps -o <string> -p <number>
sudo tcpdump -i <string> -w <file>
find . -type <string> -ls
dotnet <file> -f <directory> --body <directory> --bodyf <file> --blf --bdl <string>
find . ! -type <string> -exec <string> <string>
fc
git merge
git branch history <string>
systemctl -is-active
find -Es <string> -type <string> -regex <file>
wc -w
unzip <file> -o <directory>
grep -wirc <string>
sudo apache2 <string>
docker tag <string>
docker compose -f <file>
xargs -I <string> docker rm -f <string>
sudo apt install ecryptfs-utils --reinstall
curl -sS <string>
git clone --15.0 --branch <URL>
openssl --version
openssl passwd -6
apt list -i <string>
sudo usermod -a -G <string>
curl -fsSL <URL>
sudo docker run -p <string> -p <string> -v <directory>
sudo aptitude <string>
sudo xbps-install -S
sed -En -e <directory>
tail -$limpiar <string>
git remote add -m <file>
apt-get -y -f <string>
audit2allow -m <string>
npm install sharp --save
<file> -h
wget -r -l1 --no-parent -nH -nd -P/tmp -A".gif,.jpg" <URL>
git commit POP3.* -m <string>
sudo docker logs -f <string>
wc -w)" <string>
grep -rni --include=<string> <string>
git config --bool <file>
docker add -A
sudo sh
lsof -n -i4TCP
dpkg --no-force-overwrite -i <file>
git init --bare <file>
du -a
sudo apt-get purge nodejs --auto-remove
python <file> runserver 0.0.0.0:2016
git remote add origin <URL>
sudo pacman -Rs <string>
find $dir -type <string>
sudo <directory> -d <file>
sudo apt-get autoclean
df -k
wget -nc <URL>
sudo dpkg -S <string>
ps -C
cat <file> -n
npm i docsify-cli -g
apt-get install python-certbot-nginx -y
find <string> -type <string> -name <string> -printf <string> -delete
git rm --cached <directory>
pwd # tells you where you currently are
lsof -i:8000
apt-get install ruby1.9.1 - <string>
xargs -l1 <string>
git push --set-upstream <string> main
git branch --list
curl <URL> -u <string> -d <string> -d <directory> -d <directory> -d <string>
npx create-react-app <string>
screen -dmS <string>
apt-get update
sudo dislocker-fuse -V <directory> -u$hddpass -- <directory>
npm install --save <string> -session
git init --initial-branch <string>
find . -name <file> -type <string> -exec <string> -rf <string>
curl $opts -F <string>
git status . <string>
tar tvf -
curl -S <URL>
git clone <URL> --depth <number> --branch <string> --single-branch
python3 -m <string> list --outdated --format=<string>
sudo light -A <number>
curl -fsSLo- <URL>
grep -Pr <string>
docker inspect --type=<string> <string>
python3 -m <string> install --user --upgrade <string>
python3.7 -m <string> -V
sudo kill <number>
cat -f
sudo apt install python2.7 --fix-missing
find . -path <directory> -prune -o -name <file> -print -exec <string> -Hni <string>
find . -xtype <string>
sudo phpenmod <string>
mv -rf <directory>
systemctl list-units
find . -maxdepth <number> -type <string> -exec <string> <string>
sudo apt-get install grep -y
git log -p
grep -h <string>
du -h --maxdepth <number>
npm install pushstate-server --save
git login <URL>
modprobe <string>
fzf -m
tmux set-option -t <string>
tail <file> -n20
git submodule sync
q=<string> -H <string> -H <directory> -H <string>
git reflog expire --expire=<number> --all
pkill -h
git remote set-url <string>
git branch view
sudo depmod -a <string>
grep -a -i -E --no-filename <string>
curl --silent --location <URL>
uname -v
docker run --privileged --rm -itd --init <string>
curl <URL> -OJL
xargs ls -l
rsync -rt -e <string>
trap exit <string>
man -t <string>
sudo apt yt-dlp --upgrade
screen -dr
ss -nlpt
sed --version
sudo cd -s <string>
git submodule update --recursive --remote
tail -25
sudo git add -a
sed -Ei -e <directory>
ps m -o <string>
sudo python <file> --insecure
sudo nmcli con <string>
sudo nohup rsync -avzhP --exclude <string> --exclude <string> --exclude <string> --exclude <string> --exclude <string> -e <string>
sudo mv <string>
cut -d':' -f <number>
xargs ls -hs
find <directory> -mtime -1 -ls
xrandr --output <string> --mode <string> --right-of <string>
git merge --continue
awk -help
xargs kill -HUP
git co master
rm remote-git -rf
python3.8 --version
xargs -n2 <string> tag
auto-apt -y <string>
sudo rm resolv.conf.*
python3.9 <file> --isolated
alias r -"ranger"
go build -o <string>
sudo npm cache clean -f
docker login <string> -u <string> --password-stdin <string>
sudo pip install -U <string>
sudo lsof -i
find . -type <string> -exec <string> -p -- <directory>
xargs -0r <string> -p
ls -ladotfiles/bash/
openssl s_client -showcerts -connect <string>
mkdir --parents -- <string>
mvn clean install -Dmaven.compiler.showDeprecation -DskipTests
apt-key adv --keyserver <string> --recv-keys <string>
xargs grep -i <string>
find <directory> \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <string> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file>
xargs -I <string> -0 <string> <string>
sudo docker ps
sudo systemctl enable <string>
curl -Ls <URL>
npx npm-check-updates -u
sudo git lfs install
sudo rkhunter -c --enable <string> --disable <string> --rwo
git filter-branch -f --msg-filter <string>
docker run -it --rm --volume <file> --volume <string>
umount <directory>
yarn add -D <string>
find dir -iname <string>
grep <string> -r
su myuser -c <string>
ls -ca
sudo iptables -A <string> -p <string> -j <string>
wget --no-check-certificate -c --header <string>
apt install figlet -y
shuf --help
grep -i <string> >files
touch --version
sudo debconf-set-selections <string>
sudo lsof -i -P
xargs -L1 <string>
npm create vite@latest <string>
apt-key adv --keyserver <file> --recv-keys <string>
sudo apt-get install -y <string> -r`
python3
docker run --help
cut -f2,4 <string>
git -C <string>
wget -r -l <number> -nd -nH -A <string>
docker top <string>
cut -csh <directory>
set <string>
git config --system --unset <file>
sudo dnf update -y <string>
sed -I <string>
cut -d',' -f3 <file>
tail -fn <number>
column -t -s <string>
find . -name <string> -delete <string>
sudo openssl req -x509 -nodes -days <number> -newkey <string> -keyout <file> -out <file>
python3 -m <string> install ReText --user
git config --add --global --rerere.enabled <string>
git login
git push origin -u <string>
git push heroku master
sudo apt-get install git -y -qq
git br -r <string>
grep -Eoi <string>
git config --global --edit
du -a <string>
find . -type <string> -name <string> -exec <string> -rf <string>
head -n20
telnet -h
kubectl get deployments -n <string>
grep -E -A <string>
npx create-react-app spotify-practice --template <string>
npm cache <string>
sudo docker images
mvn archetype:generate -DarchetypeGroupId=<file> -DarchetypeArtifactId=<string> -DarchetypeVersion=<string>
git config --local
rmdir -rf <directory>
find . -name <file> -type <string> -size -30k -delete
grep -r <string> --include=<string> <string>
sudo npm u -g <string>
sudo dpkg-reconfigure console-setup
cut -c[s,h] <string>
ls++ -a
patch <file>
npm i --legacy-peer-deps
sudo cgcreate -g <directory> -a <string> -t <string>
python3 <file> -w <file>
cut -c5-8 <string>
tmux source-file <file>
git --virsion
grep -win -B <number> <string>
dirname --help
npm i chalk --save
wget -cqO <string>
sudo curl -L <URL> -o <directory>
git revert --skip <number>
sudo iptables -t <string> -D <string>
git reset --soft <string>
find . -name <string> -prune -o -type <string> -name <string> -exec <string> -c <string>
git add -A -f -- <string>
git format-patch -n --stdout <string> <string>
docker run --name <string> --rm -p <string> -p <string>
python3 --versionInstall <string>
rsync -avzr <directory>
grep -B5
git remove -v
git merge --no-edit --allow-unrelated-histories --message <string>
tar -zcvf <file>
git rm -rf
sudo pip install pycurl --upgrade
docker run -v <directory> -v <directory> --rm -it <string>
curl -L <directory> --output <file>
ping <string>
git rev-list --objects --all
cut -f1 -d: <directory>
systemctl status <string>
git rm --cached <directory> -f
tail -f -n200 <directory>
wget --continue <URL> -P <string>
grep -A <number>
touch --help
ssh isl-env <string> -p <file>
ls -lhat
openssl -v
apt-transport-https
git stash pop
sudo wget -N <URL>
grep --include=<file> -rnlw <string> -e <string>
install <string>
sudo dpkg --purge --force-all <string>
npm install npm install <directory> --force
sudo apt install floorp -y
pacman -S --needed <string>
code .
helm upgrade --install <string>
sudo curl -fsSLo <directory>
sudo <file> -L <string>
npm uninstall react-native-snap-carousel --force
wget -nv -O- <URL>
sudo pacman -Su <string>
git describe --tags --exact-match <string>
find . -name <string> type -f -ls
git commit -Am <string>
git stage <string>
sudo apt-get install <string>
grep listen -nr
sudo yum --nogpgcheck -y <string>
sudo apt-key adv --keyserver <string> --recv-keys <string>
strings <file>
read -n <number> -r -p <directory>
sudo wget -O - <string>
grep -R <string>
grep -H -R -o -n <string>
git diff --no-ext-diff -w <string>
git push -f -u <string>
find . -name <file> -type <string> -print -delete
pkill <string>
rm `find -name <file>
docker run -v <directory> -v <file> --workdir <directory>
docker-compose down -rmi <string>
wget -qcO <string>
sudo useradd -G <string>
sudo cp -rf <string>
screen [-d] -r <file>
wc -w <file>
npm create vite@latest
sort -u
docker rmi -r <string>
git add -n
grep -qE <string>
sudo apt-get install -y <string>
sudo <directory> --install -DCMAKE_BUILD_TYPE=<string> --install-space <directory>
dmesg
sed -i -e"s/try_files <string>
npm --verison
else <string>
sudo yum install wget -y
ssh-keygen -b <number> -N <string> -f <directory>
tar -C <directory> -xvz
ls -le
git config --global <file> <string>
tmux ls # <string>
export CFLAGS=<string> -std=<string> -std=<string> <string>
cp -v <string>
docker-machine create -d <string>
git branch -vv
xclip
docker-compose up -d
snap info <string>
sudo apt install gnome-software-plugin-flatpak -y
git stash apply <number> -f
bash
grep -iE <string>
chmod -R <string>
git count-objects -vH
brew services <string>
sudo pacman-key --finger <string>
printf <string>
xargs -I <string>
git rm -cached <string>
sudo docker exec -t <string>
sudo pacman -S --noconfirm <string>
pkill
history -h
egrep -i <string>
docker run -d -p <string> -v <file> -v <directory>
sudo apt-add-repository <directory>
sudo chmod <number> <directory> -R
sudo nginx -help
grep <number> -wr
git git init
npm install express -D
tail <directory> -n <number>
rm -rm <directory>
git log --date=<string> --pretty=<string> <string>
ls -altrd <string>
sudo apt-get autoremove <string>
curl -s <string> -o <string>
sudo apt install apt-transport-https -y
docker run -v <directory> -v <directory> -v <directory> --rm -it <string>
git config --unset-all <file>
su root
date --format <string>
git merge <directory> --allow-unrelated-histories
sudo apt --fix-broken <string> -o <string>
perl -pe <string>
sudo flatpak override --reset
sed -i -e"s/root <directory>
python3.11 --version
rmdir --help
npm start --stacktrace --active-arch-only -- --resetCache
grep -rni <string>
sudo lvcreate -L <string> -s -n <string>
pacman -Fs <string>
gpg --sign-key <string>
npm cache clean -f
git tag -d <string>
cut -d"/" -f <string>
ip link <string>
git log <directory> --oneline
kill -p <number>
tr -s <string>
killall <string>
rails <string>
git branch -d <string>
alias --help
tar xf -
ps auxww
sudo chmod --reference=<file> <directory>
sed -rn <directory>
openssl x509 -outform <string>
git merge <directory> --squash
python3 <file> --num_gpus=<number>
ssh esther@10.18.0.41 -p <number>
sudo cat <directory>
git log $1 --all --author=<string> --pretty=<string> - <string>
git reset HEAD^ --hard
shutdown -h <string>
docker system df
sudo useradd kafka -m
iptables
find . -type <string> -exec <string> -n -e <directory>
rm tokyo-night-sddm -rf
sudo wget -qO <directory>
adduser padraig
python3.9 -m <string> --upgrade
tail -n100 -f <directory>
sort -u) <string>
find <string> -exec <string> <string>
source <string>
cp -v -t <directory>
bsdtar -C <string> -xf -
git push --set -upstream <string>
sudo <directory> restart
docker ls
du -h -d <number>
git commit -am"first"
sudo -H <string> install <string>
rm -m <string>
sort -k2,2 -nr <string>
hg <string>
git branch main
git config --get-all
sudo systemd-nspawn -D <directory> --bind=<string> --bind=<string> <string> -c <string>
mvn install:install-file -Dfile=<file> -DgroupId=<string> -DartifactId=<file> -Dversion=<string> -Dpackaging=<string> -DgeneratePom=<string> -Dspring.test.skip=<string>
apt-get install build-essential -y
ruby -e <string>
git branch -v
sudo flatpak override --filesystem=<directory>
git remote -a
dpkg --get-selections
tail -n2000
sudo fallocate -l <string>
curl -H <string> -H <string> -v <directory>
sudo install -o <string> -g <string> -m <number>
git describe --long --tags
sudo apt-get --assume-yes <string> <string>
touch file-$(date -I).txt
mount <directory> -o <string>
xargs docker rm
sudo curl -o <directory>
npx create-react-app my-app --template <directory> --use-npm
git log --date=<string> --decorate --graph --pretty=<string> <string>
fzf +s --tac
sudo systemctl --now <string> docker
git submodule add <URL> -f
col -b
sudo timeshift --create --comments <string> --tags <string>
wget -nc --continue <URL> -P <string>
export --help
du -sh
swapoff <directory>
tmux -V
env <string>
patch abs -asf
read -p <string> -r
curl -s <string>
sudo a2disconf -q <string>
helm
dd <string>
curl -1sLf <directory>
xargs -0 <string> -iH --color=<string> <string>
curl -ksSLO <URL>
sudo yarn install
sudo apt-get purge npm --auto-remove
sudo aura -A <string>
grep -i -E -o <number>
sudo cp -fr <string>
sudo npm install typescript -g
grep -oE <string>
apt autoremove --purge -y
usermod -U
tr -dc <string>
shutdown -r <string>
git push --no-verify --mirror <string>
curl -LsO <file>
ls -shS <string>
openssl
tmux a -t <string>
sudo motion -n
sudo snap install android-studio --classic
write <directory>
php artisan schema:dump --prune
tail -n1
kubectl exec -it <string>
sudo prometheus --config.file=<directory>
git commit -m -a <string>
git log --oneline --topo-order --graph <string>
sudo apt purge mongo* -y
sudo sh <file> --dry-run
du -al
apt-get install xterm -y
npx tailwindcss init --full
cd onedrive\ -\ <string>
ls -lSrh
multitail --no-repeat -c -s <number>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
git config --local --add <file>
awk --help
sudo swapon -a
kubectl get service hello-node --watch
sudo git commit -am <string> --amend
sudo ufw allow app --help
sudo -E <string> -y <directory>
dpkg-divert
sudo apt-get install -f
git stash show -p
git show --pretty=<string> --name-only
curl -k -s <URL>
ps ax -f
wget -nv --show-progress -O <file>
git merge -continue
kubectl apply -n <string> -f <file>
sudo rmmod -f <string>
perl -p -e <directory>
head -y <file>
sudo -u <string> psql -c <string>
tr -duc <string>
unzip -r <string>
ls wc -l
sudo xcodebuild -license
git push origin main --force
fzf
date -Iseconds
npm install karma --save-dev
sudo git fetch
grep -rE <string>
sudo pip3 install --default-timeout=<number> <string>
npm run bench
curl <directory> --header <string> --insecure
sudo add-apt-repository <directory> -y
sudo gem install ffi -- --enable-libffi-alloc
sudo apt-get -f <string>
git lfs <string>
sudo cd <directory>
code --verbose
awk -F1 <string>
sudo usermod $username -s <directory>
sudo <directory> -w <string> -o <string>
xargs rm -f
mv -- <string>
mv -iv <string>
wc -l <string>
git -push <string>
sort -rn
sudo userdel -r <string>
git fetch upstream -v
sudo apt install wordpress -y
sort -u)
let s:l=<number> - <string>
git submodule update --init --remote --recursive --force
sudo firewall-cmd --zone=<string> --add-service=<string> --permanent
cmake --build <string>
curl -s --user <string>
unset <string>
apt-get telnet
xargs -i <string> -r -i <string>
sudo apt-key add -
git -u -f <string>
ip
git diff-index --cached --quiet <string> --
find <directory> -name <string>
gpg --allow-secret-key-import --import <directory>
dpkg-reconfigure locales
ssh-keygen -f <directory> -R <file>
sudo find . -type <string> -name <string>
git format-patch -1 <string>
curl --silent --unix-socket <string> -X <string> --data-binary <string> --header <string>
cd -a
makepkg -sci
mvn -e <string>
git commit -m'Starting <string>
ssh -qTnNfD <number>
byobu -v
ps --no-headers -p <string> -o <string>
ssh-add -k <file>
su -sh <string>
tail -f <file> --lines=<number>
git commit --amend\
xclip -selection <string> -t <string>
pavucontrol
sudo tar -xvzf <file>
mkdir -p -v <string>
git symbolic-ref --short <string> <string>
git pull origin main --allow-unrelated-histories
npm install react-native-reanimated-carousel --force
ls -lh <string>
shred -uz <directory>
history -a
sudo cp -R <directory>
sudo pacman -Rcn <string>
systemctl --user <string> <file>
find <directory> -type <string> -name <string> -delete
sudo make -j <number>
wget $link$num$ext -P <directory>
fc-cache -vf
kubectl apply --filename <file>
npm install react-native-actions-sheet --save --force
python3 --version
git fetch
sudo git pull origin master
git submodule update logger base64 <string>
find ~ -name <string>
xargs -r <string> rm
grep -f <string>
bazel <string>
<directory> -m <file>
sudo groupmod -n <string>
sudo nmcli con mod <string> <string>
sudo swapoff <directory>
docker run --name <string> -it -d <string>
gpg --dearmor <string>
sudo chmod og-rwx <directory>
ssh-keygen -t <string> -f <directory> -C <string> -b <number>
sudo pacman -Rcns <string>
docker run --name <string>
sudo docker run --rm -p <string>
sudo loadkeys
done
wc -m <file>
sudo pacman man
history -s <string>
sudo apt install flatpak -y
sudo chmod 775 <string>
kubectl get -n <string>
awk -F'/' <string>
bazel test --test_output=<string> <string>
sudo zypper ve -rruby
sudo setfacl -m <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
rsync -rt <string> <directory> --port=<number>
kubectl apply -k <string> -n <string>
sudo pacman -A <file>
sudo apt install apache2 -y
npm sass -D
ls -lR
awk -f <file>
npm install react-native-exception-handler --force
git chekout <string>
nano -f <file>
sudo udisksctl power-off -b <directory>
su -root
git --git-dir=<directory> --work-tree=<directory> <string>
find <directory> -xdev -type <string> -size <string>
find .
sudo node <file>
curl -v -H <string> <URL>
npm uninstall <string>
tail -n1"\
git log --no-merges --pretty=<string> <string>
history -r
sudo cat <string>
sudo mkdir <directory> -p\
sudo snap install intellij-idea-community --classic
sed -i -E <string>
curl <directory> -o <directory>
sudo mkfs.ntfs <directory>
git fetch origin\
yarn add <directory> --dev
git pull upstream <string>
sudo halt -n
read -rsn1 -p"Choice <string>
find . -name <file> -exec <string> -ld <string>
sudo fail2ban-client <string>
sudo -s <string> root
npm list -g --depth <number>
trap - <string>
byobu --version
cat -n
openssl req -new -x509 -nodes -sha1 -days <number> -key <file>
docker-machine env
head -n1)
dpkg-reconfigure <string>
docker logs -f <string>
git remotes -v
sudo lshw # -[short]
sudo rfkill --help
ssh-keyscan -H <file>
xargs -I <string> kill -9 <string>
sudo python2 <file> -cascade==<file> <number>
sudo chkconfig docker <string>
sudo tmux kill-server
npm install malta -g
ansible-playbook <file>
diff -e <string>
find . -type <string> -name <file> -exec <string> -il <string>
git config <file> <file>
sed -i.bak <directory>
docker run -v <directory> -v <file> -v <file> --user <string>
xargs -0 <string> <string>
ssh-agent bash
vim -Wall
apt-get -y <string> --no-install-recommends <string> <string>
docker login <string>
npm publish --access <string> --scope=<string>
find . -name <string> -prune -o -print
find source -type <string> -print0
wget <URL> -P <string>
ssh -p <string>
editor
timedatectl
docker load -i <file>
kill -sigusr1 <number>
php -r <string>
shuf
npm run watch
ls help
aptitude install <string>
systemctl reload <string>
wget -c <URL> -O <file>
lsof -h
sudo touch <directory>
find . -type <string> -name <string> -print -exec <string> -n <string> <string>
uniq wc -l
pulseaudio -vvvv
git config --global --unset <file>
sudo apt-get install --install-recommends <string>
curl <URL> -G <string>
npm ls
npm uninstall <directory> --force
sudo ansible all -m <string>
ls -i <file>
find . -type <string> \( -path <string> -o -path <string> -o -path <string> -o -path <string> -o -path <string> -o -path <string>
sudo i2cdetect -y <number>
sudo mknod <directory>
diff --git <string>
find . -perm <number> -exec <string> <number>
sudo netstat -tulpn
sudo tcpdump <string>
tmux attach
wget -q --show-progress <URL>
sort -k1nr
npm update
mount --h
journalctl -b -1 -e
ls -latr <directory>
ls .local -al
read -r -t <string>
ls -alht <string>
ssh-keygen -f <directory> -R <string>
help
git log --all --name-only --no-color
kill <number>
sudo docker volume ls
rm -v -- <string>
tr -cd <string>
cd Ex-Yu\ -\ <string>
curl -LO <string>
xargs eslint --fix
sudo curl -L <URL> -s`-`uname -m` -o <directory>
do-release-upgrade -c
sudo lsof -ti:8889
grep -qF <string>
ufw status
sudo tee
git format-patch -n --stdout <string> -- <string>
git remote set-url --add <string>
ufw -info
nc
find . -name <string> -type <string> -exec <string> -c <directory> -- <string>
git push -d <string>
tar -xzfv <file>
grep -q -e <string>
git config --all
help <string>
sudo cd root
cd ln -s <directory>
curl -v -X <string> <directory> -H <directory> -H <string> -H <string> -H <string> -H <string> -H <string> -H <string>
sudo rm *
sudo gpg -o <directory>
sudo apt-get install ros-indigo-desktop-full -y
git checkout -v
grep -Ei -- <string>
head -$lineas <string>
sudo -k
docker export <string>
docker build <string> -t <string>
docker-compose up -d --build
sudo restart <string>
sudo tar -zxvf <file> -C <directory>
sudo ldconfig -n <directory>
xargs -0 <string> --
sudo gpg --dearmor -o <directory>
sudo smartctl -a <directory>
ls -lh
sudo certbot renew --dry-run
ufw
git reset HEAD --
sudo gpasswd -a <string> <string>
ssh <string>
sudo -s <string> <directory>
sudo find . ! -user <string> -exec <string> <string>
ln -s <string>
npm update -g <string>
grep -inE --color=<string> <string>
chsh --version
cut -d- -f2-
git merge --allow-unrelated-history <directory>
docker-machine
less -R
apt-get install dig -y
curl -L <URL> -o <file>
find <string> -type <string> -not <string> -wholename <file> -prune <string> -exec <string> -pi -e <string>
sudo iptables -t <string> -A <string> -o <string> -s <directory> -j <string>
git pull origin master --allow-unrelated-histories
docker network
hostname -f
git pull origin development -f
curl -X <string> -H <directory> -d <directory>
sort -t':' -k <number> -u <directory>
sudo cc-snapshot -h
ls -rs
wget -r -np -k <URL>
ls -al --colour
systemctl start kubelet
byobu-tmux
npm install bit-bin -g
find . -type <string> -print0 -name <string>
git push
ag ALL --nocolor
reset
cut -f-12,16,17,21- <string>
gpg --keyserver <string>
mount -B <directory>
git commit --message <string>
sudo killall -HUP <string>
sudo umount <directory> --force
sudo flatpak override --reset --filesystem=<file>
tail -200 <file>
sudo dd <string>
find . -iname <file> -exec <string> -H <string>
man -P <string>
grep -av <string>
sudo restart -h
sudo npm i
read -p <string>
sudo git log
docker run -v <directory> -w=<directory> --rm -it <directory>
ls -lr
grep -iaH <string>
git fetch --prune <string>
docker inspect -f <string>
rm kitty -rf
ip route add -net <string>
tail -d <file>
sudo chmod a+r <directory>
sudo light
git clean -f
wget $KODI_URL -O <file>
git push origin master
sudo firewall-cmd --add-service=<string> --permanent
docker-compose log --follow <string>
sudo snap install pycharm-professional --classic
find . -size -5K
service mysqld start --skip-grant-tables
curl <URL> --progress-bar -L -o <file>
docker-compose stop <string>
git submodule init
find . -type <string> -print0
git reset --soft
sudo pacman -S <string> --needed
apt-get autoremove -y
dir
curl -X <string> <URL> -H <directory> -d <string>
ls=<string> --pretty=<string> <string>
ps -h
curl -o <string> --location <URL>
sudo tee <directory>
sudo apt dist-upgrade -y
fc-cache
find <directory> -iname <file> -mtime <string> -exec <string> -f <string>
git remote --v
docker run --name <string> --tty -i <directory>
git log --oneline --decorate=<string>
sudo prime-select nvidia
sudo tail -f <directory>
npm --v
sudo dbus-monitor --system
screen -wipe
ping <file>
sudo netstat -plnt
git clean -xdf
sudo apt install --only-upgrade <string>
ps # prints a line of information about the current running login shell and any processes running under it
grep -rhn <string>
apt-mark <string>
cut -d' <string> -f4-
read -d <string>
sudo apt-get remove
sudo gpg --dearmor
apt-add-repository <file>
sudo sudo light -U <number>
git init . --quiet
sudo npm install --save-dev <string>
nohup gunicorn -c <file>
gpg --send-keys --keyserver <file>
ls -al --time-style=<string>
git checkout -q <string>
open .
ls -R -l <directory>
sudo userdel <string>
sudo deepstream-app -c <file>
journalctl -xr
npm init -f -y
git commit -am' <string>
sudo jpico -nonotice -linums -nobackups <string>
sudo apt install linux-headers-`uname -r`
git --bare <string>
cd -a <directory>
sort -r -h
sudo journalctl -u <directory> --config.file=<directory>
git commit -m"commit"
sudo apt-get install filezilla -y
find files -name <file> -newermt <string>
ls data* -l
git filter-branch --env-filter <string>
docker build -f <directory> -t <string>
sudo apt-get -u <string>
sudo wget -NP <directory>
sed -e <string> -e <directory> -e <string> -n -e <string>
sudo mongod --dbpath <directory>
grep -vf <file>
print -z <string>
sudo dnf remove tmux
xargs -0 -r -i <string> -a <string>
curl <URL> -s -G <string>
gpasswd -a <string>
systemctl --type=<string>
git flow init -d
ssh <file> -p <number> -i <string>
picom --experimental-backends -b
ln -av <directory>
find . -type <string> -a <string> -name <file> -o -name <file>
ls -Al
xargs --null <string> -pi -e <directory>
chmod -f <string> -- <directory>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec -print
kubectl rollout status deploy mt-broker-filter -n <string>
ls -lart
curl -s -O
sudo adduser --system --gid <string>
find . -name <string> -type <string> -ls -delete
curl -s -L <URL>
killall -l
read -n1 -r <string>
wget -c -t <number> --retry-connrefused <URL>
npm i web3 --save
df -Ph
git submodule init <string>
kill -l <number>
apt-get autoclean -y
xrandr -update
sudo apt full-upgrade -y
chsh -s <directory>
sudo yum remove httpd -y
git reset --hard
ufw --help
xargs -I{} -n1 <string>
sudo apt install openjdk-11-jdk -y
docker start <string>
sudo chown -Rv <string>
xargs cat
hwclock -s
sudo docker run -d --restart <string> --network=<string> -p <string>
git co PTS-578_redirects_not_updating_automatically
gpg --refresh-keys
zip <file> -@
git icommit -m <string>
sudo pkill -u <string>
find . -name <file> -exec <string> -i <directory>
man ln -ls
curl -i <URL> -F <string> -F <string>
git rm -r --cached
journalctl -b
git push origin main
sudo x11vnc -xkb -noxrecord -noxfixes -noxdamage -display <string> -auth <directory> -usepw
docker run -p <string> <string>
ls -al --color
git branch -D <string> logs --follow <string>
git fetch --prune --tags
sudo apt-key add -`
sudo npm uninstall -g <string>
hostname -a
journalctl -b -3 -e
tmux kill
python3 -m <string> --clear-output <string>
sudo nvidia-xconfig --enable-all-gpus --cool-bits=<number>
su -apach2
sudo ansible db -m <string>
git commit -a -m'Remove <string>
sudo dpkg -i --force-architecture <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
find . -name <string> -type <string> -printf <string>
cpio -p -d -v <string>
curl -sf -X <string> <directory>
git checkout master --force
yarn add <string>
xrandr --list
ls local
find {target_directory} -mtime <string>
which
cut -d" <string> -f2-4\
mkdir -p <string>
git ls-tree --name-only <string>
git rm -r --cached <directory>
git push -u -f <string>
sudo mount <directory> -o <string>
npx install-peerdeps --global <string>
docker service create --mount <string>
grep <string> -R <directory>
git gc --aggressive --prune
stow -R <string>
find <directory> -type <string> -exec <string> <number> <string>
ping hostname -f
grep -e <string>
git commit
npm install react-native-actions-sheet --force
git archive <string>
kubectl top pods --all-namespaces
sudo pacman --no-confirm -S <string> <string>
uniq
curl -F"shorten=<string> <URL>
udevadm trigger
git push github --tags
sudo pip install -r <directory> -r <directory>
iptables -A <string> -p <string> --dport <number> -j <string>
gsort -h
cp -r -T <directory>
sudo rfkill
docker login -u <string>
python3.11
set -u\
sudo yum install vim nano tree -y
alias
tail -f <file> -n <number>
killall -u <string>
source <directory>
sudo ls -la <directory>
git rm
openssl genrsa <number>
ps -aix
sudo pacman -Fyy
curl <URL> -vvv
git diff-tree --no-commit-id --name-only -r <string>
dpkg-query -l
read -p <string> -n <number> -r
<directory> -e <string>
sed -n -e <directory> -e <directory>
git patch <string>
date -u <number>
grep -h
git add -f -vv <file>
touch <file>
tail -f <directory> --lines=<number>
sudo certbot certonly -a <string> -w <directory> -d <file>
sudo lpadmin -p <string> -E -v <directory> -m <file>
sudo rm <directory> -Rf
wget -t <number> --retry-connrefused -c -O <string>
sudo chmod <number> <string>
sudo su chmod -r--r--r-- <directory>
tar
apt-get update --fix-missing
curl 172.17.51.19:9090 --silent
grep -qi -e <string>
ping <file> -D
df -h
curl -Ls <URL> -o <directory>
cut -f1 -d' <string>
sudo -u <string> bash -c <string>
sed -n <string> -- <string>
npm install typescript --save-dev
grep -vi -e <string>
git diff <string>
sudo <string> -c <string>
ss -a
grep -irl <string>
xargs sudo aptitude purge -y
find . -type <string> -mtime <string> -delete
mkdir -m <number> -p <string>
sudo apt htop
sudo add-apt-repository --yes --update <directory>
sudo find <directory>
docker commit
du -m <directory>
watch
xargs grep -nH <string>
grep -Fvx -f <string>
git pull --merge
grep -r <string>
mv <string>
zeus.polsl.gliwice.pl - <number>
wget --no-cookies --no-check-certificate --header <string>
git ls-remote
git push --set-upstream <string> <string>
git rm -rf <string>
cut -d <directory> -f <number>
hg churn --diffstat -r <string> --aliases <file>
git log --date=<string> --decorate --graph <string>
curl -v -X <string> <directory> -H <string> -H <directory> -d <string>
sed -i.bak -e <string>
sudo sysctl --system
mvn archetype:create -DgroupId=<string> -DartifactId=<string> -DarchetypeArtifactId=<string>
set -e
podman run -d -p <string>
systemctl --state=<string>
sort -un <string>
cat -b <file>
sudo chown -r <string>
du -xh
sudo --no-fix-broken
curl --data <string>
sort
grep -B <number> -E <string>
last
git remote rm
dotnet publish --output <directory> --runtime <string> --configuration <string> -p:PublishSingleFile=<string> -p:PublishTrimmed=<string> --self-contained <string>
ssh -L <string> -N -f -l <string>
tail -$lineas2 <string>
curl -fsSL <URL> -o <file>
sudo apt-get --purge <string>
bazel test --runs_per_test <string>
sudo chmod a+rx <directory>
du -skh <string>
head out -n <string>
git remote remove <string>
sudo python -U <directory>
git commit -a -m'Initial <string>
sudo ltrace -p <number> -o <file>
psql -U <string> -h <string>
xargs -I{} <string> -c <string> -t <number>
docker ps -a
curl -sS --fail --compressed -L <directory> -o <string>
sh -s -- -y -b <directory>
umask <number>
sudo xcodebuild -license\
apt-get install tcpdump -y
rm <string>
sudo apt
sudo port <string>
git pull --ff
git branch --merged
sudo snap install code --classic
sudo pacman -Syyu -y
rm $DOWNLOAD_TEMP -r
docker run --name <string> -p <string> -v <string> -d <string>
find <directory> -name <string> -delete <string>
apt-cache show <string>
sudo pkill sxhkd
curl -v
sudo cron start
rmdir <directory> -f
uniq -c
tmux attach-session -d -t <string>
grep -v -e <directory> -e <string> -e <directory>
sudo python2 <file> --cascade=<file> <number>
apt-get -u <string>
grep -B <number>
tail -1)"\
df -ThH
wget -c <URL> -O -
sudo apt install --upgrade <string>
find . -name <string> -type <string> -prune -print -exec <string> -rf <string>
git log master..${CURRENT} --pretty=<string> -%C(yellow)%d%Creset <string>
sync
sudo ip route add <string>
find <directory> \( -iname <string> -or -iname <string>
git reset HEAD --2023/
git status
ls -lX
modprobe loop
apt-get remove packagename --purge <string>
sudo pmset -a <string> <number>
ls -alX
sudo apt install <string>
sudo losetup -d <string>
find -L <string> -type <string> -print
sudo curl -O <URL>
git remote -vv
npm run build --prod
grep -vx <string>
sudo tcpdump -i <string> -l <string>
ls -rl <directory>
chmod u+w <directory> -R
killall -KILL <string>
sudo snap install nodejs --classic
ls <file> -l
find <directory> -name <string> -delete
wget -r -A <string> -nd <URL>
wget -q <URL> -O <file>
find . -type <string> -mmin -60
sudo rm -rf <directory> <directory>
find . -name <string> -exec <string> -Dm644 <string>
curl -Lo <string>
kubectl logs -f -n <string>
git checkout <string>
sudo adduser `id -un` <string>
timedatectl show-timesync --all
gpg --gen-key
git pull --allow-unrelated-histories <string>
uniq -u <file>
sudo apt install docker-ce -y
gzip -d <file>
cp
git add -v --dry-run <string>
docker run -d --name <string> -v <directory> -e <string> -p <string>
sort --help
ssh-add --apple-use-keychain <directory>
docker run --ulimit <string> --rm <string>
top -c
sudo gpg --yes --dearmor --output <directory>
apt-key adv --keyserver <file> --recv <string>
base64
sudo nala remove --purge <string>
curl -s <string> -H <directory> -H <string> -H <string> -H <string>
sudo crontab <file>
sudo pacman -D <string>
npm i --global <string>
grep -inrw <string>
sudo apt-get
killall
docker-machine ssh <string>
sudo pacman -Rc <string>
sudo apt-key --keyring <directory>
sudo update
cd
sudo lvextend -l <string>
docker run -it --name <string>
nohup rsync -avzhn --exclude <string> --exclude <string>
sudo systemctl reload <string>
cut -f1
git diff --summary
sudo npm i semver -g
mvn install:install-file -Dfile=<file> -DgroupId=<string> -DartifactId=<file> -Dversion=<string> -Dpackaging=<string> -DgeneratePom=<string> -Dspring.test.skip=<string> --spring.profiles.active=<string>
sudo snap install --classic <string>
docker network rm <string>
find $dir -maxdepth <number> -type <string> -exec <string> -B <string> --max-depth=<number> <string>
git push github <string>
sudo openvpn <file>
git checkout <directory> -f
code --version
sudo rm <directory> -r
sed -r -e <string>
docker ps --filter <string> --format <string>
git merge --abort
<string> --tree-spawn -mca <string>
export <string>
read -e -p <string>
sudo zypper -h
chmod u+x --recursive <string>
df -H --output=<string>
sudo ntpdate -B -u <string>
update-alternatives --list
ls -h
tmux send-keys -t <string>
kubectl rollout status deploy controller -n <string>
find <directory> -exec <string> -m <string>
find . -regextype <string> -regex <string>
gpg --list-sigs -vvv
chsh --help
npm install file-loader --save-dev
egrep -v <string>
sudo docker rm <string>
lsblk -h
man du -ah
sudo strace -p <number> -o <file>
read -rsp <string>
mv -v <string>
ls -n
sudo cron stop
docker rm -f <string>
sudo sshfs <directory>
git submodule update
mv --interactive -- <string>
sudo tar -czf - <string>
sudo tail -30 <directory>
curl -sLX <string> <string>
git commit -f
terraform plan <string>
head
sort -hr <string>
sudo sudo -i <string>
kubectl rollout status deploy webhook -n <string>
tail --help
<directory> <directory>
sudo apt install code -y
grep -n <string>
git clone --recurse-submodules
tmux new
cut -d, -f1,9,10,14,15
sudo npm test
find . -exec <string>
sudo apt-get upgrade --fix-missing
sudo cp -v <directory>
xargs tar cvf <file>
grep -H -R -o -n -i <string>
sudo docker run -it --name <string> --entrypoint <string> -u <string> --privileged -rm <directory>
git symbolic-ref HEAD <directory>
sudo docker rmi <string>
sudo curl -0 <URL>
find . -type <string> \( -name <file> -or -name <file>
ls -als
find extracted -name <string> -exec <string> -c <string>
read -p <string> -r -s <string>
git add -m.
history -d <string>
xargs 7z a -mx=<number> <directory>
find . -path <directory> -prune -o -name <file> -print
cp -R/afs/andrew/course/15/122/misc/lab15 <string>
ssh {} -o -n <string>
sudo apt-get update
git checkout $ORIG_HEAD_COMMIT~$(($LEFT - <string> - <string>
codedown javascript
docker -c
npx tsc --init
sudo pacman -Rns <string>
docker run -p <string> -p <string> -p <string> -v <file> -v <directory>
git remote set -url <string>
chmod <number> <directory> -R
sudo tar xvzf <file> -C <directory>
nohup java -jar <string>
git checkout <string> --force
xrandr --output <string> --auto
head -3
sed <directory> -i.bak <string> -F <string>
dpkg-reconfigure
sudo halt
ls -lT
ls <directory> -SH
bash -l
openssl s_client -connect <string>
sudo hostname <string>
grep <string> --color=<string>
sudo addgroup --system <string>
find . -type <string> -iname <file>
sudo yay <string>
npm config ls -l
git -c <string>
grep -ohr -E <string>
head -n20 <file>
curl --ftp-create-dirs -T <string>
find <string> -name <file>
python3.11 -m <string>
sudo oor -D
find <string> -depth -exec <string> -c <string>
curl -J -O <string>
ip link
tmux set-window-option <string>
sudo install <string>
sudo pip3 install -U <string>
vi . -NO
sudo code --no-sandbox <string>
sudo <directory> -z
sudo npm install <string>
find <directory> -type <string> -atime <string> -delete <string>
sudo zypper
sudo apt install zsh exa -y
xrandr --output <string> --left-of <string>
less <string>
sudo pacman -Syu
curl <string>
gsutil cp <file>
tmux a -t'attributes'
lsof
sudo apt autoremove --purge <string>
find . -name <file> -type <string> -print -deletefind <string> -name <file>
git pull --rebase <string>
sudo apt-key adv --keyserver <file> --recv <string>
zcat <file>
ssh-add -L
sudo ln -sw <directory>
HEAD <string>
apt-get remove packagename=<string> --purge
find <directory> -newerct <string> -print
tail -n+2
gpg --list-secret-keys
users
sudo rpm -qpR <file>
sudo mkinitcpio -p <string>
grep -R --color=<string> <string>
v -
sudo git clone <URL>
ss -lntu
npm install react-bootstrap-icons --save
git pull --no-edit
sudo journalctl -u <file> -f
npm install npm install react-native-actions-sheet --force
sed -i <directory> -- <file>
docker run -v=<directory> -w=<directory> --rm -it <directory>
read -a <string>
python3 <file> -i <string>
ssh-keygen -f <directory> -t <string> -C <file>
wget --content-disposition <string>
grep -Eio <string>
sudo <directory> -R -N <string>
systemctl show -p <string>
git diff --color-words=<string>
git checkout git checkout -b <string>
npm list -h
python3.8 --ds_path=<file> --device=<string>
time curl --header <file>
sudo a2enmod -q <string>
ssh -X <string>
ps # <string>
sudo pip3 install --upgrade <string>
apt install --fix-missing
git branch --set-upstream-to=<directory> <string>
sudo flatpak override --env=<string>
git config --global
find <string> -iname <string>
wget
grep -i -E <number>
xargs git branch -D
git checkout master
npm install -D <string> postcss autoprefixer
tar -cf <file> -T -
curl --compressed <string>
top
sudo yum install docker -y
cut -d, -f1,9,11,14,16
tar xz --xform <directory>
sudo pip install -e <string>
mvn instal -D <string>
sudo git commit
find . -name <string> -delete
docker image <string>
mvn test
sudo iptables -L <string> -n --line-numbers -t <string>
pacman -Qqm
ssh-keyscan -t <string>
git log --format=<string> <string>
curl <URL> -u <string> -d <string> -d <file> -G
xargs -i <string> -alh <string>
apt install $PACKAGES -y
git diff --no-ext-diff --quiet
grep -i -a <string>
npm build <string>
sudo <directory> -k
sudo chmod u+x <file>
sudo firewall-cmd --add-service=<string> --permanent --zone=<string>
git push --tags <string>
sudo rm -r*
test -z <string>
sudo dmidecode -s <string>
git remote add --all
sudo easy_install <string>
grep -wPirn <string>
sudo docker container rm -f <string>
grep --color=<string> -o -- <string>
ps -o <string>
s/:/ <directory>
ls -all
df -B <string>
git revert <string>
head <filename> # outputs the first lines of file (default: <number> lines)
mkdir -P -public/images
python3 -m <string> install --no-cache-dir --editable <string>
sudo sh -c
git merge <directory> --no-edit
cp -fR <directory>
sudo modprobe
bash --login" <directory>
xargs -n2 <string>
git init git add <string>
git commit -m <file> --author <string>
tar -xzvf <file> -C <directory>
sudo apt-get install dnsmasq -y
git config
npm run prod
xargs -I <string> sudo apt install -y <string>
ps -Af
npx create-react-app frontend --template <string>
git add -v -f <string>
sudo ufw <string>
sudo shutdown
git rebase <directory>
ssh -p <string> user@host # connects to host on specified port as user
python3.9 <file> --target
hostname -i
rm -f <string>
find . -size <string> -a -exec <string> -f <string>
git commit -t <string>
sort -uf <string>
cut -d':' -f3 <file>
grep -r -oP <string>
ls -lhr
uname -r
uname --help
npm i puppeteer -g
find <directory> -type <string> -ls
systemctl -t <string>
git hist -h
sort -n
reboot
git add -6
find . -depth
git restore --source=<string> --staged --worktree --recursive <string>
find -name <string> -prune
ls -m
grep -A1 <string>
ps -df
sudo npm i lebab -g
killall -v -i <string>
cp -R -n <directory>
ls -alrt <string>
sudo lsblk -f
find . -type <string> -name <string> -exec <string>
sudo make test
docker network ls --format <string>
sudo ssh-add -K <file>
tar xf <file>
ls code
npm config set <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
chmod <string> -- <string>
git add --dry-run <file>
docker-compose -f <string>
ssh-keygen -l -f <directory>
npx -v
sudo groupdel docker
sudo update-mime-database <directory>
curl --request <string> <string>
sudo restart --help
find . -type <string> -name <string>
rm -if <string>
scp <directory> -i <file>
type <string>
find . -type <string> -mindepth1
ip help
docker compose <string>
sudo python -m <string>
ls -ALF
git pull origin
sudo shutdown -h <string>
sudo aptitude --fix-broken <string>
LANG=<string> rpm -qp --queryformat <string>
kubectl -n <string>
sudo pacman -S -Rcns <string>
git --set-upstream <string>
find . -size <string> -delete
sudo apt-get install nodejs -y -qq
su mount <directory> -o <string>
git --git-dir=<string> <string> --shell --format=<string> <string>
curl $IMGURL -o <file>
rm -Rnewforgit.txt
sudo npm install --save <string> -f
curl -sSL -o <string>
sudo chown niten2:niten2 -R <directory>
ruby <string>
grep -B1 <string>
openssl req -x509 -nodes -days <number> -newkey <string> -keyout <file> -out <file>
wc -L <file>
sudo mysql --user=<string> --password=<string> <string>
sudo apt purge --autoremove -y <string>
dpkg -s <string>
find <directory> -name <file> -print0
docker logs
bash <file>
apt
npm uninstall
curl --progress-bar -L -O -C - <string>
tmux new-window -kt <string>
dpkg -l <string>
passwd
sort -g
psql -U <string> nzdpu_wis -h <string>
sudo lsof -ti:8888
ssh dirlic@10.18.0.39 -p <number>
type
grep <string> -B10000000
fg
git commit --amen
git rev-parse --verify <directory>
sudo apt-key adv --keyserver <file> --recv-keys <string>
sudo groupadd -f -r <string>
docker-compose exec -T <string>
python3.5 -V
git commit -amend
git log --all --pretty=<string> <string>
docker container ls
shutdown now
mysql -h <string> -u <string> -p <string>
tcpdump -i <string> -v <string>
find . -name <string> -exec <string> <string>
git st --porcelain
su chmod <number> <file>
code --in-process-gpu
xargs -L1
sudo firewall-cmd --new-zone=<string> --permanent
git tag
enable <string>
rm -rf <string> -f
npm ERR!
du -k --max-depth=<number>
du -ah
sudo bash -s -
git stash pop --index <number>
go
curl -F <string>
read -u <number>
git pull origin development
sed -e <string> -e <directory> -e <string> \
tar -czf <file>
npm run make
npm i sass -D
curl -b <string>
git filter-branch -f --tag-name-filter <string> --env-filter <string>
sudo apt-get remove -y <string>
git log <string> -- <string>
sudo pavucontrol
sudo npm uninstall <string>
sudo nohup --fork --logpath <directory>
stat --help
ansible-playbook <file> -t <string>
sudo parted <directory>
sudo npm -v
git pull upstream <string> --no-edit
unzip <file> -d <string>
docker container rm repoDemo ------- <string>
ssh --help
git -innit
npm install promise-polyfill --save-exact
mvn exec:java -Dexec.mainClass=<file>
sudo apt-get install build-essential gdb -y -qq
sudo apt-get install python-rosinstall -y
sort -mu <string>
gpg --fingerprint
find . -iname <string> -print0 <string>
cp -i <string>
git grep -q -iI <string>
sudo setxkbmap -layout <string> -variant <string> -option <string>
apt-get install -y <string>
find <string> -not <string> -wholename <file> -prune <string> -type <string>
tail -n5 <string>
sudo <directory> -f
git clone <URL> -b <directory>
ls -lahR
git checkout -d <string>
find -name <string> -delete <string>
grep --help
read -n <number> -p <string>
screen -ls
npm install yarn -G
curl -O -L <string>
curl --unix-socket <directory>
git co --ours <string>
sudo apt-get install apt-transport-https linux-image-extra-$(uname -r) -y
find . -name <file> -type <string> -delete
git stash PUSH -m <string>
grep -n <string> <directory>
lsblk --help
brew install ${FONTS[@]} --cask
podman build -t <string>
git format-patch -X <string> --stdout <string>
sudo setfacl -d -m <string>
docker-machine create -d <string> --hyperv-virtual-switch <string>
unzip
docker container run --rm <string>
git remove <string>
sudo tlp-stat -c
paste <(cut -d" <string>
curl -sk -w <string>
terraform <string>
curl -v --data <string>
curl --fail -s <string>
chown <string>
git checkout -- <string>
cat <file> -n <number>
git merge --allow-unrelated-histories <string>
df -BG
chmod -R <number> <directory>
who
ls -snf <directory>
ls # lists your files in current directory, ls <dir> to print files in a specific directory
npm i @react-native-community/toolbar-android@^0.2.1 --force
find . -type <string> \( -iname <file> -o -iname <file> -o -iname <file>
ls > <file>
git grep -F <string>
gpg --search <file>
ip a
sudo useradd -g <string> -p <string> -c <string>
du -shc <directory>
chown $USER -R <directory>
head -c <string>
touch -a
git clean -df
find src -type <string> -iname <string>
cut -d":" -f2) <string> -d" <string> -f16 <string>
sudo Ippasswd -a <string>
sudo -i
sudo pacman-key --populate
sudo apt install pidgin -y
ssh-keygen -b <number> -t <string>
sed -i'' -e <directory>
php artisan <string>
unzip -l
tmux split-window -t <string> -v
sudo lvcreate -n <string> -L <string>
find <directory> -name <string> -exec <string> -rf <string>
open
print -Pnr -- <string>
ansible-doc -l <string>
sudo <file> -d
sudo systemctl list-units --type=<string> --state=<string>
docker run -it --net <string> --entrypoint=<string> --name <string> -v <directory>
sudo -v
git commit -"frankenstien's <string>
grep -Eno -e <string>
git log --name-only <file> --pretty=<string>
sudo apt-get install netdata -y
sudo -u <string>
ps -ux
perl -i -pe <directory>
strip --strip-all <string>
find . -name <string> -prune
sudo rmmod <file>
cut -c11- <string> <string>
locale-gen
cd <project_folder> ------- <string>
chmod -x <file>
sudo apt install python3-pip python3-venv -y
grep -Eio <string> <string>
wget -qO - <URL>
diff -h
sudo docker ps -aq
screen -wipe -S <number>
xrandr --output <string> --off
sudo pacapt --noconfirm -S <string>
curl -sfL <string>
wget -t <number> --max-redirect <number> --retry-connrefused -O <string>
python3.7 -m <string> install --user <string> --no-cache-dir <string>
builtin printf <string> <string>
su -{user} <string>
git checkout --../.bash_history
apt-get source <string>
sudo du -sh <string>
sudo sshfs -o <string>
php -v
sudo lvremove <directory> --force
grep --include=<string> -rnw <directory> -e <string>
npm install --only=<string>
pacman --noconfirm -S <string> <string>
sudo pacman -Si <string>
sudo curl -L -o <directory>
sudo dpkg --remove -force --force-remove-reinstreq <string>
kubectl get $XR --output <string>
openssl req -x509 -new -key -mykey.key -out <file> -days <number> -subj <directory>
git add -
sed --regexp-extended <string>
diff -b <file>
git ls
curl --location <directory> --header <directory> --header <string> --data <string>
who <string>
kubectl port-forward --namespace <string>
apt install tor -y
find <directory> -iname <file> -atime <string> -type <string> -exec <string> <string>
find <file> -exec <string> -c <string>
perl -0777 -pie <directory>
sudo ufw status
apt remove <string>
code - <string>
git exit
find . -name <file> -exec <string> -c <string> - <string>
sudo -H <string> install keras_applications --no-deps
sudo apt install openjdk-8-jdk -y
tail -$nlineas <string>
curl -T <directory> <string>
sudo rn -rf <directory>
git commit --amend -m <string>
curl --silent -L <file>
tr
sudo apt install xpdf -y
git reset HEAD^
cp -r -- <directory>
mv -i <string>
sudo ifup <string>
sed -i <string> -E <directory>
sudo xrandr -d <string> --output <string> --auto
git log --numstat --pretty=<string>
sed -i -- <directory>
npm login
cd -
sudo mkdir <string>
sudo mount -t <string> -o <string> -u <string> -g <string>
sudo find $1 -name <string> -print
git commit -m''
apt-get install vim -y
ssh -v
sudo npm install n -g
cut -d',' -f2 <file>
sudo apt install -f
git config --unset-all <file> --global
grep -E -o <string>
sudo rm hello
grep --binary <string>
docker-compose down -d <string>
sort -R
sudo timeshift --list
npm create vite@latest intro-svelte -- --template <string>
sudo docker run -e <string> -e <string>
sudo xbps-instalL -S
dpkg -c <file>
sudo apt-get install build-essential -y
sudo chmod -x <file>
docker swarm init --advertise-addr <string>
git filter-branch <string> --tag-name-filter <string> --env-filter <string>
sort -rh
grep -rEho <string>
ls -H
git-filter-repo --version
find <directory> -ctime <string>
ls -ar
sudo setcap <string>
find . -size=<string>
git branch --all
sudo apt purge nala --no-fix-broken
ssh -t <file> sh -c <string>
read -r
curl -X <string> --data-binary <string>
sudo apt-cache search <string>
nohup python3 <file> <string>
docker exec -i -t <string>
git reflog expire --all
grep pacman -Syyu
find . -type <string>
npm run serve
read -s -p <string>
xhost +
ls --color
apt-get update -y
openssl req -x509 -new -key <file> -out <file> -days <number> -subj <directory>
git filter-branch --force --index-filter <string> --prune-empty --tag-name-filter <string> -- --all
sudo cp -a <directory>
cp -rv <directory>
sudo lpadmin -x <string>
sudo dnf install -y <string>
cat -n <file>
sudo git config --system --unset <file>
sed -i <string> -e <string>
dpkg -x <file>
sort -r <string>
apt install ufw -y
sudo apt-get help
sudo pacman-mirrors --interactive --default
sudo snap install node --classic
ps axr -o <string>
sudo shutdown -h
head -n1
mvn
journalctl -xeu <file>
shutdown --help
rm -vi <string>
find -mindepth <number> -name <string>
find <directory> -o <string>
git ls-remote <string>
git commit --amend -reset-author
sudo lvremove <directory> --forece
sudo git commit -m <file>
ps -u <string> # lists your processes
find <directory> -type <string> -delete
git gc --aggressive --prune=<string> <string>
git push --follow-tags
grep -iha <string>
sudo pip3 install awscli --upgrade
docker image ls
do-release-upgrade --help
git grep -E <string>
sudo curl -Lo <directory>
sudo <directory> -s <file>
su -apache2
git status --porcelain -s --untracked-files=<string> <string>
git reflog expire --all --expire=<string>
git rebase mvc-start~ -i
git add <string>
find <directory> -name <string> --delete <string>
git log --pretty=<string> <string> --name-status <string>
ssh -T <file>
sudo git commit -m <string> --amend
sudo resize2fs <directory>
git status --ignored
grep -H -R <string>
sudo apt-get remove --auto-remove <string>
sudo chmod -O+W <directory>
read -p <directory> -n <number>
sudo npm install -g <string>
find <directory> -mindepth <number> -type <string> -iname <string> -exec <string> <string>
sed -nE <string>
sudo badblocks -sv <directory>
docker run -d -p <string> -p <string> -p <string>
apt man
sudo lvcreate -l <string>
brew install ${CASKS[@]} --cask
openssl pkcs12 -export -out <file> -in <file> -name <string>
tail -100 <file>
xargs -r -I <string>
sudo setxkbmap -layout <string> -variant <string>
ping <file> -c <number>
sudo rsync -av --progress <directory>
git diff master --name-only
git adog
find . -iname <string> -type <string> -exec <string> -i <directory>
systemctl daemon-reload --user
sed -e <directory> -e <directory> -e <directory>
sed <directory> - <string>
xrandr --outpu <string> --off
grep --color=<string> -v <string>
xrandr --listmonitors
sudo rm -r <string>
sudo apt-key add -\
git co master <file>
zgrep -i -E -o --no-filename <string>
sudo pico <string>
chsh <string>
sudo su -l
curl --version <string>
sudo timedatectl <string>
sed -n -e <string> -e <string>
sudo zypper ve -r <string>
du -m
ls -F
sudo grub-mkconfig -o <directory>
scp -r <string>
install --help
xargs -n1 <string> -i -E <directory>
sudo flatpak <string>
grep -qi <string>
git sync
vi --version
git -v
sudo rm go -rf
git reset -hard
git add -all
pipewire
docker ps -aq
find <ディレクトリ> -not -name <string> -type <string>
xhost
openssl rand -hex <number>
<directory> --version
sudo find <directory> -type <string> -exec <string> -v <string>
umount -R <directory>
docker history <string>
docker-compose down
ln -sfn <directory>
else\
test
sudo locale-gen <string>
systemctl --type=<string> --state=<string>
git branch -r --merged
git config --set <file>
find . -type <string> -exec <string> -nHi --color=<string> -R <string>
sudo npm install --global <string>
sudo pacman-mirrors -f0
npm install npm-run-all --save-dev
docker login
jq -M <string>
true <string>
sudo rm <directory> -rf
egrep
mvn install
sudo snap install go --classic
sudo yt-dlp -U
git diff --staged
git push origin -- <string>
xargs ls -gG --color)
sudo dpkg --remove <string>
cut -d\< -f <number>
man -k <string>
sftp <file>
podman run -i -t --rm -v <directory>
docker rmi <string>
sort grouped -h -r <string>
npm audit
exec $(compgen -c
sudo grep dkim -i <directory>
grep -Eo <string>
docker run --rm --volume <directory>
code -
systemctl stop kubelet
sudo npm i sass -g
sudo rm -d <directory>
docker rmi -F <string>
git co HEAD
grep -l <string>
sudo pacman -Rcdns <string>
cut -c4- <string>
hexdump
sudo mysql -h <file> -P <number> -u <string> -p
xargs -I{} <string> show <string>
sudo curl <URL> -o <directory>
xargs -0 -r <string> -- <string>
charset=<string> -H <string> -H <string> -H <string> -H <string> -H <string> -H <string>
wget <directory> -O <file>
go test
npm run setup -- --spaceId <string> --deliveryToken <string> --managementToken <string>
sudo -u <string> rm -rf <directory>
composer install --no-dev <string>
dpkg --configure - <string>
git log -n
sudo rmdir <string>
find $1 -type <string> -iname <string> -print0
npm build --prod
sudo nginx -s <string>
curl -OJL <URL>
touch
sudo localectl set-x11-keymap <string>
rm -- <string>
git remote add --all <URL>
pkill picom
rm -rf
sudo tar -xvf <file> -C <directory>
git grep -n --threads <string> --break -I -E <string>
history # shows command line history
sudo vim <file>
tail -n10 -f <file>
fdisk <directory>
sudo lvremove <directory> -f
git commit -m"styling <string>
cp -av <directory>
grep -lir <string>
rm * -rf
sudo airport --disassociate\
find . -name <string> -print
python3.9
chmod -R --reference=<string> <directory>
sudo apt install git vim -y
npm audit fix --force
wget -q <directory> -O <directory>
git stage
df -GB
tmux new-window -t <string> -n <string>
xargs -0 <string>
pwd -P <string>
git -j
ls service
git rev-parse --verify --quiet <directory>
wc -h
apt install <string>
mvn -version
mv $(ls -t
grep --color <string>
mkdir <directory> -p
else sh -c <directory>
sudo certbot --nginx
git co --theirs <string>
df -P <directory>
sudo ntpdate -B -u -d <string>
ssh -T <string> -T <file>
sudo update-rc.d -f <string>
grep
docker run -d --name <string>
npm i codedown -g
grep -o <string>
sudo pacman -S
ls -sh <string>
sudo ifconfig --help <string>
find . -print
sudo <directory> --install -DCMAKE_BUILD_TYPE=<string> -DPYTHON_VERSION=<number> --install-space <directory> -j1
npm list -g --depth=<number>
sudo wgnord -h
tail -500 <string>
dpkg-shlibdeps: erro: <string>
vim -E -s -u <file>
dd --h
dotnet --list-sdks
diff --h
sudo code . --no-sandbox
<string> -e <string>
then export <string>
npm cache clean --force
ssh username@host --> <string>
npm start --production
ex
source <directory> -all <directory>
tar xvf <file>
sudo curl $ZULU_URL -o <string>
find . -name <string> -type <string> -print
git mv <string>
mvn clean
git describe --contains --all <string>
sort -r
git rev-parse --is-inside-work-tree <directory>
sudo snap install blender --classic
git add -A -- <string>
git checkout --keep-ours <file>
sudo dnf install fish -y
git commit -a -m'Mirror: <string>
npm link
sudo loadkeys fa
sudo <directory> -RfX <directory>
ls -ltr
head -n -1
git configh --list
ls -alhtR <directory>
grep -H <string>
sudo docker ps -a
python3 <file> <directory> --network2=<string>
git push <URL> -f
wget -q <URL> -O -
kubectl exec $POD -ti -- <string> -s <string> --max-time <number>
sort -h -r
a ! href <string>
git code .
docker build --help
npm audit fix
ps -ae
git fetch --no-tags <string>
find . -type <string> -size <string> -ls
scp -P <number>
eval
shift <string>
sudo python <file>
grep -Hn --color <string>
uname -n
sudo apt-key adv --keyserver <string> --recv-key <string>
sudo reflector --verbose --latest <number> -f <number> --sort <string> --age <number> --connection-timeout <number> --save <directory>
grep -r -H -B1 <string>
tar zxf -
sudo dnf builddep -y <string>
openssl x509 -inform <string> -in <file> -outform <string> -out <file>
git diff --no-index --color-words <string>
tar xvzf <file>
find $* -type <string> -empty -print0
ls -lag
sudo docker build -t <string>
sudo add-apt-repository <directory> --yes
tee -a <string>
sudo ls -a <directory>
sed -e <directory> -e <directory> -e <string> -e <directory>
git add -p <string>
service <string>
systemd-resolve --status
kubectl apply -f <string>
<string> -print0
sudo true
diff <file>
tail
mkdir -v <string>
hg churn -c -r <string> --aliases <file>
ps xjf -u <string>
npx tailwindcss init -p
find . \( -name <file> -o -name <file> -o -name <file> -o -name <string> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file>
uname -i
sudo loadkeys <string>
select(.status.containerStatuses[].name==<string> <string>
git remote add -f <string>
git filter-branch --prune-empty --subdirectory-filter <string>
tar -cf <file>
git branch -r
sudo apt remove --purge <string>
python3 -m <string> install -r <file>
tail history
sudo getcap <directory>
git restore <file>
localectl <string>
ls -arlt
sudo dnf updrade --refresh
find <directory> -type <string> -size <string> -exec <string> -lh <string>
grep --include=<file> -rnl <string> -e <string>
cp --help
git restore --staged <string>
sudo sgdisk -d <number>
LANG=<string> rpm -qcp <string>
yarn build:css --watch
mkdir --parents <string>
sudo git add <string>
sudo shred -f -n <number>
ls -lH
pacaur -S <string>
sudo nala install $cmd -y <string>
mvn -v
rsync -rt <string> -p <number>
find -type <string> -exec <string> <number> <string>
ssh -N -R <string>
sudo a2enconf -q <string>
ls -\t
paste -d <string>
cp -p <string>
git pull -s <string> -X <string> <URL> -f
curl -X <string> -d <string> -H <directory> -H <string> -H <string>
mvn install -Dskiptests
git --work-tree=<string> --git-dir=<string> <string> -f <string>
git stash apply <number> -q
du -H
git config --gloval <file>
ls - <string> -n
sudo pip3 <string>
which -a <string>
sudo pacman -Syyuu
git filter-branch -f --prune-empty -d <directory>
find $blacklists_dir -name <string> -execdir <string> <string>
xargs tar cvf <file> -
ps auxww <string>
ssh-keygen -t <string> -b <number> -C <file>
fzf --height <string> --reverse --inline-info)"
git commit -allow-empty -m <string>
curl -fLso <file>
sudo fc-cache -fv
curl -s -X <string> <directory> -H <string> -H <directory> --data-urlencode <string>
docker-compose top
sudo netstat -apn
sudo git branch <string>
git merge --help
nohup <directory> --env=<string> <string>
vim -l <file>
git push origin --force --all
git fetch --all
sudo apt install xautolock --reinstall
du -a -h <directory>
docker compose up --build
less -r
yarn <string>
cut -d=<string>
tcpdump
git merge develop
git checkout tags/v6.0.1 -b <string>
<file> --bg=<string> --palette=<string> <string>
grep -wPr <string>
sudo service --status-all
ps axfu
grep -E <string>
git branch --list --all -vv
git remote -v
npm create vite@latest <directory> -- --template <string>
rails server -b <string>
find $PATH -mindepth <number> -maxdepth <number> -print
find . -name'*pk*' -print
curl --proto <string> --tlsv1.2 -sSf <URL>
git remote -vvv
sudo find . -empty -type <string> -print -delete
git commit --allow-empty --message <string>
journalctl -u <string> --all
cut -d <string> -f-200
wget <URL> --output-document=<file>
curl -Lv <URL>
xargs -0 <string> -i -e <directory>
tar xzf <string>
sudo sysctl <string>
git remote add upstream <string>
tcpdump --list-interfaces
nc-docker --help
apt-key add -
ls -xl
pacman -Scc
kubectl rollout status deploy 3scale-kourier-gateway -n <string>
find . -name <string> -type <string> -prune -exec <string> -ch <string>
kubectl get <string>
vim -r <file>
sudo ip route <string>
sudo systemctl status prometheus
sudo update-alternatives --remove <string>
tmux source-file
read -p <string> -a <string>
mv -r <directory>
sudo mount -o <string>
curl --request --help
unlink <string>
cut -d, -f9
do\
find . -maxdepth <number> -name <string> -type <string>
find . -type <string> -exec <string> -i <directory>
xargs -0 <string> -t <string>
git add --dry-run -v <file>
git ci -m <string>
curl -o- -L <URL>
scp
mysql -hlocalhost -uroot -p
watch -n <string>
brew install --cask <string>
ip a l
column
sudo ntpdate <string>
git -a
sudo dpkg --clear-selections
find states -type <string>
dpkg
killall -SIGUSR1 <string>
python3 <file> --help
npx tslint --project <string>
docker exec -it <string>
git pull --no-edit <string>
ip systemd-resolve --status
ssh -tt -L <string>
git config --help
ls -l --a
git config <file> false
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
sudo chmod a+rwx <directory>
sudo nohup mongod --fork --logpath <directory>
sudo dpkg-divert --local --divert <directory> --rename --add <directory>
sudo easy_install -Z <file>
tmux kill-session -t <string>
find <string> -name <string> -exec <string> -rf <string>
source <file>
wget <URL> -O -
apt-get --fix-broken <string>
df -mh
test -m <string>
docker swarm <string>
apt-get dist-upgrade -o <string>
find . -type <string> -mindepth=<number>
sudo ports -u
grep -A <number> -n <string>
ls -1tr
hexdump -C <file>
sudo du -h --max-depth=<number> <string>
git touch <file>
curl -H <string> -X <string> <string>
xargs printf <string>
systemctl start <string>
git config <file> <string>
docker system prune -a -f
sudo lvextend -r -l <string>
ruby -ne <string>
du -ah --max-depth=<number>
git --oneline
git config --local --unset <file>
git commit -m"add"
update-alternatives --config <string>
npm config
history -w
sudo find <directory> -type <string> -iname <string>
npm install --global <string>
git checkout <string> -- <string>
sudo udisksctl unmount -b <directory>
npm install firebase --save
git fetch -p
sudo apt install wireguard -y
ls -l -a
helm <string>
python -mjson.tool
docker run -e <string> -v <directory>
ps -AZ
git push origin
apt-get install jenkins -y
mount -l
php -- --install-dir=<directory> --filename=<string>
git remote add ls
ls -ltrh
sudo git config --global --list
find . -type <string> -mtime <string>
sudo ufw enable
sudo apt install make -y
ls -alF
screen -a <number>
sudo nvidia-xconfig --cool-bits=<number>
f=<string> -p
git show -b --format=<string> <string>
sudo -E <string> -
xargs rm <string>
sudo systemctl stop <string>
apt-cache
apt-key adv --keyserver <string> --recv <string>
git checkout --theirs <file>
ps -u <string>
find . -name <file> -type <string> -print
git --help
guard -c" <string>
ls -haltrS <string>
git rebase <string>
read -es <string>
curl -s <directory> -A <string> -H <directory>
sudo apt list --ugpradable
bazel build -c <string> --config=<string> <directory>
sudo lsof -i:80
docker stop --help
npm run build
df --help
ftp 198.19.255.136
cut -d" <string> -f <string>
sudo pacman -Fy
read -s -r -p <string> -n <number>
sudo modprobe <string>
python3 <file> --cuda-root=<directory>
sudo <directory> -m <number>
sudo docker commit <string>
docker run -d --name <string> -p443:443 <string>
sudo docker stop <string>
ls
git checkout SHA -- <string> <string>
ls wc -l <directory>
du -sch <string>
git less
git config --master <file>
curl -l
ls -Cl
docker run -p <string> --name <string> -e <string> -e <string> -d <string>
cp -p -i <string>
tmux --kill-session
chsh --list-shells
systemctl
sudo light -Q <number>
sudo -u <string> pg_basebackup -h <string> -D <directory> -U <string> -v -P
ls Downloads/syncthing-linux-amd64-v1.27.8 -al
docker images --no-trunc --format <string>
docker run --name <string> -d -p <string>
sudo lpoptions -d <string> -l
sudo airport --disassociate
find --name=<file> <string>
wget -q -U <string>
awk -F/ <string> -1
sudo aptitude purge <string>
docker run -it --rm --net <string> --name <string>
sudo mkdir -p <directory>
code --diff <file>
git merge --strategy=<string> --no-commit <string>
df -
xargs sed -i <directory>
sudo groupadd docker
ln -s
sudo apt-get purge lxc-docker -y
git -am <string>
sh
sudo update-alternatives --quiet --set <string>
command cp -i <string>
docker-compose rm <string>
head -10\
ls test
vim -u <string> -c <directory> -c <string>
git grep -n --break -C <number> -I -E <string>
ps -lf
sudo npm list
apt-get autoremove
ls -lisa
set -e\
xargs
wget <string> -O <string>
docker-compose -p <string> -f <string>
xargs kill -HUPsystemctl <string>
find . -name <string> -exec <string> -c <string>
sudo shutdown now
unzip -c <file>
sudo pacman-key --lsign-key <string>
sudo chown www-data:www-data -hR <directory>
sudo apt -q -y <string> --no-install-recommends <string>
git push -f --tags
sudo pgrep <string>
sudo passwd -S <string>
wget --user=<file> -password=<string> -r <URL>
npx
go <string>
ip -o -4 <string>
python3.9 -m <string>
ls <file> -a
sudo ps
sudo apt dist-upgrade
gnuplot -p -e <string>
sudo wget -r --no-parent -A <string>
sudo strace cat <directory>
sudo snap install slack --classic
docker run -d -t --name <string>
sudo apt install nala -y
sudo apt install software-properties-common -y
dpkg-shlibdeps: <string>
pushd <directory>
cut -csh <string>
wireshark -k -i -
pulseaudio --start
sudo adduser --system --group <string>
journalctl -xe -t <string>
sudo chmod +r <file>
openssl x509 -req -days <number> -in <file> -signkey <file> -out <file>
python3 <file> --hid_Unit <number> --lrn_rate <string> --drop_out <string> --epochs <number> --testmode <string>
git pull git init git add <string>
sudo apt upgrade
sudo git reset <string>
sudo find <file> -name <file>
curl -O --retry <number> --retry-max-time <number> -C - <string>
read -rs
sudo npm update
sed -e <directory> -e <string> -e <directory> -e <directory>
ls-i -aF --color=<string> -w <string>
rvm --default <string>
sudo iptables -A <string> -m <string> --cgroup <string> -j <string>
tmux select-window -t <string>
apt install -y <string>
read <string>
sudo c_rehash <directory>
tcpdump --help
head -2 <file>
sudo chown -R <string>
git stash list
sudo xrandr --output <string> --auto
curl --help
openssl x509 -req -in <file> -out <file> -CAkey <file> -CA <file> -days <number> -CAcreateserial -CAserial <string>
ln -sv <string>
grep -rnw <string> -e <string>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
npm list
npm uninstall mongodb --save
sudo iptables -A <string> -p <string> --dport <number> -j <string>
sudo ntpq -p
sudo docker run -ti --rm <string>
ls -c
sudo apt install --fix-broken -o <string>
sudo tail -F <directory>
pacman -Qdt
sudo apt install build-essential -y
sudo bash --rcfile <file> -ci <string>
sudo chmod +rwx <string>
sudo chown --reference=<directory> <string>
docker build --build-arg <string> -t <directory>
grep -qw <string>
ufw allow app --help
cut -f <string> -d <string>
sudo firewall-cmd --get-services
make install
find $path -type <string> -name <string>
rm -r -f <string>
sudo apt-key adv --keyserver <string> --recv <string>
find . -iname <file> -delete <string>
ls <directory> -r
perl -pi -e <directory>
dpkg-query -W -f=<string>
sed -E -e <directory>
npm install --save <string>
usermod --help
cut -d' <string> -f7-
xargs git add <string>
git stash
sudo supervisorctl status
find . -maxdepth <number> -mindepth <number> -not -name <string> -print0
git checkout --quiet <string>
jq
npm i -g <string>
cp -ip <string>
vi -b <file>
date -h
git fsck
sudo apt install gh -y
locate
sudo pacman -S --needed <string>
git rev-list --left-right --count <string>
ssh-keyscan <string>
docker logs <file>
cpio -p -d -v <directory>
ls -alF --color=<string>
sudo usermod --shell <directory>
find <directory> -type <string> -mtime <string> -exec <string> -f <string>
sudo pacman-key --refresh-keys
sudo apt install tmux -y
sudo apt-get install wget -y
rsync -a <string>
find . -perm <number>
npm ERR! <string>
sudo flatpak override --system --filesystem=<directory> <file>
python3 <file> runsslserver --certificate <file> --key <file>
sudo lighty-enable-mod <string>
git bisect good <string>
sudo snap remove pycharm-professional --classic
git grep -l <string>
sudo -u
sudo apt-get install python3-pip -y
tar -xvf <file>
grep --include=<file> -r <number>
grep -Eom1 <string>
rsync -rt <string> --port=<number> <directory>
sudo apt-get clean -y
git remote update <string>
git rm -f <string>
git clone <URL> -f
git branch rm view
docker exec -i -e <string>
sh <(curl -sSf <URL>
sudo sudo apt install <string>
git add -a
sudo snap install vscode --classic
git hist
docker run -p <string>
tmux send-keys -X <string>
yarn install
python3.8
sudo find <directory> -type <string> -size <string> -exec <string> -lh <string>
xargs kill -9 <directory>
git st
sudo apt get update
sudo apt-get install udhcpc -y
git clean -cf
sudo pacman -S <string> --noconfirm
xargs dirname
sudo nginx -h
ruby -rubygems -e <string>
sudo flatpak --update
grep -iIHrn --color=<string> <string>
grep -Eqi <string>
sort -k <number> -n
git pull --all -u <string>
cut -c5-8
apt-mark
ln -T <directory>
find -config.def.h
sudo lvcreate -L <string>
local -a
fdisk -l
sudo journalctl -u <string> -f
zgrep -i <string>
apt-get install linux-headers-$(uname -r
open -Design\ <string>
find <directory> -type <string> -empty
m -P"Inspect <string>
git restore --staged --worktree <directory>
sudo flatpak override --system --env=<string> <file>
sudo apt install build-essential gdb -y
sudo dpkg-reconfigure locales
apt-get dist-upgrade -y
ps -A
curl -v -X <string> --anyauth -u <string>
ls++ -
which --h
docker run -itd --name <string> -p <string>
git log --foo-bar
shutdown -now
tar -cf <directory> -T -
tmux new-session
ls <directory> -l
sudo apt-get update\
docker swarm --force
sudo rm LICENSE
pacman -Syy
docker run -d --restart <string> --name <string> -v <directory> -e <string> --cpu_usage_limit=<string> <directory>
curl -O <URL>
git checkout development -f
sudo iptables -L -n --line-numbers
systemctl status
sed --regexp-extended --expression <string>
sudo ln -s <directory>
du -sh -- <directory>
sudo pacman -Syyu --noconfirm
sudo zypper <string>
ssh -4 -NL <string> -f <string>
sudo pacman -Runs <string>
sudo npm
find . -type <string> -name <string> -print0
zip <string>
man ls -C
sudo docker info
npm run bench -- -c <file> -n <file>
sed -e <directory> -e <directory>
cat <directory> - <file>
su -s <string>
sed -e <directory>
npm i jest --save-dev
cat -v
find $CODE -name <file> -print0
git clean -n
tar -cvpzf <directory> -C <directory>
sudo -V
less -RX
sudo swapon --show
git log --skip <number> -n <number> --pretty=<string> <string>
tar xfvz <file>
ls -lsh
docker images -a
sudo grep -y
git config --local <file>
sed -r <directory>
node -v
find - -name <file>
sudo mysql --defaults-extra-file=<directory>
php --ini
sudo rpm -i <string>
npm install --legacy-peer-deps
df -k <string>
grep -oP <string>
cut -d. -f1
sudo find <directory> -name <file>
python3 -m <string> -V
ssh-copy-id -i <string>
git reset --hard <string>
kubectl exec $NEXUS_POD -- <string> <directory>
sudo chown -R <string> -gn <string>
cp -v <string> <directory>
sudo raspi-config
git blame -w <string>
rm -i -v <string>
sudo wget <URL> -O <file>
sudo command
grep -s -n --color <string>
docker-machine create --driver <string>
sudo tar -xj --strip-components <number> --overwrite -C <string>
git diff --no-ext-diff --cached --quiet
apt-get install -y -qq <string>
xsel -l <directory> -b
sudo ansible-playbook -i <directory>
sudo a2disconf <string>
grep -nr --include=<string> <string>
sudo tar -zxf <file> -C <directory>
cd rm -rf <directory>
wget --quiet -O- <URL>
userdel -R <string>
bash <file> -Europe
sudo dnf config-manager --set-enabled <string>
curl -sSL <URL>
sudo tar -xvz
git checkout HEAD -- <string>
aptitude update
cat --color=<string> <file>
sudo semodule -i <file>
ssh-keygen -t <string> -b <number>
sudo chmod -o+r <directory>
git please
grep --color=<string> <string>
tar --version
killall <processname> # kill all processes with the name
git clean --force <string>
curl -skI <string>
apt-get install vim curl git htop screen aptitude -y
sudo pacman-key --recv-keys <string>
sudo -t <string>
git commit --no-verify
npm install jest-fetch-mock --save-dev
npm config set prefix <string>
git stash -h
find . -maxdepth <number> -type <string> -exec <file>
sudo dpkg-reconfigure -pmedium <string>
git touch
git config -list
chmod -v <string>
sudo zypper install <string>
tail -2
kill -SIGUSR1 <number>
sudo apt-get install -y -q <string>
sudo python
gpg --export --armor -vvv --output <string>
grep -Em1 <directory>
git log --oneline --all --graph
sudo rmdir -r <string>
xargs -i <string> <string>
cut -f1 -d <string>
ps screen
dpkg --force-help
sh -c <string> -fLo <directory>
ls <directory> -lA
ps -efww
adduser Padraig
sudo aptitude -h
tmux -u
update-alternatives
sudo -u <string> -s
set -o <string>
git gc --aggressive --prune-empty
strings hidden_variable -e
uname -u
sudo port
file
cat --help
su -s{USER}
sudo apt-get install --no-install-recommends <string>
curl -sLo <string>
read -p"选择将系统更新地切到国内哪个镜:1. <string>
sudo virsh -c <directory> <string>
ls -a
npm install mongodb@2.2.33 --save
sudo groupadd <string>
sudo tune2fs -l <directory>
sudo apt-get install phpmyadmin -y
git hash-object -w <file>
npx tslint --project <string> --config <file>
composer
sudo curl -L <directory> -o <directory>
hexdump -C
sudo install_name_tool -change <directory>
find <string> -type <string> -maxdepth <number> -mindepth <number>
ls -F <string>
sudo usermod -aG <string> <string>
sudo strace -f -p <number> -o <file> -g
ls -a <string> lists all <string>
npm start
su -
sudo firewall-cmd --list-all
sed -i -r <directory>
in
sudo useradd -m -U -r -d <directory>
trap <string>
mkdir -f <directory>
kubectl exec -it <string> -- <string> <string>
systemctl mask <file>
ag <string>
git rebase --skip
npm unstall -g <string>
chmod <number> * -R
cat -n <string>
find <file> -type <string> -name <string> -o -name <string> -exec <string> <string>
zgrep -r -i <string>
<string> - <string>
git check-ignore -q <string>
grep -rli --color <string>
wget <URL> -O <file>
find . -type <string> -not -name <file>
sudo snap install sublime-text --classic
then unset <string>
docker-php-ext-install -j$(nproc) <string>
sudo bash --rcfile <file> -c <string>
sudo curl <URL>
journalctl -b -0 -e
ip addr
then sh -c <directory>
find . -depth -exec <string> <string>
exec perl -pe <string>
sudo kill -9 <number>
sudo mkarchiso -v -w <string> -o <string> slim-iso
grep --line-buffered -i <string>
wget $LM_URL -O <file>
npm --version
docker ps -q
watch <string>
vim -R -
sudo nvpmodel -f <file>
pacman -Q
history -c" - <string>
git brancg -v
sudo grep <string>
sudo openvpn --config <directory>
ls -help
git revert --continue
time <directory> -cpuprofile=<file>
sudo wine --help
read -r <string>
sudo systemctl restart <file>
sudo pip install -r <file>
git reset HEAD --hard
sudo pacman -Suy <string>
git rm lf --cached <directory>
uname -o
wget $flutterLINK -O <file>
find <directory> -name <string> -print0
docker run --rm -it <string>
ls -pwd
docker exec -it <string> bash
sudo easy_install
ssh -A <string>
npm uninstall swiper --force
git stash apply
sudo chmod o+x <directory>
cut -d <directory> -f3
git config --
npm ERR! npm -v <string>
git push --force-with-lease <string>
find . -d <number> -type <string> -name <string> -print0
docker-compose build <string>
adduser arjun
sudo apt-get install texstudio -y
git clone --mirror <string>
read -n <number> -s -p <string>
docker-machine rm -y <string>
sudo systemctl stop <file>
git branch -avv
git merge -v <string>
builtin cd <directory>
sudo pip3 install opencv-python==<string> -i <URL>
LANG=<string> rpm -qpl <string>
sudo pacapt --noconfirm -S <string> git
wget --no-check-certificate <directory> -O <file>
tail -n <string>
find <directory> -iname <file> -type <string> -exec <string> printf <directory>
git push origin master --allow-unrelated-histories
docker container run -d --name <string>
du -smc <directory>
ls -t
cd -- <string>
rm <directory> -r
podman <string>
npm jest --clearCache
git commit -m"skeletonzier <string>
grep -m <number>
mkdir -pm <number>
git push -u <string> main
ssh root@127.127.127.127 -i <directory>
ssh-copy-id <string>
ls -alhd
git status --porcelain -s <string>
tail <file> <number>
git add --help
systemctl cat <file>
sudo journalctl -u <file>
fuser -k <directory>
sudo curl --data <string>
git pull --ff-only
kubectl exec --stdin --tty <string> -c <string> -- <directory>
find --info
npm run dev -- -p <number>
git commit --amend --no-edit --no-verify
tar zxvf -
dpkg-reconfigure - <string>
w
git commit -m -n <string>
sudo apt-get install fonts-noto-color-emoji -y
npm publish
sudo nice --3 <string> <string>
cut -d: -f1 <string>
sudo journalctl --since <string> -e
sudo pip install -H <string>
ssh -J
wget -q <string> -O <directory>
ip link set <string>
ls -lrth
man -af
ssh-keygen
ls -lig
cat -v <string>
sudo reboot -h <string>
sudo wpa_supplicant -i <string> -c <directory> -B\
git rev-list -n <number>
python3 -m <string> install --user
wget -O - <URL>
tail +n # Print nth line from file.
sudo apt install htop -y
grep -wPrn <string>
wget -c <URL>
perl -v
sudo certbot certonly --manual --preferred-challenges <string> -d <file> -d <file> --key-type <string>
sudo apt -y <string> $(sort -u <string>
sed -ibak -E <directory>
sudo update-alternatives --config <string>
git grep -n --break -I --color=<string> -E <string>
sudo vim
wget -4 <URL>
man -kpthread
git commit -am <string>
userdel -r <string>
npm install gulp-cli -g
grep -vc <directory>
curl -s -L <URL> -o <file>
grep <string> -A4 <string>
kubectl create serviceaccount --namespace <string>
lsof -p <number>
xargs du -h
codedown <string>
systemd --version
do-release-upgrade -d
yarn --force
sudo apt-get --yes --force-yes <string> nodejs
git commit --allow-empty -m <string>
dpkg -i <file> - <string>
git get-content -path <file>
git add
sudo curl -fsSL <URL> -o <directory>
brew install --HEAD <string>
sudo ftp 198.19.255.136
xargs rm -rf
nginx -s <string>
tail -2 <string>
sudo pacman -Rs <string> --noconfirm
find . -type <string> -name <string> -delete
find <directory> -type <string> -execdir <string>
sudo apt -y <string> <string>
sudo apt install
time <string>
find. -name <file> -type <string> -print
sudo <file> -v -w <string> -o <string>
git switch main
tmux show -s <string>
sudo npm install --save <string>
sudo update-rc.d <string>
git branch rm <string>
ssh -o <string>
find . -iname <string> -atime <string> -type <string> -exec <string> -lsa <string>
npm i gulp-cli -g
npx create-react-app my-app --template <directory> --use-npm -f
ls -lhrt
cp <string>
hexdump <file>
docker push
curl -Lo <directory> --create-dirs <URL>
apt install
python3 <file> --epochs <number>
rm -rv <string>
curl --header <string>
sudo chmod -r-r-r- <directory>
scp -h
ls -latr
kubectl get pods -o <string>
df <directory> -h
ls g++ -l
find . -size <string> -exec <string> -f <string>
git log --author=<string> --after=<string>
sudo tar zxvf <file> -C <directory>
git branch --show-current
curl <URL> -o <file>
ping -a <file>
sudo npm install
curl -v -H <string>
scp -p18082 <file>
sudo apt install snapd -y
sudo pacman -Ql <string>
systemctl disable <string>
setg RHOSTS <file>
sudo apt update -y
python3.8 <file> --ds_path <file> --device <string>
npm i semver -g
openssl req -new -out <file> -key <file> -subj <directory>
docker volume create --name=<string>
sudo iptables -L
git checkout --ours <file>
git update-index --no-assume-unchanged <string>
kubectl get pods --namespace <string>
git add . --all
sudo fuser -k <directory>
git clone <URL> -b <string>
git hist -L <number>
php artisan vendor:publish --all
sudo dmidecode
sudo dnf config-manager --remove-repo <URL>
read -p <directory> -n <number> -r
find -L <string> -type <string> -printf <string> -delete
sudo fsck
l=<string> -1t
reboot now
find orig -name <string>
dpkg-query -W -f=<string> <string>
sudo <directory> -R <string>
git describe HEAD
ps -ef --forest
docker rmi -f <string>
sudo ls -latr <directory>
grep -P <string> -win <string>
bash <file> --clean
wget <URL> -O <file> --no-check-certificate
systemctl -h
tar -xvpf <file>
sudo flatpak update
sudo pip install --upgrade -e <string>
systemctl daemon-reload
sudo apt get install <string>
curl -L --help
npm uninstall react-native-actions-sheet --force
sudo su thin start -p <number>
bash <(wget -qO- <URL>
grep -a -Po <string>
python3 -i <file>
openssl genrsa -out <file>
ln <file> <string>
ls -alrt
egrep -ri <string>
git add -u <string>
ps --help
read -s -n <number>
openssl req -x509 -newkey <string> -keyout <file> -out <file> -days <number> -nodes
find . -type <string> -iname <string>
ls -tr
git remote update
grep -Eo <string> -e <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string>
uniq -i -c
egrep -m <number>
service --status-all
git commit -m"fakedata <string>
df -hT
curl --silent -L <file> --output <file>
update-alternatives <string>
sudo install -Dm755 <string>
git merge -X <string>
ufw allow <string>
setg RHOSTS.*
git remote remove
ls -tra
read -t <number> -s <string>
xargs docker volume rm
userdel ken
git log --stat
cat -e <string>
curl -O -J -L -H <directory>
xargs -0 <string> -i -e <directory> -e <directory> -e <directory>
ls -R
npm install marked -g
dpkg --listfiles <string>
brew uninstall --force <string>
rm -rd <string> -f
read -n <number> -s
chmod u+w -- <string>
git rm -rf --cached <string>
exec --no-startup-id <string> -c
sh <file> -u
sudo apt-get -y <string> <string>
git --v
ln -sfv <file>
cut -d <string> -f <string>
ps -ef
sudo rm -r -f <string>
tail -5
git push --all <string>
find . -mnewer <string>
git commit -am'first'
git diff --stat --color <string>
git config --global.username
wget -q --show-progress <URL> -O <file>
tar -h
diff --version
sudo tail -20 <directory>
apt-get -y <string> --no-install-recommends <string>
wget <URL> --no-check-certificate
tar -ztvf <file>
find . ! -name <string>
sudo dpkg --remove-architecture <string>
git add . -N
sudo systemctl enable --now <string>
ansible-playbook <file> --skip-tags <string>
ansible-playbook <file> --vvv
find . -name <file>
df=<string> -y
sudo npm run <string>
open <string>
curl -s -D- -onul <URL>
ps ux
grep -Fn <string>
npm install eslint --save
screen -r <string>
wget -q -U <string> --post-file <file> --header <string>
tar -xfj <string>
curl -sSK <string>
awk -F'*' <directory>
journalctl -u <string> -f
cat -A <string>
sudo ln -sf <directory>
git push --set-upstream <string>
kubectl --namespace <string> <string>
ssh-cp-id -i <file>
curl -V
tail -15
git checkout <directory> -
dialog --begin <number>
ssh-keygen -t <string> -b <number> -f <directory> -C <string>
sudo usermod -s <string>
git push --set-upstream <string> master --force
git diff --cached
docker images
sudo usermod -G <string>
npm i beautify -gnpm <string>
docker-php-ext-install <string>
git config --global <file> <file>
tail -n10
dpkg-reconfigure keyboard-configuration
xargs -0 <string> --color=<string> -sn <string>
git branch -m
xargs git rm -r --cached --ignore-unmatch <string>
find -type <string> -mtime <string> -exec <string> -f <string>
sudo rm exit
git clone -b <string>
xargs -0 <string> -lad --
hostnamectl set-hostname <string>
find . -name <string> -prune -o -true
systemctl --help
sudo curl -sSL <URL> -o <directory>
git commit --help
git rm --cached <string>
df -a -B <string>
wget --load-cookies <directory>
node <file> -w <directory>
sudo chmod -R <number> <string>
sudo <directory> -q
git info
git ci -a --amend --no-edit
curl <URL> -L -o -
sudo nvm -v
df -i
grep=<string> --color=<string> --exclude-dir=<string>
sudo init <number>
curl -u <string> -H <string> -X <string> <URL>
sudo pico <directory>
ps aux
grep --exclude <string> -r <number>
curl --create-dirs -O --output-dir <directory>
sort -t',' -k2,3 <string>
sudo -H <string> <file> --help
apt install haveged -y
sudo git config --system <file>
wc -c
du -h --max-dept=<number>
sudo ansible web -m <string>
sudo gem update <string>
sudo apt-get install gufw -y
apt-get install -f
find <directory> -name <file>
sudo pacman -Syu <string>
git clone --depth=<number> --branch=<string> <URL>
grep $BAZEL_GREP -lrE <string>
rm -rfa <directory>
npm list -g
docker exec -ti <string>
sudo prime-select <string>
sudo npm start
du -h
ls -/
LANG=<string> df -h
sudo git svn <string>
sudo pgrep -a
git -
sudo smbpasswd -e <string>
sudo apt upgrade python3
pacman -R <string> --noconfirm
sh -s -- -b <string>
git push --delete <string>
find *V$1* -type <string> -exec <string>
sudo vim <directory>
npm install cookie-session --save
sudo ansible all -a <string>
grep collectd * -Ir
curl
git merge --countinue
docker build --build-arg <string> -t <string>
sudo swapoff
rm -d <string>
sudo apt-get remove --purge <string>
mv * <directory> -f
python3 -tt <file>
git commit -am’’
git verify-pack -v <file>
fold -w <string>
docker run -d -p <string>
rg -v <string>
wget --user-agent=<string> <string> -O <string>
xargs grep -sn --color -E <string>
grep -C <string>
groupadd -r <string>
find . -type <string> -exec <string> <number> -- <string>
<file> --h
sudo rename -n <directory>
git history
apt-transport-https \
xargs -0 <string> -n -H <string>
docker run --shm-size=<string> --rm -p <string> -v <string>
git submodule deinit -f <string>
curl -H <directory> -X <string> -d <string>
curl <URL> -u <string> -D <string> -X <string>
sudo rm public_data
curl <URL> -k
python3 -v
df -Th
fc-cache -f -v
git git
find. -name <string> -print
git rev-parse --short=<number> <string>
npx webpack --config <file>
npm install tailwindcss-rtl --save-dev
grep -Ei <string>
uniq -u
ls data -ld
python3 -m <string> install --user --name=<string>
nl
git show origin --v
curl -XDELETE <directory>
docker run -ti -d --privileged=<string> <string>
docker run -dt --name <string> --env-file=<string> -v <string>
rails --version
curl -s --data <string>
du -ak <directory>
xargs -I{} <string> -sh <string>
git add -r <directory>
kubectl get pod -n <string>
ls -alhs
rm -h
sudo apt install gitg -y
tail -40
sudo git checkout <string>
cron <string>
sudo <directory> -v -w <string> -o <string>
sudo chmod a+wr <directory> -R
python3 -m <string> install --upgrade <string>
read -u <number> -t <number>
file <string>
sudo chroot <string>
brew cask <string>
npm create vite@latest my-react-app --template <string>
ls -d -- <directory>
npm install grunt-contrib-watch --save-dev
apt-get install nano -y
git clone <URL> --branch <string>
sudo <file> <directory> -f
git --abort
curl <URL> --silent
sudo pkill <string>
xsel --clipboard
find . -name <file> -exec <string> -f <string>
kubectl rollout status deploy mt-broker-controller -n <string>
ps --help <string>
sudo apt install python-pip -y
git bisect bad
awk --version
kubectl port-forward <directory> -n <string>
xargs -I <string> git -C <string>
sudo iptables -t <string> -A <string> -p <string> --dport <number> -m <string>
capsctrl <directory> & disown
git commit -a -m"file <string>
npm i react-icons --save
sudo X :1&
grep $1 -C <number>
sudo mount -a
sudo smbpasswd -a <string>
docker run -v <directory> -v <directory> <directory> --rm -it <string>
git config --replace-all <file>
sudo apt install yt-dlp -U
npm http <number> <URL>
read -r -d <string> <string>
exec zsh
gpg --version
git rev-parse --short <string> <string>
sudo npm update npm -g
sudo dpkg --print-architecture
wget -q -O- <URL>
find <directory> -type <string> -path <string> -print -quit
find . -type <string> -cmin -30
sudo iptables -t <string> -D <string> -p <string> --dport <number> -m <string>
apt-get install iptables --fix-missing -y
rmdir
<directory> <string>
curl -q <URL>
git show <string>
cat -s -n <file>
cron -e
g++ -fPIC -DPIC -shared -nostdlib <directory>
git stash apply <number>
rm -rd <string>
find . -name <string> -exec <string> -wc <string>
csvlook -t
git log --name-only --oneline -n <number>
grep -H -R -o -n -i -I <string>
sudo tar -cvpzf <directory> -C <directory>
pacman
xargs -d <string>
ip -a
do-release-upgrade -m <string> -f <string>
ls -ld
tmux --kill-sessions
sudo pacman -U <file>
sdiff -Wia <file>
openssl s_client -connect <string> -showcerts <string>
sudo dnf remove <string>
dpkg-query
sudo su
python3.9 <file> -- <string>
sudo dnf swap -y <string>
telnet -v
curl -sH <string> -G --data-urlencode <string>
sudo swapon <directory>
sudo nvpmodel -q
read -r -n <number>
localectl set-x11-keymap <string>
cp -R <string>
ssh --J
find . -not <string>
grep * -e <string>
kill -s <number> <number>
sudo reboot now
grep -rl <string>
sudo rsync -av -n --progress <directory>
sudo apt remove <string>
which --help
git branch -f <string>
git remote add github <string>
dpkg -l
nc -l <number>
hostname
git clone --depth <number> --single-branch <URL>
sudo npm i --legacy-peer-deps
git clone --single-branch -b <string>
xargs kill
git commit -m"mergerererer"
wget -q <string> -O <file>
find <directory> -name <file> -type <string> -exec <string> <number> <string>
sudo find <directory> -iname <file>
git branch --no-color <string> <directory>
tr <string> <string>
hexdump -c <file>
git revert --no-commit <file>
wget -nd -m -nv <URL>
git clone --depth=<number> <URL>
chgrp <string>
curl --silent <string>
grep -i -E -o --no-filename <string>
docker network <string>
npm install long --save
kubectl delete --filename <file>
sudo xbps-install -Sun
wget `curl -s <URL>
sudo apt-get install firefox -y
chfn
git pull origin development --no-ff
find <directory> -nouser -print <string>
git add -U
sudo chmod +x <string>
find <directory> -name <string> --rm <string>
docker ps --help
find <directory> -type <string> -iname <string> -exec <string> --target-directory <directory>
print
openssl zlib -d -in <directory>
docker volume rm <string>
sort -k2 -k1n
rm -fv -- <string>
df -a
ps -ax
ps -au
git commit -m"skeletonizer <string>
curl $PACKER -o <file>
mount -t <string> overlay -olowerdir=<directory> <directory>
yay -Sy <string>
grep -Eno <string>
udevadm info <directory>
sudo tar xvzf <file>
du -aBM <directory>
aptitude install build-essential -y
ls -ls
rm -- -la
docker ps --size
find . -inum <number>
alias brightness_status=<string> -a <string>
code <string>
git log --diff-filter=<string> --summary <string>
curl -o- <string> -o- <URL>
sudo chsh -s <directory>
command tar -zcf <file>
sudo sleep
ls -
git rev-parse --abbrev-ref <string>
npm init -y
sort -nk <string>
apt --installed <string>
rm -ri <string>
sudo service <string>
composer <string>
sed -i -e <directory> -e <directory> -e <directory>
rsync -rt --port=<number> <string>
docker ps --format <string>
netcat
xargs -0 <string> -i -e <directory> <string>
shutdown -hP
source -v
grep -Ev -e <string> -e <string> -e <string> -e <string> -e <string>
docker history --human --no-trunc --format <string>
python2.7 -m <string>
npm install --save-dev <string>
sudo sysctl -p <directory>
sudo pacman -Rdd <string>
npm install grunt --save-dev
wget -q -O - <URL>
rm redis-stable -Rf
sudo systemctl disable <file>
ln
sudo -u <string> psql -x -c <string>
open -f -a <directory>
git rebase
sudo apt install xsel -y
git clone <URL> --depth <number>
sed -ie <directory>
find . -mindepth <number> -type <string> -exec <string> -r <directory>
sudo certboat --nginx -d <file>
npm run
du -hs
perl -lnwe <string>
xargs bat --diff <string>
rm ir --help
ls -ld <string>
sudo pkill <number>
git log --format=<string> --date=<string> <string>
php
git diff <directory> -- <file>
grep -EHnB <number> -A1 <string>
sudo chown $USER:users -R <string>
tail -10
view -
sudo snap install -classic <string>
npm --help
sudo apt --remove-essentia <string> --no-fix-broken
apt-get purge <string>
dpkg --help
docker-compose build
patch -p1 <string> <file>
ls # <string>
mv <directory> -r <directory>
find Clientmate-5.3 -type <string> -exec <string> <number> <string>
find . -name <string> -exec <string> --parents <string>
git lfs install
sudo rm -rd <directory>
file -z <file>
nice <string>
iptables -A <string> -p <string> -s <string>
npm run pretty
sudo apt install python3-pip -y
grep -o^ <string>
date -I <string>
chmod <number> uploads -R
npm -i <string>
git checkout ${commit} -- <string>
sudo dpkg-reconfigure tzdata
ls -lia
sudo -o
xargs -P <number>
git push origin PTS-372_Remove_components_from_daily_tracker --force
uniq -d <string>
hwclock
diff -u <string>
su -l <string>
jq -r <string>
rm .git -rf
yarn add file-loader --dev
cpio -pdm <directory>
git push pay --all
apt-get install <string>
mkdir -p -public/images
sudo systemctl reboot
sudo ifconfig en0 ether <string>
cat=<string> -c <string>
grep -win -C <number>
man -f
sudo apt-mark <string>
curl <URL> -sSf
find . -print -exec <string>
sudo fstrim --fstab --verbose
grep -r -I --exclude-dir=<string> <string>
mvn archetype:generate <string>
apt-get install libxslt-dev -y
tail -r
sudo df
find <directory> -type <string> -mtime <string>
rm -Rf <string>
mkdir -p <directory> -p <directory>
sudo partprobe <directory>
sudo yum install tree -y
curl -vvvvv -i -X <string> $userURL --data <file> -H <directory> -H <directory> -H <string>
xargs git branch -d
npm install react-native-gesture-handler --force
git checkout <directory> -F
useradd <string>
sudo dhclient -v -r <string>
git switch <string>
git rm --cached
sudo yay install <string>
ssh reptilian@$REP_IP -t <string>
git log --oneline --graph
npm install <string>
git pull
sudo apt install git -y
perl
git -version
find --version
grep -m <number> -v <string>
git ls-files -v
curl -L -s <directory>
docker build <directory> -t <string>
git push -u <string> master -f
patch --version
sudo -n <string> <file>
clear -ls
mkdir
kubectl get hpa -w
rm $DESKTOPS_DIR -r
tar -C <directory> -strip-components <number> -xJf <file>
unzip --h
grep -inr <string>
ssh-copy-id karen@10.87.111.34 -p <number>
cut -f1:8,11:12,16 <string>
rsync --help
wget --convert-links --adjust-extension --page-requisites --no-parent --trust-server-names <string>
sudo jupyter-notebook --allow-root
ls -la -F --color=<string> --group-directories-first
ls <directory> -Sa
sudo grub-install --boot-directory=<directory> <directory>
git push origin2
sudo iptables -t <string> -I <string> -o <string> -j <string>
sudo pacman -s <string>
rm -rf -- <string>
sudo modprobe -r <string>
sudo yay -h
sudo powertop -d <number>
find <directory> -iname <file> -type <string> -exec <string> -c <string> --wrap=<string> --from <string> --to <string> <string> -o <file> <string> {} \
tar xzvf <file>
composer install --ignore-platform-reqs'
zgrep -R -i <string>
snap --help
curl -i -s <URL>
gpg --recv-keys <string>
sudo rfkill <string>
head -n1\
find $dir -type <string> -size <string> -exec <string> -B <string>
git merge --no-commit --no-ff <string>
tty
sudo apt-get install --fix-missing <string>
git merge <string> --no-edit
sort passwd
sort > <file>
du $arg <string>
sudo unzip <file> -d <directory>
sudo do-release-upgrade -c
npm install react-native-camera --force
openssl rand -base64 <string>
docker volume <string>
find <directory> -mindepth <number> -type <string> -exec <string> -t <directory> --backup=<string> <string>
git show --format=<string>
mv --help
git -f <string> --cached <directory>
history -n
curl -s <URL> -o <string>
php -i
git brach <string>
hexdump -c
npm init
aptitude upgrade -y <string>
git clone <URL>
sudo docker kill corrade
chmod <number> -R <directory>
cut -f -16 <string>
git add --all
sudo apt install gnome-tweak-tool -y
sudo chkconfig <string>
sudo apt rm <file>
find . -iname <string> -print0
gsettings set <file> <string>
xclip -i -sel <string>
git brunch -M <string>
perl -p -i -e <directory>
git branch --help
sudo tee -a <directory>
sudo localectl --no-convert <string>
docker inspect --format=<string> <string>
sudo perl install-tl
ls <directory> -lh
bzip2 --version <string>
sudo vi <directory>
find . -type <string> -empty
sudo umask <number>
curl -f <URL> -o <file>
GET <directory>
sudo chgrp <string>
ps -f -q <string>
cut -d':' -f5 <string>
sudo swapoff -a
ls 2001\ -\ <string>
docker build -f <directory> <string>
cut -f1 -d,
sudo useradd --home <directory> --group <string> --shell <directory>
grep -Eh <string>
gzip --best <file>
du -xh <string>
perl <file> --NO_HTSLIB
wget -O - <URL> -sr).asc
grep -rnw <directory> -e <string>
git diff --name-only --relative --diff-filter=<string>
apt-get install ruby1.9.1-dev -y
ls -S <string>
read -r -a <string>
modprobe pcspkr
git co -t -b <string>
tar -cf <string> -T -
sh -s - -b <directory>
git commit -m <string> --no-verify
snap install <string>
git show
sudo apt install ufw network-manager -y
ssh-add -D <string>
git checkout
php -l -d <string>
git checkout main --force
do-release-upgrade
sudo add-apt-repository -y <directory>
pacman -Syu <string>
grep -r <string> -l --null <string>
grep -c <string>
ls -lAf
git co -t -b <string> logs --follow <string>
sed -n -e <directory> -e <string>
sudo systemctl is-active <string>
wget --no-check-certificate --no-cookies --header <string>
xargs du -sch
sudo deluser <string>
sudo <directory> -avd <string>
sudo mkdir --parents -- <string>
sudo grub2-mkconfig -o <directory>
sudo apt-get autoremove -y --purge <string>
git rev-parse --short <string>
mount
curl -v -X <string> <directory> -H <directory> -H <string> -H <string> -H <string> -H <string> -H <string> -H <string> -H <string>
find . -type <string> -name <string> -exec <string> <string>
nohup <string>
sudo checkinstall -D --install=<string> --fstrans=<string> --pkgname=<string> --pkgversion=<string> --provides=<string> --requires=<string> <string>
npm install strapi@latest -g
grep -x <string>
rvm install <string>
sudo netstat -tuln
docker-compose logs
git pull -u -a
find . -name <file> -exec <string> <string>
service
sudo mkfs -t <string>
ssh-keygen -t <string> -P <string> -f <directory> -C <string>
sudo apt-get install gparted -y
bash --login
chmod <string> -- <directory>
git log --graph --decorate --oneline
journalctl -xb
sudo apt install graphicsmagick -y
cd -2
git switch -c <string>
sudo mkcert -cert-file <directory> -key-file <directory>
docker-compose exec <string>
brew tap <directory>
sudo journalctl -u <file> -e
dir <string>
curl -LJO <URL>
cut -d\" -f12 <file>
fallocate -l <string>
ssh -t
mvn install -D <string>
npm i -f
grep -rli <string>
git co --track <directory>
git push origin master --force
ssh-add -l
ps -q
mkdir -m <number>
sudo addgroup
cd `xclip -o` <string>
sudo npm i --global <string>
xargs perl -pi -e's/Windows/Linux/ig' <file>
docker images -a <string>
ssh -T <string>
git --no-pager <string> -n <number> --pretty=<string> <string>
sudo pacman -Se <string>
find <directory> -config.def.h
git commit --all -m <string>
sudo nala dpkg -i <file>
sudo tar -xvzf <file> --strip=<number>
npm install -f
npm i semvar -g
wget <URL> -O-
ls -lih
ssh -b
ps -a <string> selects all processes with a tty except session leaders
bash -e <file>
sudo chmod <number> * -R
exit -1
find <directory> -type <string> -name <file> -exec <string> -xf <string>
df -h <directory> -i
sudo dpkg -P <string>
sudo wget <URL> -O <directory>
git revert -head
find . -mtime -7 <string>
useradd -r -g <string>
sh -s -- -y
rm -rvf <directory>
npm i --save-dev <string>
mkdir -p -- <string>
sudo chmod a+w <string>
sudo rpm -e <string>
history -cr <string>
kubectl api-resources --api-group=<string>
ssh-add -l <string>
git push main --set-upstream <string>
nvm_grep -q <string>
export
tmux new -s <string>
sudo debootstrap --include=<string> --components=<string> <string>
git add -a <string>
grep --invert-match --extended-regexp <string>
sudo docker run --rm --volume <directory>
kill -9 <string>
sudo npm install -v <string>
git log $* --name-status --color
sudo journalctl -u <string> -e
apt-get purge -y <string>
perl <file>
git log --name-only --oneline <string>
cat psql -h <string> -U <string> -d <string>
docker run --rm --entrypoint <string> <string> -c <string>
git log --oneline --graph --all
apt install wget -y
curl -G <directory>
groups
git commit -m"merge <string> <string>
screen exit
pacman-key --init
df # shows disk usage
git pull --rebase
git add -i
find . ! -empty -type <string>
sudo yum -y <string>
curl -L <URL> -o <string> -s
grep -En <string>
sudo zypper se <string>
sudo --help
git add -u
sudo timeshift --create
sudo sed -i <directory>
du -ach
rm -R <string>
read -rp <string> <string>
sudo install
sudo apt-get install libgl1-mesa-dev-lts-utopic -y
grep -Ri <string>
git stash push -m <string>
git restore
sudo tune2fs -c <number>
ls -lht <file>
df
done\
sudo apt upgrade -y
git log --all --graph --decorate --name-status <string>
docker run -i -t --rm -v <directory>
grep <number> -w
curl - <string> -H <string>
git gc --aggressive --prune=<string>
xargs -n1 <string> branch -d
docker rmi --help
docker run -d --restart=<string> -p <string> -v <directory> --name <string>
sudo apt-get clear
wget <directory> -O <string>
docker run -name <string> -d -p <string> -v <directory> -u <string>
killall -q <string>
sudo history
ln -ls <string>
bash -x <string>
hg churn -f <string> -r <string> --aliases <file>
<file> --hel
sudo pacmna -S <string>
docker rmi -rf <string>
mkdir -vp <directory>
git rm <string>
sudo lsof -a -i -s <string> -p <string>
cat
git commit -m"hhhh"
git commit -C <string> --no-verify
lsof -i:9030
git rm --cached -r
apt-get autoremove --purge
tcpdump -D
rm -rfi <string>
wget -c -i <URL>
curl <URL> -i -F <string> -F <string>
npm -g <string>
sudo dscacheutil -flushcache
find . -type <string> -empty -exec <string> <string>
uniq -f <number>
gpg --verify <file>
du --max-depth <number>
find <directory> -type <string> -name <file> -exec <string> <string>
find . -name <string> -printf <string>
find . -type <string> -exec <string> <directory> {} +
php --version
git --work-tree=<string> --git-dir=<string> <string>
git commit --amenl
sudo python <file> --cascade=<string>
grep <string> -A10000000
rm -rfv <string>
npm install <directory> -D
git stash -u --keep-index
ls -haltr
apt-get clean -y
sudo npm update -g
find $SRC -name <file> -or -name <file> -exec <string> xzvvf -C <string>
apt-get -y <string>
pulseaudio --check
apt-get install screen apt-utils -y
git commit -m"api"
vi
dpkg --status
ls -altr <string>
du -ch
git branch --delete <string>
sudo gpasswd <string>
sudo docker run -v <directory>
ssh-keygen -f <string> -t <string> -C <string>
curl -Ss -X <string> -H <directory> -d <string>
apt-key add <file>
git branch --set-upstream-to <directory>
sudo dnf install <URL> -E <file>
tmux new-session -d -s <string>
docker run --name <string> -p <string>
xclip -i -sel <string> -f
xargs -n1 -I <string>
git br -t <string>
npm install remark-cli -g
sudo yum-config-manager --enable <string>
git branch --set-upstream <string>
git commit -m'How <string>
docker run -p <string> -itd --name <string>
docker stop
git reset <directory> --hard
tac
sudo sh -s <string>
find . -mindepth <number> -type <string> -name <string> -exec <string> -c <string>
grep -in <string>
sort -u -t, -k1,1 <string>
git diff --no-ext-diff --quiet --exit-code
sudo gpasswd -a <string>
composer create-project -s <string>
find . -type <string> \( -name <string> -o -name <string> -o -name <string> -o -name <string> -o -name <string>
systemctl enable <string>
diff -n <string>
chown -R <string>
grep -wc <file>
read -sp <string>
read -p"> <string>
telnet --help
aptitude install ethtool -y
find . -type <string> -empty -delete <string>
adduser xtina
sudo su -l <string>
sort -t: -k <string>
read -d <string> -r -e -u <number>
usermod -aG <string> <string>
sudo ansible -a <string>
npm install express --save
sudo fsck <directory>
git log --graph
git clone --help
tail -f <directory>
ps -H -o <string>
git log --full-history -- <file>
sudo pacman-key --populate <string>
swapon --show
sudo groupadd -r <string>
sudo su chmod <number> <directory>
grep -a -i -E --no-filename <string> */*.log*
npm run pretty <string>
sudo flatpak override --reset --env=<string>
sudo netstat -lptu
git ci -am <string>
find . -type <string> -name <file> -exec <string> --with-filename <string>
docker login -p
sudo tar zxfv - -C <directory>
brew unlink <string>
node --version
cut -c60-61)
else
<file> - <number>
ssh-keygen -t <string>
less -S <string>
tail -f <string> --lines=<number>
docker rm 1b13d10b5de2 -f
sudo apt-get install docker-engine -y
hostnamectl
halt
sudo nginx -t
chmod -x
who -H
rm -rf~/.config/emacs/.local/
npm start --active-arch-only -- --resetCache
docker
sudo cp <string>
gzip
sudo npm audit fix -f
sudo du -h --max-depth=<number>
sudo apt install --only-upgrade <string> -y
sudo apt install npm -y
sudo tar -C <directory> -xJ
sudo mount <directory>
ls -lShra
git pull origin main --rebase
sudo usermod -aG <string>
bash <(curl -s <URL> -y
wget -cO <string>
sudo supervisorctl <string>
rm --help
git init\
sudo netstat -ntulp
subl -v
docker kill <string>
groupadd <string>
sudo su root
source
xrandr --output <string> --on
sudo hwclock -s
git for-each-ref --format=<string> <directory>
mvn install:install-file <string>
npm root -g
git clone <URL> --depth=<number>
df -U
docker run --rm -itd --init <string>
find . -type <string> -size <string> -ls <directory>
git difftool -y <string>
sudo adduser <string>
uniq -f1
sudo ntpdate
npm install --save-dev --save-exact <string>
history -a <string> -a <string>
ping -c1 -W <number>
sudo apt-get install iptables -y
bash -s -- -y\
sudo vi <file>
grep -Eo -e <string>
git log --pretty=<string>
podman run <string>
sudo <directory> --prefix=<directory> --modulefilesdir=<directory>
codium -n --profile <string>
git checkout joshua_buchsbaum --force
sudo rsync -rltgoDvzhP --exclude <string> --exclude <string> --exclude <string> --exclude <string> --exclude <directory> --exclude <directory> --exclude <string>
ls -ltrd <string>
cp -rv -t <directory>
ls -lrtd <string>
systemctl edit --full <string>
sudo apt-get install -y --force-yes <string>
npm run package
sudo pacman -S <string> --asdeps
kscript --clear-cache
sudo code --install-extension <file>
docker exec -it --user <string>
ps -a
sudo systemctl --user <string> pulseaudio
git pull origin yourbranch --allow-unrelated-histories
bash -v
sudo lshw -class <string>
git pull -u <string>
sudo gsutil cp <file>
git ls-files --others --exclude-standard --directory --no-empty-directory --error-unmatch -- <directory>
userdel jyotika
sudo killall mongod
git remote -vvv <string>
unset -m <string>
head -n <string>
dotnet
sudo apt-get full-upgrade -y
sudo git branch -a
git --git-dir=<file> <string>
du -kh
grep -v -E <string>
init
dpkg --set-selections <string>
sudo mdir -p <directory>
dd
sudo lppasswd -a <string>
find -maxdepth <number>
cp -f <string>
git checkout --orphan <string>
sudo socat -d -d <string>
cut -d <string> -f1
cd rm -r <string>
sudo apt -t <string>
tar -zcf <file>
gsutil -m <string> -r <directory>
cd ..
ls -lat
ls -d
sudo apt-get install redis-server memcached -y
git log --stat --summary
find . -type <string> -name
dpkg --remove --force-remove-reinstreq <string>
sudo apt-get install --yes <string>
curl -X <string> <URL> -d <string> -d <string> -d <string>
npm i go -g
sudo udevadm trigger
docker run -it --rm --net <string> --name <string> --env <string> --env <string>
rm -r -f
history -n <string>
blaze-from-html -v <string>
ls -al*
git pull -p
pacman -Rs <string> --noconfirm
sudo shutdown -y
tmux attach -t <string>
curl -sL -O <string>
find . -name <file> -type <string> -print -delete <string> pull git pull -f <string> pull find . -name <file>
git pull -s <string> -X <string>
curl <URL> --data <string>
tmux resize-pane -L -t <string>
find <directory> -type <string> -iname <string> -execdir <string> --no-act <directory>
sudo find <directory> -type <string> -exec <string> -H <string>
sudo dnf swap <string>
systemctl restart <file>
git log <string> --pretty=<string> <string>
eval `ssh-agent -s`
tcpdump -i <string> -c5 <string>
tar -xvJf <file>
git log --name-only --oneline
docker system prune -af --volumes
vim -O <file>
git rm <directory> -f
sudo sed <directory> -o <directory>
find $dir -type <string> -exec <string> -alt --time-style=<string> --color=<string> <string>
sudo <directory> --help
git revert -m <string>
find <directory> -mindepth <number> -delete <string>
ls -Gl
head -30
git -f <string>
mount -t <string> --options=<string> <directory>
git co HEAD <directory>
kubectl rollout status deploy imc-dispatcher -n <string>
sudo bpftrace -e <string>
git touch bob
sudo tar -C <directory> -xvf <file>
find . -empty -type <string> -print -delete\
a
cut
git pull -v <string>
rsync -arv --exclude=<string> <string>
git chekout -b <string>
grep -ve <string> -e <string>
fc-cache -f
useradd bob
python3 -version
dir -l
ip route <string>
git bisect <string>
gunzip <file>
curl -fsSLO <URL>
xrandr --help
ps aux --sort=<string>
su mv <file> <string>
sudo apt-get purge <string>
wget --version
NF
rmdir -R <directory>
sudo pacman -U
curl --connect-timeout <number> -Is <file>
sudo apt -y <string>
sudo usermod -aG <string> $USER
sudo nvidia-settings -h
docker build . --progress <string> -t <string>
sudo curl -sL <URL>
sudo groupadd -g <string>
sudo nix-collect-garbage --delete-older-than <string>
git
git rm --cached <string> -rf
apt-cache --help
sort -k2,2n
git config --Omit --global <file>
sudo useradd -M -d <directory> -s <directory> -G <string>
tar -tvf <file>
read -r -s -p <string>
sudo docker run -it --name <string> --entrypoint <string> -u <string> --privileged -v <directory>
ls .local -al --color
htop
git fetch -a
wc -c <file>
make
curl <URL> -u <string> -d <string> -d <string> -d <string>
git clone <URL> --force
mail -s <string>
du
sudo openvpn --genkey --secret <file>
ssh stephen@10.87.111.148 -p <number>
tcpdump -i <string> -c10 -nn -A <string>
mysql -p <string>
git commit -vvv -a -m <string>
sudo pacman -Syy
ssh-keygen -o -a <number> -t <string> -f <directory> -C <file>
grep -Ev -e <string>
git log --name-only
npm i
chmod --all
sudo wgnord <string>
git log --format=<string> -n <number>
gzip <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
tail -40 <string>
git stash -m <string>
git cat-file -p <string>
psql -U <string> -h <string> <string>
read -cn <string>
xargs wget <string>
date -f <string>
pipewire <string>
exec
journalctl -xe
xargs -L1 <string> clone
let <string>
exit
journalctl --help
grep -o
ls -i
wc -l
docker create --read-only --name=<string> <string>
git commit -m"help"
npm install mocha -g
ls=<string> --oneline --decorate
unzip -C <file>
ping <file> -DA
tar xz
du -a -h
sudo certmgr -ssl -m <URL>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
exec pwsh -nop -c <string>
sudo apt-get source neovim -t <string>
chmod --help
git add -A
sudo cp -p <directory>
sudo apt --upgrade <string>
unzip -zst <file>
git stash apply <string>
git stash --include-untracked
git submodule update -f --init
userdel ken2
mvn dependency:copy-dependencies -DoutputDirectory=<string>
sudo docker run -d -P --name <string>
npm install <directory> --save-dev
sudo useradd -m -g <string>
sudo yum -y <string> <string>
sudo apt-get install codium -y
sudo yum update -y
sudo npm install forever -g
mvn install:install-file -Dfile=<file> -DgroupId=<string> -DartifactId=<file> -Dversion=<string> -Dpackaging=<string> -DgeneratePom=<string> <string>
sudo service nginx reload
sudo pacman -S <string>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
sudo hostnamectl set-hostname <string>
git log --oneline --graph --parents
sudo update-initramfs -u -k <string>
make -j4
git rev-list --all
npm install pokedex-promise-v2 --save
node -e <string>
docker --version\
cd -C -h
sudo apt remove --auto-remove <string>
grep --include=<file> --exclude-dir=<string> -rnw <string> -e <string>
ps -al
grep -wirl -C <number>
sudo nvidia-xconfig -a --cool-bits=<number> --allow-empty-initial-configuration --enable-all-gpus
docker ps # <string>
git push -u <string> bryan-guner
journalctl -xe -b <number>
usermod -G--groups
sudo systemctl enable NetworkManager --now
git merge <string>
dpkg --list
git commit -a -m <string>
update-rc.d
ruby -v
sudo virsh <string>
tcpdump -i <string> -v
kubectl rollout status deploy eventing-controller -n <string>
find -x <string> -type <string> -name <file>
sudo make
docker run --name <string> --restart=<string> -d -p <string> -v <file> -v <directory>
sudo apt-cache show <string>
vim --version
sudo xcodebuild -license <string>
uname -p
find . -type <string> -size <string> -delete
sudo xrandr --output <string> --same-as <string>
man -m <directory>
rm testing -rf
docker exec -t -u <string>
git commit -m'WIP: <string>
subl <string>
sudo docker run ubuntu -it
tmux -a
grep -C50 <string>
history -cw
cut -d' <string> -f3-6)Z"
sudo ls
sudo git fetch <string>
code --help
docker container -l
sh -s --
sudo userdel demouser
sudo apkg -i <file>
pacman -Qqm <string>
base64 -w <number>
sudo nginx
git help -a
docker run -itP -v <string>
sudo git config --global <file>
grep -wx <string>
apt-get --purge --yes <string>
sudo pip install --upgrade <string>
docker stop bigballers
npm install react-native-actionsheet --force
pbcopy
sudo sed <directory> <directory>
ls -aFl
curl -L <URL> -o <directory>
docker ps --all --quiet
find . -iname <string>
killall -ujboss
kubectl version --client <string>
sudo pip3 install cython -i <URL>
git push --mirror <string>
git stauts
mount --types <string> overlay --options <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <string> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file>
npm install react-audio-recorder --save
sudo install_name_tool -id <directory>
which <string>
docker run --name <string> --restart=<string> -d -p <string>
sudo python <file> -cascade==<file> <number>
docker run <string>
ssh -oStrictHostKeyChecking=<string> -oBatchMode=<string> -oConnectTimeout=<number> -i <string>
cp -n <directory>
kubectl rollout status deploy imc-controller -n <string>
git remote set-url origin <string>
git config --gloal <file>
tar -xf <string>
sudo snap alias <file>
grep -hr -e <string>
npm install react-native-keyboard-aware-scroll-view@latest --force
ls -d <string>
git pull -f
paste -sd+ -
sudo do-release-upgrade -d
curl $URL -o <string>
ls -lCc
sudo pacman -Q <string>
sudo pacman -h
mount -o <string>
ls -all <directory>
git pull --no-rebase
mv -a <directory>
grep -Fxf <string>
head -15 <string>
sudo killall -9 <string>
npm adduser
git add -vv <file>
cd -P <string>
find <directory> -name <file> -o -name <file>
git push --tags
find . -type <string> -name <string> -ls -delete
sudo du -a <directory>
git filter-branch --index-filter <string> --tag-name-filter <string> -- --all
find . -iname <string> -print
git pull -v
sudo wget --quiet <URL>
ls -r <string>
helm init --service-account <string> --tiller-namespace <string> --upgrade
sysctl -n <file>
cut -d' <string> -f1
sudo docker compose <string>
hostname -d
docker run -it --rm <string>
xargs -0 <string> -o7 -preserve
ssh-keygen -t <string> -a <number>
docker ps -a --filter <string> --format <string>
apt-get -o <string>
sleep --help <string>
su mv <file> <directory>
php --help
sudo chmod +x <directory>
sh -
sudo xbps-install -Sui
apt-get install nodejs -y
sudo pacman -Scc
python3 django -h
git commit -A
git checkout -
curl --fail <string>
cut -d <string> -f2-
find <directory> -name <string> -type <string> -user <string> -delete
wget --header=<directory> --user-agent=<string> <string>
ls -lta
npm install play-sound --save
git push -uf <string>
sudo chown <string>
sudo lpadmin -p <string> -o <string>
curl -X <string> -d <string> -d <string>
docker build <string> -t <string> --build-arg <string>
npm test
ssh-keygen --help
sudo apt-get remove <string>
wget --spider -S <directory>
sudo pip3 install --extra-index-url <URL>
sudo apt-get --yes --force-yes <string> git <string>
sudo ansible web -a <string>
head -n50 <file>
perl -nle <string>
OK - <string>
git filter-branch --subdirectory-filter <string> -- --all
python3 <file> -- <string> @CAMERA=<string> <string>
cp --no-preserve=<string> <directory>
apt-get install sysstat -y
ls -laSh
cut -d'\' -f3 <file>
sudo find <directory> -xdev -type <string> -size <string>
sudo ifconfig <string>
sudo pip install <string>
pico
sudo apt get <string>
sudo wget
sudo snap install heroku --classic
rm <directory> -rf
sort -n -r
sudo apt-get install libkrb53 --reinstall
mvn clean deploy -Dmaven.compiler.showDeprecation -DskipTests
git co
wget $androidLINK -O <string>
ssh -L <string> -N -f -l <string> <string>
head -n <number>
xargs git log --merges --no-walk --grep=<string>
rm -rd
git status --porcelain
git log --all <string>
ps $@ -u <string> -o <string>
git read-tree -u --prefix=<string> <directory>
du -hsx <string>
kubectl apply --validate=<string> -f <URL>
apt-get -f -y <string> <string>
git checkout $1 -- <string>
sudo iptables -I <string> -p <string> --dport <number> -m <string> --state <string> -j <string>
sudo apt-get --fix-broken <string>
git ls-files <string>
sudo apt install -y <string>
hexdump -h
sudo apt-get -o <string>
sudo sh <(curl -sSf <URL>
sudo grub-install --root-directory=<directory> <directory>
apt-get remove -y <string>
ln -L <string>
sudo xrandr --newmode <string>
dpkg -S <string>
sudo gem install <string>
curl -sS --fail <string>
strip --strip-unneeded <string>
find . -type <string> -newermt <string> -exec <string> -ch <string>
sudo lvremove --help
find -name <file> -o -name <file>
ls $PWD -l
docker run -v <string>
sudo ngnix -t
grep -wirlc <string>
sudo python3 <file>
sysctl <string>
killall -s <number>
curl -fSsL <URL>
du -h -x -s -- <string>
grep -w <string>
sudo npm i prettier -g
wget $latest_url -O <file>
grep <string> -n --exclude=<string> <file>
curl -s --data-urlencode <string> --data <string> --data <string> --data <string>
wget <URL> -O - -o <directory>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec -print <string>
php -f <file> -- <string>
python3 odoo-bin --no-database-list
netcat <string>
git submodule update --init --recursive\
curl -sS <URL> -o <file>
sudo ip link set <string>
grep <string> -C4 <string>
python -m <file>
sleep <string>
sudo xbps-install -Su
git log --graph --pretty=<string> -%C(yellow)%d%Creset <string>
npm i -D <string>
curl -X <string> -H <string>
grep --?
ps -eLf
python3 <file> -sI <string> -sM <string> -dM <string> -dI <string> -
cut -f2-
sudo netcfg <string>
kill
ls -alf
read -n <number> -s -r -p <string>
ssh -CqTnN -L <string>
npm i pm2 -g
git init -b <string>
apt -qq -y <string> <string>
docker run -d -p <string> --name <string>
zgrep --h
ls -l --color
sudo timedatectl set-timezone <directory>
du -hc --max-depth <number>
size <string>
git commit -v -a -m <string>
git commi -m <string>
rm -v <file>
sudo apt install vim -y -qq
sudo rm -Rf <directory>
done < <string>
ssh kuaidi@192.168.228.183 -p2222
rm -f -r <string>
git merge -s <string> <string>
ls -lRa
python3 -m <string> list -o
wget $URL -O <string>
ls=<string> -A -sh --color=<string>
bash -s <string> --mirror <string>
docker volume ls
git stash pop --quiet --index
ls -lR <string>
curl -sLo <file> --create-dirs <URL>
tar xzvf <directory> -C <directory>
kubectl --kubeconfig <file> --context=<string> <string> -f <directory>
sudo pacman -S --overwrite <string>
shutdown -hP <string>
sudo airport <string>
rmdir -
tail -10 <string>
sudo mkarchiso -v -w <string> -o <string> slim-iso -r
git ush -u <string>
rails --version <string>
sudo shutdown -hP <string>
npm install markdown-magic --save-dev
su -c <string>
psql -h <string> -U <string> -d <string> -L <file> -a <string>
find . -path <string> -prune -o <string> -name <string> -a -type <string>
cp -source -destination
sudo apt-get install docker-ce -y
sudo gedit <string>
sudo port install <string>
find -name <string> -type <string>
sort -V
docker-compose up
sort -nk1,1
ps -f -p <string>
git ps
sudo mv -f -v <string>
chmod
docker stop <string>
docker tag
npx tsc --noEmit
git branch
read -e <string>
time
perl -nle
rm -r <string>
rm rm -r <directory>
sudo tar -xz -C <directory>
git add -Av
find $dir -type <string> -exec <string> --summarize -B <string>
adduser <string>
git config --color.ui <string>
docker run --rm --entrypoint <string> $GL_IMG_REPO -c <string>
userdel
git merge -i <directory>
curl -OJLZ <URL>
perl -e
npm update express -g
grep -H -R -o -n -I <string>
git push --force-with-lease
mail -v -s <string>
docker run --name <string> -p <string> -e <string> -v <directory>
strings hidden_variable -e <string>
ps2pdf14 - <file>
sudo apk add <string>
xargs docker rm -v
less
sudo rm -rf <string>
sudo git push -u <string>
sudo shutdown -n
sudo ani-cli -U
sudo a2enmod <string>
git config --get
curl -sL <URL> -o <directory>
chmod <string>
head -n-5
find <directory> -size <string>
sudo apt-get install --only-upgrade <string>
sudo lsof -n -i4TCP:$1
git help
sudo docker rm corrade
git config -f <string> --remove-section <string>
yay -S <string>
docker -version
man -i
sudo apt-get install libgssapi-krb5-2 --reinstall
find . -xdev -type <string>
udevadm control --reload-rules
udevadm monitor -p
hwclock --systohc
ps -f -u <string>
git all -A
ssh-keygen -t <string> -f <directory>
sudo auto-cpufreq --stats
docker login -u <string> --password-stdin <URL>
sudo export <string>
find . -mindepth <number> -type <string> -exec <string> a -mx=<number> <directory>
numfmt --to=<string> --suffix=<string>
set -o
grep -Fxq <string>
git grep -iI <string>
podman run -p <string>
brew uninstall <string>
find . -size -10k
sudo supervisorctl update
telnet -tulpn
sort -k <number> -nr
sudo cp -r <string>
sudo chfn <string>
sudo snap remove <string>
ls --all
wget -q -c <string> -O <file>
bash -
sudo hp-setup -i
systemctl stop docker
ssh -i <string>
npm install react-native-snap-carousel --force
apt-key fingerprint <string>
docker ps -a --format <string>
sudo passwd
ls -la
sudo gpg --import -
git branch -b <string>
docker run --rm -p <string>
man rm -R
ls -al --lcontext <string>
grep -w
find -L <string> -type <string>
find . -iname <string> -exec <string> -rf <string>
sudo npm install -g <string> -unsafe-perm
date
xcode-select --install
git co - <string>
cp -rp <string>
sudo apt-get check <string>
python3 <file> --snapshot
sudo adduser arjun
wget -N <URL>
git log --graph --decorate
wget --header <string>
docker pull <string>
python3 <file> -sI <string> -sM <string> -dM <string> -dI <string>
apt install sudo -y
wget --no-check-certificate <URL> -O -
npm i glob -f
docker run -ti <string>
git config --get --unset <file>
pacman -Syyu --noconfirm <string>
ls -ltah
find . type -f
docker build --tag <string>
curl --fail --compressed -q <string>
rm -P <string>
git filter-repo --path-glob
git branch -M <string>
sudo chmod u+rwx <file>
sudo docker ps -q
sudo node -v
sudo dmidecode --type <number>
git commit -m
xargs -n1 <string> -h <file>
sudo apt install lamp-server^ -y
find <directory> -type <string> -regex <string> -delete
tmux new-session -d -s <string> -n <string>
cd - <string> <string>
git --version
git config --global --add <file>
tr <string>
find . -type <string> -name <file> -exec <string> -l <string>
sudo chmod -R <string>
ls -lrlt
git push <URL> <string>
git log -n <number>
ls <directory> -R
sudo curl -sS --compressed -o <directory>
curl --proto <string> --tlsv1.2 -LsSf <URL>
apt-get install
history # <string>
command grep --color=<string> --no-filename -E <string>
apt-get
sudo apt-get -s <string>
tcpdump -i <string> <string>
git rebase --continue
ruby --version
sudo certbot --nginx -d <file> -d <file> -v
sudo crontab -u <string> -e
tmux split-window -t <string> -h
gpg --help
git add -f <string>
npx tslint --help
tar zxf <file>
ps -p <number> -o <string>
sudo apt-get install nasm --fix-missing
code --install-extension <file>
mv 2001\ -\ <string>
lsof -i <string>
sed -i -E -e <directory>
pulseaudio -D
sudo apt install nodejs -y
sudo snap install beekeeper-studio --classic
sudo sed -i'~' -E <string>
sudo apt upgrade -h
git stash --help
sudo lvresize -l <string>
xargs -n2
Docker <string>
sudo chmod -W <directory>
apt-get clean
git show origin -v
git merge -s <string> --no-commit <string>
vim vim -S <file>
grep -rF <directory> --exclude-dir <string> --exclude-dir <string>
sudo git pull
git config --user.name <string>
du -sh <string> --exclude <string> --exclude <string>
sudo lvcreate -n <string> -l <string>
sudo apt-get -y <string>
sudo chmod <number> -R <string>
sudo unionfs-fuse -o <string> -o <string>
xargs -o <string> <string>
find . -newermt <string> -type <string> -print
cut -c47-80 <file>
unzip -o -d <string>
find $dir -name <string> -exec <string> -alt --time-style=<string> --color=<string> <string>
curl -L <URL> --output
grep -ir --color=<string> <string>
sudo dnf update -y
history
chsh -s <string>
git pull origin branchname --allow-unrelated-histories
xargs git restore
xargs -0 <string> -- <string>
sudo apt-get update --fix-missing
docker-machine <string>
sudo apt-get dist-upgrade
screen -r
sudo apt install --install-recommends <string> -y
sudo sshfs -h
uniq -cf <number>
sudo apt purge $(dpkg -l
grep -wirl <string>
sudo less <directory>
docker-compose build teh-germinator
sudo apt-get check
git add .squeue --start
ls --full-time
curl -fs -X <string> <directory>
sudo poweroff
ls <directory> -al
sudo updatedb
sudo certbot certonly --nginx
docker pull
npm install netlify-cli -g
ssh usuario@ip_servidor -p <number>
git co -
ls -G
less -N <string>
docker --help
find <directory> -maxdepth <number> -type <string>
git log --oneline -n <number>
cat -
sudo nvidia-xconfig -a --cool-bits=<number> --cool-bits=<number> --cool-bits=<number>
screen -pts
sudo apt purge -y <string>
find . -type <string> -print
tail -$2 <directory>
grep -rP <string>
git branch -all
su field
git commmit --amend
sudo find $dir -type <string>
sed -i -e"s/server_name <string>
docker run --rm -ti -v <string>
wget $URL -qO -
pwd # <string>
sudo apt-get -f <string> -y
sudo wget <directory> -O <directory>
curl <string> --output <directory>
sudo nano <file>
ls -A
free -h
git commit -m <string> --author <string>
sudo ltrace -f -p <number> -o <file>
openssl req -subj <directory>
codedown javascript > <file>
local -a <string>
docker compose up -d <string>
sudo ls -lha <directory>
apt --fix-broken <string>
du -kx
nc <string>
man xdg-desktop-menu --manual
git rev-list
sudo pacman -R <string>
kubectl rollout status deploy activator -n <string>
rm -r
ls ls
git update-ref -d <string>
rm nvim -r
sudo sgdisk --new=<string> --typecode=<string> --change-name=<string> <directory>
dpkg -C <string>
snap remove <string>
find -mindepth <number> <file>
wget -r -np -l <number> -A <string>
rm -Wall
sudo apt -f <string>
npx ncu -u
find -r <file>
xargs --no-run-if-empty <string> inspect
git rm --force <string>
sudo tar --extract --file=<string> --strip-components=<number> --directory=<string>
sudo apt install tor -y
npx run-android --active-arch-only
docker container ls --all ------- <string>
read -sn <number> -p <string>
sudo flatpak override --filesystem=<file>
mv -v -t <directory>
python3 -m <string> venv
find . -mtime -7 -type <string>
fzf <string>
ssh-add -K <directory>
curl -so <directory> -w <string>
sudo apt-get install -y -f
curl -vk <URL>
sudo rm qbittorrent-cli.repo
systemctl start docker
egrep -Eio <string>
curl -H <string> -X <string>
shuf -n <string>
sudo chmod <number> <directory>
xargs -n1 -P4 -I{} <string> a -mx=<number> <directory>
ls -L
brew rm <string>
sudo kill -s <number>
sudo apt-add-repository -y <directory>
tar xzvf -
sudo scutil --set <string>
git grep -e <string> -e <string>
sudo apt docker pull <directory>
curl <URL> -o <directory>
tail -r <string>
python3 <file> --keepdb <string>
curl <URL> -X <string> -d <string>
tar -zxvf <file>
apt clear
cut -d: -f <number>
git checkout -B <string>
sudo uftrace <file>
tail -n20
apt-get dist-upgrade -y <string>
python -
sudo dpkg --add-architecture <string>
sudo aptitude -y <string> install <string>
php <file> -t=<string> -k <file>
exit <number>
npm i beautify -g
sudo pacman -Syu --noconfirm
grep -vw <string>
rm hyprlock -rf
tail +x # want to display all the lines from x to y. This includes the xth and yth lines.
sudo apt install i3 --no-install-recommends
sudo awk -F\' <string>
grep -o -i <string>
sudo apt-key add
paste <string>
git update-ref -m <string>
df -H
git describe --tags <string>
ssh-keygen -t <string> -C
xargs tar <string>
apt-get install --reinstall <string>
curl --location <directory>
npm install --location=<string> <string>
sudo apt remove gnome-online-accounts -y
git checkout joshua_buchsbaum -f
sudo fail2ban-client ping
sudo gsettings set <file>
sudo dnf remove -y <string>
find . -maxdepth <number> -type <string> -name <string> -exec <string> -n <directory>
sudo <directory> --prefix=<directory> --openssldir=<directory>
ls -Sr
docker run -d --restart <string> --network=<string> -p <string>
git rm -r <string>
npx create-react-app react-ts-demo --template <string>
git ps -u <string>
git commit -m"html"
df -g
rm go -rf
sudo pacman -sS <string>
alias <string>
sudo wget <URL>
sudo pacman-mirrors -f5
xargs jq -r <string>
sudo apt-get -qq -y <string>
docker run -v <directory> -i -p <string>
sudo pacman-mirrors -f8
ls -R <string>
grep -v -e <string> <string>
tar -xzvf <file> -C <string>
cut -c3- <string>
git co -- <string>
q=<string> -H <string> -H <directory> -H <string> -H <string> -H <string>
git commit --no-verify --message <string>
curl -sSf <string>
pacman -Qqen <string>
git config --list --show-origin
ln -f <string>
brew cask install <string>
tail -${cols}
mkdir <directory> --parents
host
find . \( -iname <string> -o -iname <string>
git rev-parse --abbrev-ref <string> <directory>
head -$var <string>
docker login -p <string>
grep $CPP_SOURCE -rFl <string>
sudo apt-get autoclean -y
wget --recursive --level=<number> --no-directories --no-host-directories --accept <string>
docker ps --no-trunc --format <string>
git push pay <string>
ping <file> -A
xargs -0 <string> -rf
hg ci -m <string>
mvn --version
grep -v -f <string>
sudo docker run -d -p <string> -p <string> -v <directory> --name <string>
kubectl get svc --namespace <string>
find . -type <string> -mmin -120 <string>
sudo apt-get install software-properties-common -y -qq
head -10
ls <directory> -s
sudo tar zxf <file> -C <directory>
sudo apt list --ugpradeable
gzip --best --force <file>
wget --post-file=<string> --header=<directory> <string>
grep -q <string>
sudo ssh -f -N -w <string>
git checkout --their <file>
sudo -H <string>
sudo php <file> --install-dir=<directory> --filename=<string>
snap uninstall <string>
sed -Ei <directory>
grep -Fi -m1 <string>
su service httpd <string>
du -ds <string>
su - <string> -c <directory>
sudo tar zxf <directory> -C <directory>
awk -F',' <string>
sudo apt-get dist-upgrade -y
xargs gunzip -vt
php <file> -profile=<string> -mode=<string>
grep -wPrc <string>
openssl version -a\
ip -o <string>
cut --help
uname -a
find . -iname <file> -exec <string> <string>
gpg --dearmor --yes -o <directory>
chsh
sudo date -s <string>
sudo apt upgrade -a
mvn install:install-file -Dfile=<file> -DgroupId=<file> -DartifactId=<string> -Dpackaging=<string> -Dversion=<string>
sudo ifconfig
sudo serve -s <string>
sudo ftp 10.64.3.143
ps -u <string> -o <string>
read -e -p <string> -i <string>
which -as <string>
sudo lsblk -o <string>
nl -n <string> -w <number>
sudo apt-get install curl -y
chmod --reference <string>
journalctl -b -2 -e
diff --hel
npm install pm2 -g
install -help
useradd -m -G <string> -s <directory>
sudo fail2ban-client set <string>
wget -r -A.pdf <URL>
ps -auxwf
curl -kLs <file> -o <file>
pwd
grep <string> -w <string>
rake
mvn archetype:generate -DinteractiveMode=<string> <string>
git branch -a
sudo adduser --system --no-create-home --group <string>
find . -type <string> -path <string>
ssh -i <string> -p${LOCAL_PORT} <string>
git br
npm install react-player -f
sudo fuser -k -n <string>
cut -f1 -d, <file>
git format-patch -n --stdout <string>
unique -t
git log --full-history --pretty=<string> <string>
nohup -c <string> <file> <string>
man -k
ps -e
sudo wget -nv <URL> -O <directory>
sudo RESPONSE=<string> --system --print-reply --dest=<file> <directory>
chmod a+w -R <string>
chmod --reference=<string> <string>
du -chs <string>
grep -C5
docker run -p <string> -p <string> -p <string> --shm-size=<string> <directory>
sudo dnf config-manager --add-repo <URL>
curl -# -u <string>
column -t
find -name <string>
npm install npm install react-native-action-sheet --force
grep -color <string>
grep <string> -B4 <string>
ls -f
telnet
gawk --version
sudo add-apt-repository <string>
sudo dhclient <string>
df -s
git ls-files
wait <string>
kubectl --namespace <string>
firefox-trunk --debug
sudo apt list --upgradable
bash <file> -b -u -p <directory>
sudo python <file> --cascade=<file> <number>
lsof -i
python3 -m <string> list --outdated
read -ln <string>
sudo yum install java-17-amazon-corretto-devel -y
grep -winr -C <number>
sudo udevadm control --reload-rules
git pull origin development --force
curl -fLo <file> --create-dirs <string>
gpg --keyserver <file> --recv-keys <string>
apt install --only-upgrade <string>
npx shadcn-ui@latest add <string>
git config -f <directory> --remove-section <string>
ssh -X -C <string>
ssh -x <string>
grep -Eho <string>
find . -iname <string> -exec <string> <string>
mv * <directory> -u
npm i react-native-swiper --force
grep -Eve <directory> -e <directory>
sudo yum <string>
chmod -w <file>
docker images -f <string> -q
git diff-tree --no-commit-id --name-only <string> <string>
sudo apt-get update -y
curl -fLO <URL>
sudo ssh-keygen
ps -fC <string>
curl -s <directory> -s <directory>
git restore --staged
curl -i -H <directory> -H <string> -X <string> -d <string>
git -h
npm install -d
find <directory> -maxdepth <number> -mindepth <number> -type <string>
docker build -f <string> -t <string>
git commit <file> -m <string>
ls -AF
git revert
curl -sH <string> <directory>
ls -alR
tail -16 <file>
docker rm -f -- <string>
mkdir -v <string> <number>
sudo subl <string>
systemctl stop <string>
git status -ignore
sed -En <string>
git config --get --global <file>
git branch --contains <string>
tmux -f <directory>
brew cleanup -n <string>
nano
find . -name <string> -print0
git commit -am''
export CFLAGS=<string> -std=<string>
<directory> -c
xargs ls -gG --color
git cd <string>
finger
npm config <string>
sudo chmod a+w -R <directory>
git log
npm install --save
wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=<string> --domains <file> --no-parent <URL>
xargs grep -sin <string>
sudo apt install gdebi -y
git commit -v
python3 <file> --model-path <file> --conf <string> --img-size <number>
sudo firewall-cmd --state
curl -ssLO <URL>
find <directory> -inum <number>
ls -n1 <string>
tar -cvpf <file>
npm uninstall --save <string>
sudo umount <directory> -f
grep -sh <directory>
sudo wget -O <directory>
xargs docker stop
sudo useradd -m -d <string>
sudo apt-get install -y <string> --allow-unauthenticated
docker run -it -p <string>
wget -r -np -R <string>
find ~ -type <string> -name <string>
snap
ls ls -la
git log --all --graph --decorate --stat <string>
sudo uftrace --force <file>
kill -HUP <string>
sudo <file> -v -r -w <string> -o <string>
sudo npm install semistandard -g
curl 172.17.48.70:8080 --silent
aptitude install openjdk-7-jdk -y
rvm <string>
ls -$ <directory>
sudo rpm -e --allmatches <string>
docker stop boost
find <directory> -mmin -60
sudo apt-get install grafana -y
git br -d <string>
screen -a
sort -k <number> -r
apt upgrade
update-alternatives --list <string>
cat auteurs -e
less -FXRS
git push origin -f
fc -l <number>
sudo netstat -tanup
ip addr <string>
find -L <directory>
sudo apt-get install texlive-science -y
tar xz --strip <number> -C <string>
curl -OL <URL>
head -n6 <file>
cut -d <string> -f <number>
sudo npm list -g <string>
sudo apt-get purge --auto-remove <string>
curl -sL <URL>
python3.7 <file>
sudo kill -HUP <number>
apt-get remove wide-dhcpv6-client -y
sed -i <string>
sudo docker run -it --rm --name <string> --entrypoint <string> -u <string> --privileged -v <directory>
dpkg -L <string>
sudo nano <directory>
npm i react-native-reanimated-carousel --force
rm --recursive --dir <file>
sudo ntpdate -q <string>
journalctl -b -1
git grep -lE <string>
sudo docker run -it --name <string> --entrypoint <string> -u <string> --privileged --rm -v <directory>
grep -B <number> <string>
useradd -m <string>
git remote -h
sudo yum install <string>
df -m <string>
npm install semistandard -g
wget -N --no-check-certificate <URL>
nice
systemctl is-active
npm audit fix -f
less -n <number>
git git commit -m <string>
sudo dnf update -y <string> --setopt=<string> --exclude=<string>
git push -o <string>
ps
less -X <file>
docker image rm -f <string>
docker volume create <string>
sudo xcode-select -s <directory>
sort file <string>
sudo code <file>
ls projects
git reset <string>
jq <string>
git remote rm <string>
sudo sysctl -p
sudo lsof -i:15721
sudo deluser --remove-home <string>
sudo apt-get --purge -remove <string>
node <file>
git remote set-url --add --push <string>
apt-get install libsqlite3-dev -y
cat -s <string>
sudo <directory> --config.file=<directory>
apt install --yes <string>
sudo apt-get install linux-headers-$(uname -r)
yarn --version
find . \( -iname <file> -or -iname <string> -or -iname <file> -or -iname <file> -or -iname <file>
git -b
sudo cp <file> <file>
curl -sF <string> -w <string>
su
apt-add-repository
docker ps -f <string>
git config --list
curl <URL> -O
dirs in <string>
sudo rkhunter --propupd
du -h <directory>
sleep <number>
npm init -Y
head -n5 <string>
stat
df -kH <string>
npm --version <directory>
docker -ps
git switch --create <string>
file -l <file>
sudo insmod <file>
tail -n$KEEP <string>
bash <(curl --proto <string> --tlsv1.2 -sSf <URL>
git submodule
curl --version
sudo pkill yast
docker run
apt-get -y -o <string>
git tag --format=<string> <string>
userdel bob
systemctl --user <string>
git add -p
grep -OE <string>
find . -type <string> -name <file> -print0
screen -rd <string>
grep --color=<string> -- <string>
source config --set <string>
sudo apt-get upgrade -y
awk -F\" <string>
sudo tar -xvf <string> -C <directory>
docker container rm <container> ------- <string>
tcpdump -i <string> -c <number>
ls data* -ld
ufw --info
ls -ald <string>
xrandr
sudo sed <directory> -i <directory>
apt-get install iptables --fix-missing
curl -JOL <URL>
sudo pacman
git merge --no-ff --no-commit <string>
find . -empty
sudo alternatives --set <string> <directory>
cd <building_worker_folder> ------- <string>
sudo find . -type <string> -exec <string> +x <string>
systemctl enable --now --user <file>
git checkout -b
grep --only-matching <string>
xargs sed -i -e <directory>
sudo python3 <file> install
du -d <number> -xh <string>
git config --add --global <file>
ls <directory> -a
git checkout -b <string>
bazel build -c <string> --config=<string> --genrule_strategy=<string> --spawn_strategy=<string> <directory>
docker inspect --format <string>
ssh -CqTnN -R <string>
grep -rn <string>
sudo iptables -t <string> -A <string> -o <string> -j <string>
diff <file> <file>
docker build -t <string> --platform <directory>
sudo systemctl mask <string>
apt dist-upgrade -y
ls <directory> -ldL
curl -fsSL -o <file>
systemctl --type=<string> --state=<string> --all
ls --color=<string>
rsync -arv --exclude=<string> <directory>
sudo useradd -m <string>
apt-get upgrade
npm install --force
curl -I <URL>
fsck
grep -i --color=<string> <string>
sudo chattr -i <directory>
apt update -yy
sudo ls <directory>
cut -d -f1 <file>
ls -tlr
chmod u+x <string>
ls -lih <directory>
fc-cache -vf <string>
ls -alt
sudo jobs -p
df -T
curl -LO --output-dir <directory>
xargs --null <string> -nPH <string>
composer install
sudo localectl <string>
sudo unlink python3
tail -n200
kubectl
journalctl -qb <directory>
sudo npm install nativefier -g
sudo timeshift --
curl -L <string> --output <file>
cd <string> -s
sudo installer -store -pkg <file> -target <directory>
read -p <string> -n1 <string>
npm install mocha --save-dev
du -h -maxdepth <number>
screen -s <string>
cut -d"/" -f2-
mvn exec:java -Dexec.mainClass"cs1302.sorting.BubbleSort"
ls -l/
ssh -L <string> -i <string> -p${PASSTHROUGH_SSH_PORT} <string>
perl -ne <string>
curl -F"file=<string> <URL>
sed -e <string> -e <string> -e <directory>
kubectl get svc --all-namespaces
du -sm <string>
reboot -f
sed -ne <directory>
xargs -0 -I{} <string> xf {} -C <string>
sudo nala <string>
find . -mtime -2
cut -d, -f1,5,11,16
ls Downloads -al
ls -alS
perl -l -ne <directory>
sudo yum install httpd -y
git add.
unzip -e <file>
df -t
find <directory> -mindepth <number> -type <string>
sudo ls -l <directory>
gpg --list-keys
awk -F <string>
curl -SL <URL> -o <directory>
grep <string> -rl <string>
apt install --reinstall <string>
xargs rm
cpio -p -d -v <string> <string>
find <directory> -name <file> -print
sudo apt-get install nodejs -y
docker run --network=<string> --name <string> -p <string> -p <string> -e <string>
git stash clear
wc passwd
sudo rsync
sudo ls <directory> --color
find --name=<file>
service apache2 restart
sudo firewall-cmd --reload
ls -lF
df -sh
git clone --bare <string>
git commit -m"commit <string>
git blame -w -M
grep -Eivf <string>
git commit -m"first"
ps -eal
ftp <string>
npm install -S <directory>
git remote --add <file>
sudo ntpdate -d <string>
sudo add-apt-repository ppa:$1 -y
pacman-key --refreshkeys
sudo -u <string> psql
sudo mount --bind <directory>
unset -v <string>
sudo grep --color=<string> -rn <string>
snap install chromium-browser --no-check-certificate
sudo apt-get --install-suggests <string> <string>
sudo curl -s <URL>
yay --save --builddir=<directory>
yarn install -D <string>
npm ERR! node -v <string>
sudo snap install node --classic --channel=<number>
sudo userdel bob
docker-compose kill <string>
wget <URL> -P <directory>
head -40 <string>
npm
sudo git submodule update --init
sudo chown -R --reference=<string> <string>
npm install -D <string> postcss autoprefixer -p
git gc --aggressive
tar -zxf <file>
sudo shutdown -r <string>
git -global
history -w" <string>
apt-get -y <string> <string>
sudo db3_load -T -t <string> -f <file>
apt-get list --installed
wget --no-check-certificate <string>
find $target_dir -name <string>
grep -Pv <string>
ps ax
helm init --tiller-namespace <string>
ps --ppid <string>
sudo -H <string> --version
shuf <file>
sudo auto-cpufreq --install
sed -r <directory> > <file>
dotnet <string>
sudo stop uwsgi
egrep -R <string> <string>
git push origin PTS-578_redirects_not_updating_automatically --force
cut -d"=<string> -f2)
git log --follow --date=<string> --pretty=<string> <string>
sudo nvidia-xconfig -a --cool-bits=<number> --allow-empty-initial-configuration
python3 <file> --image_dir <directory>
ps -aux
tee --help
git rebase --abort
sudo nohup rsync -avzhP --exclude <string> --exclude <string> --exclude <string> --exclude <string>
git remote set-url --push <string>
xrandr --listproviders
git pull --depth=<number> <string>
grep -ir --include <file>
tmux info
sort --unique
ssh-agent
sudo npm install npm@latest -g
git branch --set--upstream-to=<string>
init <number>
sed >&2 -n <directory>
tail -f -n <number>
sudo pacman -S --needed <string> base-devel -y
sudo nmap -sn <string>
du --max-depth=<number> -h <string>
nohup nice sudo -E <directory>
man
apt list --upgradble
du --max <string>
xz
find --help
kubectl create -f <file>
tar -crzf <file>
find Personal -name <file> -type <string> -print0
sudo enable ufw
curl -L --user <string>
sort -k3 <string>
grep -wr <string>
apt-get install -y --no-install-recommends <string>
sudo ls -ltr <directory>
install
service apache2 reload
mount <directory> <directory>
npm uninstall gulp -D
curl -# --upload-file <string>
ag -v <string>
docker history
git log --max-count <number> --pretty=<string> --abbrev-commit --no-merges --decorate <string>
docker-compose up --build
test <string>
xargs -0 <string> -i <string> -e <directory>
sudo useradd <string>
sudo apt install --fix-broken -o <string> <string>
git push origin PTS-720-fix_feature_flag_values_in_Germinator --force
sudo chown --reference=<file> <file>
git stat
ssh-keygen -A
diff --git
sudo python3 -m <string>
git rm --cached <string> -f
sudo dnf -y <string> unzip curl <string>
npm run develop
git branch -0a
rvm --create --ruby-version <string>
grep -vFx -f <string>
ssh-keyscan
sudo systemctl daemon-reload
bash configure --with-freetype=<directory> --disable-ccache
git -m <string>
shutdown
git rev-list --objects --all <string>
sudo npm install -g <string> -f
dpkg --add-architecture <string>
sed -ri <directory> -- <string>
rm -help
curl -X <string> -d <string> OR SELECT <string>
curl -fsSkL <URL>
git commit -m'Cool, <string>
as <string>
ls <directory> -ltr
sudo nohup mongod --port <number> --dbpath <directory> --replSet <string> --smallfiles --oplogSize <number>
sudo docker run -d -p <string> --name <string>
sudo usermod -d <directory>
mvn compile
git push -fu <string>
sudo apt-get autoremove -y
sudo emacs <string>
grep -i <string> -A <number>
read -Ac <string>
curl <URL> -u <string> -d <string>
sudo apt remove -y <string>
docker rm --force <string>
du <directory> -h
code --in-process-gpu\
ssh-agent -s
sudo npx create-next-app --example <string>
sudo apt-get upgrade python3
sudo tar xzf <file>
npm i crypto-browserify --save-dev
find . -empty -type <string> -print -delete
ssh -t <file> tmux new -As0
sudo dpkg --configure -a
docker build --no-cache --force-rm -t <string>
open <directory> --args --remote-debugging-port=<number>
find <directory> -name <file> -type <string> -print <string>
git ls-files --deleted
module --version
tmux set-option -g <string>
tr -c -d <string>
xargs -d'\n' <string> +x
curl <URL> -rs)/prod.list <string>
tmux source
ls <directory> -S
npm run vue --version
kubectl --namespace=<string> <string> <string>
sudo sysctl -q -w <string>
git tag -a <number> -m <string>
git gc --prune=<string> --aggressive
sudo apt-get autoremove
vim -v <file>
screen -x
unzip <file> -d <directory>
awk -v <string>
git remove
journalctl -f
wc -L
sudo git clone <URL> --force
cut -d":" -f2) <string> -d" <string> -f12 <directory>
find <string> -type <string> -name <string> -exec <string> -EHn <string>
du -ch <file>
uname
mkswap <directory>
sudo systemctl restart <string>
kubectl apply -n <string> -f -
sudo tar -xvzf <file> -C <directory>
sed -i <directory>
pacman -Syu
docker push <directory>
pkill -f <string>
docker -v
sudo cryptsetup --type <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
sudo udevadm trigger --subsystem-match=<string>
grep -vn <directory>
sudo adduser --disabled-login <string>
apt-install -y <string> <string>
sudo git remote <string>
python3.9 --version
grep -iC2 --color=<string> <string>
rm bookbot -rf
terraform apply <string>
systemctl enable --now <string>
find . type f -print0
npm install -D <string>
nc-docker <string>
docker-compose cp <string>
sudo chmod --reference <directory>
wget -q -O -http://10.0.0.10:30168
find . -maxdepth <number> -regextype <string> -regex <string> -type <string>
curl <directory> -X <string> -H <string>
git push --all --force
sudo source <string>
sudo apt purge <string>
sudo openssl verify -verbose -CAfile <file>
git clone --single-branch <URL>
rsync --verbose --progress --recursive --compress --links --times --delete <string>
git commit -m"ajout"
psql -h <string> -p <string> -U <string>
mvn eclipse:eclipse -DdownloadSources -DdownloadJavadocs
wget $FLAUNCHER_URL -O <file>
git ls-files --deleted -z
usermod -a -G <string>
sudo pip install -U -H <string>
sudo <directory> --verbose
docker-compose logs edit --follow
rm goxlr-utility -rf
git submodule deinit <string>
find FOLDER -type <string> -delete
sudo apt install wireshark -y
grep <string> -win <string>
git config --unset --global <file>
docker-compose ps
perl --version
sudo chmod --reference==<directory> <string>
wget <URL> --no-check-certificate <string>
sort -h
git commit -n <string>
sudo ldconfig -v
apt --help
sudo <directory> -KW -v <string> -p <string>
python3 <file> <number> --country <string>
sudo n
killall -q -9 <string>
git ls-files -co --exclude-standard
ssh-add <directory>
curl -L <URL> --output <string>
ls -lAF
ssh subnut@10.20.74.166 -T <string> attach
gunzip --decompress <file>
find <directory> -maxdepth <number> -type <string> -exec <file>
du -all --block-size=<string> <string> --max-depth=<number>
rm -rf <string>
npx unlighthouse --site <URL> --urls <URL>
ssh -t <string>
brew link --overwrite --force <string>
sudo sysctl -p --system
git log --full-history <file>
sudo apt-get install ros-indigo-openni2-launch -y
apt-get -f -qq <string>
sudo ps aux
find . -not -path <directory> -not -name <string> -delete
sudo nala --purge <string>
git --versio
bazel run --config=<string> <string>
systemd
git config --system <file>
ls -ls <file>
python2
sudo journalctl -b
sudo <file> --register-app
pacman-key --populate <string>
docker network ls
find . -size -5M
sudo pacman -Sy
sudo -H <string> install -r <file>
pbcopy <string>
curl -L <URL> -s`-`uname -m` <string>
apt-get remove --purge <string>
sudo xhost +
ls -alF -n
xargs -0 -I <string> cat <file> <string>
ls -l,a
local <string>
cut -f1 -d" <string>
tmux -u <string>
du -hs <string>
docker build --build-arg <string> --build-arg <string> -t <string>
gzip --version
wget -t0 -c <string>
unzip -R
sudo curl -L <URL> -s)-$(uname -m) -o <directory>
cd.
git git status
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a
vim -v
sudo date -u --set=<string> -H <string> -sD - <URL>
curl -fSsLo <file>
sudo apt purge lightdm* -y
git submodule add
rsync <directory>
mvn clean package -Dmaven.wagon.http.ssl.insecure=<string> -Dmaven.wagon.http.ssl.allowall=<string> -Dmaven.wagon.http.ssl.ignore.validity.dates=<string>
ls -aF
git commit -a -m'Fix <string>
sudo tar -C <directory> -xzf <file>
grep -i --color <string>
git bash
git difftool <string>
curl -LSso <file>
npm i require-dir-all -f
ls _build
dpkg --control <file>
sudo apt install xrdp-pulseaudio-installer -y
find dotfile -type <string> -name <string>
git clone --depth <number> <URL>
ftp
update -yy
tail -10)
cat --color <string>
git config --global <file> <string> --timeout=<string>
tmux save-buffer -
pulseaudio -v
set
head -1
make clean
apt-cache info <string>
git rm -f --cached <string>
rm -r <string> -v
find imgs -type <string>
docker run -ti --rm -v <directory>
read -p <directory> -n <number> -r <string>
sudo source <directory>
python3 <file> --model <string> --batch_size <number>
node --trace-deprecation
docker exec -e <string>
curl -kL <URL>
npm uninstall -g <string>
npm i lebab -g
sudo chown ankitpati:ankitpati -hR <directory>
tail -$mitad2 <string>
curl -i -u <string>
make -C <string>
sudo apt install curl -y
df -x
read -rsn1
grep -a <string>
find . -name <string> -type <string> -print -prune -exec <string> -rf <string>
sudo apt install flatpak plasma-discover-backend-flatpak -y
cp -pr <string>
git fsck --full
tac <string>
journalctl
sudo -s -u <string> -H
sudo pacman-mirrors -g <string>
head -3) <directory>
find . -mtime <string>
killall -9 <string>
sudo npm list -g
free -m
exec <string>
sed -i -e"s/index <file>
cut -f <number> -d <string>
ls -lah <string>
sudo mv -f <string>
git log -2
sudo nvpmodel -m <number>
git config --globel <file>
sudo make install
rate=<string> -O - <directory>
curl -sKL <string>
sudo make uninstall
pico <file>
git submodule add -b <string>
mkdir -p -m <number>
sudo tar -xzC <directory>
curl -X <string> <URL> -H <string> -H <string> -H <string>
git add . -A
git add --verbose
sudo aptitude install <string>
cd..
curl -fLo <file> --create-dirs <URL>
loadkeys fa
apt-key
sudo lvextend -L <string>
git difftool -y -x <string> <string>
sort -n -r -k2
bash --init-file <string>
ps -AZf
git filter-branch --prune-empty --index-filter <string>
npm install nodemon --save-dev
ls -lAF <string>
git config push --set-upstream <URL>
curl <directory> -o <file>
find . -name <file> -print
apt -yqq <string>
curl -sSfL <URL>
cd -{N} <string>
tr -d <string>
mount -t <string> -o
docker -H <directory>
ls -LR
git commit -am'm'
find <directory> -type <string> -name <string> -prune
du -ah <directory>
du $arg -- <string>
brew install <string>
sudo nvim
npm -v
clear
mv -f <string>
curl -s <URL> -o <directory>
sudo rm -R <string>
aptitude -y <string> <string>
find . -type <string> -exec <string> -r <directory>
find . -type <string> -name <string> -print
ex --help
sudo dnf install <string>
sudo nano -c <string>
df -u
kubectl create -f -
npm ls <string>
pwd --help
xargs -L1 -I'{}' <string> -rE <string>
sudo cmake .. -DPYTHON_MAJOR_VERSION=<number> -DPYTHON_MINOR_VERSION=<number> -DPIP_PLATFORM=<string> -DDS_PATH=<directory>
find . -type <string> -name <string> -exec <string> -r <string>
tail <file> -n <number>
<file> program
date <string>
sudo su chmod <string>
git config --global --list
ls -1Rhs
docker login --password
sudo xbps-install <string>
sudo yum install git -y
sudo git init
npm install express-generator -g
git describe --long
tmux switch-client -c <string> -t <string>
sudo npm install pm2 -g
sudo pacman -Rscn <string>
sudo snap install pycharm-community --classic
cp <directory> -r` <string>
sudo xargs sed -i <directory>
git difftool -y -x <string>
curl <directory> -qO- <URL>
ls -CF <string>
ssh estunnel -N
find <directory> -type <string> -a <string> -perm -u+s -o -perm -g+s <string> -exec <string> -l <string>
ls -l -t <string>
git submodule add <URL> --force
patch
script --help
vim
git branch -u <directory>
nano <file>
npm i --save <string>
git rev-list --reverse --topo-order --parents --full-history --sparse <string>
chown --help
sudo apt update --force
xargs -0 <string> --max=<number> --strip-all --preserve --totals --all-progressive
gpg --search-keys <string>
lsblk -l
else power_discharge=<string> -v <directory> -v <string>
git config --add <file>
sudo dpkg --get-selections <string>
lshw
cut -d'<' -f1 <string>
sudo firewall-cmd --permanent --zone=<string> --add-port=<directory>
git branch -Df <string>
egrep -e <string>
curl -sSLf <string> -o <string>
curl -L <URL>
read -d <string> <string>
sudo apt show <string>
sudo yum -y <string> nodejs
sudo systemctl restart nginx
<file> -r <string> -t <string>
nano -c <string>
sudo dnf install -y <string> --setopt <string>
sudo nginx help
curl -sfSL <URL>
find . -size <string>
rm -i --help
eval <string>
mkdir -m700 <file>
find $BASEDIR -maxdepth <number> -mindepth <number> -type <string>
xargs --no-run-if-empty <string>
git pull -vvv <string>
ls -lA <directory>
find . -type <string> -exec <string> -c <string>
find $dir -type <string> -exec <string> -k <string>
sudo du -x <directory>
git rev-parse --git-dir <string>
grep -Ev <string>
wget --quiet <URL>
git push -um <string>
head -5
sudo apt-get install apache2 -y
git update
xargs -d'\n' <string> -x
sudo unzip <file>
sh -c <string>
sudo pcmanfm
grep -E -5 <string>
sudo lshw -short
git pull --no-commit
sudo apt-get --reinstall <string>
git commit --edit -m"$(git <string> --format=<string> --reverse <string>
apt list --installed <string>
strings hidden_variable -n <string>
wget -q --show-progress <URL> -P <directory>
vim . -NO
grep -a -i -E -o --no-filename <string>
ls -alh
top -h
git clean -fd
find . -name <string> -type <string> -prune -exec <string> -rf <string>
git submodule update --init
sudo apt-get install jenkins -y
sudo gpg --keyserver <file> --recv-keys <string>
git clone --recursive <URL>
sudo zip -r <file>
git commit -m"~"
systemctl help
watch -n0,1 <string>
ls <directory> -ld
tar -x -C <string>
apt-get install --no-install-recommends -y <string>
sudo shutdown -r
cut -d' <string> -f9-
read -e -n1 -r <string>
killall -KILL -u <string>
curl -X <string> -d <string>
docker run -itd <string>
sudo yarn global <string>
tty-clock -c
sudo dnf search <string>
sudo add-apt-repository --remove <directory>
shift
npm instal -g <string>
sudo git push
sudo kill -2 <number>
fzf --info=<string> --print-query --bind=<string>
git push -f <string> <string>
awk -F <string> -v <string>
tail -f <string>
curl -LO <URL> -s <URL>
sudo tcpdump -i <string> <string>
ssh -L <string> -C -N -l <string>
tail -xx <string>
find -i <string>
umask --help
find . -size <string> -a -print -a -exec <string> -f <string> \
ps auxf
xrandr -q
wget --output-document=<file> <URL>
dmd-bootstrap -run <file>
find . -name <string> -type <string>
apt-get remove <string>
sudo light -U <number>
grep -Fx -f <string>
npm list <string>
ps -bg
sudo ntpdate -qd <file>
sudo netcfg -a
nc <file> <string>
git ls-tree -r <string> --name-only
wget -qO- <URL>
sudo systemctl start <string>
column -s <string> -t <string>
du -h -maxdepth-1
npx tslint --config
sudo apt --fix-broken <string> gufw -y
tar -C <directory> -xzf -
sudo apk update
sed -rn -e <directory>
sudo flatpak update -y
<file> -t <string>
yarn add --dev <directory>
git commit --amend --reset-author
curl -so- <URL>
find . -type <string> \( -path <string> -path <string> -o -path <string> -o -path <string> -o -path <string> -o -path <string> -o -path <string>
du -h --max-depth=<number>
rm -v <string> -name <file>
ps -aef
find -mindepth=<number> <file>
sudo apt upate -y
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
find <directory> -type <string> -iname <string> -exec <string> -rf <string>
read -p <string> -r <string>
code --disable-accelerated-video-decode
git reset HEAD -HARD
tail -1
ansible-playbook -i <string> -c <string> <file>
cd OneDrive\ -\ <string>
cut -d' <string> -f3-6)"
find <directory> -iname <file> -o -iname <file>
rmdir -r <string>
sudo useradd -m <string> -s <directory>
git commit -a -m'WIP'
su - <string>
git restore --source=<string> --staged --worktree --source-prefix=<string> <string>
grep <string> -rc <string>
apt-get purge --auto-remove <string>
systemctl status python-validity --user
ls -1 <directory>
git tag -l
sudo chmod -r--r--r-- <string> chmod <string>
sudo apt autoremove
grep -v' <string>
sudo sh -c <string>
find . -name <string> -not -path <directory>
git checkout --
git commit -a -m"login <string>
git add .
lsblk -f
sudo bash <string>
docker exec --tty --interactive <string>
find <directory> -type <string> -size <string>
mkdir --help
sudo nano <string>
git git --help
curl -k -l -s <URL>
git stash help
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
unzip -o <string>
curl -L <directory> -o <directory>
sudo dpkg -i <file>
df -h <string>
cut -d: -f1
fc-cache -fv
dmidecode --help
git co -b <string>
sudo -s -u <file> -H
sudo netstat -lpn
python3 -m <string>
view <string>
grep -Fxn <string>
df -ah
kubectl apply <file> -n <string>
sudo cat <file> <string>
tmux kill-session
tar -xzvf <file>
tmux new-session -d <string>
git config --global <file>
tee <file>
xargs -0 <string> -pi -e <directory>
git commit -m"Abc <string>
grep -A <number> -i <string>
ls -lla
sudo cron status
ps -elf
sudo -E <string> <string>
sudo apt-get remove tex-common --purge\
sudo chown `id -u` <string>
sudo pacman -Suy
dpkg --list <string> - <string>
sudo python -m <string> --upgrade
sudo mysql
find -f <string>
find -iname <string>
kill -9 <number>
git status .
colrm <number>
find . -type <string> -empty -delete
sudo apt-get dselect-upgrade
man --help
sudo update-crypto-policies --set <string>
git diff --cached <string>
rake <string>
git filter-branch --index-filter <string> --prune-empty --tag-name-filter <string> -- --all
xargs sed -i <string> -e <directory>
sudo ls <directory> -a
sudo apt-get remove libapache2-mod-php5 -y
su deployer -c <string>
finger <user> # displays information about user
cp -iv <string>
git push --set-upstream <string> master
git switch -
ssh-keygen -q -N <string>
read -rsn1 -p"Press <string>
tar -C <directory> -xzf <file>
sudo reboot
apt update --fix-missing
sort -k2rn
sudo xbps-instalL -s
python3 <file> runsslserver 192.168.0.53:10006 --certificate <file> --key <file>
sed -i -e"s/#\tinclude <file>
npm install querystring --save
docker run --network=<string> --name <string> -e <directory> -p <string>
npm install swiper --force
ssh-copy-id -p <number>
sudo certbot --nginx -d <file> -d <file>
netcat -w <string>
kubectl get pods --all-namespaces -l <string>
sudo tar -zxvf <file>
sudo yum install -y <string>
screen -X -S <string>
tar -tf <string>
grep -V
find . -type <string> -name <file> -exec <string> -B5 -A10 <string>
sudo <directory> -b
export CFLAGS=<string> -std=<string> -lm"
git clone --shallow <number>
docker-compose --version <string>
git config -l
git help -g
sudo pacman -Fyy <string>
sudo mkdir <directory>
git switch -b <string>
kubectl get pods --all-namespaces
curl -sSL --fail <directory>
cp -ru <directory>
sudo fusermount3 -u <directory>
sudo mount -t <string>
git push -A
chown
sort --numeric-sort --key <string> --key <number> --key <number>
curl <URL> -o <string>
sudo timedatectl set-timezone sudo timedatectl <directory>
php -S <string> -t <directory>
curl -L -o <string>
grep --ignore-case <string>
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
sudo apt-get install libapache2-mod-php7.1 -y
pwd ls
git reset HEAD -- <string>
paste --h
rm -vf <directory>
git commit -a -m -m <string>
docker images ls
git commit --soft <string>
docker system prune --volumes
rm -fr <string>
rsync --verbose --progress --recursive --links --times --delete <string>
sudo pacman -Qs
mvn clean <string>
update
git commit -F <directory>
sudo dnf install rapidjson-devel -y
git coomit -m <string>
ssh -R <string>
curl -sSLO <file>
tar -czvf <file>
sudo ldconfig
sudo useradd -d <directory>
touch dile-`date -I`.txt
git pull origin main --force
adduser test
gpg --keyid-format <string> --keyserver <file> --recv-keys <string>
php <file>
ls=<string> -ld <string>
curl <URL> -u <string> -H <string> -G
rm book.tex\ -\ <file>
apt remove --purge <file>
rm temp -rf
git filter-branch -f --commit-filter <string>
git --git-dir=<string> <string> --format=<string> <string>
dpkg -I <file>
du -sb <string>
git diff --color <string>
podman ps -a
rm -i <string>
git add -n <directory>
sudo find <directory> -type <string> -name <file>
sudo journalctl -u <string> -xe
ssh-keygen -y -f <directory>
mvn -B <string> -DartifactId=<string> -DgroupId=<file> -DarchetypeArtifactId=<string> -DarchetypeVersion=<string>
head -3 <string>
git commit -S -m <string>
sudo chmod a-x <file>
sudo halt <string>
sudo update-alternatives --install <directory>
wget download_url -O <string>
apt update
ruby -run -e <string>
sudo find . -type <string> -exec <string>
git pull -m <string>
python
sudo git push <string>
grep -rsnI --exclude=<string> --exclude=<string> --exclude=<string> --exclude=<string> --exclude=<string> --exclude=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude=<string> --exclude=<string> --exclude=<string> --exclude=<string> --exclude=<string> --color=<string> <string>
login root
sudo npm install -g <string> --unsafe-perm=<string> --allow-root
sudo apt install zsh -y
sudo apt install -f <file>
stat -x <string>
sudo mkfs.ext4 <string>
git filter-branch --force --index-filter <file> --prune-empty --tag-name-filter <string> -- --all
npm start -- --resetCache --active-arch-only
sudo apt install gufw -y
sed -i <directory> -e <directory>
apt-get install vim tmux htop wget curl ufw jq -y
git submodule update --recursive
find . -type <string> -printf <string>
sudo bash <file>
git clone <URL> <string> --depth <number>
git filter-branch --prune-empty --index-filter <string> --tag-name-filter <string> -- --all
script -a <string>
apt update -y
sudo yum-config-manager --add-repo <URL>
sudo -H <string> install --upgrade <string>
cut -f2
git clean -fxd
ls -FR
git config --get <file>
sudo rpm -Uvh <string>
head -$division <string>
docker build
docker build --force-rm=<string> -t <directory>
ls tmux
sudo pacman -Q
sudo rm temp -rf
grep -r -C <number>
set -ex
sudo docker logs <string>
git commit -Am"ind"
sudo make -j4 <string>
sudo find ~ -name <file>
sudo tar -C <directory> -xvzf <file>
ls -ah
sudo sudo -u <string>
xargs -0 <string> --files-with-matches <string>
git commit -m"fixed <string>
script/build.sh
npm i <string>
alias -p
wget <directory> -O <directory>
true
git push --tags --force
sudo apt-get -y -qq <string> vim
wget -O- <URL>
curl -o <string>
tmux --a
tar --help
ls -s <string>
docker-compose logs --follow <string>
find $dir -name <string> -exec <string> -nHP <string>
find . -type <string> -mmin -60 -exec <string> -c <string>
print <string>
grep -nr --color=<string> --include=<file> <string>
egrep -c <string>
touch -a -m -t <string>
xargs git add
ls -laN
npm install netlify-cli -gnpm <string> netlify-cli -gnpm <string> netlify-cli -g
git add <file> -f
git update-index --really-refresh -q <directory>
git rm -r <directory> -f
npx create-react-app my-app --template <string>
sudo fsck -f <directory>
tar -xvcf <file>
sudo pip3 -h
sudo tar xfvz <file> --directory <directory>
code -r <string>
git pull origin main
ip route restore --help
docker container exec -it -w <directory>
lsof -n -i
npm install -g <string>
git clone -q <string>
git diff --color-words
mvn hpi:run -Djava.awt.headless=<string> -Djetty.port=<number>
stat -c <string>
sh -s\
cp -t <string> -a <string>
rm i -R
git tag -f -a <string>
sudo dnf install -y <URL> -E <file>
ls -S
git --no-pager <string> -n <number>
sudo start uwsgi
sudo iptables -I <string> -p <string> -j <string>
sudo sudo lvremove <directory>
docker-machine --version <string>
wc --help
curl -H <directory> --data-binary <file>
git clone --depth=<number> <URL> <directory>
sed -n -e <directory>
openssl req -new -x509 -nodes -sha256 -days <number> -key <file>
tar -cvfp <file>
ls --help
sudo chmod -R --reference=<string> <string>
find -name=<file> <string>
ls -lS
grep --version
git commit -m"updating <string>
tar -cvf <string>
grep -vE <string>
xargs perl -pi -e <directory>
diff -dB <file>
php -S <string>
find . -size -5k
<file> <file>
git push main <string>
python3.11 <file>
tar -f
apt-get install webmin --install-recommends
python3 -
unset
top -n <number>
systemctl status python-validity --usr
diff --help
find . -depth -mtime <string> -execdir <string> -rf <string>
systemctl list-units --type=<string>
perl6 -e <string>
sort -k1gr
cat << -EOF-
sudo apt source pulseaudio
sudo powerstat -d <number> -z
docker run -h
find india -type <string>
journalctl -b -3 -e <string>
sed -rn <directory> -O <file>
sudo chmod -r--r--r-- <directory>
ls -lrt
sudo ifconfig --help
git log --grep <string> -p
sudo pacman -Qdt <string>
du -shx <string>
tee -h
sudo ss -tunelp
git commit -m'Hot <string>
sudo lshw -html <string>
sed -n <string>
git update-index --assume-unchanged <string>
rsync
git filter-branch -f --index-filter <string> -- --all
cron status
git commit -n
tar -xvzf <file>
cpio -pdmv <directory>
ls -rf <directory>
npm create <string>
sudo apt update
screen -S <string>
sudo docker run --restart=<string> --name <string> -d -p <string> -p <string>
tmux new-session -d
find <directory> -type <string> -name <string>
sudo which <string>
sudo lsof -i <string>
ls -lht
sudo netstat -tunlp
sudo chmod 700 <file>
gsettings set <file>
git push --force --tags <string>
sudo mkcert -install
read -ra <string>
sudo dpkg --get-selections
sudo pacman -S <string> --overwrite <directory>
grep -rlI <string>
sudo mount <directory> <directory> -t <string>
less -R -N
sudo cmake --install <string>
ls -lCl
rm -f
docker run -d -p <string> <string>
git update-ref --stdin
xrandr --output <string> --same-as <string>
tmux set-window-option -g <string>
docker run --rm --privileged <directory> --reset -p <string>
sudo apt-get upgrade
sudo scp <file> <directory>
git push --force
nano <string>
cd <string>
sudo shutdown -now
sudo snap uninstall <string>
bash --version
read -r -s <string>
npm install react-native-action-sheet --force
ps -axuwf
find $1 -depth -exec <string> -c <string>
g++ -std=<string> <file> -o <string>
sudo install -t <directory> -D -m <number>
fc-cache -r
sudo certbot --nginx -d <file> -v
hostname -h
info
git commit -m"yyy"
xargs wc -l
strip
sudo fail2ban-client -v -d
<directory> <file> -- <string>
ls -a <string> <string>
ls -lt
ssh -L <string>
rm -ls
watch -n01, <string>
curl -sI <string>
git --git-dir=<string> <string>
sudo code .
npm run coverage
du -h --max-depth=<number> <string>
git brach -a
byobu --help
sudo pacman -Suu
X :1&
git filter-branch --commit-filter <string>
du -ahBM <directory>
wget -c <string> -O <file>
kubectl rollout status deploy 3scale-kourier-control -n <string>
