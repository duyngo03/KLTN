git init
ls
sudo -i
npm install <string>
pwd
ls
codedown javascript > <file>
touch <string>
cat <string>
clear
git remote add origin <URL>
source <file>
git config --global <file> <file>
ls
sudo sed -i <directory> <file>
sudo python3 <file>
vi <file>
git commit -m <string>
ls
npm install -g <string>
cd <directory>
fg
rm <string>
mv <string>
vim <file>
ls
ls
git push origin <string>
cd <string>
git checkout <string>
git clone <URL>
printf <string>
git show --pretty=<string> --name-only
cd <directory>
sudo systemctl disable <file>
exit <number>
bash
journalctl
ls
rm -rf <string>
rm
ls
python3 <file>
git push
pwd
rm -rf <string>
mkdir <string>
ls -l
cp -v <string> <directory>
psql -U <string> -h <string> nzdpu_wis
pkill <string>
vim <file>
ls
less
sudo apt update -y
service apache2 reload
find $dir -type <string>
bash
ls
ls
df -h <string>
vim <file>
git add <string>
clear
clear
fg
man <string>
sudo update-alternatives --config <string>
clear
ls
sudo cp <file> <file>
sh
ls
pwd
pwd
find . -type <string> -name <string>
groups <string>
grep -v <string>
ls
clear
cd <string>
cat <string>
ls
ls -la
vi <file>
npm start
exit <number>
exit
git pull
cd <string>
cat <string>
cd <string>
tail <file> <number>
ls -lah <string>
cd <string>
curl -sOL <URL>
ls
cp <string>
read -rp <string> <string>
sudo apt-get purge <string>
mv <string>
screen
rm <string>
sudo bash curl -s <URL>
grep -R <string>
ps -eal
git config --global <file> <string>
apt install <string>
ls
clear
vi <file>
cd
ls -lh
cd ..
git pull
ls
sudo apt-get install <string>
patch --version
cd..
cd <directory>
fg
sudo python3 <file>
git push origin main
unzip <file>
vi <file>
git pull
sudo pacman -Rcn <string>
cd ..
sudo ln -s <directory>
tail -500 <string>
curl <URL> -o <file>
ls
exit
ping <file>
cd <directory>
bash
ls -al
cd ..
cat <string>
cat <string>
git clone <URL>
find . \( -iname <string> -o -iname <string>
ls
cd -P -- <string>
ls
mkdir -p <string>
rmdir <string>
ssh <string>
vim <file>
fg
git pull
sudo apt-get install <string>
mkdir <string>
ls
fg
exit <number>
sudo apt-cache search <string>
sudo apt-get upgrade -y
cd ..
cp <string>
ping <string>
ls
cd <directory>
sudo pcmanfm
rm <string>
sudo port <string>
sudo stop uwsgi
npm start
cd <directory>
git push
exit
cd <directory>
exit
rm -f <string>
git clone <URL>
cd <string>
lsblk
git add --all
cd <directory>
cd
mkdir <string>
ls
sudo du -a <directory>
git push --set-upstream <string> master
git push
cd <string>
sudo chown <string>
vim <file>
git commit -m <string>
ps axfu
sudo apt get update
sudo python3 <file>
top
git branch -M <string>
ls
cd <string>
tmux kill-session -t <string>
cd <directory>
git clone <URL>
cd <directory>
sudo mv <file>
ls
npm run dev
git clone <URL>
git add .
useradd <string>
bash <file>
vi <file>
ls
cd <directory>
fg
cat <string>
ls
npm run test
go build <file>
ls
read -p <string> -r
git push origin <string>
wget -r <URL>
touch <file>
wget -q -O <file>
grep <string>
sed -i <string>
cd <string>
wget <URL>
git status
sudo motion -n
which <string>
docker-machine env
grep -v <string>
clear
git cat-file -p <string>
ls
git commit -m <string>
cd ..
sudo apt install <string>
sudo systemctl restart <string>
cd <string>
git rm <string>
ls -R <string>
cd <string>
jq <string>
read -p <string>
cd <string>
grep <string>
systemctl restart <string>
fg
vim <file>
sudo lsof -a -i -s <string> -p <string>
mkdir -p <string>
cd ..
type -a <string>
apt-cache policy <string>
sudo sed -i <directory>
vi <file>
git push origin master
wget -O <file>
clear
git status
git pull
sudo apt update
ls
ls
cd <string>
tmux new-session -d <string>
tail -f -n200 <directory>
ls
exit <number>
find . -type <string>
git add <string>
git add .
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
vim <file>
sudo rm -rf <string>
git commit -m <string>
git commit -m <string>
cp <string>
less <string>
unzip <file>
man -k <string>
sh <(curl -sSf <URL>
ls
git init
git reset --soft <string>
sudo sed -i <directory> <file>
sudo python <file>
ls
python3 <file>
clear
git clone <URL>
vi <file>
clear
touch <file>
vi <file>
vim <file>
sudo apt-get remove --purge <string>
brew install --HEAD <string>
rm <string>
php <file>
clear
pwd
ls
ls
chsh -s <directory>
cd <string>
python3 <file>
man <string>
mkdir <string>
mkdir <string>
ls
cd <directory>
cd <string>
vim <file>
env
tee -a <string>
grep -i <string>
ls
fg
ls
sudo rm -rf <string>
cd <string>
docker images
date
exit
sudo chmod -R <number> <string>
git diff master --name-only
cd ..
cat <string>
ls
nano <file>
cd <string>
cd <string>
git status
vim <file>
git adog
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
grep -i <string> >files
sudo easy_install <string>
read -rp <string> <string>
cd <string>
cd ..
grep <string>
cd <string>
ls
yarn add <string>
curl -G <directory>
ls -l
chmod <number> <string>
fg
cd
less
go build <file>
wget -r -A <URL>
ls
ls -al
clear
shutdown -h <string>
open <string>
ls
ls
ls
cd <directory>
ls
git push
python3 <file>
clear
xargs -0 -r -i <string> -a <string>
ls
cd ..
clear
sudo apt update
cd <string>
ls
ls
vim <file>
ln -s <string>
sudo apt install <string>
git add .
fg
rm -rf <string>
sudo apt-get install -y <string>
ls
source <string>
ls
ls
ls
clear
cd <string>
cd ..
clear
ls
curl <URL> -u <string> -d <string> -d <string> -d <string> -d <string>
exit
df
ls
rm -f <string>
touch <string>
ls -las
npm run coverage
less <string>
clear
rm <string>
cd ..
apt update
pwd
ls
chmod -x <file>
ls
kill <number>
ls -la
ls
wget -q -O - <URL>
sudo mysql -u <string> -p --socket=<directory> <string>
cd <directory>
clear
cd ..
cd ..
ls
curl -fsSL <URL>
cd
exit
git config --global <file> <file>
sudo chsh -s <directory>
git commit
ls
vi <file>
read <string>
vim <file>
sudo python <file> --cascade=<file> <number>
ls
git submodule sync
ufw status
ps aux
ls
sudo dpkg --clear-selections
git commit --message <string>
sort
vim <file>
git push origin master
apt-get install ruby1.9.1 - <string>
cd <string>
vim <file>
git init
rm -r <string>
ls
cd <string>
ls
exit
rev
wget --quiet -O - <URL>
read -p <string>
ls
vim <file>
git add
clear
sudo kill <number>
ls
mv -v <string>
cd <directory>
git add <string>
nano <file>
git init
grep -n <string> <directory>
clear
history # shows command line history
ls
clear
exit <number>
ls
sed -i <string> -e <string>
cd <directory>
cd <string>
git commit
ls
exit
apt-get install <string>
cd ..
vim <file>
du -h --max-depth=<number>
vi <file>
cd ..
git init\
ls
vi <file>
killall <string>
open .
ls
ls
head -n <string>
git config <file> <file>
cd <string>
rm <string>
hg <string>
ls -alrt
sleep <number>
kubectl --namespace <string> <string>
nano <file>
history -a
wc
sudo apt-get install -y <string>
git push -u <string> master -f
clear
sudo apt upgrade -y
read -p <string>
git push
rvm <string>
mv <string>
cd ..
done
pwd
which <string>
ls
ls
ls
wget <URL>
ls
cat <string>
git init
ls
vi <file>
sudo lpoptions -d <string> -l
apt install -y <string>
git commit -m"update"
fg
mkdir <string>
curl -o- <URL>
mv <string>
clear
git rebase <string>
grep <string>
git commit -m <string>
sudo apt install <string>
git push -u <string> master
sudo mkdir <directory>
docker run --rm -it <string>
git push origin master
cat <string>
sudo sed -i <directory> <file>
clear
exit <number>
vi <file>
cd <directory>
clear
grep <string>
ls
ls
cd <string>
sudo chmod +x <string>
vim <file>
ls
sudo apt-get install -y <string>
cd <string>
ls
clear
clear
git init
perl -ne <string>
chmod
which <string>
ls
ag -v <string>
git commit -m"fakedata <string>
cd <string>
read -r <string>
ls -l
sudo make install
git pull
ls
git commit -m <string>
cd <string>
chmod <string>
rm -r <string>
tar -czf <file>
git push
man <string>
git commit -m <string>
ls
cd ..
ping <string>
nano <file>
cd <directory>
vim <file>
cd <directory>
sudo kill -9 <number>
git bisect good
code <string>
exit <number>
docker-compose logs
cd <string>
htop
cd <string>
sudo nvpmodel -m <number>
exit
fg
cat <string>
fg
cd ..
git status
cd ..
cd ..
ls
exit
ls
cd ..
clear
clear
setg RHOSTS.*
ls
ls -a
ls
cd ..
fg
ls -a
cd <string>
cat <string>
git difftool <string>
ls
cd <string>
git add .
then\
ls
rm -rf <string>
npm install <string>
sudo apt-get purge <string>
clear
cd <string>
tee -a <string>
cd <directory>
ls -f
rm <string>
sudo service <string>
udevadm info <directory>
npm start
dir
exit
ls -l
git add <string>
mkdir <string>
git checkout <string>
rm <string>
npm-recursive-install
cd <string>
su -root
git status
ls
touch <string>
go test
bash <file>
ls -la <directory>
clear
rm <string>
exit <number>
ls
cd <string>
rm -rf <string>
git add .
nano <file>
touch <file>
exit
cd ..
clear
cd <string>
cd <string>
git checkout -b <string>
curl -fLso <file>
history
ls
ls
mkdir -p <string>
ln -s <string>
sudo sed -i <directory> <file>
ls
cd <directory>
git branch
ssh <string>
rm -f <string>
git commit -m <string>
head -1
vim <file>
rm -f <string>
exit <number>
vi <file>
cd <directory>
vim <file>
git status
cd <directory>
ls
ssh <string>
docker exec -it <string> bash
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
sleep <number>
git log --graph
grep -m <number> -v <string>
ps axr -o <string>
more <file>
print <string>
touch <string>
clear
ls
cd <string>
cat <string>
python3 <file>
pwd
ls
sudo stop uwsgi
cd <directory>
fg
find . -name <string> -type <string> -print -delete
sort -g
sed -i <directory>
sudo docker rm corrade
cd ..
grep <string>
npm install <string>
wget <directory> -O <string>
git remote -v
vi <file>
vim <file>
ps ax
vim
cd ..
nano
git push
vi <file>
git pull
git commit -am <string>
cat <string>
grep <string>
git add .
uniq
git stash
rm <string>
curl <string>
ls
sudo npm i lebab -g
ls
ls
ls
python3 <file>
git
screen
git commit -m <string>
git checkout <string>
rm -rfv <string>
clear
apt-get upgrade -y
ls
git status
docker rmi <string>
cd <string>
man <string>
ls
mv <string>
sudo service <string>
mkdir <string>
cat <string>
vim <file>
nano <file>
dpkg -i <file>
ls
wc -l <string>
ls
cd ..
make clean
git status
exit
ls
ls
git diff <string>
aptitude -y <string>
git add .
history -a
nano <file>
exit <number>
clear
ls
wc -l
bash
cd ..
tail +x # want to display all the lines from x to y. This includes the xth and yth lines.
ls
sudo docker kill corrade
clear
npm run bench -- -c <file> -n <file>
sudo apt update
ls
cat <string>
ls
git add <string>
ls
sudo do-release-upgrade
cd <string>
cd
ls
yarn add -D <string>
sudo snap install <string>
cd <string>
gsutil cp <file>
xargs -n1 -P4 -I{} <string> a -mx=<number> <directory>
ssh <string>
sudo chmod <number> <directory>
git format-patch -n --stdout <string> -- <string>
tail -f <directory>
fg
git fetch upstream
cd <directory>
git add .
git push
ls
mkdir <string>
mkdir <string>
nano -f <file>
shutdown -r <string>
ls
sudo ls <directory>
cd ..
mkdir <string>
ls
ls
cd
apt-get install <string>
cd <string>
ls
exit
cat <string>
vim <file>
cd ..
cd
mysql -p <string>
cd <directory>
reboot
sudo systemctl restart nginx
cd <string>
sudo apt purge <string>
cd <directory>
cd
rm -rf <string>
bash
sh -c <string>
ls
curl -L <URL> -o <directory>
shutdown -h <string>
cd <string>
ls
tmux new -s <string>
read <string>
git fetch origin
cd <directory>
git commit -m <string>
grep
git clone <URL>
docker-compose up
exit <number>
vim <file>
ls
pwd
rm -rf <string>
mkdir <string>
clear
cd <string>
ls
ln -T <directory>
ls
ls
vim <file>
git pull
ls
cat <string>
sudo reboot now
exit
git merge <string>
rm -rf <string>
sudo vi <directory>
git diff
top
top
sudo mount <directory>
git add <string>
git remote set-url <string>
exit
apt-get autoremove
ls
cat <string>
sed -i <string>
npm start
tmux --version
bash
git pull
git init
nano <string>
vim <file>
git status
git clone <URL>
find <directory> -name <file>
cd <string>
touch <string>
vi <file>
source <string>
ls
ls
ps aux
apt install -y <string>
wget
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
sudo apt install <string>
git remote -v
sudo dpkg --configure -a
cd <string>
npm install -g <string>
ls
docker run -v <directory> -w=<directory> -p <string> --rm -it <directory>
cd <string>
cd <directory>
git config --global <file> <file>
clear
ssh <string>
cd <directory>
sudo mv <string>
ls -lhat
sed <directory>
npm i
sudo poweroff
sudo kill -9 <number>
which <string>
git push
vim <file>
cd <string>
clear
npm run test
vim <file>
git add .
vi <file>
cd
ls
cd <string>
cd <string>
git reset <directory> --hard
git reset --hard
cd <string>
cd <string>
code .
cd <string>
npx tailwindcss init -p
clear
sudo chmod +x <string>
git push -u <string> master
ls
rm <string>
python3 <file>
ls
vim <file>
sed -i <directory>
ls
wget -q -O <file>
git commit -m"update"
ls
ls -la <directory>
time go run <file>
git clone <URL>
history -r <string>
ls
cd <string>
exit
git add <string>
cd <string>
git remote -vv
git log
clear
do\
ls
sudo nmcli con <string>
cd <string>
git push
ls -altr <string>
print <string>
cd <string>
git remote add origin <URL>
git rm --cached <string>
cd <string>
cd <string>
sudo dpkg -i <file>
docker-compose up -d --build
cd <string>
cd <directory>
sudo apt-get update
git filter-branch --env-filter <string>
git fetch
ls
ls
sudo -i
git config --global <file> <file>
git pull
git clone <URL>
ls
sudo apt install <string>
ls
git stash
ps -auxwf
bash
sudo service <string>
git add <string>
docker --help
git stash
ps aux
git add <string>
ls
cd <string>
sudo sed -i <directory> <file>
sed -E -e <directory>
git stash pop
go
python3 -m <string> install <string>
ls
python3
git status
git push origin <string>
clear
export <string>
sort -u
cd <directory>
cp <string>
cd ..
mkdir <string>
git config <file> <string>
ls
su -
vim <file>
unzip -zst <file>
git grep -F <string>
ls
ls
xargs -L1 <string>
python3 -m <string> venv
curl -fsSL <URL>
cd <string>
exit
rm <string>
git commit -m <string>
git diff <string>
sudo su
ls
docker ps
export <string>
ls
git commit -m <string>
grep -v <string>
ls
git add
cd ..
read -d <string> -r -e -u <number>
ls
ls
sudo updatedb
kill <number>
ls
clear
ls
cd
git add <string>
htop
touch <string>
local <string>
grep <string>
git pull
ls
su -{user} <string>
ls
git add <string>
rm -r <string>
read -r -p <string>
rm <string>
screen
git status
git add .
git remote remove origin
ls
exit
nc <number> <number>
npm start
git remote add ls
cd <string>
ls
sudo apt-add-repository <directory>
git clone <URL>
source <directory>
sudo mkcert -cert-file <directory> -key-file <directory>
git commit -m <string>
git pull
git push
read <string>
df
sudo apt-get install <string>
wget <URL>
git config --list
grep -i <string> >files
cp <string>
git push -u <string> main
fg
ls
sudo apt-key add -
npm run dev
sudo chown -R <string>
fg
docker build -t <string>
ls
cd <string>
ls
git hist
emacsclient --alternate-editor=<string> -nw <string>
export <string>
xargs -0 <string> -iH --color=<string> <string>
find . -maxdepth <number> -name <string> -exec <string> <string>
sudo apt install <string>
clear
cd <string>
sudo addgroup <string>
finger <user> # displays information about user
rm -rf <string>
clear
exit
curl <string>
sudo pacman -S <string>
find <directory> -type <string> -name <string>
exit
find . -iname <file> -exec <string> -H <string>
docker ps --size
clear
ls
ls
ls
vi <file>
cd <string>
git status
git config --global --unset <file>
git push origin main
exit <number>
git commit -m <string>
node <file>
cd <directory>
git branch -M <string>
git add .
git init
systemctl --user <string>
cd <directory>
git clone <URL>
vi <file>
exit <number>
sudo chmod <number> <directory>
rm -rf <string>
exit <number>
git commit
grep <string>
git remote set-url origin <string>
git branch --help
cd ..
sleep <string>
find . -name <file> -type <string> -print -delete
cat <string>
clear
git checkout
git push -u <string> master
cd <directory>
clear
<directory> <string>
git add <string>
git commit -n
cd ..
cd <string>
cd <string>
wc -l
cat <string>
ls -a
mkdir <string>
sudo stop uwsgi
git commit
exit
scp <string>
nano <string>
cd <string>
git add .
cd <string>
exit
sudo python3 <file> install
git log --pretty=<string>
ls
git commit
ls
mkdir -p <string>
tmux set-option -g <string>
docker ps
cd <string>
sudo apt install <string>
vim <file>
ls
ls
sudo lsof -a -i -s <string> -p <string>
sudo nohup mongod --fork --logpath <directory>
vim <file>
git status --porcelain
curl <string>
git add <string>
git status
git commit -m <string>
sudo apt-key add -
sudo apt-get update -y
ls
cut -f <number> -d <string>
ufw --man
ls
vi <file>
tail -f <directory>
ls
vi <file>
sudo apt-get install <string>
git clone --depth <number> <URL>
ls
date
cat <string>
git commit -m <string>
awk <string>
npm install -f
ps aux
ls++ -a
rm -rf <string>
curl <URL> -u <string> -D <string> -X <string>
node
rm -r <string>
git diff <string>
ls
cp -v <string>
git init
fg
git status
unset color_prompt force_color_prompt
ls -la <directory>
grep <string>
killall
read -r <string>
shutdown
vim <file>
ls
npm install -D <string> postcss autoprefixer
docker start postgres-container
cd..
git config --global <file> <string>
ls
sed <directory>
make clean
rm -r <string>
ls
wget <URL>
clear
git branch -D <string>
rm -rf <string>
history -r
mv <string>
a ! href <string>
nano <string>
sed -i <directory>
grep <string>
cd ..
clear
ls
cd ..
sudo sed -i <directory> <file>
rm -f <string>
ls
kubectl --namespace <string>
cp -r <directory>
cd
ls
clear
sudo lvcreate -l <string>
ls
apt update
find . -empty -type <string> -print -delete
cd <string>
cd <string>
cd <string>
git clone <URL>
ps -ef
read -p <string>
less <string>
git config --global <file> <string>
history # shows command line history
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git status
rm -rf <string>
ls
cd ..
npm start
vim <file>
ls
rm -R <string>
ls
ls
cd
true
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
git add .
ls
grep -rE <string>
git pull
sudo yum install <string>
clear
awk <string>
ls
vi <file>
ls
xclip
vim <file>
clear
cd <directory>
chmod <string>
ss
mkdir <string>
sudo su
ls
rm <string>
ls
cd
vi <file>
ls
git push
sed -e <string> -e <directory> -e <string> \
sed -E -e <directory>
ls
ls
pico <file>
git config --global <file> <file>
git push
ls
ls -a
ls
ls
cp -r <directory>
ps aux
exit
ls
git checkout <string>
sudo apt install <string>
git init
ls
cat <string>
tar -cvpf <file>
git checkout <string>
rm -r <string>
git pull
sudo nano <directory>
ls
set <string>
cd <string>
git add .
diff -u <string>
cd <string>
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
git remote add origin <URL>
clear
cd <string>
ls
exit <number>
cd <string>
rm -rf <string>
sudo vim <directory>
cd <string>
cd <string>
git pull
ls
mv <string>
sudo -s -u <string> -H
git add .
cut -d' <string> -f9-
nano <file>
rm <string>
<file> - <number>
rsync <directory>
touch <file>
git add -p <string>
docker rm <string>
cp <string>
ls
usermod -aG <string>
sudo systemctl start <string>
cd <directory>
alias <directory> -c <string>
exit
chmod -v <string>
ls
git checkout <string>
ls
which <string>
ls
exit
curl -O <URL>
vim <file>
sudo apt install -y <string>
chmod +x <string>
ls
cd
git commit --amend --no-edit
ls
ls
python3 <file>
ls
ls
docker -ps
ls
ls
cd <string>
ls
sudo sed -i <directory> <file>
cd
ls
ps auxww
git pull origin main
cd <string>
git config --global <file> <string>
cd <directory>
mkdir <string>
cd <directory>
ls
sudo reboot -h <string>
unset color_prompt force_color_prompt
git push origin master
ls -la
cd <string>
cd <string>
ls
curl <string>
npm install
tail -f -n200 <directory>
clear
reboot
ls
touch --help
git status
cat <string>
sed -ri <string>
wget <URL> --no-check-certificate
ls
ls
git clone <URL>
ls
git add .
cd
ls -la
ls
clear
cd <string>
sudo apt-get install <string>
ls
git log --grep <string> -p
cd <string>
wget <URL>
done
exit <number>
git stage <string>
clear
sudo mysql
vim <file>
git checkout <string>
cd <string>
done\
ls
ls
rmdir <string>
git clone <URL>
git commit
python3 <file>
cat <string>
git status
ls
git push origin
uniq -c
npm
git status
ls -lh
head -n <string>
cd <string>
cp -R <string>
curl <string>
git add .
git pull
ls
df -lh
rm -rf <string>
rm <string>
curl -I <URL>
clear
cd <string>
ls
git add .
sudo sed -i <directory>
apt-get install <string>
cd ..
python3 <file>
git remote add origin <URL>
ls
pwd -P <string>
ls
git status
ls
git pull
sed -i <string>
sudo stop uwsgi
ls
ls
git remote add origin <URL>
ls -la <directory>
done\
git status
clear
done
cd <string>
clear
sudo fallocate -l <string>
git checkout <string>
fg
ssh -t <string>
sudo swapon <directory>
wget -O - <URL>
clear
docker-compose logs --follow <string>
rm -rf <string>
exit
git config --global --edit
npm start
docker push <directory>
cd <string>
ls
grep -n <string>
cd <string>
ln -s <string>
vi <file>
wget <URL>
git st
git add .
ls
cd ..
openssl rand -hex <number>
tee <file>
docker images
exit
sudo mkdir -p <directory>
ls -l
cat <string>
git clone <URL>
cd <directory>
ls
mkdir <string>
ls
sudo sed -i <directory> <file>
git add .
cd <string>
pacman -S <string>
df -a
git reset --hard <string>
exit
vi <file>
cd <string>
brew install <string>
ls
cd <string>
cd <string>
ls
cp <string>
ls
rm <string>
then\
git init
vim <file>
ls
vim <file>
ls -ltr
cd <directory>
shutdown -hP <string>
cut -d <string> -f2-
ls
npm start
git commit -am <string>
perl <file>
vi <file>
git add <string>
cd <string>
ls
npm install --save-dev <string>
more <file>
ls -l
sleep <string>
vim <file>
git add .
cd ..
cat <string>
python3 <file>
sudo wget <URL> -O <directory>
sort -n
ps -ef
vim <file>
ls
exit
nano <file>
ls
find . -iname <file> -exec <string> -H <string>
ls
rm <string>
g++ -std=<string> <file> -o <string>
ls -l
git status
cat <string>
git init
git checkout master
find . -name <file> -type <string> -print -delete
git push -u <string> master -f
gnuplot -p -e <string>
yay -S <string>
ls
ls
unset -f <string>
git status
read -p <string>
clear
npm install
npm install
sudo chown -R <string>
ls
exit <number>
exit
docker container ls
sudo apt install <string>
cd <string>
ls
git add .
vi <file>
cd ..
cd <string>
npm i sass -D
cd <directory>
docker-compose logs
git clone <URL>
uniq
ls
ls
curl <string>
rm -rf <string>
find <directory> -name <string> -delete
git push -f
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
alias <string>
chmod u+x <string>
pwd
git add -A
ls ..
find . -type <string>
xrandr
vi -t <string>
tmux
kubectl get <string>
git pull
rm -rf <string>
curl <string>
git push
clear
cd <directory>
ssh <string>
uniq -c
which <string>
git restore <file>
read -r <string>
ssh -T <file>
git commit -m <string>
vim <file>
ls
docker images
ls -al
ls
rm <string>
cd
cd <string>
ls
grep <string>
git clone <URL>
ls
uname -a
git status
cd <string>
unset <string>
ls -1
cp -r <directory>
cd -
npm install
npm run register
find <directory> -iname <file> -type <string> -exec <string> -c <string>
cd <string>
cd <string>
vim <file>
export <string>
mount -t <string> overlay -o <string>
ls
ls -la
grep <string>
cd ..
exit
sudo tee <directory>
npm run test
ls
cd <directory>
ls
mkdir -p <string>
npm install
cd <string>
ls
ls
nano <string>
git config --global <file> <string>
ls
grep <string>
<directory> <directory>
ls
sudo ls
clear
sudo lighty-enable-mod <string>
ls
exit
cat <string>
tar zxvf <file>
ls
git commit -F <directory>
ls
ls
vim <file>
ls
ls
git diff
cd <string>
curl <string>
sudo python <file>
python3 <file>
source <file>
vim <file>
git add .
cd <string>
ls
rm -rf <string>
sed -i <string>
ls -a
fg
vim <file>
grep -i -a <string>
ls
scp <string>
export <string>
ls
exit <number>
python3 <file>
dpkg -l <string>
passwd
cd <string>
cd <directory>
cd ..
ls
git commit
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
sudo sed -i <directory> <file>
ls -la
clear
yarn <string>
apt-get -y <string> <string>
git pull
wc
vi <file>
ls -a
sudo apt-get install -y <string>
git commit
touch <string>
cat <string>
git status
fg
cat <string>
man <string>
cd ..
git commit -m <string>
curl -s -F <string>
sudo zypper se <string>
chmod +x <string>
cd <directory>
wget -r <URL>
ls
ls
cd ..
sudo nano <directory>
exit
docker push <directory>
ls
git status
git init
cd ..
grep -E <string>
ls
man <string>
sudo rm -r <string>
git push origin master
rm -r <string>
rm -r <string>
ls
cat <string>
git status
cd ..
systemctl stop kubelet
git co master
cd ..
sudo chmod -R <string>
ls
cd <string>
git add <string>
git init
cut -f2- -d' <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
sudo ifconfig en0 ether <string>
find . -name <file>
terraform <string>
ls -la
rsync -a <string>
cat <string>
kubectl apply --filename <file>
chmod u+x <string>
sleep <number>
git fetch
cd <string>
git cm -m <string>
cd
git --version
fg
ls
cd
ls
cd
ls
find $dir -type <string>
npm update
cd <string>
find . --name=<file>
systemctl enable <string>
usermod
ls
kubectl create -f -
sudo apt-key adv --recv-keys --keyserver <string>
exit
cd <string>
git add .
cat <string>
mv <string>
git add .
vim <file>
cat <string>
ls
grep <string>
git remote add origin <URL>
rm -rf <string>
less <string>
clear
git fetch
cd ..
reboot
ls
man <string>
rm -r <string>
sudo apt-get install <string>
cd ..
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
git add .
ls
vi <file>
git push
mkdir <string>
exit <number>
rm <string>
ls -a
sudo aptitude purge <string>
sudo apt-get autoremove -y
fg
cd <string>
sudo strace -p <number> -o <file>
rm <string>
cd <string>
vim <file>
vi <file>
git remote add origin <URL>
cp -t <directory> -a <directory>
ls
cd <string>
git clone <URL>
git init
ls
vim <file>
top
chmod +x <string>
kill
exit <number>
docker pull <string>
clear
mkdir <string>
ls
w
htop
ls
sed -i <directory>
sudo chmod +x <directory>
ssh -t <string>
vim
git commit -m <string>
script/build.sh
man <string>
nano <file>
ls
cat <string>
chmod <string>
vi <file>
git push -u <string> master
fg
cd <string>
ls
lsof -i <string>
git commit -m <string>
git commit -m <string>
ls
ls
rm -rf <string>
ls
ls
tmux
mkdir -p <string>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
sudo su
ls
ssh -p <string> user@host # connects to host on specified port as user
git pull
find -name <string>
mkdir <string>
export <string>
cd <string>
sudo apt-get update
sudo reboot
sh <file>
cd
cd ..
sudo yum install <string>
clear
vi <file>
sed <directory>
cd <string>
nano <file>
sudo apt-get install <string>
<file> --h
clear
tar xvf <file>
history
ls -ltr
ls
mkdir <string>
npm install
ls
ls -a
ls
rm <string>
rm -R <string>
curl -v --data <string>
cd <string>
vim <file>
vi <file>
cd <string>
vim <file>
cd ..
sudo apt update
ls
git add <string>
sudo chown <string>
code .
pwd
cd <directory>
cd <string>
vi <file>
fg
mkdir <string>
reboot
clear
rm -rf <string>
systemctl
ls
cd
sudo cat <string>
sudo sed -i <directory>
cd ..
man <string>
git push origin master
fsck
ls
git push origin master
sudo python <file> --cascade=<file> <number>
exit
apt --help
clear
bash
journalctl -xe -b <number>
cd <string>
python3 <file>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
fg
ssh dirlic@10.18.0.39 -p <number>
rm -rf <string>
fg
git status
npm install <string>
git push -u <string> main
git remote add origin <URL>
curl -s <string>
vim
vim <file>
chmod +x <string>
cd <directory>
ls
ls
cd <directory>
git add -a
ssh <string>
npm install
grep <string>
sudo dhclient <string>
exit
git pull origin master
cd <string>
vim <file>
sudo cat <file> <string>
vim <file>
ls
git add .
ls
grep <string>
git push -u <string> master
date
clear
sudo rm -rf <string>
vi <file>
more <file>
git commit -am <string>
cd <string>
git status
git st
npm install markdown-magic --save-dev
cd <string>
sudo systemctl restart <string>
fg
apt-get autoremove
history
cd ..
git push -u <string> master
mkdir <string>
nano <file>
ls -l
fg
clear
vim <file>
sudo pip install <string>
git clone <URL>
sudo apt-get autoremove
clear
mv <string>
ls
brew services info <string>
vi <file>
cd <string>
sudo ufw allow <string>
git commit -m <string>
cd ..
git checkout <string>
cd ..
git push -u <string> master
docker-compose logs --follow <string>
source <directory>
mkdir <string>
cd <directory>
cd <directory>
sudo vim
ls
sudo systemctl reload <string>
cd <string>
cd <string>
grep <string>
sudo apt-get autoremove
cd <string>
sudo gpg --dearmor -o <directory>
cd <directory>
sudo systemctl stop <file>
ls -alF
curl -LSso <file>
printf <string>
git status
cd <string>
git push -d <string>
sh <file>
rm <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
cd <string>
tmux
egrep <string>
sudo systemctl stop <file>
du --max <string>
rm <string>
ls
cd..
ls
cd ..
ls
git add <string>
ls
cd <directory>
vim <file>
then
read -rp <string> <string>
git hist
cd <directory>
git
ping
ls -la <directory>
find <directory> -name <file>
clear
cd ..
ls
ls -lh
sh
ls
wget --recursive --level=<number> --no-directories --no-host-directories --accept <string>
sudo stop uwsgi
exit <number>
cat <string>
git push origin master
pwd
sudo yum install -y <string>
sudo rm <directory> -rf
cat <string>
grep <string>
ls
sudo apt-get install -y <string>
git push -u <string> master
curl -o- <string> -o- <URL>
git add .
git commit -m <string>
cp -v <string> <directory>
cd <string>
cd ..
top
git push
clear
cd ..
history -c
git status
sleep <string>
exit
nohup <string>
exit
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
sudo pip install <string>
ls
ls
git init . --quiet
view <string>
ls
ls -la
ls
cd <string>
nano <string>
cd <string>
curl <string>
grep <string>
ls
code .
cd <directory>
ls
ls
cd <string>
sudo sed -i <directory> <file>
read -p <string>
git pull origin main --force
time go run <file>
head -y <file>
ls
git status
cd <string>
ls
git add .
git pull
exit
git add <string>
cd <directory>
fg
clear
less <string>
ls
cd <string>
uname -i
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
cd
ls
sync
git pull
read -n <number> -s -p <string>
exit
git add <string>
sudo su
npm i
head
cd ..
grep <string>
docker ps --format <string>
wget <URL>
ls
git status
cd <string>
docker kill <string>
exit
ps
vi <file>
git checkout --orphan <string>
clear
git log
column -c3 -s <string> -t
ls
git add .
sudo reboot -h <string>
fg
ls
su root
ls
sudo sed -i <directory>
vim <file>
export <string>
sudo node <file>
git status
clear
touch <file>
sudo sed -i <directory> <file>
cd ..
git commit -m <string>
pwd
sudo yum install wget -y
git commit -m <string>
wget <URL>
sudo systemctl stop <string>
npm install
mkdir <string>
cd <string>
chmod <number> <string>
cd <directory>
cd <string>
ls -l
sudo systemctl restart <string>
git push -u <string> master
ls
pwd
wget -O <file>
npm install --save-dev <string>
mkdir <string>
python3 -
ssh -t <string>
ls
npm install -g <string>
grep <string>
chown <string>
ls
git pull --merge
host <string>
cat <string>
sudo ln -s <directory>
cd ..
sudo update-rc.d -f <string>
git clone <URL>
git add .
chmod <number> <string>
cd <string>
ls
npm init -y
ls -laSh
git rebase --onto <string>
ls
chmod <number> <string>
open .
git status
clear
awk <string>
cd <string>
cd <string>
cd <string>
wget -q -O <file>
npm install -D <string>
wget <URL>
git init
ls
ssh <string>
cd <string>
ls
git push origin main
git status
rm <string>
ssh <string>
ls
cat <string>
ls -la
ls++ -a
sudo dnf install -y <string>
wc -l
cd <directory>
source <directory>
cd <string>
npm run start
npm start
ls
grep -a <string>
sudo apt yt-dlp -U
cd <directory>
vim <file>
exit <number>
git gc --aggressive --prune-empty
cd <string>
ls++ -a
cat <string>
ls
wget <URL>
git push
vim <file>
date
git status
sudo apt install <string>
sudo apt-get source neovim -t <string>
curl -fsSL <URL>
tail -f <string>
ls
cd ..
cp -r <directory>
sudo certbot certonly --manual --preferred-challenges <string> -d <file> -d <file> --key-type <string>
git log --name-only --oneline
ps axfu
source <string>
find . -name <string> -type <string> -printf <string>
sort -u
exit <number>
sudo rn -rf <directory>
cd
xargs grep <string>
ls -l
cd <directory>
cd ..
fg
ssh dirlic@10.18.0.39 -p <number>
cd <string>
rm -rf <string>
exit
curl -sS <string>
exit <number>
clear
wget <URL> -O <file>
ssh dirlic@10.18.0.39 -p <number>
cd <string>
sudo apt get <string>
chmod <string>
rm -rf <string>
ls
vim <file>
sudo apk add <string>
vim <file>
read -p <string>
git pull origin development
git status
sudo apt install <string>
cd <string>
cd ..
ls
ls
cd ..
cd ..
npm i <string>
apt list --installed
git add .
vim <file>
ls
unset color_prompt force_color_prompt
ps -eal
cd <string>
pwd
rm <string>
exit <number>
cd ..
nano <file>
git clone <URL>
cd <directory>
screen
vim <file>
cd -
clear
git init
git branch
cp <string>
rm -rf <string>
vim <file>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
less -N <string>
ls
chsh -s <directory>
ls -l
ls
ls -al
clear
ls
git init
cd ..
git pull origin <string>
open .
git add .
mv <string>
cd <directory>
cd
ls
sudo nginx -t
git init
xargs -0 -I <string> cat file <string>
open <string>
ls -al
ls
sudo systemctl reload <string>
vim <file>
ls
ps -ef
sudo usermod -G <string>
python3 <file>
cd
ls
su - <string>
cd <string>
sudo vim <file>
cat <string>
sudo apt-get install <string>
ls
cd ..
git pull
ls
git diff <string>
git add .
ls
cd <string>
clear
cp -R <string>
cd <directory>
chmod +x <string>
git status
git commit -m"update"
git add <string>
more <file>
grep -i <string> >files
ls
git commit -m <string>
ls
git add .
ls
grep <string>
cd <string>
ls
read <string>
vim <file>
vi
unzip <file>
git pull origin master
cd <string>
exit
ls
cd <string>
ls
hg <string>
ls
kill <number>
ls
cd <string>
yarn --force
bash
cd <string>
sudo apt-get install <string>
apt install <string>
git remote add origin <URL>
sudo hostname <string>
npm install <string>
cd <directory>
ps
cd <string>
git clone <URL>
sudo sed -i <directory> <file>
cd <directory>
cd ..
htop
wget -O <file>
git clone <URL>
cd ..
cd <string>
cp <string>
touch <file>
vim
sudo curl <URL>
ps axfu
ls
exit <number>
ls
vim <file>
curl -sS --fail <string>
ls
strip --strip-all <string>
ls
vim
python3 <file>
cd ..
time go run <file>
rm -rf <string>
vi <file>
sed -i -e <string>
curl <string>
npm run dev
ls
sudo sed -i <directory> <file>
ls
rm -r <string>
mkdir <string>
su root
find . -empty -type <string> -print -delete
find . -type <string> -iname <string>
npm install <directory> -D
sh
cd
service apache2 reload
do\
tmux kill-server
npm install -g <string>
git clone <URL>
git pull
rm -rf <string>
sudo apt install <string>
ls
cd ..
cd ..
wget -O <file>
npm test
ls -l
sudo nano <string>
ls
exit
vim <file>
mv <string>
cd <string>
exit <number>
cd <string>
sudo npm install -g <string>
exit
ls
unset <string>
git remote add origin <URL>
cd ..
exit
ls -alrt
cd <string>
sudo umount <directory> -f
git revert <string>
cd
git clone <URL>
ls
fg
cd <string>
git status
then
git add -A
cd <string>
sed -i <directory>
sudo su
git branch
source <file>
git status
exit <number>
cd ..
pwd
nano <file>
fg
ls
sudo sed <directory> -i <directory>
grep -v' <string>
cat <string>
sh -c <string>
cat <string>
git add .
ls
clear
ssh dirlic@10.18.0.39 -p <number>
cd <string>
git status
cd <string>
sudo nano <file>
done
cat <string>
ls
vi <file>
cd <directory>
git add <string>
cd <string>
git add --all
cd <directory>
sudo apt-get -y <string>
less <string>
git push
ls -la <directory>
git pull origin master
sudo unzip <file>
git log
git clone <URL>
cd <string>
fg
ps aux
ls
ls
reset
sudo sed -i <directory> <file>
cd <directory>
find . -empty -type <string> -print -delete
ls
mv <string>
cd
ls
ls -alrt <string>
cd ..
vim <file>
head -n10
cd <string>
sudo chown <string>
git status
clear
sudo pip3 install -U <string>
docker image <string>
git revert <string>
ls
rm -r <string>
ls
sudo sysctl -w <string>
ls
git st
exit
docker exec -it <string> bash
git commit -m <string>
ls
cat <string>
git commit -m <string>
git pull origin main
sed -i <directory>
xargs -0 -I <string> cat <file> <string>
git status
ls
rmdir <string>
ps aux
tr -d <string>
find . -empty -type <string> -print -delete
ls
cd <directory>
exit <number>
sudo apt upgrade
sudo apt install <string>
apt-key add -
ls
git commit -m <string>
nano <file>
git push
cd <string>
clear
ls
ls
sudo pmset -a <string>
sudo su
git add <string>
clear
go <string>
cat <string>
mkdir <string>
chmod u+x <string>
sed -e <directory> -e <directory>
code <string>
ls
python3
sudo apt install <string>
python3 <file>
sudo systemctl enable <string>
vi <file>
telnet <string>
ls
cd <string>
ls
ls
ls
cd <directory>
ls
su
cd <string>
ls
git remote add origin <URL>
ls
mkdir <string>
sudo apt install -y <string>
mv <string>
sed -i <string>
ls -ltr
clear
git bisect good <string>
vim <file>
sed -i <string>
git config --global <file>
git pull origin master
grep -a <string>
exit <number>
brew update
vim <file>
cd <directory>
cp <string>
git diff master --name-status
cd ..
sudo snap install drawio --classic
ls
sudo service nginx reload
cd <string>
cd ..
cd <string>
ls
vi <file>
sudo make install
curl -O <URL>
chmod +x <string>
sort -mu <string>
sudo mkdir -m <number> -p <directory>
cd <string>
clear
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
cat <string>
dpkg-reconfigure
locate <string>
ls
cd ..
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git status
yarn
reboot
cd <string>
unzip <file>
rvm <string>
ls
exit
git add <string>
ls -ltra
git init
cd <directory>
git commit -m <string>
rake <string>
vim <file>
clear
mv -h
curl -fsSL <URL>
cat <string>
cd ..
cd <string>
ls
rm -rf <string>
ping <string>
cat <string>
sudo updatedb
git push origin master
npm start
ls
ls
grep -r -i <directory>
cd <string>
ls
ln -L <string>
cd <string>
rm -rf <string>
ls
git commit -m <string>
ls
git fsck --full
cd ..
sudo npm i --legacy-peer-deps
chmod <string>
openssl rand -hex <number>
git status
git add -A
reboot
cat <string>
curl <string>
true <string>
cd ..
rm <string>
rm -rf <string>
then\
sudo systemctl status <string>
ls -l
ls -al
git commit -m <string>
git add .
cd ..
alias
ls
tr <string>
rm <string>
git config --master <file>
clear
cd <string>
rm <string>
ls
find . -name <file> -type <string> -print -delete
cd <string>
ls
git remote add origin <URL>
ls
ls
cd ..
python3 <file>
git pull
vim <file>
git filter-branch -f --msg-filter <string>
git commit -m <string>
scp -r <string>
git rebase <string>
git status
fg
rm -f <string>
find . -type <string>
cut -d <string> -f <number>
cd <string>
eval <string>
sudo stop uwsgi
ls -a
docker stop boost
npm install <string>
tmux ls
ls
git checkout <string>
sudo pip install <string>
rm -f <string>
exit
touch <file>
exit <number>
systemctl --user <string>
cd <string>
grep <string>
ls
cd <directory>
git push
ls
sort
clear
chmod +x <string>
git commit -m <string>
rm <string>
exit
rm -rf <string>
mvn -v
kill -9 <number>
vim <file>
npm install -g <string>
cd <directory>
ls
git push
git pull
vim <file>
source <file>
ls
ls
npm run register
docker run -d --restart <string> --network=<string> -p <string>
cd
find . -type <string> -name <string> -print -exec <string> -n <string> <string>
clear
cd
mkdir -p <string>
cd <string>
mkdir <string>
sudo iptables -I <string> -p <string> -s <directory> --dport <number> -j <string>
cd
clear
git checkout master
git clone <URL>
wget -O <file>
cd ..
cd <string>
cd ln -s <directory>
git commit -m <string>
vim <file>
du -shx <string>
read <string>
git commit -m <string>
rm -rf <string>
ls
apt-get remove wide-dhcpv6-client -y
npm install <string>
sudo apt-get update
cd
git commit -m <string>
git remote add origin <URL>
clear
cd <directory>
<directory> -m <file>
node <file>
nano <file>
sudo apt-get update
git checkout --orphan <string>
ls
git push
npm run prod
ls
rm -rf <string>
sort -u
systemctl daemon-reload
cd <directory>
dpkg --control <file>
ls
git add .
touch <string>
git commit -m <string>
git pull
vi <file>
git clone <URL>
sudo docker run -it --name <string> --entrypoint <string> -u <string> --privileged --rm -v <directory>
nano <file>
ls
apt-get install vim tmux htop wget curl ufw jq -y
clear
sudo iptables -A <string> -p <string> --dport <number> -j <string>
vim <file>
exit
cd ..
ls
cd <string>
jq <string>
ping <file>
mvn clean
sudo modprobe <string>
tty
curl -sL <URL>
ls
rm -r <string>
ls
ls
ls
cat <string>
curl <URL> -o <file>
cd <string>
git reset
clear
cd ..
byobu-tmux
grep <string>
git push
git init
ls
ls
git status
ls
git pull
git branch -M <string>
git add .
git add <string>
git status
vi <file>
git status
clear
clear
git status
sudo vi <directory>
ls
git status
sh -c <string>
ls
php -i
ls -latr <directory>
git status
git remote -v
tmux
wget <URL>
sudo curl <URL> -o <directory>
grep <string>
nano <string>
cd <string>
vim <file>
grep <string>
git pull
ls
awk <string>
cd <string>
cd ..
ls
ls
ls
grep <string>
git add <string>
git checkout <string>
git add <string>
git remote add origin <URL>
cd <string>
dpkg-divert
reboot
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cd <string>
mkdir <string>
exit
ls
ps
vim
vim <file>
cd <string>
ls
dpkg --no-force-overwrite -i <file>
ls
sudo pip install <string>
cd <string>
ls
brew update
lsof -n -i4TCP
rm <string>
mkdir <string>
ssh -t <file> sh -c <string>
git clone <URL>
ps aux
ps aux
rm -rf <string>
vi <file>
chmod +x <string>
ls
wget -q -O <file>
curl -fsSL <URL>
wget <URL>
source <string>
vim <file>
apt-get purge <string>
cd <directory>
cd <string>
mkdir <string>
read <string>
ls
vi <file>
print <string>
npm run bench -- -c <file> -n <file>
ls -alh
cd <string>
cut -f <number> -d <string>
ls
cd <string>
git status
cd
sed -e <directory>
cd ..
clear
vi
git pull
ls
ls -l
cd ..
mkdir -p <string>
git push -u <string> main
mkdir <string>
mount --h
sleep
git add <string>
git add .
ls
vim <file>
cd
git status
ping <string>
cut -f <string>
cd <string>
grep <string>
git status
wget <URL>
git commit -m <string>
exit <number>
ls
git add <string>
mkdir <string>
git push
git push origin PTS-578_redirects_not_updating_automatically --force
sudo zypper install <string>
npm run
cd ..
read -p <string>
then sh -c <directory>
curl -T <directory> <string>
ls
rm -r <string>
cd <directory>
chmod +x <string>
ls
cd
ls
read -r <string>
ls -ls
vim <file>
ls
grep
git add .
ls
cd ..
ls
sudo nano <directory>
screen -r
docker rmi <string>
clear
rm -f <string>
clear
ls
ls
fg
ls
python3 <file>
git add <string>
git branch
ls
cat <string>
mkdir <string>
sudo apt-get -y <string>
date <string>
clear
npm install <string>
cd <string>
cd <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
npm install -g <string>
sudo sed -i <directory> <file>
cd ..
tail -f <directory>
git restore <file>
curl <string>
sudo setxkbmap -layout <string> -variant <string> -option <string>
ls
tr <string>
npm install
docker-compose up
rm -rf <string>
apt-get -y <string> <string>
fg
vim <file>
ls
sudo update-alternatives --config <string>
cd <string>
read -s -n <number>
vim <file>
ls
xrandr
git push
cd ..
cd ..
vi <file>
tmux kill-server
su
sudo sed -i <directory>
cd <string>
git reset HEAD^
rm <string>
ls
git push
git commit -m <string>
vim <file>
ls
ls
cd ..
vi <file>
journalctl -xe
docker run <string>
vim <file>
git rebase --onto <string>
npm i
sh
git status
ls
ls
sudo sed -i <directory> <file>
ps -ef
find . -type <string> -name <file> -exec <string> -il <string>
ls
git stash
clear
cd <string>
cd <string>
sudo cat <directory>
wget --quiet -O - <URL>
sudo ftp 10.64.3.143
clear
cd ..
sudo apt-cache search <string>
sudo apt-get -y <string>
clear
grep -r <string>
python3 <file>
git branch main
tcpdump -i <string> -c5 -nn <string>
ls
git pull
apt-mark <string>
cd
export <string>
fg
cd <string>
cat <string>
git rm -r <string>
ls
exit
cd ..
docker container run --rm <string>
awk <string>
make clean
<directory> <directory>
less <string>
sudo apt-get install <string>
sleep <string>
sudo mysql -h <file> -P <number> -u <string> -p
vi <file>
sudo chown -R <string>
sudo ln -s <directory>
git commit -m <string>
xargs grep -i <string>
cd ..
rm <string>
git config --global <file> <file>
git config --list
sudo systemctl start <string>
cd ..
sudo systemctl enable --now <string>
cd <string>
ps -auxwf
cp <string>
cd <directory>
rm <string>
npm run watch
ls
chmod -R <string>
ls
sudo mkarchiso -v -w <string> -o <string> slim-iso
read <string>
cp -n <directory>
ls
apt-get install -y <string>
docker image <string>
sudo pacman -Syu
sed -E -e <directory>
vim <file>
ls -ls
npm run start
git push -u <string> master
ls -la
git clone <URL>
brew update
git branch
vi <file>
rm <string>
exit
ls -lh
ls
vi <file>
grep <string>
cd
cd ..
ls
cd ..
sudo chmod <number> <string>
git push
cd <string>
cp <string>
ls
ls
mv <string>
ls
cd
clear
rm <string>
history
docker-compose logs
ls
sudo apt-get update
read -rp <string> <string>
git merge <string>
cd <string>
rake
find . -type <string> -name <string> -exec <string>
fg
ip a l
su
sudo python <file> --cascade=<file> <number>
git init
git status
ip a
mkdir <string>
ls
ssh dirlic@10.18.0.39 -p <number>
done
exit
sudo mkcert -install
cd <string>
git commit -m <string>
cd
grep <string>
grep -Eom <number>
fg
open .
vi <file>
ls
cd <directory>
ls
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
curl -fLo <file> --create-dirs <string>
ls
git config --global <file> <file>
openssl rand -hex <number>
cd <directory>
chmod <number> <string>
cat <string>
history -w
python3 <file>
ls
cp <string>
ls
rm <string>
git pull
sudo apt install -y <string>
git status
ls
cd <directory>
cd <string>
tar xvf <file>
mv <string>
sudo apt-get purge <string>
git push origin master
ls
ls
ls
sudo chgrp <string>
rm -r <string>
pwd
cd ..
ls
git push -u <string> main
cd ..
htop
ls
mkdir <string>
grep <string>
ls
cd <string>
vi <file>
cd <directory>
ls -la
ssh-copy-id -i <string>
cd ..
ls
cd
ls
rm <string>
sudo unzip <file> -d <directory>
sed <directory>
mv <string>
vi <file>
sudo apt install <string>
git clone <URL>
cd ..
npm run test
cp <string>
sudo lvremove <directory> --forece
grep -Fx -f <string>
git push origin <string>
timedatectl
cd <directory>
sudo apt install git -y
git status
ssh dirlic@10.18.0.39 -p <number>
git commit -n
ls
grep <string>
pwd
git remote -v
cd <directory>
mkdir <string>
git status
grep -wrn <string>
unset color_prompt force_color_prompt
clear
ls
git remote add origin <URL>
rm -rf <string>
cd ..
ls
mv <string>
htop
pwd
nano <file>
source <directory>
ls
sudo sed -i <directory> <file>
git show <string>
vim <file>
cd <string>
cd <string>
git add
ls
npm install <string>
ls
fg
reset
sudo npm install -f
rm -r <string>
cd <string>
vi <file>
mkdir <string>
cd -
curl -sL <URL>
sudo su -
sudo vi <directory>
grep
cat <string>
bunzip2 <string>
fg
ps -aux
cd ..
ls
cd ..
reset
ls
cd <directory>
ls -l
git commit
diff <file>
npm run dev
git add .
cp <string>
git clone --depth <number> <URL>
ls
su root
ls -al
clear
rm <string>
grep <string>
sudo apt install python-pip -y
ssh dirlic@10.18.0.39 -p <number>
ls
git push -u <string> master
git status
cd <string>
ls
cd <string>
sudo nano <file>
cd <directory>
clear
npm run dev
wget -r <URL>
git status
sleep <number>
git pull origin master
vi
cd <directory>
git status
git ls-files
python3 <file>
ls -l
sudo systemctl status <string>
cd <string>
vim <file>
git checkout -b <string>
git pull
git status
cd <string>
sudo <directory> -R -N <string>
sudo smbpasswd -d <string>
ls
ls -l
python3
npm i go -g
git push
sudo reboot
find . -name <file>
cd <string>
cd <string>
npm install
cd <string>
git push
ls -l
vim <file>
cd <directory>
ls
cut -f <string> -d <string>
ls
ls
git checkout master
exit
xargs -L1 <string> clone
exit
exit <number>
cd <string>
git commit -m <string>
source <string>
awk <string>
rm -r <string>
fg
cd <directory>
git remote remove <string>
apt-get install -y <string>
grep <string>
cd
cd <directory>
git push --set-upstream <string> <string>
chmod <number> <string>
ls
python3
git add .
ls
cut -d"=<string> -f2)
sudo vim <directory>
cd <string>
wget <URL> -O <file>
time <string>
ls
sudo apt-get install <string>
cd <directory>
gawk --version
git remote add
git push origin master
git config --global <file> <string>
vim <file>
git add .
ls
git config --global <file> <file>
set <string>
sudo systemctl enable <string>
git commit -m <string>
git checkout -- <string>
git branch -M <string>
sed <directory>
vim <file>
cat <string>
git clone <URL>
ls
sudo add-apt-repository <directory>
pwd
vim <file>
docker start postgres-container
ls
ls -lart
git init
cd ..
mkdir -p <string>
ls
find . -empty -type <string> -print -delete
ls
vim <file>
chmod <number> <string>
touch <file>
ls
sudo stop uwsgi
clear
history
docker tag <string>
tmux
git push -u <string> master
git add .
cd ..
code
ls
git clone <URL>
ls
ls
mkdir <string>
git checkout <string>
git status
cd <string>
sudo sed -i <directory> <file>
vim <file>
vim <file>
grep -i <string>
python3 <file> --epochs <number>
sudo apt install -y <string>
cd <string>
git init
sudo reboot
rm <string>
exit
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
mkdir -p <string>
ls
sleep <string>
which <string>
ls
ls
sudo raspi-config
exit
ls -latr
tar -xvzf <file>
exit
mv <string>
pwd
ls
sed -r <directory>
ls
ls
ls
ls
ping -c <string>
wget $link$num$ext -P <directory>
git filter-branch --env-filter <string>
nano <file>
cd
ls
grep <string>
cd <directory>
cd <string>
git config -l
vim <file>
clear
sudo make test
ls
clear
vim <file>
git push
setg RHOSTS <file>
ls
sudo dpkg -i <file>
docker push <directory>
ls
ls
git commit -m <string>
git add .
sudo apt install <string>
git status
touch <string>
pwd
cd <directory>
git clone <URL>
docker-compose logs --follow <string>
chmod +x <string>
cd ..
docker ps
vim <file>
ls
sudo sed -i <directory> <file>
tmux attach
git init
cut -d'"' -f <number>
rmdir <string>
ls
tail -f <file> --lines=<number>
cd <string>
ls
cd <string>
mkdir <string>
sudo shutdown now
git add .
ls
ls
cd <string>
ls
htop
mv <string>
ls
cat <string>
git config --global <file> <string>
ln -s <string>
cd <string>
git commit -m <string>
ls
git clone <URL>
mkdir -p <string>
sudo git config --system --unset <file>
cd <directory>
sudo apk update
git status
git push -f <string> <string>
vim <file>
git push
cd ..
grep <string>
ls
htop
sudo make install
cd ..
pwd
curl <string>
git co master <file>
git push
git status
ls
ls
tmux resize-pane -L -t <string>
grep <string>
npm install <string>
ls
npm run dev
curl <string>
git push
cd -
bash <file>
sudo groupadd <string>
ls
gsettings set <file>
cd <string>
nano <string>
rm -rf <string>
ls <directory> -ld
cd <string>
vi <file>
cd <directory>
touch <file>
ls
git status
cp -r <directory>
sudo apt install <string>
docker images
ls
git revert <string>
find . -name <string> -type <string>
ls
cd <directory>
rm <string>
git clone <URL>
sudo apt install -y <string>
rm <string>
git revert -head
scp <string>
git init
cd ..
git commit -m <string>
git commit
fg
ssh <string>
python3 <file>
vim <file>
git checkout <string>
rm -fr -- <string>
exit
npm start
clear
git remote add origin <URL>
sudo userdel bob
mv <string>
ls
sudo apt-get install <string>
sudo apt autoremove
git rm <string>
ls
cd <directory>
mkdir <string>
touch <file>
ps aux
curl <string>
vim <file>
git init
sudo apt-get -y <string>
ls
git clone <URL>
mv <string>
nano <file>
read
chmod +x <string>
file
chmod <number> <string>
exit <number>
brew update
ls
git config --global <file> <string>
cd <string>
ls
mkdir -p <string>
which <string>
cd <string>
sudo sh <file>
ls
cd <string>
source <string>
ls
more <file>
read -rp <string> <string>
sudo sh -c <string>
sudo swapoff -a
ls
exit
git config --global <file> <file>
sudo X :1&
type <string>
clear
cat <string>
vim <file>
clear
git status
cd ..
grep <string>
sudo apt install <string>
cd <string>
cd
vim <file>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
sudo rm -rf <string>
vi <file>
git add .
then\
curl -k <URL>
git commit -m <string>
clear
git branch
vim <file>
sudo sed -i <directory> <file>
git remote add origin <URL>
cd <string>
sed <directory>
apt-get update
sudo apt update
ls
sudo cp <string>
rm <string>
ls
docker rm -f <string>
exit
git add <string>
ls
exit <number>
sudo apt remove --purge <string>
git add .
mvn clean
ssh-keygen -t <string>
cd <string>
cd <directory>
sudo apt-key add -
rm -rf <string>
vi <file>
man <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
cd <directory>
sudo ls <directory> -a
ls
sudo mkdir <directory>
sudo apt update
git commit -m <string>
sudo npm install -f
ls -l
python3 <file>
git clone <URL>
cd <directory>
sleep <number>
sudo apt upgrade
ls
clear
clear
vim <file>
npx create-react-app <string>
mkdir <string>
fg
ls
cd <string>
sudo apt-get remove --purge <string>
ps -ef
sed -i <directory>
cd <directory>
ls -al
git commit --allow-empty -m <string>
git push heroku master
ls
then
clear
ls
ls
ls
cd <directory>
grep -i <string>
rm -r <string>
git add -A
git status
tail -n <string>
cd <string>
git
pacman -S <string>
git merge <string>
ls
sudo nginx -t
clear
ls
exit
exit
git status
sudo rm -rf <string>
cd <directory>
chmod <number> <string>
ps -auxwf
ls
systemctl restart <string>
clear
apt install -y <string>
clear
ls
ls
ls
which <string>
grep <string>
npm install
git --help
sudo docker ps
clear
ls -lah
cat <string>
cd ..
cd <string>
docker-compose logs
ls
chmod +x <string>
cd <string>
git status
top
git status
git add <string>
ls -ltr
git init
ls
ls
touch <file>
sudo pip3 install --extra-index-url <URL>
rm -rf <string>
cd <string>
cd <string>
uname -n
read -cn <string>
git init
cd <string>
sudo apt upgrade
cp <string>
cd <string>
sh <file>
curl -sS <string>
exit
clear
cd
locate <string>
done
sudo git init
ls
sudo apt upgrade -h
git push -u <string> main
cd ..
ls
vim <file>
ls
ls
read <string>
python3 <file> -i <string>
git add .
ls
git push -u <string> master -f
clear
ls
ls
pwd
ls
ls
exit
cd <directory>
terraform <string>
ls
apt-get install -y <string>
tmux source <file>
ls
cd <string>
ls
mkdir <string>
git add <string>
read -s -n <number>
cd <string>
pwd
ls
cd
cp <string>
vi <file>
npm i <string>
git push
type <string>
cd ..
git tag <string>
ls
mkdir <string>
view <string>
vim <file>
ls
sudo apt-get update
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
vim <file>
mkdir <string>
python3 <file>
mkdir <string>
ls
cd
git commit -m <string>
cd <directory>
sed -i <directory>
ls -lAF
sudo reboot
cd ..
cd
cp -r <directory>
fg
git init
git commit -m <string>
cd
pwd
date -Iseconds
rm <string>
sudo nano <directory>
sudo docker rm <string>
touch <file>
vim <file>
sudo add-apt-repository <directory> -y
clear
exit <number>
sudo usermod -aG <string> <string>
git commit -m <string>
git status
curl -O <URL>
exit
chmod <number> <string>
vi <file>
chown <string>
git commit -m <string>
ls
cd
ls
ls
ls
cd <directory>
ls
vim <file>
python3 <file>
sudo su
ls
ls
fg
clear
ls
ls -latr
sudo apt install docker-ce -y
cd <directory>
find $dir -type <string>
rm <string>
set -e
vim
ls -ltra
chmod +x <string>
sudo iptables -I <string> -p <string> -j <string>
ping <string>
cd <string>
vim <file>
mv <string>
git add .
find . -name <file> -type <string> -print -delete
cd <string>
cat <string>
cp <string>
xargs git restore
cat <string>
sudo dpkg -i <file>
ls
ls
xhost +
screen -ls
fc-cache -vf <string>
git pull
ssh isl-env <string> -p <file>
sudo curl -L <directory> -o <directory>
cd <directory>
curl -sSL <URL>
ls
cd ..
cd <directory>
npm install
cd <string>
git stash
sudo apt upgrade
sudo reboot
cd <string>
kill -9 <number>
git init
sudo sed -i <directory>
curl --silent <string>
ls
cd <string>
ls
cp -i <string>
cd ..
cat <string>
wc -l
git push -f
less <string>
ls -la <directory>
mkdir -p <string>
ls
clear
git branch -m <string>
ls -l
ls
sudo make install
python3 <file>
cd ..
git add <string>
sudo apt-get update
npm run coverage
git config --list
vi <file>
clear
killall <string>
rm -f <string>
nano <file>
ls
wget <URL>
sed -i <string>
cd <string>
ls
cp <string>
sudo sed -i <directory> <file>
df -k
cd <string>
sudo service nginx reload
ls -l
ls
sudo mv <string>
rm <string>
unset <string>
npm run test
cd ..
npm run start
mv <string>
rm <string>
ls
cd ..
git merge <string>
cd <string>
sudo apt update
git status
git add <string>
ls
vim <file>
nano <file>
ls
read -rp <string> <string>
cd
ls
man <string>
touch <string>
df -h
ls
ls
sudo apt-get -y <string>
npm test
vi <file>
mkdir <string>
npm run coverage
ls
wget -r <URL>
git push
git add <string>
sudo pip3 install <string>
cd <directory>
brew install <string>
cd <string>
cd <string>
sudo npm install -g <string>
ls -la
sudo hp-setup -i
mkdir -p <string>
cd <string>
git status
cd <string>
cd <string>
ls
history
git status
git commit -m <string>
rm -f <string>
git rm --cached <directory> -f
cd <string>
git commit -m <string>
cd <directory>
cd ..
man <string>
git commit
git commit -m <string>
python3.9 -m <string> --upgrade
ls -1tr
fg
sudo apt-get install <string>
git clone <URL>
cd <directory>
export <string>
nano <file>
ls
cd <string>
nano <file>
sudo modprobe <string>
cd <string>
mkdir -p <string>
ls
exit
ls -la
history -cw
ls
more <file>
ls
git branch -M <string>
cat <string>
sudo apt-get install <string>
cd <directory>
git fetch
ls
docker rmi <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
vim <file>
cd <directory>
git add -A
sudo systemctl daemon-reload
sudo kill <number>
cd <string>
python3 <file>
git add .
ls
cd <string>
clear
rm <string>
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
ls -lih
git push origin
vim <file>
ls
docker run -ti -d --privileged=<string> <string>
ls
ls -lh
git push -f
cd <string>
sudo su
ls
cd <string>
more
ls
ls
npm run start
clear
cd <string>
git add <string>
git rm --cached <directory>
nano <file>
chmod u+x <string>
mv <string>
git commit -m <string>
cd <directory>
read -r -d <string> <string>
ls
ls
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
mkdir <string>
npm install
cd ..
ls
cd <string>
rm <string>
ls -al
cd <string>
openssl x509 -req -days <number> -in <file> -signkey <file> -out <file>
cd ..
sudo add-apt-repository --remove <directory>
cd ..
vi <file>
git add <string>
rm -rf <string>
vi <file>
systemctl show -p <string>
source <file>
sed -e <directory>
exit
ls
mv <string>
ls -la
uniq -c
sudo apt install <string>
cd <string>
mv <string>
clear
cd ..
git log --oneline --graph --decorate --parents
ls
ls -l
sudo nano <directory>
ls
cd <directory>
exit
ls
clear
sudo dnf install -y <string>
git branch
cat <string>
cd ..
nano <file>
exit <number>
find . -name <string> -delete
git status
vi <file>
ls
grep -i <string> >files
wget -cO <string>
curl -v -H <string> <URL>
unset <string>
ls
sudo -s -u <string> -H
vim <file>
cd <string>
systemctl restart <string>
awk <string>
curl <string>
rm -r <string>
df -h <string>
ls
git status
python3.11 <file>
set <string>
ls
docker stop <string>
rm <string>
grep <string>
ls -l
clear
ls
fg
cat <string>
cat <string>
apt autoremove --purge -y
clear
vim
ls
ls -la
sudo vim <file>
ls
git remote add origin <URL>
cd <string>
cd
sed -i <string>
cd <directory>
top
code .
ls
git clone <URL>
git fetch
dmesg
ls
dpkg -i <file>
yarn install
vim <file>
clear
ls
printf <string>
clear
sed <directory>
cd
ls
git push
cd <directory>
find . -type <string>
git push -u <string> master
pacman -S <string>
cd <string>
vim <file>
systemctl start <string>
ls
docker ps
ls
git merge <string>
ssh <string>
cd <string>
cd
history
ls
rm -rf <string>
npm start
ls
cd ..
ls
sudo mkdir -p <directory>
python3
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
ps ax
docker tag <string>
cd <string>
dpkg-shlibdeps: <string>
open .
git fetch origin\
git branch --set-upstream-to=<directory> <string>
cd <string>
done\
systemctl --type=<string>
git status
head -20
git commit -m <string>
cd <string>
git commit -m <string>
vim <file>
cd <directory>
ls
nano <file>
ls
git commit -m <string>
ls
sudo systemctl enable <string>
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
ls
git push -u <string> bryan-guner
mkdir <string>
ls
cd <string>
ls
cat <string>
ls
ls
sort
cd <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
ln -s <string>
ls
git br
then
sleep <number>
node -v
fg
vi <file>
npm run test
cd ..
cut -f <string> -d <string>
chmod <number> <string>
git branch -a
cd <string>
docker ps -a
su - <string>
cd <string>
python3 -m <string> install --upgrade <string>
vim <file>
find . -empty -type <string> -print -delete
exit
npm init -f -y
ls
ssh -p <string>
cat <string>
sudo systemctl enable <string>
git commit -m <string>
vim <file>
cd <string>
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cd ..
grep -i <string> >files
ls
git remote add origin <URL>
vi <file>
top
clear
cd <directory>
sort
cd <string>
scp <string>
git status
cd <string>
vim <file>
ls
ls
ls
which <string>
cd <string>
cd <string>
git status
ls
ls -la
sed -i -e"s/try_files <string>
gpg --help
sudo apt-get purge nodejs npm
clear
python3 <file>
git push origin <string>
sudo reboot
then\
ls
cd <string>
ls
sudo systemctl restart <string>
exit
mkdir <string>
git merge <string>
ls
cd ..
ls
sudo poweroff
ls
vim <file>
cat <string>
git commit -m <string>
exit
rm <string>
git status
wget -r <URL>
git reset --hard
ls
sudo python3 <file>
exit
grep <string>
ls
nano <file>
sudo sed -i <directory> <file>
ls
cd ..
cat <string>
clear
sudo nano <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string>
ls
cd <string>
ls
mv <string>
vim <file>
npm create vite@latest
git push --tags <string>
exit
docker stop <string>
git push origin master
pushd <directory>
npm login
kubectl <string>
mysql -p <string>
sed -i <string>
exit
ls
clear
cd ..
sudo modprobe <string>
cd <string>
cd ..
cd <string>
clear
bash
sudo docker logs <string>
ls
cd ..
ls
git clone <URL>
git add -A
clear
ls
cd ..
vi <file>
fg
nano <string>
clear
less <string>
screen -S <string>
ls
pwd
ls
cd <string>
git diff
cd <string>
fg
git pull
rm <string>
vi <file>
docker ps
git clone <URL>
ls -l
ls -la
clear
git status
ls
vi <file>
cd <string>
curl <string>
git describe --contains --all <string>
ls
ssh dirlic@10.18.0.39 -p <number>
git fetch
clear
rm -rf <string>
sudo apt update
npm run start
cd
cp <string>
useradd <string>
cd ..
git clone <URL>
rm <string>
git fetch
sudo snap install insomnia --classic
cd <directory>
ps -aux
python3 <file>
ls -la
cd
sudo apt-get install <string>
git mv <string>
cd <directory>
ssh <string>
git commit -am <string>
history -r
npm install <string>
ls
rm <string>
vim <file>
clear
sudo sed -i <directory>
vi <file>
git st
ls
find . -depth -exec <string> <string>
git push origin master
ls
find ~ -mmin <number> -type <string>
exit
ls -t <string>
npm install <string>
find . -iname <file> -mtime -120 -print
apt upgrade
cd <directory>
fg
cd <string>
git branch -a
ls
sleep <string>
git add .
sudo add-apt-repository universe -y
clear
ls
cd <string>
ls
sudo systemctl restart <string>
cat <string>
sudo su
git config --get <file>
ls
done
grep -vE <string>
ls
sudo apt update
cat <string>
grep -f <string>
cd <string>
rm <string>
sudo apt-get update
exit
pwd
curl --location <directory> --header <directory> --header <string> --data <string>
docker ps
clear
ls
python3 <file>
python3 <file> runsslserver 192.168.0.53:10006 --certificate <file> --key <file>
ls
git pull --rebase
cd ..
docker images
find <directory> -type <string> -name <string>
vim <file>
cd <directory>
git branch -a
docker top
ls
sudo hwclock -s
cd <string>
cd ..
ssh -Y <string>
git clone <URL>
sh
ps -elf
mysql -p <string>
kill <number>
git stash
git add .
sudo apt-get
ls
ls
ls -lAF
exit
ls
cd <directory>
git rebase <directory>
ls -la
grep -R <string>
git commit -m <string>
git pull
exit
pkill <string>
cd <string>
history
chmod +x <string>
git status
chmod -x <file>
rm -rf <string>
ls
exit <number>
python3 <file>
ls
git commit -m <string>
ssh -T <string>
ls
cd <string>
sudo vi <file>
ls -alrt
cd <directory>
git clone --branch <string>
sudo apt-mark <string>
sudo systemctl start <string>
git push
python3 <file>
alias <string>
git commit -m <string>
curl -LO <string>
ls
git status --ignored
git log
cd ..
clear
git commit -m <string>
cd <string>
cd <string>
cd
top
sudo yum -y <string> <string>
apt-get update
sudo nano <file>
apt list --upgradable
git add .
git init
cd ..
git add .
ls <directory> -l
ls
ls
nano <string>
sudo port install <string>
ls
pwd
git clone <URL>
ls
git status
export <string>
ls
sudo npm install -g <string>
rm -rf <string>
cd ..
npm install --legacy-peer-deps
sudo apt-key add -
cd <directory>
npm install
vi <file>
cat <string>
sudo apt dist-upgrade
git fetch origin\
cd ..
git commit -m <string>
git status
exit <number>
sudo pacman -Syyu <string>
git add -A
git filter-branch --force --index-filter <file> --prune-empty --tag-name-filter <string> -- --all
cd <string>
git push -u <string> master
ls > <file>
sudo apt install <string>
git push origin
git add <string>
cp <string>
fg
awk <string>
cp <string>
npm uninstall
cd ..
clear
nano <file>
reset
docker rm -f -- <string>
service <string>
vi <file>
cd ..
ls
sh
sudo apt-get update
ls
reset
exit <number>
cd <string>
ls
exit
sudo pacman -Rcn <string>
ls
docker images
ls
chmod +x <string>
ssh -p <string>
cd <string>
rvm install <string>
cd <string>
sudo ifconfig en0 ether <string>
rm <string>
history -a
cd
sudo apt-get -y <string>
sudo apt update
dd
cd ..
ls
clear
cd <string>
ip a
git commit -m <string>
sudo -i
kubectl api-resources --api-group=<string>
python3 <file>
unset color_prompt force_color_prompt
git add <string>
cd
sudo tail -f <directory>
cat <string>
unzip <file>
vim <file>
exit
cd <directory>
git commit -am <string>
fg
sudo ufw allow <string>
screen -rd <string>
cd <string>
rm <string>
git stash push -m <string>
sudo python3 <file>
vim <file>
vim <file>
sudo rm -rf <directory> <directory>
vim <file>
ls
rm -rf <string>
else\
date <string>
cd ..
ls
rm <string>
ls
vim <file>
sudo kill -9 <number>
vim <file>
ssh -p <string> user@host # connects to host on specified port as user
touch <file>
ls
cd <string>
date
sudo make install
git commit -m <string>
curl -OL <URL>
npm install <string>
reboot
ls
rm -rf <string>
sudo usermod -a -G <string>
cd <string>
exit
ls
git clone <URL>
git commit -m <string>
git init
kill -s <number> <number>
rm <string>
ls
cd <string>
cd <directory>
mvn compile
sleep <string>
sudo add-apt-repository <directory>
ls
ls
git status
git push -u <string> main
ls
git config --global <file> <file>
fg
vi -t <string>
cd
cd ..
cd <string>
sudo cp <string>
git pull origin master
npm install sharp --save
vim
ls
sed -E -e <directory>
exec <string>
docker info
sed -n <string>
python3
ls
find . -size <string>
ls
sudo nginx -t
sudo apt autoremove --purge <string>
rm -r <string>
ls
exit
cd <string>
htop
ls
git status --porcelain
su - <string>
clear
sudo npm start
pwd
git clone <URL>
ls
kill <number>
sudo chown <string>
git checkout -b <string>
cd <string>
git add .
curl -o- <string> -o- <URL>
node
clear
ls
cd <string>
sudo dnf install nsolid -y
cd <string>
npm start
sudo npm install -g <string>
cp <string>
ls
ls
sudo aptitude <string>
git commit -m <string>
ln -s <string>
clear
cd <string>
cd <string>
vim <file>
ls
cd <string>
git blame -w <string>
ls
cd <string>
exit
source <directory>
cd <string>
exit
sudo apt-get autoremove
grep -Ev <string>
npm start
git branch --set--upstream-to=<string>
cat <string>
cd
cd <string>
top
ls
git init
ls
sudo subl <string>
git pull
rm -r <string>
sudo su
ls
git reset --hard
sudo vim <directory>
git status
vim <file>
git status
cd <directory>
sleep <number>
sudo ln -s <directory>
mv <string>
xrandr
ls
cd <string>
history
git status
code <string>
ls
docker build -t <string>
ping <string>
cd <string>
ls
sudo apt-get install <string>
sudo apt install <string>
sudo python <file>
git commit -m <string>
rm -rf <string>
read -rp <string> <string>
cd <directory>
git push
apt-get autoclean -y
cd <directory>
npm install <string>
brew install ${CASKS[@]} --cask
ls -R
sudo apt-get update
cd <string>
python3.11 <file>
sudo yum install <string>
cd
git push origin master
git pull origin development
ls
git submodule add <URL>
vi <file>
git commit -m <string>
exit <number>
cd <string>
ls
exit
cd <string>
sudo mkdir <directory>
history -c
git add .
export <string>
ls
git status
vim <file>
cd ..
ls
ls
ls
cd <string>
reset
sudo apt-get install <string>
wc -l
cd <directory>
vim <file>
ls -lah <string>
grep $BAZEL_GREP -lrE <string>
ls
cd ..
cd <string>
git push -u <string> master
python3 <file>
cd <string>
ls
exit <number>
sudo reboot
ls
cd
mkdir <string>
cat <string>
git commit -m <string>
open <string>
ls
pwd
git commit -m <string>
tmux a -t <string>
ln -ls <string>
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
wget <URL>
find . -type <string> -name <string> -exec <string>
find . -empty -type <string> -print -delete
npm run start
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
sudo mkdir <directory>
git push -f -u <string>
git push origin master
mkdir <string>
man <string>
git checkout <string>
halt
ls
exit
ls
vim <file>
grep <string>
cd <directory>
ls
wget -q <URL> -O <file>
ls
ls
exit <number>
python3 <file>
ls -la
awk <string>
cd <string>
ls
ls
cd <directory>
true
cd ..
cd <string>
cd <string>
cp <string>
read <string>
cd <directory>
cd ..
curl --header <string>
ls
unset color_prompt force_color_prompt
exit
sudo apt-get install -y <string>
cd <string>
exit
cd <string>
git commit -m <string>
rm <string>
multitail --no-repeat -c -s <number>
ls
cd <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
sed <directory>
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
sudo cd <directory>
ls
vi <file>
fg
cd <directory>
cd <directory>
open .
vim <file>
git commit -m"update"
npx install-peerdeps --global <string>
sed -i.bak <directory>
npm run test
ls
sudo nano <file>
ls
vim <file>
cd <string>
else <string>
exit <number>
npm list
ls
cd <string>
ls
host <string>
cd
docker ps -a
git status
sudo vim <file>
apt install <string>
fg
cd <string>
cd <string>
curl <string>
python3 -m <string> install <string>
rm <string>
cd <string>
cd <string>
git commit -m <string>
git push
npm install <string>
sudo npm install -g <string>
sudo apt-key adv --keyserver <string> --recv <string>
sudo docker ps -a
vim <file>
npm init
vi <file>
git fetch upstream
git pull
sudo apt autoremove
git
nano <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd
ls
git add <string>
chmod -x <file>
read -p <directory> -n <number>
git add <string>
git add .
git push
cd <string>
cd ..
ping <file>
git pull
ls
cd <string>
git add <string>
grep -Fxq <string>
ls
tr -d <string>
cp <string>
git pull
jq <string>
vi <file>
xrandr
cd <string>
git commit -am <string>
sudo pacman -S --noconfirm <string>
grep -i <string> >files
sudo apt install python3-pip python3-venv -y
exit
apt-transport-https \
cp -v <string> <directory>
sudo pacman -S <string>
cd <string>
mv <string>
ls
pwd
git status
git push -u <string> bryan-guner
ls
cd <string>
vi <file>
curl <string>
ls
chmod u+x <string>
sed -e <string> -e <directory> -e <string> \
ls
ls
tail -10
cd <string>
vi <file>
kill <number>
ls
cd
ls++ -a
ls
cd ..
chmod +x <string>
ls
yarn add <string>
source <file>
ls
sudo mv <string>
docker-compose up -d --build
ls
sudo snap install heroku --classic
sudo -i
rm -rf <string>
git add .
hostname
ls
npm run dev
ls
ls
git diff
git branch -a
sudo service <string>
ls
ls
fg
python3
git status
chmod <number> <string>
bash
cd <string>
git push
vi <file>
mv <string>
docker ps
mvn clean
xargs -0 <string>
git branch -M <string>
bash <file>
chmod +x <string>
vi <file>
vim
cd <string>
ls
git add <string>
ls
git status
ls -l
cat <string>
curl -fsSL <URL>
cd <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
npm i
vi <file>
cd <string>
git status
cd
script/build.sh
cd <string>
cd <string>
tar -cvfp <file>
terraform plan -var=<string>
apt-get -y -qq <string> <string>
git remote add origin <URL>
clear
fg
du -sh <directory>
clear
sudo poweroff
sudo lvremove <directory>
cd <directory>
sudo systemctl start <string>
ls
npm install bit-bin -g
clear
mv <string>
git push -u <string> main
find . -name <string> -prune -o -true
cd <string>
ls
ls
exit
cat <string>
ls
ls
cd <string>
ls
cd <string>
cd <directory>
sed -E -e <directory>
date
cd
vim <file>
sudo sed -i <directory> <file>
sed -e <directory>
cd ..
rm -r <string>
ls -l
vi <file>
ls
cd ..
clear
sleep <string>
npm start
vim <file>
sudo apt update
ls -a
rm -f <string>
history
git add .
cd <string>
ls
ls
ls
ls
sed -i <directory>
su root
ls
vi <file>
ls
python3.11 <file>
ls
ls
git add .
mv <string>
vi <file>
cd ..
mkdir <string>
git clone <URL>
codedown javascript > <file>
ls
ls
git stage <string>
cd <string>
cat <string>
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git flow <string>
npm i <string>
uname -a
sudo rm go -rf
sed
git add .
mv <string>
ls -alh
ls
ls
fg
ls
git status
shutdown -h <string>
source <string>
rm <string>
sed -i <directory>
mkdir <string>
git commit -am'first'
curl <URL> -o <directory>
sudo poweroff
cd <directory>
rm <string>
clear
git checkout <directory> -f
ls
grep <string>
less <string>
nano <string>
more <file>
cd ..
done
git status
ps aux
sudo mkarchiso -v -w <string> -o <string> slim-iso -r
git add .
rm <string>
cd <string>
vi <file>
sudo apt-key add -
clear
ls -a <string> <string>
ls
wget -O <file>
git commit -m <string>
curl
git show <string>
patch -p1 <string> <file>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
ls ..
git commit -m <string>
sudo add-apt-repository <string>
cd <string>
find . -name <file>
git init
cd <directory>
ls
ssh-copy-id -i <string>
ls -l
ssh-keygen
mkdir <string>
rm -rf <string>
exit
curl -fsSL <URL>
scp <string>
cd ..
ls
cd
cd
git commit -m <string>
sudo apt install <string>
clear
cd ..
git status
vi <file>
git add
ls
host <string>
cd <string>
exit
sudo wget <URL> -O <file>
cd <string>
sudo systemctl enable <string>
find -name <string>
git status
docker rm <string>
nano <file>
chmod u+x <string>
chmod <string>
sudo apt purge -y <string>
ls
sudo apt install <string>
cd ..
tar -xvpf <file>
ls
cd
ls
sudo ifconfig en0 ether <string>
ls
git branch
ls
npm install <string>
cd <string>
git fetch
ls
docker rm <string>
clear
grep <string>
clear
tr <string>
tail -n1
cd
sudo phpenmod <string>
docker --help
code <string>
sudo sed -i <directory> <file>
ls
cd <directory>
cd <string>
sudo vim <file>
ls
npm run test
sudo service nginx reload
touch <string>
cd <string>
pacman-key --refreshkeys
sudo service nginx reload
python3 <file>
sudo apt -y <string> <string>
cp <string>
vi <file>
vi <file>
git add <string>
npm --version
exec <string>
ls
sudo udevadm control --reload-rules
git init
docker-compose
chmod <number> <string>
history
cd ..
ls
find . -type <string> -exec <string> -i <directory>
rm <string>
mkdir <string>
git stash
ls
git add <string>
git add <string>
cd <directory>
sudo reboot
ls
exit
vi <file>
npm install react-native-actions-sheet --save --force
sed <directory>
man <string>
chmod +x <string>
clear
cd <directory>
git remote add origin <URL>
sudo git clone <URL>
vi <file>
sed -i <string>
sudo apk update
git branch -r --merged
ls
source <string>
git clean -n
cd <string>
git commit -A
exit <number>
git pull
vim <file>
git merge <string>
cd
vim -r <file>
perl <file>
chmod <number> <string>
git add .
du -sh <directory>
find <directory> -name <string> -type <string>
ls -la <directory>
cd
cat <string>
sed <directory>
read <string>
ls
ss
ls
rm -h
sudo grep
ps
git commit -m <string>
clear
clear
sudo mkswap <directory>
cd <directory>
cd <directory>
git commit -m <string>
export <string>
sudo apt-get install grafana -y
ls
sudo stop uwsgi
grep -a -i -E --no-filename <string>
ps -e
ls
find <directory> -type <string> -exec <string> <number> <string>
ls
git pull
ls
git add .
rm --help
ls
clear
fg
read -rp <string> <string>
rmdir <string>
cat <string>
grep <string>
docker exec -it <string>
git rebase <directory>
ls
cd ..
git commit -m <string>
git status
vim <file>
git init
ls
wget --quiet -O- <URL>
rm bookbot -rf
sudo sed -i <directory>
clear
chmod +x <string>
hg churn -f <string> -r <string> --aliases <file>
git push
grep <string>
grep <string>
git pull
done\
git commit -m <string>
git
clear
git pull
dpkg-reconfigure locales
git push
sudo docker kill corrade
systemctl start docker
clear
file
cd
sudo useradd <string>
ls
ls data* -ld
ls
npm init
rm -r <string>
ls
ls
ls
mkdir <string>
vi <file>
sudo apt update
cd ..
ls
chmod +x <string>
git commit -m <string>
find <directory> -name <file>
mv <string>
sudo sed -i <directory> <file>
rm -f <string>
grep -r <string>
cd <string>
vim <file>
git push origin master
cd <string>
vim <file>
pwd
cd <string>
which <string>
cd <string>
ls -l
cd ..
cp -r <directory>
ls
cd <string>
git pull
exit
cd <string>
python3 -m <string> install <string>
exit
sudo shutdown
ls
ls
cd ..
git config --global <file> <file>
ls
sudo <file> -v -w <string> -o <string>
exit
mkdir <string>
chmod -R <string>
apt install <string>
source <string>
cd <directory>
git rebase <directory>
sudo apt update -y
ls
git status
rm hyprlock -rf
source <string>
sudo add-apt-repository <directory>
ls -la <directory>
ls
g++ -std=<string> <file> -o <string>
read -p <string>
ls
ls
git add -A
sudo pip3 <string>
npm install
su -
ls
ls
cd ..
cd <string>
cd ..
cd <directory>
cd <string>
git push
ls
cd ..
npm start
git pull
git pull
clear
vim <file>
sudo ls
cd <string>
cat <string>
ls
head -n <number>
grep -h
clear
sudo cp <string>
git --version
npm install
ls
cd <string>
ping <string>
ls
sudo sed -i <directory>
sudo sed -i <directory> <file>
exit
cd ..
cd <string>
vim <file>
clear
python3 -m <string> install ReText --user
cd <directory>
git commmit --amend
docker exec -it <string> bash
cd ..
which <string>
cd <directory>
ls
mkdir <string>
mkdir <string>
cp <string>
git status
ls
rm -rf <string>
cd <string>
curl -so- <URL>
ls
cd <string>
ls
rm <string>
ls
find . -empty -type <string> -print -delete
ls
ls -al
read -r -p <string>
git commit -a
git fetch origin\
ls -la <directory>
code .
ls
sleep <number>
touch <string>
cd <directory>
sudo su
ls
clear
yarn add <string>
grep <string>
ls
docker-compose up -d --build
pwd
git status
sudo apt install <string>
cd <string>
git pull -m <string>
kill <number>
sudo apt-get autoremove -y
clear
python3 <file>
htop
python3 <file>
cat <string>
fg
ls
ls
rm <string>
cd <string>
shutdown
ls
git add
git status
source <file>
rm <string>
ls
patch -p1 <string> <file>
cd <directory>
chmod +x <string>
ls -l
sudo cp <file> <file>
git init
ls
clear
ls
unset <string>
find . -type <string> -print0
ls
ls
wget -O <file>
sudo du -x <directory>
cat <string>
git init
du -a <string>
cd <string>
ls -la
vi <file>
cat <string>
unset <string>
git add <string>
exit
read -rp <string> <string>
clear
exit
ls
done
git status
openssl s_client -connect <string> -showcerts <string>
chmod +x <string>
clear
docker-compose up -d --build
clear
mkdir <string>
sudo yum install httpd -y
ls
cd <string>
git checkout <string>
grep -Eq <string>
vi <file>
cd ..
sudo apt-get remove --purge <string>
cd ..
ls
cd
sudo apt-get install <string>
vim <file>
vim <file>
cd <string>
cd <string>
setg RHOSTS.*
mkdir <string>
printf <string>
cat <string>
cd <string>
vim <file>
git git
mkdir <string>
cd <directory>
cd <string>
sudo su
rm <string>
cd <string>
vim <file>
cd <string>
apt-get update
python3 <file>
sleep <string>
pwd
cut -f1 -d <string>
git init
ls
cd <string>
ls
ls -lah
sudo nano <file>
vim <file>
ls
cd <string>
sort -u
ls
ls
git co --track <directory>
source <string>
docker-compose logs
git commit -m <string>
ls
clear
cd <directory>
ls
grep -i <string> >files
exit
vim <file>
cd <string>
sort -nk <string>
git add .
read -p <string>
nano <file>
cd <string>
docker exec -ti <string>
sudo su
sudo rm -r <string>
cd
ls -ltr
sudo apt install <string>
cd ..
ssh -X <string>
exit
sed <directory>
git checkout <string>
vim
ls
history -w
cd ..
history -a
more
fg
git add .
python3 <file>
vim <file>
git commit -m <string>
setg RHOSTS.*
cd <string>
git add <string>
python3 <file>
cd <string>
git commit -m <string>
read -rp <string> <string>
git remote add origin <URL>
go test
exit
ls
exit
find <directory> -type <string>
vim <file>
cd <directory>
ls
ls
cd <directory>
git add <string>
cd <string>
clear
sudo apk add <string>
git commit -m <string>
docker tag <string>
ls
ls -las
python3 <file>
ls
htop
ls
cd
docker commit <string>
cd ..
clear
ls
cd ..
git difftool -y -x <string>
cd <string>
ls
vim
tmux source <file>
cd ..
ls
sed -i <string>
rm <string>
ln -sudo <string>
cat <string>
git pull
git status
sudo apt-get update
vim <file>
python3 <file> test --keepdb
cat <string>
docker compose <string>
cd <directory>
chmod <number> <string>
service <string>
cd <string>
cd <string>
zgrep -i -E -o --no-filename <string>
cd <string>
history -w
clear
chsh -s <directory>
mv <string>
cd <string>
vim <file>
ls
nc
sudo sed -i <directory> <file>
sudo -i
git status
sudo lvextend -l <string>
exit
ls
done
git log
ls
cd <string>
sed -i <directory>
clear
history
git remote -v
ls++ -a
git push -u <string> master
ls
ls
docker-compose logs --follow <string>
vim <file>
sudo mkdir <directory>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
grep <string>
sed -E -e <directory>
git add <string>
touch <file>
git remote -v
npm run bench -- -c <file> -n <file>
git add .
clear
ls
clear
cd <string>
exit
sed -i <string>
ls
vim <file>
tar -xvf <file>
exit
git pull
cut -d' <string> -f3-7 <string>
python3 --version
cp <string>
vi <file>
else
cd ..
php
cd ..
mkdir <string>
env
mv <string>
ls
su -s <string>
env
ssh <string>
python3 <file>
clear
exit
git pull
cd <string>
read -p <string>
exit <number>
git log
cd <string>
ls
ls
curl -fsSL <URL>
vim <file>
sudo python3 <file>
cd
rm -f <string>
mkdir <string>
tail <file> <number>
ls
git push origin main
ls
clear
git status
ls
git less
sudo apt update
git clone <URL>
ls
ls
cd
cat <string>
ls
mvn exec:java -Dexec.mainClass=<file>
clear
cd <directory>
git clone --depth=<number> <URL>
sudo ufw allow <string>
perl
mkdir <string>
python3 <file>
docker rm -f <string>
bash
cd <string>
clear
cat <string>
exit
git clear
ping <string>
ls -alh
ls -a
npm run start
less <string>
sudo sed -i <directory> <file>
node <file>
sudo nano <file>
npm start
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
cd <string>
cat <string>
ls
cd <directory>
cd ..
clear
local <string>
git status
exit <number>
ls
cd
ls
sudo apt-get install -y <string>
docker push <directory>
sed <directory>
npm start
fg
sudo apt update
git clone <URL>
docker run -v <directory> -v <directory> --rm -it <string>
kill -9 <number>
ls
cp -r <directory>
ls
git init
git push -f
cd <directory>
ls
ls
chmod <string>
python3 <file>
git init
apt list --upgradable
docker ps
cd ..
git status
nano <string>
read -p <string>
ls
systemctl status <string>
top
npm i <directory> -f
fg
cat <string>
clear
cd <string>
cd <string>
cd <string>
ls
clear
xargs sed -i <directory>
git pull origin master
sed -i <directory>
vim <file>
cd <string>
git push origin master
rm -rf <string>
cd <string>
cd
git add <string>
xargs
nc <file> <string>
git push origin main
sudo grub-install --boot-directory=<directory> <directory>
mv <string>
clear
docker-compose up -d --build
ls
vim <file>
cd <string>
git commit -a -m'Mirror: <string>
sudo sed -i <directory> <file>
git status
cd ..
sudo apt-get autoclean
exit <number>
ls
clear
chmod +x <string>
cd <directory>
reboot
cat <string>
ls
cd <string>
alias <string>
sudo nano <directory>
python3 <file>
cd ..
ls
git pull
git clone <URL>
cd
cd ..
cd ..
ls
cd <string>
sed -i <string>
sudo apt install <string>
clear
git commit -m <string>
cd <string>
git status
git br
cd <string>
cd
cd <string>
ls -l
npm http GET <URL>
npm install
git status
vim <file>
apt list --upgradable
mvn compile
ls
git push -u <string> master
shutdown
which <string>
find . -type <string> -print0
ls
sudo zypper install <string>
npm start
grep <string>
rm -rf <string>
nano <file>
vim <file>
cd ..
sudo apt update
ssh <string>
sudo sed -i <directory>
git clone <URL>
vim <file>
exit
cd <string>
cd <directory>
git add .
cd <directory>
ls
cd <string>
curl -I <URL>
git st
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
git status
ls
<directory> <string>
git checkout -b <string>
bash <file>
sudo
docker ps -a
ls
sudo sh -c <string>
vim <file>
find . -name <string> -type <string>
ls -al
sudo lsblk -e <string> -o <string>
ls
git commit -m -n <string>
cd <string>
ls
git submodule update
git clone <URL>
ssh -p <string>
vim <file>
vi <file>
git commit -m <string>
ls
git add .
git add <string>
cat <string>
fg
shutdown -h <string>
sed -ri <string>
sudo fdisk -l
ls
ls
bash
cat <string>
git config --global <file> <file>
code .
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
clear
find <directory> \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <string> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file>
find . -size <string> -a -print -a -exec <string> -f <string> \
ls
alias <string>
grep <string>
git diff
cd ..
cd ..
then\
git commit -m <string>
git stash pop
cd <string>
kubectl get <string>
git pull
git stash pop
git pull
cd <string>
sudo less <directory>
cd <string>
exit
vim <file>
exit
scp <string>
docker images
python3 -m <string> list --outdated
xargs -L1 <string>
ls
clear
cat <string>
sudo vim <file>
cd
cd <string>
journalctl -b -1
exit
fg
git add <string>
exit <number>
exit <number>
done
cd <directory>
curl -sKL <string>
git commit -m <string>
git verify-pack -v <file>
git remote add origin <URL>
tee --help
ls
cd ..
scp -r <string>
vim <file>
ssh -i <string>
cd ..
sudo cat <file>
git config --unset --global <file>
open -Design\ <string>
kill -9 <number>
ls
clear
source <directory>
cd <directory>
rm <string>
cd ..
exit
top
find . -name <file>
exit <number>
cd <string>
vim <file>
vim <file>
sudo nginx -t
clear
ls
vim <file>
ssh -p <string> user@host # connects to host on specified port as user
cd <string>
cd ..
vim <file>
ls -a
cd <directory>
cd <string>
clear
cd <string>
git pull
npm run start
sudo reboot
ls
git add .
rm <string>
nl
ls
grep -v <string>
git add <string>
sudo killall <string>
time go run <file>
awk <string>
vim
ls
journalctl
clear
source <file>
grep <string>
ls _build
cd
git clone <URL>
vi <file>
python3 <file>
cd <string>
cd <directory>
ls -latr
tail -2 <string>
ls
clear
curl -i <string>
fg
git status
ls
ls
less <string>
sudo reboot
ls
ls
cd <string>
sed -E -e <directory>
ls
free
head -n <number>
ls
ls
cd ..
cd <string>
sudo systemctl restart <string>
ls
ls
cd <directory>
chmod +x <string>
cd <directory>
git branch --list --all
<directory> <string>
mkdir <string>
cp <string>
git commit -m <string>
git status
grep --include=<file> -rnlw <string> -e <string>
ssh-add --apple-use-keychain <directory>
psql -U <string> -h <string> nzdpu_wis
git push origin master
systemd --version
npm run coverage
grep -i <string> >files
ls
clear
ls
ls
sudo apt-get install <string>
cd ..
rm <string>
ls
cat <string>
clear
sudo apt install <string>
ls -a <string> lists all <string>
exit
clear
cd <directory>
find -mindepth <number> -name <string>
ls
git commit -m <string>
ls
sudo sed -i <directory> <file>
cd <string>
pwd
vim
tmux set-window-option <string>
grep -v <string>
sudo tar -xz -C <directory>
ls
cd <string>
journalctl -u <string> -f
git clone <URL>
ls
cd ..
history
tr <string> <string>
git init
apt-get
git add .
git status --ignored
cd <string>
cat <string>
git add .
git pull
cut -f2-
rm -rf <string>
sudo python <file>
git commit -m"update"
clear
ls
cd <string>
curl <string>
ls
ls
sh
cd ..
vim <file>
zcat <file>
ls -la <directory>
who <string>
cd ..
sed -e <directory> -e <directory>
cd ..
cd <string>
cd
cd <directory>
sudo pip3 install <string>
docker tag <string>
cd <string>
clear
curl -sL <URL>
sudo chmod <number> <directory>
cd <directory>
sudo apt install <string>
clear
git status
cd <string>
ssh dirlic@10.18.0.39 -p <number>
rm -rf <string>
find <directory> -type <string> -execdir <string>
cd <directory>
git clone <URL>
clear
apt install <string>
ls
print <string>
sudo systemctl status <string>
cd <directory>
fg
clear
ls
pkill picom
rm
cd <directory>
cat <string>
sed <directory>
sudo apt-get upgrade
cat <string>
killall <string>
sudo pip3 install -U <string>
sudo passwd
sudo vi <directory>
git add .
npm install <string>
cd ..
find. -name <file> -type <string> -print
cd <string>
git remote add origin <URL>
ssh <string>
ls++ -a
vi <file>
cd <string>
cd <string>
cd <directory>
sudo stop uwsgi
git status
cd <directory>
git checkout <string>
ls
npm init
ls
git commit -m <string>
rmdir <string>
type <string>
git clone --depth <number> <URL>
ls -lh
ls
cd ..
sftp <file>
pkill <string>
ls -l
ps aux
ls
git checkout -b <string>
git branch -M <string>
which <string>
cd ..
vim <file>
clear
ls
cd <string>
rm -r <string>
ping <string>
sudo apt-get install -y <string>
git filter-branch --index-filter <string>
sudo rm -rf <string>
cd <string>
gsettings set <file> <string>
cp <string>
sed -e <directory> -e <directory>
vi <file>
git push
clear
cd
docker ps -a
cd
cd <directory>
apt-transport-https \
cat <string>
exit
vi <file>
sudo apt install <string>
curl <string>
sudo update-mime-database <directory>
done
cp <string>
mkdir <string>
ls
exit
systemctl start docker
cd <string>
clear
rm -rf <string>
rm $DOWNLOAD_TEMP -r
cd <directory>
xargs -a <file>
chmod u+x <string>
git commit -m <string>
mkdir -p <string>
cd ..
ls
git clone <URL>
git add .
sudo su
systemctl status <string>
git commit -m <string> --no-verify
sudo apt-add-repository <directory>
ls
cd <string>
ls
rmdir <string>
cd
cd <string>
python3 <file>
ls
git describe --contains --all <string>
cd <string>
vi <file>
history
python3 <file>
vi <file>
sudo docker rm corrade
read -ra <string>
ls
sudo cp -r <string>
xargs wget <string>
ls -a
sed -E -e <directory>
ls
git push origin master
df
git clone <URL>
unzip -o -d <string>
sudo bash -c <string>
ps -auxwf
git add .
wget <URL> -O <file>
cd <directory>
clear
curl -sL <URL>
ls -al
cd <string>
ps -o <string> -p <number>
ls
docker rmi -f <string>
ls
vim <file>
ls
python3 <file>
apt update
git commit -m <string>
vim <file>
git commit -m"skeletonizer <string>
reboot
uniq
nano <file>
git pull
alias <string>
wget <URL>
source <directory>
git status
git checkout master
ls
cp -R <string>
ls
git commit -m <string>
ls
head -n1\
ls
cd <string>
cp -rf <string>
sudo -s -u <string> -H
clear
tmux a
git pull origin master
grep -i <string> >files
rm -f <string>
then\
history
git status
cd ..
git add -A
cat <string>
git status
ip
ruby -rubygems -e <string>
touch <file>
ls
ls
cp -v <string> <directory>
ls
cd <directory>
git add <string>
git branch -M <string>
ls
ls
cd <string>
exit <number>
git push --set-upstream <string>
ls -l
git status
clear
cd ..
env
sudo make
ls
vim <file>
rake <string>
vi <file>
rm -rf <string>
chmod <number> <string>
ls
ls
grep <string>
git add <string>
vi <file>
rm -f <string>
ls
ls -la
ls
sed -e <directory> -e <directory>
nc <string>
sudo touch <directory>
fg
vim <file>
ls
sudo su chmod <number> <directory>
sudo apt install <string>
code <string>
cd <string>
sudo snap install <string>
pbcopy <string>
apt install <string>
vi <file>
git cm -m <string>
code <string>
grep -rn <string>
git init
mkdir <string>
egrep -v <string>
sudo apt-get update
cp -r <directory>
cd <string>
find . -maxdepth <number> -type <string> -executable
su root
find . -name <file> -type <string> -print -delete
cd <string>
git push
ls
mv <string>
clear
ls
rm -r <string>
mkdir -p <string>
ls -la
curl -sL <URL> -o <directory>
ls
cd <string>
tail -f <directory>
ls -d
sudo chmod +x <string>
exit
git add -A
cat <string>
npm start
sudo apt install <string>
chown -R <string>
npx create-react-app my-app --template <string>
git pull
tail -f <directory>
ls
clear
git add .
git commit -m <string>
cd ..
su root
exit <number>
exit
ls
vi <file>
cd
ls -1
vim <file>
git add .
cd <directory>
man <string>
clear
cd ..
grep <string>
ls
ls
mv <string>
nano <file>
ls
wget -qO- <URL>
cd <string>
grep <string>
cd ..
cd <string>
ls
cd <directory>
ls
npx create-react-app my-app --template <directory> --use-npm
done
vim
grep <string>
ls
git commit -m <string>
git status
ls -la
git checkout --orphan <string>
cd <string>
npm install --save <string>
rvm <string>
cd ..
ls
chmod <number> <string>
rm -rf <string>
cat <string>
jq <string>
head -n-5
cd <string>
sudo apt-get update
clear
exit
ls
ls
ls
ls
node --version
curl -X <string> <URL> -d <string> -d <string> -d <string>
cp <string>
sudo easy_install <string>
tar -xvzf <file>
wget <URL>
cd <string>
git checkout <string>
mkdir <string>
find src
vi <file>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
sudo systemctl daemon-reload
fg
sed <directory>
git remote add origin <URL>
grep -w <string>
ls -la <directory>
git checkout <string>
sudo vi <file>
cd
exit <number>
git clone <URL>
vi <file>
clear
ssh -i <string> remote_user@remote_host
sudo apt-get -o <string>
ls
fg
rm <string>
ls
git revert <string>
git status
cd ..
cd ..
git checkout <string>
ls
locate
cat <string>
clear
git push
cd <string>
date
cd <string>
cd ..
read <string>
<file> -h
curl -L <URL>
ps -ef
cd <directory>
cd <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd
cd <directory>
git status
ls
cd <string>
cd <string>
cd <string>
clear
ls -lh
vim <file>
rm <string>
ls
sudo source <string>
git update-ref -d <string>
sudo wget <URL>
ls
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
clear
dpkg -l
nano <file>
vim <file>
mkdir <string>
cd <directory>
cd ..
vim <file>
cd <string>
git commit -m <string>
cut -d <string> -f1 <string>
clear
sudo supervisorctl status
grep <string>
cd <directory>
grep -lir <string>
grep <string>
code .
sudo reboot
npm -v
sudo nano <directory>
cd <directory>
git commit -m <string>
cd <string>
pwd
ls
sudo apt-key adv --keyserver <string> --recv-keys <string>
ls -C
mkdir <string>
git clone <URL>
sudo sed -i <directory>
npm start
ls
cd ..
ls
make clean
pushd <directory>
ls
sync
ls
rm <string>
ls
gpg --refresh-keys
read -rp <string> <string>
git clone <URL>
ls
git clone <URL>
rm -r <string>
grep <string>
ls -ls
cd <directory>
exit
nano <string>
git push origin PTS-578_redirects_not_updating_automatically --force
chmod <number> <string>
git init
cd
ls -alrt
python3 <file>
ls
vim <file>
git push -f <string> <string>
cd
git status
clear
npm uninstall swiper --force
git init
ls
ls
cat <string>
cd <string>
ip a
cd
git init
ss
find . -empty -type <string> -print -delete
vim <file>
git checkout <string>
nano <file>
clear
cd <string>
ls
sudo rm -rf <string>
ls
vi <file>
sudo apt-get upgrade
perl -e <string>
git commit -m <string>
fg
cd <string>
else
cd <string>
which <string>
ls
sudo dpkg --clear-selections
sudo systemctl enable <string>
ls
cd <directory>
history -c
rm <string>
cd <string>
rm <string>
yarn <string>
ls
cd <string>
curl -G <directory>
ls
shuf
cd <string>
chsh <string>
git co master
pwd
sudo apt-get install <string>
sort -nr
ls
cd <directory>
git init
ls -lisa
exec <string>
git pull
vim <file>
cd ..
ls
unzip <file>
sudo make clean install
vi <file>
sudo mkfs.ext4 <string>
cd
aptitude -y <string>
wget $androidLINK -O <string>
ls
ls
ls -la <directory>
cd <string>
cd <string>
ls
rm <string>
type <string>
cd ..
ls
ls
sudo apt install <string>
ls
sudo mkarchiso -v -w <string> -o <string> slim-iso
git add .
ls
view <string>
git pull
rm <string>
cat <string>
cp -v <string> <directory>
dir
cd ..
docker-compose logs --follow <string>
clear
python3 <file>
journalctl -xeu <file>
git checkout master
ls
ls
cd <string>
ls
ls
ls
go <string>
sudo apt install <string>
mkdir -p <string>
sudo apt update
ls
exit
git clone <URL>
sudo chown -R <string>
cd
cat <string>
cd ..
sudo apt-get update
egrep -ri <string>
wget -O <file>
docker-compose logs
sudo service <string>
git push -A
cd <directory>
cd <string>
ls
git status
ls
cd <directory>
cd <string>
mv <string>
ls
vi <file>
git status
ls
cd <string>
sed -i <directory>
sleep <string>
sed <directory>
git remote -v
git status
<directory> <string>
ls -l
rmdir <string>
clear
docker-compose up -d --build
cd -
rm -rf <string>
history
git stash apply <number> -f
git clone <URL>
clear
mv <string>
sudo <file> -v -r -w <string> -o <string>
ls
ls
cd ..
sudo xbps-install -Su
go tool pprof <file>
ls
ls -lat
ls
sudo rm -f <directory>
git push origin main
vim <file>
tcpdump -i <string> -v
cd
ls
ls
top
bash
cat <string>
ls
sed <directory>
git status --porcelain -s <string>
clear
cat <string>
clear
ls
sudo -u <string> psql
sudo apt-get -y <string>
ls
exit <number>
git status
cd <string>
vim <file>
curl -sSL <URL>
fg
git add <string>
ls
fg
ls
groups
cd <string>
cat <string>
rm <string>
nano <file>
ls
dpkg-shlibdeps: erro: <string>
git add .
git reset
history -r <string>
git config --all
rake <string>
mkdir <string>
<directory> <string>
vim <file>
top
git add <string>
cd ..
git push
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git add <string>
git reset --hard
git commit -m <string>
ps aux
curl -O <URL>
mv <string>
cut -d <directory> -f3
export <string>
git init
git clone <URL>
ls
ls -la
python3 <file>
fg
clear
apt-add-repository
npm run dev
vim <file>
sudo docker rm corrade
git push
ls
sudo apt-get install <string>
docker-compose up -d --build
git push
docker-compose up -d --build
sudo su
read -ra <string>
vim <file>
cd ..
vi <file>
mkdir <string>
hostname -i
podman run -d -p <string>
tmux source <file>
cd ..
csvlook -t
exit <number>
cd ..
git add .
npm start
apt install <string>
local -a <string>
git pull origin development
ls
git add .
ls -a
cd ..
rm -f <string>
rm -r <string>
tail -f <directory>
rm <string>
exit <number>
python3 -tt <file>
cd <string>
date <string>
fg
grep <string>
source <string>
exit
sudo apt-get install <string>
git push
vi <file>
ls
nc
cd <string>
exit
cd <directory>
du -sh <directory>
python3 <file>
watch -n <string>
wget <URL> -O <file>
node <file>
git add <string>
git branch -M <string>
cp <string>
sudo chown -R <string>
curl -LO <string>
cd <directory>
npm i
cd <string>
cd <directory>
htop
ls
ls
grep <string>
ls
bash
sudo usermod -aG <string> <string>
git clone <URL>
cd <string>
grep <string>
ls
read -n <number> -r -p <directory>
ls
git push -f <string> <string>
cat <string>
sudo make install
clear
git add .
ls
git config --global <file> <file>
git add <string>
ls -l
ln -s <string>
git push -u <string> main
chmod +x <string>
cat <string>
ls
ls
exit
vi <file>
curl -H <string> -H <string> -v <directory>
sudo systemctl restart nginx
npm run start
git commit -am <string>
cd <directory>
ls
git clone <URL>
cd <directory>
ls
chmod u+x <string>
git push
source <string>
docker ps
git status
watch -n0,1 <string>
cd <directory>
git commit
cd ..
ls
git add <string>
ls
docker run -v <directory> -v <directory> -v <directory> --rm -it <string>
find . -name <string> -exec <string> -c <string>
ls
cd ..
cd <string>
top
code <string>
ls
clear
git status
git remote add origin <URL>
uniq
grep -v <string>
read -p <string>
cat <string>
fg
ls
git commit
ps -e
cat <string>
ls
rm -rf <string>
curl --silent -L <file> --output <file>
git push -u <string> master
grep <string>
cd <string>
find . -iname <string>
then\
exit
gpg --search <file>
sed <directory>
cd <string>
sudo export <string>
ls
git submodule update --recursive --remote
cd
clear
cd <directory>
mkdir -p <string>
mount -l
apt-get update -y
history -a
grep -v -e <string> <string>
cd <directory>
git status
ls
mkdir <string>
cd <string>
rm -f <string>
sudo mount <directory>
sudo adduser arjun
ls
cd ..
history -a
sudo chown -R <string>
ls
npm run start
ls
chmod <string>
cd ..
ls
mount -t <string> -o <string>
service apache2 restart
read -r -p <string>
find . -empty -type <string> -print -delete
sudo losetup -d <string>
sudo apt show <string>
npm run test
bash
git remote add origin <URL>
cd <string>
sudo apt-get install -y <string>
cd <directory>
sudo apt install
exit
vim <file>
clear
sed <directory>
exit <number>
git checkout -b <string>
curl -v -H <string>
vim <file>
dpkg -I <file>
git add .
ls
exit
sudo apt-get install <string>
git add <string>
rm -rf <string>
cd <string>
ls
ls
sudo service nginx restart
ls
ls
sudo chmod --reference==<directory> <string>
apt-get install <string>
git checkout <string>
ssh-keygen
ls
ls
ls
cd ..
cd <string>
find . -name <file>
git pull
sudo apt-get install <string>
git clone <URL>
mkdir <string>
less <string>
clear
cd <directory>
git config --list
sudo systemctl restart <string>
cd ..
git status
cd <string>
cd <string>
git commit -m <string>
exit <number>
reset
git push origin PTS-578_redirects_not_updating_automatically --force
python3 <file> --keepdb <string>
grep -i <string>
git add .
git add <string>
git add .
cat <string>
git status
ls
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
mkdir <string>
git add .
ps ax
curl -G <directory>
ls
rm <string>
ls
cd <string>
pwd
vi <file>
ls
ls
ls
git add -A
ls
fg
clear
cd <string>
cd <directory>
git checkout <string>
mkdir <string>
cd <directory>
cd
ls
cat <string>
cd <string>
vim
sudo nmcli con mod <string> <string>
git status
ls
ls -la <directory>
cat <string>
cd <string>
ls
cd <string>
fg
bash
sudo systemctl restart <file>
sudo -i
cd ..
rm <string>
clear
grep <string>
git push -u <string> main
sed <directory>
read -p <string>
cd
cd <string>
git status
vim <file>
git status
ls
exit
source <string>
git status
sudo apt-get autoremove
vi <file>
cd <string>
cat <string>
clear
sudo node <file>
vim <file>
ls
rm -r <string>
cd
<directory> -m <file>
cat <string>
systemctl status <string>
find . -name <file>
ls
cd <string>
ls
exec zsh
tail -f <directory>
vim <file>
pwd
vim <file>
git commit -m <string>
git clone <URL>
grep -q <string>
ls
mv <string>
source <string>
sudo pacman -S
sudo <directory> <string>
ls -la
exit
sort
ls
cd <directory>
bash
bash <file>
git commit
pulseaudio
source <string>
cd <string>
ps
git status
sudo vim <file>
rm -fr <string>
mv <string>
ls
ls -la
vim <file>
rm
mkdir -p <string>
git add .
fg
cd ..
git add .
read -r <string>
cat <string>
clear
more <file>
clear
ls
rm -rf <string>
chmod +x <string>
ls
curl <URL> -o <file>
cd <string>
mv <string>
cd - <string> <string>
cd <string>
cd <string>
fg
sudo apt install <string>
ls
cd
git clone <URL>
ls
clear
cd <string>
git commit -m <string>
tail -$2 <directory>
sudo nano <string>
ls
vi <file>
cd <directory>
ps ax
chmod +x <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
vi <file>
git br -t <string>
sudo sed -i <directory> <file>
ls -l
ls
mv <string>
sudo vim <file>
vim <file>
git clone <URL>
tar -xf <string>
git status
sudo systemctl enable <string>
grep <string>
git log
cat <string>
read -p <string>
cd ..
vim <file>
vim <file>
git init
clear
curl <string>
docker run -it --rm --net <string> --name <string> --env <string> --env <string>
cp <string>
clear
rm <string>
vim <file>
git push -u <string> master
git pull
ls
sed -i <string>
cd ..
ssh <string>
rm -rf <string>
sudo ln -s <directory>
git commit -m <string>
ls
cd <string>
touch <file>
cp -a <string>
scp <string>
cd ..
curl -sH <string> -G --data-urlencode <string>
cd <directory>
cd ..
ls -alF
pkill -f <string>
exit
vim <file>
clear
sed -i <directory>
exit
rg <string>
sudo
sudo python <file>
vim <file>
cd <string>
rm -rf <string>
vim <file>
cd <string>
cd <string>
cd <string>
vi <file>
cd ..
cp <string>
git rebase -i <string>
code .
history
sudo userdel -r <string>
cd <string>
sudo apt-get install <string>
sudo usermod -a -G <string> <string>
git commit -m"update"
ls -al
sudo apt-get install <string>
export <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
sed -i <string>
less
git fetch origin\
git config --add <file>
exit
ls
sleep <number>
exit
ps aux
git branch
vi <file>
curl -sL <URL>
python3 <file> -- <string> @CAMERA=<string> <string>
git commit -m <string>
done
git status
ag <string>
ls
cd <string>
python3 <file>
git status
exit <number>
ls
clear
cd <directory>
pwd
git status
read -p <string>
cp <string>
git status
cp <string>
cd <string>
git clone <URL>
cd <string>
sed -e <directory> -e <directory>
clear
exit
awk <string>
git clone <URL>
ls
ls
rm -rf <string>
source <file>
git clone <URL>
cat -A <string>
git init
sudo ls <directory> --color
sudo ln -s <directory>
pwd
git push -u <string> master
rm i -R
cd <string>
ls
exit
ls
ls
ls
git pull origin master
cd <string>
tail +n # Print nth line from file.
cd -
sed <directory>
byobu-tmux
ssh -t <string> -L <string>
cd ..
ls
clear
ls
dotnet <string>
ls
git co PTS-578_redirects_not_updating_automatically
cat <string>
git fetch -a
sudo chmod a+wr <directory> -R
docker exec -it <string> bash
history
git push -u <string> main
clear
sudo vi <directory>
grep <string>
cd <directory>
sleep <number>
ls
nano <file>
fg
wget -O <file>
clear
git reset <string>
ls -l
ls
tmux --version
cd
ls
cd <directory>
cd <directory>
rm <string>
clear
git reset HEAD^
cp <string>
vim <file>
npm i prettier -g
cd <string>
<directory> <string>
git push -u <string> main
git pull
fg
brew install <string>
git add <string>
git init
ls
sed -n -e <directory>
ls
git init
git init
snap install <string>
cd <string>
git clone <URL>
git add .
git commit
vi <file>
ls
ls
vi <file>
grep -A <number>
cd <directory>
ls -la <directory>
sudo nano <directory>
systemctl status <string>
read -rp <string> <string>
ls -lt
ls
rsync -a <string>
vim <file>
ls
git pull
mkdir -p <string>
cat <string>
ln -L <string>
git commit -m <string>
git commit -m <string>
ls
cd <directory>
ls
sudo chmod a+xr <string>
docker-compose --version
ls
tail -f <directory>
git pull
vim <file>
apt-get install -y <string>
cd <string>
cd <string>
sed -i <string>
clear
git fetch origin\
done
rm <string>
fg
grep -i <string>
mkdir
mvn archetype:generate <string>
ls -al
cat -A <string>
then\
clear
npm install -g <string>
ls
ping <string>
mkdir -p <string>
ls
clear
mkdir <string>
sudo sed -i <directory> <file>
cd <string>
python3 <file>
rm -f <string>
sudo apt -y <string>
source <directory>
cd <directory>
rmdir <string>
read -r -p <string>
ls
ls
ls -l
ssh -X <string>
ls
ls
sudo apt install <string>
python3 <file>
git add <string>
git log
exit
vim <file>
git push origin <string>
tail -n100 -f <directory>
yarn <string>
screen -r
reboot
tar xvzf <file>
npm i -g <string>
git clone <URL>
ls
npm run test
vi <file>
<directory> <string>
ls
cd <directory>
ls
cat <string>
bash <file>
ls
cp <string>
read <string>
cd -
less <string>
ls
<directory> <string>
sudo git pull
ls
git remote set-url origin <string>
vim
ls
cat <string>
mount
code <string>
ssh-copy-id <string>
clear
cd <string>
sudo pacman -Syu
git checkout <string>
mv <string>
npm i <string>
code .
ls
npm install -g <string>
ls
cd <directory>
vim <file>
ls -alrt
sudo apt install <string>
sudo nano <file>
npm run register
cd <string>
git clone <URL>
clear
exit
sudo apt install zsh -y
git push -u <string> main
cp <string>
cp -f <string>
cd <directory>
ls
cd <directory>
cd ..
sudo apt-get update
git add .
chmod <number> <string>
tmux attach
git add <string>
sudo ansible web -a <string>
ls
cd
find . -type <string> -name <string>
cp -i <string>
sudo systemctl status <string>
sudo reboot now
git config --global <file> <file>
ls
print <string>
ls
git checkout master
git push
cd ..
ls
vim <file>
cd <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cat <string>
vim <file>
git branch -M <string>
kill <number>
brew install <string>
git ls-remote <string>
vim
cd <directory>
sudo apt-get install <string>
git clone <URL>
ls
rm -rf <string>
ls
ls -ltr
ps auxf
vim <file>
vim <file>
curl <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
git commit -m <string>
mv <string>
ls
ls -la
sudo pacman -S <string> --noconfirm
clear
cd ..
docker exec -it <string> bash
ls
cd <string>
vi <file>
cd ..
git add .
git config <file> <file>
git add .
cd <string>
cd <string>
git status
ls
ls
cd <directory>
rm -r <string>
curl <string>
wget -qO - <URL>
git pull
sort -u
ls -lig
git status
git commit -am <string>
npm install cookie-session --save
git remote add origin <URL>
ls
git add .
git co -t -b <string>
git commit -m <string>
fg
git pull
ls
view <string>
vi <file>
npm install
clear
sudo sed -i <directory> <file>
sudo apt update
ls
sudo dmidecode --type <number>
cd <directory>
npm i -g <string>
sudo ufw allow <string>
ls
which <string>
cd <string>
cd <string>
sudo git config --global --list
sudo apt-add-repository <directory>
cd <string>
sudo ln -s <directory>
pwd
ssh esther@10.18.0.41 -p <number>
uname
cd <string>
wget <URL>
ls
cd <string>
tail -f <string>
vi <file>
sudo pip install <string>
docker compose up -d <string>
cd ..
chmod <number> <string>
cd <string>
git status
cd <directory>
cd ..
sudo dnf search <string>
read -sp <string>
git add .
cp <string>
cd <string>
sudo sysctl -q -w <string>
sed -i <string>
ls -l
ls
ls
ls
kill -sigusr1 <number>
vim <file>
cd ..
sudo installer -store -pkg <file> -target <directory>
git commit -m <string>
top
vi <file>
pwd
git clone <URL>
sudo pacman -Syyu
sudo vi <file>
find . -name <file> -type <string> -print -delete
vim <file>
ls
git commit
cp <string>
cd ..
git status .
sudo ufw allow <string>
git pull origin master
grep <string>
curl -o- <URL>
git add .
exit
cd <directory>
npm start
unset color_prompt force_color_prompt
ls
bash
git add .
cd <directory>
sed -n <string>
grep <string>
cd ..
sed -ri <string>
python3 <file>
find . -name <string> -type <string>
git remote add origin <URL>
cat <string>
git status
df -Ph
sudo apt update
vim <file>
ls
git filter-branch -f --env-filter <string>
exec uwsgi --master --processes <number> --die-on-term --uid <string> --https <file> --module <file>
grep <string>
cd <string>
exit <number>
systemctl --user <string> <file>
tail -f <string>
git add <string>
sudo nvidia-xconfig -a --cool-bits=<number> --allow-empty-initial-configuration --enable-all-gpus
wget -t <number> --retry-connrefused -O <directory>
cd ..
docker exec -it <string> bash
fg
cd <directory>
python3 <file>
ls
cat <string>
sudo update-alternatives --set <string>
cd <string>
ls
cd <string>
npm install
exit
vim <file>
cd <directory>
rm <string>
git add .
ls
ls
git config --global <file> <string>
source <string>
exit
vim <file>
git add <string>
ls
vim <file>
mv <string>
clear
ls
read -p <string>
mkdir <string>
sudo su
ls
find . -size <string> -a -print -a -exec <string> -f <string> \
rm -rf <string>
git pull
vi <file>
ip a
rm -r <string>
git status
git add .
date <string>
ip addr <string>
ls
git add <string>
git remote add origin <URL>
fg
git push origin PTS-578_redirects_not_updating_automatically --force
git add <string>
ls
ls
yarn install
ls
cd <string>
vim <file>
git merge develop
systemctl start <string>
cd
ls
git status
vim <file>
git clone <URL>
find . -name <file> -type <string> -print -delete
npm i <string>
ls
byobu-tmux
grep <string>
git commit
ls
find . -empty -type <string> -print -delete
cd ..
sudo ln -s <directory>
cd ..
ls
grep -i <string> >files
rm <string>
sh
ls
git co --theirs <string>
cd <string>
cd ..
tail -f <directory>
ls
git push origin2
history
rm -r <string>
vim <file>
cd
npm install
export <string>
less <string>
killall <string>
pacman -Qqen <string>
cd <directory>
cd <string>
git push
cd
npm uninstall -g <string>
exit
cd <directory>
exit
chmod -R <string>
docker ps -a
ls
top
exit
sudo
sudo add-apt-repository <directory>
git commit --allow-empty -m <string>
vim <file>
clear
git adog
<directory> <string>
git push
vim <file>
docker cp <string>
chmod <number> <string>
vim <file>
git reset --hard <string>
chmod +x <string>
cd ..
scp <string>
git
cd <string>
source <string>
python3.11 <file>
vim <file>
vim <file>
sudo reboot
awk <string>
git stauts
hg churn -c -r <string> --aliases <file>
npm start
set
cd <string>
ls -lAF
setg RHOSTS.*
kill <number>
grep -rl <string>
sed -i <directory>
rmdir <string>
cd <string>
rm -rf <string>
ls
mkdir <string>
date
git status
<file> program
vim <file>
egrep -v <string>
git show
ls -al
exit
cd <string>
sudo apt install <string>
ls
ls
sudo tee <directory>
cp <string>
sudo adduser <string>
ls
docker ps
npm run coverage
chmod --help
sudo npm test
clear
pwd
tr <string>
rm -r <string>
ls
cp <string>
cp -r <directory>
ls -la <directory>
git commit -m <string>
more <file>
python3 <file>
pwd
cd <string>
rm <string>
cd <string>
rm <string>
read -rsp <string>
cut -c <string>
ssh <string>
docker-compose up -d --build
ls
cd <string>
ping <string>
nano <string>
git push origin <string>
sudo sed -i <directory>
find . -type <string> -size <string> <directory>
clear
ls
kubectl get <string>
cd <string>
npx <string>
ps ax
git clone <URL> <string> --depth <number>
git log
cd <string>
apt-get install -y <string>
cd <string>
cd <string>
cd <string>
cd <directory>
cd <string>
git add <string>
mkdir <string>
sort
ls -a
ls
clear
cd <directory>
sudo mkdir -p <directory>
git add <string>
cd <string>
vim <file>
wget -O <file>
vim <file>
mv <string>
cd ..
mkdir <string>
touch <file>
grep <string>
grep <string>
git add .
wget --load-cookies <directory>
npm run start
ls
tail -f <directory>
sudo add-apt-repository -y <directory>
tail -f <directory>
sudo apt install <string>
pwd
cd <directory>
clear
cd ..
ls
ls
kubectl apply --filename <file>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
ls
git commit
rm <string>
git push
grep <string>
find . -empty -type <string> -print -delete
fg
fg
git remote add origin <URL>
git add
ls
su
git rm --cached <string>
git status
wget -qO - <URL>
git status
rm -r <string>
npm run test
git pull
docker-compose up -d --build
ls
sudo python <file> --cascade=<file> <number>
clear
cd <string>
cd <string>
git commit --amend --no-verify <string>
sudo apt install <string>
apt update
read -p <string>
mv <string>
cp <string>
cat <string>
ls
else\
ls -l
tail -f <string>
fg
cd
else
git branch -D <string>
git branch
mv <string>
grep <string>
sudo apt install <string>
less <string>
cd ..
git checkout -b <string>
cd <string>
ls
cp -rf <string>
ssh <string>
vim <file>
history
git checkout <string>
less <string>
ls -al
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd <string>
clear
ls
docker swarm --force <string>
sudo killall -HUP <string>
sudo yum install <string>
touch <string>
sudo service <string>
git rev-parse --verify <directory>
git config --list
chmod +x <string>
ls -l
mv <string>
cd ..
ls -la
sed -nE <string>
rm <string>
cd ..
chmod +x <string>
npm i -g <string>
git remote add origin <URL>
systemctl stop <string>
sudo nano <directory>
tail -f <string>
sleep <number>
grep <string>
git add .
sudo systemctl status <string>
exit <number>
git log --numstat --pretty=<string>
cd <directory>
git checkout -b <string>
python3 <file>
vim
vi <file>
date
sudo <directory> -R -N <string>
wget -q -O <file>
<directory> <string>
clear
git commit -m <string>
vim <file>
source <string>
sleep <string>
git fetch
sudo apt-get update
python3 <file>
cd ..
clear
code .
clear
git commit -am <string>
cd <directory>
cd <string>
sudo sysctl <string>
sudo apt install <string>
cd <string>
fg
vi <file>
npm run build
cd <string>
git status
git init
sudo snap install code --classic
clear
mkdir <string>
lsof -n -i4TCP
mkdir <string>
sudo nano <string>
htop
git status
ls
cd ..
git commit -m <string>
find . -name <string> -type <string>
cd
git reflog expire --all
ping hostname -f
chmod <number> <string>
less
ls
git commit -m"update"
ls
df -h
sed -i <directory>
cd <string>
git log
ls -ltr
cd
docker ps
wc -l
git commit -m <string>
cd <string>
ls
ls _build
man -k <string>
<directory> <string>
ls -la
cd <directory>
curl -ssLO <URL>
sudo python <file>
git log
sudo apt-get install -y <string>
cd ..
git status
chown <string>
sudo vim <directory>
clear
ls
git status
clear
cp -av <directory>
sudo apt update
cd <directory>
ls
ls
sudo sed -i <directory>
cd <string>
vim <file>
ls -l
ls
sudo make clean install
mv <string>
cd <string>
cd <string>
cd
ls
file <string>
grep <string>
ssh-keygen -t <string> -b <number> -C <file>
grep -vw <string>
cd <string>
git push -u <string> master
ls
cd <string>
sed -E -e <directory>
exit
mkdir <string>
cd
npm start
git remote add origin <URL>
mkdir <string>
pwd
perl -e <string>
fg
git commit -m <string>
nano
ls
cd <string>
exec <string>
fg
npm init -y
cd <string>
cp <string>
du -sh
git push -u <string> master
cd <string>
sudo sed -i <directory>
git diff
ls
git commit -am <string>
cd <directory>
npx tslint --project <string>
ls
npm run dev
ls
cd
cd ..
rm -rf <string>
git push
touch <string>
read -r <string>
find . -name <string> -type <string> -exec <string> -c <directory> -- <string>
git config --global <file>
cd <string>
cd
ping <string>
clear
docker-compose
ls
which <string>
brew cask install <string>
ls -ald <string>
cd <string>
ls
ls
cd
sed -i <directory>
history -c
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
ls
code
vim <file>
docker ps
npm start
ssh -X <string>
git ls-remote <string>
userdel jyotika
export <string>
sudo <file> -v -r -w <string> -o <string>
ls
git push -u <string> main
ls
man <string>
rm -rf <string>
docker-compose logs
git commit -m <string>
curl <string>
cp <string>
clear
sudo apt-get update
cd
ls
sed -i <directory>
clear
grep -i <string> -A <number>
git push
sudo cp <string>
cd <directory>
cd <directory>
ln -s <string>
composer install --ignore-platform-reqs'
cd <string>
clear
rm -r
cd <string>
git commit -m <string>
nano <string>
cd <string>
git status
cd <string>
cd.
sudo apt-get autoremove
git add .
sudo chmod +x <string>
tail -f <directory>
sudo make clean install
cd ..
cd
sudo locale-gen <string>
cd <directory>
grep <string>
make clean
clear
nano <file>
rm -r <string>
ls
ping <string>
npm help login
sudo mkdir <string>
fg
sed -E -e <directory>
ls
ls
apt list --upgradable
sed -i <directory>
chmod <number> <string>
python3 <file>
ls
ls
cd <directory>
apt-transport-https \
cd <directory>
git checkout <string>
git add .
mount
git status
git rebase <string>
docker ps
ps aux
touch <string>
cd <string>
vim
ls -la <directory>
bash <file>
ls
ls
sudo wget <directory> -O <directory>
npm install -D <string> postcss autoprefixer
sudo ldconfig
git add <string>
ls
ls
bash <file>
cd <directory>
pwd
git clone <URL>
ls
git branch -M <string>
cd <string>
source <directory>
ls
cd <directory>
git add .
unzip <file> -d <string>
git fetch
python3 <file>
open .
sudo apt-add-repository <directory>
git commit
git commit -am <string>
cd <string>
find <directory> -mindepth <number> -type <string> -exec <string> -t <directory> --backup=<string> <string>
more <file>
cd <string>
ls
ls
sudo chmod +x <string>
screen
rm <string>
mkdir <string>
find . -type <string> -exec <string> -s <file> -t <string> -o <file>
read <string>
cat <string>
cd
cd
git commit -m <string>
cat <string>
php <file>
cat <string>
git commit -m <string>
vim <file>
clear
ls
git push
curl -X <string> <URL> -d <string> -d <string> -d <string>
cd <string>
ls
xargs -L1 <string>
yarn <string>
nl
ls
sudo apt-get install <string>
git status
wget -qO- <URL>
cd <string>
cd <directory>
cd <directory>
sed <directory>
rm <string>
git add .
sudo apt-get update
yarn
sudo apt-get install -y <string>
python3 <file>
cd ..
find . -size <string> -a -print -a -exec <string> -f <string> \
npm install react-native-action-sheet --force
clear
sed <directory>
python3 <file>
sudo apt install <string>
clear
ls
history
cd <directory>
touch <string>
clear
alias <string>
ls
ls
find . -empty -type <string> -print -delete
cd
git add .
fg
ls -ltr
git branch -M <string>
find . -iname <string>
git commit -n
cd <string>
tail -f <string>
rm -- <string>
ls -la
cd ..
fg
ls
sudo serve -s <string>
git pull
git add .
git commit -m <string>
ls
vi <file>
git commit -m <string>
git checkout --orphan <string>
ls
vim <file>
mv <string>
cd <directory>
cd <string>
mkdir <string>
sudo nano <directory>
git status
ls
docker images
perl <file>
ps aux
clear
git status
more <file>
cd <string>
git diff
du -sh
pwd
ls
du -sch <string>
cd <directory>
ls
mv <string>
sudo yum install -y <string>
less <string>
ls
npm start
git add <string>
cd <string>
sudo vim <file>
rm <string>
npm test
source <directory>
exit
ls
mvn install:install-file -Dfile=<file> -DgroupId=<string> -DartifactId=<file> -Dversion=<string> -Dpackaging=<string> -DgeneratePom=<string> -Dspring.test.skip=<string>
python3.11 <file>
cd <directory>
cd <string>
cat <string>
rm <string>
git clone <URL>
ls
sudo apt-get install <string>
ls
mkdir <string>
sudo docker ps -a
cd <string>
yarn add -D <string>
clear
sudo apt update
ls
find <directory> -name <file> -type <string> -a -xtype <string> -printf <string>
npm i
rm -f <string>
exit
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
wget <URL>
ssh <string>
mkdir -p <string>
git remote add origin <URL>
cd ..
vi <file>
clear
ls
cd ..
git stash
cat <string>
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
git add <string>
wget -q -O <file>
git remote add origin <URL>
ls
print <string>
vi <file>
vim <file>
sh
vi <file>
npm run dev
git checkout -- <string>
rm -rf <string>
clear
ls
cat <string>
date
exit
npm start
ls
grep -Eq <string>
find . -name <string> -printf <string>
vim <file>
cd <string>
sudo vim <directory>
npm run dev
patch -p1 <string> <file>
sudo usermod -aG <string> <string>
grep <string>
cp <string>
export <string>
git push
setg RHOSTS.*
sudo cat <file>
tmux new-session -d
cd ..
ls++ -a
sudo python3 <file>
ls
read -p <string>
sudo pip3 <string>
git add .
ls
tmux
ls
cd ..
cd <string>
git remote
grep <string>
cd <string>
rm -rf <string>
python3
ls --help
sudo vim <directory>
userdel -r <string>
cp <string>
ls
rm -r <string>
fg
npm install
cd <directory>
ls
yarn add <string>
ls
dpkg -L <string>
cat -n <string>
ls
git commit
ls
nano <file>
sed -e <directory> -e <directory> -e <directory>
clear
systemctl status <string>
ls
git commit -m <string>
sudo apt purge <string>
ls
python3 <file>
clear
docker-compose logs --follow <string>
sed -i <directory>
multitail --no-repeat -c -s <number>
cd <string>
mkdir -p <string>
grep -w <string>
docker run <string>
clear
git clone --depth <number> <URL>
git pull -s <string> -X <string> <string>
sudo tee <directory>
vim <file>
ls -a
<directory> <string>
ls
tmux source <file>
ls
cd ..
cd ..
uname -r
sudo mkswap <directory>
git commit -am <string>
ls
sh
exit <number>
ls
ls -l
cd <string>
mkdir <string>
sudo apt-get update
grep -a <string>
cd <string>
git commit -m <string>
sudo crontab <file>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
tar zxvf <file>
cp <string>
git rm --cached <string>
kill -HUP <string>
ls -ls
wget -c <string> -O <file>
top
ls
do\
ping <string>
sudo service nginx restart
ls -al
cp <string>
grep <string>
cp <string>
cd <string>
ls
cd <string>
sudo apt-get install <string>
git add <string>
exit <number>
passwd
sudo chmod a+r <directory>
cd <string>
chmod +x <string>
git clone <URL> --branch <string>
exit <number>
cd ..
cd ..
cd <string>
exit
wc -l <string>
git status
cd <string>
bash <file>
ls -alh --directory
source <string>
rm -rf <string>
git commit -m <string>
curl -L --user <string>
mv <string>
ls
cd <directory>
cd <string>
screen -r
curl -L <URL> -o <file>
sudo apt -y <string>
clear
done < <string>
git init
diff --version
find . -empty -type <string> -print -delete
grep <string>
git add .
fg
exit <number>
pacman -S <string>
git clone <URL>
cd <directory>
cd ..
git commit -m <string>
more <file>
diff -b <file>
git commit -m <string>
sudo add-apt-repository <directory>
rm $DESKTOPS_DIR -r
ls
git status
cd <directory>
man <string>
ls
git submodule add <URL> -f
ping <string>
git push --force --tags <string>
exit
cd
git config --global <file> <string>
cat <string>
cd <string>
ls
pwd
ps -ae
ls
diff <file>
clear
alias <string>
ls
rm <string>
ls
python3 -m <string> list --outdated --format=<string>
ls
git commit -m <string>
npm run build
git push
then\
mount
git status
cat <string>
cd <string>
ls
grep <string>
grep <string>
ping <string>
vim <file>
cd <directory>
ps aux
sudo apt-get update --fix-missing
ls
ls -AF
npm start
rm -r <string>
ls
which <string>
ls
cd <string>
sudo sed -i <directory> <file>
cd ..
cd <string>
sudo apt-get -y <string>
vim <file>
cat <string>
sudo python <file>
cd ..
ls
touch <string>
cd <string>
git checkout <string>
ls
man
tcpdump -i <string> -c5 -nn <string>
cd <string>
git branch -m <string>
exit <number>
ls
fg
cd <string>
nohup <string>
ssh dirlic@10.18.0.39 -p <number>
cd <string>
cd <string>
ls
ls
sed -i <directory>
ping
mv <string>
kill -9 <number>
git branch
git push -u <string> master
cd
sudo nano <file>
sudo chmod u+rwx <file>
ls
ls
sed <directory>
w
vim <file>
git add <string>
sudo pacman -S <string>
free -m
cd <directory>
xhost +
clear
ls -l
cd <string>
git add <string>
sudo cp <string>
vim
cd ..
docker build -t <string>
chmod +x <string>
ls
vi <file>
clear
ls
git commit
cd <directory>
cd <string>
exit
read -rp <string> <string>
cd ..
read <string>
cd <string>
head -n <string>
clear
git commit
cd <string>
which <string>
ls
fg
ls
fg
ssh <string>
cd <string>
ls
cd <string>
sudo apt install <string>
git commit -am <string>
cd <string>
xrandr
clear
ls
xargs dirname
git push
df -lh
git commit -m <string>
ls
ls
ls
git init --separate-git-dir <directory>
ls -la
cd <directory>
ls
man -k <string>
ls
sudo apt install -y <string>
git commit -m <string>
ls
vim <file>
curl -sSL <URL>
sudo find <directory> -name <string>
less
cd <string>
ls -l
cd <directory>
exit
git commit -m <string>
cd <string>
cd <directory>
cd <string>
ls
history
clear
kill -9 <number>
kill -9 <number>
cd <string>
exit <number>
curl -sSfL <URL>
cd <directory>
cd <string>
exit <number>
cp <string>
rm <string>
git commit -m <string>
mv <string>
git add <string>
ls
kubectl get <string>
cd <string>
ls
history
ls
ssh <string>
ls
rm -rf <string>
top
ps aux
fg
git remote remove origin
sudo chmod <number> <directory>
ssh-keygen -t <string> -C <file>
git status
git checkout <string>
mv <string>
mkdir <string>
exit
sudo apt-get install <string>
git status
cp <string>
which
ls
sed -i <directory>
ls
docker-compose up -d --build
ls
grep <string>
wget <URL>
ls
cp -r <directory>
ls
reboot
vim <file>
wget <URL> --no-check-certificate
git clone <URL>
source <directory>
kubectl logs -f -n <string>
ls -1
sudo git remote <string>
ls -a
cd
git branch -D <string>
git commit -m <string>
cd <string>
cd <directory>
ls
git branch --set--upstream-to=<string>
cd <string>
lshw
git push origin master
touch <string>
git status
ls projects
ls
ls
npm run make
ls
cd <directory>
sudo mkdir -p <directory>
sudo make install
git add .
git status
cd
sed -i <directory>
touch <string>
cd <directory>
ls
clear
sudo make
git grep -n --threads <string> --break -I -E <string>
sudo ln -s <directory>
top
history -a
cd <string>
ls
cd ..
wget <URL>
exit <number>
ls -la
rm <string>
git rebase <directory>
git pull
ls
git add .
clear
ls
git add .
cd <directory>
cd <directory>
ls
ls
history
cd..
sed -e <directory> -e <directory>
cat <string>
curl -fsSLO <URL>
git status
pkill <string>
read -p <string>
sudo sed -i <directory>
git pull
cd <string>
mkdir <string>
npm start
npm run test
tmux source <file>
cd <directory>
vim
rm -fr <string>
cd ..
wget <URL>
rm <string>
apt-get install <string>
reboot
python3 <file>
git add .
ln -s <string>
chmod u+x <string>
cat <string>
read -s -n <number>
cd <string>
cd ..
sudo vim <directory>
rm -rf <string>
exit
cd <string>
ls
cd <directory>
git remote add origin <URL>
git checkout master
git stash apply <number>
ls
cd <string>
tmux a
cd <string>
sudo chown -R <string>
ls
sudo ntpdate -B -u <string>
cd <string>
docker build -f <string> -t <string>
clear
ln <file> <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> --wrap=<string> --from <string> --to <string> <string> -o <file> <string> {} \
ls
ssh -L <string> -N -f -l <string> <string>
git init
cd <directory>
cd -
exit
cd <string>
git init
cd <string>
cd <directory>
curl -# --upload-file <string>
mv <string>
code <string>
git commit
ls -a
ls
cd <directory>
cd ..
sudo pip install <string>
cd ..
<directory> <string>
rm <string>
sudo systemctl start <string>
clear
python3 <file>
fg
cd <directory>
ps
systemctl status <string>
su
sudo snap install --classic <string>
cd ..
vim <file>
du -shc <directory>
ls
pacman -S <string>
vi <file>
sudo loadkeys <string>
sed -E -e <directory>
grep -a -i -E --no-filename <string>
cd
ls
cd <string>
read -r -p <string>
apt-key add <file>
git checkout <string>
nano <file>
mkdir -p <string>
ping <string>
ls
su deployer -c <string>
git commit -m <string>
sudo reboot
vim <file>
vim <file>
pico <file>
man <string>
exit <number>
cd ..
ls
vi <file>
git commit -m <string>
git checkout <string>
git checkout -b
git init
ls
cat <string>
systemctl start docker
vim <file>
uniq -c
cd <string>
ls -la
sudo apt-get install <string>
npm install
git reset --hard <string>
ls
clear
ls
code .
cd <string>
fg
vim
find . -type <string> -print0
git fetch origin\
clear
touch file-$(date -I).txt
wget <URL>
clear
cd ..
git push
chmod +x <string>
ls
exit <number>
cd
vim <file>
clear
then\
wget -O <file>
cd ..
sudo -E <string> -y <directory>
sudo apt-get install <string>
ls
sudo dnf install -y <string>
cd ..
git pull
chmod <number> <string>
cat <string>
sudo stop uwsgi
ls
exit
grep -wrn <string>
exit <number>
cd <string>
sudo gem install <string>
mkdir <string>
cd <string>
cd ..
ls
ls
ls
exit
cd ..
clear
source <directory>
mv <string>
sudo apt upgrade
ls
ls
cd <string>
sudo touch <directory>
ls
ls
vi <file>
sed <directory>
ls
ls -la
ls
find . -empty -type <string> -print -delete
ls
sudo xbps-install <string>
git commit -m <string>
git status
pwd # tells you where you currently are
cd ..
ls
python3
npm install --only=<string>
vim <file>
ls
ls -ltr
ls
vim
sudo apt-get update
sudo rm -rf <string>
sudo do-release-upgrade
vi <file>
git add .
clear
git branch -M <string>
npm install -g <string>
grep <string>
history -w" <string>
mkdir <string>
git stash
git init
cd <directory>
exit
git status
cp <string>
rm -f <string>
ls
cd <string>
docker-compose up -d --build
cd <string>
git add <string>
env
cd <string>
git rebase --onto <string>
cd <string>
awk <string>
sudo apt update
source <file>
git hist
cd <string>
git commit -m <string>
npm run start
git clone <URL>
cd <string>
git pull
cd <string>
git status
sudo nano <file>
clear
wget -r --no-parent <string>
code .
ls
ls
clear
fg
git status
exit
mv <string>
tmux kill-server
sed -i <directory>
bash
cat <string>
git branch -M <string>
rm -r <string>
who
mkdir <string>
npm install <string>
cd <directory>
exit
exit
cd <string>
sudo sed -i <directory> <file>
docker-compose up -d --build
vim <file>
pwd
vim <file>
docker rm <string>
cd ..
git push
clear
ls -alF
nano <file>
exit
sudo vim <file>
ls
docker ps
ls
npm i
df -h
ls
git config --global <file> <file>
killall -ujboss
cd <directory>
done
touch <file>
ls
ls
vim <file>
clear
git push
clear
ls
cd <string>
ls
cd <directory>
ls
apt install -y <string>
byobu-tmux
diff --help
sudo vim <directory>
exit
ls
find . -type <string> -print0
cat <string>
cd <string>
git log
vim <file>
exit
ls
ls
git --version
git init
cd
cd <directory>
git pull origin master
git init
vi <file>
service --status-all
sudo add-apt-repository <string>
vim
git init
exit
cd <directory>
exit
npm install <string>
clear
ls
ls
ls
ls
git status
ls
cd <string>
sudo apt install <string>
vi <file>
python3 <file> -- <string> @CAMERA=<string> <string>
du -sh
pwd
exit
clear
date
ps -auxwf
docker-compose logs
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ls -la
vim <file>
rm -r <string>
npm start
grep <string>
ls
cd <string>
bash
tmux send-keys -t <string>
read -r <string>
fg
cd <directory>
vim <file>
git add <string>
sudo apt-get purge nodejs --auto-remove
exit <number>
ls
ls
killall <processname> # kill all processes with the name
sudo systemctl status <string>
git log
ls
sudo apt-get upgrade
sudo ufw enable
cd <string>
git reset HEAD^
ls
ssh <string>
chmod <number> <string>
cd <string>
python3
git checkout <string>
grep -x <string>
python3.11 <file>
systemctl status <string>
git status
vim <file>
cd <string>
exit
mv <string>
exit <number>
setg RHOSTS.*
cd <string>
ls
git init
ls
ls
git init
cp -r <directory>
ls
npm run start
grep -win -B <number> -A <number>
grep -i <string>
sudo crontab -l
docker compose up -d <string>
git remote add origin <URL>
cd <directory>
top
<file> program
cd <directory>
git clone <URL>
history
rm <string>
git add <string>
ls
cd <string>
docker exec -it <string> bash
mkdir <string>
brew install <string>
ls
curl <string>
curl -fsSL <URL>
mkdir <string>
cd <string>
sed -i <string>
rm <string>
vi <file>
vi <file>
cd <string>
ls
ls
vim <file>
ls
vi <file>
cd <string>
cd <string>
cd ..
tmux source <file>
fg
git commit <file> -m <string>
sudo reboot
npm run start
git add .
sleep <string>
cd <string>
npm run test
cd <string>
cd <string>
ls -lta
cd
fg
sudo apt install <string>
cd <directory>
sudo aptitude purge <string>
ls
cd
cd ..
du -sh <directory>
cd <string>
git diff <directory> -- <file>
ping <string>
fg
pwd
ssh <string>
ls
fg
ls
systemctl status <string>
cd <directory>
cd <directory>
clear
git init
ls -la
fg
sed <directory>
grep -i <string>
cd <string>
python3
ping <file>
exit <number>
git commit
sudo sed -i <directory> <file>
git checkout <string>
cd <directory>
tail -n10 -f <file>
chmod <number> <string>
clear
git status
vim <file>
rm <string>
cd <string>
pwd
fg
su root
cd <string>
git st
ls
cd <directory>
ls
sudo systemctl restart <string>
sed <directory>
exit
ls
git add .
exit
ls
mv <string>
cd <string>
git add .
cd <string>
clear
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
sudo apt install git -y
apt
curl <string>
sudo ls <directory>
git commit -m <string>
npm run build
sed -e <directory> -e <string> -e <directory> -e <directory>
cd <string>
vi <file>
ls
sudo xbps-install -Su
git status
cd <directory>
docker pull <string>
ls
cd <string>
vim <file>
ls
vi <file>
cd <string>
vi <file>
ls
grep -vE <string>
cd <directory>
vim
ls
exit
cd <directory>
docker-compose up
cd <string>
yarn add <string>
fg
exit <number>
chmod +x <string>
ls
source <string>
ls
chmod <string>
ls
ls
wget -O <file>
git pull
ls
dpkg
git add <string>
type <string>
git status
ls
sudo xbps-remove <string>
sudo sed -i <directory> <file>
ls
cd
git commit
docker ps -a
file <string>
find <directory> -type <string> -mtime <string> -exec <string> -f <string>
ls
ls
source <file>
ls
chmod <number> <string>
ls
cd <string>
git status
ls -R <string>
cp -r <directory>
cd <directory>
sed -i <directory>
grep <string> -r
git clone <URL>
git push
read -p <string>
git push
ls
ls-i -aF --color=<string> -w <string>
ruby -e <string>
git pull
ls
cd
sudo chmod +x <string>
sudo sed -i <directory> <file>
cd ..
cd <string>
cd <string>
cd <directory>
curl <string>
cd <directory>
docker push <directory>
code .
sudo start uwsgi
ls
chmod <number> <string>
ls -lah
git pull
node -v
htop
mkdir -p <string>
cd <directory>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
ls
rm -r <string>
ls
ls -lia
python3 <file>
git push origin master
exit
ls
find . -empty -type <string> -print -delete
git push
ls -la
cd
ls
git status
git push -u <string> main
unset <string>
python <file> runserver 0.0.0.0:2016
cd <string>
ls -1p <string>
date
helm <string>
clear
find . -maxdepth <number> -regextype <string> -regex <string> -type <string>
su root
fg
man <string>
mv <string>
vim <file>
ls
ls
sudo apt upgrade
ls
ls
ps aux
vim <file>
cd <directory>
npm uninstall <string>
pwd
sleep <string>
setg RHOSTS.*
cd <directory>
cd <string>
cd <string>
ls
clear
fg
ssh subnut@10.20.74.166 -T <string> attach
git add <string>
npm run coverage
fg
nc <file> <string>
vim <file>
npm run start
find . -type <string> -name <string> -print
cd <string>
ping <string>
service apache2 reload
ls
git add .
docker exec -it <string> bash
scp <string>
fg
ls -alrt <string>
git push -u <string> main
ls
tmux
sudo userdel <string>
git pull
wget <URL>
ssh-add
ls
cd <string>
ps auxww
npm install --global <string>
git push
git push --all --force
git branch -a
cp -R <string>
cd <directory>
rm -rf <string>
npm http <number>
ls
ls
git status
fg
mv <string>
git push -u <string> master
clear
git commit -am <string>
sudo vim <directory>
cd <directory>
git commit -m <string>
git checkout -b <string>
fg
vi <file>
git remote add origin <URL>
ls
man <string>
exit <number>
git remote add origin <URL>
ls -l
ls
rm -f <string>
git submodule update --init
<directory> <string>
clear
clear
grep -i <string> >files
sudo pacman -Scc
git pull origin master
sync
cd ..
cp <string>
sudo apt-get install <string>
rm -rf <string>
tmux
docker-compose logs
docker-compose down
brew tap <directory>
vi <file>
ls
npm run test
sed -i <string>
sudo service nginx restart
cd <string>
git commit -m <string>
ls
uname -r
cd <string>
mkdir <string>
vim <file>
sudo ifconfig en0 ether <string>
npm init -y
exit <number>
nano <file>
clear
ls
git add <string>
ssh dirlic@10.18.0.39 -p <number>
code <string>
cd <string>
cd <string>
git stash clear
fg
open <string>
git checkout -b <string>
ls
docker run --detach --name=<string> --env=<string> <string>
python3 <file>
cd <string>
mkdir <string>
mv <string>
ls
rm <string>
git clone --depth=<number> <URL>
cat <string>
git add .
code
rm <string>
npx tailwindcss init -p
vi <file>
sudo service nginx reload
ls -l
cd ..
sudo sed -i <directory> <file>
cd <directory>
npm run build
sudo apt install -y <string>
cd <string>
npm run dev
git status
ls
fg
ls
cd <directory>
cd <directory>
sudo systemctl status <string>
du -ahBM <directory>
sudo nano <file>
exit
vi <file>
ls
make clean
cd <string>
cd <string>
systemctl stop docker
grep <string>
cd ..
strings <file>
sudo apt-get update
ls -a
docker-compose logs
git status
mv <string>
cd
ls
git status
git status
curl <string>
wget -r <URL>
ls
vim <file>
cd <directory>
sudo cp <string>
rm <string>
git clone <URL>
gpg --verify <file>
sudo sed -i <directory> <file>
sudo apt-get update
ls
git status
cd <directory>
ssh-add -l <string>
git commit -am <string>
sudo nano <directory>
git commit
ls
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
cd <string>
cd <string>
vim <file>
cd ..
mkdir <string>
tee <file>
sed -i <string>
rm <string>
cd <string>
systemctl stop <string>
git clone <URL>
rm -r <string>
read -rp <string> <string>
git add .
vim <file>
ls
wc -l
vim <file>
cd <string>
python3 <file>
cd <string>
git commit-tree <string>
ls -lh
cat <string>
git push
exit <number>
find . -type <string> -name <string>
sudo python2 <file> --cascade=<file> <number>
exit
exit
vi <file>
head -20
python3 <file>
ls -al
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
vi <file>
ls
ls
vi <file>
sudo apt install <string>
mv <string>
ls
sed -i <directory>
cd ..
pwd
dir
less
ls
git pull origin main
cat <string>
git commit -m <string>
read -s -n <number>
vim <file>
git push -u <string> master
docker-compose logs
git pull
npm install
git status
rsync -rt -e <string>
git commit -m <string>
open <string>
cd <directory>
fg
ls
git remote add origin <URL>
cd <directory>
awk -F <string>
ls
ls
ls
ls
git add -A
ls
git status
sudo -i
git hist
git branch -D <string>
git add <string>
rm <string>
vim <file>
tail -n <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
cd <directory>
curl <string>
vi <file>
shutdown -h <string>
ls
ls -alh
sudo apt-get install <string>
ls
ls -la
git push
grep <string>
cd <string>
vim <file>
sudo apt -y <string> <string>
clear
sed <directory>
cd <directory>
git add .
git commit
git pull origin master
clear
vim <file>
git push -u <string> bryan-guner
vim <file>
git commit -m <string>
exit
ls -la
vi <file>
ls
vim <file>
vi <file>
git status
cd <string>
rm -f <string>
cd
ls
npm update
ls -la
ls
find . -name <file>
cpio -p -d -v <directory>
git checkout <directory> -f
curl -X <string> -H <string>
git checkout <string>
git commit -m <string>
git rebase <directory>
cd <string>
ls
ls
clear
sed -i <directory>
git pull
sudo apt upgrade
git status
git add .
exit <number>
ls
grep -v <string>
cat --color <string>
history -c
git commit -m <string>
npm run watch
cd <string>
git checkout -b <string>
exit
cd <directory>
read <string>
rm <string>
head -$lineas <string>
npm run package
docker tag <string>
npm i <string>
su
cd <string>
sudo openvpn --config <directory>
python3 <file>
cd <string>
cd ..
cd <string>
ls
git push -u <string> master
ls
git push
grep <string>
ls
git log --stat
ls
git init
ls -l
ls
git clone <URL> --depth <number> --branch <string> --single-branch
cd <string>
cp <string>
grep -Fxq <string>
docker ps
ls
curl --proto <string> --tlsv1.2 -sSf <URL>
cd <string>
xargs -L1 <string>
ls
git status
exit
git pull
cd <string>
vi <file>
ls --help
wget <URL> -O <file>
ls++ -a
ping <string>
sudo apt-get remove <string>
read -r <string>
git reset <string>
date <string>
wget <URL> --output-document=<file>
vi <file>
git fetch
exit
cd ..
cd ..
cp <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ls _build
curl <string>
ls
python3 <file>
chmod +x <string>
curl -sS <string>
bash
cd <directory>
sudo chmod +x <string>
type <string>
unset <string>
ls
find . -size <string> -a -print -a -exec <string> -f <string> \
clear
ls
vim <file>
mkdir <string>
ls
mkdir <string>
vim <file>
ls
ls
sort
ssh -p <string> user@host # connects to host on specified port as user
cd <string>
top
su
cd <string>
exit <number>
ls
sudo raspi-config
sudo rm -r <string>
sudo nano <directory>
git pull origin master
gsettings set <file> <string>
ps aux
git add <string>
sudo mkdir <string>
openssl rand -base64 <string>
python3.8 -m <string>
sudo nvpmodel -q
exit <number>
ls
sudo kill -9 <number>
ls -la
sudo su
python3 <file>
else\
ls
source <string>
ls
clear
zeus.polsl.gliwice.pl - <number>
chmod +x <string>
cd <string>
cd <string>
exit <number>
clear
ls -sh <string>
git status
ls
ls
ls
history
ls
sudo apt install -y <string>
rm -rf <string>
exit
test
ln -s <string>
ls -al
cd ..
scp <string>
sudo sed -i <directory>
cd <string>
ls -R
grep -i <string> >files
less
ls
wget <URL>
env
vim <file>
sudo apt dist-upgrade
ls
cd <directory>
apt remove --purge <file>
clear
npm uninstall mongodb --save
npm install --save <string>
sudo apt install <string>
git rebase -i <string>
clear
wget <URL>
git fetch
ls -a
mkdir <string>
git config --global <file> <file>
mkdir <string>
read -s -n <number>
man <string>
cd <directory>
cd <string>
fg
ls
cd <directory>
git add .
npm start
sudo apt-get update
git status
ls
vim <file>
cd <string>
cd <directory>
mkdir <string>
setg RHOSTS <file>
git commit -m <string>
sudo mv <file>
print <string>
touch <file>
ls -ltr
cd <directory>
chmod <number> <string>
vim <file>
git push
cp <string>
cd <string>
cd
mv <string>
cat <string>
ls
sudo yum install <string>
tail -n <string>
cd ..
git clone <URL>
sudo python <file> --cascade=<file> <number>
git status
sudo apt --fix-broken <string> -o <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string>
cd <string>
git status
docker-compose ps
sudo sed -i <directory>
ls -/
git commit -m <string>
eval <string>
find . -name <file>
fg
cd <string>
cd ..
git status
ls
ls
fg
cd
cd ..
cd <string>
sudo pacman -S <string>
cat <string>
vim <file>
cd <string>
chown -R <string>
ls
ps -a <string> selects all processes with a tty except session leaders
python3 <file>
cd <directory>
clear
clear
rm -rf <string>
vi <file>
sudo sed -i <directory> <file>
git clone <URL>
vim <file>
ls
sudo vi <directory>
openssl --version
mv <string>
kubectl --namespace <string>
df -i
git status
sort -hr
git add <string>
cd
rm -rf <string>
ftp <string>
cd <string>
cat <string>
ls
vim <file>
git push
git commit -m <string>
cd <string>
git diff <string>
ls
mv <string>
grep <string>
git remote add origin <URL>
ls
git add .
sudo npm install
wget -nd -m -nv <URL>
mv <string>
mkdir <string>
mkdir -p <string>
git push origin master
cd <string>
find . -size <string> -a -print -a -exec <string> -f <string> \
ls
wget <URL>
sudo apt update
exit
clear
ls
clear
docker stop bigballers
mkdir -p <string>
sudo groupadd <string>
mkdir -p -m <number>
sudo ln -s <directory>
docker-compose down
npm init -y
man <string>
find . -name <file> -exec <string> -f <string>
du -sh <directory>
sudo service <string>
ls
ls
cd <directory>
cd
git push
git clone <URL>
rm -rf <string>
ls -l
cat <string>
git add .
bash --version
patch -p1 <string> <file>
exit
ls
cat <string>
npm i <string>
tmux source <file>
cd <string>
sudo apt-get install -y <string>
npm run test
cd
git status
systemctl start docker
sed -i <directory>
git add <string>
ls
ls -lrt
grep <string>
ls
cd <string>
sudo apt-get install <string>
cd <string>
cd ..
cd <string>
git branch
vi <file>
cd <directory>
cd <directory>
vim <file>
which <string>
cat <string>
exit <number>
touch <string>
cd ..
ls
ls
git
ls
git merge <string>
sudo bash <file>
ls
ls
exit
cp <string>
cat <string>
go build <file>
ls
ping <file> -c <number>
mv <string>
kill -9 <number>
mkdir <string>
cp <string>
ls
exit
cd <string>
bash <file>
ls
ls
ls -lrt
mv <string>
cd
shutdown -h <string>
fg
clear
sed -e <directory> -e <directory>
ls
cd <string>
ps -aux
npm i
docker cp <string>
dmesg
npm install
python3 <file>
cd ..
sudo su
git fetch origin\
ls
git status
cd <string>
git log -2
clear
history
ssh <string>
grep $BAZEL_GREP -rE <string>
git push -f
vim <file>
sudo dnf install <string>
exit
ls
cd <string>
ls
ls
clear
cd <string>
chmod <number> <string>
sed <directory>
vi <file>
find . -name <file> -type <string> -exec <string> -rf <string>
fg
vi <file>
git stash pop
grep -x <string>
ls
cd <string>
npm-recursive-install
ls
ls
git pull origin
ls
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
chmod -x <file>
ping <string>
vi <file>
du -sh
npm init
vim <file>
nano <file>
nano <file>
cp -f <string>
cd <string>
ls
git configh --list
grep -rl <string>
vim
mkdir <string>
vi <file>
ls -l
ls
cd
sudo sed -i <directory>
read -s -n <number>
telnet <string>
git add .
exit
rm <string>
ls
base64
ls
git pull
ls
ls
grep <string>
wget <URL>
git add .
python3 <file>
ls
tar -xvf <file>
git clone <URL>
npm ls -g
cd <string>
git pull
git push
cd <directory>
vim <file>
cd <directory>
sudo apt-get install -y <string>
fg
cd <string>
git init
ls
history
cd <string>
ls <file> -a
cd <string>
git init
git push -u <string> main
time <string>
rsync -rt <string> -p <number>
cat <string>
cd <string>
vi <file>
cd ..
read -r -p <string>
git commit -m <string>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
grep -n <string> <directory>
less
git checkout <string>
ls -a
ls
exit
apt install -y <string>
git push
git clean -fd
ls
cd <string>
ls
clear
sudo virsh <string>
mkdir <string>
apt-get install <string>
tr <string>
ls
git pull
git reset HEAD^
cd ..
cd ..
apt-mark
pwd
git add .
git ls-remote <string>
cd <string>
vi <file>
pwd
git commit -m <string>
cd ..
vim <file>
sudo python <file> --cascade=<file> <number>
sudo su
ls
cd
clear
exit
sh <file>
python3 <file>
mkdir <string>
sudo sed -i <directory>
curl --silent <string>
git status
sudo nano <file>
cd <string>
wget -q -O <file>
git add .
sudo certmgr -ssl -m <URL>
tmux
npm run test
scp <string>
git checkout <string>
ls
git status
cd <directory>
ls
mv <string>
ls
ls
chmod u+x <string>
ls -la
grep <string>
docker-compose stop
cd ..
vim <file>
fg
cd
done
git checkout <string>
vim -O <file>
cd <directory>
ls -l
cd <string>
python3 <file>
sudo ls <directory>
ping <string>
cd ..
sed <directory>
cp -r <directory>
ls
git pull
exit <number>
less <string>
ls -la
<file> program
grep <string>
npm i <string>
git push -u <string> master
git status
bash -x <string>
history
git push
systemctl -h
vim <file>
clear
fg
git add .
vi <file>
find . -name <file>
mv <string>
sudo apt-get update
find . -size <string> -a -exec <string> -f <string>
ls
cd <directory>
exit
find <string> -name <file>
curl <string>
mv <string>
nano <file>
ls
eval <string>
cd ..
git branch
clear
sudo lighty-enable-mod <string>
chmod +x <string>
sudo bash
<file> program
cd ..
sleep <string>
sudo chown <string>
ls
git push -u <string> master
pwd # tells you where you currently are
wc -l
sudo npm i prettier -g
vim <file>
cp -r <directory>
ls
sudo pacman -S <string>
sudo dnf config-manager --add-repo <URL>
ls
top
ls
npm i <string>
openssl rand -hex <number>
rm -r <string>
rm <string>
history
nc <string>
ls
sudo nano <directory>
npm run dev
ls
rm -rf <string>
ls
exit
sudo -i
ls
rm <string>
python3 -c <string>
exit <number>
exit <number>
ls
git pull
clear
rm -f <string>
sudo deluser <string>
sudo journalctl -xeu <file>
sudo apt-get autoremove
open .
clear
clear
ls
sudo apt install <string>
sudo apt update
sudo nano <directory>
strings hidden_variable -e
ls -l
git push
cp <string>
ls
git merge <string>
cd <directory>
grep <string>
vim <file>
ls
git add <string>
rm -r <string>
clear
ls
grep <string>
sudo docker kill corrade
rm <string>
ls
git commit -m <string>
cp <string>
python3.11 <file>
vi <file>
cd ..
git push
vi <file>
git commit -m <string>
cd
cd <directory>
npm install -g <string>
grep <string>
read <string>
sudo systemctl restart <string>
mkdir <string>
sudo sysctl -w <string>
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
exit <number>
bash --version
vim <file>
ls
fg
git pull
cd <string>
curl --data <string>
man <string>
ls
cat <string>
exit
git branch -m <string>
exit
vi <file>
git checkout <string>
cd <string>
ls
more <file>
ls
cd <string>
sleep <string>
cd
sudo apt-get -y <string> <string>
cd ..
cd <string>
git tag <string>
cd <string>
cd <string>
git add <string>
vim <file>
history -a
sudo apt-key add -
exit <number>
cd <directory>
sudo apt-get upgrade
cd <string>
ls
python3 <file>
ls
git status
ls
screen -r
ls
ls
ls
sudo sed -i <directory>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git --git-dir=<string> <string>
sudo npm install express --save
cd <string>
cd <string>
vim <file>
ls
sudo pacman -S <string>
cd ..
cd <string>
ls
fg
grep <string>
find
clear
sleep <number>
ls
fg
sudo apt-key add -
ls
git add <string>
ls
cp <string>
perl -pe <string>
cd <directory>
sudo docker rm corrade
cd ..
exit
exit
git add <string>
git status
rm <string>
mkdir -p <string>
nohup <string>
ls
dir
python3 -m <string> install <string>
vi <file>
ls
ls
sudo apt update
clear
vim <file>
ls
git branch -M <string>
cd ..
ls
kubectl get pods -n <string>
dir
vi <file>
ls
git add .
cd ..
cp <string>
docker build -t <string>
npm i <string>
less <string>
ls
git config --list
fg
vim <file>
ls -a
exit
git push
vi <file>
rm <string>
curl <string>
cd <string>
ls
ls
ls
read <string>
clear
npm install
cd ..
dpkg -l
then\
git remote add origin <URL>
clear
sudo apt update
git ls-remote <string>
export <string>
git pull origin <string>
ls
done
vim <file>
vim <file>
sudo apt-get update
ls
sudo httrack --ext-depth=<number> <URL>
touch <file>
ls -la <directory>
cd <string>
git restore --source=<string> --staged --worktree --source-prefix=<string> <string>
cd <string>
read -p <string> -r
ln -s <string>
git add <string>
vim <file>
vim <file>
cd <directory>
cd
cd
vim <file>
pacman -S <string>
ls
apt update
cd <string>
cd <string>
ls
export -f <string>
cd <directory>
npm audit fix -f
clear
apt list --upgradable
cd <string>
fg
exit <number>
cd <directory>
tail -f <string>
apt-get install -y <string>
cd <string>
git init
groups
cd <directory>
clear
ssh -T <string>
mv <string>
exit
git commit -m <string>
service apache2 reload
done
curl <string>
sudo cp <string>
find . -maxdepth <number> -type <string> -executable
rsync <directory>
git pull
clear
vi <file>
git commit -m <string>
grep -v <string>
python3 <file>
ssh <string>
ls
vim <file>
vim
npm start
vim <file>
history -r <string>
clear
vim <file>
cd <string>
curl -sSL <URL>
cat <string>
git commit -m <string>
cat <string>
sudo dnf install <string>
git push origin master
pwd
find . -name <file> -type <string> -print -delete
source <file>
sudo netstat -tanup
cd
sudo apk add <string>
cd ..
service <string>
man <string>
exit <number>
git add .
cd <directory>
ls
brew tap <directory>
git add .
tr <string>
sed -i <string>
cd <string>
docker
grep <string>
sudo kill <number>
python3 <file>
ls
cd
vi <file>
ls
tmux
chmod +x <string>
yarn add <string>
python3 <file>
cd <string>
sudo xbps-remove <string>
mkdir -p <string>
git commit -m <string>
cd <string>
pkill <string>
xargs kill
git add .
git commit -m <string>
ls
ls
git commit -m <string>
ls
ps aux
grep <string>
git pull origin development
ls
ls
mv <string>
git diff --no-ext-diff -w <string>
python3 <file>
ls
vim <file>
cd <directory>
cd - <string> <string>
cd <string>
sleep <number>
clear
sudo apt-get install <string>
mv <string>
sudo apt-get install <string>
reset
sudo docker rm corrade
sudo apt-get update
ls
wget <URL>
git remote --add <file>
node <file>
git merge <string>
rm -rf <string>
nano <file>
ls
ls
cd <string>
ls
sh
fg
apt-get install -y <string>
mv <string>
read -r <string>
sudo apt-get install <string>
tmux a
cd <directory>
exit
git remote add origin <URL>
cd ..
tr
top
ls
cpio -pdm <directory>
ls
ls
sudo apt update
sed -i <directory>
git add .
service apache2 reload
fg
sudo reboot
cd <directory>
sudo apt-get update
bash --login" <directory>
git ls-files --deleted
cd ..
cp <string>
systemctl enable <string>
ls
cd <string>
vim <file>
ls -l
ls
git pull
vim <file>
sudo cp <string>
cat <string>
vi <file>
exit
git add <string>
ls
ls
cd ..
git init
cd <string>
ls
python3 <file>
ls
cd
wget -qO- <URL>
cd <string>
less <string>
git branch
vi <file>
exit
sort
docker run --rm -it <string>
sed -E -e <directory>
ls
rm -rf <string>
git commit -m <string>
wget -q -O <file>
sh <file>
git push
cd ..
ls
sed <directory>
cd <string>
cd <string>
git commit -m <string>
grep -e <string>
cd <string>
which <string>
read <string>
python3 <file>
ls
vim
git clone <URL>
ls
grep -Eq <string>
mkdir -p <string>
rm -r <string>
mkdir <string>
cp <string>
vi <file>
ls
ls
python3.11 <file>
chmod <number> <string>
ls
sudo apt update
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
ls
pbcopy
ls -a
cd <string>
mv <string>
pwd
cd <directory>
vi
git status
cd <directory>
<directory> <string>
ls
ls
npm install --save <string> --force
cd ..
cd <directory>
cd <string>
history
sudo wget <URL>
wget -q <string> -O <directory>
git push -u <string> master
git add .
less
sudo -H <string> install <string>
git status
chmod +x <string>
source <string>
git commit -m <string>
cd <string>
grep -n <string> <directory>
vim <file>
exit <number>
touch <string>
cat <string>
cd ..
git status
cd <string>
ls
sudo apt install <string>
sudo apt-get upgrade -y
unset color_prompt force_color_prompt
sudo apt update
cd -
sed -i <directory>
cd <string>
git config --global --list
ls -l
git commit -m <string>
git branch -v
vi <file>
cd <string>
grep <string>
sudo nano <directory>
git clone <URL>
git add .
cd <string>
git status
git add <string>
read -r <string>
exit
clear
ls
ls
ls
more <file>
sudo nala install <string>
ls
git status
git push -u <string> main
cat <string>
sudo npm install
sudo mv <file>
sudo python <file>
less <string>
git checkout <string>
vim <file>
git push
git status
sudo apt update
sudo apt-get install <string>
git clone <URL>
npm i
ls
gsettings set <file> <string>
find . -not -path <directory> -not -name <string> -delete
cd <string>
ls
rm -rf <string>
grep <string>
git commit -m <string>
cd <string>
npm uninstall --save <string>
dmesg
git add <string>
cd ..
git branch -a
exit
cd <directory>
git branch
cat <string>
git log
htop
ls
ls
git commit
python3 <file> runsslserver 192.168.0.53:10006 --certificate <file> --key <file>
ls
ls
clear
ssh dirlic@10.18.0.39 -p <number>
docker pull <string>
clear
git pull origin main
ls -l
git remote add origin <URL>
git init
sudo locale-gen <string>
ls
git clone <URL>
vim <file>
uniq
command -v <string>
ls
cd ..
mkdir -p <string>
ls
sudo ansible webservers -m <string> -a <string>
git add .
touch <file>
git commit -m <string>
unset color_prompt force_color_prompt
ssh dirlic@10.18.0.39 -p <number>
git commit -m <string>
cd
cd <string>
read <string>
cd <string>
exit
cd ..
sudo <directory> <string>
ls
rm -rf <string>
cd <directory>
sudo make install
touch <string>
cd ..
git clone <URL>
wget <URL>
git commit -m <string>
ls
xargs -L1 <string>
rm -f <string>
cd <string>
cd <string>
python3 <file>
git commit
vim <file>
ls
systemctl status <string>
cd
git pull origin development
mkdir <string>
ls
grep --color <string>
sh <file>
ip a
rm -f <string>
cp <string>
fg
ls
grep <string>
nano <string>
git status
code <string>
git status
sudo reboot
cd <directory>
read -r -p <string>
source <directory>
exit <number>
mv <string>
diff -n <string>
cd ..
npm run start
df -lh
ls -all <directory>
reboot
vim <file>
ls
grep <string>
cd <directory>
unset <string>
ls
bash
cd <string>
sudo apt install --fix-broken -o <string>
node
vi <file>
cd <string>
head
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
exit
cd <string>
nc <number> <number>
git push origin main
sudo apt install -y <string>
git add <string>
ls
fg
git add <string>
cd <directory>
ls
ls
git commit -m <string>
awk <string>
tail -f <directory>
sudo ip route add <string>
env
vim
cd <string>
sudo apt -y <string>
npm run dev
sudo pip install <string>
cd <string>
git rebase -i <string>
sudo apt install <string>
sudo systemctl daemon-reload
sudo rm -r <string>
sudo yum install <string>
ps aux
git log --date=<string> --decorate --graph --pretty=<string> <string>
ls
git status
npm install -g <string>
git add <string>
curl -G <directory>
sudo cd <directory>
clear
ls -la
sed -i <directory>
cd <string>
git commit -m <string>
source <directory>
cd <string>
ls
npm install
cd
grep <string>
cd <string>
git branch -M <string>
sed -i <string>
bash
git push -u <string> main
sudo xbps-install <string>
ls -F
sudo subl <string>
cd <directory>
head -n-5
cd <string>
sudo curl -L <URL> -s)-$(uname -m) -o <directory>
sudo apt-get install <string>
export <string>
ls
ls
cd <directory>
node <file>
wget <URL>
cd <string>
npm run test
clear
vim <file>
chmod <string>
sudo install -t <directory> -D -m <number>
npm run bench -- -c <file> -n <file>
ls
curl <string>
alias <string>
git init
sudo sed -i <directory> <file>
ls
git remote add origin <URL>
chmod -x <file>
git clone <URL>
git status
pwd
yarn <string>
exit <number>
sudo ls <directory>
ls
sudo rm -r <string>
cd <string>
fg
cd <directory>
ls
vi <file>
clear
exit
ls -l
sudo pacman -S <string>
cd <string>
cd <directory>
vim <file>
cd
git remote -v
vim <file>
docker run -it --entrypoint <directory>
vim <file>
clear
git commit -m <string>
read <string>
nohup rsync -avzhn --exclude <string> --exclude <string>
cd ..
sudo update-alternatives --install <directory>
cd ..
sudo apt remove <string>
ls -alF
rm <string>
ls
ls
cd <directory>
mv <string>
ls -l
ls
service apache2 reload
grep -i <string> >files
cd <directory>
cd <string>
sudo localectl set-x11-keymap <string>
rm -rf <string>
git pull
sudo python3 -m <string>
git push
exit
git add -A
read <string>
git remote add origin <URL>
cd ..
ls
git init
date <string>
ls
cd
git config --global <file> <string>
cd ..
git branch -M <string>
do-release-upgrade -d
ls
vim <file>
fg
time
which <string>
cd <string>
sudo pacman -S <string> --noconfirm
fg
clear
find . -name <file>
ps -auxwf
ls
unset <string>
sudo systemctl stop <file>
npx shadcn-ui@latest add <string>
chmod u+x <string>
git tag <string>
sudo python2 <file> --cascade=<file> <number>
grep <string>
npm run bench -- -c <file> -n <file>
python3 <file>
git add <string>
exit
ls -l
clear
cd
grep <string>
ls
source <directory>
ls
cd <directory>
touch <string>
sudo gedit <string>
git reset --hard
ls
ls
rm -rf <string>
ps -auxwf
python3 <file>
npm install
ls
wc -l
cd <directory>
vi <file>
sudo nano <directory>
cd
cd <string>
git push origin master
ls
ls
git add <string>
git add .
vim <file>
sudo kill <number>
git add --all
git status
sudo apt-get update -y
sudo apt-get install <string>
cd <string>
sudo yum install -y <string>
exit
git clone <URL>
ls -l
git st
cd <directory>
cd <string>
git push -u <string> master
git add .
mv <string>
vim <file>
git push
cd <string>
cat <string>
git revert <string>
vim
sudo pip install --upgrade <string>
rm <string>
ls -ltr
cd ..
git push -u
cd <string>
ls
cd <directory>
npm install -f
ls -a -l
cd <string>
clear
cp -v <string> <directory>
sudo apt install <string>
git init
read -r -p <string>
npm install
ls -lh
sed -E -e <directory>
sudo python <file>
ls
git branch -a
ls
ls
vi <file>
rm -fv <string>
git push -u -f <string>
cd <directory>
cd <directory>
git add .
find . -name <file>
vim
cd <string>
cd <string>
vim <file>
git push --delete <string>
git add <string>
read -p <directory> -n <number>
cd <string>
rm -r <string>
git status
ls
git remote add origin <URL>
ls
sed <directory>
vi <file>
clear
fg
sudo pacman -Q
git commit -m <string>
ls
python3 <file> --epochs <number>
git init
clear
ls
git commit -m <string>
git commit -m <string>
exit <number>
xargs grep <string>
python3 <file>
then
ls
ip a
grep -v <string>
rm -rf <string>
clear
docker-compose up -d --build
clear
wget <URL> -O <file>
head -n <string>
sudo poweroff
clear
sudo vim <file>
sudo docker rm corrade
zeus.polsl.gliwice.pl - <number>
cat <string>
ls -altr
docker images
less <string>
cd ..
cd <string>
mount <directory> <directory>
exit <number>
sed -i <directory>
sudo apk add <string>
vim <file>
cd
unset color_prompt force_color_prompt
ls
npx shadcn-ui@latest add <string>
cd ..
sudo su
ls
git diff
ls -la
python3 <file>
ls -a
nano <file>
fg
clear
git pull -v <string>
cd ..
cd <string>
vim <file>
vim <file>
git config --global <file>
ls
python3
clear
wget -O <file>
git commit -m <string>
cd ..
vim
cd <string>
sudo su -
cd <directory>
ls
man -kpthread
sh
ls
grep <string>
nano <file>
ls
grep -Fxqi <string>
clear
git commit -m <string>
rm -rf <string>
git flow <string>
cp <string>
exit
git commit
git branch -M <string>
ls
ls
git pull
cp <string>
clear
sudo chmod +x <string>
sudo npm start
mv <string>
ls
ls
mkdir <string>
cd <string>
clear
finger <user> # displays information about user
sort -u
ls
exit
<directory> <string>
npm install <string>
ls
ls
sudo apt-get update
ls
cp <string>
cd
npm install
vi <file>
sudo cp -rf <string>
git clone <URL>
ls
rm <string>
reset
ls
find . -empty -type <string> -print -delete
cd
git status
npm run test
cd
unset color_prompt force_color_prompt
cd <string>
touch <string>
cd <string>
docker login
ls
grep <string>
git init
rm -rf <string>
xargs -L1 <string> clone
rm <string>
sed -i <directory>
ls
git init
sudo apt install <string>
ls -al
cd <directory>
ls
openssl rand -hex <number>
cd <string>
su
cd <string>
man -t <string>
git push
ls
npm install --only=<string>
vi <file>
curl -o- <URL>
git status
mkdir <string>
git add .
mv <string>
cd <string>
ls -l
cd ..
exit
ls
git reset --soft <string>
ls
cd <string>
source <string>
git checkout <string>
cd <string>
type <string>
cd
rm -r <string>
ls -la
ls
vim <file>
grep <string>
exit
ls
cd <string>
sh <file>
mkdir <string>
ls ..
ls
clear
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
cd <string>
ls
clear
git commit -m <string>
ls
sudo apt-get -y <string>
ssh <string>
exit
su
<directory> <string>
touch <file>
npm start
ls
sudo nvidia-xconfig -a --cool-bits=<number> --allow-empty-initial-configuration
mkdir <string>
git commit -a
rm -rf <string>
exit
vim <file>
exit
git add .
script/build.sh
sudo poweroff
npm run package
vi <file>
touch <string>
tail <file> -n <number>
cd <string>
sudo systemctl start <string>
rm <string>
history
ls -al
wc -l
ls
rm -r <string>
git add .
wget <URL>
curl <string>
cd ..
sudo sed -i <directory>
code .
else
git status
wc find . -iname <file>
ps -auxwf
cd ..
diff <file>
ruby -e <string>
xargs -L1 <string>
git add <string>
fg
pwd
mv <string>
exit <number>
git branch -u <directory>
kill -s <number> <number>
exit <number>
pacman -S <string>
exit
cd ..
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
grep <string>
cat <string>
cut -d <string> -f <string>
ls
git ls-remote <string>
cd <string>
ls
vim <file>
clear
cd <string>
sudo python3 <file>
ls -d <string>
ls
cd..
npm install --save <string>
rm -rf <string>
ls
ls
ls
git commit
python3 <file>
ls
find . -name <file> -exec <string>
cd <string>
tail +n # Print nth line from file.
git merge develop
systemctl status <string>
sudo fdisk -l
docker ps -a
ls Downloads -a
node <file>
clear
sed <directory>
cd <string>
python3 <file>
git commit
vim <file>
git add .
ls
grep <string>
git commit -m <string>
mkdir <string>
git clone <URL>
npm install <string>
cp <string>
vim
sudo apt-get update
wc
cat <string>
last
ls
cd <string>
ansible-doc -l <string>
ls
git clone <URL>
mkdir <string>
find . -type <string> -name <string>
cd <string>
sudo sed -i <directory>
git push -u <string> master
rm <string>
exit
exit
cat <string>
top
exit
ps aux
ls
sudo su
ls
cd ..
bash
cd <string>
exit
xargs -I <string>
ls
cd <string>
cd <directory>
ls
sudo kill -9 <number>
python3 <file>
done
sudo sed -i'~' -E <string>
rm -rf <string>
cd <string>
exit <number>
sudo openssl verify -verbose -CAfile <file>
find . -name <file>
find . -name <file> -exec <string> <string>
mv <string>
sudo cron start
sudo pacman -S <string>
cd <directory>
ls
sudo usermod -a -G <string>
ls
vi <file>
nano <file>
clear
git branch -v
find . -name <file> -type <string> -exec <string> -rf <string>
cd <directory>
vim <file>
wget -SO <directory>
fg
git filter-branch --index-filter <string>
git init
cd <directory>
ls
cd <string>
rm -f <string>
cp -r <directory>
ls
ssh <string>
git status
fg
cd <string>
ls
clear
ls
cd <string>
ls
clear
ls
sudo apt update -y
python3 <file>
cat <string>
rm -f <string>
ls
ps -ef
cd <string>
sudo vi <file>
git add <string>
git commit -m <string>
wget -q -O <file>
clear
sudo zypper se <string>
ls
sudo python <file>
service <string>
clear
exit <number>
ls
cd <string>
mkdir <string>
ls
curl -o- <URL>
ls
vim <file>
rm <string>
ls
git push
cd <string>
git init
ls
cat <string>
cat <string>
sudo apt install <string>
git init
clear
git merge <string>
ls -al
ls
ls
sudo service <string>
ls
exit
vim
vi
git commit -am <string>
docker pull <string>
cd <directory>
sudo make install
scp <string>
ls
cd <directory>
clear
mkdir <string>
ls
mv <string>
cd <string>
docker ps
vim <file>
sudo mkdir <directory>
git push
ls -la
cp
npm i <string>
git add <string>
cp <string>
curl <URL> -u <string> -D <string> -X <string>
grep <string>
clear
git clone <URL>
docker network <string>
ls
python3 <file>
git commit
exit <number>
git commit -m <string>
sudo pacman -S <string>
clear
ls
ls
tee <file>
sudo tar -C <directory> -xzf <file>
cd ..
source <directory>
git commit -m <string>
grep -v <string>
cd ..
hg ci -m <string>
git status
npm audit fix
vim <file>
git status
cd ..
vi <file>
sudo chown <string>
sed -E -e <directory>
mkdir -p <string>
tail -f <directory>
ls
ls
git clone <URL>
ls
python3 <file>
cd <directory>
cd <string>
git commit -m <string>
unset color_prompt force_color_prompt
git status
exit
git commit -m <string>
vim <file>
git pull
cd <directory>
clear
cd <string>
ls
cd ..
cd
python3
sleep <string>
htop
ls
cd ..
cd <directory>
curl -s <string>
ls
find . -type <string> -name <file> -exec <string> <directory>
ls
cd <string>
chmod <number> <string>
grep <string>
ls
cd <directory>
git commit -m'form_action'
cd <string>
npm start
cd -
git add .
head -n <string>
read -rp <string> <string>
cd <string>
ls -la
read <string>
mv <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
sudo su
exit
ls
sed -i <directory>
git commit -m <string>
pwd
systemctl stop docker
sudo install -m <number>
git status
less <string>
git init
scp <string>
sed -n <string>
grep <string>
cat <string>
git add <string>
find . -name <file> -type <string> -print -delete
mv <string>
sudo fusermount3 -u <directory>
clear
ls
sudo pip install <string>
bash
sudo dpkg -i <file>
sudo apt-get purge lxc-docker -y
cd <string>
cd
cd ..
git clone <URL>
fg
sudo -E <string> -
cd <directory>
git add .
cd ..
cd
apt install <string>
clear
cd <string>
cd <string>
cd ..
touch <file>
clear
sudo npm install -g <string>
ls
git clone <URL>
git push origin master
hg <string>
git remote add origin <URL>
systemctl start <string>
source <string>
ls
sudo tee <directory>
git clone <URL>
sudo nginx -t
cd ..
bash
rm -rf <string>
git commit -m <string>
git push
cd <string>
cp <string>
read -r -a <string>
tee -a <string>
read -s -n <number>
cd <directory>
vim <file>
ssh dirlic@10.18.0.39 -p <number>
ls
ls
git ls-files <string>
git clone <URL>
git clone <URL>
sudo apt update
wget <URL>
ls
sudo python3 <file>
cd <string>
exit
git push origin
clear
nano <string>
ls
nano <file>
ls -l
git push
git --version
sudo ufw allow <string>
wget <URL>
find . -name <file> -type <string> -print -delete
bash
date
cd <directory>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
wget <URL>
exit <number>
git pull
cd ..
source <directory>
ls
python3 <file> runsslserver 192.168.0.53:10006 --certificate <file> --key <file>
cd <string>
ls
cd <string>
sudo poweroff
rm --cached <string>
ls -lh
git clone <URL>
exit
time <string>
sudo docker ps -a
git add .
cd <string>
ls
git commit -m <string>
sudo easy_install <string>
cd <string>
exit
sudo shutdown -h <string>
head -1 <file>
source <directory>
git add .
python3.11 <file>
cd ..
source <directory>
ls
fg
cd <string>
git checkout <string>
npm init
clear
unset color_prompt force_color_prompt
cp -r <directory>
xargs -n1 -I <string>
cd <string>
exit
vim <file>
tr <string>
sudo nano <directory>
sudo ufw status
ssh <string>
sudo chown -Rv <string>
ls -l
ls
more <file>
sudo pacman -Syyu
clear
rmdir -R <directory>
ls
ls
ps ax
sudo cp <string>
cd <string>
wc -l
code .
ls
mv <string>
docker-compose logs
git status
rm -rf <string>
clear
cd <directory>
sh <file>
clear
ls
ls
cd ..
python3 <file>
cd <string>
pwd
sudo su
sudo journalctl -u <file> -e
ls
history
git status
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
clear
sudo tar -C <directory> -xzf <file>
rmdir <string>
cd <directory>
clear
cd <directory>
cd <string>
git config --global --add <file>
ls
ls
ls
ls
cd <directory>
sudo npm run <string>
cd ..
ls
more <file>
ls
ls
cat <string>
su root
git log
git filter-branch --index-filter <string> HEAD
ls
cd <directory>
git remote -v
sed -n <string>
ls
git status
docker build -t <string>
git merge
git config --global <file>
git commit -n <string>
git add <string>
vi <file>
rm <string>
git pull
chmod +x <string>
sudo add-apt-repository <directory>
cd ..
sudo apt-get clean
vim <file>
git status
rm <string>
ls
rm -r <string>
ss
mkdir <string>
exit <number>
exit <number>
vim
cd..
ls
find . -type <string> -name <string>
clear
cd ..
ls -la <directory>
sudo lsof -i <string>
cd <string>
ls
su
git status
mv <string>
exit <number>
exit <number>
strings <file>
git init
ls
cd <string>
ls
clear
cp -r <directory>
sed -e <directory>
git status
git commit -m <string>
ls
head -1
python3 <file>
read -p <string>
git status
exit
git push -u <string> main
free -h
sudo mysql
exit <number>
chmod +x <string>
cat <string>
vi <file>
sh
exit
cd <directory>
vim <file>
ls
ls
ls
cd ..
cd <string>
sudo rm -d <directory>
perl <file>
ls
touch <file>
sudo su
git commit -m <string>
sudo apt-get update
cd ..
sudo apt-get install -y <string>
cd <string>
sudo docker kill corrade
docker exec -it <string> bash
exit
cd <string>
htop
cd <string>
open <string>
npm list -g
git push pay <string>
vim <file>
cd <string>
ls
cd <string>
ls
vim <file>
exec <string>
git remote add origin <URL>
tar xvf <file>
done
vim <file>
cd ..
clear
rm -r <string>
sudo shutdown
kubectl get <string>
cd <directory>
cd
ls
exit
ls -la
npm install <string>
exit <number>
vi <file>
vi <file>
tail -f <string>
git rm --cached -f <string>
grep <string>
ls
cd <directory>
git commit -m <string>
man <string>
sudo chown <string>
ls
find . -type <string> -name <string> -exec <string>
git branch
cut -d <string> -f <number>
npx shadcn-ui@latest add <string>
git add .
git log --stat --summary
git checkout
git pull --rebase <string>
cd ..
cd <directory>
sudo make install
rmdir <string>
ls
mv <string>
yarn <string>
ls
git commit -m <string>
cd ..
git status
ls -la
grep <string>
vim <file>
ls
exit
rm <string>
git init
git add <string>
ls
sudo yum update -y
cp <string>
git commit -m <string>
cd <string>
mkdir <string>
cat -n <string>
cp <string>
cd <string>
git branch -M <string>
read -r <string>
rm <string>
docker-compose down
cd ..
cd <directory>
ls -la
mv -f <string>
ls -ld
ls
vi <file>
cd <string>
cd <directory>
sudo -u <string>
ls
cat <string>
clear
clear
mkdir <string>
ls
cd <directory>
git log
cd <directory>
ls
cd <string>
git init
mv <string>
ssh-add -k <file>
ls
su -
wc -l
cp -v <string> <directory>
exit
sudo kill <number>
vi <file>
sudo sed -i <directory> <file>
local <string>
fg
docker-compose up -d --build
git config --file <file>
grep -H -R -o -n -i <string>
ls
ls
git rev-list --count <string>
ls
git push origin master
python3 <file>
cd ..
rmdir -r <string>
git remote add origin <URL>
read -rp <string> <string>
exit <number>
docker-compose up -d --build
sudo killall mongod
git diff
mv <string>
sudo ifconfig en0 ether <string>
ls
ls
cd <string>
cd <string>
wget <URL>
sudo apt-get upgrade
cd
cd <directory>
cd <directory>
rm -rf <string>
finger <user> # displays information about user
ls
setg RHOSTS <file>
rsync -arv --exclude=<string> <string>
ls
cd <string>
sudo apt update
source <string>
clear
ls
git status
rm -r <string>
tail -f <directory>
sudo chown <string>
ls -ltr
git add <string>
chmod <number> <string>
git commit -m <string>
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
sudo -E <string> -
fg
ssh <string>
code .
vi <file>
apt install ufw -y
chmod +x <string>
rmdir <string>
git branch -M <string>
unset <string>
xrandr
ls
mkdir <string>
cd <directory>
apt install <string>
grep <string>
ls
vim <file>
ls -xAh
git --git-dir=<file> <string>
git status
ls -alrt
tail -f <directory>
ls
exit
cd <string>
ls
sudo vim <directory>
ls
ls
vi
ls
sudo mkdir <directory>
git remote add origin <URL>
ls
sudo xbps-install <string>
git stash
ls -la
exit
apt list --upgradable
vim <file>
npm install
cat <string>
rm -i <string>
git status
curl <string>
sudo apt-add-repository -y <directory>
ssh dirlic@10.18.0.39 -p <number>
cd <string>
git status
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
mkdir <string>
cd ..
pwd
cd <directory>
cd <string>
git push
python3 <file>
ls
chmod u+x <string>
git config --global <file> <file>
git pull
cd <string>
git add .
git clone <URL>
vim <file>
git commit -m <string>
ls
vim <file>
cp -r <directory>
ls
ls
top
git init
git clone <URL>
hostname -i
npm install
ssh-keygen
npm run coverage
cd ..
git commit -m <string>
killall <string>
code <string>
grep <string>
cd <directory>
mv <string>
git log
ls
rm <string>
cd <string>
ls
sudo start uwsgi
tmux set-option -g <string>
find <directory> -type <string> -name <string>
cd <directory>
cd <string>
cd <directory>
git push heroku main
code .
git commit -m <string>
ls
ls
ls
ls -lh
python3 -m <string> install <string>
ls
sudo systemctl status <string>
wget -O <file>
rm <string>
ls
cp <string>
git remote add origin <URL>
vim <file>
wget -q -U <string>
cd <string>
git push -u <string> master
ls -a
cd <string>
cd ..
exit
ls
grep -i <string> >files
git push
git remote -v
less
ls
ls
source <directory>
sudo unlink python3
ls
sudo apt install <string>
git config --list
sudo certbot certonly --nginx
htop
cd ..
python3 <file>
ls
ls
cd <directory>
cat <string>
ls -la
ls -a
git pull origin development
ls
ls
cp -r <directory>
nano <string>
script/build.sh
git push --set-upstream <string> master
chmod +x <string>
ip a
sed <directory>
clear
git config --global <file>
git add <string>
mkdir <string>
clear
git commit
vi <file>
cd <string>
sudo nvidia-xconfig --cool-bits=<number>
cd <string>
docker run -itd --name <string> -p <string>
git commit -m <string>
sed -i <directory>
docker run
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
vim <file>
fg
clear
find <directory> -type <string> -name <file> -exec <string> -xf <string>
vim <file>
cd <string>
apt-get update
ls
open .
cd
git remote add origin <URL>
sleep <string>
ls
date <string>
kubectl get <string>
read -p <string> -n1 <string>
git config --global <file>
ls -ltr
cd <string>
git pull
cd <string>
git status
ls
cd <string>
vim <file>
cd <string>
vim <file>
sudo add-apt-repository <directory>
cd ..
ls
cut -d <string> -f <string>
ls -l
cd <string>
ls
cd <string>
clear
cd <directory>
ssh -T <file>
vim
python3 <file>
cd <string>
rmdir <string>
less <string>
ls
ls
rm <string>
npx create-react-app react-ts-demo --template <string>
ls
vim <file>
ls
wget -q -O <file>
ls
npm start
cp <string>
cd <string>
docker ps
xrandr
vi <file>
cd <string>
git add .
sed -i <string> -e <string>
cd <string>
npm init -y
exit
ls -l
git pull
npm run bench -- -c <file> -n <file>
unset -f <string>
ls
exit <number>
mvn exec:java -Dexec.mainClass=<file>
fg
cp <string>
ln -L <string>
mv <string>
ip a
sysctl status <string>
ls
npm config set prefix <string>
cat <string>
open <string>
ls
rm
ls
ls
sudo apt-cache search <string>
ls
git remote add origin <URL>
ls
chmod +x <string>
rm -rf <string>
sleep <number>
ls
clear
ls
sudo vim <directory>
npm run bench -- -c <file> -n <file>
cd <directory>
ls
clear
ls
sudo apt-get update
ls
ls
cd <string>
cd <string>
su - <string>
exit
cd <string>
git push
cd ..
clear
cat
git add .
tail -n <string>
history -r
date
ls -la
clear
ls
vi <file>
tail -f <directory>
cp <string>
pwd
ps axfu
cd
source <string>
git stash list
git push -u <string> main
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
python3
exit
ls
git add .
sudo ln -s <directory>
exit <number>
ls
sort
sudo apt install <string>
git checkout --quiet <string>
git config --global <file> <file>
git branch
exit <number>
git merge <string>
sudo touch <file>
vim
git config <file> <string>
ls
cd <string>
clear
sed <directory>
cd ..
clear
cd <string>
npm run test
history
fg
sudo systemctl start <string>
cd <string>
cd <string>
git remote add origin <URL>
sudo nano <file>
which <string>
git add .
git status
vim <file>
git add -a <string>
git commit -m <string>
sed -i <string>
rm <string>
cp <string>
git pull
cd <string>
git config <file> <string>
docker ps
pkill picom
more <file>
sudo pacman -S <string>
ls
reboot
cat <string>
cd ..
vim <file>
sudo vi <directory>
chmod u+x <string>
cd <string>
sudo su - <string>
ls
sort -u
vi <file>
touch <file>
git pull
mv -f <string>
sudo apt install -y <string>
git commit -m <string>
wget <URL>
ls
curl <string>
git commit -a -m'WIP: <string>
git commit -m <string>
sudo docker rm corrade
cd <string>
git status
done
git pull
vim <file>
tail -f <directory>
ls
clear
cd <directory>
df
<directory> -m <file>
git commit -m <string>
tmux new-session -d <string>
cd <directory>
git push
vim <file>
cd <directory>
read -rp <string> <string>
ls
pwd
ls
tar --help
git commit
npm install <string>
ls
ls
python3 -c <string>
cat <string>
cd <string>
ls -alR
vi <file>
awk <string>
npm
python3 <file>
git status
sudo nvidia-xconfig -a --cool-bits=<number> --allow-empty-initial-configuration --enable-all-gpus
sudo apt install <string>
cd <directory>
ls
git push
sudo vim <directory>
cd ..
ls
npm install -g <string>
less <string>
grep -i <string> >files
exit
sort -nr
exit <number>
sudo python <file> --cascade=<file> <number>
ls
cd
sudo cp <string>
cat <string>
vim <file>
cd <string>
fg
git checkout
sudo apt-get install -y <string>
python3
git log --oneline
clear
nano <file>
git push
cd <string>
env
cd <string>
cp <string>
git branch -M <string>
git status
cd <string>
ls
sudo pip install --upgrade -e <string>
python3 <file>
cd <directory>
git commit
sudo su
sudo groupadd docker
sudo apt install <string>
rsync -rt <string> <directory>
brew install <string>
ls
cd <string>
sudo nginx -t
git clean -cf
date
curl <string>
docker images
zgrep -i <string>
rm -rf <string>
clear
head -n <string>
ls
vim <file>
vi <file>
open <string>
time <string>
git stash apply <string>
git commit -m <string>
ls
cd <string>
nano <file>
rm <string>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
vi -t <string>
ls
cd ..
git add <string>
cd ..
git status
exit
cd <directory>
git diff
cd <string>
sudo <directory> restart
git grep -l <string>
ls
ln -sf <directory>
git merge
vim <file>
rm <string>
kubectl apply -f <string>
rm -rf <string>
ls
ls -altr
cd <string>
git clean -xdf
git stash clear
clear
git add <string>
cd <string>
ls
cd
docker-compose
nano <string>
ssh -X <string>
vi <file>
cd <string>
cd <directory>
ls
exit <number>
ls
docker exec -it <string> bash
npm -v
vim <file>
sudo make install
git checkout <string>
wget -q -O - <URL>
ps axfu
docker ps
vim <file>
git checkout <string>
ls
source <directory>
npm run start
ls
ls
vim <file>
tr <string>
cp -r <directory>
mv
vim <file>
clear
cd <string>
date <string>
vi <file>
git gc
pwd
npm i lebab -g
vim <file>
sed -E -e <directory>
sudo apt upgrade
ls
cp <string>
git checkout <string>
ls
git push
git pull
read <string>
lsof
grep -v <string>
cd <directory>
git add <string>
vim <file>
cat <string>
clear
clear
ls
cd <directory>
git add .
apt update --fix-missing
vi <file>
vim <file>
cd ..
cd <string>
export <string>
cat <string>
sudo apt install -y <string>
history
vim <file>
ls
read -p <string>
git status
cp -r <directory>
git commit -m <string>
test -m <string>
exit
cd
<directory> install --from-paths <string> --ignore-src -r -y
cd <string>
sudo nano <string>
rm -rf <string>
sudo vim <directory>
cd <string>
cd
kill -sigusr1 <number>
ls
ls
ls -la <directory>
cd ..
cd <string>
ls
git add <string>
touch <file>
cd <string>
tcpdump -w <directory> -i <string> -v <directory>
ls
git remote add origin <URL>
sudo apt update
ls
xargs -L1 -I'{}' <string> -rE <string>
exit
npm install --save <string>
cd ..
cd <string>
cd <directory>
vim <file>
mkdir <string>
git checkout master
ls
ls
cd ..
sudo ifconfig <string>
sudo pacman -S <string>
exit
sudo apt-get install <string>
cat <string>
rm <string>
setg RHOSTS <file>
cp <string>
vim <file>
git cat-file -p <string>
ls
sudo apt install <string>
cd <string>
git push -u <string> master
git push
cd ..
ls
sudo apt-get install <string>
cd <string>
rm <string>
ls
ls
git commit -m <string>
ls -la
fg
git push
ls
cd
service
git checkout -b <string>
ls
cd <string>
sudo ufw allow <string>
git init
python3 <file>
ls
head
cd
fg
exit
cd ..
vim <file>
sudo apt install <string>
cd <directory>
sudo su -
ls
ls
pwd
cd
vim <file>
sudo apt install wireguard -y
mkdir <string>
sudo chmod +x <string>
ls
cd <directory>
git reset
sudo apt update
find . -empty -type <string> -print -delete
git diff
tee -a <string>
npm install <string>
ping <file>
git add <string>
ls
find <directory> -name <string>
mkdir <string>
cp <string>
cd <string>
vim <file>
git ls-tree -r <string> --name-only
cp -r <directory>
mkdir -p <string>
htop
sudo dnf config-manager --add-repo <URL>
vim <file>
ls
grep -winr -C <number>
cd <string>
git commit -m <string>
sudo apt update
code .
vim <file>
ls
df -h
sort -hr
sudo apt install -y <string>
mkdir <string>
curl <string>
git push
git add .
cd <string>
git status
git init
cd ..
apt-get update
git commit -m <string>
ls
git rebase <directory>
ls
find files -name <file> -newermt <string>
sudo apt-get update -y
sudo pip install <string>
tail +x # want to display all the lines from x to y. This includes the xth and yth lines.
head <filename> # outputs the first lines of file (default: <number> lines)
wget -q -O - <URL>
sudo mkarchiso -v -w <string> -o <string> slim-iso -r
export <string>
curl -v
git status
exit
find <directory> -type <string> -name <string>
cd <string>
git commit -m <string>
sudo apt update
<directory> <string>
cd <directory>
git commit -m <string>
ls
clear
cd <string>
ls -laSh
pwd
dpkg --get-selections
ls
clear
cd <string>
mkdir <string>
cd <string>
cat -e <string>
ls
which <string>
git add .
ls _build
fg
ls
tail -f <string>
cd ..
cd <string>
grep <string>
vi <file>
cd ..
git stash pop
ls
apt-get dist-upgrade -y <string>
vi <file>
bash <file>
ls
df -h <string>
vi <file>
cd <directory>
mkdir <string>
vi -t <string>
npm start
ls
sudo tar -xvzf <file> -C <directory>
cd <string>
git remote add origin <URL>
sudo apt install <string>
cd ..
cd ..
fg
ls
git rebase -i <string>
chsh -s <directory>
grep <string>
sudo apt install <string>
ls
sudo apt-get remove <string>
vim <file>
journalctl --help
git commit -m <string>
cd ..
find <directory> -name <file>
pwd
sudo reboot
git add .
source <directory>
mv <string>
ls
kill -9 <number>
ls
clear
git add .
cd ..
sudo wrmsr -p${core} <string>
curl -L <URL>
sudo -i
node <file>
curl -sH <string> <directory>
find . -name <file> -type <string> -exec <string> -rf <string>
git push origin master
ssh <string>
grep -oE <string>
npm run start
git diff
ls -lh
cd <string>
ls
cd <string>
cp <string>
cd <string>
cd
clear
ls
cat <string>
git push
sudo mkdir -p <directory>
clear
tmux
sudo nano <directory>
ls
cd
vim <file>
sudo find <file> -name <file>
cd <string>
grep -Eqi <string>
cp <string>
exit
wget -q <URL> -O-
curl --location <directory>
cat <string>
ls
fg
git branch -M <string>
setg RHOSTS <file>
php artisan <string>
git status
cd <string>
cd <string>
clear
git push -u <string> bryan-guner
unzip <file>
cd <directory>
cat <string>
ls -l
ls
vim <file>
git please
cat <string>
ls -la
grep -Ei -- <string>
sudo mount -t <string> -o <string>
openssl rand -hex <number>
git add -v <string>
vi <file>
pwd
npm run build
vim <file>
rm <string>
git status
cat <string>
true
reboot
export <string>
cd
ls
sudo docker images
ls
docker-compose logs --follow <string>
git stash apply <number>
vim <file>
ls
git commit -m <string>
cp -pr <string>
cat <string>
cd <string>
vi <file>
vim <file>
cat <string>
git status
sort -n -r
ls
sudo -i
cd ..
sudo apt install <string>
ssh -A <string>
cd ..
sudo sed -i <directory>
cd <string>
git commit
cd <string>
git branch -M <string>
git remote -v
git add <string>
ps -eal
git add <string>
sudo reboot
clear
vim <file>
cd <string>
sudo systemctl enable <string>
find . -empty -type <string> -print -delete
sudo apt upgrade
ls
sudo sed -i <directory>
vim <file>
ls -a
ls
vim <file>
cd ..
exit
cd ..
sudo nano <directory>
cat <string>
rm <string>
git add .
pkill <string>
cd <string>
cd <string>
docker login -u <string> --password-stdin <URL>
cat <string>
ls
cd <string>
exit
rm -r <string>
ls
ls
vim <file>
exit <number>
git init
grep <string>
git add .
tmux source-file <file>
sudo date -s <string>
df # shows disk usage
clear
ls
pwd
pwd
ps aux
ls
cd <directory>
touch <file>
dotnet <string>
sudo lighty-enable-mod <string>
nano <string>
ls
clear
code .
git add <file> -f
ls
sudo vim <file>
exit
sudo reboot
vi <file>
sudo su
grep <string>
git describe HEAD
clear
ls
cat <string>
npm install react-bootstrap-icons --save
reset
ls
eval <string>
cd ..
chmod <number> -R <directory>
docker-compose kill <string>
cd <string>
ls
grep <string>
mkdir -p <string>
git stage <string>
rm <string>
git push -f
git status
git commit -m <string>
cd
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
cat <string>
docker-compose down
sed -i <string>
su myuser -c <string>
git commit -v -a -m <string>
git add .
ls
vim <file>
ls
cd <string>
ls -lhrt
cd ..
cd <directory>
git commit -m <string>
awk -F <string> -v <string>
sudo docker kill corrade
export <string>
ls
uniq
mv <string>
find --version
git add .
more
reset
vim <file>
ls
ls
sudo systemctl start <string>
tar -xvpf <file>
ls
ls
git clone <URL>
ln -s <string>
npm login
mkdir <string>
cd <string>
git add .
clear
cd <directory>
xargs -L1 <string>
vim <file>
git add <string>
wget -q -U <string> --post-file <file> --header <string>
git push
rm <string>
fg
exit
fg
cd <directory>
docker-compose up -d --build
vi <file>
cd <string>
git checkout -b <string>
git pull
ls
docker-compose logs
git status
export <string>
clear
sudo su
ls
chmod u+x <string>
clear
ls
npm run bench -- -c <file> -n <file>
git clone <URL>
touch <string>
nano <file>
ls
ls
ls
cd <string>
clear
clear
cd <string>
mkdir <string>
su
sudo cat <directory>
cd <string>
chmod +x <string>
sudo apt-get install <string>
cd <string>
rm -r <string>
ls
sudo apt-get install -y <string>
git push origin master
git add <string>
ls
ss -a
git status
tail -f <string>
exit <number>
clear
ls
sudo docker run -it --name <string> --entrypoint <string> -u <string> --privileged --rm -v <directory>
clear
ls -la
exit
xargs -L1 <string>
rm <string>
sudo start uwsgi
ls
ps -ef
curl -sS --fail <string>
git commit -m <string>
vim <file>
ls
git stash pop
git checkout <string>
git init
git commit -m <string>
ls
dpkg --set-selections <string>
vim <file>
exit
ls
mv <string>
ssh-keygen -t <string> -C <file>
rg <string>
nano <string>
docker build -t <string>
ls
exit
ssh dirlic@10.18.0.39 -p <number>
ping <string>
npm install <string>
cd <directory>
git pull
apt-get install <string>
mv <string>
exit <number>
cat <string>
ls
man <string>
grep <string>
history
ssh dirlic@10.18.0.39 -p <number>
vim <file>
cat <string>
chmod -x <file>
rm <string>
cd <string>
ls
sudo zypper install <string>
ls
cd <directory>
cp <string>
ls
clear
cd <string>
exit
mkdir <string>
ls -l
source <string>
export CFLAGS=<string> -std=<string> -lm"
clear
ls
python3 <file>
cd
ls
rm -rf <string>
cd ..
cd <directory>
cd ..
vi
ls
export <string>
curl -f <URL> -o <file>
sudo sed -i <directory> <file>
ls
git add <string>
ls
find . -name <file>
more <file>
vi
git add .
rm -rf <string>
ls
git status
env
git checkout <string>
grep --include=<file> -rnl <string> -e <string>
sudo sed -i -e <string>
cd <directory>
read <string>
chmod <number> <string>
sudo -i
cd ..
git config <file> false
fg
python3
ansible-playbook <file> --skip-tags <string>
vi <file>
cd <string>
vi <file>
ls
git status
ls
cd <string>
ls
vim <file>
exit <number>
git add -A
python3 <file>
sudo stop uwsgi
git status
exit
exit
tail -f <string>
less <string>
git init
npm install
cut -d - -f1 <file>
git rm --cached <string>
su root
cd <directory>
sed <directory>
rm -f <string>
exit
rm -rf <string>
date <string>
git remote -v
ls
cp <string>
cd <string>
sudo apt-get install <string>
cd ..
sudo docker kill corrade
cp -r <directory>
cd ..
git add <string>
sudo python3 <file>
grep -v <string>
git co HEAD .
cd ..
find <directory> -iname <file> -type <string> -exec <string> -c <string>
cd <string>
git add .
ls
mkdir <string>
python3 <file>
cp -r <directory>
vi <file>
git push
vi <file>
git status
cp -r <directory>
ls
git log
ls
ls
cd ..
ls
vi <file>
ls
ls
ls
git status
grep <string>
watch -n <string>
sudo apt-get install <string>
go tool pprof <file>
clear
cd <string>
curl --silent -L <file>
cd
sudo -E <string> -
sudo apt -y <string>
ls
su - <string>
chmod <number> <string>
fg
cd <directory>
git commit --amend
git add .
cat <string>
git commit -m <string>
ls -a
sudo netstat -anp
vim <file>
mkdir <string>
ls
ping <string>
ls -all <directory>
ls
cd ..
ls
head <filename> # outputs the first lines of file (default: <number> lines)
sudo cat <string>
vi <file>
ls
clear
grep <string>
ls
exit
bash
ls
git commit -v -a -m <string>
cp <string>
git remote add origin <URL>
vi <file>
ls
then
time go run <file>
ls
git init
mv <string>
docker-compose down
rm <string>
cd ..
git branch --merged
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
mkdir -p <string>
cd <string>
ls
mkdir <string>
ls
grep <string>
cd <string>
exit
sudo apt install <string>
ls
cat <string>
cd <string>
git add .
grep -iE <string>
ls
pwd
cd ..
cd <directory>
setg RHOSTS <file>
ls
fg
sudo su -
chmod +x <string>
nano <file>
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
man <string>
ls
npx <string>
vim <file>
git checkout -b <string>
cd <string>
sudo apt update
sudo sed -i <directory> <file>
sudo stop uwsgi
find <directory> -mindepth <number> -type <string> -exec <string> -t <directory> --backup=<string> <string>
ls
git status
exit
python3 <file>
diff <file>
ls
cd <directory>
sudo supervisorctl status
sudo apt update
git stash
ls
ls
ls
ls
cd <string>
clear
read <string>
clear
git init
tee <file>
clear
vim <file>
vim <file>
vim <file>
cat <string>
clear
cd <string>
vim <file>
diff <file>
sudo install <string>
python3 <file>
cd <string>
git config --add <file>
ls -la
cd <string>
ufw status
npm run build
cd <string>
ls
apt install --yes <string>
ls
exit
sudo yum install <string>
cd <string>
mkdir <string>
git remote add origin
bash
git clone <URL>
cd <string>
code <string>
ls
ls
exit
apt list --upgradable
nano <file>
ls
curl <string>
htop
done
exit
git status
ls
sudo setxkbmap -layout <string> -variant <string> -option <string>
git status
sudo -u <string>
source <directory>
pulseaudio
curl -OL <URL>
awk -F <string>
cp <string>
git stash pop
rm -r <string>
htop
xrandr
git commit -m <string>
ls
mkdir <string>
mv <string>
git gc --prune=<string>
vim <file>
cd <string>
ls
clear
clear
rm -rf <string>
docker-compose
hostname -I
pwd
cd <string>
cd ..
sudo apt-get -y <string>
tmux
sudo apt-add-repository <directory>
mkdir -p <string>
scp <string>
find . -depth -exec <string> <string>
set <string>
cat <string>
cd
sudo sed -i <directory> <file>
git init
<directory> <string>
git clone <URL>
cd <directory>
cd <string>
vim <file>
sudo apt-get update
ls
ls
cd <string>
sudo -E <string> -y <directory>
ls
cp <string>
cd
vi <file>
sudo rm -rf <string>
ls -lht <file>
clear
ls
ls
git checkout -- <string>
sudo make install
sudo vim <file>
ls
cd ..
cd <string>
cd <string>
ls
sudo gem install <string>
dpkg -i <file>
export <string>
sudo lvextend -L <string>
ls
tail -f <directory>
docker start <string>
cd <string>
pwd
git clone <URL>
git push -u <string> main
mkdir -p <string>
cd <directory>
git remote add origin <URL>
exit <number>
cd
ls
git add <string>
clear
psql -U <string> -h <string>
less <string>
cd <string>
bash
npx <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ssh
vim
cd <string>
vi <file>
code .
then\
git checkout development -f
sudo git pull origin master
git merge <string>
sudo apt install <string>
ls
cd
ls
rm -f <string>
sudo apt-get install -y <string>
git diff
ls
chmod +x <string>
cd <string>
ls
ls
git add <string>
sudo netstat -tuln
ls
python3.11 <file>
ls
git status
ls
vim <file>
ls -al --lcontext <string>
ls
export <string>
code .
find <directory> -nouser -print <string>
ls
cp
cd <string>
ls
python3 <file>
wget <URL>
ls
ls
then
ls
ls
cd <string>
docker image <string>
npx <string>
cd <string>
git config --global <file>
cat <string>
cd <directory>
head -n <string>
cd <directory>
vi <file>
clear
cd ..
npx <string>
git status
sudo xbps-install <string>
vim <file>
chown -R <string>
mkdir <string>
cp -r <directory>
rm <string>
vim <file>
git commit
clear
sudo apt-get update
npm run build
find . -type <string> -print0 -name <string>
ps -auxwf
source <string>
cd <string>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
open .
cat <string>
cd <directory>
vim <file>
cat <string>
ls
ls -alrt <string>
uniq -u <file>
cd <directory>
ls
find <directory> -type <string> -a <string> -perm -u+s -o -perm -g+s <string> -exec <string> -l <string>
sleep <number>
head <filename> # outputs the first lines of file (default: <number> lines)
cd ..
cd <directory>
cd ..
python3 <file>
ls
clear
clear
unzip <file> -d <directory>
cd <string>
git add <string>
wget <URL>
pwd
git config <file> <string>
git commit
sed -E -e <directory>
docker-compose build
ls
ls
sudo apt upgrade
ls
sh
sudo apt upgrade
cd <string>
ls
history
docker image ls
mv <string>
git add <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
vi <file>
git pull
cd
ls -ls
vim <file>
rm -r <string>
git add .
ls
npm install <string>
ls
ls
exit <number>
cd <directory>
vi <file>
exit
ls
rm -r <string>
cd <string>
ls
ls
cd <string>
git config <file> <file>
python3 <file>
git
ls
cd <string>
python3 <file>
ls
docker compose <string>
cd <directory>
clear
cd <directory>
cd ..
cd <directory>
npm i --save <string>
cd ..
sudo apt install <string>
exit
ls++ -a
sudo rm -r <string>
git push
git commit -m <string>
cd
rm <string>
find . -name <file>
git push
vim <file>
git commit
ls
git add <string>
killall <string>
ls
vim
sudo apt-get install <string>
exit
git init
git remote add origin <URL>
npm install
more <file>
ssh dirlic@10.18.0.39 -p <number>
tmux
code <string>
sudo python <file> --cascade=<file> <number>
sudo sed -i <directory>
clear
cd <directory>
ls
bash
ls
sudo aptitude install <string>
sleep <number>
cd <directory>
cd <string>
sudo apt-get install -y <string>
ls
ls
exit
cd ..
fg
cd ..
git add <string>
systemctl status <string>
npm install
umount <directory>
cd <string>
sudo ip route add <string>
cd ..
sudo reboot
sudo pcmanfm
mv <string>
sudo vim <directory>
ls
sudo sed -i <directory>
cd
sh
ls
ls
ls
cd <string>
mv <string>
sudo apt-get install <string>
ls -lh
git status
ls
vim <file>
ls
vim <file>
sudo python <file>
ls -lah
git add .
git rm <string>
ls
<directory> <string>
yarn add -D <string>
vi <file>
cp -r <directory>
sudo mv <string>
vim <file>
ls
cd
sudo sed -i <directory> <file>
git add <string>
ls
chmod <string>
cat <string>
sudo vi <directory>
cd <string>
tail -f <directory>
su
chown -R <string>
npm run dev
cd <string>
rm <string>
git add <string>
ls
ls
git status
sudo apt install <string>
ls
exit
rm <string>
vim <file>
tar -xvJf <file>
rm -r <string>
then\
git remote add origin <URL>
docker build -t <string>
<directory> <string>
yarn add <string>
sed -i <string>
cat <string>
open .
nano <file>
kill <number>
git filter-branch -f --index-filter <string> -- --all
rm <string>
clear
git pull
touch <string>
sudo apt update
npm init
read -r <string>
ps
scp <string>
git clone <URL>
git clone <URL>
cd <directory>
npm install
git add .
cd ..
wget -q -O - <URL>
cd <directory>
git checkout
mkdir <string>
clear
git pull
reset
sed -i <directory>
git clone <URL>
git push
npx create-react-app <string>
git commit -m <string>
ls
rm -rf <string>
git clone <URL>
cp <string>
cd <string>
git co master
cd <directory>
vi <file>
cd <directory>
ssh dirlic@10.18.0.39 -p <number>
find . -type <string> -print0
less <string>
cd <string>
cd <string>
git add <string>
htop
journalctl
cd <directory>
sudo groupadd docker
vim <file>
tar -xf <string>
find . -empty -type <string> -print -delete
git push
sudo aptitude purge <string>
df -h <string>
sudo mysql -u <string> -p
ls
git push -u <string> main
vim <file>
vim <file>
npm start
fg
apt-get clean
done
exit
ls
mkdir <string>
touch <string>
scp <string>
ls
ls
cd <directory>
ufw status
code .
grep -i <string>
vim <file>
sudo python3 <file>
read -s -n <number>
ls
ls
cd <string>
kill -9 <number>
pwd
cat <string>
touch <file>
sudo lpadmin -p <string> -o <string>
ps -ef
pwd
reboot
git init
curl <URL> -o <string>
cd ..
ls
git rm -f <string>
cp <string>
cd <string>
sudo snap install <string>
ls
sudo apt-get update
cd <string>
tmux a
ls
<directory> <directory>
ls
vi <file>
cd <string>
clear
apt-get -y <string> <string>
ls
exit
git status
ls
vim <file>
exit <number>
systemctl status <string>
ls
history
grep <string>
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
find . -type <string> -name <string>
sed -i <directory>
git
lsof -p <number>
touch <string>
ps aux
sh
done
sudo cp -i <directory>
ls
ls
cd <string>
docker exec -it <string> bash
cd <directory>
apt-key fingerprint <string>
code <string>
ls
chmod <number> <string>
ls -l
exit
rm <string>
git commit -m <string>
exit
ls
npm install <string>
ls
npm i <string>
rm <string>
cd ..
cd <string>
sudo apt update
clear
ls
open <string>
ls -l
cd <directory>
fg
history
python3 <file>
more <file>
cd <string>
grep <string>
cd <directory>
rm -r <string>
ls
rm -r <string>
code .
cat <string>
htop
git commit
source <directory>
cd <string>
ls
ls
code
chmod +x <string>
sudo nano <string>
ls
ls
cd ..
cd <string>
cd <string>
vi <file>
exit
vi <file>
rm <string>
git push origin main
find . -empty -type <string> -print -delete
sudo dpkg --print-architecture
apt search <string>
ls
chmod +x <string>
npm start
git status
git commit
ls
npm run test
git commit -n
nano <file>
cd <string>
git add .
git pull
git remote -v
git status
git status
git push
sed -n <string>
git pull
vim <file>
git rebase <string>
cp <string>
go <string>
ls -laSh
cd <string>
ls
clear
grep <string>
ls
cd <string>
sudo ln -s <directory>
clear
git push -u <string> master
cd <directory>
cd <string>
clear
npm run test
ls
git add .
sudo lighty-enable-mod <string>
git push
ln -s <string>
git add .
ls
ssh -t
exit
ls -ltrR <string>
ls -la
git pull
cd ..
git commit -m <string>
sudo -i
git commit
python3 <file>
sudo pacman -Syyu <string>
git push -u <string> master
git status
cd <string>
sudo pip3 install --extra-index-url <URL>
ls <directory> -SH
exit
ls
tail -f <string>
cp -ip <string>
git remote add origin <URL>
docker-compose up -d --build
ls
ls
sudo apt update
find . -type <string> -exec <string> -c <string>
cd..
git st
cd <string>
ps aux
wget <URL>
sudo npm install -g <string>
cat <string>
docker ps
ls
ls
sed -i <directory>
update-rc.d
ls
ls
git config --global <file> <string>
systemctl start docker
python3 <file>
ls
cd <string>
docker rm <string>
clear
sed -i <directory>
rm <string>
ls
cd ..
exit
python3 <file>
openssl genrsa -out <file>
vim <file>
cd <string>
sort
fg
git config --global <file>
ls -alrt
sudo xbps-remove <string>
git add .
git commit -am <string>
mkdir <string>
clear
sudo apt install <string>
vim
git checkout <string>
sudo gem install <string>
ls
sudo cat <directory>
aptitude install build-essential -y
grep <string>
chmod <number> <string>
cd ..
vim <file>
vi <file>
go <string>
cat <string>
ls
cd <directory>
git remote add origin <URL>
sudo apt install <string>
time go run <file>
vim <file>
history -c
chmod u+x <string>
ls
ls
cat <string>
npm start
which <string>
clear
rm -f <string>
ls -a
rm -r <string>
pwd
cd <string>
ls
git clone <URL>
ls
sudo -H <string>
cd <string>
ls
sort -g
vim <file>
cd <directory>
cat <string>
find . -empty -type <string> -print -delete
git status
cd <directory>
cp <string>
ls
sudo python <file>
ps ax
cd <directory>
ls -l
mvn compile
less
cat <string>
rm -rf <string>
clear
find $dir -type <string>
ssh dirlic@10.18.0.39 -p <number>
git clone <URL>
sudo groupadd docker
ls
git branch
git add .
cd <directory>
ls
clear
cd ..
cd <string>
sleep <number>
sort
exit <number>
ls
cd <directory>
less
cd <string>
cd ..
git status
ls
npm run dev
node -v
git init
sudo pacman -Syu
python3 -m <string> install --upgrade <string>
cd ..
git diff --cached <string>
vim <file>
cp <string>
ls++ -a
git add .
cd <string>
sudo apt install <string>
cd <string>
vim
kubectl get <string>
cd <string>
sudo apt-get install -y <string>
sudo add-apt-repository <directory>
head -n <string>
git add <string>
sudo cp <string>
done
ls
cat <string>
ls
cd ..
ls
cd <string>
python3 <file>
ls
ls
ls
sed <directory>
cat <string>
exit <number>
then\
ls
chmod <string>
vi <file>
git push --set-upstream <string> master
sed -i <string>
cd <directory>
history -r
mkdir <string>
ftp
grep <string>
sudo apt-get upgrade
vim <file>
clear
sudo systemctl enable <string>
git add .
vim <file>
clear
cd
cd ..
sudo setxkbmap -layout <string> -variant <string> -option <string>
sudo ln -s <directory>
ls
rm -rf <string>
ls
git status
sudo prime-select <string>
git pull -f
vim
ls
python3 <file>
cat <string>
ls
mkdir <string>
ls
docker build -t <string>
cd ..
ls
cd <directory>
git pull
ls
sudo apt-get update
ls
sudo python <file>
git status
docker ps
sudo service nginx restart
ftp <string>
git co -b <string>
git pull
xrandr
ls
cd <directory>
vim <file>
ls
cd <directory>
cd <string>
sudo update-alternatives --config <string>
ls
cd ..
python3 <file>
python3
ls
ls
screen -rd <string>
cd ..
exit
cd <string>
grep -iC2 --color=<string> <string>
git push -u <string> master
grep <string>
git add -A
sudo mount <directory>
git branch -b <string>
cd <string>
cd <string>
vim <file>
git push
exit
ls -l
ls
source <directory>
ls
ls
sudo apt-get install -y <string>
git commit -m <string>
cd <string>
exit
rm -r <string>
git pull
cd <string>
rm <string>
git commit -m <string>
vim <file>
read -r <string>
cd <directory>
sudo pip3 install -U <string>
cat <string>
exit <number>
wget -q -O - <URL>
kubectl exec -it <string>
cd ..
vim <file>
grep -vE <string>
cd <string>
git config --global --list
ls
sed -i -e <string>
cd <string>
clear
cd <string>
git add <string>
sudo rm <directory> -rf
ls -lih <directory>
python3 <file>
curl -LO <string>
cd <string>
grep -Fq <string>
htop
tail -f <string>
sudo usermod -a -G <string>
git commit -m <string>
ls
ls
vim <file>
read <string>
sudo mount -a
npm install -g <string>
cd ..
git clone <URL>
git push origin master
sudo pacman -Syyu <string>
exit
docker-compose run -d --service-ports <string>
cd <string>
git branch -M <string>
wget -c <URL>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
ls
sudo visudo
cd <string>
npm start
ls
ls
cd <string>
read -p <string> -r <string>
ls
git commit -m <string>
vim <file>
ls
more <file>
git commit -m <string>
git status
git clone <URL>
rm -rf <string>
cd <string>
sudo rm exit
vim <file>
vim <file>
clear
sort -n
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd <string>
git commit -m'How <string>
npx <string>
clear
cat <string>
systemctl status <string>
npx ncu -u
git add .
docker --version
mkdir <string>
vi <file>
npm uninstall --save <string>
ssh-keygen
top
fg
cd ..
cd <directory>
git add <string>
git add .
cd <directory>
sed <directory>
cd <directory>
git commit -m <string>
git stauts
vim <file>
ssh dirlic@10.18.0.39 -p <number>
git branch -M <string>
sudo systemctl restart <string>
git add .
exit <number>
npm install <string>
ls
sudo su
cd ..
date
git status
cd <directory>
git add .
git pull origin master
ls
lsof -p <number>
set
clear
read -p <string>
history # shows command line history
vim <file>
git config --global <file> <file>
git branch
cd <directory>
git pull
git
clear
npm run test:watch
find -name <string> -type <string>
cd <string>
ls
python3 <file>
ls
cd <string>
bash <file>
ls <directory> -1
npm run test
chmod +x <string>
cd <string>
ls
cd <directory>
sudo apt-get install --yes <string>
git checkout <string>
ruby -e <string>
setg RHOSTS.*
rm <string>
cd <string>
ls
vim <file>
ls
sudo apt install <string>
python3 <file> --model-path <file> --conf <string> --img-size <number>
exit
ls
clear
rm -r <string>
sudo pacman -Runs <string>
cd <directory>
npm i
cd ..
rm -rf <string>
sudo tee -a <directory>
vim <file>
ls
ls
find . -name <file>
git clone <URL>
cd <string>
byobu-tmux
cd ..
uname
grep -r <string>
ssh -i <string> remote_user@remote_host
ls
cp <string>
ls -la
sudo resize2fs -p <directory>
sudo -i
rm -rf <string>
cd <directory>
ls
grep --help
wget <URL>
cd ..
set -o
mkdir <string>
rm -r <string>
rmdir <string>
ls
sudo apt-get -y <string>
do-release-upgrade -c
sudo apt-get clean
source <string>
cd ..
cd ..
npx create-react-app <string>
vim <file>
curl
ls
cd <string>
git push -u <string> main
ls -l
ls
cd <string>
git reflog expire --all
sudo nvim <directory>
python3 <file>
sudo nvim <directory>
pkill <string>
ls
git init
ls
git remote add origin <URL>
git checkout <string>
git remote set-url origin <string>
cd <string>
sudo usermod -a -G <string>
git clone <URL>
cd
cp -r <directory>
ls
ls -tlr <string>
htop
sudo -i
rm -fr <string>
vim <file>
docker login -u <string> -p <string>
git stash
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd -
nano <file>
cat <string>
cd ..
ls -l
cd <string>
git push origin <string>
vim <file>
sort
cd ..
git push
exit
git clone <URL>
exit
ls
ls -l
vim <file>
ln -s <string>
cat <string>
git add <string>
ls
sudo rm -rf <directory> <directory>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
node
mvn compile
cat <string>
ls++ -a
mkdir <string>
cd <string>
cd ..
ls
wget <URL>
cd <string>
clear
ls
ls
fg
git pull
ls
cd <directory>
cd ..
sudo python -U <directory>
git push -u <string> main
cd <string>
ls
read -u <number>
open <string>
ls
git branch
clear
ls
sudo su root
clear
cd
cd <string>
git commit -m <string>
git push
exit <number>
git rm --cached <string>
git
ls
sudo apt-key add -
sudo apt-get -y <string>
ls
git push -u <string> master
cd <directory>
exit
man <string>
rm -rf <string>
exit
mv -v <string>
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
cd <directory>
git add .
git remote -v
cd <string>
man <string>
cat <string>
ls
nano <file>
cd <directory>
read <string>
ls
curl <string>
ls
cd ..
exit <number>
curl <string>
ls
curl -v -H <string>
fg
sudo chown -R <string>
cd <string>
sudo pkill yast
ls
git commit -m <string>
git status
find . -type <string> \( -name <string> -o -name <string> -o -name <string> -o -name <string> -o -name <string>
sudo tee <directory>
ls
ls
head -$division <string>
ls
sudo du -h --max-depth=<number>
vim <file>
sudo shutdown now
ls
git diff <string>
git commit -m <string>
git status
curl --header <string>
ls
ls
source <file>
sudo apt update
ls
git push origin main
cd <directory>
sudo ln -s <directory>
chmod u+x <string>
cd <string>
ls
mkdir -p <string>
cd <string>
ls
git push -u <string> master
help
cd <directory>
ls
cd <directory>
ls
vi <file>
ls
grep -C <string>
bash
cd
vi <file>
git push -u <string> master
clear
rm <string>
cat <string>
ls -lt
clear
cd ..
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
exit
code .
open <string>
source <string>
sudo dd <string>
touch <string>
cd <string>
history
exit
cd <string>
su
git remote add origin <URL>
ls
clear
rm <string>
npm install <string>
sudo apt-get install jenkins -y
ls -al
npm run start
cd ..
grep -w <string>
git add .
git status
mv -h
more <file>
sudo apt update
printf <string>
cd <string>
cd <string>
ls
ls
npm update
wget <URL> -O <file>
git add <string>
more <file>
git push --set-upstream <string> master
find . -empty -type <string> -print -delete
ls
ls
ls
mkdir -p <string>
ls
exit <number>
exit <number>
exit
groups
sudo apt-get remove <string>
cd ..
ps aux
sudo ls -a <directory>
cd <directory>
ls
docker logs <string>
sudo make clean install
tmux ls
cd <string>
ls
rm <string>
sudo make
sed -i <directory>
cd <directory>
clear
git commit -m <string>
ls
docker images
npm start
clear
ls
rm <string>
grep -rl <string>
cd <string>
vi <file>
git commit -m <string>
ls
exit
cd <string>
git commit -m -n <string>
cd <directory>
docker-compose up -d --build
ls -d <string>
vim <file>
su root
nc <string>
tmux kill-session -t <string>
find . -empty -type <string> -print -delete
chmod +x <string>
npm run dev
python3 <file>
read
git diff
tar -xvf <file>
mv <string>
cd <string>
cd <directory>
docker run --rm --volume <directory>
ls
apt-get purge <string>
git status
ls -la
vi <file>
cp <string>
code .
clear
ls
sed <directory>
rm <string>
less
ls
clear
egrep <string>
cd <string>
sudo yum install <string>
cd ..
clear
sudo openvpn --genkey --secret <file>
sudo installer -store -pkg <file> -target <directory>
sudo npm install -g <string>
python3 <file>
exit <number>
ping <string>
ls
cd <string>
ls
vi <file>
git clone <URL>
du -al
cd <string>
cd <string>
sudo apt update
ls
git add .
sed -r <directory> > <file>
ls
ls -la <directory>
sudo mv <file>
ls
find . -name <file> -type <string> -print -delete
sudo systemctl stop <string>
pwd
ls
ls
python3 <file>
cd ..
sudo apt-get update
apt-transport-https \
ls
git push -u <string> master
git add .
grep -av <string>
cd <directory>
cd ..
ls
cd <string>
npm run test
cd <directory>
rm <string>
ls
cd <directory>
git commit -m <string>
docker stop <string>
wget -4 <URL>
byobu-tmux
docker start <string>
ls
sudo dnf install <string>
git checkout <string>
vim <file>
gsettings set <file> <string>
sudo i2cdetect -y <number>
cat <string>
cat <string>
ls
eval <string>
ls
cd ..
npm install gulp-cli -g
exit
ls -d <string>
dpkg-reconfigure locales
cd <directory>
vim <file>
git grep <string>
cd
ls -al
cd ..
cat <string>
sudo apt-get -qq -y <string>
git submodule add <URL>
git commit -m <string>
npm install -g <string>
sudo apt-get install <string>
awk <string>
clear
python3 <file>
cd <directory>
vim <file>
git reset HEAD^
ls
sudo rm -rf <string>
ip a l
python3.8 --ds_path=<file> --device=<string>
cd <string>
clear
sudo reboot
fg
vim <file>
pwd
date <string>
fg
ssh dirlic@10.18.0.39 -p <number>
vi <file>
cd <string>
fg
history
git add .
git pull
git status
sudo sed -i <directory> <file>
vim <file>
git add .
clear
vim <file>
cat -n <file>
vi <file>
rm -f <string>
ls
git add .
sudo dnf install <string>
ls -la
ls
clear
clear
vi <file>
git init
exit
grep <string>
docker service ls
vi <file>
vi <file>
vim
rm -r <string>
ls
sudo ufw enable
sudo apt-get update
git checkout <string>
git status
rm <string>
ls
ping <file>
apt search <string>
ls
mv <string>
sleep <number>
rm -r <string>
git push -u <string> master
printf <string>
cd ..
cd <string>
exit
git add .
cd ..
cd <string>
git clone <URL>
grep <string>
grep <string>
git commit -m <string>
fg
git remote add origin <URL>
cat <string>
clear
ls
cd <string>
exit
sudo xbps-install <string>
exit
wc -w <file>
sudo apt-get -y <string> <string>
ls
cp <string>
dir
ls
ls
sudo chown -R <string>
ls
ls
less <string>
mv <string>
find . -name <file> -type <string> -print -delete
git rebase <directory>
ls
fg
true <string>
git pull origin master
sudo nginx -s <string>
ls
make clean
cat <string>
cat <string>
sudo docker rm corrade
mkdir <string>
history
which
git branch -u <directory>
git commit -m <string>
cd ..
git init
vim <file>
pwd
git push origin <string>
ls
cd <string>
man <string>
test $c -eq <number>
vi <file>
screen -S <string>
clear
sudo sh -c <string>
cd ..
cd <directory>
source <directory>
ls
ls
ls
code .
fg
vim <file>
ln -s <string>
tail -f <string>
ls
git status
rm <string>
rm <string>
ls
rm -d <string>
cd ..
vi <file>
ls
cd <string>
ls
cat <string>
cat
ls
cd <directory>
sudo systemctl start <string>
read -r -p <string>
ls
grep -i <string> >files
docker ps
clear
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
ping <file>
git status
git pull origin master
mkdir <string>
ls
grep <string>
ps -ae
ls
exit
ls
git branch -M <string>
cd
exit
vim <file>
tar -xvzf <file>
ls
cd ..
sudo sed -i <directory> <file>
ls -la
vi <file>
ls
exit
git commit -m <string>
read -rp <string> <string>
awk <string>
vi <file>
ps aux
cd ..
sudo supervisorctl <string>
git push
sudo
cd <string>
ls
wget $FLAUNCHER_URL -O <file>
sudo ngnix -t
exit
ls
vim <file>
mv <string>
mkdir -p <string>
npm run dev
code <string>
cd <string>
clear
ls
cd <directory>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
cd ..
ls
cat <string>
ssh <string>
ls
vi <file>
find . -name <file>
cat <string>
sudo apt-get install <string>
systemctl
vim <file>
npm i -g <string>
sudo dnf update
sudo -H <string>
rmdir <string>
cd <string>
git
mkdir <string>
git pull
zip -FS -q -r <file>
cd <string>
vim <file>
ls
git add .
cd <directory>
cd <string>
git push -u <string> main
git commit -m <string>
ping <string>
git remote add origin <URL>
ls
sed <directory>
dir
python3 <file>
find . -empty -type <string> -print -delete
apt-get install -y <string>
sudo apk add <string>
npm run test
find . -maxdepth <number> -name <string> -exec <string> <string>
ls
ls
fg
git reflog expire --all
pwd
git add .
nano <file>
brew install <string>
ls
date <string>
ls
git status
ls
tail -f <directory>
ls
cd <directory>
ls
exit
exit
vi <file>
exit <number>
fg
vim
cd <directory>
exit <number>
brew tap <directory>
cd <string>
cd <string>
kill -9 <string>
source <string>
clear
git remote
vim <file>
find . -size <string> -a -print -a -exec <string> -f <string> \
clear
git commit -m <string>
ls
ssh-add
git commit -m <string>
sudo update-rc.d <string>
vi <file>
ls
cd
sudo apt-key add -
systemctl list-units
git pull
read -e <string>
cd <string>
cd <string>
clear
sudo sed -i <directory>
git flow <string>
sudo pip3 install opencv-python==<string> -i <URL>
ls
ls
sudo pacman -S <string>
mv <string>
shutdown --help
sudo ln -s <directory>
cd <string>
git add .
ls
exit
then\
cd <directory>
sudo apt-get purge <string>
source <string>
docker-compose up -d --build
awk <string>
exit <number>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
sudo dnf update
cp -h
git clone <URL>
file <string>
sed <directory>
more <file>
ls
cd <directory>
cat <string>
chmod <number> <string>
sed -i <string>
rm <string>
mv <string>
cd <string>
ls -R
sudo pip install <string>
sleep <string>
read -ra <string>
npm install <string>
rm -r <string>
ls -l
sudo su
npm start --active-arch-only -- --resetCache
git status
ls
find . -name <file>
git config --global <file>
sudo vi <file>
mv <string>
exit <number>
git st
vi -t <string>
git add .
sed -i <directory>
cd <string>
apt-get install -y <string>
yarn <string>
source <string>
export <string>
chmod +x <string>
rm -rf <string>
cd <string>
ls
sync
pkill picom
ls
cd <string>
chmod +x <string>
cd <string>
top
less <string>
cd <string>
gunzip <file>
sudo vim <directory>
clear
fg
vi <file>
grep <string>
ls -la
git commit --amend --no-edit --no-verify
ls
ls
find . -type <string> -exec <string> <directory>
ls
ls
git commit -m <string>
nano <file>
dpkg --get-selections
ls
cd <string>
ls
ls
ls
ls
mkdir <string>
sudo pacman -Rs <string>
sudo sed -i <directory>
docker-compose logs --follow <string>
sudo chown <string>
git push
rm -r <string>
cp <string>
find . -name <file>
cd ..
cd ..
ls
cd <directory>
rm <string>
ls -la <directory>
vi <file>
git commit -m <string>
cd <directory>
curl --unix-socket <directory>
ln <file> <string>
ls
exit
wc -l
git add .
nohup <string>
rm -r <string>
ls
touch <string>
exit
python3 <file>
cd <string>
npm install
ls -la
clear
cd <directory>
cd ..
source <directory>
ssh <string>
curl -sSf <string>
ls
exit
python3 <file>
ls
ls
curl -OL <URL>
sudo apt remove <string>
ls -lAF
ls
vim <file>
sudo apt update
rm -v <file>
ip addr
cd ..
exit <number>
vi <file>
sudo zypper install <string>
ls
code .
yay
exit
cd <directory>
more <file>
ls
git commit -m <string>
vi <file>
cd <string>
ls
rm -f <string>
done
cd <string>
wget <URL>
git add .
git pull
sudo vi <file>
which <string>
git commit -m <string>
service apache2 reload
rm <string>
sudo pacman -S <string>
git push
cat <string>
sleep <number>
vim <file>
cd ..
git status
git clone <URL>
cd ..
sudo vi <directory>
bash --help
ls
cd <string>
exit
clear
less <string>
cd <string>
ls
ls -la <directory>
ls
sudo rm -r <string>
git add .
cd <string>
grep <string>
npm install
cd ..
clear
ls
docker image <string>
cd <string>
ls -la
cd <string>
kubectl get <string>
git add <string>
ls -l
read <string>
cd <string>
curl -sH <string> -G --data-urlencode <string>
sudo su
rm -rf <string>
nano <file>
sudo ufw status
cd <directory>
ls
npm install --global <string>
git reset --hard
cd <string>
git commit -m <string>
ls
top
sudo dpkg --remove-architecture <string>
clear
git commit -m <string>
sudo docker rm corrade
rm -r <string>
file <string>
node <file>
man <string>
service apache2 restart
python3 -m <string> install --upgrade <string>
cd <string>
npm i <string>
cat <string>
git init
sudo nano <file>
grep <string>
less <string>
vim <file>
ls
reboot
git checkout -- <string>
curl Ropts -F <string>
npm start
curl -I <URL>
ls -l
ls
git status
ls
sudo apt-get install <string>
sort -nr
sudo systemctl enable <string>
ls
git push origin <string>
rm -rf <string>
ls <directory> -l
rm -f <string>
fg
apt update
git status
git pull origin main
sudo netstat -tulpn
cd ..
sudo chown -R <string>
git clone <URL>
chmod +x <string>
sort
ls
code <string>
git add .
ls
cd <string>
cd
apt list --upgradable
ls
git clone <URL>
ls
rm <string>
sudo service nginx reload
setg RHOSTS.*
git checkout <string>
ls
ls
rm -rf <string>
git --version
kill -9 <number>
clear
awk <string>
ls
history
cd <string>
ls
cd <directory>
git push origin master
ls
ls
kill -9 <number>
rm <string>
ls -a
sudo apt-get install <string>
ls
clear
grep -i <string> >files
git pull
sudo raspi-config
git status
ls
sed -i <directory>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
pwd
git add .
git push -u <string> master
sudo apt-get install <string>
ls
wc -l
ls
sudo apt-get update
git fetch
cp <string>
clear
sudo udevadm trigger
ls
chmod <number> <string>
wget --no-check-certificate --no-cookies --header <string>
ls
clear
rvm <string>
docker-compose up -d --build
sudo adduser arjun
rm -d <string>
nano <file>
exit <number>
ls
mv <string>
cat <string>
cat <string>
ls
wc -c
clear
python3 <file>
npm install <string>
mkdir -p <string>
ls
vim <file>
chmod u+x <string>
clear
ls
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
chown <string>
cat <string>
mkdir <string>
git push -u <string> master
ls
vi <file>
find . -name <file> -type <string> -print -delete
else\
tail -f <directory>
xrandr
git add .
git add <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
python3 <file>
sed <directory>
git br -d <string>
sudo chown <string>
sudo su
ls
npm install <string>
vim <file>
ls
git commit -m <string>
read -r -p <string>
sudo aptitude purge <string>
clear
cd ..
git push
git push
top
sudo apt-get install -y <string>
ping <file> -c <number>
clear
find . -name <string> -print
rm <string>
sudo apt-get install <string>
ls
docker images
clear
lsblk
screen -ls
ls
vim <file>
git push -u <string> main
cd <string>
grep -i <string>
ls
cd ..
<directory> <directory>
python3 <file>
git commit -m <string>
git config --list
git commit -m <string>
ls
sudo poweroff
<string> -e <string>
ls
cd <string>
ls
git status
npm run bench -- -c <file> -n <file>
brew install --cask <string>
ls -la
ls
cd..
ls
ls _build
sudo npm i --legacy-peer-deps
tr <string>
vim <file>
ls
cp
cd <string>
killall -SIGUSR1 <string>
read -p <string>
exit
ls
ls
cd <string>
ls
npx shadcn-ui@latest add <string>
fg
clear
cd <string>
cd <string>
npm install -g <string>
curl -so <directory> -w <string>
wget <URL>
git config --global <file> <file>
git init
grep <string>
ls
exit
codedown javascript > <file>
cd <string>
more <file>
mkdir <string>
cd <directory>
npm update
vi <file>
grep <string>
ping <string>
git pull origin master --allow-unrelated-histories
npm run serve
npm install <string>
git push -u <string> bryan-guner
sudo npm run <string>
ls
git status
git push --tags
npm run test --force
fg
ls
ls
cd <string>
vim <file>
git status
xargs -n1 <string>
php <file>
ls
apt install <string>
sudo mkdir <directory>
ls
chmod -w <file>
cd ..
ls
rm -rf <string>
sudo install
git clone <URL>
cp <string>
git clone <URL>
sudo systemctl start <string>
grep <string>
clear
cd <directory>
git commit -m <string>
vi <file>
git push
vi <file>
sudo chmod u+w <directory>
sudo reboot
LANG=<string> rpm -qp --queryformat <string>
vi <file>
ls
sudo su
touch <file>
pwd
exit
git pull -v <string>
cd <directory>
ls
git push -u <string> master
cd <string>
sed -E -e <directory>
git remote add origin <URL>
tcpdump -i <string> -v <string>
ls
ls
npm config <string>
sh <file>
git commit -m <string>
git push origin master
rm -rf <string>
<directory> <string>
exit
ls
sudo chown -R <string>
sudo xbps-install <string>
cd ..
git commit -m <string>
cd <string>
find <directory> -mindepth <number> -type <string>
clear
codedown javascript > <file>
git push
cd <directory>
fg
vim <file>
cd ..
cd <string>
git remote -v
mv <string>
cd ..
npm install <string>
cd ..
rm -r <string>
git diff <string>
cd ..
vi <file>
git commit -m <string>
vim <file>
sudo mkdir -p <directory>
du -skh <string>
vim <file>
python3 -m <string> install --upgrade <string>
git status
sudo docker pull <string>
git commit -m <string>
cd <string>
sort --help
nano <file>
rm -rf <string>
sudo pmset <string>
clear
rm -f <string>
grep <string>
npm run test
pwd
vim <file>
cd -
rm -rf <string>
ls
ls
git push
git init
ls
cd ..
sudo chmod +x <string>
ps
cd <directory>
source <directory>
sudo apt update
ls
ls
clear
cd <string>
eval <string>
git clone <URL>
cd <string>
docker run -d --restart <string> --name <string> -v <directory> -e <string> --cpu_usage_limit=<string> <directory>
cd <string>
cd <string>
rm -rf <string>
git push origin master
sudo visudo
dpkg -l
cd <directory>
git commit -m <string>
rm <string>
cat <string>
cd <string>
sudo nano <directory>
find . -type <string> -exec <string> -i <directory>
sudo apt update
cd <directory>
npm install --only=<string>
ls
ls
sed <directory>
cat <string>
cd <string>
sudo dpkg --configure -a
sudo python3 <file>
ls
read -p <string>
git status
sudo sed -i <directory> <file>
sudo apt update -y
exit <number>
git commit -m <string>
chmod -x <file>
sudo php <string>
print <string>
apt-get update
man <string>
apt-get install <string>
sudo npm i -g <string>
perl -lnwe <string>
cd <string>
go test
cd <string>
mkdir <string>
dmidecode --help
sleep <number>
git commit -am <string>
nano <file>
mkdir <string>
npm run start
vi <file>
exit
ps aux
sudo pacman -S <string>
ls
git pull
wget -q -O <file>
ls
nano <file>
ls
ls
cd <string>
sudo pacman -S <string>
cd <directory>
npm i -g <string>
mkdir <string>
vim <file>
sudo nano <string>
sudo systemctl start <string>
sudo python3 <file>
vim
cd <directory>
git add <string>
rm -r <string>
git commit -m <string>
read -p <string>
git add .
ls -lh
rm -rf
ls
cd <string>
curl <URL> -u <string>
rm -rf <string>
python3 <file>
sed -i <directory>
mkdir -p <string>
cd ..
npm config ls -l
sudo mount <directory>
clear
find . -type <string> -exec <string> -i <directory>
ls
vim <file>
set -ex
cd <directory>
git tag -a <string> -m <string>
sudo pacman -U <file>
cd
source <file>
git commit -m <string>
cd <directory>
sudo <directory> <string>
git status
cd ..
grep <string>
python3 <file>
ls
sed -ri <string>
vim
git branch --set-upstream-to=<directory> <string>
ls
docker container exec -it -w <directory>
diff -b <file>
git bisect good
find . -size <string> -a -print -a -exec <string> -f <string> \
git commit -m <string>
<directory> -m <file>
vi <file>
git add .
mv <string>
cd <string>
clear
tail -f <directory>
ls
fg
git log
ps -auxwf
clear
mkdir <string>
ssh <string>
sh
ls
git add <string>
ls
which <string>
unset -f <string>
sudo rm -rf <string>
du -ach
ls
awk <string>
npm run start
rm -r <string>
rm -r <string>
git add <string>
docker run -it --rm --add-host=<string> <directory>
git push -u <string> master
git commit -m <string>
cd <directory>
cd <string>
tee -a <string>
tmux
git status
then
exit <number>
sudo service <string>
find src
chmod +x <string>
cat <string>
clear
git commit -m <string>
open <string>
ls
ls
vi <file>
bash
ls
systemctl enable <string>
touch <string>
cd <string>
ls
docker exec -it <string>
cd <string>
ls
git init
ls
ls -la
npm run bench -- -c <file> -n <file>
ls
sleep <number>
git branch
git add <string>
git status
git pull
git
git add <string>
sed <directory>
cd <string>
ls
git status
npm install
clear
jq -M <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
ls
cd <string>
clear
ls
scp <string>
cd <string>
git checkout -b <string>
git clone <URL>
cd <string>
mv <string>
chmod <string>
sudo gpg --dearmor -o <directory>
print <string>
cd
git clone --depth <number> <URL>
touch <file>
cd
find -name=<file>
git remote add origin <URL>
grep -i <string>
ls
chmod u+x <string>
clear
git commit -m <string> --no-verify
ls
ls
cd <string>
docker run -ti -d --privileged=<string> <string>
clear
git clone <URL>
clear
git clone <URL>
curl <URL> -sSf
exit <number>
rm -f <string>
npm i <string>
else <string>
ps -bg
sudo dnf install -y <string>
cd ..
git init
exit
ls
cd <string>
git clone --15.0 --branch <URL>
ls -la
rm -rf <string>
ssh <string>
ls
npm run build
sudo pacman -Scc --noconfirm
clear
ls
git add .
grep -B5
openssl req -new -x509 -nodes -sha1 -days <number> -key <file>
htop
vi <file>
git commit -m <string>
git status
vim <file>
which <string>
cd <string>
sudo apt update -y
ls
cd
wc -l
npm http GET <URL>
clear
sudo apt-add-repository -y <directory>
cd
sleep <number>
find $dir -type <string> -exec <string> --summarize -B <string>
tail -f <string>
ls
tail -n <string>
ls
ls
git push
git push
git init
exit
open <string>
ls
python3.11 <file>
exit
sudo reboot
ls
exit
cd ..
ls
git checkout <string>
ls
curl <string>
ls
sudo systemctl start <string>
git checkout <string>
mkdir -p <string>
ls
git remote add origin <URL>
ls
cd <string>
ls
cd <string>
python3 <file>
git commit -m <string>
sudo lpoptions -d <string> -l
cut -d <string> -f <string>
dpkg --add-architecture <string>
cd <string>
npm run start
ls
cd ..
npm list
cd <string>
wget -q <URL> -O <file>
ls
clear
cd <directory>
sudo systemctl start <string>
git commit -m <string>
npm run test
mkdir <string>
cd <string>
dpkg -l
nano
sudo update-alternatives --install <directory>
rm <string>
<directory> <string>
chmod +x <string>
uname -a
apt-get update
cd <string>
vi <file>
wget <URL>
cd <string>
ls
cd <string>
find . -empty -type <string> -print -delete
ls -lh
ls
exit
cat <string>
mkdir -p <string>
export <string>
git branch -D <string>
find . -type <string> \( -name <string> -o -name <string> -o -name <string> -o -name <string> -o -name <string>
mkswap <directory>
ls
python3 <file>
sudo sed -i <directory> <file>
export <string>
sed <directory>
git status
cd <string>
ls
rm -f <string>
sudo sed -i <directory> <file>
cd <string>
npm install -g <string>
clear
git add .
fg
cp -r <directory>
cut -d <string> -f <number>
exit
ls
ls
mv <string>
sudo docker images
exit <number>
clear
git status
cd
ls
cd ..
cd <string>
cd <string>
ls
ls
cp <string>
sudo docker ps
ls
vim <file>
cat <string>
file <string>
git config --global --get <file>
ls
cd ..
cd
ls
find . -name <file> -type <string> -print -delete
head
ls
git commit -m <string>
npm run test
gunzip --decompress <file>
sed -i -e"s/#\tinclude <file>
df -k <string>
tail +n # Print nth line from file.
ls
git push origin master
vi <file>
cd <string>
pwd
rmdir <string>
touch <file>
git add <string>
rm <string>
npm uninstall
sed -i <directory>
cd <string>
ls
ls
cd <string>
ls
python3.11 <file>
unset <string>
git log
ls
ls
exit
exit
clear
docker volume create <string>
git config --global <file>
sudo sed -i <directory> <file>
wget <URL> -O <file>
cp <string>
cd ..
git push --no-verify --mirror <string>
ls
sudo apt install <string>
git init
more <file>
ls
find . -empty -type <string> -print -delete
less <string>
docker-compose logs --follow <string>
clear
ls
exit
wget -qO - <URL>
cp <string>
git push origin master
ls
sudo chmod -R <number> <string>
exit
chmod <string>
python3 <file>
pico <file>
git remote add origin <URL>
done
curl <string>
cd <string>
gzip -d <file>
ls
cat <string>
read -s -n <number>
cd <string>
git add .
cd ..
sudo apt install <string>
cd <string>
shutdown -h <string>
git status
git add .
ls
find . -name <file> -type <string> -print -delete
clear
git pull
find <directory> -maxdepth <number> -type <string>
cd
git init
rm <string>
find src
git commit -m <string>
vim <file>
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
npm run start
ls -alF
vim <file>
cd <string>
systemctl start docker
rm -f <string>
cd <string>
ssh dirlic@10.18.0.39 -p <number>
vim <file>
cd <directory>
sudo apt install <string>
sort -g
source <directory>
vim <file>
git status
git add .
exit
fg
unset color_prompt force_color_prompt
vim <file>
vi <file>
curl -JOL <URL>
exit
pacman
curl <string>
type <string>
sudo dnf install -y <string>
exit
vim <file>
git status
npm install <string>
sudo sed -i <directory>
cd ..
perl <file>
git pull
mkdir <string>
ls
read -r <string>
exit <number>
clear
cat <string>
ps aux
pwd
bash <file>
npm install --save <string>
ls
ls -la
grep -rl <string>
ls
git restore <file>
ls
git clone <URL>
sudo apt install -y <string>
cd <string>
cat <string>
screen
git remote add origin <URL>
ls
gsettings set <file> <string>
sudo nano <directory>
rm -rf <string>
wget -q -O <file>
git commit -m <string>
git init
ping <string>
sort -k1nr
ls
sudo chmod <number> <string>
cd <string>
sudo apt-get --purge <string>
chmod u+x <string>
f=<string> -p
ls
sudo sed -i <directory> <file>
ls
sudo apt install <string>
sudo -s -u <string> -H
exit
ls
sudo apt-get update
cd <string>
cd <string>
cd <string>
exit
git st
more <file>
ls -lAF
sudo apt install <string>
ls
sudo apt-get -y <string>
curl -sS <string>
git status
git stash apply <number>
npm start
top
ls
ls
type <string>
clear
sudo docker exec -it <string>
cd <string>
cd <string>
vi <file>
cd <directory>
cd <directory>
sudo apt remove <string>
sudo useradd --uid <string> --home-dir <string> --gid <string>
systemctl --user <string> <file>
ls
vi <file>
vi <file>
vim <file>
setg RHOSTS.*
cd
sudo systemctl restart <string>
git status
git status
less
git pull origin <string> --rebase=<string> --no-edit
ps aux
git add <string>
sudo systemctl stop <string>
git push
cd <directory>
fg
sed -i <string>
cd <string>
ls
cd <string>
cd <directory>
vi <file>
sudo apt-get update
ls
git checkout -b <string>
open <string>
git add .
ls
egrep -ri <string>
cp -r <directory>
git commit
ls
git pull
ls
sudo visudo
git config --global <file> <file>
git add .
ls
ls
sudo mount <directory> <directory> -t <string>
sudo apt show <string>
git switch -b <string>
sed -i <directory>
npm-recursive-install
egrep -v <string>
npm i <string>
cd <string>
rm -f <string>
shutdown -h <string>
git clone <URL>
git commit -m <string>
python3 <file>
exit <number>
vim <file>
wget <URL>
ls
ls
ls
xargs du -sch
python3 -m <string> install --upgrade <string>
cd <string>
mv <string>
find . -empty -type <string> -print -delete
sudo python3 <file>
git add
mkdir <string>
date
code <string>
cpio -pdm <directory>
exit
npm run dev
npm i -D <string>
ls
sudo apt-get install <string>
ls
git clone <URL>
sudo git checkout <string>
sudo sysctl <string>
git add <string>
npm install <string>
sed <directory>
ls
git stash pop
exit
git push -u <string> master
git pull origin development
date <string>
script/build.sh
ls
ls
git add .
cd <directory>
clear
cd ..
ls
xhost +
sudo apt update
sudo gem install <string>
touch <string>
cd <string>
ls -R
vi <file>
git add .
git config --get-all <file>
cd ..
git clone <URL>
cd <string>
mkdir <string>
git adog
ls
clear
sudo ufw allow <string>
cd <string>
sudo rfkill <string>
ls
sudo emacs <string>
grep <string>
ip a
git checkout <string>
exit
source <string>
npm start
cd <string>
cd <string>
git config --global <file> <file>
fg
head <filename> # outputs the first lines of file (default: <number> lines)
cd <string>
cp <string>
sudo python <file> --cascade=<file> <number>
ls
curl -fLo <file> --create-dirs <URL>
mkdir <string>
tail -f <string>
ls
kill -9 <number>
cd ..
cat <string>
cd <string>
ls
ls
ls
curl --header <string>
uname -a
git add <string>
cd <string>
cd <directory>
sudo apt-get install <string>
awk <string>
clear
su root
sudo xbps-install <string>
find . -type <string> -exec <string> -r <directory>
clear
chmod <number> -R <directory>
clear
done
sudo prometheus --config.file=<directory>
find <directory> -iname <file> -type <string> -exec <string> -c <string>
mkdir <string>
bash <file>
docker tag <string>
exit
mkdir <string>
ls -l
ls
code .
vi <file>
rm -f <string>
ls
git remote --v
ls
git push -u <string> master
kubectl apply --filename <file>
cd ..
cd <string>
code .
ls
cd <string>
setg RHOSTS <file>
git init
rm <string>
cd <string>
ls
ls
ls
rm <string>
ls -l
ls
ln -s <string>
chmod <string>
nano <string>
gsettings set <file> <string>
git clone <URL>
cat <string>
ls
sudo apt-get update
man <string>
ssh-copy-id
export <string>
ls -l
rsync -arv --exclude=<string> <string>
git pull
fg
ls
find
grep -Fn <string>
unzip <file>
exit <number>
ls
git branch
cd
docker stop <string>
ls
git commit -m <string>
vi <file>
git log --all <string>
clear
cd <directory>
mvn compile
cd ..
git st
cd ..
sudo vi <directory>
rm <string>
mvn clean
ls
ls
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
grep -F <string>
python3 -m <string> venv
vim <file>
bash
vim <file>
sudo nano <directory>
vim <file>
exit <number>
cd <string>
git status
grep -E <string>
git push
ls
cd <string>
cd <directory>
git init
cat <string>
more <file>
apt-get purge -y <string>
tmux
sort -rn
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git pull
cd <directory>
cd ..
vim <file>
git pull
sudo nginx -t
then
cd
git push
ls
git push -u <string> master
git add .
cd
ls -lhrt
cp -R <string>
mkdir <string>
df # shows disk usage
git status
rm -fr -- <string>
cd
cat <string>
git commit -m <string>
clear
ssh -p <string> user@host # connects to host on specified port as user
nano <file>
cd <string>
xargs -n1 <string>
clear
more
git status
ls
ls
git remote add origin <URL>
git remote rm <string>
nano <string>
git status
sudo apt dist-upgrade
vi <file>
git clone <URL>
curl <string>
grep -rl <string>
docker build
du -h
ls
exit
sudo sed -i <directory> <file>
cd ..
helm <string>
cd..
grep <string>
cd <directory>
cd <string>
pico <file>
less <string>
ssh dirlic@10.18.0.39 -p <number>
cd <string>
clear
g++ -std=<string> <file> -o <string>
cp -R <string>
cd <directory>
exit
ls
sudo vim <file>
sed -i <directory>
ln -s <string>
history
cd ..
npm i <string>
awk <string>
python3 <file>
ls
rm <string>
awk <string>
setg RHOSTS.*
clear
apt-get -f <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
mv <string>
sudo gem install <string>
cd <directory>
clear
cd <string>
sudo su
git commit -m <string>
cd <string>
tail -f <string>
clear
hg <string>
vi <file>
vi <file>
vim <file>
git add .
git add -A
rm -rf <string>
exit
sed -i <directory>
ls -la
cd ..
egrep <string>
ls
cd <string>
git commit -m <string>
ls
ls
sudo docker images
vim <file>
ping <file> -c <number>
read -p <string>
sudo su
sudo snap install <string>
python3 <file>
man <string>
cd <string>
ls
ls
read -p <string>
ls
fg
du -m
cd
cd <directory>
git stash
mv <string>
ls
git commit -m <string>
ls
git commit
ls
git push
find . -type <string>
cd <directory>
vim <file>
git add .
cd <string>
cat <string>
cd
tcpdump
ls
wget <URL>
cat <string>
g++ -std=<string> <file> -o <string>
sudo chown <string>
git add .
cd <string>
exit
git config --global <file> <file>
ls
git status
ls
grep -r <string>
npm http <number> <URL>
cd ..
ls
chmod +x <string>
vi <file>
python3 <file>
done
cd <string>
git add <string>
cd <directory>
cd <directory>
docker exec -it <string>
exit
clear
cd <string>
vim <file>
vim <file>
sudo wget -O <directory>
exit
ls
ls
git tag <string>
git push
git pull
ps --help
git remote add origin <URL>
cd <string>
ls
grep <string>
rm -rf <string>
cd ..
git add .
mkdir <string>
git commit -m <string>
cd <directory>
git status
ls
cp <string>
docker run <string>
mkdir <string>
ls
mkdir -pm <number>
cd <directory>
ls
ls
ps -auxwf
ls
exit
cd <string>
git add <string>
vi <file>
sudo update-alternatives --config <string>
ls
sudo su - <string>
ls
ls
rm -rf <string>
git add .
sudo stop uwsgi
git add .
npm install clipboard --save
cd <string>
cd <string>
ssh dirlic@10.18.0.39 -p <number>
exit <number>
ls
git push
ls
git add .
apt-key add -
cd <directory>
exec zsh
make clean
sudo pacman -S <string> --noconfirm
cd <directory>
ls
ls
docker stop <string>
ls
clear
cd <string>
ls
cat -b <file>
cd <string>
git push -u <string> master
git init
ls -a
clear
grep -win -C <number>
git branch 2> <directory>
less <string>
ls
vim
git commit -m <string>
cd <string>
sudo chmod a+wr <directory> -R
ls
sudo virsh <string>
ls
wget -q -O - <URL>
cd ..
mkdir -r <directory>
git commit -m <string>
grep <string>
git clone <URL>
cd <directory>
sudo rm -r <string>
ping
mkdir <string>
ls
cd <directory>
rm -rf <string>
rm <string>
find . -type <string>
ls
exit
git pull
ps aux
vim <file>
ls
chmod -x <file>
docker history
git add .
sudo apt-get dselect-upgrade
ls
cd
ls
fg
sudo yay install <string>
git status
history -r
read -r -p <string>
ls
ls
sudo apt install <string>
sudo <file> -i <file>
cd <string>
clear
grep -Eo <string>
dpkg -l
ls
git clone <URL>
ls
vim <file>
sudo chmod <number> <string>
cd <string>
head -n <string>
ls -all <directory>
git checkout -b <string>
sudo apt-get remove <string>
exit <number>
git commit -m <string>
ls
reboot
exit
cat <string>
nano <string>
nano <file>
cd <string>
exit <number>
git push
ls
ls
cd <string>
ls
tar -xf <string>
npm start
mv <string>
npm uninstall react-native-action-sheet --foce
cd <directory>
sudo snap install --classic <string>
sudo apt-get update
git commit -m <string>
ping <string>
cd <string>
git commit -m <string>
print <string>
git pull origin master
npm run test
ls -la <directory>
sudo apt install <string>
cd <directory>
ls
find . -name <string> -prune -o -true
ls
sudo make clean install
gpg --keyid-format <string> --keyserver <file> --recv-keys <string>
fg
clear
git push -u <string> master
ls -l
vi <file>
sudo apt update
git fetch
ls -la <directory>
sudo python3 <file>
ls
git push origin master
more <file>
git commit -m <string>
chmod -x
grep -i <string> >files
git add .
sudo apt purge <string>
nano <file>
cd <string>
cd <directory>
cd <directory>
ls
head -n <number>
cat <string>
cd <string>
ls
rm -rf <string>
ls
apt list --upgradable
file <string>
ls
cd <directory>
vim <file>
ls -l --color
git add <string>
cd <string>
cd <directory>
ls
git commit --allow-empty -m <string>
find . -iname <file>
cd <string>
cd <string>
ls
ls
ls
ls
sudo apt install <string>
sudo apt-key add -
cd <string>
cd <string>
cp -v <string> <directory>
ls
cd <string>
cd <directory>
pwd
yay -S <string>
grep <string>
cd <directory>
ls
cd ..
source <string>
vim <file>
ls
git add .
npm install express -D
git branch -a
ls
journalctl -b -1 -e
cd <string>
pbcopy
sed <directory>
fg
reboot
git commit -am <string>
reboot
npm start
ls
mv <string>
docker run --rm --entrypoint <string> $BROKER_IMG_REPO -c <string>
ssh dirlic@10.18.0.39 -p <number>
ls
git pull
sed -E -e <directory>
read -r -p <string>
xargs -L1 -I'{}' <string> -rE <string>
sudo rm -r <string>
cd ..
scp <string>
ls
git branch
ls
source <directory>
clear
vim <file>
git status
git add .
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
sudo apt-get install -y <string>
cut -d <directory> -f <number>
tmux
rm <string>
clear
sudo apt upgrade
sudo nvpmodel -m <number>
cd <string>
git status
cd ..
who
scp <string>
vi <file>
sed -ie <directory>
git push origin <string>
ls
php <file> -t=<string> -k <file>
rm -rf <string>
ls -l
cd <string>
ls
rm -rf <string>
vim <file>
top
ls=<string> -ld <string>
ping <string>
npm i --save <string>
export <string>
bash <file>
git hist
git merge <string>
ls
ls -la
dir <string>
sudo vi <directory>
cd <directory>
top
git push
find . -name <file> -type <string> -exec <string> -rf <string>
ls
sudo pacman -Syyu <string>
find . -name <file>
sed <directory>
git init
curl
cd <string>
sudo chmod a+rwx <directory>
ls
python3 <file>
vim <file>
find . -type <string> -exec <string> -i <directory>
fg
ls
cd <directory>
fg
sudo chmod -W <directory>
git remote add origin <URL>
ls
git rebase -i <string>
find . -size <string> -a -print -a -exec <string> -f <string> \
sudo sed -i <directory> <file>
vim <file>
clear
vi <file>
ls
find -name <string>
sed <directory>
ssh-add -K <directory>
exit
sudo zypper install <string>
ls
vi -t <string>
ls
git add <string>
sudo apt-get remove <string>
mv <string>
ls
cd <string>
sudo apt-get remove <string>
sudo updatedb
clear
nano <file>
ls
cd <directory>
fg
sudo yum install -y <string>
cp <string>
ls
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
ls
git config --global
done
chmod +x <string>
ls
vim
rm -rf <string>
date
tail -f <string>
ls
kill -s <number> <number>
su root
git commit
cd ..
git add .
git --set-upstream <string>
rm -rf <string>
git push origin main
cd <directory>
ls
vi <file>
cd ..
cd../ git remote -v
cd ..
mkdir -p <string>
cd <string>
git clone <URL>
ls -la
rm -rf <string>
docker-machine --version <string>
ls
git status
git add .
screen -r <string>
ls
git commit -m <string>
git commit -m <string>
sudo dpkg -i <file>
git clone --bare --branch=<string> --single-branch <URL>
cd ..
git config <file> <string>
clear
exit
exit
git status
cd <directory>
patch -p1 <string> <file>
history -d <string>
touch <file>
cp <string>
ps
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
sudo pacman -S <string>
git config --global <file> <file>
cd <string>
read -s -n <number>
git add .
curl -q <URL>
ssh
lsof
ls
cd ..
pwd
rm <string>
git status
ps -ef
git rev-list --all
curl <URL> -rs)/prod.list <string>
clear
cat <string>
grep <string>
sudo start uwsgi
docker exec -it <string> bash
man <string>
sudo apt-get install <string>
screen
sudo mv <string>
git pull
sudo gem install <string>
exit
mkdir <string>
ls
cd ..
python3 <file>
reboot
vi <file>
ls
git rm -rf <string>
cd ..
ls
wget <URL>
sudo pcmanfm
cd <directory>
wget
git checkout -b <string>
cd <directory>
cd <directory>
history -a
git pull
pwd
git init
cd <directory>
git push
cd <string>
cd <string>
exit
sudo python3 <file>
find <directory> -name <string>
ssh-add -K <directory>
git add .
ls
exit
ls
reboot
kill <number>
ls
rm <string>
which <string>
mkdir <string>
cd <directory>
systemctl status <string>
ls
alias <string>
mkdir <string>
cd <string>
cd <string>
cd ..
git merge <string>
clear
wget <URL>
ls++ -a
finger <user> # displays information about user
source <string>
ls
dir <string>
ls
source <string>
git checkout <string>
vim <file>
docker-compose up -d --build
mv <string>
screen -r <string>
code <string>
tar -cf <directory> -T -
sudo apt autoremove
rm -rf <string>
chmod +x <string>
rvm <string>
history
mv <string>
cp -t <string> -a <string>
vim
cd <directory>
rm <string>
code <string>
sudo flatpak override --env=<string>
ls
reset
mv <string>
more <file>
cd <directory>
cd <string>
cd ..
ls
git status
cd <string>
cd
git remote add origin <URL>
cd ..
ls
git commit --allow-empty -m <string>
cd <string>
git add .
cd <string>
python3 <file>
ls
ps -auxwf
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
vi <file>
cd <string>
docker-compose -f <string>
cd <string>
sudo deluser <string>
ls
git commit -m <string> --no-verify
apt-cache --help
sudo npm install <string>
sudo hostnamectl set-hostname <string>
clear
clear
docker exec -it <string>
cd <directory>
ls
git checkout <string>
sudo docker run -it --name <string> --entrypoint <string> -u <string> --privileged -rm <directory>
git push
cp <string>
cat <string>
rm -rf <string>
sudo systemctl daemon-reload
ls
docker exec -it <string> bash
git pull
cd ..
docker
cd <string>
sudo apt remove <string>
find . -empty -type <string> -print -delete
mv <string>
sudo reboot
vi <file>
find . -empty -type <string> -print -delete
git add <string>
chmod <number> <string>
ls -a
cd ..
ls
sudo pcmanfm
code .
ln -s <string>
ls
cd <string>
sudo apt-get -y <string>
man <string>
mkdir <string>
ls -la
sudo apt-get install -y <string>
ls -la
ls
reset
ls
clear
ls
cd <string>
rm <string>
ls
sudo apt-get install <string>
cd <directory>
git clone <URL>
vi <file>
chmod <number> <string>
clear
cd <directory>
git add .
mkdir <string>
git commit -m <string>
vim <file>
mv <string>
ls
vi <file>
ls
cat <string>
sudo cat <directory>
cd <string>
ls
ls
ls
source <file>
ls -la
clear
ls
wget -O <file>
clear
python3.11 <file>
xargs -0 <string> -i <string>
git stash -h
ls -l
git commit -m <string>
vim
clear
sudo apt upgrade
docker images
vim <file>
git commit -m <string>
find . -type <string> -mtime <string>
ls
git push
ls
bash
clear
ls
ls
cd <directory>
systemctl --type=<string>
fg
git add <string>
clear
exit
clear
clear
sudo cp -r <string>
git status
clear
clear
ssh dirlic@10.18.0.39 -p <number>
chmod u+x <string>
cat
docker run -d -p <string>
cd ..
git please
ls
cd <string>
sudo apt-get update
<directory> <string>
cd <string>
git push -u <string> master
git add .
mv <string>
sudo apk add <string>
fg
grep -e <string>
rm -rf <string>
vim <file>
clear
ls
ls
grep <string>
sudo apt install <string>
cd <string>
fg
git commit -a -m <string>
touch <string>
clear
mkdir <string>
ls
sudo ufw enable
chmod +x <string>
ls
ls
clear
vim <file>
vim <file>
cd ..
cd <directory>
curl -T <directory> <string>
fg
npm run build
vim <file>
cd <directory>
git add <string>
git pull
xargs kill
ls
cd <string>
cd ..
git commit -m <string>
cd ..
ls
vi <file>
sudo dnf install <string>
cd <string>
cd
vim
apt install <string>
git add .
vim <file>
ls
vim <file>
git rev-parse --git-dir <string>
git add .
ls
ls
ls
cd ..
git commit -am <string>
docker exec -it <string> bash
sudo pip3 install <string>
mv <string>
cd <string>
cd <string>
git commit
git commit <file> -m <string>
ssh-copy-id <string>
sudo systemctl start <string>
sleep <number>
cd <directory>
wget -r <URL>
git pull
docker-compose logs
sudo pip3 install -U <string>
ls
git commit -m <string>
exit
reboot
top
cd
ls
sudo sed -i <directory> <file>
ls
find . -empty -type <string> -print -delete
mkdir <string>
git status
grep <string>
cd
ping <string>
rm -rf <string>
sudo lshw -html <string>
cd <string>
cd <string>
clear
ls
git pull origin master
ls
npm install <string>
mv <string>
code .
npm audit fix -f
cd <directory>
cd <string>
sudo rm -rf <string>
vim <file>
ssh-add <directory>
clear
python3 <file>
cd ..
git add <string>
ls
vi <file>
git git pull
cd <string>
sudo apt-get remove <string>
cat <string>
git commit -am <string>
rm -r <string>
vim <file>
ls
cd ..
git add <string>
ls
git status
cd ..
sudo add-apt-repository <directory>
chmod u+x <string>
cd ..
npm install
reboot
git status
vim
apt-get update
ls
ls
ls
npm install
clear
cd <string>
cp -r <directory>
cd <string>
cat <string>
cd <string>
vim <file>
cd <string>
clear
exit
cd
exit
clear
cd -
git commit -m <string>
exit
git status
ls
sudo tee <directory>
which <string>
clear
python3 <file>
ls
ls
sudo systemctl stop <string>
chmod -v <string>
ls
ls
git init
clear
ls
ls -ld <string>
vim <file>
cd <string>
docker build -t <string>
git commit -m <string>
vi <file>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
ls
git commit -m <string>
kill <number>
su root
which <string>
ssh <string>
fg
cd
git push origin master
git remote remove origin
source <string>
grep -Hn --color <string>
which <string>
sudo apt-get update
git push
fg
git pull
top
exit <number>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
ls
ls
cd <directory>
cd -
ssh dirlic@10.18.0.39 -p <number>
git commit -m <string>
exit
cd <string>
git push -u <string> main
vim <file>
chmod <string>
rm <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd ..
ls -a
sudo cp <string>
vim <file>
code .
vim <file>
history
done
git push -u <string> main
wget <URL>
ls
git commit -m <string>
git status
ls
git stash
git branch 2> <directory>
cp -r <directory>
vim <file>
top
grep -v <string>
ls
exit
curl -fLo <file> --create-dirs <URL>
clear
ssh -i <string> remote_user@remote_host
ls
cd <string>
cd <directory>
alias <string>
git remote add origin <URL>
vi <file>
cd <directory>
ls
clear
cd <directory>
vim <file>
vim <file>
cd <string>
rm -r <string>
cd <directory>
clear
ssh <string>
git ls-remote <string>
fg
vi <file>
cp <string>
cd ..
ps -ef
ls
cd <string>
vim <file>
clear
exit
cd <string>
less <string>
ls
sudo rm -rf <directory> <directory>
git pull
mkdir <string>
ls -alh
git checkout <string>
su - <string> -c <directory>
ls
sudo dpkg -i <file>
ls
ls
exit
ruby -e <string>
reboot
git add .
git push
exit
git checkout --orphan <string>
find . -name <file>
pacman -S <string>
cd <directory>
ps
python3 -m <string> venv
git checkout <string>
sudo docker run --rm --volume <directory>
touch <string>
sudo sed -i <directory>
vim <file>
fg
cd ..
git push -u <string> bryan-guner
cd <string>
git status
git status
git diff
sudo nano <directory>
sudo cat <directory>
grep <string>
git add <string>
npm http GET <URL>
clear
ls
which <string>
ls -alrt
exit
clear
cd <string>
cd <string>
vim <file>
egrep <string>
git add .
docker exec -it <string> bash
sudo apt-get remove <string>
cd <directory>
sed -i <string>
npm install -g <string>
curl --location <directory> --header <directory> --header <string> --data <string>
git push -u <string> bryan-guner
ls
git commit -m <string>
chmod <number> <string>
mv <string>
git add .
npm uninstall -g <string>
sudo mkdir <string>
ls
sort -u)
cd <string>
ps -u <string> # lists your processes
ls
exit
cat <string>
exit <number>
cat <string>
mkdir <string>
git remote add origin <URL>
ls
docker ps --all --quiet
clear
ping <string>
cd
sudo apt-get install -y <string>
npm install --save <string>
grep <string>
cd <string>
git status
vim <file>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
vi <file>
cd <string>
rm -rf <string>
mv <string>
cd <string>
cd ..
ls
ping <file> -D
clear
sudo chmod -R <number> <string>
df -h <string>
sudo python <file> -cascade==<file> <number>
cd <directory>
ls
touch <string>
exit
vim <file>
ls
cd ..
fg
ls
cd
mkdir <string>
rm -rf <string>
ls -lh
<directory> <string>
cd <string>
ls
vim <file>
ls
git remote add origin <URL>
git status
source <file>
mv <string>
git git status
ls
ls -la
ps aux
sudo pip install <string>
mv <string>
openssl rand -hex <number>
ls
cd <string>
cd <directory>
ls -R <string>
ls
exit <number>
ls
docker ps -q
docker pull <string>
rm -rf <string>
tar -C <directory> -xzf <file>
ls -l
cd
ls
git init
git clone <URL>
ps aux
git pull
sed -e <string> -e <directory> -e <string> \
git commit -m <string>
git status
sudo sed -i <directory> <file>
cd
ls
exit <number>
ls
sudo apt-key add -
sudo sed -i <directory> <file>
git push origin main
ls
wget <URL>
docker tag <string>
pax -w -f <file>
npm install
vi <file>
ls
ps aux
ls
ls
git clone <URL>
cd ..
uniq -c
ls
sudo apt-get --assume-yes <string> <string>
ls
composer create-project -s <string>
git push -u <string> main
vi <file>
vi <file>
read -r <string>
sed -i -- <directory>
sudo apt install <string>
code <string>
git add <string>
git push -u <string> master
cd <string>
cd <string>
git status
alias <string>
ls
read -p <string> -n <number> -r
git fetch
git gc --aggressive --prun
cd <string>
ls
git add .
git status
ls
git add <string>
ls
ls
sleep <number>
cd <string>
npm install <string>
git push
kubectl --namespace <string> <string>
ls
exit
cd <directory>
cd <string>
<directory> <string>
ls -ltr
git pull
sudo nano <directory>
sudo dmidecode
grep <string>
cp <string>
ls
vi <file>
tcpdump -i <string> -c5 <string>
ls
cd <string>
curl --silent <string>
sudo apt-get install <string>
cd <directory>
cd <string>
cd <string>
sudo nano <directory>
git add .
sed -i <directory>
mv <string>
man <string>
ls
npm config <string>
exit
git commit
ls
ls
grep -F <string>
ls
sudo apt-get autoremove -y
ls
docker exec -it <string>
git commit -m <string>
git commit -m <string>
cd ..
cd ..
ls -a
git pull
ls
git add .
vi <file>
ls
clear
ls
git commit
python3 <file>
sudo apt -y <string>
fg
command curl -sSL <URL>
git push
date
sudo rsync -av --progress <directory>
git remote add origin <URL>
cd ..
ls
date
ps -a
git init
ls
git revert <string>
rm <string>
rm -rf <string>
ls
sleep <number>
git commit
cd <string>
g++ -std=<string> <file> -o <string>
sudo supervisorctl <string>
docker login
cd <string>
sed <directory>
git status
cd <directory>
exit <number>
git init
npm install --save-dev <string>
sudo python <file>
sudo virsh -c <directory> <string>
rm <string>
sudo dnf install <string>
cp -v <string> <directory>
rm <string>
clear
touch <string>
vim
clear
ssh dirlic@10.18.0.39 -p <number>
read <string>
ls
brew
vi <file>
ls
vi <file>
sudo apt update
rm -Rf <string>
ls
git push
ls -a
chmod <string>
node <file>
date <string>
ls
exit <number>
ls -al
sudo sed -i <directory> <file>
git fetch origin\
cat <string>
git init
sudo pacman -S <string>
cat <string>
exit <number>
mv <string>
cd ..
ls
reboot
cd ..
ls
ls
ls
ls
exit
mkdir <string>
cd <string>
sudo vim <file>
head -40 <string>
git commit -m <string>
clear
kubectl --namespace <string> <string>
apt-get purge <string>
rm <string>
vi <file>
wget -q <string> -O <string>
sudo sed -i <directory> <file>
git add <string>
cd ..
vim <file>
mkdir <string>
apt update
sudo pip3 install -U <string>
ls
docker logs <string>
cd <string>
xargs -0 <string> -- <string>
tmux source-file <file>
ls
mkdir <string>
which <string>
cd OneDrive\ -\ <string>
cd <string>
touch <file>
cd <string>
cd <string>
type -a <string>
sudo apt install <string>
print -P <string>
cd <string>
ls
ls -a
wget -q -O - <URL>
git push
mv -- <string>
cd <string>
vim <file>
sudo apt install <string>
sudo make clean install
cd <string>
git pull origin master
git commit -m <string>
awk <string>
sort
grep <string>
ls
ls
git status
fg
ls
rm -r <string>
time <string>
git init
nano <file>
ls -all
sudo service nginx restart
open .
git remote add origin <URL>
ls
git cat-file -p <string>
chmod <number> <string>
ls
sudo history
git gc --prune=<string> --aggressive
cat <string>
git add <string>
cd ..
vim <file>
ls
ps aux
done
vim <file>
python3 <file>
vim <file>
done
git commit -m <string>
cd
ls
git push origin <string>
clear
exit
cd <string>
git add .
ls -la
clear
ls
ls -lRa
git config --global --unset <file>
git push origin master
kubectl apply -f <string>
cd ..
git push --force <string>
sudo add-apt-repository <string> [arch=<string> <URL>
exit
sudo apt autoremove
sudo sed -i <directory> <file>
cd <directory>
ls
sed <directory>
ls
LANG=<string> rpm -qp --queryformat <string>
npm install express --save
ls
sort
cd <directory>
sudo vim <file>
cp <string>
ls
python3 <file>
cat <string>
apt-get upgrade -y
ls
git pull
curl -sS <string>
exit
sudo apt-get update
sudo sed -i <directory>
clear
git add .
git push origin --force --all
git remote add origin <URL>
du -sb <string>
cd <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec -print
sh
print <string>
cd <string>
vim <file>
git push
ls
git clone <URL>
nano <file>
ls
find . -name <string> -type <string>
git add <string>
rm -f <string>
rmdir <string>
exit
mv <string>
sed -n <string>
clear
tail -f <directory>
ls
git commit -m <string>
cat <string>
vim <file>
telnet <string>
ls -la
cd <string>
curl <string>
exit <number>
cd <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
cd <string>
top
vi <file>
fg
clear
pwd
sudo yum install <string>
git remote add origin <URL>
cd ..
ls
find . -size -5M
reboot
git add .
ls -l
ls
cd <directory>
read
exit
cd -
cd <string>
sudo rm -rf <string>
mkdir <string>
touch <file>
git branch -a
clear
cd <directory>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
touch <file>
cd <directory>
cp -v <string> <directory>
sudo mkarchiso -v -w <string> -o <string> slim-iso
mv <string>
ls -la
sudo init <number>
ln -s <string>
cd <directory>
grep <string>
git clone <URL>
chmod <string>
git push
vi <file>
sudo apt-get update
php
git status
git status
ls
sh <file>
ls
sudo sed -i <directory> <file>
cd ..
sed -i <string>
cd <string>
do\
ls
sudo certbot --nginx -d <file> -d <file>
git pull
mkdir <string>
git init
sudo timedatectl <string>
ls
npm install
ls
git rebase -i <string>
sudo gedit <string>
ls
git stash
sudo rm -r <string>
cd <string>
cd <string>
git log -p
cd <string>
sudo systemctl restart <file>
ls
git commit -am <string>
grep <string>
git add .
cd <string>
curl <string>
ls projects
ls
git config --add <file>
cd <string>
rm <string>
cd <string>
git
ls
ls
kubectl get <string>
apt update
git commit
python3 <file>
cd <string>
chmod -x <file>
git push -u <string> master
sudo ifconfig en0 ether <string>
find . -name <file> -type <string> -print -delete
clear
brew install <string>
ls
ls
sudo su root
sleep <number>
ls
cd <string>
yarn <string>
fg
git init
git push -u <string> master
git add <string>
ls
sudo rm -rf <string>
clear
pacman -S <string>
cd <string>
more <file>
grep
read -p <string>
npm start
cut -d':' -f5 <string>
ls
sudo chmod <number> <directory>
cd <string>
git push
cd <string>
perl -l -ne <directory>
vim <file>
ln -sf <directory>
git commit -m <string>
systemctl stop kubelet
ls
cd ..
exit
ls
cd ..
sudo pacman -U <file>
ls -al
fg
grep -r <string>
cd <directory>
ls
cd ..
sudo nano <directory>
find . -type <string> -exec <string> -n -e <directory>
touch <file>
vim
su root
sudo apt-get update
npm i -g <string>
vim <file>
touch <file>
git push
vi <file>
exit
dpkg --print-foreign-architectures
git commit -m <string>
cd <string>
git clone --depth <number> <URL>
rm <string>
git stash
ls
pacman -S <string>
ls
ls
clear
chmod <number> <string>
git push -u <string> main
rm <string>
sudo chmod +x <string>
exit
sudo apt-get update
code <string>
cd <string>
rm <string>
git branch -D <string>
clear
cd <directory>
git status
exit <number>
apt-get -f <string>
ls
ls
cd <string>
cp -r <directory>
pacaur -S <string>
finger <user> # displays information about user
git stash
head -n <string>
ls
ls
vim <file>
cd <string>
cd <directory>
grep -i <string>
vi <file>
sudo nvim <directory>
cd <directory>
git commit -m <string>
clear
ls -a
sudo apt-get update
cat <string>
ls
ls
ls
ssh-copy-id <string>
ls
git commit -m <string>
clear
cd <directory>
sudo npm install -g <string>
git push
ps aux
sudo rm -rf <string>
make clean
ls
apt-get update
ls
ps -ef --forest
git checkout <string>
git push
cd <string>
ls
cd <string>
vim <file>
perl <file>
kill <number>
cd <string>
unset <string>
ls
sudo update-alternatives --remove <string>
cd <directory>
ls
grep -r <string>
rm <string>
ls
cd
sudo apt install -y <string>
fg
cd <string>
sh <file>
ls
mkdir
python3 <file>
ls
done
ls
sudo pacman -S <string>
sudo apt-get install <string>
ls
cat <string>
cd <directory>
else
mkdir <string>
chmod <number> <string>
git hist -L <number>
git stash clear
ls
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
git commit -m <string>
python3 <file>
npm run start
cp <string>
fg
pwd
unzip <file>
git status
python <file> runserver 0.0.0.0:2016
git checkout -b <string>
sudo nano <directory>
unset <string>
git commit -m <string>
cd <string>
cd <directory>
true
ip a
cd ..
ls
ls
clear
sudo nvim <directory>
sudo apt-add-repository <directory>
ls
git pull
cd ..
ls
git add .
ls
npm init -y
cd ..
sort -nr
ls
rm <string>
rmdir <string>
git push
vim <file>
tail -n$KEEP <string>
git commit -m <string>
git add .
clear
git add .
vi <file>
sed -e <directory>
cd <string>
cd..
npm run test
ls
read -rp <string> <string>
touch <string>
cd <string>
rm <string>
ls
tail -f <directory>
fg
ls -l
vim <file>
cd <string>
exit
find . -name <string> -type <string>
ls
cd ..
clear
vim <file>
cd <string>
ls
kubectl <string>
cd ..
cd <string>
ls
cd ..
vi <file>
git branch -rm <string>
git push
screen -r
npm install <string>
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
sudo curl -o <directory>
wget <URL> -O <directory>
nano <file>
git branch -m <string>
git status
cd <string>
sudo aptitude -h
ls
git remote -v
cd <string>
fg
sudo apt install <string>
ls
vim <file>
ls
set
fg
git submodule update --remote --merge
ls
less
ping <string>
clear
ls
git clone <URL>
ls
vi <file>
cd ..
git status
find . -name <file>
ls
bash
exit
ls
git add .
ls
tail -f <string>
mkdir -p <string>
history
cd <directory>
clear
clear
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
git commit -m <string>
ls
mkdir <string>
nano <file>
python3 <file>
sudo apt-get install <string>
ls
nano <file>
wget -O <file>
ssh-keygen -t <string> -C <file>
cd <directory>
ls
sudo rm -rf <string>
cd <directory>
ls
mount --types <string> overlay --options
git commit
sudo apt-get clean
head -n1
sudo apt-key add -
curl <string>
sudo docker rm corrade
vim <file>
scp <string>
cd <directory>
sudo apt-get install -y <string>
ls
vim <file>
ls
touch <string>
git status
curl -Lo <file> --create-dirs <URL>
git commit -m <string>
sudo pacman -Syyu <string>
read -p <string>
exit
git pull
cp <string>
sudo shutdown now
git checkout <string>
done
sudo vi <file>
grep <string>
done
sudo stop uwsgi
wget <URL>
git commit -m"update"
cd <string>
ls -la
ls
git branch
sudo poweroff
git pull
ls
ls
git add <string>
rm -r <string>
curl --data <string>
npm run start
cd <directory>
exit <number>
python3 <file>
git push origin <string>
ls
vim <file>
cd <string>
git commit
ls
python3 <file> --hid_Unit <number> --lrn_rate <string> --drop_out <string> --epochs <number> --testmode <string>
git branch -M <string>
ssh <string>
ping <string>
mkdir <string>
clear
pwd
nano <string>
curl -o- -L <URL>
exit <number>
exit <number>
mkdir <string>
sudo add-apt-repository <directory>
cd <directory>
ls
exit
ls
sed <directory>
exit <number>
exit
fg
cd <string>
sudo pacman -S <string>
cd <directory>
git push
done
cd <string>
source <string>
code .
vi <file>
sed -i <directory>
git status
sudo chmod a+wr <directory> -R
fg
man <string>
cd <directory>
tmux
git status
cd <string>
ls -la
vim <file>
vim <file>
npm start
clear
cd <directory>
systemctl daemon-reload
exit <number>
code .
rm <string>
rm -rf <string>
git rm --force <string>
docker run --rm -v <string>
wget -i <URL>
rm -rf <string>
ls -a
git status
sudo apt-get -y <string>
ls
sudo tar -C <directory> -xvf <file>
pwd
sudo apt-get --assume-yes <string> <string>
ssh <string>
cd
nl
rmdir <string>
ls
sudo apt install <string>
sudo pip install <string>
exit
git branch -D <string>
git add <string>
cd <string>
git push -u <string> master
cd ..
ls
diff <file>
wget <URL> -O -
clear
rm <string>
sudo apt -y <string>
sudo git push -u <string>
bash --login" <directory>
chmod <string> -- <string>
grep -E <string>
sudo service nginx restart
mkdir <string>
git push -u <string> main
vim <file>
exit
nano <string>
cd
cd <string>
sudo su
cd ..
ls
ls
git commit
npm install <string>
more <file>
sudo vim <file>
perl <file>
git hash-object -w --stdin
ls
rm <string>
man <string>
cd <string>
npm run coverage
cd <string>
ls -a
sudo -u <string>
brew install <string>
head -y <file>
killall -s <number>
more <file>
git status
ls
cd <string>
ls
ls
ls -la
git pull
cat <string>
sudo reboot now
sudo mv <string>
ls
clear
npm -v
cd ..
cd <directory>
shutdown -h <string>
sudo apt install <string>
git clone <URL>
ls
ls
git diff --summary
git remote set-url --add <string>
cd <string>
exit
cd <string>
cd <directory>
ls
sudo start uwsgi
cd ..
less <string>
ls
ls
ls
git commit -m"mergerererer"
clear
git commit -m <string>
apt-get update
ls
exit <number>
cd ..
ls
python3 <file>
mkdir <string>
ls
git clone <URL>
view <string>
less <string>
chmod <number> <string>
git branch -M <string>
exec zsh
sudo hostnamectl set-hostname <string>
ls
grep <string>
exit <number>
cd ..
cd ..
ls
docker ps
vi <file>
cd <string>
ls
rm <string>
dpkg-divert
sort -rn
fg
head -n <string>
git add <string>
cd <directory>
ls _build
git submodule update --init
cd <string>
sudo su
find . -mtime -7 <string>
vim <file>
cd <string>
cd <string>
python3 <file>
mkdir <string>
ls
sed -i <directory>
ls -la
cd <string>
apt install <string>
cd <string>
vim
wget <URL>
npm install -g <string>
ls
shutdown -h <string>
cd <string>
mkdir -p <string>
clear
sudo apt-get install -y <string>
ls
ls -la
ls
ls -al
ls
exit
sudo python <file>
git clone <URL>
apt-get remove -y <string>
chmod <number> <string>
touch <string>
rm <string>
mkdir <string>
git pull origin <string>
read -rp <string> <string>
ls
cd <string>
docker ps -q
sudo apt-get update
sudo cp <string>
git branch
ls
ls
ls
cd <string>
cd <string>
sudo -E <string> -
git pull
sudo rm -rf <string>
ls -la
vim <file>
ls
exit <number>
exit
scp <string>
git commit -m <string>
cd <string>
ls
ls -la
cd
cd <string>
docker-compose -f <string>
cd <string>
find . -empty -type <string> -print -delete
clear
git pull
ls
cd <string>
ls
vi <file>
export <string>
cp -v <string>
ls
vi <file>
chmod <number> <string>
ls
export <string>
cat <string>
exit
vim <file>
ls
git clone --mirror <string>
sudo prime-select <string>
source <file>
cd <string>
cat <string>
git commit
ps -auxwf
apt-get install <string>
ls -al
git add <string>
cd <directory>
git init
shift
cd <directory>
then
pacman -S <string>
git commit -m <string>
ssh-keygen -t <string>
tmux
cd <string>
exit
sudo nvim <directory>
uniq
exit
find . -type <string> \( -name <file> -or -name <file>
ls -ltah
npm run make
cd <string>
git clone <URL>
sudo rm -rf <string>
git push
node <file>
cd <string>
python3.9 -m <string>
sudo systemctl stop <string>
umount <directory>
login
git pull origin master --allow-unrelated-histories
systemctl restart <file>
sed -i <string> -e <string>
git push
ls -l -a
unset <string>
cd ..
export <string>
ls
sudo apt-get install <string>
chmod <number> <string>
sudo ufw allow <string>
git add <string>
ls
ls
unset <string>
ls
chmod <number> <string>
git push
npm i docsify-cli -g
top -n <number>
git status
ls -l
pwd
curl -s <URL> -o <string>
awk <string>
export <string>
mkdir -m <number> -p <string>
npm install --save <string>
ls -a
vim <file>
git branch
uniq -c
clear
git checkout <string>
cd <string>
ls ..
ssh <string>
sudo apt-get update
cd ..
ls
sudo reboot now
exit
grep -v <string>
mv <string>
npm start
cd
reboot now
git pull
<directory> -m <file>
cd <string>
git commit -m <string>
grep -Ev <string>
cat <string>
curl -v -H <string> <URL>
rm -rf <string>
touch <file>
clear
sudo apt install <string>
screen -ls
clear
git branch -M <string>
docker-compose up -d --build
jq <string>
git stash pop
clear
vim <file>
ls
ls
ls
type <string>
cat <string>
cp <string>
cd <string>
python3 -m <string> install <string>
vi <file>
pwd
ls
mkdir -p <string>
byobu-tmux
export CFLAGS=<string> -std=<string> -std=<string> <string>
ls
ls
wget -q -O - <URL>
bash <file>
git push
sleep <number>
mkdir <string>
cd <string>
ls -lAF
pwd
perl
vim <file>
ls
sort -h
ping <string>
git push
ls
ls
vim <file>
ls
cat <string>
source <string>
cd <string>
vim <file>
let <string>
apt-get install <string>
more <file>
ls
ls -al
cd <string>
clear
ls
pkill <string>
clear
pwd
cd <string>
grep <string>
sudo iptables -t <string> -A <string> -o <string> -s <directory> -j <string>
git gc
vi <file>
sudo mv <file>
git init
login
curl -o <string>
ls
apt list --installed
vi <file>
ls -lT
ls
ls -la
vi <file>
python3 <file>
cd <directory>
cd <string>
git status
ls
ls -alrt <string>
touch <file>
git config --global <file> <file>
vim <file>
ls
openssl x509 -outform <string>
cd <directory>
rm <string>
git pull
git status
sudo sed -i <directory> <file>
rm -rf <string>
vim <file>
ln -s <string>
grep -E -A <string>
git commit -m <string>
git add <string>
bash <file>
cd <directory>
cd
git pull origin main
cd ..
cd <directory>
grep <string>
git add <string>
cd ..
cd <string>
git co master
cd <directory>
exit <number>
git status
man <string>
vi <file>
sudo ln -s <directory>
ls
unset color_prompt force_color_prompt
cd ..
git push
cd <directory>
source <file>
apt-get install dig -y
cd <directory>
git reset --hard <string>
fg
git status
git config --global
cd ..
python3.11 <file>
ls -la
cd <directory>
cd ..
xargs mkdir -p <string>
git push
git commit -m <string>
clear
su root
grep -r <string>
cd ..
git ls-files
cat <string>
cp <string>
touch <file>
sudo scutil --set <string>
mkdir <string>
git init
sudo apt update\
rmdir <string>
read -p <string>
ls
date
ls
cd <string>
vi <file>
rm -rf <string>
wget -O <file>
git commit
ls
sudo update-alternatives --install <directory>
ls
git add .
rm -f <string>
cat <string>
read -r <string>
vi <file>
git rm --cached <directory> -f
rm <string>
cd <string>
reboot
cd <directory>
ls
sudo netstat -tulpn
chmod +x <string>
cd <string>
cd <string>
code .
htop
cp <string>
cd <string>
cp
git commit -m <string>
cd ..
cd <string>
cd <directory>
ls
fg
code .
git pull
git commit -am <string>
cp -v <string> <directory>
npm init
read -ra <string>
clear
tmux source
exit
mv <string>
vim
sudo swapon <directory>
docker-compose logs --follow <string>
cat <string>
systemctl start <string>
cd <string>
vim <file>
tmux source <file>
tr -dc <string>
git commit
cd <directory>
cd
npm install
git commit -m <string>
rm <string>
git co HEAD .
git status
ls
export <string>
ls
git commit -m <string>
cd ..
git clone <URL>
sed -e <directory> -e <directory>
cd ..
docker push <directory>
ls
git add .
wget <URL>
ls
clear
python3 <file>
ls
python3 -m <string> install --upgrade <string>
sudo ldconfig
git remote -v
git remote set-url <string>
mkdir -p <string>
npm run package
rm <string>
fg
vim <file>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
rsync -arv --exclude=<string> <string>
cut -d - -f1 <file>
exit
git clone <URL>
clear
cd <string>
git status
vim <file>
git commit -m <string>
clear
git push -u <string> master
rm -r <string>
sudo deepstream-app -c <file>
cd
sudo apt-get install <string>
vim
vi <file>
git commit
xhost +
sed <directory>
cd ..
sort -u
ls
git pull
ls
ls -a
sudo fdisk -l
rm <string>
git diff <string>
fg
ls
clear
cd <directory>
vim <file>
time go run <file>
git checkout -b <string>
rm -fr <string>
vim <file>
cd ..
ping -c <string>
cp -r <directory>
vim <file>
sudo sed -i <directory>
ls
ls
ls
cd <string>
cd <string>
cd <string>
ls
tr <string> <string>
ls
exit <number>
ls
grep -o <string>
history
ls
docker ps
ls
chmod u+x <string>
git commit -m <string>
vim <file>
git commit
mkdir <string>
curl -sSLO <file>
git init
ls
ls
cd <string>
git remote add origin <URL>
cd <string>
gpg --search-keys <string>
cd <string>
ls 2001\ -\ <string>
cd ..
vim <file>
clear
cd ..
ls -a
rm <string>
sort -u <string>
cd <string>
fg
cd
ls -la
cd
cut -csh <string>
sudo reboot
grep -Ev -e <string>
curl <URL> -i -F <string> -F <string>
ping <string>
cd <string>
git clone <URL>
awk -f <file>
git add .
xargs ls -hs
cd <string>
cd <string>
cp <string>
cut -d\" -f12 <file>
yarn install
sudo apt install git -y
ls -l
more <file>
sed <directory>
sudo curl <URL>
git history
git clone <URL>
ls
clear
mkdir <string>
xargs -I <string> git -C <string>
clear
ls
vi <file>
sudo tail -f <directory>
sh
sudo apt update
git merge --no-ff --no-commit <string>
curl -sSLf -o <string>
ls
ls
git pull
which <string>
ls -l
ls
cd ..
clear
chmod +x <string>
git add -A
docker rm <string>
clear
cat <string>
cd <string>
grep -e <string> -e <string>
cd ..
ls
nc <string>
python3 <file>
ls
git
kill <number>
man <string>
grep -Ev -e <string> -e <string> -e <string> -e <string> -e <string>
cd <string>
python3 <file>
cd..
vim <file>
ls
git add <string>
cd <string>
ls
exit
sudo powertop -d <number>
cat <string>
clear
cd <string>
exit
cd <string>
git add <string>
curl -vvv --silent --unix-socket <string> -X <string> --data-binary <string> --header <string>
ls
git stash pop
clear
ls
git status
cd <string>
vi <file>
cd <directory>
mkdir -p <string>
git commit -m <string>
exit
exit
exit <number>
rm <string>
npm audit fix
ls
ps -ef
ssh <string>
sh -c <string>
ls
cp <string>
cd ..
git add .
exit
cd <string>
ssh <string>
ls
sudo dmidecode
wget <URL>
cd <string>
rm -r <string>
npm run dev
cd ..
sed <directory>
more <file>
cd <directory>
git config --global <file> <string>
ls -lAF
npm install --save <string> --force
cat <string>
vim <file>
git remote -v
wget <URL> -O <directory>
cd <string>
ls
vi <file>
<directory> <string>
cd <string>
ls
nano <file>
sudo sed -i <directory> <file>
vi <file>
cd <string>
cd
cd <directory>
cd <directory>
ls
cp -r <directory>
mkdir <string>
cd <directory>
reboot
git add <string>
git tag -f <string>
python3 <file>
scp <string>
rm -la
npm test
watch -n <string>
find $CODE -name <file> -print0
cd ..
cd <string>
sudo apt install -y <string>
sudo mysql -u <string> -p
clear
ls
history -r
gsettings set <file> <string>
grep <string>
rm -r <string>
alias <string>
git push
fg
git push -u <string> master
bash
sudo update-alternatives --install <directory>
mv <string>
sudo sed -i <directory> <file>
ls
cd ..
exit
cd ..
read
read -p <string>
cd <directory>
git init
cat <string>
sudo nvidia-xconfig -a --cool-bits=<number> --allow-empty-initial-configuration --enable-all-gpus
touch <string>
git status
ls
cd <string>
vim <file>
head -30
ls
npm run test
cd <string>
grep <string>
ls
ls
sudo firewall-cmd --reload
cd <string>
ls
npm run coverage
git checkout <string>
clear
ls
ls
vim <file>
gzip --version
curl --silent -L <file>
cat <string>
cd ..
mkdir -p <string>
vim
cd <string>
fg
sudo apt-get -y <string> <string>
npm audit fix
ip a
sudo sed -i <directory>
wget -O <file>
sudo adduser <string>
sed -e <string> -e <directory> -e <string> \
ls
cd <string>
ls
clear
exit
git pull
git add.
git push
ls
grep <string>
ls -la
cd <directory>
view <string>
sudo cp -r <string>
ls
git push -u <string> main
clear
ls
systemctl start <string>
fg
ls
ls
exit
ls
git push
exit
ls
type <string>
cd <string>
vim <file>
find . -name <file>
sudo ifconfig en0 ether <string>
cat <string>
else\
git please
cut -d <string> -f <string>
ls -la
cd
exit
cd <directory>
sudo systemctl restart <string>
ls
chmod <number> <string>
cd <string>
git config --global <file> <string>
timedatectl
ls
npm run bench -- -c <file> -n <file>
ls
rm -rf <string>
ls
fg
read -r <string>
source <directory>
clear
sudo vim <directory>
ls
vim
git status
cd ..
git clone <URL>
mv <string>
python3 <file>
git pull origin master
bash
sudo python <file>
exit
touch <string>
cd <string>
exit
cd <string>
git status
git -C <string>
grep <string>
cd <directory>
npm install --save <string>
ls
unzip <file>
ls
sudo reboot
exit
git remote -v
git checkout <string>
sudo apt-cache search <string>
vim <file>
rm <string>
exit <number>
clear
ls -alF
git add <string>
ls
cd <directory>
less <string>
sudo apt upgrade
sudo poweroff
cp <string>
npm i
tail -1)
git config --global <file> <file>
clear
touch <file>
cd <directory>
find <directory> -name <string>
history
curl -sSfL <URL>
sed -i <string>
php --version
ls
git pull
ls -ltr
cd <string>
top
source <file>
ls -alF
fg
bash
cd -
sudo ls <directory>
ls
sudo apt install git curl wget -y
ls
curl <string>
pwd
sudo nvpmodel -m <number>
ls
fg
git checkout <string>
ls
nano <file>
sudo dnf upgrade --refresh -y
sleep <number>
apt search <string>
ls -la
git clone <URL>
sed -i <directory>
git clone <URL>
grep <string>
cd <string>
sudo npm install --save <string> -f
git add <string>
read -r <string>
ls -d <string>
sudo gem install <string>
git clone
cat <string>
git init
vi <file>
nano <string>
npm i <string>
cd <string>
ls
cd <string>
cd <directory>
apt-key add -
grep <string>
git push origin master
cd <string>
git commit -m <string>
touch <string>
sudo rm -r <string>
git pull
npm run devstart
cd <string>
sudo emacs <string>
ls
ls
ls
git pull origin development
ssh <string>
git add -A
sed -i -- <directory>
ls
ps -ef
select(.status.containerStatuses[].name==<string> <string>
clear
sudo apt-get install texlive-science -y
ls
vi <file>
mkdir <string>
docker images
service apache2 restart
ls
git status
mv <string>
sudo cp <string>
cd <string>
git status
code .
git commit -m <string>
git commit --edit -m"$(git <string> --format=<string> --reverse <string>
sed -i <directory>
exit
ls
cd <string>
cd <string>
ls
git log
chmod <number> <string>
mkdir <string>
ssh -p <string> user@host # connects to host on specified port as user
ls
ls
exit
cp -r <directory>
else\
cat <string>
cd <string>
sudo rm -rf <string>
ls
vi <file>
npm install
cd <string>
git add .
exit
rm -r <string>
ls
git rev-parse --git-dir <string>
sudo apt-get -y <string> <string>
vim <file>
systemctl --type=<string>
sed -i <string>
cd <string>
head -y <file>
exit <number>
chmod <string>
git status
sed <directory>
cd <string>
install <string>
ls
dpkg-reconfigure locales
mkdir <string>
git push -u <string> main
ls
cd <string>
git commit -m <string>
ls
cat <string>
vi <file>
ls
find <directory> -type <string> -name <string> -delete
cd -P -- <string>
cd <string>
ls
clear
git remote add origin <URL>
ls
touch <string>
ssh-copy-id
rm <string>
sudo rpm -i <string>
read -r -p <string>
eval <string>
nano <file>
git push origin <string>
git add .
git checkout
git add -U
sudo killall <string>
ls
git adog
ps axfu
git checkout master
exit <number>
code .
ls
clear
vi <file>
git init
sudo rm -rf <directory> <directory>
git merge
ls
clear
exit
grep -c <string>
apt-get install build-essential -y
sudo apt-get -y <string>
find . ! -empty -type <string>
git stash
print <string>
top
cd
cd <string>
ls
rm -rf <string>
sh
ls
curl -s <string>
git push
cd <directory>
cd ..
rm -rf <string>
vi <file>
vim <file>
clear
rm <string>
df
git checkout <string>
unset <string>
fg
grep <string>
clear
ls
history
touch <string>
screen -dr
source <string>
sudo python3 <file>
cd <string>
exit <number>
sudo systemctl restart <string>
ls
git commit -m"update"
grep -v <string>
sudo apt-get remove --purge <string>
cd <directory>
cd ..
jq <string>
vi <file>
cd <string>
docker volume <string>
cp -r <directory>
cd ..
git status
rm -rf <string>
sudo nvim <directory>
sudo firewall-cmd --add-service=<string> --permanent
read -e <string>
cd <string>
ls -la
git status
docker logs <file>
git commit <file> -m <string>
cd ..
tty-clock -c
exit <number>
vim <file>
git status
cd <string>
cp <string>
tmux
git push -u
git clone <URL>
history -d <string>
ls
npm init
cd <string>
git add <string>
sudo mv <string>
ls
clear
ls
cd ..
cp -v <string> <directory>
yarn add <string>
xargs tar -cvzf <file>
cat <string>
git commit -m <string>
mkdir <string>
sudo vi <file>
clear
ls -a
clear
sudo make install
ls
git checkout tags/v6.0.1 -b <string>
vi <file>
ls
cd <string>
clear
ls -alrt <string>
ls
ls
sort
ls
cd <directory>
tmux select-pane -t <string>
ls -la
git checkout <string>
python3 <file>
mkdir <string>
cd <directory>
cd <string>
sudo dpkg -r <string>
cd <string>
clear
git config --global <file> <string>
grep <string>
more <file>
ls
git commit -m <string>
git push
cd ..
apt-get -y -qq <string> <string>
cd <directory>
cp <string>
rm -f <string>
curl <directory> -o <file>
sudo apt update
ls code
sudo wget <URL>
sudo yum <string>
sudo mount <directory>
open <string>
cat <string>
git status
ls
ls -l
git push -u <string> main
git push origin
ls
git add <string>
ps -ef
git add <string>
less <string>
ls -a
cd <directory>
systemctl stop kubelet
cd <directory>
sudo apt update
ls
cd <directory>
ls -al
git commit -m <string>
unzip <file>
sudo apt install <string>
nano <file>
fg
<directory> -m <file>
cd <string>
bash
ls
git push origin master
rm -f <string>
vim <file>
systemctl status <string>
tar -zxvf <file>
git add .
cd
cd <string>
ls
npm init -y
vim <file>
sleep <number>
ls
ls -a
exit
clear
clear
clear
cd <string>
ls
tmux
cat <string>
vim <file>
npm install
grep <string>
npm run devstart
cd <string>
exit
git status
grep <string>
sudo git clone --depth <number>
sudo certbot certonly --nginx
ls
ls
exit
podman <string>
cd <string>
fg
git status
cd <string>
rm -rf <string>
git commit -m <string>
git push
fg
cut -d" <string> -f1,6-\
sudo apt-get -y <string>
cd <string>
ls
cd <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
cd <string>
cd -
git remote add origin <URL>
cd ..
apt-get purge <string>
ls
ls
grep -x <string>
ls -la
git rebase --continue
docker-compose
git diff
git update-index --no-assume-unchanged <string>
cp <string>
vim <file>
vim <file>
kill <number>
git commit -m <string>
sudo localectl --no-convert <string>
sudo apt-get install -y <string>
npm install -g <string>
fg
read -p <string> -r <string>
exit
sudo cp -r <string>
git stash apply <number>
ls
ps auxf
cd <string>
date
cd
git status
git push
cd <string>
ls
df # shows disk usage
git
git commit -m <string>
vi <file>
ls
cd <directory>
vi <file>
vim <file>
cd <directory>
curl --create-dirs -O --output-dir <directory>
git push github --all
fg
git checkout <string>
ssh -x <string>
cat <string>
git clone <URL>
cd <string>
sudo systemctl start <string>
ls
clear
sudo chmod +x <directory>
clear
git status
sudo c_rehash <directory>
git commit -m <string>
npm install
npm start
rm -r <string>
cd
nc <number> <number>
npm i <string>
ls
git push -fu <string>
git push
sudo systemctl restart nginx
clear
ls
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
jq <string>
sudo apt install -y <string>
git diff <string>
find . -name <string> -type <string>
mkdir <string>
cd <directory>
git push
cp <string>
cat <string>
git branch -a
ls
chmod +x <string>
rmdir <string>
fg
ls
ls
tr <string>
mkdir <string>
ls
gpg --keyserver <file> --recv-keys <string>
ls
type
source <string>
rm -rf <string>
ls
cd <string>
git rebase <string>
npm install <string>
ls
python3 <file>
git --version
git clone <URL>
ls
git remote add origin <URL>
nano <file>
mkdir <string>
vi <file>
grep -E <string>
git add <string>
apt install <string>
read -p <string>
exit
sudo dnf install -y <string>
fg
git push origin master
free -h
docker pull <string>
ls
grep -e <string> -e <string>
cd ..
npx <string>
git remote add origin <URL>
xargs -L1 <string>
su root
ls
ls
sudo a2enmod <string>
systemctl stop <string>
git checkout -b <string>
read -rp <string> <string>
vim <file>
npx shadcn-ui@latest add <string>
ls
ls
cd ..
git add <string>
alias <string>
git push
git init
ls
read -p <string>
cp <string>
s/:/ <directory>
clear
git branch -M <string>
exit
cd <directory>
exit
cd <string>
history
tail <file> -n <number>
cd <directory>
read -p <string>
sudo modprobe <string>
git config --global <file>
git reset --hard <string>
cd <string>
ls
ls -la
read -rsp <string>
git branch -M <string>
nano <string>
wget <URL>
git remote add origin <URL>
sudo udevadm control --reload-rules
ls
vi <file>
cp <string>
shutdown
ls
sudo python <file>
xargs -0 <string> <string>
ping <file>
service apache2 reload
cd <string>
ls
sudo vi <directory>
vi <file>
rm <string>
read -r <string>
sudo vi <directory>
ls
cd <directory>
rmdir <string>
top
ls -l
rm -rf <string>
cd
code
vi <file>
cd
cd <string>
sudo apt upgrade -y
ls
cd <string>
ls
dmesg
git status
cd ..
dpkg-shlibdeps: erro: <string>
cd ..
docker run -d -p <string>
cd <string>
ls
python3 <file>
rm -r <string>
cd <string>
mv <string>
ls
cd <directory>
ls
clear
cd <directory>
vim <file>
fg
ls
cd ..
clear
ls
sudo make clean install
dpkg -i <file>
clear
wget <URL>
exit
wget -r <URL>
chmod +x <string>
vim <file>
brew install <string>
sudo apt-get install <string>
vim
sudo systemctl status <string>
cat <string>
vim <file>
cd <directory>
git status
ls
chmod +x <string>
rm -r <string>
git status
source <file>
gunzip <file>
screen -r
clear
telnet <string>
find -maxdepth <number> -type <string>
touch <string>
sudo ln -s <directory>
ls
wget <URL>
git config --system --unset <file>
cd ..
ls -A
cd <string>
ls
ls
sudo apt-get -f <string> -y
cd
git commit -m <string>
mv <string>
cd ..
git add <string>
exit
ls
cd <directory>
ls
git fetch origin
fg
git commit -m <string>
git log
screen -r <string>
ls
mv <string>
cd ..
git add <string>
pacman
sudo apt purge <string>
cd <string>
less <string>
cd <string>
git status
git commit -m <string>
git remote add origin <URL>
man <string>
ls
vim <file>
yarn add <string>
vi <file>
sudo reboot
ls
exit <number>
git commit -m <string>
ls
head -5
cd <string>
sudo ufw status
git clone <URL>
cd <directory>
vi <file>
apt install wget -y
git add .
grep -i <string> >files
cat <string>
cd <string>
cd <directory>
ls
ls
grep -oP <string>
ls -ltr
cd ..
read -p <string>
ls
npm i --save <string>
rm <string>
cut -f <string>
export CFLAGS=<string> -std=<string>
which <string>
vi <file>
clear
docker rm <string>
tmux
sudo apt-get update
vim <file>
git status
sleep <string>
sudo yum <string>
ls
clear
wget <URL>
git checkout <string>
cat <string>
chmod +x <string>
cd <string>
ls
wget -q <URL> -O <file>
git commit -m <string>
python3 <file>
sudo apt-get install <string>
ssh <string>
clear
git config --list
ls
git add .
docker logs <string>
mkdir
cd <directory>
curl
chmod u+x <string>
docker --help
git status
clear
clear
ls
ls
ls
apt-get autoclean -y
do\
cp -r <directory>
python3.11 <file>
tmux
exit <number>
vim <file>
sudo git commit -am <string> --amend
read <string>
vim
find . -type <string> -exec <string> <directory> {} +
grep -rl <string>
ln -s <string>
chmod u+x <string>
cd <directory>
top
fg
cd <string>
time <string>
npm i
ls -alrt
sudo apt-get install libgssapi-krb5-2 --reinstall
sudo zypper se <string>
ps aux
ls
ls
cd <directory>
cd <string>
git push origin master
sudo ifconfig en0 ether <string>
cd <string>
cd <string>
git config --unset <file>
git push
rm -f <string>
code <string>
clear
cd <string>
cd <directory>
time <string>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
node <file> -w <directory>
git push
vim <file>
npm install <string>
sudo docker build -t <string>
cd ..
cd <string>
cd <directory>
export <string>
cd
mkdir <string>
ls
cd <directory>
cat <string>
sudo nano <directory>
exit
cp <string>
sudo updatedb
mkdir <string>
cd <string>
find . -empty -type <string> -print -delete
exit
cat <string>
ls
vi <file>
git push
pwd
wget -q -O - <URL>
mkdir <string>
vim <file>
apt-get install <string>
date
sudo nohup mongod --fork --logpath <directory>
sudo semodule -i <file>
exit <number>
bash
git merge <string>
ls -lt
find . -iname <file>
cd <directory>
sudo setxkbmap -layout <string> -variant <string>
ls
cat <string>
apt install -y <string>
vim <file>
git commit -m <string>
du -sh
chmod <string>
cd ..
wget -q -O <file>
cat <string>
docker build --force-rm=<string> -t <directory>
ls -ls
ls
ls
cd <string>
dpkg -L <string>
kill -9 <number>
git add .
git push origin master
code <string>
ls
ls
git status
cd <string>
git pull
git add .
cd ..
mv <string>
cd <directory>
vim <file>
more <file>
nano <string>
sed <directory>
npm run start
git stash
top
cd <string>
top
cd <directory>
git status
rmdir <string>
sudo -i
sudo yum update -y
exit
ls
sudo sed -i <directory> <file>
ln -s <string>
touch <file>
ls
ls
vim <file>
git add <string>
ip
sed <directory>
read -s -n <number>
dpkg-shlibdeps: <string>
rm <string>
git push
tail -f <string>
git commit -m <string>
python3 <file>
npm test
ls
df -t
ls
cd ..
npm list -g
ls
cd <string>
then\
ls
mkdir <string>
cd
cat <string>
grep <string>
vim <file>
cd <directory>
sudo docker kill corrade
git branch
ls
chmod <string>
sudo apt-key adv --keyserver <string> --recv <string>
find . type -f
rsync <directory>
docker-compose up -d --build
go test
cat <string>
vim <file>
git rm --cached <string>
git status
cp <string>
cd <directory>
ls
cd ..
sudo nano <directory>
npm install <string>
git add
sudo systemctl stop <string>
apt-get install <string>
cat <string>
vim -O <file>
ls
vim <file>
git push origin <string>
cd <directory>
clear
cd
git remote add origin <URL>
rm <string>
code .
ls
git push -u <string> master
ls
ping <string>
git remote remove origin
sudo apt-get install -y <string>
sudo apt-get install <string>
python3 <file>
ls
clear
rm <string>
cd <string>
cd <directory>
cp <string>
cd <string>
vim <file>
git log
clear
sudo apt-get install <string>
ls
docker logs <string>
git push -u <string> master
ls
rm -r <string>
ls
kubectl get <string>
sudo service nginx restart
cd <string>
cd ..
ls
sudo chmod +x <string>
rm <string>
ls
ls
ls
ls
ps ux
source <directory>
python3 <file>
cd <string>
git log -p <string>
find . -name <file>
ls -las
fg
ls
xargs -0 <string>
ls
cat <string>
cp <string>
ls
cat <string>
grep -i <string> >files
sudo sed -i <directory> <file>
head -n5 <string>
grep <string>
done
export -f <string>
vi <file>
cd ..
docker stop boost
exit
cd <directory>
ls
vim <file>
ls
find . -iname <string>
mkdir <string>
mv <string>
rm <string>
git add <string>
sudo apt-get install <string>
cd
jq <string>
cd <directory>
ls
sudo emacs <string>
clear
npm run dev
ls
ls
vim <file>
cp -r <directory>
ls
printf <string>
exit
sudo apt-get install -y <string>
sudo deluser <string>
git status
ls
fg
ls
pwd
python3 <file>
git push
sudo yum install -y <string>
ls
git rm --cached <string>
rm -r <string>
exit <number>
vi <file>
vim <file>
rm -rf <string>
tail
vim <file>
clear
vim <file>
udevadm info <directory>
cd
docker ps
rm <string>
fg
npm run build
chmod <number> <string>
less <string>
grep <string>
mkdir <string>
du -h
git commit -m <string>
clear
ls
ls
git pull
rm -r <string>
ls -lah
cd <string>
git clone <URL>
git add <string>
git push
cd <directory>
git push origin <string>
pwd
cd ..
git pull
head -1
scp <string>
apt-get update -y
ls
cd <string>
python3 <file>
sed -i <string>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
cp -r <directory>
ls -la
fg
wget -O <file>
ln -sv <string>
ls
rm -rv <string>
git commit -m"html"
cd ..
chmod <number> <string>
ls
ls
sudo apt install <string>
sudo lsof -i:80
exit
grep -inr <string>
ls
bash <file>
chsh <string>
cd <directory>
touch <string>
sudo apt-get install <string>
ls
ls
sudo apt-get update
alias
npm start
git reset HEAD -- <string>
find . -type <string> -empty
sudo curl -O <URL>
ls -la
sudo systemctl restart <string>
ls
git add .
mount -B <directory>
git push -u <string> master
ls
ls
cd <directory>
vi <file>
mkdir <string>
sudo sed -i <directory> <file>
git init
mkdir <string>
cd <string>
sudo apt install -y <string>
rm -r <string>
git commit -m <string>
cd <directory>
wget -q -U <string>
node <file>
grep -win -B <number> -A <number>
git pull
ls -la
git status
rm -rf <string>
git push
rm <string>
git fetch upstream
vim <file>
g++ -std=<string> <file> -o <string>
rm -r <string>
ls
git add -A
rm <string>
ls
touch <string>
cd
cd -
ls
npm install
sudo nano <directory>
docker-compose logs
git push origin master
sudo lvremove <directory>
grep <string>
mkdir <string>
ls
sudo nano <string>
cd ..
less <string>
wget -q --show-progress -N <URL> -P <directory>
npm http GET <URL>
update-alternatives --list
git push
bash
vim <file>
clear
sudo apt-get update
ls
npm create vite@latest
sed -n <string>
done
read -r <string>
sed <directory>
sudo sh <(curl -sSf <URL>
grep <string>
ls
env
clear
wget <URL> -O <directory>
cd <directory>
read <string>
git diff <string>
vim <file>
exit <number>
history -a
ls
cp <string>
sudo usermod -G <string>
git commit --amend --reset-author
git add --all
git add .
cd ..
tar -xf <string>
vim <file>
cd <directory>
cat <string>
cd <string>
ls
ls
ls
cat <string>
git push
vi <file>
git branch
cd <string>
exit
ls -l
find . -type <string>
git checkout -b <string>
git co HEAD .
exit
git init
awk <string>
git pull origin development
docker build -t <string>
find . -type <string>
git init .
sudo sed -i <directory> <file>
ls
cd <string>
ls
which <string>
nano <string>
sudo mysql -u <string> -p --socket=<directory> <string>
history
git config --global <file> <string>
exit
curl <string>
ls
git status
rm -f <string>
vim <file>
git pull
rm -fr <string>
pacman --noconfirm -S <string> <string>
sudo nano <directory>
ls
cat <string>
tar -tf <string>
cd <directory>
vim <file>
ls
sudo sed -i <directory>
clear
git commit -m <string>
sed <directory> -i <string>
exit <number>
grep -Ev <string>
sudo nala dpkg -i <file>
ls
cd
cd <directory>
history -cr <string>
git push origin master
sudo docker kill corrade
rm -r <string>
git commit -m <string>
sudo mkdir <directory>
exit <number>
then cd <string>
docker ps
ls
cd ..
scp <string>
ls
git log
pkill picom
vim <file>
cat <string>
git add .
sudo apt upgrade
git push -u <string> master
cd <string>
ls
exit <number>
vi <file>
sudo snap install heroku --classic
ls -la
ls
exit <number>
git describe --tags <string>
cat <string>
git diff
cd <directory>
unset <string>
ls
rm <string>
touch <file>
bash
ls
clear
sudo flatpak update
ls
npm link
sudo apt update
vim <file>
clear
exit <number>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
cd <directory>
curl -LO <string>
exit <number>
npm i --save <string>
cat <string>
mkdir <string>
git status
fg
ls -alt
cd ..
ls
ls
code
ls
git commit -a
fg
cd <directory>
cd <directory>
cut -d <directory> -f <number>
ls
git push -u <string> master
vi <file>
sed -n <string>
mkdir <string>
cd <string>
git add <string>
exit
head
ls
ls
rm <string>
cd <string>
git log --oneline
cd <directory>
kubectl get <string>
cd ..
clear
npx tailwindcss -i <file> -o <file> --watch
tar -xvf <file>
cd <directory>
sudo apt update
cd <string>
chmod +x <string>
clear
git commit -m <string>
sudo wget <URL> -O <directory>
ls
ls
cd
tr -d <string>
ssh-keygen
ls
cd <string>
then
clear
cd <string>
cd <string>
wc -l
du
cd <directory>
rm <string>
sudo apt-get -y <string>
sudo apt-get dist-upgrade
git commit -m <string>
ls
git add .
git push
cd <directory>
wget -O <file>
man <string>
clear
pwd
cat <string>
git commit
rm <string>
cd <directory>
git clone <URL>
cp -r <directory>
git add .
cd <string>
git commit -m <string>
cd <string>
source <directory>
chmod +x <string>
cd <string>
grep -E <string>
screen -r
cd <directory>
ls
git config --global <file>
pwd
ls
mkdir <string>
ls
cd <string>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
git add <string>
ls
sudo firewall-cmd --new-zone=<string> --permanent
nc <string>
sudo tee <directory>
ls
ls
LANG=<string> rpm -qp --queryformat <string>
git add -6
sudo -s -u <string> -H
wget -O <file>
cd
wget <URL>
docker ps --format <string>
ls
vim
vim <file>
php -r <string>
kill -9 <number>
ip
cd <string>
git remote add origin <URL>
ls
cd <string>
mv <string>
git rm --cached <string>
git commit -m <string>
cd <string>
rm -R <string>
vi <file>
cd <directory>
export
sudo ln -s <directory>
git rebase <directory>
cd <string>
npm start -- --resetCache --active-arch-only
cd <string>
cp -r <directory>
git branch -m <string>
git push
code .
git clone <URL>
vi <file>
unzip <file>
ls -1
ls
ls -la <directory>
cd <string>
ls
rmdir <string>
export <string>
vim
ssh-add <directory>
ls
cd <string>
git checkout <string>
cat <string>
ls
ls
cd <string>
cd ..
git commit -m <string>
git commit -am <string>
ls -l
sudo chown -R <string>
rmdir <string>
ls
cd <string>
vim <file>
npm run test
chmod +x <string>
python3 <file>
ls
ssh <string>
vi <file>
exit
ls
git commit -am <string>
sudo apt update\
cd <string>
git push -u <string> master
exit
more <file>
mkdir <string>
cd <string>
sudo sed -i <directory>
sudo systemctl start <string>
cd <directory>
cd <string>
cd ..
sh
mv <string>
cp -r <directory>
zeus.polsl.gliwice.pl - <number>
ls
git log
cd <string>
sudo sed -i <directory> <file>
cd
apt-get install iptables --fix-missing -y
ls
rm -r
swapoff <directory>
cd <string>
git commit -m"~"
wget -r <URL>
sleep <number>
df
git stash
git add <string>
ls
docker-compose logs
npm i
ls
which <string>
ls
git commit -m <string>
git push
ls
rm -rf <string>
source <directory>
sudo reboot
vi <file>
git add
git hash-object -w <file>
ls
git commit -m <string>
sudo cp -R <directory>
git remote add origin <URL>
sed -i <directory>
git --version
wget <URL>
ls
git stash clear
vi
ps
npm list <string>
ls
cat
code
git
mv <string>
tail -f <string>
journalctl
mv <string>
script/build.sh
npm init -y
vi <file>
ls
git push
cd ..
cd <string>
ls
ls
vim <file>
git commit -m <string>
sudo zypper install <string>
cd <string>
mkdir -p <string>
cd ..
cd <string>
more
git add .
ssh-add <directory>
cd <string>
sudo curl -L <directory> -o <directory>
ls -R <string>
git gc --aggressive
cd <string>
ls
git switch <string>
git add .
cd
ls
git remote add origin <URL>
read -rp <string> <string>
ls
git reset --hard
ls
xargs kill
cd <directory>
ls -alrt <string>
sudo sed -i <directory> <file>
sudo npm i prettier -g
git rebase <directory>
vim <file>
sudo apt-get install <string>
ls -a
ls -alrt
ls -la
ls
cd <string>
git commit -m <string>
bash <file>
ls
cd <string>
sudo apt-get install <string>
sudo mv <string>
let <string>
read <string>
npm audit fix
ls
cat <string>
sudo apt-get -y <string>
ls
ls
git push -u <string> master
ls
vi <file>
sudo cp -rf <string>
ssh <string>
cd ..
ls
exit <number>
docker stop <string>
exit <number>
mv <string>
vi <file>
cd <directory>
sudo apt-get install --yes <string>
nano <file>
rm <string>
touch <string>
sudo apt-key add -
export <string>
cd <directory>
cd <string>
git remote add origin <URL>
sudo tar -zxvf <file>
git diff -G'(^[^\*# <string>
npm install <string>
clear
sort -nr
vim <file>
cd <directory>
ls
ls -ltr
tar xz
rm <string>
ls -la
then\
ls
sudo systemctl enable <string>
vi <file>
lsof -i <string>
ls -latr <directory>
ls
git add --all
exit
ls -al
sudo apt-get upgrade
sudo rm -rf <directory> <directory>
cd ..
cat <string>
git push
git config --add <file>
ls
sudo sed -i <directory> <file>
cd <directory>
find . -type <string> -print0
sed -i <directory>
git checkout master
ls
sudo poweroff
sudo vim <directory>
npm install
git commit -m <string>
git push
cat <string>
export <string>
cd <string>
history -d <string>
then\
git branch -d <string>
groups <string>
sed -i <directory>
ls
ln -s <string>
git commit
cd..
docker exec -it <string> bash
sudo update-alternatives --set <string>
fg
sudo apt-get update
mkdir <string>
git commit -m <string>
ls
cd <string>
sort -nr
ls
rm <string>
ls
yarn install
vi <file>
less <string>
cd
head
git status
npm i -g <string>
ls
exit
cd <string>
more <file>
read -p <string>
ps -ae
clear
cd ..
sed -i -e <string>
cd <string>
git commit
ssh <string>
clear
chmod -x <file>
ls
cd <string>
ssh dirlic@10.18.0.39 -p <number>
ls
sudo apt-get purge npm --auto-remove
docker logs <file>
ls
wc -l
ls
git add .
fg
chmod u+x <string>
ls
ls
rm -r <string>
ls
ls
then\
ls
sudo curl <URL> -o <directory>
cd <string>
ls
clear
ls
cd <string>
git commit -m <string>
read -r -p <string>
cd <string>
ls -ltr
sudo mkdir <directory>
git branch -M <string>
rm -f <string>
cd <string>
git status
git status
cd
sudo npm audit fix --force
sudo usermod -aG <string>
curl -sL <URL>
cd ..
ls
sed -ri <string>
snap info <string>
sudo dpkg -i <file>
ls
less <string>
git merge develop
ls
rm -r <string>
pwd
sudo find <directory> -name <string>
python3 <file>
ls
head -1 <file>
cat <string>
ls
pwd
ls
ls
rm -rf <string>
docker build -t <string>
cd <directory>
vim <file>
git stash
exit
git status
ls
ls
mkdir <string>
sudo setfacl -m <string>
sudo dpkg --configure -a
git pull
ls
print <string>
ls
open <string>
cd <directory>
sh <file>
ls
docker-compose build teh-germinator
nano <file>
source <file>
sudo apt install <string>
ls
sed -E -e <directory>
vi <file>
ls
git push --set-upstream <string> <string>
sudo systemctl enable <string>
git add <string>
cd <string>
cd
cat <string>
cat <string>
sed -i <string>
git commit -m <string>
ls
cd <string>
cd <string>
curl --silent <string>
git rm -f <string>
reboot
sudo ufw allow <string>
git branch
vim <file>
cd <directory>
sudo find <directory> -name <string>
vi <file>
git add <string>
clear
cp <string>
ls
exit -1
curl -G <directory>
nano
npm i -D <string>
cd ..
git clone <URL>
cd <string>
grep <string>
git reset <string>
ls -la
vim <file>
git commit -m <string>
npm install -g <string>
exit
gsettings set <file> <string>
cd <string>
ls
sudo apt-get upgrade -y
grep <string>
npm i <string>
git add .
cd ..
mv <string>
less <string>
gpg --import <string>
npm install -g <string>
nano <file>
git push
ls
git commit
git init
yarn add <string>
unzip <file>
cd <directory>
done
cd <string>
git push -u <string> master
sudo apt update
git add <string>
sudo apt install <string>
sort -n -r
cd <string>
more <file>
git gc --aggressive --prune
sudo rm -rf <directory> <directory>
cd <string>
vi <file>
git add <string>
systemctl --user <string>
docker
git add .
make install
git commit -am <string>
fg
ls
npm update -g <string>
git push
git clone --depth <number> <URL>
npm install <string>
mkdir <string>
clear
git status
ls
python3.11 <file>
cd <string>
ls
pacman -S <string>
ls
chmod <number> <string>
sudo chown --reference=<directory> <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
mvn compile
systemctl start <string>
sed <directory>
ls -l
vim <file>
sudo su
sed -i <string>
sed -r <directory>
git diff <string>
clear
ls
cd <string>
sudo chmod <number> <directory>
apt install -y <string>
export <string>
git status
git push origin master
git checkout -b <string>
docker image <string>
curl -s <string>
git clone <URL>
pwd
git add <string>
grep <string>
grep -iE <string>
docker exec -it <string>
htop
cd <string>
ls
ls
sudo find <directory> -name <string>
cat <string>
ls
grep <string>
cd <string>
cd <string>
cd <directory>
history
git add .
ls
ssh-add <directory>
rake <string>
sudo python3 <file>
ls
cd ..
ls
sudo systemctl restart nginx
ls -la <directory>
git pull origin main
ls
curl <string>
g++ -std=<string> <file> -o <string>
git add <string>
cd <string>
vim
ls
sudo apt-get install <string>
mv <string>
sudo pacman -Q
rmdir <string>
ls
git push -u <string> master
local <string>
ls -le
cd <string>
docker exec -it <string> bash
tar zxvf <file>
git checkout <string>
cd ..
ls
sudo python <file>
vim <file>
sudo apt-get install -y <string>
vim <file>
git status
ls
ls
cd <string>
sudo docker images
sudo service nginx reload
ls
ls
ssh <string>
clear
pwd
clear
vim <file>
rm -r <string>
cd <string>
ls
sudo dnf repolist -v
find . -iname <string>
cd ..
cd <string>
vi <file>
git log
ls
read -r <string>
ls -al
clear
sudo locale-gen <string>
git clone <URL>
stat <file>
xargs grep -sn --color -E <string>
git add <string>
exit
cat <string>
git pull
sudo mkswap <directory>
git add .
vim <file>
ls
tail -f <directory>
ls -s <string>
ls
cd <string>
npm run test
sudo apt install <string>
ls
cd ..
grep <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string>
git pull --no-edit
xargs -L1 <string>
export <string>
grep <string>
sudo dpkg --purge --force-all <string>
exit
ls
ls
git commit -m <string>
go
ls -l
find . -empty -type <string> -print -delete
vi <file>
sudo apt install <string>
npm start
git commit -m <string>
sudo vi <directory>
cd <string>
sudo apt update
ls -ltr
cat <string>
vim <file>
mkdir <string>
clear
cd <string>
vi <file>
cd
sudo apt-get install <string>
fg
dpkg -l
git add .
exit
sudo python3 <file>
stat <file>
git add .
git push
cd -
cd <string>
rm -fr <string>
python3 <file>
docker image ls
sudo ufw status
fg
vi <file>
git pull
cd ..
cd <directory>
cd ..
mv <string>
touch <file>
bash <file>
cd <directory>
yarn <string>
git checkout <string>
git add .
git push
curl -H <string>
ls
cd <directory>
clear
ls
uname
git clone <URL>
sudo mysql --defaults-extra-file=<directory>
cd <string>
git remote set-url origin <string>
sudo pacman -S <string>
sudo apt install <string>
git rev-parse --verify <directory>
cd ..
cd <directory>
cat <string>
ls
ls
fg
sudo sysctl <string>
cd <string>
npm run dev
tail -f -n <number>
cd <directory>
git fetch
kill -9 <number>
ls
systemctl start <string>
ls
cd <string>
git init
ls
exit
clear
exit
vim <file>
touch <file>
open <string>
grep -v <string>
rm -f <string>
git commit -m <string>
rm -rf <string>
git init
cd <directory>
cd <string>
sudo ufw enable
cd <string>
cd <string>
vi <file>
cd <string>
rm <string>
git commit
print <string>
cd <string>
sudo docker build -t <string>
git init
git remote add origin <URL>
find <directory> -name <string>
docker images
cd ..
fg
cd ..
sudo node <file>
sudo sed -i <directory> <file>
exit
sudo make
unset <string>
ls
cd <string>
wc -l
history
git init
git push
ssh-add <directory>
npm i <string>
ls
sudo apt autoremove
time <string>
cd <string>
npm config set prefix <string>
sudo sed -i <directory> <file>
git init
tmux ls
sudo useradd <string>
cd <directory>
cd <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
ls
ls -lAF
ls
ls -al
ls
sudo chown -R <string>
docker-compose up -d --build
vi <file>
read -r -p <string>
ls
cd <directory>
mkdir -p <string>
ls
ls -l
cd <string>
rm <string>
vim <file>
chmod <string>
cd <string>
cd <directory>
ls
ls
cd <directory>
git add <string>
find . -empty -type <string> -print -delete
cd <directory>
cd <string>
su
exit
cd
more
git add <string>
npm i <string>
docker exec -it <string>
cd <string>
vim <file>
ls
git init
exit
cd ..
cd ..
curl <string>
git config --global <file> <string>
ls
vim <file>
git add .
rm -rf <string>
pkill <string>
git commit -m <string>
vi <file>
sed -i <directory>
vim <file>
ls -l
cd ..
clear
clear
ls -la
cd <string>
ls
grep -rl <string>
wget <URL>
sudo snap remove <string>
git push
chmod +x <string>
bash <file>
ps
read -d <string> <string>
git commit -m <string>
ls
exit
fg
cd <directory>
git status
apt upgrade
grep <string>
sudo zypper install <string>
ls
vi <file>
ls -la
tmux kill-server
git init
grep -v <string>
cd <string>
cd <string>
git branch -M <string>
tail -f <directory>
exit <number>
find . -name <directory> -type <string> -prune -exec <string> -rf <string>
cd <string>
ls
cd <string>
find <directory> -type <string> -exec <string> -H <string>
clear
grep -r <string>
vim <file>
ufw --help
du
ls -al
read <string>
cd ..
top
git config --global <file> <string>
clear
yarn add <string>
mkdir <string>
git diff <string>
vim <file>
sudo apt-get update
git push --set-upstream <string> main
git init
ls -la
grep <string>
exit <number>
cd <string>
cat <string>
head -n <string>
python3 <file>
ls -al
clear
ls -altr
git checkout master
rmdir -r <string>
grep -r <directory> -e <string>
ls
ls -ald <string>
htop
docker rm <string>
sudo pacman -Qdt <string>
git status
exit <number>
time <string>
git commit -m <string>
git diff <string>
ls
git status
rm -f <string>
ls
npm install npm-run-all --save-dev
ls
<directory> <string>
vim <file>
git add .
exit
npm install
ls
fg
cd <string>
sudo -s -u <string> -H
tail +n # Print nth line from file.
npm -v
sudo sed -i <directory>
ls
cd <string>
ls
ls -la
print <string>
vim <file>
ls
sleep <number>
ls
wget <URL> -O <file>
cd ..
sudo sed -i <directory> <file>
vim <file>
tar xvzf <file>
sudo apt-get update
ls
docker exec -it <string> bash
ls
grep <string>
ls
sudo cd <directory>
sudo apt update
chmod <string>
apt-get -y -qq <string> <string>
git commit -m <string>
rm -f <string>
ls -la
git status
ls
ls
ls
sudo gem install <string>
ls -al
vim
rm <string>
git commit -m <string>
git commit -m <string>
wget -q -O - <URL>
ls
mv <string>
diff <file> <file>
rm <string>
cd <string>
ls
systemctl --type=<string> --state=<string> --all
cd <string>
ls
tmux kill-server
set
sudo <directory> <string>
cd <string>
cd..
ls
cd <string>
cd <directory>
cd <directory>
kill -9 <number>
chmod +x <string>
cd ..
source <directory>
su - <string>
git add .
sudo mkdir -p <directory>
clear
git pull
git push -u <string> bryan-guner
git add <string>
ls
tail -f <string>
local <string>
vi <file>
git push origin master
git add -p
ls
cd <string>
cd <directory>
git add <string>
vi <file>
exit <number>
ls
ls -al
sudo nmcli <string>
sudo dnf install <string>
cd <directory>
git push
ls
history
tail -f <directory>
git commit -m <string>
cp <string>
git commit -m <string>
curl -SL <URL> -o <directory>
cd <string>
git status
vi <file>
htop
ls <directory> -ldL
exit <number>
ls
git add .
less <string>
top
clear
git push
git checkout <string>
cat <string>
git stash
ls
ls
ls
pwd
mkdir <string>
ls
ls
clear
cd <string>
ls
printf <string>
curl -T <directory> <string>
git push origin <string>
cd ..
ls
grep <string>
ls
ls
cd <string>
python3.11 <file>
sudo reboot now
alias
git add <string>
clear
sudo nano <string>
ls
cat <string>
git clone <URL>
env
cd
ls
git pull origin master
cd <string>
python3 <file> --help
clear
sudo nginx -t
grep <string>
bash
cd <directory>
mkdir <string>
fg
git push
exit <number>
ls
ls
mv
pwd
git commit -am <string>
sudo chmod <number> <directory>
git merge --abort
git status
git fetch
ls
rm -rf <string>
tail <file> -n <number>
cd <string>
ls
clear
clear
exit <number>
cd
ls
ls
sudo git push <string>
git add .
ssh <string>
sudo make install
exit
cd
git status
cd <string>
ps auxww
git add <string>
cd <string>
cd ..
vi <file>
sudo reboot
exit
ls
sudo chmod +x <string>
python3 <file>
git add <string>
exit
git config --global <file> <string>
git add <string>
git init
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
cd
ls
sudo sed -i <directory>
vi <file>
ls
sudo vi <directory>
git commit -m <string>
git branch -v
sudo rm -rf <string>
rm -rf <string>
exit
sudo apt-get update
find . -type <string> -mtime -1 <string>
git log --oneline --all
git status
ls -l
ls
cd <string>
sleep <number>
git clone <URL>
cd <directory>
sudo apt-get install <string>
wget -O <file>
vi <file>
git commit -m <string>
apt-get upgrade
grep -in <string>
chmod +x <string>
git pull
cp -r <directory>
ps -aux
history
cd
npm run test
clear
cat -n <string>
sudo gem install <string>
rm -rf <string>
git init
git add .
vim
rm -rf <string>
clear
sudo xbps-install <string>
sudo python <file>
ls
git add <string>
cd <string>
emacsclient -n <string>
wget -q -O <file>
ls
ssh-keygen
ls
cat <string>
wget -q -O <file>
git add -A
vim <file>
clear
mv <string>
cd ..
rm <string>
python3
sudo <directory> -s <file>
ls
ls
ls
apt-get update
sudo hostnamectl set-hostname <string>
cat <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
git commit -m <string>
rm <string>
ls
git clone <URL>
git clone <URL>
vim <file>
cd <string>
ls -l
du -sh <directory>
tail -f <string>
ls
clear
read -p <string>
sudo systemctl status prometheus
exit <number>
ls
grep -qi -e <string>
fg
rm -f <string>
cat <string>
scp -r <string>
grep <string>
ls
date
python3 <file>
cd <directory>
cd <directory>
git init
exit <number>
sudo sed -i <directory>
npm run coverage
less <string>
git commit
git commit -m <string>
ls
clear
mkdir <string>
chmod +x <string>
git status
cd <directory>
ls
ssh -i <string> remote_user@remote_host
cd <string>
sudo apt-get install -y <string>
mkdir <string>
cd <string>
cd <string>
curl -fsSL <URL>
grep <string>
git add <string>
localectl <string>
git filter-branch --index-filter <string> --tag-name-filter <string> -- --all
sudo sed <directory> <string>
sudo zip -r <file>
exit
cp <string>
git status
diff <file>
ls
less <string>
cd <string>
sudo ufw allow <string>
sudo apt update
ls
cd
git remote add origin <URL>
docker ps
sudo groupadd docker
clear
vi <file>
cd <string>
top
sudo ftp 198.19.255.136
fg
vim <file>
git commit -m <string>
npm i <string>
ps -a <string> selects all processes with a tty except session leaders
fg
cp -v <string> <directory>
find <directory> -type <string> -print0
xclip
nl
git push heroku master
cat <string>
sudo journalctl -u <directory> --config.file=<directory>
grep <string>
ls
git commit
sudo du -a <directory>
cd ..
ps axfu
more <file>
ls
docker logs <file>
apt-get install <string>
git rm <string>
ls
ls
npm start
fg
sudo service <string>
git status
export <string>
git co master <file>
ls
sudo rm -rf <directory> <directory>
vim <file>
mkdir <string>
git config --global <file> <string>
source <directory>
cat <string>
read <string>
git status
git add .
sudo add-apt-repository --remove <directory>
ls
cd <string>
done
cd <directory>
cd ..
clear
wget -O- <URL>
cd <directory>
ls
vi <file>
curl <string>
clear
cd <string>
git branch -M <string>
ls
fg
clear
ls
cd <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a
ls
sh -c <string>
git status
cd <string>
sudo halt
npm start
sudo systemctl status <string>
ls
du -skh <string>
exit
git push origin <string>
ls
ls
git commit -m <string>
git fetch origin\
exit <number>
tail -1)
fg
sudo python <file>
git status
git init
ls
ls
curl <string>
vim <file>
curl <string>
git add .
nano <file>
cd <string>
nano <file>
ls -l
fg
ls
ls
ls
clear
sudo apt upgrade
wget -r <URL>
ls
tmux send-keys -t <string>
zeus.polsl.gliwice.pl - <number>
sudo usermod -aG <string>
ls
sudo restart <string>
grep <string>
sed -i <string>
git commit -m <string>
rm <string>
set <string>
ls
tmux select-window -t <string>
ls
cd ..
sudo python3 <file>
cd ..
fg
ls
ls -ltr
sudo sed -i <directory> <file>
chmod +x <string>
ls
read -p <string>
cut -f2
ls
exit
find . -maxdepth <number> -regextype <string> -regex <string> -type <string>
zgrep -i -E -o --no-filename <string>
cd <string>
man <string>
npm i -g <string>
python3 <file> --epochs <number>
wget -O- <URL>
ls
ls
lsof -h
cd <string>
cd <string>
vim <file>
time <string>
grep -Eivf <string>
git commit -m <string>
ls
exit
find . -type <string> -path <string>
curl -L <URL>
git config --global <file>
wget <URL> -O -
find . -type <string>
clear
cd <string>
chmod -x <file>
unset <string>
git add <string>
python3 <file>
vi <file>
ls -l
then
cat <string>
vi <file>
sed -E -e <directory>
cd ..
pkill <string>
ls
cd ..
man <string>
sudo ufw status
python3 <file>
cd <string>
cp -r <directory>
git status
git commit
cd ..
more <file>
ls
cd <directory>
ls -a
sed <directory>
touch <string>
cd
vim <file>
ls
ls
git add .
sed -n <string>
ls
ls
tail -f <directory>
nano <string>
cat <string>
iptables -A <string> -p <string> -s <string>
cd ..
python3
sed -i <directory>
grep -i <string> >files
ls
cd ..
sudo yum install git -y
cd <string>
curl -X <string> -d <string> OR SELECT <string>
cd <string>
cat <string>
diff <file>
git remote add origin <URL>
tar -h
ls
sudo apt install <string>
cat <string>
sudo ufw <string>
done\
cd
curl -i <string>
git add .
ls -la
exit <number>
fdisk <directory>
sudo apt update
cd
ping <file>
cd <string>
telnet <string>
sudo reboot
ls
clear
cd <string>
git rm --cached <string>
sudo chown -R <string>
rmdir <string>
git pull
cd <directory>
clear
clear
ls
clear
ls
ln -s <string>
cd <string>
sleep <number>
tail -f <directory>
git remote add origin <URL>
sudo systemctl status <string>
clear
uniq -c
git commit -m <string>
sleep <number>
wget <URL> --no-check-certificate
clear
ls
sudo xbps-remove <string>
apt install -y <string>
git remote add origin <URL>
cd <string>
cd <string>
git co -t -b <string> logs --follow <string>
cd <string>
find . -name <file> -type <string> -print -delete
cd <string>
ls
vim <file>
cd <string>
ls
cd <string>
sudo apt-get
ls
vi <file>
history
fg
cd <directory>
clear
fg
git tag -d <string>
pwd
sudo curl <URL>
mkdir <string>
cd ..
ls
exit <number>
cd <string>
sudo dpkg -i <file>
touch <string>
chown -R <string>
git push origin main
git init
docker network <string>
cd <string>
mv <string>
source <string>
rm <string>
cd <string>
git commit -m <string>
wget -q -O <file>
git add <string>
ls
vim <file>
cd ..
ls
code .
chmod -x <file>
clear
cd <string>
head <filename> # outputs the first lines of file (default: <number> lines)
vim <file>
sudo pacman -S <string>
clear
tail -f <string>
cat <string>
git status
rm -r <string>
sudo xbps-install <string>
rm -r <string>
tail -f <string>
man <string>
git add .
ls
vi <file>
read -rp <string> <string>
git push
npm http <number> <URL>
ps -Af
sudo make
sudo chmod -R <string>
cd
kubectl <string>
sudo apt-get install -y <string>
rm <string>
fg
wc -l
git status
python3 -m <string> install <string>
exit <number>
ls
rm <string>
cd <string>
cd <directory>
python3 <file>
ls -la
curl <string>
rm Downloads -rf
git push origin master
tail -20
git
git push -u <string> master
git add <string>
ssh <string>
git status
vim
setg RHOSTS.*
ls -l
vim <file>
python <file> runserver 0.0.0.0:2016
ls
npm run dev
ls
git clone <URL>
sudo apt install gufw -y
ls -l
read -r -t <string>
fg
cd ..
ls
ls
rm -r <string>
git commit
git add <string>
sudo apt install <string>
git remote
git checkout <string>
cd <string>
grep <string>
ls
clear
vim <file>
fg
cd <directory>
unzip -o <directory> -d <directory>
git push
dpkg -L <string>
rm <string>
pwd
clear
cd ..
kill -9 <number>
sudo mv <string>
exit
eval <string>
cp -av <directory>
git add .
ls
ls
vi <file>
exit
vi <file>
ls -la <directory>
grep -v <string>
ls
git commit -m <string>
python3
ls
pwd
history
exit
npm install <string>
sudo vi <file>
vim <file>
pwd
cd <string>
npm install -f
cp <string>
cd <string>
vim <file>
ls
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
sudo pip install <string>
exit <number>
sudo python <file> -cascade==<file> <number>
tail -f <string>
ls
ls
rm -rf <string>
git co PTS-578_redirects_not_updating_automatically
docker-compose
vi <file>
sed -i <directory>
git show <string>
ls
git init
fg
rm -r <string>
npm i -D <string>
rm <string>
git pull origin master
clear
cd <string>
git clone <URL>
fg
npm run dev
sudo firewall-cmd --reload
ls
cd ..
cd <directory>
ls
git commit -am <string>
cd <directory>
git status
clear
ls
exit
cd ..
cd ..
sudo rm -rf <directory> <directory>
ls
rm -r <string>
cd <string>
ls
git rebase -i <string>
ls
git add .
npm install --save <string>
rm <string>
git remote add origin <URL>
cd
cp <string>
exit
cd -
git commit -m <string>
git push
docker rm <string>
sudo zypper <string>
find . -name <file> -exec <string> -c <string>
fg
grep -e <string>
ls
git add .
ls
git add -A
ls
cd ..
ls
ls
ln -s <string>
git remote add origin <URL>
unzip <file> -d <string>
ls
sed -e <directory> -e <directory>
sed -i <directory>
ssh <string>
rm <string>
ls
exit <number>
vim <file>
cd <string>
clear
git clone <URL>
ls
git push
npm install -g <string>
ssh-keygen -t <string> -b <number> -N <string> -C <file> -f <string>
cd <string>
ssh dirlic@10.18.0.39 -p <number>
cd
clear
ls
cd <string>
ls
vi <file>
ls wc -l
ls -l
find . -name <file> -type <string> -exec <string> -rf <string>
sudo sed -i <directory> <file>
print <string>
vi <file>
cd <string>
cd <string>
git add .
cd ..
git push origin <string>
find . -path <directory> -prune -o -name <file> -print
sudo certbot --nginx -d <file>
head
vim
git clone <URL>
git push
git add <string>
fg
source <string>
unzip <file>
rm -f <string>
mkdir -p <string>
vi <file>
ls -l
ps
ls
npm i
fg
git branch
cp <string>
ls -al
ls
ls
cd <string>
docker ps
grep <string>
ls
cd ..
mv <string>
print <string>
ls
ls
read -rp <string> <string>
cd <directory>
ls -l
ls -1
git checkout <string>
grep -E <string>
ls
ls
sudo systemctl restart <string>
curl <string>
git diff
git pull
clear
sudo apt-key adv --keyserver <file> --recv-keys <string>
git add .
mv <string>
vi <file>
exit
cd ..
ls -lh
vi <file>
ls
git rebase <string>
curl -sL <URL> -o <file>
sudo reboot -h <string>
xargs sed -i <directory>
cd <string>
git log
grep <string>
ls
cd <string>
cd <string>
ls
ls -alrt
ls
chmod <string>
ls
ps -aux
cd <directory>
ls
curl -i <string>
cd <string>
vim <file>
git push
sudo apt-get install <string>
watch -n <string>
cd <string>
cd
top
ls
cd ..
git pull
git push -u <string> master
nano <string>
vi <file>
vi <file>
mv <string>
sudo snap install --classic <string>
ls
sudo rpm -e <string>
git status
sudo apt install -y <string>
sudo virsh <string>
sort -u
mkdir -p <string>
cd <string>
read <string>
touch <file>
ls
nano <file>
tmux
grep -x <string>
cd <string>
ls -a
sudo -s -u <string> -H
grep -rl <string>
git pull
cd <directory>
git config --global <file> <file>
cd <string>
lsblk
sed -i <directory>
git reset --hard
docker ls
cd <string>
ls -la <directory>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
sudo reboot
history
cd <string>
cat <string>
cd <directory>
kubectl apply --filename <file>
sudo ufw <string>
sudo apt update
sudo find . -type <string> -exec <string>
tmux -u
ls
ping <string>
ps
ls
cd <directory>
systemctl --user <string> <file>
git commit -m <string>
python3 <file>
ls
ls -l
cd <string>
cd ..
cd <string>
cd <string>
ip a
sed -r <directory>
grep -F <string>
brew tap <directory>
sudo mount <directory>
npm install <string>
vim <file>
ls
ls
ls
npm start
sleep <number>
cd
sudo <directory> restart
which <string>
set -x
exit <number>
exit
cd <string>
rm -f <string>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
pwd
cat <string>
git push
git log
git stash clear
sudo usermod -aG <string> <string>
cd ..
cd <directory>
sudo reflector --verbose --latest <number> -f <number> --sort <string> --age <number> --connection-timeout <number> --save <directory>
sudo cat <directory>
cd <string>
git status
sudo usermod -aG <string> $USER
exit <number>
curl <string>
cd <string>
rm <string>
ls
clear
grep <string>
sudo chmod +x <string>
find . -empty -type <string> -print -delete
git add .
cd <directory>
ls
clear
vim <file>
vim <file>
history -r
head -n <string>
git add <string>
cd <string>
pavucontrol
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
sudo apt install <string>
vim <file>
source <string>
ls
ls -lT
git push
ls
vim <file>
clear
cd <directory>
cd <string>
sudo apt-get update
git rebase <string>
sudo add-apt-repository -y <directory>
sudo curl -L <directory> -o <directory>
grep <string>
cp -r <directory>
ls
cp
ls
less <string>
cut -f2
ls
git commit -m <string>
ls -al
git pull origin master
npm install
find . -empty -type <string> -print -delete
man -k <string>
exit <number>
ls
cd <string>
curl -Is <string>
sudo nano <file>
cd <string>
git rm --cached <string>
ls
chmod <number> <string>
git clone <URL>
vi <file>
cd <string>
git status
vim <file>
cp <string>
npm run start
cd <string>
sudo apt install curl -y -qq
sudo pacman -Qs
exit
docker stop <string>
sudo make install
git add .
perl <file>
rm <string>
grep -a <string>
dir
cd <string>
ls
rm <string>
vim <file>
ls
fg
ls
git commit -m <string>
cut -d <string> -f <number>
ls
sudo ln -s <directory>
man <string>
git stage <string>
vi <file>
git remote add origin <URL>
git branch -m <string>
cat <string>
git add <string>
mkdir <string>
git config --global <file> <string>
python3 <file>
cd ..
exit <number>
python3 <file>
df -lh
tmux set-option -t <string>
grep <string>
sudo pacman -S <string> --overwrite <directory>
ls
sudo gem install <string>
grep -i <string> >files
vim <file>
ls
ls
type <string>
sed -i <string>
git stash pop
ls -lAF
ls
ls
cd <string>
ls
rm <string>
ls
ls -l
cd ..
read -s -n <number>
ps -auxwf
ssh dirlic@10.18.0.39 -p <number>
git add .
git push origin master
cat <string>
clear
cp <string>
cd <directory>
ls
pwd
git status
ls
ls
git add .
docker exec -it <string> bash
clear
ls
clear
sudo nmcli con <string>
npm install --save <string>
git push
rake <string>
cd ..
sudo swapon -a
nano <string>
git status
exit
cat <string>
clear
npm-recursive-install
vim <file>
yarn add <string>
exit
vi
rm <string>
gpg --version
eval <string>
ps -u <string> # lists your processes
ls -ltr
<file> <file>
sudo apt-get update
sudo shutdown -h
git diff
ls -lah <string>
nano <file>
dpkg-shlibdeps: erro: <string>
clear
git status
sudo xbps-install <string>
sudo apt-get update
cd <directory>
find . -type <string> \( -name <string> -o -name <string> -o -name <string> -o -name <string> -o -name <string>
clear
unset <string>
npm i <string>
vi <file>
find .
sudo wget -O <directory>
sudo python <file> -cascade==<file> <number>
ls
bash <file>
ls
git add .
npm start
yarn add <string>
capsctrl <string>
cd <string>
ls
sync
cd <string>
done
sudo cat <file> <string>
ls
vim <file>
sh
reset
mv <string>
<directory> <directory>
ls
shutdown -h <string>
cd <string>
git init
nano <file>
git commit -m <string>
docker ps
ls
ls
ls
fg
unzip -R
vi <file>
fg
ls
cd <directory>
which <string>
ps -df
git add .
rm -rf <string>
ssh <string>
vim <file>
fg
vi <file>
grep <string>
git commit -m <string>
vim <file>
git init
ls
git status
sudo ifconfig <string>
sed <directory>
printf <string>
cd
vim <file>
vi <file>
ls
unzip <file>
ls
vi <file>
g++ -std=<string> <file> -o <string>
ls
ls
git clone <URL>
npm uninstall -g <string>
git add .
sudo aptitude <string>
ls
cd <string>
pwd
sudo raspi-config
diff <file> <file>
git commit -m <string>
git add .
git config <file> false
ls
git status
vim <file>
clear
openssl req -x509 -new -key -mykey.key -out <file> -days <number> -subj <directory>
cat <string>
git status
vim <file>
ls
apt-get update
cd ..
git checkout master
git clone <URL>
free
git
cat <string>
mkdir <string>
vim <file>
find . -type <string> -name <string>
clear
rmdir <string>
mkdir -p <string>
perl <file>
ls
cat <string>
rm -f <string>
ls
ls
xargs sed -i <directory>
rm <string>
cd <directory>
pulseaudio -k
ip addr
du -a
sort passwd
git status
git status
ls
git rebase -i <string>
ls
mkdir <string>
cp <string>
rm -rf <string>
exit
ls
history
fg
composer
ls
grep <string>
git push origin master
ls -la
git status
ls
clear
cut -d <string> -f1 <string>
ssh dirlic@10.18.0.39 -p <number>
git status
cd <string>
cd <string>
git push origin master
ls
fg
git init
docker rmi <string>
git clone <URL>
sudo apt-get update
sudo npm install forever -g
find . -name <string> -exec <string> -c <string>
sudo chown -R <string>
sudo apt-get update
sudo start uwsgi
ls -l
grep <string>
git add <string>
cd ..
vi <file>
cd <string>
npm install -g <string>
then
cd ..
sudo apt install -y <string>
fg
ls
git git commit -m <string>
cd <string>
top
vim <file>
git init
cd ..
less <string>
ls
vim <file>
grep <string>
xrandr --output <string> --off
git rm --cached <directory> -f
ls
ls
docker pull <string>
cd -
ls -la
curl -k -s <URL>
ls
exit
git remote set-url origin <string>
vi <file>
ls
git status
sudo apt-get install <string>
vi <file>
git log
systemctl start <string>
npm run build
exit <number>
chsh -s <directory>
wget $flutterLINK -O <file>
cd <string>
clear
docker ps -a
sudo npm install -g <string>
ls -l
sed -e <directory>
read -s -n <number>
cd <string>
git add .
modprobe loop
pwd # tells you where you currently are
apt-cache info <string>
cd <string>
fg
rm -f <string>
cd ..
cd <directory>
ps -eo <string>
vi <file>
unset <string>
ls
service apache2 restart
chmod +x <string>
ps ax
chmod <string>
sudo mv <file>
sudo lsblk -o <string>
wget -q -O <file>
clear
ls -la <directory>
ls
exit
npm i react-native-swiper-flatlist --force
ls
cat <string>
cut -d <directory> -f <number>
ls -ltr
cd <directory>
git commit -m <string>
ls
cd <directory>
git remote add origin <URL>
cd <directory>
top
npm run test
python3 <file>
clear
git commit
cd <string>
docker cp <string>
git push
ls
sudo npm i
tail -f <string>
cat --help
code <string>
sudo find <directory> -name <string>
mv <string>
git commit -m <string>
exit
git touch <file>
grep <string>
git pull
cd <string>
diff <file>
sudo apt-get -y <string>
ls
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git remote add origin <URL>
git status
vi <file>
mkdir <string>
ls
git remote add origin <URL>
git branch -D <string>
cd <directory>
git status
git clone <URL>
read -rp <string> <string>
npm init -y
git status
vim <file>
read <string>
git push origin master
wget -q -O - <URL>
lsblk
clear
ls
ls -lah
sed -i <string>
ls
ls
ls
setg RHOSTS.*
git push
history -a
ls
ls
cat <string>
ls
cd
mkdir <string>
apt-get update
cd ..
sudo mousepad <directory>
ls
view <string>
vi -t <string>
env
git --version
git clone <URL>
python3.11 <file>
ls
vi <file>
ls -l/var/tmp
ls
sudo npm install -g <string>
cd <string>
exit
rm -rf <string>
git rm --cached <string>
rmdir <string>
ls
tmux kill-session
ls
ls
sudo rm -f <directory>
git clone <URL>
git remote add origin <URL>
cd <string>
cd <directory>
mv <string>
git init
find . -name <string> -type <string> -print -prune -exec <string> -rf <string>
git commit -m <string>
ls
cd ..
cd
cd ..
ls
vi <file>
ls
fg
git checkout
vim <file>
sudo iptables -A <string> -i <string> -o <string> -m <string> --state <string> -j <string>
apt install -y <string>
ls
git add .
clear
ls -lAF <string>
ls
su - <string>
grep -v <string>
vim <file>
git status
cd ..
cp -v <string> <directory>
ls
sudo ansible all -m <string>
git clone <URL>
git add <string>
exit
ls
export <string>
vim <file>
sudo apt-get install -y <string>
npm run bench -- -c <file> -n <file>
sudo apt purge <string>
sudo chown ankitpati:ankitpati -hR <directory>
ls
rm -rf <string>
cd <directory>
cp <string>
docker
sed <directory>
vim <file>
git push
cd ..
vim <file>
npm start
ls
su
cd <directory>
cd ..
ls
ls
ps aux
cd <string>
git clone <URL>
cd <string>
git remote add origin <URL>
vim <file>
sudo apt-get autoremove
cd ..
mv <string>
cd <string>
sudo apt-get install <string>
rm -rf <string>
cat <string>
rm <string>
cd <string>
npm test
exit
pwd
git init
cd ..
curl -o- <URL>
ls
git status
chmod <number> <string>
setg RHOSTS <file>
rm -rf <string>
history -c
rm -rf <string>
git add <string>
clear
vi
cd <string>
sudo reboot
sudo
sed -r -n <string>
git clone <URL>
sudo dpkg -i --force-overwrite <string>
vim <file>
sudo userdel <string>
ls
cd ..
ls
fg
vim <file>
clear
fg
sed <directory>
git pull
npm install
cd <string>
sudo apt install <string>
ssh <string>
fg
sed -n <string>
git commit -m <string>
git add <string>
let <string>
ls
clear
ls
npm run bench -- -c <file> -n <file>
exit
sudo ls <directory>
ls -pwd
git pull
git add <file> -f
clear
git please
cd <directory>
grep <string>
git remote add origin <URL>
ls
sudo poweroff
top
sudo cat <directory>
ls
exit
sh -c <string>
ssh dirlic@10.18.0.39 -p <number>
cd ..
top
cd <directory>
cd <string>
ls
sudo apt-get update
cd ..
ls
ls -l
find . -type <string>
git remote add origin <URL>
sudo chown -R <string>
cd <directory>
cat <string>
git add .
cd <directory>
sudo apt-get install -y <string>
git pull
vim <file>
cd <directory>
sudo python3 <file>
type -a <string>
ls -l
cd ..
sudo killall -HUP <string>
ls
ls
make
sudo ifconfig en0 ether <string>
sudo apt-get install <string>
ls
exit
ls
unset color_prompt force_color_prompt
cd <directory>
vim <file>
cd <string>
exit
rm -R <string>
git pull
clear
npm run start
cd <string>
curl --proto <string> --tlsv1.2 -sSf <URL>
cat <string>
sed -i <string>
git
chmod +x <string>
git pull
trap <string>
fg
kubectl --namespace <string> <string>
git status
tmux rename-session -t <string>
perl <file>
git pull origin main
git push --mirror <string>
exit
clear
ls
sudo apt-get -y <string>
git add .
ls
git add .
git commit -m <string>
cd <string>
cat <string>
chmod +x <string>
git add <string>
cd <string>
ls
git branch
vi <file>
clear
vim <file>
git commit -a
which <string>
vim <file>
cd ..
mv <string>
git restore <file>
ls
git status
cd
exit <number>
sudo npm install forever -g
npm install
cd <string>
man <string>
rake <string>
ls
awk <string>
clear
sudo apt install <string>
cd <directory>
docker run -it --name <string>
cat <string>
git add .
ls
pwd
grep -iv <string>
cd <string>
clear
git stash pop
cd <string>
ls
ls
export <string>
cp -r <directory>
git --git-dir=<directory> --work-tree=<directory> <string>
clear
sudo sysctl -w <string>
git commit -m <string>
sh <file>
rm -rf <string>
top
clear
ls
ls
code .
unset color_prompt force_color_prompt
sudo python <file>
touch <string>
read -r <string>
less <string>
clear
sudo apt install xsel -y
fg
sudo apt update --allow-unauthenticated
git pull
cd <directory>
ls
ls
ln -s <string>
open <string>
ls
git pull
ls
curl <URL> --silent
ssh dirlic@10.18.0.39 -p <number>
sed -e <directory>
top
cd ..
ls
sudo apt install <string>
ls
npm install
clear
npm i
cat -n <string>
exit
local <string>
g++ -std=<string> <file> -o <string>
ls
find <directory> -name <string>
ls -l
rm -rf <string>
ln -s <string>
find . -type <string> -exec <string> -n -e <directory>
sudo rm -rf <string>
mv <string>
git commit -m <string>
sudo tar -C <directory> -xzf <file>
git config --global <file> <string>
git remote add origin <URL>
git br
git add .
setg RHOSTS.*
git commit -m <string>
apt-get update
cd
python3 <file>
cd ..
sudo npm run <string>
sudo kill -9 <number>
sudo apt-get update
apt-get purge <string>
cd <string>
cd <string>
ls
gawk --version
psql -U <string> -h <string>
vi <file>
sudo dpkg -l
npm i <string>
cd <string>
mkdir <string>
git status
sudo mkdir <directory>
ls
ls -l
open .
git push origin -f
cat <string>
git add <string>
touch <file>
git commit -m <string>
read -r <string>
ls
sudo ufw allow <string>
ls
terraform <string>
clear
sudo kill <number>
sh <file>
wget <URL>
git diff <string>
cd <string>
clear
mkdir <string>
ls
cd <string>
ls -lah
rm -r <string>
read -rp <string> <string>
curl -fsSL <URL>
tail -f <directory>
cd <string>
sudo apt-get upgrade
killall
cd ..
sleep <string>
sudo apt update
ls
cd <string>
fg
ls
make clean
ls
docker-compose logs
sudo apk add <string>
git commit -m <string>
type <string>
ls
cd ..
git status
git commit
ls
git bisect good <string>
ls
clear
ls
git pull
cd
rm -rf <string>
cd ..
cd <string>
cd <string>
git pull
exit
git add <string>
git config --global <file> <file>
python3 <file> <number> --country <string>
cd <directory>
ls
vim <file>
htop
sudo raspi-config
cd ..
touch <string>
ls
curl -Ss -X <string> -H <directory> -d <string>
clear
kubectl get <string>
cd <string>
ls
cd <string>
git push
npm audit fix
clear
npm install
sudo apt-get upgrade -y
git init
sudo adduser --system --home <directory> --shell <directory> --no-create-home --gecos <string> --ingroup <string> --disabled-login --disabled-password <string>
sleep <number>
scp <string>
git push
grep -i <string> >files
source <string>
cd <string>
npm init -y
vi <file>
exit <number>
git commit -m <string>
code .
pwd
git add .
sudo apt autoremove
cd ..
cd <directory>
mv <string>
read -r <string>
then\
git checkout <string>
git status
git add <string>
ls -l
ls
dir
sudo dpkg --configure -a
systemctl status <string>
cd <string>
screen -ls
cd
ls
cd <directory>
git add <string>
docker kill <string>
docker ps
cd <string>
clear
sudo apt-get install <string>
ls
read -p <string>
curl -fsSL <URL>
clear
cd <string>
xargs -L1 <string>
htop
vim <file>
git rev-list --all
vim
ls
rm <string>
clear
sudo git init
vi <file>
less <string>
ls
git st
git commit -m <string>
cd <string>
docker-compose -f <string>
ls
cd <string>
apt-get update --fix-missing
git stash
rm -rf <string>
vi <file>
git checkout master --force
vim <file>
python3 <file> --snapshot
chmod <number> <string>
ps -ef
ls -lh
awk <string>
apt-get install <string>
clear
cd <directory>
sudo apt-get update
tmux new-session -d -s <string> -n <string>
git commit -m <string>
gzip <string>
sudo supervisorctl <string>
git push
ls
sudo su
cd <string>
cd <directory>
rm -fv <string>
git fetch origin\
clear
ls
vim <file>
vim <file>
git branch
pwd
sort > <file>
sudo snap install code --classic
history
ls
systemctl start <string>
sort -hr
cd <string>
grep <string>
ls
ls
mail -s <string>
npm run coverage
git filter-branch --index-filter <string>
git checkout <string>
git submodule add <URL>
sudo reboot now
cat <string>
nl
vim <file>
cd <string>
sudo service nginx reload
rsync -rt -e <string>
vim <file>
sleep <number>
cd ..
git pull
git config --global <file> <file>
cd <string>
ls
vi <file>
clear
vim <file>
rm -f <string>
git add -A
sudo
mkdir -p <string>
ls
vi <file>
sort
nano <string>
mkdir <string>
ls
su
sed -i <string>
vim <file>
cat <string>
vim <file>
git push -u <string> master
exit <number>
cd <string>
git init
ls
sudo add-apt-repository <directory> --yes
grep <string>
cd <directory>
ls
read <string>
sudo pacman -Suy
cat <string>
git push
git add -A
cd ..
git status
cd <string>
du -h -x -s -- <string>
grep <string>
cd <directory>
sed -e <directory>
sed -ri <string>
sudo service <string>
python3 -m <string>
clear
cd ..
npm run test
ls -la
nc <string>
cd <directory>
vi <file>
more <file>
sudo passwd <string>
git add .
npm run test
git pull
nano
killall <string>
ls
sed -i <directory>
exit <number>
grep -i --color <string>
cd <directory>
git push -u <string> bryan-guner
git --versio
ls -la
read
cd <string>
rm -r <string>
python3.11 <file>
ssh-copy-id -i <string>
vi <file>
cat <string>
mkdir <string>
cd <string>
docker exec -it <string> bash
vi <file>
fg
cd <string>
cd ..
git add .
cd <string>
sudo pacman -S <string>
ls
ls
wget --no-check-certificate <string>
docker-compose up -d
cp -v <string> <directory>
mkdir <string>
ls
sudo add-apt-repository <directory>
sh
set <string>
vi <file>
cd ..
sudo usermod -a -G <string>
ls -l
fg
ls
ls
cd ..
cd <string>
cd <directory>
find . -empty -type <string> -print -delete
rm -rf <string>
cp --help
rm -rf <string>
git status
cd <string>
sudo apt-get update
git pull
sudo rm -rf <string>
ls
unset <string>
exit
service <string>
ls
exit
cd <string>
cat <string>
ls
exit
cd <string>
ls
vim <file>
ls
cd <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string>
ps -ef
git co HEAD .
ps -ef
mv <string>
cd <directory>
cd <directory>
clear
npm i --save-dev <string>
ls -l
grep <string>
sudo dnf install -y <string>
sudo apt-get install <string>
git status
vim <file>
ls
wget --quiet -O - <URL>
sudo cp <string>
sudo pacman -S <string> --asdeps --needed
git rm -r --cached <directory>
cd <directory>
sudo vim <file>
cd ..
cat <string>
codedown javascript > <file>
cp <string>
cd <string>
exit
df -lh
git add .
git pull
ls
cd ..
cat <string>
pwd
git add <string>
git init
source <directory>
apt-get install <string>
git remote add origin <URL>
brew install --cask <string>
cd ..
open <string>
wc -l
vim <file>
git please
npm run register
bash <file>
rm -f <string>
cd ..
sudo rm -rf <string>
python3.11 <file>
else\
npm audit fix
cd <directory>
git commit -m <string>
vi <file>
fg
cd <string>
clear
ls -ltr
ls
ls
git add .
cd <string>
git add .
cd <string>
vim <file>
git add .
ls
ls
cd <string>
clear
ls
sudo apt-get install <string>
chmod <number> <string>
cd <directory>
sudo chmod <number> <string>
ls
sudo apk add <string>
mkdir <string>
git pull origin master
cd <string>
cd ..
ls
less <string>
clear
cd ..
git add <string>
npm i <string>
npm install
vi <file>
export <string>
ls
cd <string>
sudo nano <string>
git checkout master
vim <file>
rm <string>
sudo python <file> --cascade=<file> <number>
git fetch
docker image ls
cd <string>
find -name <file> -o -name <file>
npm install
helm install --name <string>
ls
cd <string>
vi <file>
wait <string>
vim <file>
npm run dev
cd <string>
cd <string>
wget <URL>
git show <string>
exit
vim <file>
ls
clear
egrep <string>
script -a <string>
cat <string>
cd <directory>
env
df -h
ls
man <string>
cp <string>
git clone <URL>
git push --set-upstream <string> main
sudo git clone <URL>
cd <string>
vim <file>
ls
nano <file>
ls -l
clear
vim <file>
cd <string>
cd ..
yay -S <string>
tail -f <file> --lines=<number>
git checkout master
sh -c <string>
cd <directory>
ls
vim <file>
clear
git push
clear
ls -l
sudo dpkg -r <string>
rsync <directory>
cd <directory>
git clone <URL>
ls
npm publish --access <string> --scope=<string>
ls
exit
sudo apt-get update
find <directory> -name <string> --delete <string>
python3 <file>
grep -Fxq <string>
done
cd ..
git rm -rf
git status --ignore
ls
cat <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
chmod u+w -- <string>
history -r
sudo mount -t <string> -o <string>
exit <number>
ls
ls
git commit -A
ls
vim <file>
sudo -i
man <string>
mkdir <string>
cd <directory>
rm <string>
ls
sudo apt-get purge <string>
npm start
fg
git status
ls
cd <string>
ls
ps aux
wget -q -O - <URL>
apt install <string>
sudo ip route add <string>
npm i prettier -g
git merge <string>
ls
cd ..
ls
sudo chsh
vi <file>
ls
git stash
cd <directory>
vim <file>
curl <string>
git push -u <string> main
vim <file>
ls
ls -lh <string>
git status
cd <directory>
ls -ltr
exit <number>
cd <string>
git add <string>
apt-get -y -o <string>
pwd
cd <string>
cd <string>
sed -e <directory>
ls
cd <directory>
cd <directory>
top
ls++ -a
ls
kill -9 <number>
sudo sed -i <directory> <file>
sudo dpkg-reconfigure <string>
git commit -m <string>
ls
ls
clear
nano <file>
ls
git commit
git checkout <string>
git push origin --delete <string>
ls -al
ls
who
grep --help
export <string>
cat -s <string>
git rm <string>
exit
rm <string>
ls
pwd
chmod <number> <string>
git remote -v
ls
sudo apt get update
done
alias <string>
npm run bench -- -c <file> -n <file>
git pull -f
cd ..
paste -s <string>
cat <string>
pwd
nano <file>
clear
ls -la
ls
cp -r <directory>
ls
unlink <string>
sudo apt-get install <string>
fg
cat <string>
ps -aux
ls
cp <string>
git clone <URL>
cd
code <string>
ls
npm install
docker run -it --entrypoint <directory>
git add <string>
ls
touch <file>
npm install
git remote add origin <URL>
cut -d' <string> -f7-
exit
ls
sudo dislocker-fuse -V <directory> -u$hddpass -- <directory>
sudo apt install <string>
git commit -m <string>
clear
ls
curl -X <string> -d <string> OR SELECT <string>
ls
ls
cp <string>
vim <file>
exit
ls
apt-get autoremove -y
scp
mv <string>
git pull origin master
cd <directory>
npm run test
sudo nvim <directory>
vim <file>
ls -l
ps -ef
df -h
fg
history
git add .
apt-get update
mv <string>
git push -u <string> main
python3 <file> --model-path <file> --conf <string> --img-size <number>
vim <file>
docker logs <file>
tr <string> <string>
cd <directory>
service <string>
xhost +
git commit -m <string>
sed -i <string>
git commit -m <string>
sudo apt-get install <string>
tar -C <directory> -xzf <file>
ls
chmod +x <string>
clear
cd ..
vim <file>
ls
code .
pkill <string>
git rebase -i <string>
chmod <number> <string>
less <string>
git init
mkdir -p <string>
mv <string>
rm -f <string>
git remote add origin <URL>
git pull origin <string>
done
head -n50 <file>
clear
mkdir <string>
shutdown -h <string>
ls
ls
npm install react-native-reanimated-carousel --force
vi <file>
ls -l
ls
cd <directory>
wireshark -k -i -
sudo docker run -it --name <string> --entrypoint <string> -u <string> --privileged -v --rm <directory>
sudo apt-get upgrade -y
git status
rm -r <string>
pwd
ls
cd <string>
sudo apt remove <string>
sed -i <string>
top
mkdir <string>
clear
cd ..
ls
cd <string>
cd ..
printf <string>
su root
cd <directory>
ls
cd <directory>
ps aux
cd ..
cat <string>
ls
git push
cd ..
git push -u <string> master
cd ..
git status
exit
clear
cd <string>
cd <directory>
ls
ls
git pull
clear
cd <directory>
du -sh <string> --exclude <string> --exclude <string>
cd <string>
ls
git config --global <file>
ls -al
git status
vim <file>
fg
ls
sudo dpkg -i <file>
npm i
exit
cd <string>
ls
tail -f <string>
docker compose <string>
ls
rm -r <string>
ls
vim
ls
done
tar -xf <string>
sudo npm i semver -g
sudo dnf install -y <string>
wget -q -c <string> -O <file>
cd ..
cd <string>
npm run
git add .
ls
vi <file>
ls
sudo kill <number>
ls
cd <directory>
vim <file>
cd ..
git submodule update
find . -name <file>
git log
cat <string>
cd
cd <directory>
exit
ls
exit
cd <string>
git pull
rm -rf <string>
ls++ -a
exit
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git pull
read -rp <string> <string>
vim <file>
cd ..
python3 -V
cd ..
fg
sudo apt-add-repository -y <directory>
ls -alrt
chmod -x <file>
ls
git remote set-url origin <string>
git pull
sudo npm i
docker container ls
cd <string>
git branch -M <string>
rm <string>
ls
rm -r <string>
cd
cd <directory>
cd <string>
ls -la <directory>
nano <file>
mkdir <string>
clear
brew install <string>
kill <number>
ls
clear
cd ..
npm init
ps aux
vi <file>
rm <string>
cd ..
sudo su -
git push
sudo easy_install <string>
sudo stop uwsgi
npm i <string>
sudo apt-get install <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
exit
vim <file>
nc-docker <string>
clear
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
python3 <file>
cd <directory>
sudo vim <directory>
ls
cd <directory>
cut -d' <string> -f3-6)Z"
docker system df
vim <file>
vim <file>
ls
ls -la
cd ..
git commit -m'Cool, <string>
git add <string>
git add <string>
uniq
ls
then\
ls
less <string>
cd <string>
git commit -m <string>
git clone <URL>
tail -f <string>
npm run test
su deployer -c <string>
du -h
grep -i <string> >files
mv <string>
ls -l
git branch
git commit
chmod <number> <string>
ls -la
mvn compile
git pull origin master
ls
rm <string>
git remote rm <string>
cpio -p -d -v <directory>
tail +n # Print nth line from file.
clear
rm -r <string>
docker exec -it <string> bash
update-alternatives --list <string>
ps axfu
npm install -g <string>
reset
ls
code -
cd ..
vi <file>
a
git clone <URL>
ls
sudo apt install -y <string>
pbcopy
clear
type <string>
ls
git pull
rm <string>
read -p <string> -r <string>
tmux new-session -d -s <string>
git status
git status
ls
cd <string>
ls -la
ls
reboot
fg
exit
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
ls
sudo apt install <string>
git add .
curl <string>
rm <string>
git config --global <file> <string>
ls
exit <number>
sudo apt-get install <string>
sudo sed -i <directory> <file>
ls
ls
col -b
sudo apt-get update
sudo rm -r <string>
cd <directory>
cd ..
git status
git config --global <file> <string>
source <string>
cd <string>
cd <directory>
cd <string>
exit <number>
mkdir <string>
nano <file>
cp <string>
ls
grep -v <string>
vi <file>
sudo apt-get install <string>
tmux source <file>
cd <string>
ls
cd ..
cd <string>
rm -rf <string>
cd <directory>
git add .
ls
git push -u <string> main
cd ..
cd ..
sed <directory>
sudo apt remove <string>
ftp <string>
git clone <URL>
grep -v <string>
ls
cd ..
sudo apt-cache search <string>
ls
cd <directory>
git remote set-url origin <string>
ls
less <string>
cd
ls
npm audit fix --force
ls
npm install -g <string>
sudo vim <directory>
sudo nano <string>
sudo pacman -Ss <string>
exit
cat <string>
cd <directory>
cd <string>
vim <file>
cd <string>
cd ..
sudo chmod <number> <string>
awk -F1 <string>
git st
ls -lh
sudo cp <string>
source <file>
sudo ifconfig en0 ether <string>
lsblk -l
du -skh <string>
sudo vi <directory>
su root
npx shadcn-ui@latest add <string>
nano <file>
git reset <string>
docker ps
sudo vi <directory>
vi <file>
git add .
uniq -i -c
clear
ls
journalctl -xe
cd <string>
vi <file>
cd <string>
ls
cd <string>
service apache2 restart
git checkout <string>
who
help
journalctl -xeu <file>
sudo apt-get update
find <directory> -type <string> -print0
history -w
sudo service <string>
git commit -m <string>
cd <string>
sudo emacs <string>
ls
git add -A
touch <string>
sudo reboot
cd ..
cd <string>
vi <file>
ls
sleep <number>
sudo ufw status
cd <string>
mkdir -p <string>
ls -l
done < <(which -a <string>
vim <file>
git branch -M <string>
cd <directory>
ls -al
ls
cd ..
sudo yum groupinstall -y <string>
apt-get install <string>
clear
git commit -m <string>
ls
cd <string>
mv <string>
kubectl apply -f <string>
python3 --version
exit <number>
ls
tail -n <string>
ls
sudo find <directory> -name <file>
exit <number>
ls
eval <string>
sleep <number>
ls
cd <string>
sudo mv <file>
read <string>
ls
done
cd <string>
vi <file>
git branch -M <string>
sudo apt-get purge nodejs npm
chmod <number> <string>
clear
git commit -m <string>
sudo poweroff
cd <string>
rm -f <string>
git branch --no-color <string> <directory>
history -r <string>
nano <string>
git push
ls
cd <string>
rm -rf <string>
screen -rd <string>
cd ..
tar -xf <string>
sed -i <directory>
tr <string>
chmod u+x <string>
pwd
npm start
git co PTS-578_redirects_not_updating_automatically
clear
ls
git remove -v
history
less
cd <directory>
ls
vi <file>
read -p <string>
ls
sudo apt install <string>
git pull
npm --version
sudo wget -O <directory>
git push
fg
su
ls
git pull
git init
git commit -m <string>
docker ps
mkdir <string>
git commit -m <string>
rm -rf <string>
cd <directory>
cd <string>
xargs -n2 <string>
git clone <URL>
export CFLAGS=<string> -std=<string> -lm"
clear
cd <string>
git branch --list --all -vv
npm install
sudo apt install <string>
mv <string>
cd <string>
chmod +x <string>
fg
setg RHOSTS <file>
git pull
vi <file>
vi <file>
docker-compose logs --follow <string>
npm run devstart
ls
clear
clear
rm -rf <string>
vi <file>
cd ..
git init
curl <string>
history -a
rm <string>
sudo apt update
time <string>
find . -type <string>
git checkout <string>
git add .
pwd
read -r -p <string>
vim <file>
ps aux
ls
vi <file>
ansible-playbook <file> --vvv
cd <directory>
pwd
clear
less <string>
ls -la
cd <string>
cd <directory>
cd ..
git remote
chmod <number> <string>
ls
python3 <file>
git commit -m <string>
git add .
vim <file>
git commit --amend --reset-author
git add .
read <string>
git st
git commit -m <string>
npm install <string>
ls > <file>
exit
rm -rf <string>
git push -u <string> main
grep -wirlc <string>
docker-compose up -d --build
git status
cd <directory>
bash <file>
grep <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
ls -l
git add <string>
sleep <number>
mkdir <string>
git commit -m <string>
git add <string>
sudo apt install git -y
sudo swapon -s
man <string>
wget <URL>
ls
top
vim <file>
sudo chown -R <string>
git remote add origin <URL>
cd <string>
cd
ls
ls -a
clear
apt-get autoremove -y
ls
git remote set-url origin <string>
cd
ls++ -a
git commit -m <string>
chown -R <string>
uname -s
ls
clear
exit
ssh <string>
curl -v -X <string> --anyauth -u <string>
cp <string>
git clone <URL>
ls
ls -l
vi <file>
cd
find <directory> -name <file> -print0
exit
git push origin main
git commit -m <string>
chmod <string>
cd <string>
ls -l
sed -i <directory>
mv <string>
cd <string>
sudo groupadd <string>
cd <string>
sudo snap install <string>
exit
git clone <URL>
sudo sed -i <directory> <file>
clear
read -sn <number> -p <string>
exit <number>
sudo systemctl start <string>
ruby <string>
ssh -i <string>
tmux a -t'training'
sudo apt install <string>
ls
sudo apt update
vim <file>
less
ls
git status --ignore
rm -rf <string>
cd <directory>
sudo systemctl status <string>
nc <string>
clear
nano <file>
ls
cd <directory>
docker run --name <string>
kubectl apply -f <string>
cd <string>
sudo docker rm corrade
clear
pwd
sudo usermod -a -G <string>
exit
sleep <number>
fg
sudo ls
cd <string>
ls
ls
ls
cd <string>
clear
git add <string>
git push -u <string> master
cd <string>
python3 -c <string>
mv <string>
vim <file>
mv <string>
ls
alias <string>
<directory> <string>
git status
cp <string>
ls
ls
git add <string>
tmux source <file>
git pull
ps aux
sudo apt-get install -f
sudo apt install --install-recommends <string>
ls -la
python3 <file> --model-path <file> --conf <string> --img-size <number>
sudo passwd <string>
cd <directory>
ls
cd <string>
ls
vi <file>
vi <file>
vim <file>
git clone <URL>
exit
git add <string>
vim <file>
sudo apt purge nala --no-fix-broken
ls
read -p <string>
sudo git push <string>
git rebase <string>
ls -l
git -C <string>
cat
ls
sudo shutdown -h <string>
cat <string>
read -p <string>
mkdir <string>
vim
cd <string>
cd <directory>
grep -v <string>
sh -c <string>
nano <file>
ls
vim <file>
cat <string>
sed -i <string>
exit
source <directory>
git fetch
ls -al
sudo apt install <string>
git commit -a -m <string>
rm <string>
rm -rf <string>
sudo pacman -S <string>
cd <string>
mkdir <string>
ls
cd
clear
cd ..
git remote add origin <URL>
vim
git status
clear
vim <file>
LANG=<string> rpm -qp --queryformat <string>
sudo apt install <string>
rm -r <string>
ls
exit
fg
cd <string>
ls
docker logs <string>
nohup -c <string> <file> <string>
git init
grep <string>
history -a
ls -l
git commit -m"commit <string>
ls
vim <file>
cd ..
df -lh
cd <string>
cd ..
ls
grep -c <string>
docker-compose up -d --build
mkdir <string>
tail -f <string>
sudo ufw status
vim <file>
npm http GET <URL>
clear
npx shadcn-ui@latest add <string>
vim <file>
cd <string>
cd <string>
git push -f
npm install <string>
vim <file>
sudo ifconfig <string>
npm -v
init <number>
cd <directory>
cd <string>
ls
git commit -m <string>
rm <string>
sed <directory>
git push
ssh <string>
cd
vim <file>
vi <file>
history -a
git config --global <file>
chmod <number> <string>
cd <directory>
exit
git remotes -v
ls
mv <string>
git mv <string>
cd <directory>
curl -L <URL>
python3 <file> -- <string> @CAMERA=<string> <string>
exit <number>
sudo apt-get update
rm -rf <string>
npm install typescript --save-dev
cd ..
git checkout -b <string>
setg RHOSTS.*
curl -Lo <string>
vi <file>
cd <directory>
git remote remove origin
clear
du -sh
cd ..
git push
reset
ls
node <file>
sed -r <directory>
grep <string>
source <directory>
git status
sudo python3 <file>
ls
vim <file>
cd <string>
cd ..
chmod +x <string>
ls
pavucontrol
docker pull <string>
git push
nano <file>
cat <string>
ls
git remote remove origin
exit
ps -a
rm -rf <string>
ls
ls
cd <string>
git config --add <file>
git status
ls
<file> -m <string>
ls
grep <string>
ln -s <string>
cat <string>
cd <string>
cd <string>
ls -ltr
ls
ln -s <string>
clear
sudo apt install <string>
read -r -p <string>
git init .
cd <directory>
cat <string>
cd ..
git push -u <string> master
ls
ls
wget -SO <directory>
curl -G <directory>
ps -aux
git commit -m <string>
git commit -a -m <string>
vi <file>
git reset --soft <string>
cd <string>
cd <directory>
apt-get install <string>
rm -rf <string>
npm install --global <string>
cp <string>
ls
git pull origin master
vi <file>
cd <string>
cd <string>
docker build -t <string>
ls
python3 <file>
git push
sudo apt update
npm start
ssh <string>
ls
service apache2 reload
ls
cd <directory>
ls
git init
pwd
clear
git status
fg
git init
cd <string>
sudo reboot
ls
npm run bench -- -c <file> -n <file>
ls
sudo service <string>
vim <file>
sudo systemctl disable <file>
su
cd <directory>
rm -r <string>
git status
git clone <URL>
git checkout <string>
read <string>
screen
vi <file>
rm -rf <string>
cd
sudo dpkg-reconfigure locales
sed <directory>
sudo apt-get install <string>
rm -rf <string>
ls
pwd
<directory> <string>
ls
diff -n <string>
git status
sudo cat <file>
sed -i <string>
cd <directory>
gsettings set <file> <string>
ls -a
find . -empty -type <string> -print -delete
clear
cd <string>
tar xvzf <file>
ls
npm install
ls
ls -al
git log
cd <directory>
sudo systemctl start <string>
clear
git add
read -p <string>
cd <string>
cd <string>
sudo apt -t <string>
ls
which <string>
ls
git checkout <string>
grep <string>
ls
grep -v <string>
git checkout <string>
sudo apt-get --assume-yes <string> <string>
sudo pacman -Rsn <string>
git add <string>
vi <file>
env
ls
cd ..
docker-compose logs --follow <string>
ls
vi <file>
ls
ls
ls
sudo chmod +x <string>
cd <string>
cd <string>
fg
git history
git clone <URL>
pacman -Q
chmod <number> <string>
cd ..
git add <string>
cd
exit
rm <string>
nano <file>
rm -rf <string>
cd <directory>
bash
cd <string>
vi <file>
exit
git pull
vim <file>
vim <file>
git status
git commit -m <string>
export <string>
sudo apt install <string>
chmod <number> <string>
rm -rf <string>
ls
cd <string>
git commit -m <string>
xargs -0 <string> -- <string>
rm <string>
ls
rm <string>
npm run dev
sudo -i
clear
mkdir -p <directory> -p <directory>
ls
ls
mv <string>
fg
ls
killall
sudo cp <string>
rm <string>
ls -a
cd ..
sudo ufw allow <string>
git init
rm <string>
ln -s <string>
cd <directory>
git clone <URL>
cd ..
sudo sed -i <directory> <file>
dpkg -l
ping <string>
sed -E -e <directory>
ls
ls
cd ..
git diff
cd <directory>
git add <string>
clear
brew install <string>
git fetch origin\
sed <directory>
ls -l
git push -u <string> master
cd <string>
source <directory>
git add .
sudo apt-get install <string>
docker commit <string>
wget -nd -H -p -A <string> -e <string>
cd <string>
ls
git remote add origin <URL>
sudo systemctl restart <string>
sudo vi <directory>
unset <string>
read -rp <string> <string>
npm run develop
nano <file>
cd <string>
cd
sudo fdisk -l
clear
cd <string>
more <file>
ls
ls
git commit -m <string>
less <string>
cut -f1:8,11:12,16 <string>
sudo apt install <string>
vi <file>
vim <file>
cd <string>
sudo reboot
git init
chmod <number> <string>
ping <file>
sudo rmdir <string>
less
sudo vim <directory>
sudo ip route add <string>
egrep -i <string>
sh <file>
sudo ln -s <directory>
rm <string>
touch <string>
python3 <file>
cd ..
ls
ls
mkdir -p <string>
wget <URL>
cd <string>
source <directory>
ip a
git co PTS-578_redirects_not_updating_automatically
less <string>
cd <directory>
git push origin
vim <file>
grep <string>
ls
awk <string>
git init
sudo iptables -A <string> -m <string> --cgroup <string> -j <string>
rm -r <string>
python3 <file>
bash
cp <string>
cd
history
mkdir <string>
cd ..
sed -e <directory>
ls
npm i react-icons --save
sudo reboot
sudo aptitude install <string>
rails <string>
env
cd <string>
done
python3 <file>
ls
cd <string>
npm audit
source <file>
source <string>
history -a
cd <string>
cd <directory>
ls
sudo apt update
wc -c <file>
ls
cd <string>
cd ..
done
systemctl status <string>
ls
git init
git tag --contains <string>
sudo apk add <string>
clear
sudo systemctl stop <string>
sudo chmod a+wr <directory> -R
mv -- <string>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
sudo service nginx reload
git stash
sudo apt install -y <string>
docker images
vi <file>
sudo shutdown now
git commit -m <string>
cd <string>
git push
python3 <file>
vim <file>
cd <directory>
ls -l
rm -r <string>
exit
cd ..
sudo apt-get clean
cd <string>
git commit -am <string>
git add .
<file> - <number>
git log --grep <string> -p
chsh -s <string>
ls
curl -T <directory> <string>
sudo service nginx reload
git filter-branch -f --index-filter <string>
vi <file>
grep <string>
kill -9 <number>
curl <string>
ls
ls
ls
openssl req -new -x509 -nodes -sha256 -days <number> -key <file>
ls
head -n <string>
du -sh <directory>
sudo apt-get update
ls
cd ..
rm -r <string>
git push -u <string> master
cd <string>
cd ..
sudo apt update
read -p <string>
env
sudo stop uwsgi
npm start
ls
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
git pull origin master
sudo add-apt-repository <string> [arch=<string> <URL>
sudo ufw allow <string>
git init
git push
docker rmi <string>
git commit -m <string>
hostname
grep -i --color <string>
sudo reboot
ls
sed <directory>
cd <directory>
clear
node <file>
git commit -m <string>
ls -l
git init
git pull origin master
xrandr -q
git branch
ls
apt-cache policy <string>
ls
git remote -v
git add .
exit <number>
exit
apt-get upgrade -y
docker run --rm --entrypoint <string> $GL_IMG_REPO -c <string>
ls -lh <string>
cd <string>
sed -r <directory> > <file>
find -name <string>
git commit --amend\
alias <string>
cd <string>
clear
sudo apt install <string>
exit
cp -R/afs/andrew/course/15/122/misc/lab15 <string>
git commit -am <string>
git init
cat <string>
cd ..
ls
history -r
sudo sed -i <directory>
sudo rm -rf <directory> <directory>
wget -qO- <URL>
reboot
ps -ef
ls
exit <number>
ls
npm start --active-arch-only -- --resetCache
mkdir <string>
cp <string>
history
ip a
python3 <file>
git add <string>
ls
ls
clear
ls
ps -aux
cd ..
grep -i <string> >files
perl <file>
git add .
vi <file>
sudo reboot
cd <string>
code .
cat <string>
git config --global <file> <string>
ls
git status
git clone <URL>
git commit -m <string>
rm <string>
npm i <string>
git pull
git add .
ls
unzip <file>
print
cd ..
wget <URL>
grep --binary <string>
fg
git add .
sudo nano <file>
ls
sudo <directory> <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
git status
git push -u <string> master
python3 -m <string> install --no-cache <string>
grep <string>
git pull
ls
vi <file>
exit
cd ..
apt-get install <string>
ls
cd <directory>
cd ..
ls -la <directory>
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ls
ls
sudo apt-get update
ls
vi <file>
sudo -s <string> root
reboot
git pull origin master
cd <string>
vim <file>
exit
apt-get update
clear
git add <string>
cat <string>
cd <directory>
exit
cd <directory>
git commit -m <string>
mv <string>
ls -la
pwd
sort -k <number> -n
git pull origin
ps aux
clear
df -lh
docker-compose up -d --build
cd ..
cd ..
git commit -m <string>
ls
cd <string>
sudo yum remove tree -y
exit <number>
clear
sudo apt-get install <string>
clear
ls
git submodule add -b <string>
clear
npm install -g <string>
git cat-file -p <string>
npm i <string>
tmux a
git pull
vim <file>
ls
git init
tmux set-option -g <string>
git add --all
python3 <file>
dpkg --list
git checkout <string>
cd ..
cd <string>
ls
clear
sudo rm -rf <string>
ls
kubectl get hpa -w
cd <directory>
git push
ls
vim <file>
curl -O <URL>
git ls-files
vim <file>
clear
git push
npm run dev
cd <directory>
pwd
df -h
setg RHOSTS <file>
printf <string>
exit <number>
fg
cut -c3- <string>
cp -r <directory>
sudo make install
docker-compose up -d
sudo bash
git remote add --all <URL>
apt-get update
ls
cd ..
cd <string>
git init
cd <directory>
man <string>
git commit -m <string>
env
git add .
vi <file>
git push -u <string> main
git commit
vi <file>
docker run --rm --entrypoint <string> $GL_IMG_REPO -c <string>
ls
fg
find . -name <string> -type <string> -prune -exec <string> -rf <string>
clear
ls
git commit -m <string>
cd <string>
wget <URL> --no-check-certificate
ls
ls
git init
ls
source <file>
sudo add-apt-repository -y <directory>
git push -u <string> master
ls
cd <string>
perl
cd <string>
fg
ls
exit
git commit
cd <string>
git push
source <file>
git commit-tree <string>
sed -i <string>
cd <directory>
vim <file>
true
ls
sudo apt-get install <string>
git add .
tmux new
ls
cd <string>
ls
git pull
tar -xvzf <file>
sudo reboot
vim <file>
sudo apt-get install <string>
vim
exit
ls -rs
sleep <number>
cd ..
clear
su -l <string>
git status
git --help
<file> program
sudo nginx -t
ls
git commit
source <directory>
ls -a
cd <directory>
cat -f
sudo pacman -S <string>
npx create-react-app <string>
cat <string>
clear
git add .
git commit -m <string>
pico <file>
ls
git config
ls
cd ..
cd <string>
git status
cd <directory>
code .
ssh usuario@ip_servidor -p <number>
npm run bench -- -c <file> -n <file>
npm run dev
git reset <string>
code .
cd <directory>
ruby -ne <string>
vim <file>
read -r -p <string>
ls -a -l
ssh <string>
ls
ls
cat <string>
ls
git clone <URL>
env
ls
sudo chmod a+rwx <directory>
ls
ls
git commit -m <string>
ls
cd <directory>
ls
ls
python3
ls
clear
cat <string>
git status -v
ps aux
ls
cd <directory>
cd
su -c <string>
find . -type <string> -print0
git push
ls
ls
cd ..
sudo pip install <string>
git checkout <string>
git status
git push origin master
cd <string>
ls
cat <string>
dpkg-shlibdeps: erro: <string>
cd ..
cd <string>
exit <number>
cp <string>
npm run coverage
bash <file>
ls -la
git add -v -f <string>
ls -a
curl -I <URL>
docker-compose up -d --build
cd
git init
sudo cp -r <string>
vim <file>
vi <file>
cd <string>
sudo pip3 install <string>
ls
git pull
sudo npm cache clean -f
touch <file>
fg
ls -l
cat <string>
vim <file>
cd ..
rm -f <string>
cd
sudo apt-get install -y <string>
npm start
grep <string>
cd <string>
cd <string>
git commit -m <string>
htop
ls -la
exit
npm audit fix -f
cd ..
ls
git fetch origin\
git commit -m <string>
cd <string>
cd ..
ls
git status
cd <string>
ls
let <string>
git clone <URL>
cd <string>
sudo rm -r <string>
fg
vim <file>
sed -E -e <directory>
ls
mv <string>
git branch -u <directory>
find <directory> -iname <file> -type <string> -exec <string> -c <string>
ls
ls
cd <directory>
ls
export <string>
pwd
cd ..
ls
git commit -m <string>
ls
ls
cd <directory>
tmux
cd <directory>
sudo su
history
ls
ls
cd ..
vim <file>
systemctl stop <string>
ls
git add .
man <string>
git add .
cat <string>
systemctl start kubelet
vim
git clone <URL>
vi <file>
git clone <URL>
clear
vim <file>
sudo sed -i <directory> <file>
git clone <URL>
cd <directory>
npm install --global <string>
cd
npm i
cd <directory>
sudo dpkg -i <file>
ls
sudo python3 <file>
npm run devstart
grep -a -Po <string>
ls
shutdown -h <string>
git status
cd <string>
do-release-upgrade
mv <string>
nano <file>
fg
php <file>
sudo sed -i <directory> <file>
cd ..
docker rmi -f <string>
local <string>
vi <file>
git commit -m <string>
cd <string>
ls
ls
cd <directory>
unzip <file>
curl
cd <string>
ls
ls -lt
sleep <number>
mkdir <string>
mkdir <string>
cat <string>
sudo yum install <string>
ls
git pull
ls
git commit
cd ..
sudo apt-cache search <string>
wget <URL>
ls
clear
npm run test
cat <string>
bash <file>
vi <file>
grep <string>
git config --global <file> <string>
find . -name <file>
sudo apt-get install <string>
ls
apt-key adv --keyserver <string> --recv <string>
ls
sudo raspi-config
ps aux
exit
source <directory>
cd <string>
vi <file>
rm <string>
cut -d <directory> -f1 <string>
wget -r <URL>
read -p <string>
cd ..
ls
vim <file>
sudo service nginx restart
cd <string>
git add <string>
vim <file>
ls -la
exit
ls
sudo pacman -Syu
ls
clear
cd <string>
ls
sudo apt update
cd <string>
htop
cd ..
shutdown
cd ..
tr -c -d <string>
cd <directory>
cd
ping <string>
sudo apt-get purge <string>
ls -la
ls
sudo <file> <directory> -f
head -n <number>
ls
git fetch origin <string>
ls
cd ..
exit
mkdir <string>
ls
printf <string>
wc -l
git push --set-upstream <string> main
cd ..
git pull origin master
kill -9 <number>
git add.
cd <string>
git init
mkdir <string>
git push origin master
mv <string>
ls
git push -u <string> main
clear
git clone <URL>
ls -ALF
nc <number> <number>
ls
sudo apt install <string>
exit <number>
mkdir <string>
sudo apt dist-upgrade
cd <string>
source <directory>
cd <string>
ls
ls
sudo vim <file>
python3 <file>
mkdir -p <string>
vi <file>
git stash pop
less <string>
kubectl <string>
service apache2 reload
sudo pacman -Syyu --noconfirm
brew cask install <string>
sudo setxkbmap -layout <string> -variant <string>
ls
vi <file>
python3 <file>
let <string>
exit
vi <file>
fg
vim <file>
local <string>
tr <string> <string>
git remote add origin <URL>
ls
git
cd ..
ls
git checkout <string>
cd <string>
git commit -m <string>
git push
git add .
cd <string>
rm -r <string>
chmod <string>
vi <file>
wget <URL>
git config --get-all
wget <URL> -O <directory>
cd ..
less <string>
cp <string>
python3 <file>
npm run start
ls
sudo apt-get update
ls
su -
docker-compose stop <string>
find source -type <string> -print0
cd ..
ls
grep <string>
rake <string>
screen -r
vim <file>
sudo docker run -d -it -p <string> --name <string>
ls
ls -lsh
read -r -p <string>
vi <file>
nano <file>
nl
cd <string>
find . -type <string> -print0
exit <number>
unset <string>
cd <string>
git add <string>
clear
cd <string>
git push
npm config set prefix <string>
vim <file>
ls
ls
cd
vim <file>
cd
rake
history # <string>
cd <string>
read <string>
ls
grep -w <string>
code
git add .
sudo docker rm <string>
npm run bench -- -c <file> -n <file>
exit
ls
sudo ufw allow <string>
cd <string>
git pull -s <string> -X <string>
cd ..
ps -auxwf
vim <file>
docker-machine ssh <string>
ls
cd <string>
cd <string>
cd <string>
rm <string>
sudo pip3 install --upgrade <string>
cp <string>
python3 <file>
ls
git add .
gsettings set <file>
grep <string>
exit
ls
tar zxvf -
git cat-file -p <string>
clear
ls
cd <string>
apt-get install <string>
read <string>
ls
tail -f <directory>
ls
git remote add origin <URL>
sudo apt -y <string> $(sort -u <string>
vi <file>
cat <string>
sudo systemctl daemon-reload
dpkg -l
git checkout <string>
ls
ls
ls
sudo npm install -g <string>
apt-get update
git init
sudo su root
docker exec -it <string>
cd <directory>
sudo xbps-install -Su
exit
ls
git pull
clear
cd ..
ls
read -rp <string> <string>
mkdir <string>
cd <string>
npm run bench -- -c <file> -n <file>
apt-get install <string>
more <file>
ls
npm install -g <string>
docker-compose up
ls
ls
mkdir <string>
ls
setg RHOSTS.*
cd <string>
cut -c <string>
bash
mkdir <string>
ls
apt install -y <string>
source <directory>
cd ..
cd <string>
sudo vi <directory>
rm -rf <string>
ls
rm .git -rf
cd ..
ssh-add <directory>
fg
git commit --amend
ls
git add .
cd <string>
npm run coverage
sudo cp <string>
cd <string>
cd <string>
git co HEAD .
cat <string>
ls -l
exit
git commit -m <string>
ls
cd <directory>
cd ..
kubectl <string>
cd <string>
git add .
cd <string>
cd <string>
history
ssh-copy-id <string>
cat <string>
ls
top
git fetch origin\
git checkout <string>
rm <string>
docker build -t <string> --platform <directory>
htop
ls
killall <string>
help <string>
vim <file>
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
sudo pip3 install <string>
chmod <number> <directory> -R
cd
npm start
clear
npx create-react-app <string>
npm run coverage
git commit -a
less -R
clear
sed <directory>
mkdir <string>
ls
sudo apt-get update
ls
cd <directory>
free -m
vim <file>
exit
vi <file>
sleep <number>
git add <string>
ls -al
git remote add origin <URL>
ls
git ps -u <string>
curl <string>
tee -a <string>
exit <number>
grep <string>
cd <directory>
clear
clear
curl -sSLO <file>
gsettings set <file> <string>
grep -i <string> >files
then\
git stash -h
ls
vim <file>
docker ps -a --filter <string> --format <string>
vim <file>
code <string>
less <string>
clear
vim <file>
cd
ls
cd
git merge <string>
ls
rm <string>
vi <file>
sudo shutdown -h <string>
read -rp <string> <string>
git commit -m <string>
cd <string>
sudo chmod +x <string>
fg
docker volume ls -qf <string>
cd <string>
cd <string>
sudo chmod a+w -R <directory>
sleep <number>
ls
wget -q -O <file>
cd <directory>
sudo add-apt-repository <directory>
ls
git status
git clone <URL>
ls -la <directory>
git push -u <string> bryan-guner
pushd <directory>
git pull
sed -i <string>
cd <directory>
clear
ls
ls
chmod +x <string>
git co master
cd <string>
exit
rm <string>
ls
sudo systemctl start <string>
cd <string>
bash <file>
sudo rm -rf <string>
kubectl get pods -n <string>
ls -al
sudo vi <file>
vi <file>
npm audit fix
cd <string>
rm <string>
vim <file>
export <string>
npm install -g <string>
git status
docker-compose up -d --build
git commit -m <string>
vi <file>
find . -name <file>
git checkout master
ls
ls
bash <file>
capsctrl <directory> & disown
cd <directory>
cd <string>
ls
ls
cd
sudo snap remove pycharm-professional --classic
cd <string>
cat <string>
git add <string>
cd <string>
cd <string>
cd <directory>
awk <string>
git add .
ls
npm start
ls
ls -a
docker-compose up -d --build
grep <string>
dir
cd <string>
rm -rf <string>
cd <string>
sudo cp <string>
gpg --verify <file>
git pull
sudo apt -y <string>
grep <string>
sed -i <directory>
sudo reboot
vim <file>
ls
exit
tmux new -s <string>
kubectl get svc --namespace <string>
ls
ls -R
git fetch upstream
nano <string>
ls
rm -rf <string>
cd <directory>
cd <string>
npm install
git clone <URL>
cd
done
git clone <URL>
mv <string>
ls -altr
vim <file>
tar -cvf <string>
ls
cd <string>
cd <directory>
sudo -u <string>
git pull
ls
ls
clear
ls
curl -sSfL <URL>
rm <string>
ps
git stash
sudo apt remove <string>
yarn install
cd <string>
ls
ls
ufw --info
pkill <string>
ls
git status
vim <file>
cd <string>
exit
python3 <file>
ls
cat <string>
git commit -m <string>
sudo apt-get install <string>
python3 --version
mkdir -p <string>
ls
sudo supervisorctl status
git push
halt
touch <string>
git push
clear
cd <directory>
ls
sudo systemctl reload <string>
cat <string>
sudo ln -s <directory>
ls
ls
touch <file>
git push
git fetch origin\
vi <file>
git log -p <string>
sed -E -e <directory>
sudo chmod -R <number> <string>
sudo tail -f <directory>
cd <string>
git init
find . -iname <file>
git add .
cd <string>
cat <string>
grep <string>
vim <file>
cp <string>
git status
cd <string>
sudo apt-get install <string>
rm -rf <string>
cd <string>
git clone <URL>
ls -alrt
git commit -m <string>
git branch
tr <string> <string>
cd ..
ls
grep <string>
ls -l
type <string>
source <file>
ls
curl -fsSL <URL>
cd ..
ls
ls
cd <string>
rm <string>
then
ls
git remote
cd ..
clear
tmux
apt-get install <string>
exit
ls
ls
set --help
service apache2 reload
history # shows command line history
sudo dnf install <string>
vim <file>
python3 <file>
ls
fg
git push
exit
cat <string>
mv <string>
ls
git add <string>
ls
cat <string>
find . -empty -type <string> -print -delete
ls
mkdir <string>
ls
sudo apt-get update
cd <string>
git status
<directory> <directory>
cd <string>
cd <string>
sudo rm -rf <string>
ls
npm run start
vim <file>
ls
git pull
grep -r <string>
cd ..
git fetch origin\
exit
ls -R <string>
find . -name <string> -delete <string>
file
vi <file>
ls
pwd
exit
chmod +x <string>
ls
git push
rm <string>
cp -v <string>
cd <directory>
cat <string>
fg
python3 <file>
ls
source <string>
wget <URL>
git add <string>
egrep -e <string>
ls
sed <directory>
ls -lart
git commit -m <string>
cd
ls
clear
sudo apt-get install <string>
sudo cp -r <string>
vim <file>
ls
git add .
git stash list
sh
git init
ls
git checkout -b <string>
sudo apache2 <string>
wget <URL> -O <directory>
cd <string>
sed -i <directory>
sudo git config <file>
git status
vi <file>
git clone <URL>
ls
git lfs install
npm i <string>
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
ls
clear
git commit -m <string>
git checkout -b <string>
cd
sudo apt-get upgrade
cd ..
git push -u
history
ls
cd <string>
python3.11 <file>
clear
ls
git clone <URL>
fg
git commit -am <string>
code .
cd <directory>
grep -v <string>
python3 <file>
print <string>
cd <string>
clear
git push -u <string> master
vim <file>
git lfs install
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
sed -e <string> -e <directory> -e <string> \
git push
git diff
sudo <directory> --help
fg
ls
ls
vi <file>
rm <string>
clear
sudo ps aux
mv <string>
sudo systemctl status prometheus
<directory> <string>
git status
cd <directory>
bash <file>
sudo git pull
find . -empty -type <string> -print -delete
ls
vim <file>
ls
python3 <file>
git fetch
kubectl <string>
npm i <string>
cd <string>
sudo service nginx restart
unzip <file>
ls
cd <string>
vi <file>
exit
ls
ufw
sudo cat <file> <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
ls
clear
git init
cd ..
git commit -m <string>
cd
sudo rm -r <string>
sudo apt autoremove
ls
sudo apt-get install -y <string>
then\
cd ..
npx <string>
cd <string>
npm run start
setg RHOSTS.*
ls
sudo -u <string> psql
git stash -u --keep-index
cd ..
ln -s <string>
wget -O <file>
exit
python3 <file>
rm <string>
cd ..
ping <string>
fg
cd ..
ls
ls
ls
psql -h <string> -U <string> -d <string> -L <file> -a <string>
git push -u <string> master
ls
exit
cd <string>
cd
code .
xargs -0 <string> -i -e <directory> -e <directory> -e <directory>
cd ..
cd <string>
tee <file>
git tag <string>
cd <string>
apt-get update
cd <string>
history
clear
vim
mkdir <string>
git add
ls
ls
vim <file>
code .
history -d <string>
npm install <string>
ls
cd
git push
sudo pacman -S <string> --noconfirm
tmux new-session -d <string>
ls
cd <string>
pwd
git clone <URL>
git push
git status
sudo nohup --fork --logpath <directory>
ls -la
exit <number>
xargs -0 <string> -- <string>
git branch
rvm <string>
cd <directory>
sudo apt-key add -
cp <string>
clear
ls
cd <string>
git config <file> <file>
rm <string>
git commit -m <string>
cd ..
mkdir <string>
git add .
git push
chmod -x <file>
print <string>
cat <string>
ls
cd <string>
fg
git clone <URL>
vim <file>
telnet <string>
sudo chsh -s <directory>
npm install -g <string>
cd <directory>
sudo <directory> restart
cd <string>
vim <file>
vim <file>
git checkout <string>
git clone <URL>
vim <file>
cd <directory>
history -a
sudo apt-key add -
vim <file>
cd <string>
python3 <file>
kubectl apply -f <string>
cat <string>
cat <string>
read -p <string> -n <number> -r
<directory> -m <file>
npm start
cd <directory>
fg
sudo apt install <string>
sudo ufw <string>
ls
cd <string>
touch <file>
clear
sudo git pull
ls
sudo ls <directory>
ls
ls
pipewire
cd <string>
host <string>
clear
sh
cd <directory>
sudo sed -i <directory>
cd ..
cd
cd <string>
ls
ls
exit
vim <file>
git push origin master
find . -name <string> -type <string> -prune -exec <string> -rf <string>
ls
rm <string>
cd ..
ping <file>
git log
node <file>
ls
ls
ls
perl <file>
vim <file>
cd <directory>
fg
mv <string>
cd ..
npx <string>
ls
cd <string>
kill -SIGUSR1 <number>
dpkg --search <directory>
systemctl stop <string>
cd <string>
npm run pretty
cd <string>
curl -X <string> -d <string>
ls
sh
touch <file>
sudo lsof -n -i4TCP
find . -type <string> -name <string>
ls -l
cd <directory>
rm -rf <string>
git add <string>
sudo su -
ls
git status
ls
git push -u <string> master
cd <string>
ls
clear
fg
rm -rf <string>
cd <string>
fg
ls
exit
ls -a
npm install -g <string>
sudo start uwsgi
mv <string>
cd ..
ls
sed -e <directory>
cd ..
cd ..
ls
sed <directory>
top
sudo openssl req -x509 -nodes -days <number> -newkey <string> -keyout <file> -out <file>
df -hl
tmux attach
xargs sudo apt-get -y <string> --purge'
ls
sudo apt-get purge <string>
sudo sed -i <directory> <file>
cd <string>
sed -nE <string>
ls
ls
ls
sudo -H <string> install <string>
fg
wget <URL>
git add <string>
cd <directory>
ls
cd <string>
git pull upstream
npm -v
bash <file>
sudo apt install <string>
ls=<string> -ld <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
npm i <string>
ls -ltr
cd <string>
sleep <number>
cat <string>
sudo service <string>
vim <file>
cd <directory>
cd <string>
ls -lh
vim
clear
clear
xargs -L <number> -I <string> git update-index --add --cacheinfo <number>
sudo nvidia-settings -h
grep -Ev <string>
fg
fg
ls
tail -f <string>
sync
sudo -H <string> --version
ping <file> -A
git status
rmdir <string>
cd <string>
cd <string>
ls
git remote add origin <URL>
ls
pkill <string>
vi <file>
ls
cd ..
cd <string>
cd <string>
ls
scp <string>
mkdir <string>
git restore --staged
cd ..
make clean
ls
git clone <URL>
<directory> -m <file>
rg <string>
rm -rf <string>
sudo pacman -Rc <string>
sudo apt install <string>
ls
cd ..
cat <string>
ls
vim <file>
chmod <number> <string>
cd <string>
ls
ls
ls
rm -r <string>
cd <directory>
ls
mkdir <string>
cd <directory>
rm -r <string>
ls
git checkout -b <string>
let <string>
git add <string>
cd <string>
git log
cd <string>
ls
chmod <number> -R <directory>
ls
cd ..
cd <string>
vim <file>
ls
cd `xclip -o` <string>
sudo apt-get install <string>
git commit -m <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
cd <string>
git pull
cd <directory>
sudo apt-get install -y <string>
sed -i <string>
git commit -m <string>
find . -type <string> -print0
capsctrl <directory> & disown
cd <string>
cd ..
export <string>
egrep -Eio <string>
ls
git clone <URL>
ls -la
ls
sudo apt-get install <string>
sudo mkarchiso -v -w <string> -o <string> slim-iso
nano <file>
npm start
cd <string>
apt-get -y -qq <string> <string>
vim <file>
cat <string>
ls
touch <file>
sudo pacman -Rcns <string>
ls -la <directory>
git pull origin <string>
sudo su
vim <file>
ls
ls
git status
ls
git remote add origin <URL>
git push origin <string>
mkdir -P -public/images
ls
cd ..
ls
clear
vi <file>
ls
cd ..
sudo passwd <string>
cd <directory>
curl <string>
setg RHOSTS.*
yarn <string>
git init
rm <string>
clear
git branch
cd <string>
npm init
git push -u <string> master
git remote add origin <URL>
vim <file>
mv <string>
cp <string>
git add <string>
ls
env
git clone <URL>
git push
git pull
git push -u <string> master
cd
which <string>
python3 <file>
git config --color.ui <string>
git status
cat <string>
git add <string>
cd ..
ls
cd
git add .
cd <string>
ls
rm <string>
ls
cd <string>
rsync <directory>
cat <string>
cd <string>
sort -nr
cp <string>
ls
ls
vi <file>
which <string>
git add -u <string>
vim <file>
rsync --help
clear
ls
git pull upstream <string>
sudo ln -s <directory>
rm -R <string>
rm -rf <string>
clear
npm install pm2@latest -g
kill <number>
git commit
unzip <file>
rm -rf <string>
ls
pwd
docker exec -it <string>
git push
cp <string>
ls
git filter-branch --force --index-filter <string>
vim <file>
sudo python <file> --cascade=<file> <number>
vim <file>
git init
ls
mkdir <string>
git add <string>
git checkout <string>
exit
grep <string>
vim <file>
ls
cd <directory>
cd
ls -ltr
ls
exit <number>
cd <directory>
exit
rm <string>
cd ..
sudo systemctl start <string>
cd ..
sudo start uwsgi
git grep -E <string>
apt-get dist-upgrade -o <string>
cd <string>
vi <file>
tmux kill-server
git pull
git commit -m <string>
code <string>
vi <file>
cd <string>
rvm install <string>
clear
top
cd <string>
ls
egrep -ri <string>
sudo docker kill corrade
done
git checkout -d <string>
screen
reset
passwd
curl -sL <URL>
grep <string>
sudo apt-get update
git push origin master
git push
sudo nala install <string>
awk <string>
cd <directory>
df -h
cd <string>
python3.8
cd ..
npm run start
ls
source <file>
git push
curl <string>
trap exit <string>
more <file>
ls
git push -u <string> master
git add .
cd <string>
unset <string>
sudo npm start
cd <directory>
ss -N <file>
ls
git add -A
sudo pacman -Syyu
cd ..
git pull
code <string>
cd <directory>
unset color_prompt force_color_prompt
cat <string>
ls -l
git commit -m <string>
sudo pacman -Syu
sudo make uninstall
git remote add origin <URL>
git pull
git status
rm <string>
cd <directory>
vim
sort
ls
vi <file>
vi <file>
code .
sudo rm -rf <directory> <directory>
ls -a
ls
cd <string>
ls
ls
ruby -e <string>
npm install
cut -d <directory> -f <number>
sh <file>
vi <file>
cat <string>
vim <file>
ls
cat <string>
cd ..
then export <string>
fg
git commit -m <string>
reboot
cd <string>
cd ..
cd <string>
git add .
cp <string>
ls
mkdir -p <string>
git status
ls
fg
vim <file>
git add <string>
sudo apt-get install -y <string>
cat <string>
ls -lh
python3 <file>
sudo docker kill corrade
grep <string>
docker-compose up -d --build
ls
cp <string>
ls
grep <string>
rsync <directory>
which <string>
ls
npm install
sleep <string>
ls
sudo start uwsgi
git clone <URL>
ls
ls -l
cd <directory>
ls
docker rmi <string>
vim <file>
git add .
cd ..
cp -v <string> <directory>
git config --local --add <file>
cd <directory>
vi <file>
top
cat <string>
mv <string>
python3 <file> --model <string> --batch_size <number>
nano <file>
sudo apt-get install <string>
php -m
cd <directory>
rm -rf <string>
cd <directory>
rm -rf <string>
grep <string>
wget -q -O - <URL>
ls
git push origin main
source <string>
exit
ls -l
cd <string>
sudo python3 <file>
df # shows disk usage
done
ls
ls
cd <string>
git clone <URL>
cd ..
cd <string>
pwd
mkdir <string>
sudo reboot now
cd ..
sed <directory>
fg
git add .
ls -a
grep -iE <string>
cd
ls
cd <string>
fg
git merge --continue
rm -rf <string>
wget <URL>
sudo sed -i <directory> <file>
cd <string>
git revert --no-commit <file>
rm -rf <string>
ls
docker rmi <string>
htop
rm <string>
killall <string>
ls
cp <string>
git add <string>
cd <string>
date
find -name <string>
ls
ls
ls -R
sleep <number>
ls
curl <string>
su root
cd ..
git status
npm install
wget <URL>
ls
cp <string>
ls
ls
cd
vi <file>
sudo add-apt-repository -y <directory>
sudo pacman -S <string>
cd <string>
read -rp <string> <string>
ls -la
ps -lf
ls
git config --global <file>
cat <string>
kubectl port-forward <directory> -n <string>
clear
find <directory> -name <string> -type <string>
ls
git status
grep -r <string>
ls -alrt
npm install netlify-cli -g
git pull
cd ..
cat <string>
git pull
ls -ltr
sudo pacman -S <string>
git push -u <string> master
man <string>
ssh-keygen
nano <file>
cd <string>
npm i <string>
cd <string>
uniq
sudo service nginx restart
git add <string>
ls
exit <number>
cd <string>
ls
git add .
git config --global <file>
fg
cd <string>
cd ..
apt-get update
git remote -v
sudo pacman -Syyu <string>
cd <string>
ssh
sudo chown <string>
sudo ln -s <directory>
rm -r <string>
rm <string>
clear
ls -l
cat <string>
open <string>
ls
read -rp <string> <string>
cd <string>
cd
wget <URL>
ls
sudo apt-get install <string>
git clone <URL>
sudo service nginx restart
ls
cd
ls
grep <string>
git checkout <string>
sudo snap install heroku --classic
cd ..
git push -u <string> master
sudo apt purge <string>
cd <directory>
ls
sudo pacman -Q
clear
cd <string>
more <file>
nano <file>
sudo apt install <string>
ls
ls
find . -type <string> -name <string> -delete
vim <file>
ls
sudo npm install forever -g
ls
sudo tail -f <directory>
clear
cd <string>
git remote add origin <URL>
git pull
clear
ls
yarn install
ls
cd <string>
set
export <string>
sudo apt-get remove <string>
cat <string>
git config --global <file>
cd <directory>
cd
export
cd <string>
clear
git add -A
sudo apt update
vim <file>
sudo dpkg --add-architecture <string>
wget <URL>
vim <file>
git pull
find . -type <string> -name <string>
sudo -s -u <string> -H
cd ..
ls
ls -latr <directory>
sed <directory>
sudo chsh -s <directory>
ls
find . -name <string> -type <string> -exec <string> -c <directory> -- <string>
cd <string>
exit
exit
screen
sudo apt install -y <string>
sudo supervisorctl update
sudo apt-get update
rm -f <string>
sudo port <string>
git commit -m <string>
ls
ls
sed -e <directory> -e <directory>
ls
cat <string>
clear
ls
sudo chown -R <string>
exit
git clone <URL>
git status
ls -la
dpkg -l
clear
cd ..
ls
docker-compose
ls
curl <URL> -vvv
find . -iname <string> -type <string> -exec <string> -i <directory>
git remote add origin <URL>
ls
find $dir -type <string>
git commit -M <string>
cd
mv <string>
git checkout <string>
ls
cd ..
make clean
cd <string>
cd <string>
ls
sudo apt-get install <string>
clear
cd <string>
ls
sudo mkdir -p <directory>
git branch
sudo rkhunter --propupd
vim <file>
ls
vi <file>
source <file>
cd
cd <directory>
<file> program
ls -al
cd ..
git status
cd ..
npm run dev
ls
eval <string>
clear
git add .
ls -al
sudo apt install software-properties-common -y
exit <number>
cd <string>
ls
ls
touch <string>
git commit --amend -m <string>
kubectl get <string>
sudo docker rm corrade
pwd
cd ..
apt-get clean
ls
cd <string>
ps
sudo true
rm -rf <string>
umask <number>
history -a
vim <file>
done
sudo apt-get update
vim <file>
sudo apt-get install -y <string>
vi <file>
ls
cd <directory>
sudo usermod -aG <string> <string>
vim <file>
vim <file>
bash
ls
git pull
fg
clear
npm install
vi <file>
ls
unzip <file>
ls
ls
vim <file>
git init --separate-git-dir <directory>
cd <string>
man ln -ls
cd <directory>
git stash pop
nano <file>
cd <string>
ls
ls
git config --Omit --global <file>
chmod <number> <string>
ls
vi <file>
git status
git status
ls
sudo su
git push -u <string> main
git config --global <file> <file>
curl --silent -L <file>
git clone <URL>
grep -iIHrn --color=<string> <string>
git add .
grep <string>
cd <string>
cp <string>
cd <string>
cd <directory>
git checkout <string>
sudo mkdir <directory>
vim <file>
ls
clear
rm <string>
sudo sysctl -q -w <string>
cd <string>
clear
ls
perl <file>
clear
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
sh
exit <number>
systemctl --user <string> <file>
docker ps
open .
then\
git init
head
sudo mkdir <directory>
git clone <URL>
vi <file>
cd ..
vi <file>
git checkout master
ls
mkdir <string>
ls -la
history -d <string>
sudo systemctl status prometheus
wget <URL>
vim <file>
ls
cd <string>
curl -X <string> -H <directory> -d <string>
sudo apt install python2.7 --fix-missing
read -p <string> -r
ls .local -al --color
clear
fg
git status
cd <string>
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
ls -la <directory>
cd
curl -i <string>
python3
cd <directory>
cd ..
fg
curl -X <string> <URL> -H <string> -H <string> -H <string>
cd <string>
docker container -l
git commit -m <string>
clear
history -n
cat <string>
date
rm -f <string>
cd <string>
cd
sudo chmod +x <directory>
ls -lt
ls
docker-compose
ls
ssh -L <string> -N -f -l <string> <string>
tr -d <string>
cd <string>
vim <file>
sudo apt update
sudo dnf install -y <string>
sed -e <directory>
mkdir -p <string>
grep <string>
exit <number>
ls
snap install <string>
vim <file>
ping <file>
sudo apt install python3 -pip
cd ..
vim
vi <file>
git commit <file> -m <string>
ls -la <directory>
apt list --upgradable
ls
clear
npm i <string>
ls
ls
ls
cd ..
git status
sudo apt-get update
rm <string>
cd <string>
kubectl get pods --all-namespaces
find <directory> -name <string>
exit
ssh-keyscan <string>
more <file>
git status
ls
mount
git push --set-upstream <string> <string>
cd ..
docker run <string>
sudo mv <file>
read -e -p <string> -i <string>
docker-compose -f <string>
git commit -m <string>
ls
rm <string>
sed -i <string>
cd <directory>
chmod <number> <string>
git branch -v
python3
sed -i -e <string>
clear
cat <string>
ls
cd <string>
ls
cp <string>
git clone <URL> --depth <number>
sudo sed -i <directory> <file>
git branch
bash
sudo apt upgrade
find
git switch -c <string>
cd ..
pwd
cd <string>
read -r <string>
file --help
ls
rm -rf <string>
cd <string>
cd <string>
cd <string>
cd <directory>
cd ..
python <file> runserver 0.0.0.0:2016
git commit -m <string>
env
cd ..
git commit -m <string>
clear
ls
sudo docker kill corrade
cat <string>
curl <string>
rm -r <string>
sudo docker kill corrade
cd <string>
rm -R <string>
cd <directory>
cp <string>
ls
ls
vim <file>
exit
sudo reboot
cd <directory>
python3 <file>
history
clear
sudo setxkbmap -layout <string> -variant <string> -option <string>
byobu-tmux
rm
vim <file>
ip a
sudo python3 -m <string>
ssh <string>
ls
ls
sudo apt install curl -y
ls
curl <string>
wget <URL>
git push
exit
git commit -m <string> --no-verify
mkdir <string>
ls
cd ..
reboot
cat <string>
git add .
cp <string>
ps aux
git diff --name-only <string>
sudo python3 <file>
mv -r <directory>
ls
code .
find . -empty -type <string> -print -delete
ps ax
find <directory> -iname <file> -type <string> -exec <string> -c <string>
ls
tmux source-file
sudo xbps-install <string>
cp <string>
do\
ls -la
fg
clear
ls
vi <file>
fg
ssh <string>
ssh <string>
git status
grep <string>
vim <file>
rm <string>
rm -r <string>
mv <string>
ls
sudo shutdown now
ssh-keygen
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
rm -rf <string>
clear
clear
npm install
cd <string>
rm -f <string>
then\
cd <string>
rm <string>
mvn exec:java -Dexec.mainClass=<file>
cd <string>
cd <string>
ls
ls
git add <string>
cd <directory>
cd <directory>
cd <string>
cd ..
npm config set <string>
git config --global <file> <file>
sleep <number>
ls
git push
git clone <URL>
git merge <string>
ls
cd <string>
cat <string>
git commit -m <string>
ls
top
sed -i <directory>
cd <directory>
nano <file>
curl
ls
npm audit
cd <string>
python3 <file>
ls
cd
vim <file>
exit
sudo -s <string> <directory>
ls
cd <string>
cd <directory>
sed <directory>
mkdir <string>
fg
ls
git commit
sh
git clone --depth=<number> <URL> <directory>
cd
rm -f <string>
bash
ls
ls -l
ls
sudo apt install <string>
vi <file>
cd <directory>
ps aux
ls
ls
sudo apt-get install <string>
capsctrl <directory> & disown
grep -i <string>
rm -i --help
sudo service <string>
zgrep -r -i <string>
env
sudo shutdown
ls
ls
ls
cd <directory>
exit
ls
ps
find . -type <string> -size <string> -ls
sed <directory>
vim <file>
python3 --version
rm -rf <string>
ls
source <string>
wget <URL>
node -e <string>
read <string>
sudo rm -rf <string>
sudo pacman -S <string>
ls -a
ls
cd <string>
chmod u+x <string>
vim <file>
sh
ls
cd <string>
ufw allow <string>
sudo docker pull <string>
git diff
docker compose up --build
ls
ls
cd <string>
git commit -m <string>
cat <string>
find . -size <string>
ls
vi <file>
git clone <URL>
git status
git remote add origin <URL>
last
python3 <file>
cd <string>
cd <string>
source <string>
vim <file>
exit
git push --set-upstream <string> master --force
cat <string>
sudo curl <URL> -o <directory>
sed <directory>
ls
clear
cut -d <string> -f <string>
ls
less <string>
cd <string>
ls
cd <string>
rm <string>
git add <string>
ls
git commit -m <string>
npm run build
git push --set-upstream <string> master
cd ..
export <string>
cd <directory>
cd
cd
ls
chmod +x <string>
chmod u+x <string>
exit
git push origin
git config <file> <string>
exit
ls
cd ..
jq -r <string>
cat <string>
sudo add-apt-repository <string> [arch=<string> <URL>
docker run -d -p <string> <string>
ls
man <string>
sudo auto-cpufreq --install
git clone <URL>
fg
git clone <URL>
more <file>
ls
sudo lpadmin -x <string>
source <file>
npm i <string>
cd <string>
done
ls
aptitude install <string>
git --version
clear
sleep <number>
ls -al
fg
cat <string>
git commit -m <string>
npm install
cd ..
ls
cd ..
cd ..
cd <string>
sudo prime-select nvidia
git init
cd ..
ls
ls
subl <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
npm run
git add <string>
mvn -e <string>
cp <string>
ls
clear
ls
cd <string>
ls
mkdir -p <string>
source <file>
git remote add origin <URL>
vim <file>
touch <file>
ls
ls
ping <string>
ls
sudo sgdisk --new=<string> --typecode=<string> --change-name=<string> <directory>
ls
sudo apt-get update
mkdir <string>
ls
fg
cp <string>
cd <string>
screen -r <string>
clear
cd <string>
cp -r <directory>
ls
rm -rf <string>
git push
git commit
clear
ls
fg
rm -f <string>
touch <file>
cat <string>
nano <file>
ls -a
git status .
cd ..
done < <string>
clear
nano <string>
ip
fg
vim <file>
which <string>
ls
sed -i <string>
curl -s <string>
exit <number>
ls -R <string>
sudo ip route <string>
git add -A
sudo find <directory> -type <string> -size <string> -exec <string> -lh <string>
cd <directory>
python3 --version
cd
chmod +x <string>
mv <string>
vim <file>
ls
sudo apt-get update
sort -u
npm run frontend
du -h
cd <string>
mount
then\
ls
sed <directory>
sudo nala <string>
fg
read <string>
grep <string>
git push -u <string> master
git log
sudo apt update
cat <string>
ls
clear
mv <string>
ls
vim <file>
ls
cd <string>
cd <string>
git switch <string>
sudo make install
git add <string>
sed <directory>
git diff --no-index --color-words <string>
git push -u <string> main
cd <directory>
sudo apt install <string>
cat <string>
cd ..
read -rp <string> <string>
vim <file>
cd <directory>
sudo sed -i <directory>
ls
vi <file>
sudo sed -i <directory> <file>
vim <file>
docker rmi -f <string>
grep <string>
ls
chmod <number> <string>
cd ..
ls
fg
sudo apt upgrade
cp <string>
git config --user.name <string>
man <string>
ls
vi <file>
which <string>
ls
rm -r <string>
vim <file>
git checkout -
git status
git push
vim <file>
ls
cd <string>
cd ..
cd ..
sudo systemctl restart <string>
npm start
cd <string>
npm run test
sudo apt-get autoremove -y --purge <string>
clear
cd
psql -U <string> -h <string> nzdpu_wis
vi <file>
cd <string>
git status
bash
clear
ls -lh <string>
git status
ls
sudo cp <file> <file>
ls
git push
find . -empty -type <string> -print -delete
cd <string>
sleep <number>
find . -type <string> -name <string> -exec <string>
ls
git add .
cd
export <string>
sudo apt-get install <string>
rm <string>
cd <string>
sudo python <file>
git add <string>
cp <string>
git hist
npm config <string>
clear
ls
cd <string>
sudo npm install typescript -g
git
git status
cd <string>
sudo yum -y <string> <string>
fg
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
ls
cd <directory>
vim <file>
openssl rand -base64 <string>
ls
cd -
grep <string>
ls
ls
git add <string>
ls
rm -f <string>
ls -la
ls
cd <string>
cd ..
bash
sudo wget -O <directory>
cd
cat <string>
rmdir <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> --wrap=<string> --from <string> --to <string> <string> -o <file> <string> {} \
ls
cd <directory>
git push
clear
git filter-branch --prune-empty --index-filter <string>
rm <string>
curl <string>
exit
cd ..
cd ..
ping <string>
vim <file>
ls
cd <directory>
sudo git pull origin master
git status
ls
ls
git clone <URL>
clear
rm -rf <string>
ls
git log -n
grep <string>
cat
less <string>
find . -type <string> -name <string> -print0
cd <string>
ls++ -a
git commit -m <string>
which <string>
host <string>
git commit -m <string>
git init
mv <string>
git add -A
git commit --amend --no-edit --no-verify
npm install -g <string>
cd <directory>
pwd
docker-compose
code .
df -h
git clone <URL>
cd <string>
docker ps
cd ..
cd <string>
vim <file>
ls
ls
cd <directory>
sudo su -
ls
git add <string>
cut -d: -f <number>
sudo systemctl stop <string>
npm uninstall <string>
ls++ -a
ls
git config --global <file> <file>
mkdir -p <string>
clear
cd <string>
ls
sudo groupadd -f -r <string>
date
sudo apt install -y <string>
mkdir -p <string>
ssh <string>
tail -f <directory>
git status
ls
git clone <URL>
cd <directory>
cut -d',' -f1 <file>
git checkout <string>
sudo rm -r <string>
rm -R <string>
sudo make
vi <file>
wc -l
npm install -g <string>
vim <file>
git status
fg
sudo apt-get update
git remote set -url <string>
git remote
grep -EHnB <number> -A1 <string>
cd <string>
touch <string>
cd <string>
read -s -r -p <string> -n <number>
ls
cd ..
git status
exit
docker-compose logs
sudo rm -r <string>
fg
rm -r <string>
cd -
ls
ls
cd ..
git push
git diff
exit
cd
cd
vi <file>
cd <directory>
ls
cd <string>
export <string>
sed -i <string>
ls
git stash list
ps -ef
ls
cp -r <directory>
tmux kill-session -t <string>
exit
cd <string>
ls
export <string>
git rm --cached <directory> -f
head -n <string>
cd ..
git pull
ls
print <string>
git push origin PTS-578_redirects_not_updating_automatically --force
ls
cp -r <directory>
cd ..
vim <file>
cd
cd ..
cd <string>
fg
ls -l
cat <string>
sudo sed -i <directory> <file>
sudo dnf install <string>
ls
ls -la
unset color_prompt force_color_prompt
cd <string>
git help <string>
ls
grep -E <string>
fold -w <string>
ps axfu
cd <directory>
tail -f <string>
git status
docker login <string>
grep -n <string>
git status
ls
sudo gedit <string>
ls
rm -f <string>
ls
git pull origin development
git commit -m <string>
git add .
man <string>
sudo ifconfig en0 ether <string>
ls -al
print <string>
git pull
npm i -g <string>
else power_discharge=<string> -v <directory> -v <string>
cd <string>
ls
ls
python3 <file>
ls
apt-get install <string>
touch <string>
ls
npm run watch
read -p <string>
cat <string>
git branch -M <string>
wget <URL>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
command grep --color=<string> --no-filename -E <string>
ls
curl -s <string>
<directory> <string>
cd
git clone <URL>
nano <file>
ssh-keygen -t <string> -C <file>
mkdir <string>
less <string>
cat <string>
ls
cat <string>
clear
rm -r <string>
vi <file>
cd <directory>
ls -alh
npx shadcn-ui@latest add <string>
exit <number>
git commit -m <string>
xargs git push origin --delete
ls
cd <string>
ls
ls
wget <URL>
vi <file>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
sed -i <string>
git clone <URL>
cd <string>
git commit
mv <string>
sudo apt-key add -
cd <directory>
cd
sudo apt upgrade
ls
cd <string>
diff --hel
find <directory> -iname <file> -type <string> -exec <string> -c <string> --wrap=<string> --from <string> --to <string> <string> -o <file> <string> {} \
cd <string>
rm <string>
cp <string>
sudo ntpdate <string>
vim <file>
sudo vim <file>
touch <file>
man <string>
yarn
code <string>
curl -LO <string>
cd <string>
ls -l
mv <string>
pacman -S <string>
git checkout <string>
ps axfu
cd <string>
git add .
find . -size -5k
cp -rf <string>
script/build.sh
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
clear
cd <directory>
cd <string>
cd ..
ls -altr
git remote add origin <URL>
ls
sort -u
git co master <file>
git commit -m <string>
cat <string>
ls
cd
cd <string>
pwd
git status
sudo apt update
ls
ls -la <directory>
which <string>
ls
vim <file>
ls -al
sh <file>
vi <file>
git push --all <string>
fg
wget -q -O - <URL>
nano <file>
git branch 2> <directory>
git reset --hard <string>
find <directory> -type <string> -name <string>
sudo apt update
npm install <string>
vi <file>
git pull
xrandr
ls
rm -rf <string>
npm install --global <string>
ls
cd <directory>
git commit -m <string>
ssh <string>
clear
clear
git config --global <file>
sudo dnf install <string>
git commit -am <string>
git add .
cp -r <directory>
git add <string>
python3 <file>
sudo dpkg -i <file>
ls
ls -lh
cd <directory>
mkdir <string>
rm <string>
ls
top
sudo sed -i <directory> <file>
cd <directory>
ls
cd <string>
cd ..
cd <string>
vim <file>
exit
ls
git add .
git push origin master
mv <string>
cd <string>
sort -g
read -p <string> -r <string>
sudo gem install <string>
python3 <file>
sudo supervisorctl <string>
vim <file>
tar xvf <file>
grep -i <string> >files
exit
ls
cd
cd <directory>
ls
vi <file>
ls
ls
git pull
ls
ls
clear
cd <string>
vi <file>
ls
git status
cat <string>
systemctl status <string>
ls -alrt <string>
git branch 2> <directory>
cp <string>
fg
ssh-keygen -t <string> -P <string>
curl -I <URL>
mkdir <string>
ls
git pull
vim <file>
ls
git push --set-upstream <string> master
rm -f <string>
fg
ls
clear
ls
aptitude install <string>
rm <string>
npm run start
xargs git branch -d
vi <file>
cd ..
ls
cd <string>
clear
man <string>
exit <number>
ls
exit
cd <directory>
sudo nano <file>
cd <directory>
code <string>
git pull
git push
git merge
ls
docker
vim <file>
killall -SIGUSR1 <string>
sudo nano <file>
ls
rmdir <string>
sed <directory>
exit <number>
sh
ls
clear
read -s -n <number>
source <directory>
ls
ls
git reset HEAD^
cd <string>
sudo systemctl status <string>
df
cd <string>
cd <string>
sudo python3 <file>
ls
git commit -m <string>
cd <directory>
ls
ls
find . -name <file>
ls
then\
ls
ls
ls -la
git remote -v
vim <file>
cd <string>
rm <string>
sudo mkdir -p <directory>
npm run start
chmod <number> <string>
cd <string>
find . -type <string> -not -name <file>
clear
docker-compose up -d --build
find <directory> -config.def.h
npm install <string>
vim <file>
git pull origin master
apt-get -o <string>
service <string>
vi <file>
touch
git checkout <string>
apt list --upgradable
ls
git push -u <string> master
git stash
source <directory>
sudo systemctl status prometheus
vi <file>
ls
fg
vim <file>
docker rmi <string>
git pull
su root
sudo apt-get install <string>
docker commit <string>
sudo apt install -y <string>
clear
python3 <file>
cd ..
git remove <string>
ls
ls
eval <string>
cd <string>
docker rmi -f <string>
git add .
fg
grep -q <string>
git status
date
git status
git add --dry-run <file>
ls
vim <file>
ls -l
pwd
touch <string>
ls -al
grep <string>
git commit -m <string>
cd <directory>
cd ..
vim
git init
git status
ps aux
cd <string>
cd <string>
ls
apt-cache search <string>
vim <file>
docker push <directory>
git status
vim <file>
killall <processname> # kill all processes with the name
find <directory> -type <string> -iname <string> -exec <string> --target-directory <directory>
sudo apt -y <string> $(sort -u <string>
sudo python3 <file> install
cd <string>
dotnet
history -c
tmux
rm <string>
ls
sudo update-alternatives --install <directory>
nano <file>
more <file>
cd <directory>
ls -al
cd ..
ps axfu
exit
sudo update-alternatives --install <directory>
git pull
python3 <file>
sudo ln -s <directory>
unlink <string>
git commit -m <string>
sudo visudo
wget -q -O <file>
sed -i -e <string>
clear
git branch -D <string>
sudo find <directory> -type <string> -exec <string> -v <string>
cd <string>
sudo systemctl disable <file>
find . -type <string>
kubectl --namespace <string>
mv <string>
git commit -m <string>
ls
source <string>
pkill <string>
paste --h
ls
read -s -n <number>
tmux -a
ls -la
ls
ls
cd <string>
sudo python <file> --cascade=<string>
ls
cd
grep -i <string>
git add .
cat <string>
du -sh <directory>
cd ..
python3 <file>
cd <string>
sudo apt-get update
vim <file>
vim <file>
git push
touch <string>
sudo docker run hello-world
grep -Eom1 <string>
clear
sudo aptitude <string>
ls
ls
sed -e <directory> -e <directory>
ls -la
ls -al
git lfs <string>
vim
cd <directory>
clear
cd <string>
exit <number>
find . -empty -type <string> -print -delete
uname -a
sudo apt-get install <string>
sudo poweroff
exit
npm http GET <URL>
git push
exit
cd ..
ls
python -mjson.tool
sudo apt install <string>
git commit -m <string>
cpio -p -d -v <string>
ls
ls
git pull
cd <string>
fg
npm-recursive-install
ls++ -a
ls
exit
cd <string>
python3 <file> -- <string> @CAMERA=<string> <string>
sudo git push -u <string>
mv <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
rm <string>
ssh-keyscan -t <string>
ls
pwd
git status
chmod +x <string>
git commit -m <string>
git commit -m <string>
git push -f
grep -i <string>
ls
exit
sudo systemctl status <string>
git checkout -b <string>
vim <file>
ping <string>
sudo update-alternatives --config <string>
clear
ls
git add .
done
sed -e <directory> -e <directory>
ls
sudo yum install -y <string>
cd <string>
sudo apt install <string>
curl -s -L <URL> -o <file>
cd <string>
ls
pwd
ls -lsA
sudo apt-get --assume-yes <string> <string>
fg
exit
sleep <number>
cd <string>
ls -la
source
cd
exit
cd <directory>
byobu-tmux
vim <file>
sudo sed -i <directory>
exit
touch <file>
ls
cd <string>
cd ..
cd <string>
vim <file>
cd <string>
cd <directory>
exit <number>
git push
git init
git add <string>
curl <string>
sudo apt-get help
done
cd ..
ls
cd <string>
less <string>
npm run start
vi <file>
ls -l
git add <string>
fg
curl -fsSL <URL>
exit
git branch
ls
sudo vi <directory>
clear
grep <string>
git commit -m <string>
docker-compose up -d --build
wget <URL>
vim <file>
sudo pacman -S <string>
sed -e <string> -e <directory> -e <string> \
mkdir <string>
npm run test
find . -empty -type <string> -print -delete
sudo gedit <string>
ssh <string>
ls
ls -l
ls -la
cd ..
git pull
ls
sudo npm run <string>
grep <string>
git commit -m <string>
clear
git diff
ls
git push -u <string> master
cd ..
git commit --amend
rm -r <string>
ls
cd <directory>
ls
cd ..
git commit -v -a -m <string>
find . -name <string> -delete
ls
cd <directory>
git pull
cd <string>
podman build -t <string>
read <string>
sed -n <string>
ls
git status
sudo ifconfig en0 ether <string>
bash <file>
sudo apt-get install wget -y
rm <string>
exit
sudo easy_install <string>
touch <file>
ls
sudo apt install <string>
vim <file>
sudo reboot
sed -e <directory> -e <directory>
ls -la
ls
ls
tar -xvf <file>
ln -s <string>
exit
scp <string>
git pull
sudo apt-add-repository <directory>
git config --global <file> <file>
ls -alrt
mv <string>
wget -t0 -c <string>
chmod <number> <string>
sudo pacman -S <string>
open .
tail -f <directory>
ls
ls
cd <string>
bash
fg
git ci -m <string>
git push
ls
cd <directory>
sudo systemctl enable --now <string>
cd ..
ps -ef
sudo apt install <string>
git status
curl -fsSL <URL>
ls
sudo bash -
ls -altr
rm -f <string>
screen -rd <string>
vim -r <file>
ls
ls
git commit -m <string>
sudo chown -R <string>
cd ..
ls
clear
git clone --depth <number> <URL>
cd <string>
ls
vi <file>
git pull
grep <string>
cd <directory>
exit
clear
docker images
ls
cd <string>
git push
cd <string>
grep <string>
wget <URL>
rm <string>
git push origin master
python3 <file>
which <string>
ssh-add <directory>
cat <string>
git init
python3 <file>
vim <file>
git status
clear
curl -O <URL>
vim <file>
ls
sudo apt install <string>
vi <file>
cd <string>
ls -la
byobu-tmux
sudo pacman -Syyu -y
sudo cp <string>
ls
sed -E -e <directory>
sudo apt-get install <string>
npm install <string>
ls
fg
apt install -y <string>
git add <string>
pacman -S <string>
sleep <number>
git --version
ls
ls
ls
cd ..
clear
mv <string>
history
npm i
cat <string>
grep <string>
sudo ls
sleep <number>
read
sudo apt upgrade -y
exit
cd <directory>
vim <file>
cd <string>
ls
cd <string>
git commit -m <string>
sudo make install
clear
vim <file>
git status
git commit -m <string>
git commit -m <string>
ls
ls
git commit -m <string>
tar -xvf <file>
ls
source <directory>
ls -d <string>
cd
cd <directory>
vim <file>
vim <file>
sudo apt get <string>
vi <file>
pwd
cd
ls
sudo nano <directory>
ls
exit <number>
git commit -am <string>
mkdir <string>
ls
grep <string>
ls
ls
git push
npm run test
sudo netstat -ntulp
rmdir <string>
sudo ln -s <directory>
cp -r <directory>
cd <string>
sudo i2cdetect -y <number>
ls
sudo pip3 install cython -i <URL>
vim <file>
rm <string>
cd ..
ls
npm test
curl --unix-socket <directory>
head -n <number>
curl <string>
cd ..
git status
awk <string>
ls
cat <string>
chmod <string>
sudo tail -30 <directory>
ls
git add <string>
vim <file>
sed <directory>
git add .
vim <file>
git pull
htop
read -p <string>
ls
cd <string>
sudo supervisorctl <string>
vi <file>
docker-compose up -d
cp -r <directory>
cd <string>
ls
cd <string>
htop
vim <file>
git commit -m <string>
htop
sudo docker kill corrade
composer
python <file> runserver 0.0.0.0:2016
mkdir <string>
ls
git status
sh -c <string>
sudo sudo light -U <number>
sudo apk add <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd <string>
cd <directory>
cd <directory>
cp <string>
cd <string>
dpkg -i <file> - <string>
ip addr
ls
ls
ls -H
ls
git commit -m <string>
fg
npm install --save <string>
ls
vim <file>
vi <file>
git status
ping <string>
ls
git push
mkdir <string>
exit
strings hidden_variable -e <string>
exit
cd
sudo su
cd ..
sudo
ls
docker ps
sudo systemctl start <string>
rm -r <string>
grep -i <string> >files
ls
vim <file>
sudo systemctl restart <string>
vim
export <string>
ls
ls -l
systemctl --user <string> <file>
reboot
sed -i <directory> -e <directory> -e <directory>
sudo apt-get install <string>
grep -a -i -E -o --no-filename <string>
ls
clear
python3 <file>
sed -ri <string>
exit
ls
git commit -m <string>
cd <string>
cd <string>
git add <string>
git commit --allow-empty -m <string>
sudo rm -r <string>
clear
git push -u <string> master
cd <string>
hwclock --systohc
top
sudo apt -y <string>
grep -rsnI --exclude=<string> --exclude=<string> --exclude=<string> --exclude=<string> --exclude=<string> --exclude=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude-dir=<string> --exclude=<string> --exclude=<string> --exclude=<string> --exclude=<string> --exclude=<string> --color=<string> <string>
git commit -m <string>
ls
sudo apt-get update
git push
ls -la <directory>
sudo sed -i <directory> <file>
cp <string>
yarn add <string>
ls
ls
git push -f
cd ..
ls
ls
git commit -m <string>
ls
pwd
sudo lvresize -l <string>
git log
git checkout <string>
ls
cat <string>
cd <directory>
vim <file>
ls
mkdir -p <string>
ls -la
ls
less
cd ..
vi <file>
sed -i <directory>
grep -hr -e <string>
cd <directory>
sudo vim <directory>
ls
curl -fsSLo <file> --create-dirs <string>
ssh -CqTnN -D <string>
cd <string>
mv <string>
git push -u <string> master
vim <file>
git checkout <string>
chown <string>
vi <file>
cat <string>
cd <string>
docker build -t <string> -f <directory>
fg
git status
cd <string>
vi <file>
rm <string>
git filter-branch --index-filter <string>
cd ..
exit
cd <string>
git config <file> <string>
ls ..
fg
ls
git push
cp <string>
vi <file>
sudo cat <directory>
git add <string>
open .
mkdir -p <string>
npm run start
ls
rm -rf <string>
cd ..
npm run start
rm <string>
rm <string>
make clean
xargs -r <string> rm
vim <file>
sudo pacman -Syyu
git log
ls
ls -la
mkdir <string>
cd <string>
grep <string>
ls
git commit -m <string>
ls
scp <string>
git revert -m <string>
sudo apt-get install <string>
cd ..
cd <string>
ls -l
git commit -m <string>
ls
ls
man
cd ..
ls
sed -i <directory>
ls
git switch <string>
git init
git push
docker ps -a
git status
ls
cp <string>
git status
cd <string>
git remote -v
do\
git commit -m <string>
rm -r <string>
cat <string>
sort
git push
ls
ls
vim <file>
awk <string>
grep <string>
python3 <file>
sudo rm -rf <string>
ls
ls
rm -rf <string>
ls
perl <file>
exit
ls
ls
cd <directory>
git clone <URL>
clear
vim <file>
sudo sed -i <directory> <file>
sudo apt upgrade
grep -o <string>
cd <string>
clear
chmod <number> <string>
git mv <string>
git init
tar -xzfv <file>
ln <file> <string>
ls
scp <string>
rm
done
ls
curl -sk -w <string>
ps aux
ls -t
npm install -g <string>
yarn
mkdir -p <string>
curl <string>
cp <string>
sudo shutdown -r <string>
git commit -m <string>
docker pull <string>
git status
cd <directory>
ls
sudo sed -i <directory> <file>
git add <string>
vim <file>
byobu-tmux
cd ..
reboot
curl <string>
mv <string>
find . -empty -type <string> -print -delete
sudo sed -i <directory> <file>
sleep <number>
git init
mv <string>
history
cd ..
ls
git commit -m <string>
git push
rm -rf <string>
done
exit <number>
fg
clear
cd <string>
df -h
cat <string>
pwd
ls -ca
sudo zypper se <string>
exit <number>
ls
git add .
git commit -m <string>
ls
ls -G
sudo make install
git add <string>
cd <directory>
git config --global <file>
exit
read -r <string>
bash <(curl -L <directory>
exit
sudo apt install <string>
cd <string>
ls
dir
tar -zcf <file>
cd <string>
git commit -am <string>
patch -p1 <string> <file>
clear
clear
clear
npm start
git add .
wget -q -O <file>
ls
npm run start
sudo <directory> -s <file>
git status
cd <directory>
git commit -a -m <string>
git rebase
mkdir <string>
npm run test
pwd
npm i
sudo yay -h
apt install <string>
sudo pacman -Rs <string>
vi <file>
ps # prints a line of information about the current running login shell and any processes running under it
sudo sed -i <directory> <file>
wget <URL>
cd ..
npm run build
sudo git clone <URL>
find <directory> -type <string> -execdir <string>
git commit --amend
git status
exit
ls -l
sed -n <string>
vim <file>
vim <file>
ls -altr
git push -u <string> master
mv <string>
cd <string>
shutdown
cd <directory>
done
source <string>
git config --global <file> <string>
git add .
git add <string>
ls
cd <string>
pacman-key --init
curl <URL> -u <string> -H <string> -G
docker exec -it <string> bash
apt-get -o <string>
python3.11 <file>
clear
cd <string>
git remote add origin <URL>
exit
git push
wget <URL> -O <file>
nano <file>
git commit -m <string>
vim <file>
ls
rm -rf <string>
docker-compose up -d --build
vi <file>
sudo update-alternatives --install <directory>
cd <string>
source <directory>
pwd
ls
cd <string>
ssh-add -K <directory>
pwd
vim <file>
git push
read -r <string>
fg
vim <file>
git remote -v
ls
cd <string>
ls
sed -E -e <directory>
sudo apt update
apt-get install --no-install-recommends -y <string>
git commit -m <string>
cd ..
mv <string>
sudo chown <string>
ls -la
sudo shutdown -r <string>
cd <string>
pwd
ls -la
exit
clear
docker-compose stop <string>
then\
git commit -m <string>
cd ..
git log --all --name-only --no-color
curl -sH <string> -G --data-urlencode <string>
export <string>
fg
tmux a
cd
htop
clear
git diff
ls -la
ls
ls
vim <file>
git push -u <string> master
cd ..
cd <directory>
wget <URL>
ls
git add <string>
rm -rf <string>
rm -R <string>
cd <directory>
clear
ls++ -a
git clone --depth <number> <URL>
ls -tra
git rebase -i <string>
grep -i <string>
cd
ls
bash <file>
ls
grep -Fx -f <string>
git status
clear
cd ..
sudo dpkg -i <file>
cp -v <string> <directory>
cat <string>
sudo apt update --force
clear
sudo service nginx reload
ls
rm -r <string>
date
apt list --upgradable
git status
ls
git commit
ls
cd <directory>
wget <URL>
sudo apt update -y
clear
rm -f <string>
git checkout --../.bash_history
cd <string>
rm -rfv <string>
npm install
find . -type <string> -exec <string> <directory> {} +
git pull origin master
mv <string>
python3 <file>
vim <file>
cd <string>
fg
pacman -S <string>
cd ..
ls
cd ..
exit
ls
ls
cd <string>
mkdir <string>
touch <file>
vim <file>
systemctl status <string>
sudo su
cd <string>
ls -ald <string>
find $1 -depth -exec <string> -c <string>
exit
git push
exit
git fetch origin
git push
find . -name <string> -type <string> -print -delete
cd ..
find . -empty -type <string> -print -delete
git clone <URL>
ls -lAF
sudo ufw status
vi <file>
ls
cp -a <string>
bash
cd ..
cat <string>
ln -s <string>
ls
pkill <string>
cd <string>
git push
git clone <URL>
script/build.sh
ls
git status
rm -rf <string>
cd..
ls
cd
clear
git clone <URL>
cd ..
exit
mv <string>
docker images
exit
sudo cp <string>
cd ..
git push -u <string> master
git add .
clear
fg
sudo -H <string> install <string>
fg
kubectl apply --filename <file>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
curl <string>
git status
cd <string>
ls
ls
mv <string>
<directory> <string>
cd
git add .
git pull
ls
cd <string>
cd
git add .
ls
date
sudo sed -i <directory> <file>
exit
ls
unset <string>
sed <directory>
git rev-list --all
man <string>
sudo yum install <string>
ls
sudo find <directory>
git checkout
ls
grep <string>
docker stop <string>
ls
man <string>
date <string>
sort -u <string>
vim <file>
npm install
cd <directory>
cd <string>
rm -r <string>
cd ..
rm <string>
ls
sed -i <string>
cd <directory>
kubectl create serviceaccount --namespace <string>
git init
find . -size <string> -a -print -a -exec <string> -f <string> \
cd <string>
rm -rf <string>
pwd
su root
sed --version
sudo pacman -Syu
set -o <string>
tty-clock --center
cd <string>
cd
unzip <file>
print <string>
git pull -f
ls -lt
npm run coverage
git push -u
bash
git add <string>
ls
clear
sudo cp <string>
man <string>
mkdir <string>
chmod <number> -R <directory>
sudo -u <string> psql -x -c <string>
find . -empty -type <string> -print -delete
ls -la
git add <string>
cat <string>
find . -name <string> -exec <string> -c <string>
cd <string>
cd <string>
cd <string>
sleep <string>
type <string>
mkdir <string>
rm -r <string>
ls
yarn add <string>
python3
cd ..
read -rp <string> <string>
then unset <string>
rm <string>
ls
fg
git push
git push -u <string> master
tail -n <string>
ls
journalctl -b
grep <string>
sudo ufw status
git checkout -b <string>
git status
cd <string>
mv <string>
clear
git log --name-only <file> --pretty=<string>
less <string>
grep <string>
awk -F\" <string>
git branch -M <string>
sudo python <file>
ls
ls
xrandr -update
vim <file>
exit <number>
curl -sSL -o <string>
git commit -m <string>
mv <string>
ls -lrt
less <string>
git init
fg
git rebase <string>
sudo shutdown now
sudo rm -r <string>
du -sh
cd
wget <URL>
ls -laF
cd <string>
cd <string>
npm install <string>
sudo nano <string>
git status
top
cd ..
sudo ldconfig
ls
cd
cd ..
sudo apt-get dist-upgrade
diff <file>
cd
clear
ls
rm -rf <string>
cd ..
git status
python3.8
vim <file>
ls
cd <string>
export <string>
ls
mv <string>
cd <directory>
git status
ls
git branch -M <string>
exit <number>
touch <string>
fg
clear
ls
clear
su -s{USER}
sed <directory>
git commit -m <string>
git checkout master
cd <directory>
git commit -m <string>
ls
cp --help
sudo systemctl enable <string>
ls
ls
clear
rm -rf <string>
git clone <URL>
exit
xargs -L1 <string> clone
clear
history
vi <file>
cd <directory>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
git pull
git add -A
ls
ls -l
cd <string>
vi <file>
chmod u+x <string>
vim <file>
xargs -i <string> -r -i <string>
cd ..
sudo apt-add-repository <directory>
mkdir <string>
ls
vim <file>
cd <directory>
rm <string>
vim <file>
clear
sudo stop uwsgi
docker images
find . -name <file>
history -a
ls
ls -lh
ls
ls
cd <string>
git init
man <string>
set <string>
git rebase --continue
open -f -a <directory>
ls
screen -r <string>
sleep <string>
find . -iname <string> -exec <string> -rf <string>
perl <file>
ls
fg
date <string>
cp -source -destination
ls
vim <file>
cd
python3 <file>
clear
find . -iname <file>
sudo nano <file>
sudo service nginx restart
cut -d' <string> -f <string>
python3.11 <file>
cd <string>
setg RHOSTS <file>
ls
ls
vim <file>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
rm <string>
sudo modprobe <string>
exit <number>
cp -r <directory>
find . -name <file>
cd ..
cd ..
cd ..
cd <directory>
vim <file>
sudo git commit -m <file>
cd <string>
more <file>
ls
cd <directory>
clear
ls
git push
git checkout -- <string>
git add .
ls
mkdir <string>
git status
mkdir <string>
vim <file>
ls -la <directory>
ls
cd ..
sudo apt-get install python-rosinstall -y
ls
cd
cd ..
ls
mkdir <string>
ls
sudo npm run <string>
rm <string>
grep -E <string>
sudo kill -9 <number>
rm <string>
sudo sed -i <directory> <file>
ls
cat <string>
cd <string>
rm <string>
sudo start uwsgi
mkdir <string>
vi <file>
cd <string>
ls
ps aux
find . -name <file>
git status
code .
cd <directory>
grep <string>
cd <directory>
ls
wget -q -U <string>
ls
cd <directory>
type -a <string>
git rm <string>
ls
mv <string>
cat <string>
open .
vim <file>
rm -r <string>
cd -
rm <string>
sudo systemctl restart nginx
git log --pretty=<string>
man <string>
ls -a <string> <string>
rm -fr <string>
ls
sed -E -e <directory>
cd <string>
git init
ln -s <string>
sudo start uwsgi
ls
cd <string>
ls -lrt
sudo pacman -S <string>
cd <string>
man <string>
vim <file>
git status
cd ..
cd <directory>
cd <string>
cd
sudo xrandr --output <string> --same-as <string>
sed -e <directory>
git fetch
git commit
ls
ls
git init
sudo node <file>
open <string>
wc -l
git add .
cd <directory>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd <string>
vi <file>
clear
grep -n <string>
cd <string>
code .
git push origin main
cd <string>
docker run -v <directory> -w=<directory> -p <string> --rm -it <directory>
cd <string>
cd <string>
git push --set-upstream <string> master
ls
sudo pacman -S <string>
git info
ls
go test
sudo ufw status
exit
make -j <string>
git push origin <string>
exit
ps -eal
ls ..
rm -f <string>
nano
sudo systemctl status <string>
git commit -am <string>
git rm --cached <string>
rm <string>
npm start
bash
sudo su
grep -i <string> >files
ls
vim <file>
clear
ls
git stage <string>
ls
curl <string>
sudo <directory> -s <file>
sudo pacman -Syu
ls
grep -e <string>
python3 -v
mkdir -p <string>
git commit -m <string>
ls
df # shows disk usage
source <file>
sudo chmod +x <string>
cd <string>
systemctl restart <file>
sed -E -e <directory>
cd <string>
cd
git add <string>
grep -v -e <string>
ssh-keygen -t <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
sudo docker kill corrade
cd <string>
ls
cd <directory>
vim <file>
git diff
sudo stop uwsgi
ls
git switch <string>
sudo docker run -it --name <string> --entrypoint <string> -u <string> --privileged --rm -v <directory>
ls
ls
cd ..
git branch -d <string>
git status
git add <string>
fg
cd <directory>
less
cd <string>
unset color_prompt force_color_prompt
npm create vite@latest
python3 --version
ls
docker-compose up -d --build
rm <string>
ls
exit
sudo journalctl -u <string> -xe
cd <string>
cd <directory>
vim <file>
docker ps
git commit -m <string>
ls
sudo vi <directory>
mvn clean
ls
clear
tar -zxvf <file>
sudo apk add <string>
vim <file>
ls
ls
ln -L <string>
vim <file>
fg
ls
cat
cd <string>
ls
cd ..
code .
ls
sudo vi <file>
clear
git add .
exit
ls -a
cp <string>
vi <file>
git config --remove-section <string>
ls
more <file>
ls
sudo port <string>
mkdir <string>
ls
cat <string>
cd ..
git push
clear
brew install <string>
wget -c <URL>
ls
ping <string>
vim <file>
sudo service nginx restart
cd <string>
python3 <file>
code .
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
sudo docker exec -it <string>
top
ls
cd <string>
ls
ls
find <directory> -name <string> -exec <string> -rf <string>
ps
rm <string>
find src
git pull
git push
nl
grep <string>
grep <string>
git add .
git add .
exit
git remote add origin <URL>
vi <file>
ls
sudo sed -i <directory> <file>
screen -S <string>
git diff <string>
dpkg -i <file>
python3 <file>
vi <file>
git pull
npm start
cd <string>
ls
git add <string>
set -o <string>
ps aux
cd <directory>
exit <number>
git pull -s <string> -X <string> <string>
unset color_prompt force_color_prompt
npm start
git pull
rm -rf <string>
cd <string>
set <string>
exit
clear
ping <string>
git commit -am <string>
sudo apt install <string>
ls
make
chsh --list-shells
cd
git push
killall <string>
wget -O <file>
git push
ls
node <file>
cd <directory>
g++ -std=<string> <file> -o <string>
sh
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
git push
git push origin master
git config --global <file> <string>
ls
git clone <URL>
exit\
ls
less <string>
git push
rm <string>
git pull
mv <string>
cd <directory>
env <string>
ls
vim <file>
exit
npm run pretty
cd ..
read -rp <string> <string>
vi <file>
npm init
sh
dpkg
sudo systemctl stop <string>
ls
git add .
ls
ss
sudo ln -s <directory>
sh <file>
ls -la
tmux a
git add <string>
ln -s <string>
ls
vim <file>
rm -r <string>
sudo apt-get install -y <string>
ls
perl <file>
sudo apt-get purge -y <string>
sudo apt-get install <string>
rm <string>
cd <directory>
grep <string>
cd
sudo -i
sudo chmod +x <string>
ls
<directory> <string>
chmod +x <string>
sudo apt update
wget -r <URL>
sudo mkdir <string>
git status
history
sleep <string>
read -s -n <number>
export <string>
npm run frontend
code .
ls
mkdir -p <string>
vi <file>
git add <string>
cd <directory>
sudo ldconfig
pwd
sleep <number>
sleep <number>
sudo apt remove <string>
cd ..
git status
ls
sed <directory>
pwd
ls
fg
ls
mv <string>
pkill picom
touch <file>
sudo apt-get install <string>
mkdir -p <string>
clear
vi <file>
cd <string>
git add <string>
ls
cd <string>
clear
cd ..
ls
grep <string>
cd <directory>
grep -v <string>
ls
ls
find . -empty -type <string> -print -delete
chmod <number> <string>
top
cp <string>
rm -rf <string>
<directory> <string>
apt-get -y <string> <string>
sudo zypper ve -r <string>
git add -v <string>
mv <string>
bash <file>
git clone <URL>
grep -i <string> >files
cp -f <string>
cd <directory>
clear
cd ..
ls
ls
git add .
cd <string>
cd <directory>
ls
tail -n <string>
cd
git fetch
nano <file>
cd -
rm <string>
grep -q <string>
grep <string>
cd <string>
cd ..
less
clear
vi <file>
cd <string>
cd <string>
sudo make install
clear
ls
sudo apt remove --auto-remove <string>
ls
git status
git add .
sudo gem install <string>
sudo apt install <string>
dpkg-shlibdeps: <string>
ls
bash
npm start
cd <directory>
cd <string>
ls
cd
fg
git config --global <file>
cp <string>
scp -r <string>
ls
ls
cd <string>
fg
cd <string>
git init
xrandr --listmonitors
docker build -t <string>
cd <directory>
mv <string>
sudo poweroff
tail -f <string>
tail -f <string>
find . -type <string> \( -name <string> -o -name <string> -o -name <string> -o -name <string> -o -name <string>
git init
sudo chmod <number> <string>
cd <directory>
sed -i <directory>
ls -l
rm <string>
ls
vim <file>
cd <string>
cd <string>
cd <string>
ls
find . -empty -type <string> -print -delete
mv <string>
pwd
ls
sudo rm -f <directory>
cd <directory>
ls
mkdir <string>
vi <file>
npm install --save-dev <string>
ls
cd
clear
git commit
git stash
ls
git log
rm
ls
ls
ftp <string>
ls -lht
cd <string>
python3 <file>
cd ..
exit
ls
cp <string>
sleep <number>
npm install --force
ls
ls -la
ls
git status
npm i <string>
git status
cd <directory>
cd OneDrive\ -\ <string>
npm-recursive-install
grep <string>
npm start
sudo apt update
chmod <number> <string>
git commit -m <string>
sudo apt-get update
git push -u <string> main
docker pull <string>
cd <string>
cat <string>
ls
pwd
fg
exit
sudo vi <file>
locate <string>
sudo xbps-install -Sun
ps aux
cd <string>
killall <string>
wget -O <file>
clear
sort
cd <string>
ls
sort file <string>
rm <string>
clear
git bisect <string>
clear
ls
clear
ls
ls
nano <string>
cd <string>
ls
vim <file>
read <string>
clear
mkdir <string>
ls
ls -la
vi <file>
ls
ls
read -ra <string>
git add <string>
ls -a
git add <string>
clear
git merge <string>
mv <string>
vi <file>
cd <directory>
cd <string>
ls
exit
df -lh
dpkg -C <string>
cd <directory>
git status
ls
cd ..
sudo python <file>
npm run build
ls
cd <string>
clear
ls++ -a
git push
cd <string>
ls -ltr
sudo dnf install <string>
cd <directory>
ls -la
touch <file>
git pull
git init
cd ..
git add
clear
ls
git -j
ls -la
sudo ifconfig <string>
git rebase --continue
vim <file>
sudo apt install <string>
git pull
git add <string>
fg
rm -rf <string>
git commit -am <string>
exit <number>
find
npm install <string>
sudo sed -i <directory> <file>
vim <file>
git status
cd <directory>
bash
grep <string>
mv <string>
grep <string>
mkdir <string>
ssh <string>
cd ..
cd <directory>
git branch -M <string>
sed -i <string>
git push origin main
git remote set-url origin <string>
cd <directory>
git remote add origin <URL>
clear
cd
cd <string>
git checkout <string>
cd <string>
git commit -m <string>
git commit
find -name <string>
clear
ls
git clone <URL>
sudo sed -i <directory> <file>
cd <string>
ls
npm i <string>
ls
git add <string>
ls
fg
rm <string>
ls -l
cd
ls
curl --silent <string>
git checkout -b <string>
ls
git add .
netcat
rm <string>
sudo python3 <file> install
cd -P <string>
mount
git add .
wget -r -np -k <URL>
sudo ls <directory>
sort -u
do\
exit <number>
vi <file>
ls
ps ux
cd <string>
ls -l
exit
df -lh
shutdown -h <string>
ls
ls
sh -c <string>
vim <file>
sudo systemctl status <string>
ls
cd <directory>
ls
ls
git commit -m <string>
ls
git branch -M <string>
ls
cd <string>
ls
cd
git status
sed -i <string>
git push
cat <string>
rm -rf <string>
then\
git clone <URL>
ls -ltr
vim <file>
sudo youtube-dl --update
ls
cd <string>
cd <directory>
git init
sudo nano <string>
pkill <string>
grep -r <string>
exit
sudo make
cat <string>
ls
ls
exit
cd <directory>
nano <file>
sudo sed -i <directory>
cd ..
vim <file>
git rm -rf <string>
rm <string>
sudo apt-get update
sudo rm -rf <string>
vi <file>
git push
sudo apt-get update
ls
ls
ps aux
wget <URL> -O -
rm -rf <string>
ls
npm start
exit <number>
cd <string>
ls
cd <string>
python3 <file>
ls
env
cd <string>
mv <string>
git commit -m <string>
code <string>
cd <string>
vim <file>
sed <directory>
ls
rm <string>
rm <string>
wget -r -A <URL>
ls
curl <string>
find -name <string>
cd <string>
cd <directory>
tar -czf <file>
apt --installed <string>
ls
grep -c <string>
ls
sudo pip install <string>
pacman -S <string>
vi <file>
sudo snap install code --classic
git push origin <string>
cd <string>
npm install <string>
exit
service apache2 restart
kill <number>
read <string>
sudo tail -f <directory>
export <string>
wget -qO - <URL>
sed <directory>
git remote add origin <URL>
rm -r <string>
rm <string>
exit
rm -f <string>
git commit -m <string>
git stash --include-untracked
find . \( -name <file> -o -name <file> -o -name <file> -o -name <string> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file>
python3 <file> -sI <string> -sM <string> -dM <string> -dI <string> -v
git commit -m <string>
vi <file>
vi
sudo ip route <string>
rm <string>
ls
exit
cd
ls
ls -la
cd <string>
ls
clear
bash -
git branch -M <string>
sudo apt-get update
ls
grep -i <string> >files
vim <file>
cd <directory>
reset
touch <string>
git push
git add .
wget <URL>
vim <file>
ls
cd <string>
clear
vi <file>
cd <string>
mv <string>
sudo sed -i <directory>
eval <string>
sed <directory>
ln -s <string>
nano <string>
docker images
grep <string>
ls
curl -sL <URL>
clear
ls
git status
git add .
cd <string>
chmod <string>
ls
cd ..
git push -u <string> main
ls -la
cd ..
rm <string>
ls
ls
ls
sed -r <directory>
sudo nix-collect-garbage --delete-older-than <string>
pwd
ls
git status .
ls
vim <file>
node <file>
mkdir <string>
ls
read -p <string>
cat
ls
cd <directory>
git add -vv <file>
sudo groupadd -f -r <string>
ls
rm <string>
cd <directory>
ls
git add <string>
ls
sudo apt install <string>
sudo groupmod -n <string>
tmux source <file>
ls
sudo reboot
vi <file>
git fetch upstream -v
touch <string>
du
ls
ls
git remote
ls
cat <string>
git status
xargs
cd <string>
git clone <URL>
python3 <file> --epochs <number>
cd <string>
sudo emacs <string>
git clone <URL>
find $PATH -mindepth <number> -maxdepth <number> -print
ls
ls
sleep <number>
python3.11 <file>
git clone <URL>
wget -O <file>
cd <string>
nano <file>
ls
tail -100 <file>
cd <string>
mkdir -p <string>
cd <directory>
ps aux
ls -lAF
cd ..
sudo chown -R <string>
ls
git add .
cd <string>
sudo sed -i <directory> <file>
vim <file>
rm -f <string>
rm <string>
else\
git push
git reflog expire --all
tail -10 <string>
cd <string>
code .
ls
ls
cd <directory>
ls
find
rm -f <string>
vi
exit
sudo make uninstall
git push origin <string>
git pull
cd <string>
cd <string>
apt-get install python-certbot-nginx -y
ls
then\
alias brightness_status=<string> -a <string>
vi <file>
ls
cd <directory>
ls
git commit -m <string>
vi <file>
docker logs -f <string>
rm <string>
clear
python3 <file>
cd <string>
ls
ls
code .
vim <file>
ls
less -X <file>
git branch -M <string>
npm audit fix
pwd
rm -rf <string>
npm i prettier -g
cd <string>
git stash
npm i -D <string>
man <string>
ls
ls
which <string>
grep -H -R -o -n -i -I <string>
git remote set-url origin <string>
sed -e <directory> -e <directory>
git add .
grep <string>
ps aux
sudo journalctl -u <string> -xe
git rebase -i <string>
cd <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
date
rm -r <string>
cd <string>
sudo python <file>
grep -ir --include <file>
sudo xbps-install <string>
git init
ls
find . -type <string>
source <file>
git status
cp -r <directory>
grep -Fxf <string>
else\
npm start
cd ..
cd
ls
clear
git co master
sudo reboot
ls
git commit -m <string>
sysctl <string>
ls
sudo apt update
tar -cvpzf <directory> -C <directory>
ls -l
git status
find . -name <string> -type <string> -prune -print -exec <string> -rf <string>
ls
vim <file>
cd <string>
cd <string>
sudo wget -qO- <URL>
cd ..
sudo systemctl disable <file>
ls
grep <string>
git push
rm -r <string>
git commit -m <string>
bash <file>
rm -P <string>
cd <directory>
xargs sed -i <directory>
cd <string>
vi <file>
vi <file>
git status
npm install -g <string>
git add .
cd <directory>
grep --include=<string> -rnw <directory> -e <string>
sudo python3 <file>
ls
systemctl list-units
vim <file>
ls
vi <file>
cd ..
vi <file>
cd
ls
git tag
ls
ls
sudo do-release-upgrade -d
fg
ls
ls
git config --global <file>
ls
tmux a
ls++ -a
cd <string>
pwd
sudo sed -i <directory> <file>
cat <string>
cat <string>
docker exec -it <string> bash
vim <file>
ls
vi <file>
ls -ls
exit
git reset --hard <string>
sudo pacman -Rscn <string>
ls
sudo mv <string>
chmod +x <string>
vi <file>
ls
ls
exit
cd <string>
nano <string>
sudo apt-get clean
clear
time <string>
touch <file>
v -
cd <string>
ls
git diff
ls -la
sudo systemctl daemon-reload
ping <string>
vim <file>
git init
mv <string>
ls
vi -t <string>
ssh <string>
cd ..
sudo mkswap <directory>
ls -la
ls
apt-get install <string>
git clone <URL>
ls
ls
vim <file>
xargs -n1 <string> -p
git branch -M <string>
git init
cd <directory>
ls
grep -i <string>
ls
pwd
ls
ls
curl -L <directory> -o <directory>
python2
cd <string>
ls
git add -A -- <string>
mv <string>
npm test
sudo docker images
find . -empty -type <string> -print -delete
sudo lvcreate -L <string> -s -n <string>
git pull --rebase
cd <string>
sudo shutdown now
cd <string>
npm install --global <string>
chmod u+x <string>
git clone <URL>
git reset <string>
cat <string>
su - <string>
cd
cd <string>
ls
sed <directory>
cd ..
cd ..
cd <string>
sudo sed -i <directory>
cd <directory>
journalctl
npm install netlify-cli -gnpm <string> netlify-cli -gnpm <string> netlify-cli -g
git clone <URL>
git status
chmod <string>
git commit -m <string>
ls -l
ls
ls
yarn add <string>
rm -rf <string>
curl -X <string> -d <string> -d <string>
git add <string>
docker-compose up
sudo apt-get install <string>
cd <string>
ls
sudo apt-get install <string>
sudo nano <file>
vi <file>
chmod <number> <string>
cd ..
perl -ne <string>
sudo apt-get update
vim <file>
git pull origin master
more
then\
vi <file>
sudo nano <directory>
sed -r <directory>
git commit -m <string>
ls
cd <string>
sudo reboot
mv <string>
clear
ls
awk <string>
cd <string>
cd <string>
more <file>
chmod +x <string>
cd <string>
ls
clear
cd ..
cd <directory>
ls
cd <string>
git status
cd ..
cd <directory>
mkdir <string>
git clone <URL>
rm -rf <string>
ls -i <file>
cp <string>
git init
ls
cat <string>
ls
ls -la
git log
sudo apt autoremove
git add <string>
ls
then\
ls
git stash list
rails <string>
nano <file>
git init
clear
git commit -am <string>
sudo docker kill corrade
git push
mkdir <string>
git status
cd <directory>
npm run build
ls
git fetch
nano <string>
cd <string>
ls
ls
ls -lih
git pull --no-edit
curl -sL <URL>
rm -rf <string>
git add .
ls
sudo docker volume ls
grep <string>
cd ..
git commit -m <string>
ls
awk <string>
sudo python3 <file> install
pwd
sudo apt update -y
top
sudo systemctl status <string>
cd <directory>
pwd
python3 --version
set -ex
tmux
ls
man -i
git clone <URL>
vi <file>
clear
sudo apt update
sudo <directory> --prefix=<directory> --modulefilesdir=<directory>
find . -name <string> -exec <string> <string>
clear
ls
cd <string>
fg
find . -empty -type <string> -print -delete
cp -r <directory>
history
fg
ls
clear
vi <file>
sudo vi <directory>
ls
ls
wget <URL>
rm <string>
mv <string>
<directory> <string>
npm run test
pwd
chmod +x <string>
vim <file>
ls -lh
vim <file>
bash --version
mkdir <string>
ls
git commit -m <string>
ls
sudo nano <string>
sed <directory>
cd
vi <file>
ps -a <string> selects all processes with a tty except session leaders
sed <directory>
cd <string>
npm run register
vim <file>
grep <string>
cd ..
git add -v -f <string>
ls -a
mkdir -p <string>
vi <file>
git commit -m <string>
rsync <directory>
npm install -g <string>
done
ls
mvn instal -D <string>
vim <file>
cat <string>
unset <string>
ls
touch <string>
git add .
top
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cd..
ls
ls
sh -c <string>
git push origin master
curl -H <string> -H <directory> -X <string> <directory> -d <string>
exit
ls
vim <file>
npm start
cd <string>
ping <file>
ls
clear
ls
chown -Rv <string>
vi <file>
apt-get update
ls
pwd
read -r <string>
npm start
vim <file>
curl <string>
yarn add <string>
sudo pacman -Fy
sudo apt-key add -
vi <file>
cd <string>
git push -f <string> <string>
git commit -m <string>
sed -i <directory>
read <string>
cat <string>
cd ..
vim <file>
git commit
exit
ls
mv <string>
cd <directory>
git push
ls
cd <directory>
git status
git diff <string>
sudo npm i
cd ..
ls
git remote set-url origin <string>
git add -A
sudo apt-get install <string>
ls
rm <string>
git rebase <string>
cd <directory>
git push
vim <file>
mkdir <string>
mv <string>
cd ..
ls
nc <number> <number>
ls
cut -d <string> -f <number>
sudo apt --fix-broken <string>
sudo vim <directory>
npx -v
git status
cd <string>
git clone --mirror <string>
exit
git checkout <string>
git add <string>
npx create-react-app <string>
vim <file>
rm <string>
sudo sed -i <directory>
ls -snf <directory>
sudo dnf install <string>
ls -ltr
mkdir <string>
ps ax
find . -type <string> -empty -delete
ls
printf <string>
read
git branch -M <string>
git clone <URL>
cd <directory>
tail -n <string>
su - <string> -c <directory>
hostname
git commit -m <string>
python3 --version
vi <file>
ssh -X <string>
fg
cd <directory>
rsync -arv --exclude=<string> <string>
df -H
ls
ls
kubectl get service hello-node --watch
ls
sudo docker rm <string>
top
ls
cd <string>
ls
cd <string>
htop
curl <string>
vim <file>
npm i <string>
top
clear
npm install
vim <file>
git add .
git add .
cpio -p -d -v <directory>
pwd # tells you where you currently are
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
mkdir -p <string>
git config --global <file> <file>
cat <string>
sudo hostname <string>
git checkout -b <string>
python3 <file>
cd <string>
git push origin master
ls
nano <string>
ls
pwd
vim <file>
grep <string>
git commit -m <string>
docker-compose --version
cd <string>
git clone <URL>
ls
apt search <string>
cd
ls
cat <string>
vi <file>
ls
history -c
cd <directory>
cd ..
ls
exit
top
vim <file>
sort
read <string>
ls
ls -la <directory>
python3 <file>
rm <directory> -rf
cd <directory>
chmod <number> <string>
sudo openvpn --config <directory>
reset
tmux a
exit
npm i
sh
cd ..
cd <directory>
mkdir <string>
find . -empty -type <string> -print -delete
git commit --amend --reset-author
ls
cd <directory>
git commit -m <string>
ls
cd <directory>
git bisect <string>
tar zxf -
find . -name <file>
sudo dd <string>
read -p <string>
vi <file>
ls
exit
git remote add origin <URL>
sudo docker ps -a
exit
less <string>
ls -l
ls
fg
docker images -f <string> -q
cat <string>
git add <string>
ls
ls
vim
ls
cd <string>
cd ..
cd <string>
ls
git add .
ls
ssh <string>
cat <string>
sed -E -e <directory>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
sed <directory>
rm <string>
dpkg -x <file>
exit
sudo lsof -i <string>
python3.11 <file>
git rebase <directory>
ls
git fetch
rm <string>
vi <file>
sed <directory>
cd <string>
ls
cd
ls
rm <string>
ls
sed -ri <directory> -- <string>
clear
cat <string>
kill -9 <number>
sudo stop uwsgi
sudo wget <URL>
rsync -a <string>
ls
clear
dir
man -af
sudo unzip <file> -d <directory>
cd ..
less <string>
clear
cd <string>
ls -a
git fetch
ls
cd <directory>
git add <string>
sed <directory>
ls
sudo pip install <string>
npm install -g <string>
cd <string>
sudo apt update
ls
cd <string>
clear
sudo cp -rf <string>
sudo touch <file>
ls
cd <string>
cp <string>
grep -E <string>
sudo nvidia-xconfig -a --cool-bits=<number> --allow-empty-initial-configuration --enable-all-gpus
ls
cd ..
grep <string>
git coomit -m <string>
sudo jpico -nonotice -linums -nobackups <string>
cd <string>
read -r -d <string> <string>
rm -rf <string>
rm -rf <string>
git status
git stash pop
sudo dpkg --set-selections <string>
ls
cp -rp <string>
cd <string>
vim <file>
cd <directory>
npm install
ps
vim <file>
ls
sudo rm -rf <string>
cd ..
cd <string>
git pull
vi <file>
ps auxf
exit <number>
rm <string>
ls
cd <string>
cd <string>
cd <directory>
ls
mv <string>
cd <directory>
ls
sudo make install
pwd
head
sudo vim <file>
ftp <string>
ls -l
nano <string>
ls
then
sudo sudo -u <string>
git commit -m <string>
vi <file>
cd <string>
sudo apt -y <string>
git branch -avv
node <file>
vim <file>
cd ..
mv <string>
ls
python3.11
git clone <URL> --force
vi <file>
chmod <number> <string>
cp <string>
ls
shuf <file>
sudo apt-get -y <string>
cd ..
git status
find . -type <string> -name <file> -print0
vim <file>
cd <directory>
ls
git checkout --orphan <string>
sudo apt-get purge <string>
python3 <file> <number> --country <string>
git reset <string>
ls
sudo stop uwsgi
git commit -m <string>
git remote add origin <URL>
git stash
top
git add <string>
top
find . -name <file> -type <string> -print -deletefind <string> -name <file>
git commit -m <string> --amend
git -C <string>
mkdir -p <string>
exit
git commit -m <string>
clear
git pull origin master
snap uninstall <string>
git remote add origin <URL>
cd ..
nc -l <number>
git help <string>
cd <directory>
sudo journalctl -u <file>
xargs -n2 <string>
vim <file>
cd <directory>
cd <directory>
cd ..
sleep <number>
sed -i <directory>
mkdir -p <string>
sudo apt-get upgrade
git init
ls
rm <string>
cd <directory>
ls
wget <URL>
sudo ifup <string>
rm <string>
cd <string>
read -r <string>
cd <string>
python3 <file>
sudo sed -i <directory> <file>
locate
sudo fdisk <directory>
ls
git commit -m <string>
mvn clean <string>
git push -u <string> master
ping <file>
<directory> <string>
cd..
ls
ls
cd <string>
ls++ -a
ls
cd <string>
ls
find . -name <string> -type <string> -print
cd <string>
git commit -m <string>
nano <string>
du -skh <string>
sudo dpkg-reconfigure locales
exit
sudo nano <directory>
exit
git add .
rm <string>
clear
exit <number>
fg
mkdir <string>
then\
export <string>
sudo apt upgrade
curl --silent -L <file>
source <string>
sudo git add <string>
git config --global <file> <file>
sudo nano <file>
sudo apt install <string>
ls
clear
cd <string>
git clone <URL>
git branch -a
sudo snap install <string>
sudo apt autoremove -y
rm -rf <string>
brew install <string>
ps
git status
ls
mkdir -p <string>
cd ..
sudo apt install <string>
git status
ls
git stash
ls
cd <directory>
cd
ls
history
curl <URL> -k
cd <string>
clear
ls
cd ..
cd <string>
ls
ls
cd <directory>
clear
git commit -m <string>
sudo nginx -t
cd <string>
find . -empty -type <string> -print -delete
mv <string>
wget $url --user-agent=<string> --load-cookies=<file> --output-document=<string>
apt-get install <string>
cp <string>
git status
ls
ls
ls -la
sudo apt update
ls
git commit -m <string>
ls
sudo udisksctl power-off -b <directory>
exit
vim <file>
sudo apt-get update
chmod <number> <string>
sudo ip route add <string>
sudo start uwsgi
sh -s -- -b <string>
cd <directory>
sudo apt-get install -y <string>
ls
ls -l
git branch -M <string>
ls -altr
cd <string>
cd <string>
cp <string>
ls
ls
mkdir <string>
git status
cd <string>
vi <file>
cd ..
clear
git add .
touch <file>
ls
cd <string>
bash <(curl -s <URL> -y
ls
tail -f <directory>
npm ERR! node -v <string>
vi <file>
cd <string>
git init
python3 <file>
ls
git add <string>
cd <string>
sudo systemctl status <string>
git init
gpg --recv-keys <string>
cd ..
cd <directory>
ls -lh
find . -type <string> -name <string>
cd <directory>
exit <number>
fg
clear
ls -alh
ls
git push
cd <string>
sudo vim <directory>
git commit
git stash pop
cd <string>
sudo pacman -S <string>
sudo apt update
cd <string>
ssh dirlic@10.18.0.39 -p <number>
ls
exit
kubectl rollout status deploy eventing-controller -n <string>
sudo apt-get install <string>
ls
cd <string>
cd <string>
ls
ls
sort -u
ls
read -p <string>
ls
docker container ls
sudo <directory> restart
pwd
git init
mvn install
fg
cd ..
git status
git add <string>
exit
exec swaymsg -q <string> --no-startup-id <string> -c
ls
cd <string>
ls -a
rm <string>
cd <string>
cd <string>
npm ls
cat <string>
git commit -m <string>
git switch <string>
which <string>
npm run start
python3 <file>
rm -rf <string>
ls -la
ps aux
git fetch
python3 <file>
sudo sgdisk --new=<string> --typecode=<string> --change-name=<string> <directory>
sudo groupdel <string>
cd <string>
docker-compose up -d --build
rm <string>
ps -aux
chmod +x <string>
vim <file>
docker images
man <string>
fg
cd ..
git remote -v
cd <string>
sudo pacman -S <string>
ls
cd <string>
git status
sudo systemctl daemon-reload
git commit -m <string>
vim
xargs -L1 -I'{}' <string> <file>
vi <file>
git commit
pwd
cd <string>
cd <directory>
npm install
exit
source <file>
sudo rm -rf <directory> <directory>
sudo sed -i <directory> <file>
git clone <URL>
vim <file>
cd <string>
find . -perm <number>
cp <string>
code .
find . -type <string> -exec <string> -i <directory>
git init
rm -rf <string>
cd <string>
ls
git diff
ls
rm -rf <string>
time go run <file>
clear
exit
sudo apt-get install <string>
ls -la
tail -f <directory>
cd <string>
ssh dirlic@10.18.0.39 -p <number>
tr <string>
ls
cp -v <string> <directory>
find $CODE -name <file> -print0
ls
ls
cd <string>
grep <string> --color=<string>
git push
mkdir <string>
cp --help
sudo rm -rf <string>
docker ps
ls
clear
cd
cd <string>
vim <file>
npm install
ls
git add -v --dry-run <string>
cd <directory>
cd <string>
sudo apt update
yarn install -D <string>
cd <string>
cd <string>
vim <file>
vi <file>
git status
fg
ls
ls
sudo chown <string>
sleep <number>
sudo pacman -S --noconfirm <string>
ls
cd <string>
mkdir <string>
man <string>
vim <file>
git clone <URL>
script/build.sh
npm i <string>
sudo pacman -Syu --noconfirm
wc -l
cat <string>
git fetch origin\
docker ps -a
sudo sed -i <directory> <file>
sudo sed -i <directory> <file>
sudo usermod -aG <string>
git status
npm run coverage
vim <file>
clear
exit <number>
clear
vim <file>
bash <file>
xrandr --output <string> --off
git commit -m <string>
wget --no-check-certificate <string>
ping <file>
nano <file>
cd <directory>
ls
exit
git init
vim <file>
find . -name <file>
cd ..
patch -p1 <string> <file>
perl <file>
docker stop <string>
ls
cp <string>
cd <string>
sort
exit
ls -al
ls
vim <file>
sudo vim <file>
vim <file>
cd <string>
cd <string>
ls
ls -la
git commit -m <string>
python3 -i <file>
vim <file>
history
du -hc --max-depth <number>
ls
find . -type <string> -iname <file>
ls
vi <file>
git init
mkdir <string>
clear
cd <directory>
which <string>
ls
sudo update-rc.d -f <string>
sudo apt install <string>
ls
vim <file>
curl -fsSL <URL>
python3 --version
git init
done
vim <file>
docker cp <string>
git add --all
node -v
ls
vi <file>
apt install -y <string>
mkdir <string>
git add <string>
ls -la
ls
xargs sudo aptitude purge -y
rm -rf <string>
cat <string>
exit
cd <string>
git add .
clear
grep <string>
cd <string>
cd <directory>
cd ..
python3 <file> --model-path <file> --conf <string> --img-size <number>
exit
docker rmi <string>
git config --add <file>
cd <string>
grep -win -B <number> <string>
su
vim <file>
git push
php artisan <string>
vi <file>
vim <file>
git push -u <string> master -f
sudo mkarchiso -v -w <string> -o <string> slim-iso
python3 <file>
mv <string>
head -y <file>
mkdir <string>
cd <directory>
wget -r <URL>
killall <processname> # kill all processes with the name
cd <string>
cd <string>
find . -name <string> -print
cd <directory>
git commit -m <string>
sudo pacman -S <string>
curl -LO <string>
cd <string>
ls
ls -latr
ssh-copy-id <string>
sudo apt update
chmod +x <string>
ls
sudo ufw status
pwd
dir
ps aux
grep <string>
sudo rm -rf <directory> <directory>
git push
sudo visudo
ls
git checkout <string>
fg
curl -sSf <string>
sudo update-alternatives --set <string>
cd <directory>
ls
vi <file>
ls
exit
cd <directory>
sudo docker rm corrade
cat <string>
cd
df -h -T -t <string> -t <string>
nl
exit
pacman -S <string>
cat <string>
systemctl status <string>
sudo apt-get update
cd <string>
ls
sudo snap info <string>
cd <directory>
clear
ls -latr
export <string>
grep <string>
git status
clear
git diff <string>
shutdown -h <string>
find <directory> \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <string> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file>
git commit -m <string>
ps
git remote update --prune
sudo fdisk -l
cd -
sudo apt update
cd <directory>
ls
sudo vim <file>
systemctl disable <string>
code .
npx -v
ls
sudo ln -s <directory>
vim <file>
cd <string>
cd <string>
git pull --rebase
cd..
clear
sudo ufw enable
git push origin master
vim <file>
cp -r <directory>
cd ..
git remote set-url origin <string>
cd <string>
fg
ls
touch <string>
cd <string>
git config --global <file> <file>
curl <URL> -k
chmod +x <string>
git push --set-upstream <string> master
ssh <string>
rm <string>
cd <directory>
which --all
git clone <URL>
man <string>
code .
cd <string>
ls
cat <string>
exit
grep -r <string>
sudo nano <directory>
ls
python3 <file>
cd <directory>
cd <string>
setg RHOSTS.*
git add <string>
vim <file>
clear
cd <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
git push
chsh -s <string>
mkdir -m700 <file>
ls
cd ..
cd
source <file>
vi <file>
vi <file>
cd
chmod u+x <string>
fg
mkdir <string>
cd <directory>
ls
sudo yum install <string>
cd <directory>
cp <string>
ls -al
git status
tar -xf <string>
time <string>
ls
source <string>
egrep -ri <string>
mkdir <string>
cat <string>
fg
exit
sudo pip3 install <string>
git add .
sudo add-apt-repository <directory>
cd <string>
mkdir <string>
cd
git commit -m"update"
type <string>
vim <file>
tmux a
ls
cd <string>
ls -latr <directory>
rm <string>
done
curl -o <string>
ls
curl -k -l -s <URL>
vi <file>
ls
apt-get install -y <string>
cd <string>
cd <directory>
cd <directory>
git add <string>
vim <file>
vim
exit
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
cat <string>
mvn -e <string>
exit <number>
cat <string>
ls
rm <string>
df -lh
cd <directory>
sudo python <file>
vim <file>
rm <string>
history -a
ls -alrt
ls
cd <directory>
cd <string>
sudo apt-get install <string>
ls
git branch -d <string>
mv <string>
node <file>
vi <file>
ls
sudo npm install -g <string>
Docker <string>
vim
ls -l
date
cat <string>
curl -o <string> --location <URL>
ls -l
git tag --format=<string> <string>
exit
wget -qO- <URL>
git add <string>
ls
tail -n <string>
sudo zypper se <string>
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
reset
exit
cd <string>
git remote add origin <URL>
git add <string>
npm install
touch <string>
git clone <URL>
cd <string>
mkdir -p <string>
sudo <directory> -o <directory>
git add <string>
ls
print <string>
git checkout <string>
cd <directory>
ls
find -name <string>
clear
vim <file>
vi <file>
<directory> <directory>
sed -i <string>
cd <string>
open <string>
ls
ln -s <string>
ls -l
sudo apt update
git push
git branch
ls
git commit --amend --no-edit --no-verify
less <string>
cd <string>
cd <string>
vim
sudo shutdown now
ls
ls
dpkg --get-selections
sed <directory>
sudo dpkg -i <file>
vi <file>
cat <string>
git push
vim <file>
vim <file>
cd <string>
rmdir <string>
ls -1
ping <string>
df -h
vi <file>
cd <directory>
vi <file>
cd <string>
man <string>
git add .
ls
npm run dev
local <string>
read -p <string>
ls
tmux
grep <string>
vim <file>
git commit -m <string> --author <string>
ls
git status
cd <string>
cd
ls
ls
sed -i <string>
cd ..
ls
rm <string>
git clone <URL>
wget -q <directory> -O <directory>
git commit
sudo ifconfig en0 ether <string>
vi <file>
sleep <number>
vim
sudo apt-get -y <string>
shutdown
ln -s <string>
git remote add origin <URL>
read -p <string>
cd <string>
sudo mount -o <string>
<directory> <directory>
ls
git switch main
git pull
curl -s <string>
top
fg
curl <URL> -o <string>
mkdir <string>
sed <directory>
apt-cache search <string>
cd
ls -la
git remote add origin <URL>
find . -type <string> -exec <string> -i <directory>
clear
ls -al
ls
tar xf -
df
mv <string>
sudo add-apt-repository <directory>
git fetch
g++ -std=<string> <file> -o <string>
ls
top
sudo cat <directory>
ls
tail -f <string>
cd <directory>
ls
rm -r <string>
ls
git clone <URL>
bash <file>
git commit
ls
clear
rm <string>
clear
ls
clear
rm -rf <string>
su
cd <string>
tr <string>
sudo python3 <file>
git status
ls -la
git checkout <string>
cd ..
clear
ls
git checkout -b <string>
sudo find . -type <string> -exec <string> +x <string>
sudo openvpn --config <directory>
vim <file>
python3 <file> --model-path <file> --conf <string> --img-size <number>
sudo vim <file>
xargs -0 -r -i <string> -a <string>
make clean
git add <string>
ln -s <string>
dpkg --get-selections
cd <string>
clear
git push origin master
exit
git commit -m <string>
rm <string>
git status
open .
clear
git clone <URL>
vim
ls
apt-get autoremove
python3 <file>
docker rm <string>
cd <directory>
ls
vim <file>
cd <string>
cd ..
sudo raspi-config
curl -sSL <URL>
awk <string>
then\
cd <string>
fg
cd <string>
ls
rm -rf <string>
cat
cd <directory>
ls
clear
git add <string>
git commit -m <string>
sudo nala purge -y <string>
sudo pip3 install -U <string>
npm i <string>
git push origin master
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
vim <file>
sudo dpkg -i <file>
sh
sudo xbps-install <string>
vim <file>
curl <string>
sudo reboot
fg
grep <string>
perl -pi -e <directory>
cd ..
ls -a
sudo su
git stash
ls
cd <string>
touch <file>
clear
vim <file>
scp <string>
ls
cd <string>
sort -nr
pwd
sudo nginx
git commit -m <string>
ssh-keygen -t <string> -C <file>
sudo npm -v
docker rmi <string>
vim <file>
cat <string>
ls
ls
cd <directory>
ls
rm -r <string>
exec zsh
clear
ls
git add --all
cd ..
cd ..
clear
cd <string>
apt install -y <string>
git remote add origin <URL>
exit
python3
sudo apt install <string>
ls
docker-compose stop
rm <string>
wget <URL>
cd <string>
cd <directory>
git add <string>
pkill <string>
iptables -A <string> -p <string> --dport <number> -j <string>
exit
wget <URL> -O <file>
grep <string>
ls
mkdir <string>
bash
npm install <string>
exit
cd <directory>
ls <directory> -a
git add -A
ssh <string>
cd ..
sed <directory>
git fetch
exit
yarn <string>
vi <file>
more <file>
sudo sysctl -p
find . -empty -type <string> -print -delete
cd <string>
ls -ltr
vim <file>
ssh esther@10.18.0.41 -p <number>
git commit --amend
fg
git commit -a -m <string>
nano <string>
ls -la
rm -r <string>
read <string>
curl <string>
exit
man <string>
sed <directory>
read -s -n <number>
ls
clear
ls -la
awk -F <string> -v <string>
ls
ls
fg
git add <string>
git add .
sh -c <string>
ls
curl -s <string>
sed -i <string>
sudo snap install <string>
vim <file>
cd ..
vim <file>
tail -n <string>
more <file>
xargs -I{} <string> -sh <string>
ls -t
cd
clear
mkdir -p <string>
apt update
ls
python3 <file>
git add .
ls
git push
ls
unset color_prompt force_color_prompt
ls
sudo sed -i <directory>
sudo pacman -Syyu
vim <file>
tmux
ls
du -h --max-depth=<number>
cd <string>
rsync <directory>
df -h
git commit -m <string>
cd <string>
touch <string>
sed -e <directory>
rm -rf <string>
pushd <directory>
git clone <URL>
sudo usermod -a -G <string>
sudo apt install <string>
kill -9 <number>
rm -f
sudo chmod +x <string>
screen -r
ls
cd ..
git push --all <string>
git commit -m <string>
nano <string>
dpkg --search <directory>
vim <file>
cd ..
exit
ls
docker-compose up -d --build
cut -d: -f1 <string>
which <string>
vim <file>
sed -i <directory>
mkdir -p <string>
git clone <URL>
grep -q <string>
vi <file>
clear
history -a
cd <directory>
then\
git pull
git add .
ls
cd <directory>
sudo reboot
ls
vim <file>
ls
vi <file>
vim <file>
df -lh
npm install
git add .
byobu-tmux
git commit -m <string>
man <string>
vim <file>
docker rm <string>
export <string>
git status
cd <string>
cd ..
file <string>
cd <string>
sudo apk add <string>
screen
ls
sudo gpasswd -a <string> <string>
ls -FR
ps -a
ls
docker rmi <string>
cp <string>
git commit -m <string>
ls -l
sudo apt install <string>
git remote add origin <URL>
clear
ls
cat <string>
xargs kill -9
cd
cd <string>
ls
git status
find . -type <string> -exec <string> <directory> {} +
ls
cd <string>
clear
sudo apt-get install <string>
ls
clear
ls
git config --global <file> <string>
git fetch
df -h
cd <string>
ls
git commit -m <string>
cd ..
git add <string>
npm audit fix -f
sudo sed -i <directory> <file>
git pull
mvn -e <string>
vi <file>
clear
vi <file>
git fetch
git status
clear
clear
git config --global <file> <string>
find . -name <file> -type <string> -print -delete
nano <file>
sudo pacman -Syyu --noconfirm
wget <URL>
ls
git commit -m <string>
ls
ls
dotnet <string>
gzip -d <file>
cd ..
cp -r <directory>
clear
git pull origin <string>
ls
git push
git commit --AMEND --RESET-AUTHOR
ls -l
git status
exit <number>
python3 <file>
vi <file>
git push origin main
vim <file>
cat <string>
cd <string>
ls -lA
ls
cd <string>
clear
ls
codedown javascript > <file>
ls
vim <file>
ls
curl -fLo <file> --create-dirs <string>
clear
uniq -c
ls
source <file>
cd..
pkill <string>
git pull
sudo docker-compose up -d
vim <file>
cat <string>
cd <string>
cd <string>
which <string>
cd <string>
ls
tail -n7
exit
git commit -m <string>
curl -X <string> -H <directory> -d <string>
cd ..
ls
cd <string>
cd <string>
less <string>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
ls
rm -fr <string>
curl -fsSL <URL>
cd <directory>
cd ..
git remote add origin <URL>
ls
vi <file>
clear
chmod +x <string>
exit <number>
sed -i <string>
sort -n
rm <string>
git add .
source <string>
ls
find . -type <string> -exec <string> <directory> {} +
touch <file>
sudo apt-get install -y <string>
sudo update-alternatives --config <string>
git co HEAD .
npm i <string>
npm install typescript --save-dev
vim <file>
ls
sudo yum install -y <string>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
ls
cd <directory>
git push --set-upstream <string> master
git config --global <file> <file>
rm -f <string>
ls
uniq -c
chmod +x <string>
fg
vim <file>
cd <directory>
exit
clear
date
source <file>
ls
uname
chmod +x <string>
nano <file>
less
cd <string>
ls
lsblk
git add <string>
cd ..
cd <string>
cat <string>
cd <directory>
clear
fg
vi <file>
vi <file>
ls
npm run test
man <string>
git revert <string>
cd <string>
git mv <string>
chmod -R <string>
cd <string>
ls -a
cd <directory>
ls -l
vim <file>
wget <URL>
cd <string>
cd ..
cd <string>
npm install
cd <directory>
sleep <number>
ps -a <string> selects all processes with a tty except session leaders
exit
ls
sed -i <directory>
ls
exit <number>
vim <file>
grep <string>
cd <directory>
ls
sudo service nginx reload
git stash
pacman -R <string> --noconfirm
ls
mv <string>
du -aBM <directory>
ls
python3 <file>
cd ..
cd <string>
vi <file>
clear
history
xargs -0 <string> --color=<string> -sn <string>
ls
git commit -m <string>
ls
cd <string>
ls
git bisect <string>
python3 <file>
exit
du -a -h
top
cd <directory>
git reset --hard <string>
fg
docker images
ps ax
fg
ls
ls
read -r <string>
clear
clear
cd <string>
sudo rm -r <string>
exit
vi <file>
git commit -m <string>
clear
hostnamectl
rm -r <string>
cd <directory>
python3 <file>
cd <directory>
git push origin master
ls
cat <string>
chmod +x <string>
grep -Eno -e <string>
cd <string>
sudo flatpak override --reset --filesystem=<file>
pwd
grep <string>
cd
git checkout <string>
tar -xf <string>
cd <string>
git fetch origin\
ls
cd ..
chmod u+x <string>
cat <string>
rm -rf <string>
mkdir <string>
ls
ls
cd <string>
cat <string>
xargs -0 <string> -pi -e <directory>
cd
grep <string>
cd <string>
git add <string>
sudo apt remove <string>
sudo sed -i <directory> <file>
git tag <string>
sudo apt install <string>
mkdir <string>
ls
cd <directory>
sudo docker ps -a
ls
ls
npm install
clear
source <directory>
vi <file>
cd <string>
more <file>
cd <string>
nano <file>
man <string>
ls
cd <string>
fg
cd ..
vi <file>
mv $(ls -t
mkdir -p <string>
cd ..
sudo tar -C <directory> -xzf <file>
ls
sudo fail2ban-client -v -d
sudo apt-get install <string>
ls
sudo pacman -S <string>
npm run dev
cd <directory>
wget -q -O - <URL>
exit
sync
git archive --remote=<string> --format=<string> <string>
awk <string>
ls -
chmod <number> <string>
cd <string>
cd
cd <string>
sudo cat <directory>
git clone <URL>
sudo su -
rm <string>
git log
git
ls
cd <string>
cd <string>
git commit -m <string>
apt-get -f <string>
ls
cd ..
sort
sudo apt-get update
ls
cd <string>
vim <file>
vim <file>
fg
cd <string>
git push -u <string> master
history
git push -u <string> master
sudo reboot
screen -X -S <string>
cd <directory>
cd <directory>
cd <string>
cd <directory>
sudo ifconfig en0 ether <string>
xrandr -q
grep <string>
ls -la
curl <URL> -O
git commit -m <string>
cd ..
ls
ls
git describe --contains --all <string>
npm run dev
tmux ls
cd <string>
cd <string>
git remote -v
ls
git status
sudo pacman -S <string>
git status
ssh <string>
cd ..
mkdir <string>
sudo gedit <string>
cd <directory>
rm -rf <string>
ls
ls
sudo make
clear
git status
brew services <string>
read -r <string>
cd <directory>
cd <string>
clear
cd ..
ls
ls
cd <string>
sudo make install
cat <string>
curl 172.17.51.19:9090 --silent
cd <directory>
cd <string>
cd <string>
cd <directory>
sed -i <string>
ls
cd <string>
cd <directory>
git revert --abort
ps -auxwf
sudo apt remove <string>
sudo apt-get upgrade -y
less
git push
source <directory>
cd ..
yarn build:css --watch
git status
python3 <file>
git commit
ls -a
sudo usermod -a -G <string>
git clone <URL>
exit <number>
git add .
vi <file>
vim <file>
ls
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
git pull
vi <file>
git status
dpkg -L <string>
git rebase <directory>
ls
cat <string>
cd <directory>
git clone <URL>
ls
ls
cd <string>
npm install --save-dev <string>
ls
sudo dnf search <string>
cd ..
cd ..
curl -sL <URL>
rm <string>
ls
rmdir <string>
ls -al
cd <string>
docker-compose up
uniq
git log --pretty=<string>
sudo systemctl enable <string>
man <string>
ls
ls
cd <string>
vi <file>
git checkout -b <string>
curl -sSL <URL>
curl -fsSL <URL>
kill -9 <string>
wget <URL>
cd <string>
clear
docker
ssh <string>
ls
ls
mv <string>
bash
less <string>
cut -d\ -f3
mkdir <string>
ls
clear
ssh-add -K <directory>
ls
sudo apt-get install <string>
tail -f <directory>
cd <string>
fg
ls
exit
cd <string>
cd <string>
ls
exit
ls
cd <string>
cd <string>
chmod <number> <string>
npm i -g <string>
cd <string>
python <file> runserver 0.0.0.0:2016
chmod +x <string>
find . -name <string> -type <string> -prune -exec <string> -ch <string>
<directory> <directory>
sudo ls <directory>
alias <string>
git push origin PTS-372_Remove_components_from_daily_tracker --force
ls
nano <string>
exit
nano <string>
npm update
apt upgrade
ls -l
vi <file>
vim <file>
cd <string>
sudo make install
nano <string>
cd <string>
cd <directory>
git pull
ip a
ls -l
ls
ls
find <directory> -iname <file> -type <string> -exec <string> -c <string> --wrap=<string> --from <string> --to <string> <string> -o <file> <string> {} \
ls
find . -type <string> -ls
git restore --staged <string>
git pull
vi <file>
git push -u <string> master
exit
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
vim <file>
sudo ufw <string>
diff
cd <string>
clear
sudo userdel demouser
source <string>
ls
git push
cd -
git diff
sudo vim <file>
vim <file>
ls
cd <string>
rm <string>
ls
sudo apt-get update -y
mkdir <string>
ls
ls -R
cd <directory>
git commit --allow-empty -m <string>
cd <string>
find . -name <file>
ls
fg
ls
git gc --aggressive --prune
git clone <URL>
cd <directory>
cd ..
yarn <string>
docker run --name <string>
npm
rm -r <string>
ls
git remote set-url origin <string>
cd <directory>
sudo phpenmod -v <string>
exit
clear
killall <string>
cd ..
ls
cd ..
cd <string>
clear
clear
git push
ls
ls
systemctl reload <string>
rm -rf <string>
cd <string>
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
time go run <file>
docker compose up -d
vim
vi <file>
exit
mkdir <string>
kubectl get <string>
ls
exit
git commit -m <string>
vim <file>
cd <string>
cd <string>
cd <string>
git add .
rm -rf <string>
sudo visudo
cd <string>
ls
vi <file>
git log
rm <string>
bash <file>
curl -sS <string>
rvm <string>
ls -la
screen -r
ls
rm -rf <string>
ls
python3 <file>
find . -type <string> -printf <string>
grep <string>
ls
ls
cd <directory>
git add -A
cd ..
git clone <URL>
git status
sudo pip install <string>
git init
host <string>
exit
python3 <file>
grep <string>
vim <file>
ls
python3 <file>
git commit
fg
cd <string>
git pull
cd <directory>
npm ERR! <string>
ssh-add <directory>
ls
vi <file>
ls
ls -l
git checkout <string>
clear
rm -f -- <string>
ls
cd <directory>
git status
mv <string>
read -rp <string> <string>
ls -la
ls
git add .
git status
cd <string>
more
sudo sed -i <directory>
git status
sudo docker ps
sudo sed -i <directory> <file>
sudo chown -R <string>
ls
sudo aptitude <string>
mv <string>
npm install
cd <string>
cd ..
vim <file>
cd <directory>
vi <file>
sudo xbps-install <string>
cp -rf <string>
ls
sleep <number>
mkdir <string>
sudo wget -O <directory>
ls
grep <string>
cd ..
watch <string>
sudo curl -L <directory> -o <directory>
env
nano <file>
git add <string>
ls
fg
apt list --upgradable
cat <string>
ls
clear
apt-get update
mv <string>
cd <string>
git commit -m <string>
nc <string>
cd ..
rm -f <string>
ls
rm <string>
cd <directory>
alias <string>
sed <directory>
git status
ls
cd <string>
cd ..
dmesg
ls
yarn add <string>
cp <string>
sudo init <number>
cd <string>
cd <directory>
sudo docker run -it --name <string> --entrypoint <string> -u <string> --privileged -v --rm <directory>
du -h --max-depth=<number> <string>
cd <directory>
unset color_prompt force_color_prompt
npm i
sudo iptables -t <string> -A <string> -p <string> --dport <number> -m <string>
ls
ls
ls
cd ..
exit
git config <file> <string>
sed -i <directory>
local <string>
ssh <string>
vi <file>
sudo python3 <file> install
git add .
cd <directory>
ls
git commit -m <string>
mv <string>
ls
cd <directory>
git clone <URL>
grep <string>
cd <string>
exit
cd <string>
touch <file>
sudo apt-get upgrade
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
python <file> runserver 0.0.0.0:2016
sudo su
git co master
df
sudo service <string>
ls
ls -C
ls -d <string>
apt-get
cd <directory>
vim <file>
ls
fg
git push origin master
ls
man <string>
sudo snap install nodejs --classic
history -a
vim <file>
cd <string>
curl <string>
sudo tcpdump -i <string> -w <file>
open <string>
cd <string>
unzip <file> -o <directory>
cd <directory>
git branch -M <string>
git merge
npm install
npm run test
git commit -m <string>
clear
grep <string>
ls
cat <string>
ls -alh
locate <string>
curl -o <string>
diff <file>
cat <string>
npm run start
sudo apt install <string>
tmux
rm <string>
cd <string>
cd <string>
xargs kill -9 <directory>
sh
cd <string>
python3 <file>
source <directory> -all <directory>
cd ..
less <string>
cat <string>
ls
cd ..
npx webpack --config <file>
cd ..
git add <string>
git status
cd <string>
git clone <URL>
clear
git update-index --assume-unchanged <string>
vi <file>
git commit -a -m <string>
tr <string>
curl -fsSL <URL>
su - <string>
apt install <string>
git init
cd <directory>
cat <string>
mkdir <string>
podman run <string>
vi <file>
git branch
cd <string>
sudo apt --purge <string>
ls
git checkout master
cd <string>
strings <file>
git commit -m <string>
ls
ls -aFl
git config <file> <string>
source <file>
exit <number>
vim -u <string> -c <directory> -c <string>
sudo apt-get install build-essential -y
git --no-pager <string> -n <number>
nano <file>
mkdir <string>
sudo apt install <string>
cd ..
find . -name <file>
git merge <string>
cd <string>
sed -i <string>
wget -q <URL> -O <file>
sudo apt-get --assume-yes <string> <string>
ls
vim <file>
cd <string>
sudo python3 <file> install
sudo python2 <file> --cascade=<file> <number>
unset <string>
cd <string>
git clone <URL>
ls -a
npm install
cp <string>
rm -rf <string>
vim <file>
<file> - <number>
ls
ls
fg
source <string>
cd ..
mkdir <string>
ls
python3 <file>
git push
cd <directory>
sudo apk add <string>
mv <string>
xrandr -d <string> --output <string> --auto
env
ls
git add .
ls
sleep <string>
chmod +x <string>
sudo python <file>
ls
sudo apt install <string>
grep -v <string>
ls
clear
ls
sleep <number>
cp -r <directory>
ls
ls
sleep <number>
cd ..
rmdir --help
exit
ls
vim <file>
cd <directory>
find -name <string>
cp <string>
chmod <string>
cd <string>
ls
ls
reboot
ls
git commit -m <string>
git status
git checkout <string>
cat <string>
ls
cd
sudo su
cd <directory>
dpkg -s <string>
ls
git status
pwd
cat <string>
git push origin master
cd ..
cd <directory>
cd ..
ls
pwd
ls
rm <string>
git status
read -rp <string> <string>
git init
ls
docker push <directory>
fg
cd <string>
clear
sudo apt install <string>
sudo pip install <string>
git
cd <string>
sudo date -s <string>
ls
nano <file>
ls -a
sudo apt remove <string>
rm <string>
cd <string>
set <string>
ssh <string>
ls
vim <file>
git status
npm install -g <string>
cd ..
cd <string>
sudo install -m <number> -d <directory>
rm -r <string>
git clone --depth <number> --single-branch <URL>
xargs -n2 <string>
sudo apt install nginx -y
screen -r
ls
sudo vi <file>
vim <file>
cd
exit
cd <string>
cd <directory>
sudo apt-get autoclean
git reflog expire --expire=<string> --all
ls
rm <string>
ls
cd <string>
chmod u+x <string>
ls
mkdir <string>
nano <file>
git add .
git clone --recursive <URL>
byobu-tmux
ls
chmod <number> <string>
git status
vim <file>
ls
ls
git add <string>
vim <file>
sudo touch <directory>
curl <URL> -L -o -
cd
git init
vim <file>
rm -f <string>
exit <number>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
sudo shutdown
cd <string>
vim <file>
cd <string>
ls
cd <string>
git commit -m <string>
git status
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ls
exit
cd ..
cd <string>
read -r <string>
uname
ls
cd <string>
exit
clear
git commit -m <string>
cd <string>
cd ..
ls
finger <user> # displays information about user
sudo certbot --nginx -d <file>
git diff
cat <string>
rm -rf <string>
sudo pacman -S --needed <string> base-devel -y
curl -O <URL>
vi <file>
wget <URL>
git merge <string>
sh
vi <file>
<directory> <string>
git config --global <file> <string>
git init
cat <string>
cd <string>
chmod +x <string>
ls
diff <file> <file>
ls
clear
sudo tar -C <directory> -xzf <file>
exit
exit
sudo iptables -I <string> -p <string> --dport <number> -m <string> --state <string> -j <string>
ls
cd ..
xrandr
npx
rm <string>
npm install <string>
cd
ftp 198.19.255.136
cat <string>
nano <file>
ls
find . -size <string> -exec <string> -f <string>
nano <file>
cat <string>
mv <string>
git push origin master
ls
cd ..
nano <file>
sudo python <file>
ls
vi <file>
sudo shutdown now
alias <directory> -c <string>
cd
sudo timedatectl set-timezone sudo timedatectl <directory>
git commit -m <string>
cp <string>
sleep <number>
less <string>
cd <directory>
find . -name <file> -type <string> -print -delete
ls
code .
ls -ltr
git add .
sudo debconf-set-selections <string>
git pull
cp <string>
else\
git rebase <directory>
npm start
cd <string>
rm <string>
sudo docker ps
curl -O <URL>
pacman -S <string>
ls
ls -al
git add -A
cd <string>
ls
vi <file>
sudo gedit <string>
git config --global <file> <string>
cat <string>
ls
ls
python3 <file>
docker build --no-cache --force-rm -t <string>
git add <string>
cd ..
git init
ls -ltr
clear
sudo systemctl start <string>
sudo unlink <string>
ls
vim
vim <file>
rm -f <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd <string>
ssh <string>
sudo sed -i <directory> <file>
git status
git log
git commit -m <string>
cat <string>
then\
tmux
ls
cd <directory>
ls
git init
cd
sudo sed -i <directory> <file>
npm run test
else\
sudo dd <string>
sudo dpkg -i <file>
ping <string>
done
cd <string>
cd <string>
which <string>
sudo apt-get autoremove
git help <string>
cd <string>
cd <string>
git status
ls
rm -f <string>
cd <string>
cd <string>
git rm --cached <directory>
sudo apt-get install <string>
cd
grep <string>
vim <file>
git clone <URL>
exit
clear
cd <string>
ls
cd ..
vim <file>
ls
ps ax
vim <file>
git clone <URL>
git init
cp <string>
cd <directory>
git switch main
cd ..
cd <directory>
git branch
cd
rm <string>
more <file>
rm -r <string>
clear
sudo find <directory>
git commit -m <string>
git status
diff -h
rm -rf <string>
git add .
ls
ls
docker start postgres-container
clear
cat <string>
ls
clear
fg
cd
ls
clear
ls -l
vim <file>
sudo su
git add .
npm run bench -- -c <file> -n <file>
cd <string>
ls
cd ..
apt-get install --reinstall <string>
cd <string>
docker kill <string>
vim <file>
sudo env <string>
clear
git push origin <string>
python3 <file>
su root
passwd
git commit -m <string>
python3 <file>
git please
cd ..
wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=<string> --domains <file> --no-parent <URL>
clear
ls
pwd
which <string>
clear
cat <string>
cd <directory>
grep -i <string> >files
ls -la
sudo zypper ve -D <string>
python3 <file> -- <string> @CAMERA=<string> <string>
git status
npm run start
clear
git init
sudo sed -i <directory> <file>
ls
netcat -w <string>
ls
sleep <number>
git commit -am <string>
pacman-key --init
node <file>
cd <directory>
git commit -m <string>
ln -s <string>
python3 <file>
screen -r <string>
vi <file>
read -s -n <number>
cd <directory>
ls -l
git commit -m"commit"
sudo apt install <string>
exit
ls -a
clear
git gc --aggressive --prune=<string>
docker run -d -p <string> --name <string>
ssh <string>
sed -i <directory>
ls
exit
rm -r <string>
cd <string>
clear
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
printf <string>
cd <string>
clear
git status
git add .
cd <directory>
cd <directory>
cat <string>
cut -f <string> -d <string>
ls
apt-get install <string>
npm run dev
vim <file>
fg
fg
read -p <string>
cd <string>
git push
cd onedrive\ -\ <string>
exit <number>
cd
cd <directory>
python3 <file>
rsync -a <string>
ls
cd <string>
rm -rf <string>
cd <string>
cd <string>
curl -fsSL <URL>
curl -v -H <string> <URL>
ls -altr
ls
find . -name <file> -type <string> -print -delete
python3 --version
docker logs <string>
fg
node <file>
clear
read -p <string>
clear
find . -size <string> -a -print -a -exec <string> -f <string> \
exit <number>
touch <string>
git remote add origin <URL>
cp <string>
git pull
cd <directory>
mkdir <string>
cp <string>
docker rmi <string>
fg
git commit -m <string>
cd <string>
exit <number>
git pull origin master
ls
cd <string>
cd ..
ls
sudo mv <file>
chown -R <string>
cut -d' <string> -f3-7 <string>
ls
sudo yum <string>
ssh <string>
ls -laN
cd <directory>
clear
npm install <string>
sudo sed -i <directory> <file>
npm i <string>
npm run test
rm <string>
ls
git init
fg
cd ..
touch <string>
git commit
clear
ls
rm -r <string>
set <string>
tr
cd <string>
git pull
git status
date
ls
mkdir <string>
ls
sudo systemctl status <string>
cd <directory>
sudo cp -rf <string>
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
exit <number>
ls
cd <string>
ls
sudo supervisorctl update
cd <string>
clear
git status
cd
git status
git commit -m <string>
git add .
ls
clear
cd <string>
scp <string>
git commit
ps
mvn compile
git branch -d <string>
ls
vim <file>
git diff
git commit
apt-get install -y <string>
cd <directory>
git status
ls -lAF
cd <string>
cd ..
git commit -m <string>
cd <directory>
ls
vi <file>
htop
ps -ef
chmod -R <number> <directory>
cd <string>
npm init -y
exit
cd ..
chmod <number> <string>
wget -q -O - <URL>
sudo dpkg-reconfigure <string>
ls
ls
git pull
ls
cd <string>
unzip <file>
curl <URL> -o <file>
git add <string>
code .
ls
ls
docker stop <string>
find <directory> -type <string> -name <string>
cd <string>
vim
tail -n <string>
docker-compose down
cd <string>
git commit -m <string>
cd <directory>
cd
git push origin
wc -l
exit
rm -r <string>
ls
python3 --version
cd <string>
fg
git push -u <string> detail
unset <string>
exit
git config --global <file>
ls
cd <string>
cd ..
git commit
vim <file>
cd <directory>
ping <string>
clear
git add .
sudo groupadd <string>
git clone <URL>
cp <string>
python3 <file>
sed -n -e <directory>
grep <string>
read <string>
git init
rm <string>
rm -rf <string>
cd <string>
bsdtar -C <string> -xf -
ls -all <directory>
cd <directory>
chmod +x <string>
ls
ls
export <string>
curl -X <string> <URL> -d <string> -d <string> -d <string>
touch <string>
curl <string>
exit
rm <string>
git add <string>
curl -fsSL <URL>
apt install --reinstall <string>
clear
ls
git add .
clear
ls
set
clear
unzip -o <string>
cd <string>
clear
git --help
ls
npm run build
exit
mkdir <string>
git config --global
cp <string>
ls
touch <string>
set <string>
cd <string>
ls
git gc --aggressive --prune=<string>
ls
ls -la
cd <string>
ping <file>
ls++ -a
rm <string>
cd <string>
psql -U <string> -h <string> nzdpu_wis
vi <file>
vi <file>
git clone <URL>
cd <directory>
git push -u <string> main
ls -al
python3 <file>
ls
ls
awk <string>
npm i sass -D
ls
cd <string>
ls
exit <number>
ls
cd ..
ls -la
npm install -g <string>
mvn -e <string>
git restore <file>
python3 <file>
exit
cd <string>
ls
rm -fr <string>
vim <file>
git init
cd <string>
git pull --rebase
mkdir -p <string>
cd ..
mkdir <string>
git push origin main
make clean
docker-compose cp <string>
cd ..
vim <file>
rm <string>
ls
env
git push
export <string>
local <string>
pwd
git add -A
fg
top
ls
ssh -X -C <string>
exit
vim <file>
git status
ls -alrt <string>
git config --global <file> <string>
rm -rf <string>
clear
cd
git add .
git status
vi <file>
history -c
git push
rm <string>
ls
ls
scp <string>
git checkout <string>
ls
git status
git remote add origin <URL>
vim
git add .
done
cd <string>
source <string>
git commit -am <string>
ls
cd ..
sudo lpoptions -d <string> -l
cd ..
nano <file>
clear
mkdir <string>
python <file> runserver 0.0.0.0:2016
ls <directory> -ld
ps
ls
git push -u <string> master
ls
git remote add origin <URL>
sudo vim <directory>
git reset <string>
sed -n <string>
ls
sudo apt-get install apt-transport-https linux-image-extra-$(uname -r) -y
git rev-list -n <number>
python3 <file>
pushd <directory>
fg
git ls-remote <string>
cd
ls
ls
sudo yum install -y <string>
mkdir <string>
ls
git commit -m <string>
git clone -b <string>
ls
ls
git add .
git remote -v
cd <string>
ls
git init
git clone <URL>
cd <string>
cd <string>
clear
cd <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd <string>
npm run test
ls
cd <string>
rm -r <string>
git clone <URL>
clear
npm i -g <string>
pwd
cd <directory>
sudo apt-get install <string>
cd <string>
ls -ltr
chmod <string>
cp <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
cd <string>
dd
cd ..
fg
ls
ls -las
cd <directory>
yarn add -D <string>
npm i semver -g
dpkg -L <string>
clear
fg
yarn add -D <string>
fg
cd <string>
ls
python3 -version
ls
cp <string>
clear
git remote add origin <URL>
git branch -D <string>
cd <directory>
ls -l
clear
git push
git status
ls
clear
read <string>
bash
ssh <string>
cd
ls -a
sudo rm -rf <string>
rm -rf <string>
exit
cd <string>
grep -v -e <string>
sudo su
ls
git push origin main
cd <string>
ls
npm install
go tool pprof <file>
clear
git clone <URL>
ls -la
ls
git commit -m <string>
npx shadcn-ui@latest add <string>
wget -qO - <URL>
clear
ls
git status
git add .
vi <file>
python3 <file>
npm run make
ls -la
sudo -i
rm -rf <string>
git commit -m <string>
mv <string>
cat <string>
cd <directory>
curl -sL <URL>
ls
clear
mv <string>
dir
wget <URL>
node <file>
cd <string>
ls
sudo vim <file>
ping <string>
npx <string>
git branch
mkdir <string>
ls
pwd
sudo apt-get install --fix-missing <string>
df
ls
git -v
chown -R <string>
cd <string>
ls
ls
sudo apt-get install <string>
cd <string>
sudo python3 <file>
clear
ls -l
shutdown -h <string>
git fetch
awk <string>
clear
vi <file>
ls -alrt <string>
find . -name <string> type -f -ls
git push
vi <file>
ls
cd <directory>
iptables
cd ..
vim <file>
sudo find <directory>
git push
git difftool --cached
ls
git commit -m <string>
sudo apt-get update
exit
clear
cd ..
ssh <string>
git clone <URL>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
vim <file>
cd <string>
ls
exit
ls
touch <file>
git remote -v
ls
ls
cp <string>
cd <directory>
cd <string>
ls
ls
ls
sudo apt install <string>
npm run bench -- -c <file> -n <file>
git add .
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
cat <string>
patch -p1 <string> <file>
find . -empty -type <string> -print -delete
cat <string>
fg
git status
find <directory> -type <string> -ls
rm -r <string>
rm -rf <string>
vim <file>
cd ..
ls
vim <file>
git commit -am <string>
rm -r <string>
git pull
sudo apt-get update
clear
nc <number> <number>
git branch -M <string>
zgrep -i -E -o --no-filename <string>
npm run build
git remote -v
ls
pwd
exit <number>
sort
wget --quiet -O - <URL>
cd <string>
ls
cd <directory>
vi <file>
ls
sed <directory>
sudo chmod u+x <file>
git add <string>
cd ..
grep <string>
git branch -a
git push -u <string> bryan-guner
wget <URL>
export <string>
cd <string>
mkdir <string>
sudo timedatectl <string>
ls
kubectl get <string>
vi <file>
more
sudo apt-get update
ls
cp -r <directory>
npm install <string>
ls
ls -l
ls
ls
df
rm <string>
less
tr <string>
ls
sudo apt install --no-install-recommends <string>
clear
git remote add origin <URL>
ls
git rebase -i <string>
pwd
exit
cd ..
git add .
cd ..
grep -cv <string>
git merge --abort
cd <string>
git init
cd <string>
sudo sed -i <directory> <file>
sudo curl <URL> -o <directory>
ls
cd <directory>
systemctl enable --now <string>
vim <file>
cd
git commit -m <string>
sudo yum remove -y <string>
vi <file>
read -r <string>
ls
cd <string>
git commit -m <string>
fg
rm -f <string>
grep <string>
cd <string>
git clone <URL>
vim
sudo wget <URL>
cd <directory>
ls
git commit -m <string>
git remote add origin <URL>
cd <directory>
ls
git remote add origin <URL>
git add .
vi <file>
cd ..
git commit -m <string>
ls
vim <file>
mkdir -m <number>
sudo apt-get install git -y -qq
git status
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
exit
git remote add origin <URL>
sudo locale-gen <string>
cpio -pdmv <directory>
ls
cd <directory>
wget -q -O - <URL>
open <string>
reboot
sed -i <directory>
exit <number>
clear
unzip <file>
ls
ls
g++ <file> -o <string>
strings <file>
ls
ls -l
mkdir -v <string>
ls
git init
sudo nano <directory>
cd <string>
mkdir <string>
mkdir <string>
sudo rm -rf <string>
ln -s <string>
ls
apt-get install <string>
rm -rf <string>
more <file>
cd -{N} <string>
cd <directory>
sudo apt update
git init
git config --global <file> <string>
ls
cd -
touch <string>
cd <string>
sudo su
read -p <string>
cp -t <string> -a <string>
rm <string>
clear
mv <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
sudo apt install <string>
vi <file>
ls
git please
sudo apt purge <string>
cd <string>
ls
npm cache clean -f
git pull
exit <number>
find . -name <file>
sudo apt install <string>
ls
ls
vi <file>
git status
git checkout --ours <file>
make clean
cd ..
sudo docker ps
git push -f
cat <string>
git add <string>
pwd
ls
alias <string>
exit <number>
git push -u <string> main
find . -maxdepth <number> -type <string> -name <string> -exec <string> -n <directory>
journalctl -u <string> -f
kill -9 <number>
rm <string>
rm -r <string>
ls
uniq
sudo swapon <directory>
ls
cat <string>
git config --global <file>
cd ..
cd <string>
nl
fg
ls
sed <directory>
cd <string>
npm uninstall <string>
cd <string>
clear
sudo python <file>
ls -las
ls
git --version
vim <file>
sudo bash
git push
mkdir <string>
touch <file>
cd <directory>
mv -r <directory>
npm install
file <string>
rm <string>
sudo yum -y <string>
ls -a
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git submodule update --remote
cat <string>
git pull
su - <string>
git please
exit <number>
cd <string>
ls
clear
rm -rf <string>
sudo vim <file>
docker rmi <string>
fg
sudo apt install <string>
vim <file>
git co -t -b <string>
cat <string>
rm <string>
git push
cat <string>
python3.11 <file>
sleep <number>
ls -a
ls
sudo lvremove <directory>
git commit -m <string>
g++ -std=<string> <file> -o <string>
ls
sudo installer -store -pkg <file> -target <directory>
ip
ls
rm -r <string>
cd <string>
vim <file>
exit
clear
sudo localectl set-x11-keymap <string>
docker-php-ext-install <string>
mv <string>
fg
head -3 <string>
vi <file>
git pull
ls
curl -sS --fail <string>
rm <string>
git config --get <file>
cd <string>
read -rp <string> <string>
git status
vi <file>
apt-key adv --keyserver <string> --recv <string>
rm <string>
bash
ls
unset <string>
git -innit
read -r -d <string> <string>
grep <string>
cp <string>
vim <file>
sudo apt update
ls
ls
touch <file>
ls
ssh-keygen
ls
git init --initial-branch <string>
ls
killall -9 <string>
cd <directory>
git reset --hard <string>
rm -f <string>
clear
find src
ls
sudo reboot
python3 <file>
git
cd <directory>
top
cd <directory>
chmod +x <string>
cd <directory>
cd <string>
sudo apt-get -y <string>
ls
sudo make
cd ..
clear
curl -T <directory> <string>
cd <string>
ls
sudo apt-get install slimbookbattery -y
git clone --depth <number> <URL>
cd <string>
python3 -m <string> install --no-cache <string>
git remote add origin <URL>
git co -
then\
vi <file>
bash
fg
git checkout <string>
sudo cd <directory>
sudo apt upgrade
sed -i <directory>
cd ..
git push origin <string>
rm -rf <string>
exit
git clone <URL>
cd <string>
grep -v <string>
ls
vim <file>
ls
sudo rm *
ps # prints a line of information about the current running login shell and any processes running under it
docker compose <string>
sh <file>
ls
rm <string>
git commit
git pull
cd <string>
sudo chown <string>
yarn <string>
ls++ -a
cd <directory>
mv <string>
npm install mocha -g
rm -rm <directory>
vi <file>
ls
rm -rf <string>
rm -f <string>
vim <file>
git checkout master
clear
ls
ls
mkdir -p <string>
git clone <URL>
jq <string>
clear
mkdir <string>
diff <file>
cd <string>
node <file>
python3 <file>
clear
df
fg
cd
ls
exit
exit
done
git ush -u <string>
ls
docker exec -ti <string>
ls -la
ls
clear
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
vim <file>
sudo curl <URL> -o <directory>
git log -n <number>
sudo fail2ban-client <string>
ls
grep -i -a <string>
vi <file>
ls -ALF
cd ..
sudo apt-get install <string>
sed -r <directory>
sudo ln -s <directory>
cd ..
clear
pwd
clear
cd <string>
git pull origin master
cd <string>
nano <file>
setg RHOSTS <file>
clear
docker-compose down
sudo nano <string>
vi <file>
ls
fg
mkdir <string>
ls -lart
su
ls
ls
cd <string>
cd ..
docker image ls
clear
rm -rf <string>
source <string>
ls
npm ls
exit <number>
cd <string>
cd <directory>
sudo apt-get dist-upgrade -y
read -r -p <string>
fg
exit <number>
ls
sudo sed -i <directory> <file>
clear
sudo apt-get update
vi <file>
sudo systemctl enable <string>
ls
unset <string>
git status
sudo nvidia-settings -a <directory>
ls
cd <directory>
ls
pwd
git checkout <string>
cd <string>
rm -rf <string>
history
vim <file>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
git push origin master
vi <file>
rm -rf <string>
curl <string>
curl -fsSL <URL>
ls
ls
npm run dev
ls
source <string>
git add <string>
vi <file>
nohup java -jar <string>
nano <string>
sudo systemctl restart nginx
grep --include=<file> -r <number>
vi <file>
mv <string>
exit
cd <directory>
git init
vi <file>
ls
cd <directory>
npm update
sudo iptables -A <string> -p <string> -j <string>
cat <string>
ls
git commit -m <string>
ls
cd <directory>
ls
cd <string>
touch <string>
cd <string>
python3 <file>
ls -a
ls -la
vim <file>
sudo sed -i <directory> <file>
cd <string>
git stash
sudo npm install
chmod +x <string>
git push origin <string>
cd ..
cat <string>
git merge
npm root -g
exit
git clone <URL>
git push -u <string> main
clear
docker images
sudo sed -i <directory>
ls
cd
cat <string>
cd <directory>
ls
wget <URL>
ls -lrt
ls
vim <file>
ls
sudo c_rehash <directory>
wget <URL> -O <file>
cd <directory>
git add .
ls
python3.7 -m <string> install --user <string> --no-cache-dir <string>
history # shows command line history
xargs -n1 <string> -i -E <directory>
grep <string>
cd <directory>
man <string>
git status
git push
git clone <URL>
cd <string>
git st
cd ..
cd <string>
ls -lh
clear
ls -la
sudo nano <string>
fg
cd <string>
cut -f <string> -d <string>
cd <string>
vi <file>
top
git push -u <string> master
cd
git clone <URL>
cd ..
time <string>
cd <string>
ls
mkdir <string>
git add --all
exit
vim <file>
cd ..
dpkg -L <string>
cd <string>
git stash
git pull origin master
git push
clear
cd <string>
ls
sudo command
screen -r
sudo python3 <file>
sudo mount <directory>
vim <file>
sleep <string>
python3 <file>
ls
git commit -m <string>
git add <string>
adduser <string>
sudo apt-get --install-suggests <string> <string>
chmod <number> <string>
git checkout <string>
npm run register
git stash
mv <string>
vim <file>
git clone <URL>
python3 <file>
find . -type <string> -name <file> -exec <string> -l <string>
cd <string>
cat <string>
sudo reboot
touch <file>
ls
vi <file>
gsettings set <file>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
ls
ps
git init
cd <string>
cd
rm -rf <string>
cd <string>
exit
brew tap <directory>
apt-cache search <string>
git clone <URL>
xargs -L1 <string>
ls
rm <string>
rm <string>
sudo journalctl -u <file> -e
ls
cat <string>
exit
npm install -g <string>
clear
cd <string>
nano <string>
type <string>
nano <file>
ls
git status
vim <file>
git commit -m <string>
cat <string>
cd ..
ls
git remote add origin <URL>
mv <string>
ls
exit <number>
cat <string>
sudo wget -O <directory>
ls
ls
ls
rm <string>
ls
sudo docker rm <string>
cd <directory>
vim <file>
vi <file>
ls
ls -a
chmod <number> <string>
cd..
rm <string>
ls
cd <string>
bash
git add <string>
ls
ls
sudo apt install <string>
vi <file>
grep -e <string>
vim <file>
ls
clear
ls
ls
rm -rf <string>
ls
cd ..
pwd
cd <string>
git remote add origin <URL>
vim <file>
cd <string>
git rm --cached <string>
ls
git
clear
ls
ls
npm install -f
vim <file>
clear
mkdir <string>
docker-compose build <string>
cd <directory>
rm -f -- <string>
cd
git remote -v
ls
ls
grep <string>
sudo lpadmin -p <string> -E -v <directory> -m <file>
cd
git pull
mv <string>
cd <string>
git push origin main
ls
fg
grep -E <string>
cd <string>
cd
ls
grep <string>
sudo apt-get install <string>
sudo docker rm corrade
sudo apt upgrade -y
clear
cd <directory>
cd ..
git add .
cp -fR <directory>
clear
vim
cd ..
env
usermod --help
ls
docker-compose down
mv <string>
ls
git add <string>
clear
git add .
ls
ls
pwd
sudo light -A <number>
ls
cat <string>
make clean
grep -v <string>
ssh <string>
awk <string>
ls
ssh-keygen
ping <file>
ls
mv <string>
ls
ls
ls
exit
ls
cd <string>
vi <file>
sudo rm -rf <directory> <directory>
docker start <string>
git stash pop
git push origin <string>
nano <file>
journalctl -b -2 -e
sudo chsh -s <directory>
find <directory> -type <string> -execdir <string>
git commit -m <string>
npm install
cd
vi <file>
sudo sed -i <directory> <file>
npm install express-generator -g
pwd
cd <string>
sudo chown -R <string>
npm i <string>
git merge <string>
cp <string>
git co master
clear
exit
cd <string>
rm -f <string>
ls
nc <number> <number>
vim <file>
sudo apt-mark <string>
history
ls
shutdown now
find . -name <file> -type <string> -print -delete
apt-key adv --keyserver <string> --recv <string>
vi <file>
ps aux
bash <file>
git status
git remote add origin <URL>
ls
sed -i <string>
sudo su
cd
sleep <string>
sudo apt-get install <string>
mkdir -p <string>
sed -i <string>
yarn <string>
ps aux
cd <directory>
git init
sudo certbot --nginx -d <file> -d <file>
cd <directory>
ls
exit
sudo docker images
nano <file>
vim <file>
scp <string>
sudo rm -r <string>
git commit -a -m <string>
head -n <number>
ln -s <string>
git commit -m <string>
ls
exit <number>
vi <file>
exit
git commit -m <string>
git add <string>
cd <directory>
python3 <file>
cd <string>
git add .
cd ..
pkill <string>
cd <directory>
cd <string>
sort -u
ls
ls
mkdir -p <string>
cd <string>
sudo systemctl status <string>
cd <directory>
git checkout master
ls
sudo apt -y <string> <string>
ls
rmdir -
apt-install -y <string> <string>
ls
cd <directory>
cd <directory>
apt-get install -y <string>
git status
cd <string>
cd ..
clear
exit <number>
sudo service nginx reload
fg
cd <string>
nohup python3 <file> <string>
git commit -m <string>
less <string>
cd <directory>
ls
cd <string>
ls
nano <string>
grep <string>
cat <string>
cd <string>
clear
cd ..
ls
ls
ls
vim <file>
git adog
cd ..
sh
clear
cut -d <string> -f <string>
git commit -m <string>
ls
cd <directory>
vi <file>
sudo systemctl restart <string>
cd <string>
git clone <URL>
systemctl status <string>
clear
cd <directory>
vim <file>
pwd
git add <string>
sudo mount -t <string> -o <string>
sudo curl <URL>
find . -type <string> -name <string>
byobu-tmux
clear
git commit --amend
docker exec -it <string> bash
exit
vim <file>
ls
cd ..
read -s -n <number>
ls
python3 <file>
htop
find . -type <string> \( -name <file> -o -name <file>
clear
git stash
ls
curl -o- <URL>
ls -l
exit <number>
ls
rm -rf <string>
clear
curl -ks <URL>
tr <string>
ls
vim <file>
git init
clear
python3 <file>
ls
ls
ls
ls
cd <string>
git add .
sed <directory>
python3 <file>
mkdir <string>
cd <string>
cat <string>
ls
clear
ls
vim <file>
cd <directory>
vi <file>
cd ..
print <string>
cp <string>
git add .
git init
sudo apt-get install <string>
wget -q <string> -O <directory>
read -r -p <string>
cd <string>
cd <string>
rm <string>
git add <string>
clear
ls
sudo apt-get install <string>
mkdir <string>
vi <file>
do\
git log --all --graph --decorate --stat <string>
ls
exit <number>
rm -rf <string>
cp -r <directory>
cd <directory>
vi <file>
npm i <directory> -f
ls
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
vim <file>
sudo apt-get -y <string>
cd <string>
sudo apt install <string>
read -rp <string> <string>
pwd
git init
rm <string>
ls -la
ls
kill <number>
killall <string>
cd <string>
sh <file>
ls
rm -Rf <string>
sudo find <directory>
git add .
sudo apt install <string>
nano <file>
git status
touch <string>
ls
brew update
git push
exit
dpkg -i <file>
git push origin master
docker-compose logs
exit <number>
ssh dirlic@10.18.0.39 -p <number>
vim <file>
git push -u <string> master
git add <string>
git status
git status
ls
git add <string>
cd <string>
sudo useradd <string>
apt-get install --reinstall <string>
cd ..
systemctl restart <string>
sort
mv <string>
git commit -m <string>
ls
sed <directory>
clear
ls
cp <string>
clear
find <string> -name <string> -exec <string> -rf <string>
<directory> <directory>
vi <file>
fg
clear
date
ls -l
git status
npx <directory> -i <string>
git add -p
ls
sudo sed -i <directory>
vim <file>
docker rm <string>
mkdir <string>
uniq
sudo rm -rf <string>
source <file>
ls
exit
npm i chalk --save
ls <directory> -a
cd <string>
mkdir -p <string>
cd <string>
cd
cd <string>
ls
sudo rm -rf <string>
vi <file>
chmod +x <string>
ls
grep <string>
sudo cp -r <string>
cd <directory>
cd <string>
mkdir -p <string>
uname
ls
cd <directory>
git push origin master
cd ..
sh
ls
exit
cd
pwd
ps
true
ls
sh
sh
exit
ls
cd <directory>
cd <directory>
ls
apt-cache policy <string>
cd ..
tar -C <directory> -xzf <file>
ss -nlpt
sudo su
docker ps -a
chmod +x <string>
uniq -u <file>
ls
rm -rf <string>
ls
cd <string>
ls
tail +n # Print nth line from file.
ls
python3 <file>
ls
git clone <URL>
rm <string>
git remote add origin <URL>
tmux
docker
cd <string>
pwd
cd ..
cd <directory>
ls
sudo rpm --import <URL>
sudo debconf-set-selections <string>
vi <file>
kubectl api-resources --api-group=<string>
git status
grep <string>
history
source <directory>
cd <directory>
grep <string>
fg
docker-compose logs
ls -la
rm <string>
git add .
exit
ls <directory> -s
ls++ -a
git -m <string>
cd <string>
ls -lart
cd <directory>
touch
mv <string>
cd <string>
ps
vim <file>
ssh <string>
curl -s <string>
pwd
exit
rmdir <string>
man <string>
sudo apt-get update
git branch -f <string>
git rm -r --cached <directory>
unzip <file>
ls
sleep <string>
vim <file>
git rev-list -n <number>
env
ls
cd <string>
git pull origin main
then\
exit
ls
git add .
clear
vi <file>
python3 <file>
fg
ls
fg
ls -l
cd <string>
cat <string>
cd <string>
npm init -y
cp -r <directory>
ls
ls
history
cd <string>
vi <file>
vim <file>
git config <file> <file>
git rebase -i <string>
rm <string>
ls
make install
fg
cd <string>
tmux set-option -g <string>
sudo reboot
ls
cat <string>
git commit -m"update"
yay -S <string>
ping <file>
git add .
cd <directory>
cd ..
read -s -n <number>
ls
git push
vim <file>
ls -a
cd ..
cd <string>
sudo git status
sudo apt install <string>
cd <directory>
touch <file>
git add <string>
sudo kill -9 <number>
git pull
stat -c <string>
git commit -m <string>
cat <string>
yarn <string>
sudo apt install <string>
cd <string>
git config --global <file> <string>
cp -r <directory>
htop
cd <string>
touch <string>
history
git init
rm -r <string>
ls
file -z <file>
exit
rg <string>
clear
cd ..
rmdir <string>
exit
wget <URL> -O <file>
ssh <string>
fg
chmod
clear
vim <file>
dpkg --list
rm --help
mv <string>
cd <string>
git clone <URL>
fg
ls
git checkout master
ls
cd <string>
sed -E -e <directory>
git push -u <string> master -f
mkdir -p <string>
git pull origin development
read
vim <file>
ls
read <string>
cd <directory>
less
history
read -p <string>
git push --help
ls
git stash
ls
git add .
cd <directory>
find -name <string>
ls
git add -A
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
vi <file>
cd <string>
touch <file>
find . -name <file>
clear
clear
ls
history
sed -e <directory> -e <directory>
cd ..
cat <string>
touch <file>
git stash
git init
mkdir <string>
python3 <file>
ls
git commit -a
rm <string>
cd ..
ls
curl -L <URL>
pwd
exit
wget <URL>
git push
rm -rf~/.config/emacs/.local/
chmod <string>
ls
git fetch
g++ -std=<string> <file> -o <string>
fg
git init
ls
man <string>
ls
ls
nc <string>
df -a -h
git add <string>
git stash pop
cd <directory>
fg
git remote add origin <URL>
sudo vim <directory>
python3 -m <string> install --user --upgrade <string>
ls
ls
nano <string>
git checkout <string>
sync
ls
sudo systemctl enable <string>
ls
done
npm publish
git pull
vim <file>
ls
fg
cd ..
curl -sL <URL>
git push --set-upstream <string> main
cat <string>
grep <string>
git grep -l <string>
git commit
ls -la
su root
sort -g
cd <string>
apt-get upgrade
git commit -m <string>
wget -nv --show-progress -O <file>
mkdir <string>
date
git push origin
ls
print
git -h
cp <string>
ln -s <string>
cd
ls
sed -E -e <directory>
rm <string>
cd <directory>
ls
ls -l-a
sort
exit
cat <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
vi <file>
nano <file>
apt-get install -y <string>
cd ..
more <file>
tmux new
grep -vi -e <string>
sudo systemctl stop <string>
clear
cd <string>
pico <file>
git reflog expire --all
git rm --cached <string>
history # shows command line history
cd ..
ls
rm -rf <string>
vim <file>
sudo apt-get purge <string>
exit
cd ..
sudo apt-get install <string>
exit
tmux
git add .
exit
ls
cd <directory>
ls
grep <string>
vim <file>
exit
systemctl status <string>
read -p <string>
tail -f <string>
awk -F\" <string>
touch <string>
mkdir <string>
ls -la
ls -la <directory>
ping <string>
ls
done
more <file>
history
cd <string>
git add .
ls
git push origin
ls
git status
exit <number>
cat <string>
mkdir -r <directory>
git log
mv <string>
cd <directory>
git pull origin development
clear
cd ..
clear
find <directory> -type <string> -atime <string> -delete <string>
cd <directory>
curl -X <string> -d <string>
cd <string>
sudo chmod a+wr <directory> -R
git pull
touch <string>
tail +n # Print nth line from file.
git clone <URL>
git init
cat <string>
cat <string>
history
sudo snap install <string>
exit
mkdir <string>
history
ls
curl <string>
ls
grep <string>
php artisan schema:dump --prune
go tool pprof <file>
vim
ls
sudo chmod a+rwx <directory>
git commit
apt-get install -y <string>
sudo service nginx reload
git clone <URL>
ls
sudo mkarchiso -v -w <string> -o <string> slim-iso -r
ls
sudo useradd -m <string> -s <directory>
bash <file>
python3.11 <file>
sudo npm install <string>
ls
vim <file>
ls
docker-compose --version
apt-get update
cd ..
rm <string>
sed -E -e <directory>
wget -q -O - <URL>
less <string>
exit <number>
chmod +x <string>
sudo apt update
ln -s <string>
touch <file>
exit <number>
sudo pip install <string>
ls
cat <string>
git add <string>
ssh <string>
vi <file>
git push -u <string> main
git add .
ls
clear
export <string>
cd
cp <string>
ls
ls
git diff <string>
ls
git commit -m <string>
ls -lh
vim <file>
cat -v <string>
ls
vim <file>
cd <directory>
cd ..
git clone <URL>
exit
git -h
cd <directory>
ls
cd <string>
git commit -m <string> --no-verify
chmod <number> <string>
ls
cat <string>
ruby -e <string>
git status
fg
cd ..
git remote add origin <URL>
git init
git remote add origin <URL>
ls
exit <number>
git help
cd ..
ls
tmux source-file <file>
rm -rf <string>
grep <string>
uniq
rm <string>
git push
sudo apt-get install <string>
grep -q <string>
git rebase
clear
ls
cd <string>
cd <directory>
ls
lsblk -q
cd
sudo chmod <number> <directory>
ssh dirlic@10.18.0.39 -p <number>
sudo php <file> --install-dir=<directory> --filename=<string>
print -z <string>
docker rmi --help
git checkout -b <string>
clear
sh <file>
grep -Ei <string>
git pull
cd <string>
git merge
cd <string>
ls
cat <string>
git commit --amend --no-edit --no-verify
export <string>
cd <directory>
fg
ls
clear
clear
clear
ls
history -a
ls
ls
chmod u+x <string>
ls
sudo apt-get update
wget <URL>
ls
exit
sed -i <directory>
git status
nohup node <file>
ls
sed -e <directory>
sudo service <string>
ls -l
git clone <URL>
ls
ls
git commit -m <string>
git commit --amend
curl <string>
cd ..
git add <string>
git commit -am <string>
cd <string>
clear
mkdir -p <string>
npm run build
python3 <file>
exit <number>
tail -f <string>
ls -l
diff <file>
sudo sed -i <directory> <file>
cd ..
ls
cd <directory>
mv <string>
diff <file> <file>
vi <file>
rm -rf <string>
ls
read -r -p <string>
vim <file>
cp <string>
ls
git log
sudo docker rm corrade
ls
cd <directory>
vim <file>
npm install
git status
reboot
cd <string>
rm -rf <string>
cd <directory>
git status
systemctl enable <string>
exit
git add -u
vi <file>
cd <string>
cd <directory>
find FOLDER -type <string> -delete
git stauts
git add <string>
cd <string>
more <file>
ls -AF
sudo lvcreate -L <string> -s -n <string>
mv <string>
ls
node
cat <string>
cp <string>
less
ls
ls -lah
clear
su
fg
git push
vi <file>
top
cd ..
git checkout -b <string>
git status
cd
rm <string>
cp -r <directory>
git checkout <string>
cat <string>
ls
git config <file> <file>
git add .
reset
sh
ls
ls
sudo apt -y <string>
grep <string>
vim <file>
sudo pacman -S <string>
ls -la
sed -i <directory>
ls -l
cd
cd <string>
ls -l
vi <file>
ls
cd <string>
npm i -D <string>
ls -la
grep <string>
ls # lists your files in current directory, ls <dir> to print files in a specific directory
sed -i <string>
ls
git fetch
wc -l
sleep <number>
git pull origin master
ls
ssh <string>
npm ERR! <string>
docker
git add .
python3 <file>
ls
ls
vi <file>
print <string>
sh
rm <string>
sed <directory>
cd <directory>
ssh -t <string>
git status
cut -d. -f1
cd <string>
sed -i -- <directory>
egrep <string>
pwd
cd <string>
sudo shutdown -h <string>
git init
ps aux
grep -r <string>
ls
vi <file>
ping <string>
chmod <string>
git status
vi <file>
cd
cd ..
cd ..
cd <string>
vim <file>
fg
ls
ls
docker-compose up -d
python3 <file>
chmod +x <string>
find . -size <string> -a -print -a -exec <string> -f <string> \
then\
cp -r <directory>
ls -ladotfiles/bash/
vi <file>
ssh -L <string> -N -f -l <string> <string>
service apache2 restart
cd ..
vim
ls
vi <file>
cat <string>
cat <string>
pwd
git status
cd <string>
cd <directory>
mv <string>
sed -i <directory>
npm i <string>
cd <string>
sed -n <string>
git add .
git pull
git log
npm start
cd <string>
python3 <file>
cd ..
sudo halt
ls
git commit -m <string>
apt upgrade
sudo apt install <string>
exit
fg
unset <string>
ping <string>
ls -la <directory>
find . -type <string> -empty -exec <string> <string>
git merge <string>
ls
mkdir <string>
cd <directory>
unset <string>
systemctl stop <string>
clear
git init
cd <directory>
cd <directory>
docker -v
rm -rf <string>
docker kill <string>
xargs -0 <string> -i -e <directory>
git
lsblk
ls
cat <string>
docker rm <string>
sudo rm -rf <directory> <directory>
ls -laSh
ls
wget -O <file>
ls
sudo add-apt-repository <directory>
tmux kill-server
git clone --single-branch -b <string>
git checkout <string>
sudo su
chmod <number> <string>
clear
vim <file>
cd <string>
clear
fg
cd <string>
clear
mkdir <string>
cd ..
git checkout -b <string>
ls -ltr
git status
vim <file>
curl -k -s <URL>
curl <string>
clear
sudo su
npm run bench
git push
cd
git push
npm i <string>
du -B <string> --max-depth <number>
sudo service nginx restart
ls
ls
git add .
cd ..
git config --global <file> <string>
git commit -m <string>
chmod <string>
ls
git add .
vi <file>
cut -d',' -f2 <file>
cd <string>
find --name=<file> <string>
read -n <number> -s -p <string>
find . -name <string> -type <string>
fg
sudo shutdown
rm -f <string>
sudo docker ps
grep -r <string>
exit <number>
vim <file>
fg
sudo ssh-keygen
sudo nano <directory>
ls -a
tmux -v
ps ax
wget -O <file>
find . -name <file>
clear
clear
git push
vim <file>
cat <string>
cat <string>
git commit -m <string>
ls
cd <string>
mv <string>
git status
tmux
fg
pkill <string>
git clone <URL>
npm install <string>
npx create-react-app <string>
sudo su
ls
chmod <number> <string>
cd ..
alias <string>
git status
ls
sudo chmod +r <file>
mkdir -p -public/images
cd <directory>
grep -i <string> >files
nano <string>
cd
ls
cp -r <directory>
sudo yum install docker -y
exit
exit <number>
ls++ -a
ls
docker tag <string>
git stash
sudo rm -r <string>
git status
clear
cd <directory>
cd <string>
ssh -o <string>
find {target_directory} -mtime <string>
cd
su - <string>
cd <directory>
ls
cd ..
sudo kill <number>
sudo rpm --import <URL>
git clone <URL>
ls
python3 <file>
git clone <URL>
sudo -i
ssh dirlic@10.18.0.39 -p <number>
vi <file>
ls
cd
cd <directory>
cd <string>
cd <directory>
ls
vim <file>
git status
cd ..
cd <string>
fg
ls
cd ..
git status
git status
ls
touch <string>
ls
do\
cd <directory>
ls
sudo cp <file> <file>
cat <string>
sudo apt-get install <string>
cd ..
ls -la
nano <file>
sudo apt install <string>
ls
ls
cd <directory>
ls
git status
vi <file>
ls
sed -r <directory>
sudo uftrace <file>
su - <string>
cd <string>
top
npm install <string>
git commit -m <string>
ln -s <string>
exit
mv <string>
ls
clear
clear
git push -u <string> master
cd <string>
npm start
ls
cp <string>
vi <file>
reboot
git commit -m <string>
sudo yum -y <string> nodejs
sudo make install
fg
sed -i <string>
ls -l
vi <file>
exit <number>
find . -empty -type <string> -print -delete
ls
sudo apt-get update
journalctl -b -3 -e
less <string>
vi <file>
git remove <string>
npm audit fix
chmod -x <file>
less
ls
cd <directory>
lsblk
cd <string>
git status
which <string>
done
git config --list --local
ln -s <string>
git commit --amend
dpkg-shlibdeps: <string>
chmod <number> <string>
cd
mkdir <string>
exit
ls
ls
ip addr
mkdir -p <string>
cd <string>
export <string>
ls
sudo npm install -g <string>
tmux set-option -g <string>
git commit -m <string>
nano <file>
git commit -m <string>
find <directory> -name <string> -type <string>
make clean
ls
cd ..
vi <file>
cd <string>
docker ps
cd ..
cd <directory>
vim <file>
cd <string>
cd <string>
cd <directory>
rm -r <string>
git pull
ls
cd
nano <file>
nohup node <file>
exit
nano <string>
git stash
vim <file>
python3 -m <string> install --upgrade <string>
vim
sudo nano <file>
sudo chmod +rwx <string>
rm -rf <string>
vi <file>
ls
git rm --cached <string>
ls
rm -r <string>
ls -al
sed -e <directory> -e <directory>
ls
mv <string>
clear
git push
git add <string>
sudo chmod +x <string>
cd <directory>
cd <string>
git add <string>
apt list --upgradable
git add <string>
head -y <file>
git remote add origin <URL>
git status
sudo -o
sudo service nginx restart
cd ..
grep <string>
man <string>
git status
npm run package
vim <file>
clear
ls
cd <string>
git config --global <file> <file>
df # shows disk usage
ls
sed -ri <string>
find . -name <string> -type <string>
ls
tr <string>
nohup java -jar <string>
git status
done
ls
read -p <string>
cd <string>
npm run test
wget <URL>
git push -u <string> main
git log
ls
vi <file>
cat <string>
ls
cd <directory>
vi <file>
clear
git status
man <string>
view <string>
clear
ls
rails --version
exit
ls
touch <string>
fg
vim <file>
git checkout <string>
clear
git checkout -b <string>
cp -r <directory>
sudo apt-get update
sudo chown niten2:niten2 -R <directory>
ln -s <string>
<directory> -m <file>
cat <string>
sudo pacman -sS <string>
clear
cd <directory>
vi <file>
cd <string>
ls -lrt
<directory> -m <file>
sudo dnf install -y <string>
vim <file>
git add <string>
ls
sudo python2 <file> --cascade=<file> <number>
cd <string>
git clone <URL>
code --help
git merge <string>
rm <string>
wget -qO - <URL>
yarn install
history -a
ls
cd <directory>
sudo vi <file>
sudo -H <string> install -U <string>
dpkg-query
docker-compose -f <string>
curl -s -L <URL>
unset <string>
vim <file>
cp -r <directory>
mkdir <string>
ls
git tag <string>
ls
ls
npm run dev -- -p <number>
done
mkdir <string>
npm -v
git commit
cd <string>
ls
git commit
uniq -c
git status
python3 <file>
exit
ls
ls
sudo apt update -y
cd <directory>
sudo poweroff
git commit
git add .
mkdir -p <string>
ls
rm -rf <string>
sudo pacman -Ss <string>
exit <number>
tmux
git add <string>
git status
docker container rm <container> ------- <string>
cd <directory>
ls -altr <string>
cd ..
cd <string>
ls -la
ls
ls
sudo chmod +x <string>
git stash
clear
cd <directory>
man <string>
curl -o <string>
grep -i <string>
git init
cd ..
cd <string>
npm http <number> <URL>
ssh -i <string> remote_user@remote_host
sudo chown <string>
git commit
git remote add origin <URL>
service apache2 restart
awk <string>
done
git config --global <file> <file>
pwd
grep <string>
rm <string>
cd ..
cd <directory>
uniq
bash <file>
sed <directory>
service <string>
find . -type <string> -exec <string> <directory>
ls
ls
npm run test:watch
ls
ls
cp <string>
cd <string>
git push --set-upstream <string> master
cd ..
ls
ls
sed <directory>
cp <string>
git pull origin master
service apache2 restart
grep -i <string>
sudo sed -i <directory> <file>
ls
cd ..
sudo <directory> <string>
ls
git add <string>
clear
cd <string>
cat <string>
clear
clear
cd <string>
ls
rm -r <string>
ls
wc -l
ls++ -a
s/:/ <directory>
ls
sudo sed -i <directory>
read <string>
clear
sudo sed -i <directory> <file>
cd <directory>
top
ls
git clone <URL>
clear
cd
cd ..
cd <string>
sudo -H <string>
exit
git init
sudo docker run -d -p <string> --name <string>
sudo gem install <string>
cd <string>
cd <directory>
cd <string>
grep <string>
sudo chown -R <string>
cd <string>
rm <string>
ls
sudo sed -i <directory> <file>
sudo sed -i <directory> <file>
git commit -m <string>
ps -ef
grep <string>
pacman -S <string>
exit <number>
ls
vim <file>
vim <file>
byobu-tmux
sudo less <directory>
ps ax
history -c
cd <string>
exit
cd <string>
rm -rf <string>
mkdir <string>
less
history
sudo start uwsgi
df
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
fg
ls
cd <string>
ls
pwd
find <directory> -type <string>
clear
cd ..
cat <string>
mkdir <string>
docker rmi <string>
cd <directory>
cd <string>
git push -u <string> main
cat <string>
cd <string>
npm install <string>
git add <string>
ps
find . -type <string> -print0
git add <string>
cd <directory>
npm run test
cd <directory>
sudo apt get <string>
rmdir <string>
git status
vi <file>
rm -r <string>
git diff <string>
curl -sL <URL>
ls
cd ..
git rm <string>
df
ls -la <directory>
git remote add origin <URL>
git checkout master
rm -r <string>
cd ..
clear
git pull origin master
rmdir <string>
cd <string>
git status
cd <string>
head -n <string>
awk <string>
cd <directory>
cd <directory>
clear
ls
ls
ps ax
find . -empty -type <string> -print -delete
python3 <file>
mv <string>
cd <string>
git commit -m <string>
git revert <string>
read <string>
grep <string>
git push
cd <directory>
git branch -D <string>
grep <string>
git branch -M <string>
cd <string>
exit
nano <string>
grep <string>
cd <string>
git status
clear
chmod u+w -- <string>
git add .
cat <file> -n <number>
git clone --mirror <string>
git push -u <string> master
vim <file>
cd <string>
history
cd <string>
vi <file>
sudo apt dist-upgrade -y
bash
cd <string>
cd <directory>
grep -iC2 --color=<string> <string>
sort
cd <string>
git push -u <string> main
sed <directory>
ls
vim <file>
cd <directory>
find path -type <string>
sudo swapon -s
ls -la
sudo systemctl restart nginx
cd <string>
cd ..
history -h
mkdir <string>
cd ..
clear
sudo apt install snapd -y
vim <file>
vi <file>
git --version
cat <string>
ls
sudo apt-get upgrade -y
ls
ls
terraform plan <string>
clear
sed <directory>
ls
ls
git init
unset
touch <file>
curl -L <URL>
git pull origin master
git push -u <string> main
clear
vim <file>
rm <string>
ls
git add <string>
df
ls
vim <file>
tmux
source <directory>
rm <string>
git status
git add .
ls -al
git add .
find <string> -iname <string>
sudo date -s <string>
sudo prometheus --config.file=<file>
apt-key add -
patch <file>
git push origin2
cd <string>
git branch --a
history
cd <directory>
git diff
mv <string>
git push -u <string> main
ls
ls
ls
find . -size <string>
sudo curl <URL> -o <directory>
cp <string>
zeus.polsl.gliwice.pl - <number>
git commit -m <string>
ls
sudo apt-get install <string>
git add .
ls
cd <string>
ls
systemctl enable <string>
sudo rm -r <string>
cd ..
grep <string>
git status
cd..
ls
fg
git push origin master
find . -name <file>
done
ls
git status
ls
ps aux
rm <string>
git status
exit
git rebase <string>
ls
git clone <URL>
service apache2 restart
vim <file>
ls
cat <string>
mkdir <string>
sort -nr -k <number>
sudo vim <file>
awk <string>
cd <string>
tail -$nlineas <string>
grep -o <string>
mvn compile
cd <string>
npx create-react-app <string>
clear
cd <string>
rmdir <string>
cd ..
wget <URL>
clear
git remote add origin <URL>
git init
mkdir <string>
cd
ls
vi <file>
sudo apt update
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
pacman -S <string>
git reset
ls
git commit
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
apt-get install <string>
vi <file>
cd <string>
cd <string>
git branch -M <string>
history
exit
vi <file>
pwd
cd <string>
ls
cat <string>
cd <string>
done
cd <directory>
touch <string>
cd <directory>
ls
sudo sed -i <directory> <file>
exit <number>
git status
exit <number>
mkdir <string>
vim <file>
ls
git checkout -b <string>
find . -name <string> -type <string>
python3 <file>
vi <file>
git pull
vim <file>
sudo ufw status
ls
ping <string>
ls
rm <string>
cd <string>
cat <string>
sudo snap remove <string>
dpkg-reconfigure - <string>
cd ..
history
ls
curl -so- <URL>
python
cd
vim <file>
<directory> <string>
ls
exit
git checkout master
exit <number>
sudo nala install $cmd -y <string>
ls
ls
mkdir -p <string>
git status
exit
cat <string>
cp <string>
git init
vi <file>
cd ..
git add <string>
git status
git commit -a -m <string>
git commit -m <string>
sudo nano <directory>
sudo snap install node --classic --channel=<number>
rm -rf <string>
cd <string>
sudo python <file> --insecure
alias <string>
cd <string>
ls++ -a
chsh -s <directory>
ls
grep -i <string> >files
sudo usermod -a -G <string>
git remote -v
git clone <URL>
ls
tmux
grep <string>
ls
cat <string>
ls
sed --regexp-extended --expression <string>
find <directory> -type <string> -name <string>
ssh-add <directory>
cat <string>
cd <directory>
cd <string>
ls
ssh-keygen
clear
ls -d <string>
rm -rf <string>
ls
cat <string>
sudo apt-key adv --keyserver <string> --recv <string>
git clone
git push heroku main
ls
cd <directory>
sudo add-apt-repository <directory>
git push
git init
git add .
git commit -m <string>
ls
grep <string>
cd <string>
rm <string>
git checkout <string>
cd <string>
cd ..
aptitude update
git git status
git pull
pwd
git push origin main
ls
history
ln -s <string>
clear
python3 <file>
nano <file>
nano <file>
ls
cd <string>
chmod <number> <string>
chmod u+x <string>
ls
git diff <string>
fg
git branch --all
git commit -m <string>
df
find $1 -depth -exec <string> -c <string>
source <string>
ls
grep <string>
cd <string>
ls
rm -f <string>
python3 <file>
subl <string>
git status
exit
kill -s <number> <number>
sudo rm -R <string>
wget <URL>
ls -l
snap install <string>
which <string>
python3 <file>
sudo <directory> restart
ls -al
git add <string>
pwd # <string>
exit
git status
curl <string>
sed <directory>
vi <file>
ls
clear
mv <string>
python3 <file>
cd
cd <string>
ls
cat <string>
grep <string>
vi <file>
pkill <string>
git config --global <file> <file>
ps axfu
find . -type <string> -exec <string> -n -e <directory>
bash -s -- -y\
rm -r <string>
vi
git status
nano <string>
git add .
grep -i <string> >files
cd <string>
git push --set-upstream <string> <string>
egrep -ri <string>
cd ..
sudo yum remove httpd -y
exit
cat <string>
sudo python3 <file> install
vim <file>
rm <string>
more <file>
npx <string>
npm run test
rm -r <string>
git push
rm <string>
grep <string>
curl -X <string> <URL> -d <string> -d <string> -d <string>
git commit -m <string>
vim <file>
clear
ls
npx tslint --project <string> --config <file>
sudo apt purge <string>
ls
man <string>
top
ls
ls
ls
vi <file>
cd ..
ls
sudo apt-get clean
clear
cd <string>
ls -l
vim
shutdown
git commit -m <string>
clear
cd <string>
git push -u <string> main
ls
ls
ls
wget <URL>
ls
git clone <URL>
git remote add origin <URL>
git branch
npm i <string>
ls -la
ls
npm install -g <string>
ls -altr
docker rmi -r <string>
cat <string>
ls
sudo sed -i <directory> <file>
cd ..
ps aux
wget -O- <URL>
rm -f <string>
wget -q --show-progress <URL> -O <file>
sudo sed -i <directory>
ls
cat <string>
ls
vim
curl <string>
ls
bash <file>
sudo addgroup <string>
clear
du
cd <directory>
ps aux
fg
sudo chmod o+x <directory>
chmod <number> <string>
git commit
cd ..
cd <string>
tail -f <directory>
clear
git pull
curl -O <URL>
git add .
wget -r <URL>
exit
mv <string>
sudo nano <directory>
cd
docker run -d --name <string>
docker -version
git status
ls
git fetch origin\
sudo sed -i <directory>
ls
cd <directory>
ls
npm start
git remote add origin <URL>
cd <directory>
ls
sudo ufw enable
sed <directory>
git clone --depth=<number> <URL> <directory>
git add .
zcat <file>
cd <string>
mkdir -p <string>
cd <string>
ls
clear
ps -ef
fg
awk --help
ls
sudo vi <directory>
git commit -m <string>
git init
vi <file>
print <string>
read <string>
clear
cd <directory>
unset <string>
mkdir <string>
ls
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
ls
git clone <URL>
cp <string>
mv -r <directory>
ls
tar -xvzf <file>
ssh -p <string> user@host # connects to host on specified port as user
sudo lpoptions -d <string> -l
npm i <string>
vim <file>
ls
screen -wipe -S <number>
sudo apt autoremove
cd <string>
sed <directory>
cd ..
sudo service nginx reload
vi <file>
fg
fg
cd <directory>
ps -ef
multitail --no-repeat -c -s <number>
cat <string>
ls
git commit -m <string>
git branch -M <string>
ls
exit <number>
git commit -m <string>
ls
sudo nano <directory>
cd ..
mkdir <string>
sudo systemctl start <string>
exit <number>
mvn compile
cd <string>
mkdir <string>
cd ..
find <directory> \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <string> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file>
sudo vim <directory>
ls
fg
git pull origin
git add <string>
read <string>
node <file>
git status
exit <number>
ls
python3.11 <file>
ls
sudo vi <file>
ls
ls
git add .
clear
cd <string>
ls
git status
sudo rm -r <string>
df
git push -f
vim <file>
clear
git clone <URL>
wget
git log --name-only --oneline -n <number>
mkdir <string>
cd <string>
git checkout <string>
cd <string>
npm start
find . -empty -type <string> -print -delete
cd <string>
wget -q -O <file>
git st
git commit -m <string>
vim
sudo apt update
sudo rm -rf <string>
python3 <file>
git add <string>
fg
git stash list
npm run register
cd <string>
ls -l
cd <directory>
python3 -m <string>
docker cp <string>
cd <directory>
vim <file>
du -sch <string>
cd ..
cd ..
python3 <file>
cd ..
sort
history
sudo apt update
sudo aptitude install <string>
npm install -g <string>
ls
npm run dev
git pull
git branch -M <string>
git init
sudo apt-get purge <string>
script/build.sh
wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=<string> --domains <file> --no-parent <URL>
ps auxf
ls
git push -u <string> master
git remote add origin <URL>
mv <string>
ls
git init
grep -Eio <string>
git commit -m <string>
ls -alh
exit
sudo su
gsutil cp <file>
ls -l
ls
cd <string>
sudo sed -i <directory> <file>
cd <string>
git diff
cat <string>
clear
vi <file>
rm -rf <string>
sed -n <string>
cd
sudo reboot
sed <directory>
find . -empty -type <string> -print -delete
sudo sed -i <directory>
exit
rm <string>
git push -u <string> main
cat <string>
curl -H <string>
exit
ls -lht
rm -rf <string>
cd <directory>
exit
cd <string>
fg
brew install <string>
cd ..
ls
brew install <string>
python3 <file>
sudo apt-get purge <string>
sudo start uwsgi
sudo gedit <string>
ls -l
npm i <string>
read -r <string>
chmod <string>
git add .
ls
rm <string>
cp <string>
pwd
cd <directory>
sudo apt update
read -n <number> -p <string>
exit <number>
git commit -m <string>
npm install -g <string>
clear
cd <string>
ls
xhost +
mkdir -p <string>
git clone <URL>
cp -r <directory>
rm -rf <string>
cat <string>
chmod +x <string>
git add <string>
cd <string>
git clone <URL>
tmux
git init
ls
cd <string>
npm install
clear
docker rm <string>
ls
git commit -m <string>
docker volume rm <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ls
ls
ls
sudo apt upgrade -y
ip a
sudo sed -i <directory>
clear
vim <file>
cd <string>
ps aux
python3 --version
git restore <file>
cat <string>
rsync --verbose --progress --recursive --compress --links --times --delete <string>
reboot
cp -v <string> <directory>
git init
wget -t <number> --retry-connrefused <URL>
apt install <string>
git config --system <file>
ls
rm -r <string>
cd ..
git clone --depth=<number> <URL>
top -n <number>
ls
sudo apt update
chmod u+x <string>
clear
vim <file>
vim <file>
set <string>
rmdir <string>
git init
sudo apt install <string>
git rebase <directory>
sudo du -h --max-depth=<number> <string>
curl -L <URL> -o <file>
git commit -m <string>
nano <file>
ls
rm -rf <string>
reset
git log --max-count <number> --pretty=<string> --abbrev-commit --decorate <string>
unset -f <string>
git merge
cd <string>
exit
find src
cd <string>
mkdir <string>
grep <string>
git status
git status
rm -rf <string>
cd <directory>
ls
cd <string>
ls
apt-get install -y <string>
chsh -s <directory>
docker-compose up -d --build
ls -a
git init
wc -l <string>
sudo apt update -y
cd <directory>
cd <string>
cd <string>
ls
exit
read -r <string>
git clone <URL>
grep -n <string>
ls
exit
grep -i <string> >files
ls
clear
git add .
sudo sysctl -w <string>
source <string>
cd
cd -
cd <directory>
fg
git push
ls
sudo sh
git remote add origin <URL>
find . -empty -type <string> -print -delete
git commit -m <string>
history
docker ps
npm update
ls
less <string>
df
nano <file>
yarn
cd <string>
cd <string>
cd <string>
ls
cat <string>
npm run dev
cd ..
cd <string>
tmux attach -t <string>
ls
ls
fg
ls
git rebase <directory>
mkdir <string>
source <file>
cd <string>
ls
git commit -m <string>
sudo mv <string>
ls
sudo shutdown -h <string>
ip a
ps -u <string>
<directory> install --from-paths <string> --ignore-src -r -y --simulate
cd <string>
cd <string>
clear
man <string>
cd
find <directory> -name <string>
cd <directory>
python3 <file>
grep -color <string>
ls
ls -l
vim <file>
cd <string>
cd <string>
ls -l
pwd
git config <file> false
git clone
systemctl stop <string>
mkdir <string>
cd <string>
git status
cat <string>
chmod <number> <string>
ls
chmod -x <file>
rm -rf <string>
sudo apt update
read -r -p <string>
cd <string>
cp -r <directory>
cd <string>
xargs -0 <string> <string>
cd <directory>
exit
cp <string>
ls
git commit
git stash apply <number> -q
cat <string>
ping -a <file>
cd <string>
curl -sl <URL>
cd <string>
gpg --keyid-format <string> --keyserver <file> --recv-keys <string>
git push --set-upstream <string> master
git init
git status
curl <string>
npm run test
find . -name <string> -type <string>
docker run --ulimit <string> --rm <string>
ls -la
cd <directory>
cd <string>
git pull
cd <directory>
grep <string>
cd ..
cd <string>
docker-compose up -d --build
dir
clear
sudo pacman -S <string>
ssh-keygen
cd <string>
sudo chown -R <string>
ls
source <file>
ls
ls
cd <string>
unset <string>
cp -f <string>
history
touch <string>
cd <string>
git add <string>
cd ..
cd <string>
cd <directory>
xargs kill
ls
git add .
tail -f <directory>
clear
ls
git status
cat <string>
apt-get update
cd ..
tr <string>
sudo start uwsgi
cp -r <directory>
clear
sudo apt update
ls
sudo pacman -S <string>
cd <directory>
vim <file>
vim <file>
ls -la
sudo modprobe -r <string>
sudo node <file>
print <string>
sudo systemctl enable <string>
ls > <file>
cd ..
sudo pip install <string>
ls++ -a
cd <string>
touch <string>
sudo dpkg --configure -a
ls
ls
git merge develop
git clone <URL>
grep <string>
git init
vi <file>
wget <URL>
git push origin main
cat <string>
sudo curl -L <URL> -s)-$(uname -m) -o <directory>
ls
ls
find . -name <file>
cd ..
git pull
git config --global <file>
wget -q -O <file>
cd <string>
npm install
ls
cd ..
cd <string>
mkdir --parents -- <string>
grep -win -C <number>
ls
mkdir <string>
ls
git status
git push origin <string>
LANG=<string> df -h
cd <string>
vim <file>
curl <string>
ps -ef
cd <directory>
cat <string>
git pull
fg
cd ..
pwd
sudo reboot
sudo pip3 <string>
cd <string>
head -3
vi <file>
rm -r <string>
ls
sudo adduser <string>
grep <string>
sudo make clean install
npm run start
ls -l
cd <directory>
ls
clear
cd
sudo python3 <file> install
clear
vi <file>
git add -A
source <directory>
wget -q <URL> -O <file>
chmod +x <string>
find . -name <file> -type <string> -print -delete
cd <directory>
git pull -p
exit <number>
awk <string>
exec --no-startup-id <string> -c
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
ls
ls
git init
ls
exit
git diff-tree --no-commit-id --name-only -r <string>
exit <number>
sudo apt-get install <string>
clear
curl
ssh <string>
docker-compose logs --follow <string>
ls
python3 <file>
git add <string>
sudo chmod <number> <string>
ssh -oStrictHostKeyChecking=<string> -oBatchMode=<string> -oConnectTimeout=<number> -i <string>
head
cp <string>
sudo make clean install
cd <directory>
vi <file>
ls
rm <string>
ls
git branch
clear
cat <string>
ls -al
vim <file>
exit
cd <directory>
sudo systemctl status <string>
vi <file>
more <file>
cd <string>
chmod -R <number> <directory>
exit
fg
clear
mkdir <string>
fg
vim <file>
sudo xcodebuild -license <string>
git reset --hard
cd <directory>
cd <string>
ls
git add .
clear
cd <directory>
vim <file>
git config --global <file> <file>
git push -u <string> bryan-guner
ls
pwd
mv <string>
git checkout
cd <string>
git commit -m <string>
ls
ls
sudo apt update
npm start
more <file>
rm -f <string>
exit
git pull
clear
cd <string>
sudo reboot
ls
yarn <string>
git branch -M <string>
ls
git clone <URL>
rm <string>
cat <string>
cd <string>
git commit
true
wget -q -O <file>
clear
git commit --amend --reset-author
cd <string>
git add .
git init
cd <string>
ls
touch <string>
ls
<directory> <string>
scp <string>
sudo apt update
ls
cd <string>
vi <file>
vi <file>
ls
python3.9 <file> -- <string>
vi <file>
cd <string>
git push
git config --global <file> <string>
cd <directory>
bash
nano <string>
docker-compose up -d
sed -i -e <string>
cd <string>
sort
sudo sed -i <directory> <file>
ls -ltr
cat <string>
cd ..
cd <string>
git init
ping <string>
vi <file>
sudo service nginx restart
ls
ls
sudo yum install -y <string>
clear
cd <string>
sed <directory> -i <string>
find . -name <string> -type <string> -print -delete
vi <file>
docker-compose logs
ssh-copy-id
rm <string>
cp <string>
git status
vim
git config --get <file>
cd <string>
npm install <string>
ls
cat <string>
sudo su
cat <string>
sudo sed -i <directory>
ls
mkdir <string>
ls
grep <string>
clear
ls
clear
nano <file>
cd <string>
git init
git push -u <string> master
ls
ls
grep -iE <string>
curl <string>
git pull --no-edit <string>
cd <string>
then\
sleep <number>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git commit -m <string>
sudo chmod <number> <directory>
ls
docker stop <string>
cd <string>
ssh <string>
awk <string>
ls
ls
clear
sleep <string>
docker-compose logs --follow <string>
apt-get -f <string>
ls
apt -qq -y <string> <string>
cd ..
clear
cat <string>
git init
cd <string>
rm -rf <string>
python3
cd ..
sudo chmod <number> <directory>
vim <file>
cd <string>
git pull
git pull
exit
curl -sL <URL>
set <string>
git status
rmdir <string>
sudo udevadm trigger
cd <directory>
cd <directory>
git push -u <string> master
head <filename> # outputs the first lines of file (default: <number> lines)
chmod +x <string>
cd <directory>
vim -c <string>
git init
mv <string>
ln -s <string>
ls -ltr
cd ..
xargs -L1 <string> clone
fg
sudo apt-get install <string>
grep <string>
git add <string>
sudo useradd <string>
git stash apply
git rm --cached <string>
cd ..
read -r -p <string>
sudo sed -i <directory>
sudo snap install sublime-text --classic
mount -t <string> --options=<string> <directory>
fg
tar zxf <file>
sudo chmod +x <directory>
exit <number>
ls
ls
curl -fsSL <URL>
ls
ls
chmod +x <string>
cat <string>
vim <file>
ls
cd <string>
sudo kill -s <number>
git commit -m <string>
grep -v <string>
find . -name <string> -type <string> -print -delete
export <string>
mv <string>
git add <string>
git clone --depth <number> <URL>
ls
grep <string>
ls
htop
ls
sudo -s -u <string> -H
cd <directory>
cd ..
git remote add origin <URL>
sudo chmod +x <string>
sudo chown -R <string>
cd <string>
su
rm -f <string>
ls
cd <directory>
git push
git pull
npm cache clean --force
ls
docker inspect --format <string>
df -lh
touch <string>
ls
cd <string>
ls
cat <string>
git remote add origin <URL>
tr <string> <string>
ls
git status
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
git add <string>
ls
sudo do-release-upgrade -d
rm -i -v <string>
cd
find . -size <string> -a -print -a -exec <string> -f <string> \
exit
cat <string>
find . -type <string> -exec <string> <directory>
gsettings set <file> <string>
sudo chmod -R <string>
then\
ls
ls -l
clear
nc <file> <string>
sudo sed -i <directory> <file>
git status
cd ..
sudo pacman -S <string>
python3.11 <file>
exit
clear
sudo apt-get dist-upgrade
vim <file>
exit <number>
cd <directory>
find . ! -name <string>
ps -auxwf
sudo apt install yt-dlp -U
man <string>
sudo dnf install <string>
cd ..
ls
sudo sed -i <directory> <file>
ls
cat <string>
sudo modprobe <string>
ls
git push
python3 <file>
print <string>
clear
code
ls
unzip <file>
cat <string>
ls
ls
mkdir <string>
sudo apt-get -y <string> <string>
git clone <URL>
grep <string>
cd <string>
ls
ls
git commit -m <string>
git commit
clear
sed -i <directory>
clear
cd
clear
vi <file>
ls
apt-get update
cd <directory>
sudo pacman -S <string>
git push
git checkout -b <string>
cd
dpkg
wget -q <URL> -O <file>
vim <file>
cd <string>
apt update
cd <string>
rm -rf <string>
grep <string>
ls
git clone <URL>
sudo apk add <string>
mkdir <string>
ls
curl <string>
ssh-add
git commit -m <string>
vim <file>
cd <directory>
cd <directory>
ls
git status
ls
vi <file>
xargs -L1 <string>
rm -r <string>
git branch
apt-get install <string>
unset -v <string>
git add .
sed <directory>
ls
git add .
find <directory> -type <string> -mtime <string>
fg
ls
ls
git pull
read <string>
ls -la
npm i <string>
cp <string>
cd ..
docker stop bigballers
<directory> <string>
sudo pacman -S <string>
ls
find . -name <string> -type <string>
cat <string>
git push
clear
git push heroku main
git merge <string>
find . -iname <file> -exec <string> -H <string>
ls
sudo cron stop
sudo rm -r <string>
sudo stop uwsgi
sudo port <string>
sed <directory>
else\
docker run -v <directory> -w=<directory> --rm -it <directory>
git push
git add .
find . -empty -type <string> -print -delete
cd <directory>
python3 <file>
cd <string>
sudo apt-get install <string>
fg
ls
git add .
ls
git checkout master
apt-get -y <string> <string>
eval <string>
bash
ls
ls
git status
git pull origin master
ls
head -n <number>
ls
git add .
git push -u <string> main
vim <file>
more <file>
grep <string>
sudo systemctl start <string>
git commit -m <string>
sed -i <string> -e <string>
sudo pip install <string>
git add .
clear
done
git pull
clear
cd <directory>
npm run dev
exit
git status
ls -a
ls
Docker <string>
mkdir <string>
more <file>
git remote remove origin
cd <string>
git log
docker rmi -f <string>
cd <string>
git add .
cd <directory>
vi <file>
ls
vim <file>
rm <string>
ls
cd <string>
sudo add-apt-repository <directory>
python3 <file>
ls
top
git commit -m <string>
cd <directory>
fg
exit
ls
vim <file>
history
wget -qO- <URL>
wget <URL>
sudo reboot
vim <file>
clear
ls
ls -a
ls
read -rp <string> <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
cd <string>
code .
rm <string>
git add <string>
clear
reboot
sudo sed -i <directory>
fg
unset <string>
git stash pop
sudo systemctl restart <string>
sudo apt-get install <string>
git remote remove origin
wc -l
ls
sudo apt-get update
git status
sh -c <string>
grep <string>
exit
fg
sudo pip3 install awscli --upgrade
cd <string>
helm <string>
git add <string>
git push -u <string> master
pwd
cd <directory>
ls
vi <file>
git push -u <string> master
git pull
touch <file>
clear
ls
vim <file>
cd <string>
ls
ls
git checkout --
docker-compose -f <string>
git pull
ls
exit <number>
cd <directory>
npm run dev
cp <string>
which <string>
exit
clear
git push -u <string> master
git log
du -h
sudo php <string>
exit
ls
vim <file>
clear
history -c
su
cd ..
ps aux
git status
ls
cd
sudo reboot
git stash --help
git pull
ls
cd <string>
git clone <URL>
sudo pacman -Q
ls
git add .
ls -al
clear
dpkg --clear-selections
ls
ls
cd <string>
docker run --rm -it <string>
ls -alh
python3.11 <file>
done
sudo apt install <string>
exit <number>
ls
ls
ls
ls
sleep <string>
git add .
vi <file>
ls
git branch -M <string>
pwd
exit
cd <string>
clear
git clone --recursive <URL>
cd <string>
git pull
scp <string>
exit <number>
chmod +x <string>
reboot
fg
vim <file>
du -sh
clear
cd <string>
cd ..
exit
ssh -t <file> tmux new -As0
ls
ls
done
ls
vim <file>
git co HEAD .
vi <file>
git commit --amend
git add <string>
ls
cd <string>
ls -latr
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
byobu-tmux
git push -u <string> master
cd ..
top
cat <string>
cd <directory>
npm audit fix
git config --list
npm config set prefix <string>
cd <string>
LANG=<string> rpm -qp --queryformat <string>
ls
cd <string>
npm install
wget -t <number> --max-redirect <number> --retry-connrefused -O <string>
cd ..
python3 <file>
ls
sudo apt update
rm -f <string>
export <string>
exit <number>
ls
git commit -m <string>
cp -R <string>
clear
sudo dscacheutil -flushcache
vi <file>
mkdir <string>
cd <directory>
sort
git push
ls -alrt
mkdir <string>
git commit -m <string>
git commit -m <string>
cd ..
git pull
exit
exit
cd <string>
clear
cd <string>
ls
touch <string>
vi <file>
rm -r <string>
fg
rmdir <string>
ls -alt
npm run serve
cd <string>
cd <string>
touch <file>
vi <file>
git pull
ls
ls
gpg --sign-key <string>
docker ps
grep -i <string> >files
git commit -v -a -m <string>
ls
cd ..
cd ..
git commit -m <string>
ls
ls
git add .
git add <string>
vim <file>
rmdir <string>
kill <number>
dpkg --get-selections
man <string>
tar -t <file>
mv <string>
mv <string>
cd <directory>
w
nc <file> <string>
export <string>
mv <string>
curl -X <string> -H <directory> -d <string>
ls
git init
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
ls
vi <file>
clear
sudo apt-get install <string>
git init
sudo fuser -k <directory>
npm install -g <string>
grep -i <string> >files
ssh <string>
cd <string>
git commit -m <string>
done
git status
ls
vim <file>
sudo systemctl status <string>
cd ..
git add <string>
cat <string>
cd <string>
git status
git push origin master --force
grep <string>
sed -r <directory>
curl -T <directory> <string>
cd ..
openssl rand -hex <number>
sed -E -e <directory>
rm <string>
sudo cp <string>
git commit
cd <string>
find . -empty -type <string> -print -delete
cd ..
grep <string> -B4 <string>
git checkout <string>
ls
npm run dev
ls -a
rm -rf <string>
head -n1\
cd
shutdown -h <string>
clear
cd <directory>
npm start
cd ..
git status
cd ..
ls
ls
cd ..
xargs -I <string>
sort
cd
cd <string>
sudo chmod a+rwx <directory>
ls
git remote add origin <URL>
tr <string> <string>
cd ..
ls
sed <directory>
sudo chmod a+rx <directory>
ls
cd ..
sudo chown -R <string>
sudo rm -rf <string>
ls
git pull
ls
cd <string>
cd <directory>
ls -lt
sudo apt install <string>
mv
vim <file>
git add -A
sed <directory>
mkdir <string>
npm run prod
xargs -L1 <string>
cd <string>
cd <string>
sudo usermod -a -G <string>
ls
grep <string>
ls
vim <file>
git please
vim <file>
reboot
cd <string>
git pull
fg
ls
ls
curl <string>
clear
git clone <URL>
curl -sSL <URL>
git status
sudo apt-get install -y <string>
cd ..
sudo yum install <string>
grep -E <string>
clear
vim <file>
node <file>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git pull
ls
cd <string>
clear
cd <string>
cd <string>
dmesg
cpio -p -d -v <directory>
ls
clear
ls
git remote add origin <URL>
cp <string>
sudo su
git commit -m <string>
cp -r <directory>
cat <string>
cd <string>
mkdir -p <string>
git status
sudo systemctl start <string>
curl -s <string>
vim <file>
chmod <number> <string>
ls
sudo pacman -R <string>
find . -name <file> -type <string> -print -delete
mv <string>
vim <file>
ls
grep <string>
less
clear
sudo service nginx reload
screen -S <string>
env
cd <string>
cd <string>
python3 <file>
exit
ls -la <directory>
git add <string>
git clone <URL>
cd <string>
git remote -v
chsh <string>
git config --global --list
git push -u <string> master
cp <string>
clear
mv <string>
rm <string>
ls
git init
ls
rm -r <string>
cd <string>
clear
sudo add-apt-repository --remove <directory>
cd <string>
cd
git commit
grep <string>
ls -la <directory>
wget <URL>
mv <string>
cd <string>
fg
cd <string>
sudo docker rm corrade
ls
git status
git flow init -d
exit
cd -
cd
npm run dev
ls
wget <URL>
less -r
ls
git commit -am <string>
cd <directory>
wget -qO - <URL>
ls
git commit -m <string>
chmod +x <string>
python3.11 <file>
ls
nano <file>
git stash pop
history
mkdir <string>
wget -N --no-check-certificate <URL>
git clone <URL>
tail -f <string>
export <string>
find -mindepth <number> -name <string>
exit
cd <directory>
sudo apt update
python3 <file>
ps -ef
cd <string>
rm <string>
cd ..
clear
sudo nala install <string>
less
git clone <URL>
mkdir <string>
ls
git fetch origin\
read <string>
python3 -m <string> install <string>
tail -n200
sudo apt install <string>
touch <file>
rm <string>
source <directory>
sudo snap install authy --beta
htop
clear
ls
sudo su
vim <file>
mkdir <string>
cd <directory>
cd <string>
kubectl apply --filename <file>
curl -sSL <URL>
cd <string>
python3
npm
npm run coverage
sudo python <file>
git add .
vim <file>
git status
ls
ls
grep -v <string>
chmod <string>
git add -u
ls
ls
exit <number>
sed <directory>
grep <string>
tail -f <directory>
sudo wget <URL>
cd <string>
su
git merge <string>
cd <string>
git restore
vim <file>
sudo mkdir <directory>
ssh-keygen
which <string>
ps aux
ls
ls -lAF
source config --set <string>
source <directory>
cp -r <directory>
cd <string>
sleep <number>
vi <file>
read -r -p <string>
chmod <string>
git add <string>
python3 <file>
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
ls
curl -k <URL>
git commit
git co HEAD .
touch <file>
python3 <file>
clear
cat <string>
nano <file>
mkdir <string>
cd ..
npm run dev
git status
cp <string>
git status
wget <URL>
mkdir <string>
cd <directory>
git init
xargs -L1 <string> clone
mv <string>
rm -rf <string>
git add <string>
git commit -m <string>
git push -f
sudo systemctl status <string>
ls
mvn exec:java -Dexec.mainClass=<file>
cd <string>
git commit -m <string>
cd <string>
vi <file>
sudo apt update
ls
git clone <URL>
npm install <string>
ls
mv <string>
code .
ls
python3 <file>
git clone <URL>
cd <directory>
git add <string>
source <file>
cd <string>
sudo -E <string> -
vim <file>
cp <string>
ls
exit
cd <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git pull origin development
git status
cd <string>
sudo systemctl restart <string>
ls -la
apt-get install <string>
unset color_prompt force_color_prompt
ls
ls
open <string>
pwd
ls
exit <number>
xargs -L1 <string>
head
ssh -p <string> user@host # connects to host on specified port as user
nano <file>
cat <string>
ls -a
rm -rf <string>
ls
ls
mkdir <string>
ls
sudo php <string>
nano <file>
ls
clear
cd <string>
exit
chmod <string>
cd <string>
ls
sudo systemctl restart nginx
ls
cd <directory>
grep -vi -e <string>
exit
mv <string>
git clone <URL>
ls
ls
grep -E <string>
sed
docker ps
export <string>
cd <string>
sudo apt-key add -
cd <directory>
clear
git commit -m <string>
ls
mkdir <string>
sudo vim <directory>
vi <file>
ls
cd <directory>
git add <string>
brew cask <string>
find . -type <string> -mtime <string>
which <string>
python3 <file>
ls
sudo apt install zsh exa -y
sudo apt-get install <string>
git clone <URL>
git init
ls
clear
ls
git clone <URL>
reboot now
git help <string>
git commit -m <string>
ls
open <string>
ls
sudo chown admin:admin -R <directory>
sed -n <string>
kubectl apply -f <string>
sudo groupadd docker
sudo ufw enable
git checkout <string>
git commit -m <string>
exit
git status
sudo sysctl -w <string>
export <string>
exit
cd <string>
git add .
sudo su
ln -s <string>
ls
pwd
sudo gem install <string>
vim <file>
git push
ls
cd <string>
sudo git pull origin master
vim <file>
sudo git config --system <file>
vim <file>
sudo python3 <file>
ls
vim <file>
ls
git remote rm <string>
exit
cp -r <directory>
ls
git checkout <string>
git add .
sudo nginx -help
read -rp <string> <string>
curl -O <URL>
unzip <file>
vim <file>
sudo python3 <file> install
xargs -n1 <string>
cd <string>
su
git push -u <string> master
ls
cat <string>
fg
ls
rm <string>
ls
cd
cd
git commit -m"update"
tee --help
mv <string>
bash
sleep <number>
sudo modprobe <string>
ls
vim <file>
cd ..
sudo usermod -aG <string> $USER
rg <string>
nano <file>
sudo aptitude purge <string>
clear
cd ..
cd <string>
cd <string>
curl -s <string> -o <string>
ls
ls
vim <file>
ls
vim <file>
cd ..
cd <string>
clear
git status
cd <string>
git status
sudo start uwsgi
cd <string>
ls -al
exit
cd <string>
cd ..
ls
ls
sudo apt-get upgrade
git config --global <file> <string>
cd
sudo mkdir -p <directory>
bash
exit
cd
sed <directory>
sed -i <directory>
systemctl status <string>
vim <file>
ls
exit
curl -sSf <string>
ls -la
cat <string>
git commit -m <string>
cd <string>
cd <string>
docker exec -it <string>
killall <string>
local <string>
ls
cd <string>
git fetch origin\
cat <string>
git clone <URL>
sudo touch <directory>
git status
rm <string>
cd <string>
vi <file>
cd <string>
python3 <file>
git commit -m <string>
mv <string>
touch <string>
sed -i <string>
ls
cd <string>
kill <number>
git add .
exit
python3 <file>
cd <string>
reboot
ls
ssh dirlic@10.18.0.39 -p <number>
vim <file>
source <string>
exit
ls
sudo apt-get install libgl1-mesa-dev-lts-utopic -y
git clone <URL>
man <string>
ls
ls
cd <string>
test -t <string>
tmux attach
cd <string>
git commit -am <string>
sudo pacman -S <string>
find <string> -name <file>
ls
git init
vim <file>
cat --color=<string> <file>
git pull -f
sudo chown <string>
mount -t <string> -o <string>
dpkg -l
cd <string>
sudo pacapt --noconfirm -S <string> git
history -c
pwd
ls -ltr
ls++ -a
cp <string>
git commit -m <string>
clear
git clone
rm <string>
code <string>
ls
ls
vi <file>
cd <string>
print <string>
npm install
ls
grep <string>
bash --norc
sudo sed -i <directory> <file>
git push
curl -s <string>
cd ..
ls
cd <string>
cd <string>
git checkout master
cat <string>
git push
cd <directory>
cd
cd <string>
rm -fR <string>
ssh-keygen -t <string> -f <directory> -C <string>
nano <string>
cd
ls
cd <string>
grep <string>
cp -r <directory>
git remote add origin <URL>
mv <string>
read -s -n <number>
exit
rake <string>
curl -sOL <URL>
env
tail -40
ls
exit
cd <directory>
git add <string>
sudo ln -s <directory>
clear
python3 <file>
cd <string>
exit
ls
cd <string>
sudo gem update <string>
ls
ls -la
rm <string>
source <string>
cp <string>
cd <string>
ls
less <string>
vi <file>
exit
git add <string>
curl <string>
sudo dpkg --clear-selections
rm <string>
top
ls
find . -name <file>
head <filename> # outputs the first lines of file (default: <number> lines)
eval <string>
cd
vi <file>
vim <file>
history -a
git push
touch <file>
git commit -m <string>
vim <file>
cd <directory>
python3 <file>
cat <string>
git add .
ag <string>
cd <directory>
git pull
ls
mkdir -p <string>
npm install <string>
git add <string>
sudo su
vim <file>
set
cd <directory>
ls
sed -E -e <directory>
ls
cat <string>
find . -empty -type <string> -print -delete
vim <file>
ls -alrt
git add <string>
ls
git status
ls
sudo sed -i <directory> <file>
cd <string>
fg
git push -u <string> master
git commit -m <string>
head -n1
apt install <string>
cd <string>
git remote add origin <URL>
cd <string>
cd <string>
git push
git lfs <string>
exit <number>
ls
sudo dnf updrade --refresh
ls
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
sudo apt install <string>
ls
git commi -m <string>
unset color_prompt force_color_prompt
vim <file>
history -a
clear
mkdir <string>
clear
ping <string>
git push -u <string> master
git pull origin main
rm -rf <string>
clear
apt-get purge <string>
cd <directory>
docker ps
git gc --aggressive --prune
sudo jobs -p
apt --fix-broken <string>
cd <string>
unset <string>
tail -f <directory>
git status
ls -la
rm -f <string>
apt-get autoremove
local <string>
ls
cd ..
history -c
git remote add origin <URL>
ls
ls
ls
mount -t <string> overlay -o <string>
cd <string>
sudo chmod a+rx <directory>
cd <string>
git checkout <string>
ls
cd <string>
clear
sudo prometheus --config.file=<file>
rmdir <string>
rm <string>
cp -v <string> <directory>
docker rm -f <string>
sed -i <directory>
ls
ls
vi <file>
ls
mv <string>
cd <string>
exit
npm install typescript -g
ls
git commit -m <string>
ls
sudo apt upgrade
ls
curl -o- <URL>
systemctl status <string>
dmesg
cd <string>
fg
git push origin master
git pull
mount --types <string> overlay --options=<string> <directory>
history
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
exit
git push -u <string> master
clear
nc <number> <number>
tee -a <string>
sudo apt-add-repository <directory>
cd ..
ssh <string>
python3 <file>
vi <file>
ls
ls
print -P <string>
git status
tmux --kill-session
vi <file>
sudo npm i -g <string>
curl -sL <URL>
git push -u <string> master
sleep <number>
ls
ls -al
ls
ls
cd <directory>
cd <string>
ls
cd ..
cd ..
ls
cd <string>
ls
cd <directory>
sudo which <string>
vi <file>
sleep <number>
scp -r <string>
mv <string>
ls
rm <string>
mv <string>
vi <file>
vim <file>
cd <string>
curl -fsSL <URL>
ls
grep -i <string> >files
git clone <URL>
ls
nano <string>
cd ..
ps ax
git remote set-url origin <string>
done
docker images
sudo gedit <string>
ls
fg
cat <string>
git checkout master
vi <file>
touch <string>
cd ..
git fetch
npm
cd <directory>
composer <string>
vim <file>
sleep <number>
head -n <string>
ls
docker run --network=<string> --name <string> -p <string> -p <string> -e <string>
rmdir <string>
tail +x # want to display all the lines from x to y. This includes the xth and yth lines.
ls
rm -iR <file>
find -name <string>
npm run test
ls
clear
sudo apt install <string>
git commit -m <string>
npx <string>
clear
git pull
cd <string>
git log --graph --oneline
sudo snap install node --classic --channel=<number>
ls
git
ls
source <file>
ls
cd <directory>
find . -name <string> -type <string> -prune -exec <string> -rf <string>
cp <string>
cut -d" <string> -f <string>
exit
sudo ln -s <directory>
ls
sudo apt-key adv --keyserver <string> --recv-key <string>
vim <file>
docker logs <string>
mkdir -p <string>
sudo systemctl status prometheus
ls
ls
history -c
sudo chmod +x <directory>
code <string>
git pull origin master
docker build -t <string>
vim <file>
ls
git push -u <string> master
ls
fg
git commit -m <string>
mv <string>
cd <string>
cd ..
python3 <file>
clear
exit <number>
sudo sed -i <directory>
ls
ls
git pull upstream <string>
rm -rf <string>
cd ..
cd ..
git clone <URL>
ls
grep -i <string>
clear
tar zxf <file>
ls
vi <file>
npm run bench -- -c <file> -n <file>
ping <string>
sudo find <directory> -name <string>
cd <string>
sudo vim <file>
cd ..
mv -i <string>
ls -xAh
setg RHOSTS.*
cd <string>
mkdir <string>
python3 -V
ls
cd
git status
ls
cd <string>
ls -la <directory>
htop
ls
fg
mkdir <string>
ls
git add -A
grep -R <string>
git add .
sudo reboot now
sudo nano <directory>
yarn <string>
ssh-add -l
wget -P <directory>
subl <string>
cd <string>
cd <directory>
cp -r <directory>
git remote add origin <URL>
read -s -n <number>
git add .
export <string>
ls
sudo motion -n
cd <string>
sudo prime-select <string>
cd <string>
cd <directory>
mkdir <string>
cd <string>
rm -f <string>
mv <string>
ls
rm <string>
vim
npm run bench -- -c <file> -n <file>
git init
ls
brew install <string>
git branch
ls
git stauts
git clone <URL>
sudo sed -i <directory> <file>
git add <string>
cat <string>
sudo make
code .
sudo yum install <string>
ls -lAF
git init\
cd <directory>
rm -r <string>
date
chmod <number> <string>
cd ..
find . -name <file>
sudo ln -s <directory>
git add -A
git push
rm <string>
cd ..
cd ..
git push
clear
cd
cd <string>
sudo nvidia-settings -a <directory>
curl <string>
vi <file>
fg
git pull
fg
sudo sysctl --system
ls
ls
rm <string>
git clone <URL>
sudo
xargs ls -gG --color
exit
ls
rm <string>
vi <file>
clear
curl -L <URL>
ls
sed <directory>
git add <string>
cd <directory>
cd
rm -f <string>
cp -r <directory>
ls
mkdir <string>
grep --help
sh
git rm --cached <string>
ls
fg
clear
cd
git add .
sudo code .
git log
sudo chmod +x <string>
date
ls
clear
vim <file>
exit
grep -rE <string>
vim
git add .
vim <file>
git push
ls
cp <string>
cp <string>
ls
ls
clear
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
cd <string>
sudo apt-get install <string>
ls
read -r -p <string>
cd ..
wget <URL>
ls projects
cd <string>
cd ..
git rm -f --cached <string>
git clone <URL>
nano <file>
git add .
rm -rf <string>
vi <file>
ls
cd <string>
ls
ls
exit
npm i <string>
git status
git init
cd <string>
git stash
ls
ls
git merge <string>
sudo sed -i <directory>
cd <directory>
git status
cd <string>
sudo nginx -h
cd <string>
ls
sudo vim <file>
cd <string>
fg
vim
exit
rm -rf <string>
sudo snap install ruby --classic
chmod -x <file>
ps aux
docker-compose
rmdir <string>
df # shows disk usage
hostname
git push
git log
cd <string>
find . -name <string> -type <string>
clear
cut -c11- <string> <string>
cd <string>
git status
git add -A
mkdir <string>
git add .
ls
exit
npm start
cat <string>
sudo xrandr --newmode <string>
clear
cd <string>
exit
ls
cat <string>
ls
git add <string>
pkill <string>
clear
cd <string>
git log
docker ps
vim <file>
cp <string>
git push origin
cat <string>
clear
cd
exit
sudo yum install <string>
vim <file>
exit <number>
ls
cd <directory>
ls -la
cd <string>
ls
wget <URL> -O <directory>
tail -f <string>
cd <directory>
touch <string>
git commit -m <string>
pacman -S <string>
sync
curl -fsSL <URL>
sed -i <directory>
git add <string>
ls
ls
sudo mv <string>
then\
ls -lrt
vim <file>
sudo dnf update -y
sudo systemctl start <string>
git init
sudo dnf install rapidjson-devel -y
source <directory>
wget -r -A.html <URL>
ping <file>
cd <directory>
history
select(.status.containerStatuses[].name==<string> <string>
git push
history -a
clear
nano <file>
vim <file>
cd <string>
pwd
ssh <string>
git remote add origin <URL>
sed <directory>
docker-compose logs
sudo apt-get autoclean
git pull
grep -w <string>
cd <string>
curl <URL> -s -G <string>
scp <string>
read <string>
cd <string>
exit
ls
ls
git status
cd <string>
clear
ls
su - <string> -c <directory>
sudo apt-get autoclean
sudo chmod +x <directory>
cd <directory>
ls
ls
ls
vi <file>
ls
cd <string>
ftp <string>
cd <string>
mkdir <string>
cd <string>
ssh -L <string> -N -f -l <string> <string>
cd <string>
sudo subl <string>
mv <string>
exit
ls
php artisan <string>
python3 <file>
source <directory>
sudo systemctl restart nginx
cd ..
find . -name <file>
cd <string>
ls
rm <string>
ls
sudo stop uwsgi
sudo rm -rf <string>
exit <number>
ls
mkdir <string>
npm install <string>
ls
cd <directory>
ls
rm -rm <directory>
mkdir <string>
cp <string>
npm i
sudo nano <file>
wget <URL>
ls
sudo pacman -S <string>
git remote -v
cd <directory>
cd ..
grep <string>
ls
git clone <URL>
ls
rm -r <string>
ls
vim <file>
cd <directory>
cd <directory>
git status
ls
git config --gloval <file>
<file> - <number>
git status --short
apt
ls
git status
cat <string>
ls
npm run test:watch
git status
ssh-keygen -y -f <directory>
cd <string>
sudo <directory> -s <file>
vim <file>
sudo apt upgrade
uniq -f1
git rm --cached <string>
vim <file>
sudo apt update
source <directory>
exit
ls++ -a
sudo bash
ssh dirlic@10.18.0.39 -p <number>
exit
ls
cd <string>
python3 <file>
ip a
git branch -m <string>
cd <directory>
less <string>
git push
sudo apt-get install <string>
sudo apt install <string>
df -h
ls -la
python3 <file>
cd <directory>
cd <string>
sudo apt -y <string>
cd <directory>
sudo apt remove <string>
git --version
multitail --no-repeat -c -s <number>
git add <string>
npm install <string>
ls
ls
ls
chmod <number> <string>
cd <string>
cd <directory>
cat <string>
sudo -E <string> -
git push -u <string> master -f
ssh -i <string> remote_user@remote_host
pwd
cat <string>
sudo systemctl restart <string>
sudo apt-get update
cd <string>
exit <number>
vi <file>
cd <directory>
<directory> <directory>
read -r -p <string>
docker-machine create -d <string> --hyperv-virtual-switch <string>
git
vi <file>
vi <file>
rm -rf <string>
time <string>
cd <string>
ls
cd <directory>
mkdir <string>
vim <file>
exit <number>
git commit -m <string>
cd <string>
source <string>
git commit -m <string>
ls
code - <string>
git add <string>
ls
git add <string>
else sh -c <directory>
sudo tune2fs -c <number>
ls
git checkout -b <string>
source <file>
ls -l
tmux source <file>
sudo -H <string> install -r <file>
chmod +x <string>
git commit -m <string>
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
less
ls
cd ..
ls
git log
ls -la
clear
cat <string>
cd
fg
git config --global <file>
cd <string>
ping <string>
cd <directory>
git push
clear
grep --color <string>
git add <string>
git clone <URL>
wget -nc <URL>
sudo rm -r <string>
rm <string>
exit
git push
clear
du -sh <directory>
fg
cd <string>
pwd
find . -name <file> -type <string> -print -delete
rm <string>
mv <string>
mkdir <string>
bash
vim <file>
sort -k1nr
ls
ls
ls
rm -f <string>
git commit -m <string>
curl <directory> -X <string> -H <string>
cd <directory>
cd <string>
git config --global <file> <string>
sudo -i
exit <number>
git commit -m <string>
top
ls
ls
vi <file>
clear
ls
git commit
sudo xbps-install <string>
cd ..
git push -u <string> master
cd
ls
fg
exit <number>
done
ls
cd <directory>
ls
ps aux
cd <directory>
git status
git commit --amend --reset-author
ls
grep <string>
exit
cd ..
git push -u <string> master
exit <number>
git init
pkill <string>
cp -r <directory>
git stash -m <string>
kill -9 <number>
vim <file>
cd <directory>
cd <directory>
sleep <string>
cd ..
dpkg --force-help
cd <directory>
cd <directory>
git push origin master
git log
cd <string>
cd <string>
ls
cd <directory>
clear
bash
cd -
ls
sudo apt-get --fix-broken <string>
cd <directory>
git
sudo python <file> -cascade==<file> <number>
cd <string>
df
ls
clear
git add <string>
alias <directory> -c <string>
ls
date -u <number>
cd
ls
cd <string>
clear
npm install
mv <string>
ls
bash
ls++ -a
cd <directory>
nano <file>
cd ..
git checkout <string>
ls
ls
ls
exit
cd <string>
sudo apt-get install -y <string>
ls -a
curl -X <string> -d <string>
git pull origin
vi <file>
docker ps
sudo aptitude install <string>
chmod +x <string>
wget -r -A <URL>
git remote add origin <URL>
sudo apt-get update
man <string>
git push origin <string>
git status
exit
sudo adduser <string>
rm <string>
ls
cd ..
exit
cat <string>
curl <URL> -vvv
cat <string>
clear
ls
chmod -x <file>
ls
chmod u+x <string>
exit <number>
docker exec -it <string>
mkdir <string>
ls
git clone <URL>
mkdir <string>
sudo curl <URL> -o <directory>
ls
sudo ntpq -p
sudo snap install <string>
cd <string>
ls
rm <string>
git commit -m <string>
git stash pop
ls
sudo vim <file>
sudo add-apt-repository <string>
git branch 2> <directory>
ls
rmdir <string>
git add <string>
git add .
git commit -m <string>
cd <string>
cd <directory>
sudo apt-get install -y <string>
git pull origin master
top
ls .local -al
npm install
grep <string>
chmod u+w -- <string>
rm <string>
man <string>
clear
git status
ls
sed -i <string>
git pull
cd <string>
clear
git pull
ls
ps
git clone <URL>
git init
sudo vim <directory>
fg
ls
git diff <string>
sudo zypper install <string>
cd <string>
yarn add <string>
grep <string>
ls
ls
git checkout <string>
git commit -m <string>
git rm --cached <string>
sudo apt-get update
unzip
cd <string>
ssh-copy-id
clear
cp -R <string>
git clone <URL>
grep -Eho <string>
ls++ -a
sudo sed -i <directory>
source <file>
cd <directory>
npm install
cd ..
ssh-add
sudo start uwsgi
npm run dev
ls
perl
cd <string>
ls
git pull --all
done
git clone --depth <number> <URL>
ping <string>
exit <number>
sudo make clean install
ls
cd <string>
git config --global <file> <string>
git clone <URL>
tail -n <string>
cd <directory>
sudo apt-get --reinstall <string>
git status
sleep <number>
sudo vim <directory>
vi <file>
sudo tee <directory>
nano <file>
sudo apt-get install -y <string>
git remote set-url origin <string>
git config --global <file> <string>
exit
curl -sf -X <string> <directory>
read <string>
fg
sudo vim <directory>
git remote add origin <URL>
git flow <string>
grep -i <string>
rm -rf <string>
ls
cd ..
mkdir <string>
vim <file>
ls
cat <string>
unset -f <string>
sudo snap install --classic <string>
wget <URL>
ls
sudo apt install <string>
ls -l
ls
ls -alF
git commit -m <string>
git push
git commit -am <string>
cd <string>
ls
git commit -m <string>
git commit
sudo -i
nano <file>
vim <file>
git pull -v
docker info
git clone <URL>
vim <file>
clear
aptitude install ethtool -y
git clone <URL>
sudo sed -i <directory> <file>
sort -u) <string>
ls
cd ..
ls
apt install <string>
diff <file> <file>
rm -rf <string>
cp <string>
ls
cat <string>
sudo mount <directory>
python3 -m <string> --clear-output <string>
sudo apt remove <string>
mv <string>
source <file>
git clone <URL>
killall -SIGUSR1 <string>
ls
ls
git pull
nano <file>
rm <string>
rm -rf <string>
cd <string>
git rebase -i <string>
git remote add origin <URL>
ls
git commit -m <string>
read <string>
cd <directory>
python3 <file>
clear
docker-compose up -d --build
ls
install <string>
ls
ls
vim <file>
ls
ls
cd <string>
cd ..
ls
xrandr
sudo apt upgrade -y
sed -i <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
clear
sudo sed -i <directory> <file>
ls
rm -r <string>
cd
npm install <string>
cd <directory>
node <file>
cd
ls
sudo apt upgrade
mkdir <string>
cat <string>
make clean
pwd
ls
git commit -m <string> --no-verify
exit
read -rp <string> <string>
cd <string>
sudo apt install <string>
wget -q -O <file>
vi <file>
ls
apt install <string>
clear
cat <string>
docker run --rm --entrypoint <string> <string> -c <string>
cd <directory>
nano <file>
cd <string>
clear
exit
ls
chmod <number> <string>
zip -FS -q -r <file>
read -r -p <string>
rm <string>
grep <string>
npm install -g <string>
npm install <string>
git commit -am <string>
sudo raspi-config
npm run register
sudo apt install <string>
git commit -m <string> --no-verify
ls
git push
nano <file>
ls
git --help
clear
vim <file>
sleep <number>
ls -la
clear
service <string>
sed -i <directory>
ls
exit
ls
ssh <string>
sudo dpkg -i <file>
cd <string>
git config --global <file> <string>
docker ps
cd <directory>
rm <string>
time
git config --global <file> <file>
pwd
apt-get install <string>
cd <string>
git reflog expire --expire=<number> --all
sudo npm install -g <string>
ls
clear
ln -s <string>
ls
cd <string>
cd <directory>
sleep <number>
cd ..
rm -rf <string>
ssh
docker build -t <string>
sudo chown -R <string>
cd <string>
ls
touch <file>
git push origin master
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
vi <file>
cd <string>
mkdir <string>
sudo ifconfig en0 ether <string>
rmdir <string>
ls -a
ls -la <directory>
cd <string>
ls
mkdir <string>
nano <file>
byobu-tmux
ls
vi <file>
ls
git add <string>
sudo cat <directory>
docker exec -it <string>
cd <string>
git remote add origin <URL>
ls
git init
export <string>
clear
git init
ls
git init
ls
clear
cd <string>
vi <file>
ls
npm run devstart
ls
git checkout <string>
ls
git pull
vim <file>
df
mkdir <string>
git branch
git push -u <string> master
mv <string>
awk -v <string>
sudo mkdir -p <directory>
exit
sed <directory>
read <string>
sudo python3 <file>
vim <file>
git status
code <string>
cd <string>
cd <string>
sudo make uninstall
mkdir <string>
ssh <string>
git push -u <string> main
mv <string>
ls
ls -l
cd <string>
cp <string>
mkdir -p <string>
sudo apt install -y <string>
sudo cp <string>
sudo pacman -Rs <string>
curl -X <string> -H <directory> -d <string>
git diff
grep <string>
ls -la
git stash
git add <string>
sudo su
sudo chmod -R <string>
cat <string>
sudo apt-key add -
cd <string>
systemctl start <string>
tmux
git commit -m <string>
less <string>
python3 <file>
then\
sudo ufw <string>
clear
sed -i <string>
cat <string>
sudo apt install <string>
ls
printf <string>
git status
cd <string>
git pull origin master
git commit --amend --no-edit --no-verify
brew update
ls -lR
git add .
cp <string>
git rm --cached -r <string>
ls
git remote
git commit -m <string>
ls
cd
cd ..
cd <directory>
docker-compose logs edit --follow
who
cd
sudo apt install <string>
sudo fstrim --fstab --verbose
exit
vi <file>
sudo wget <URL>
cd <directory>
exit <number>
cd <string>
cd <string>
pwd
sudo zypper install <string>
vim <file>
sudo make install
git status
vi <file>
cd <string>
fg
ls
mv <string>
sudo service <string>
cd <string>
history
curl -s --data-urlencode <string> --data <string> --data <string> --data <string>
docker-compose up
vim
cd <string>
sudo source <file>
ls
git status
cd <string>
vim <file>
chmod <number> <string>
docker stop <string>
cd <string>
cd <string>
cd <string>
sudo pacman -S <string>
ls
sudo find <directory> -type <string> -exec <string> <number> <string>
ls
ls
fg
ls
exit <number>
git status
cd <directory>
print <string>
git --version
git push
sudo sed -i <directory> <file>
cd <string>
git symbolic-ref HEAD <directory>
ls
git remote add origin <URL>
cd <string>
cd <string>
git remote add origin <URL>
ls
cd <string>
cat <string>
ls
cd <string>
sudo vim <file>
ls
chmod +x <string>
sudo ufw enable
cd <string>
cd
cd <string>
git pull
cd <string>
source <file>
fg
sudo docker run hello-world
git push
cat <string>
cd <directory>
codedown javascript
fg
ls
ls -ltr
ls
top
ls
cd <string>
date <string>
git commit -m <string>
sudo add-apt-repository <string> [arch=<string> <URL>
clear
clear
git remote set-url origin <string>
git submodule add <URL> -f
ls -l
ls
history
curl <string>
export <string>
ps ax
tee <file>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
du -skh <string>
chown
ls
git add <string>
sudo dnf install -y <URL> -E <file>
git clone <URL>
git pull
mkdir <string>
cd <directory>
iptables
ls
cd <directory>
read -p <string>
git push -f <string> <string>
git commit
sudo sed -i <directory> <file>
chmod +x <string>
sudo chmod a+rwx <directory>
cut -f1
cp <string>
cd <directory>
git add <string>
pwd
git push origin
sudo apt install <string>
exit <number>
cd
apt-get -f -qq <string>
xargs -P <number>
ls
sudo lsof -i -P
ls
cd <string>
git commit -m <string>
ls
find . -name <string> -type <string>
rm -rf <string>
git push
apt-get install <string>
sudo apt install -y <string>
code .
date
yarn add -D <string>
cat <string>
ls
pwd
git add <string>
git config --global <file> <file>
sort -nr
sudo poweroff
sudo dpkg -i <file>
fzf <string>
cd <string>
git
mkdir <string>
cat <string>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
vim <file>
sudo reboot
export <string>
sudo npm test
cd <string>
pkill picom
clear
ls
ls
chmod +x <string>
git add .
sudo rm -r <string>
ls
vim <file>
cd <directory>
mkdir <string>
cd ..
ls
man --help
cd ..
npm uninstall <string>
time go run <file>
df -h
sudo nano <string>
head -n <string>
vim <file>
git clone <URL>
cd <string>
vim <file>
ls
ls
git branch 2> <directory>
sync
clear
ls
exit
ls
cd <string>
mkdir <string>
export <string>
git push origin PTS-372_Remove_components_from_daily_tracker --force
ls -la <directory>
vim <file>
source <directory>
cd <directory>
cd <string>
vi <file>
git reset <string>
ls
cd <string>
cd <string>
ls
git push -u <string> master -f
cp <string>
git push
git init
sudo rm -rf <string>
git commit -m <string>
ssh <string>
sudo make clean install
docker-compose -f <string>
ps -eLf
ls
ls
git fetch
git rev-list
ls
vi <file>
ssh <string>
ls
history -a
grep <string>
vi <file>
cd <string>
git push
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
git status
cd
sudo mkfs.ext4 <string>
then\
cd <directory>
exit
sudo ansible -a <string>
ls
ls
cd <directory>
ls
vim <file>
git pull
ls
awk <string>
git fetch origin\
cd ..
cat <string>
tail -f <directory>
docker stop <string>
cd <string>
curl <string>
find . -name <string> -type <string>
git pull
cd ..
git filter-branch --env-filter <string>
clear
ls
ls
sudo <file> -v -w <string> -o <string>
cd <string>
systemctl status <string>
git pull
sudo apt install <string>
ssh <string>
cd ..
ls -alrt
vim <file>
clear
ls
ls
cd <string>
cat
cd <string>
git stash apply
ps aux
npm i -g <string>
ls
clear
ls
ls
ls # lists your files in current directory, ls <dir> to print files in a specific directory
screen -r <string>
rm <string>
sudo updatedb
vim <file>
clear
cp <string>
cd <directory>
bash --version
cd <string>
sudo sed -i <directory>
git commit
apt-key adv --keyserver <string> --recv <string>
sudo -i
mv <string>
git add .
cd ..
sudo chown -R <string>
history -a
dpkg -L <string>
git add .
ls
ls
a ! href <string>
sudo apt-get -y <string>
git pull origin master
mkdir <string>
ls
ps -A
cd <directory>
apt install <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git clone <URL>
ls
ls
git commit -am <string>
git status
rm <string>
ls
git push -u <string> main
git push
source <string>
mv <string>
exit <number>
vi <file>
fg
git rev-list -n <number>
vim <file>
git checkout <string>
git status
cd <string>
git status
sudo apt-get install -y <string>
ls
exit
systemctl --user <string> <file>
grep -iE <string>
sudo sed -i <directory> <file>
vi <file>
git filter-branch --force --index-filter <file> --prune-empty --tag-name-filter <string> -- --all
npm start -- --reset-cache'
clear
ls
cd <string>
usermod -aG <string>
ls
cd <directory>
ls
sudo apt update
dpkg --print-architecture
rm -v <file>
ls
ls
find . -name <file>
git init
mkdir -p <string>
ls -la <directory>
service apache2 restart
git push
script/build.sh
cd <directory>
chmod <number> <string>
sed -i <directory>
tail -f <directory>
sudo nano <file>
docker-compose up -d --build
git add .
true
unset <string>
npm install nodemon --save-dev
ls
ps -h
curl <string>
cd <directory>
cd
git commit -m <string>
cat <string>
sudo systemctl status <string>
ls
ls
source <directory>
ls
fg
man -k <string>
history -a
exit
ls
chmod +x <string>
sort
ssh-add <directory>
vim <file>
git config --add <file>
gpg --list-sigs -vvv
cd <directory>
curl <string>
kubectl --namespace <string> <string>
clear
gsettings set <file> <string>
git remote add origin <URL>
vim <file>
ls
cd <string>
cd <string>
cd <directory>
sudo nano <string>
npm init -y
sudo ifconfig <string>
ls
cd <string>
systemctl start <string>
cd <directory>
git clone <URL>
ls
file <string>
cd ..
ls
git init
git status
vi <file>
clear
ls
ls
ls
cd
npm -v
git remote -v
git push
rm <string>
sudo dnf remove -y <string>
vim <file>
git pull origin master
cd
git remote add origin <URL>
cd <directory>
unset color_prompt force_color_prompt
git commit -m <string>
cd
ls
sudo pacman -S <string>
cd <string>
sed <directory>
cp <string>
apt-get install <string>
cd <string>
wget <URL>
clear
mv <string>
cd ..
ssh-add <directory>
apt -y <string> <string>
ls
sh -i <string>
cd <directory>
ls
killall <processname> # kill all processes with the name
sudo service nginx reload
du -sh
apt-get update
ls
npx create-react-app <string>
sudo apt-get install <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
npm start
ls -la
mvn exec:java -Dexec.mainClass=<file>
sudo nano <directory>
git commit
cd <string>
sudo apt-get remove <string>
docker-compose up -d --build
git co master <file>
ls
npm i
git commit -m <string>
nano <string>
sudo pacman -Ss <string>
ssh <string>
sudo npm test
locate <string>
cd <directory>
vi <file>
write <directory>
git log
ls
sudo chmod u+x <file>
touch <string>
ps aux
ls
ls
rm -rf <string>
cd <directory>
ls
rm <string>
ls
git add <string>
which <string>
sudo reboot
clear
touch <string>
top
cd ..
ls
sudo yum -y <string> <string>
cd ..
systemctl status python-validity --usr
sudo systemctl start <file> --user
cat <string>
sudo vi <file>
vim <file>
vi <file>
grep <string>
clear
ls
ls
docker images
ls
reboot -f
cd ..
cd <directory>
git branch
git add .
npm install
git pull
ls
clear
cd <string>
export <string>
git status
cd <string>
cd <string>
git commit -m <string>
grep -rn <string>
git add <string>
cd ..
npx tsc --init
sudo mysql
clear
ls
ls -lrt
git status
git checkout master
date <string>
cp -r <directory>
sudo flatpak update
rm -f <string>
ls
cd ..
git status
done
cd <string>
ls
vi <file>
ls
openssl x509 -req -days <number> -in <file> -signkey <file> -out <file>
docker exec -it <string> bash
exit
rm -f <string>
ls
sudo mv <string>
vim <file>
cd <string>
ls
chmod -R <string>
rm -f <string>
git config --global <file> <string>
ls -lrt
ls
curl <string>
cd <directory>
sudo apt install <string>
cd <string>
ls
cd <string>
sudo rm -rf <string>
chmod <number> <string>
code .
sudo dnf remove <string>
sudo systemctl status <string>
vi <file>
cat <string>
git status
read -rp <string> <string>
vi <file>
vim <file>
cd ..
cd <directory>
git pull
ls
npm i
ls
ls
rm -rf <string>
sudo apt-get install <string>
python3
mount -o <string>
vim <file>
cd <string>
git pull
more
git bisect bad
wget -P <directory>
sed -E -e <directory>
sudo reboot
man <string>
git pull -v <string>
docker-compose kill <string>
exit
ls
python3 <file>
git push -u <string> bryan-guner
mkdir <string>
wget <URL>
cd ..
wget -r <URL>
git commit -m
exit
git filter-branch --index-filter <string> --tag-name-filter <string> -- --all
cd ..
ls -lh
exit <number>
npm i
ls
sudo apt-get update
type <string>
git commit -a
clear
vi <file>
less <string>
ls
sleep <number>
sudo pacman -S <string>
mv <string>
git status
yay --save --builddir=<directory>
clear
git config --global <file> <file>
history
read -rp <string> <string>
sed -i <string>
sudo code .
ls
code .
rm <string>
ls
ls
ls
less
sudo yum install <string>
git fetch
git init
git clone <URL>
grep <string>
date
code <string>
git add .
cd <directory>
ls -al
cd <string>
vi <file>
exit <number>
ls
cd <string>
rm <string>
sudo sh <file>
git add <string>
git push
cd ..
git commit -m <string>
git commit -m <string>
exit <number>
cat <string>
vim <file>
cd <string>
cd <directory>
git clone <URL>
ls
fg
cat <string>
npm install -f
pwd
sudo apt-get install <string>
curl -fLo <file> --create-dirs <string>
git config --global <file> <string>
cd
ls
sudo gedit <string>
sudo add-apt-repository <string>
git push -u <string> master
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
cd ..
kubectl get <string>
sudo apt install --fix-broken -o <string>
rm <string>
npm i <string>
git commit -m <string>
sudo pico <string>
sudo sh -c <string>
ls
cd ..
python3 <file>
clear
cd <directory>
vi <file>
cd
touch <string>
ls
ls
cd <string>
cd <string>
cd <directory>
cd ..
vi <file>
source <directory>
systemctl status <string>
sudo apt update -y
nano <string>
apt-key adv --keyserver <string> --recv-keys <string>
git status
bash <file>
vi <file>
npm i <string>
cd <string>
find . -type <string>
ls
find $target_dir -name <string>
stat <file>
read -p <string>
kill
cd <string>
mv <string>
rm <string>
ls
sed -i <string>
make clean
mkdir -p <string>
rm -f <string>
ls
mkdir <string>
mkdir -p <string>
clear
sudo snap install heroku --classic
mvn compile
fg
cd ..
git cat-file -p <string>
rm -rf <string>
pico <file>
npm install <directory> --save-dev
git config --global <file>
cd
git fetch
curl <string>
git add .
sudo nano <directory>
grep -F <string>
git branch -D <string>
cd <string>
cd - <string> <string>
npm run start
ls
clear
screen -r
ls
git clone <URL>
apt-get install <string>
cd <string>
ls -la <directory>
alias <string>
exit
cd ..
cd ..
ls -l
pwd
vim <file>
ls
cd
true
kubectl --namespace <string>
systemctl start <string>
sudo cc-snapshot -h
exit
chmod +x <string>
docker
awk <string>
ls
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
apt update
cd <string>
vi <file>
ping <string>
killall -u <string>
code .
clear
npm run start
cd <directory>
exit <number>
ls
node <file>
ls
ssh-copy-id <string>
source <string>
cd <string>
vi <file>
sudo git add -A
git pull origin development
cd <string>
git status
cd <string>
docker rmi <string>
chmod -x <file>
scp -r <string>
ls -lA
rm <string>
sed -n -e <directory>
ls
cd <string>
exit
cd <string>
ls
rm -r <string>
cd <string>
rm <string>
git clone <URL>
sudo mv <string>
git commit -am <string>
cd ..
docker login -u <string>
chmod <number> <string>
sleep <string>
sudo vim <directory>
source <file>
ls
ls
grep -i <string>
rm <directory> -r
npm run dev
apt-get update
fg
ps -ef
git status
vim <file>
grep -vi <string>
git push origin master
cp <string>
ls
apt-get clean -y
cd <directory>
ssh dirlic@10.18.0.39 -p <number>
git commit -m <string> --no-verify
cd <directory>
git commit -m <string>
ls
sudo tee <directory>
cd
cd <string>
touch <file>
git add <string>
ls
sudo add-apt-repository <directory>
history -a
clear
cat <string>
head -n <string>
rm -rf <string>
exit
cd..
sudo apt install <string>
git pull
ls
shutdown
rm -rf <string>
ls
grep <string>
mkdir <string>
git push origin main
sed <directory>
cd <string>
python3
git diff <string>
git add <string>
mkdir -p <string>
wget <URL>
cd <string>
npm start
cd
cd <directory>
cd <string>
rm -rf <string>
ls
ls
clear
ls
exit <number>
git stash pop
ls
cd ..
vim <file>
cd ..
git push origin <string>
sudo apt update
systemctl start kubelet
cat <string>
npm run coverage
reset
sudo sed -i <directory> <file>
find . -name <file>
ls
cat <string>
cd <string>
clear
sudo ln -s <directory>
cd ..
ls
which <string>
sh <file>
vim <file>
cd
ls
cd <string>
cd ..
export <string>
ls
mkdir <string>
apt-key add -
git pull
cd <directory>
ls
cp <string>
cd ..
mv <string>
cd <string>
ls <directory> -a
fg
byobu-tmux
chmod <number> <string>
mkdir -v <string>
npm install <string>
rm -r <string>
sudo halt
cd <directory>
sudo pkill <string>
ls
ls
clear
vi <file>
git clone <URL>
read <string>
cd ..
cd <directory>
apt-get purge <string>
ls
git pull
git add <string>
git status
exit <number>
ls
cd <directory>
clear
ls
npm install <directory> -D
git add .
sudo apt install <string>
ls
npm start
cd ..
rm <string>
sudo apt remove <string>
sudo chmod u+rwx <file>
ls
vim <file>
cd <string>
ls
sed -i <directory>
sudo sed -i <directory> <file>
cat <string>
grep -v <string>
git remote add origin <URL>
ls
git pull
git pull
cd.
rm <string>
cd <string>
nano <file>
cd
apt-get update
sudo sed -i <directory> <file>
python3 <file>
export <string>
nano <file>
git add <string>
ls
cd <string>
cp <string>
git commit -m <string>
cd <string>
sudo python <file> --cascade=<file> <number>
sed <directory>
grep -v <string>
sudo apt-get update
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
cd ..
vi <file>
sudo ansible all -m <string>
python3 <file>
git init
reboot
sudo apt-get install -y <string>
sudo mv <string>
ls
vim <file>
grep <string>
clear
ls ..
sudo pacman -S <string>
reboot
exit
cd <string>
git commit -am <string>
python3
clear
clear
cd <string>
npm run start
sudo su - <string>
rm <string>
git add .
history
source <file>
cat <string>
codedown javascript
sudo apt install <string>
bash
sudo lighty-enable-mod <string>
nc <file> <string>
python3
grep <string>
sudo python3 <file>
ip a
ls
vim <file>
rm -r <string>
cd <string>
ls -a
ls
unset -f <string>
history -c
ls
clear
python3 <file>
sed -E -e <directory>
git pull
ls
ls
git status
type <string>
wget <URL>
cd <directory>
openssl rand -base64 <string>
sort > <file>
cd ..
exit
cd ..
curl -sOL <URL>
git status
info <string>
sudo apt install <string>
ls
sudo ltrace -p <number> -o <file>
systemctl status <string>
find . -name <string> -exec <string> -c <string>
cd <string>
docker start <string>
exit
cd <string>
sed -i <string>
cd <string>
sudo poweroff
ls
ls -al
ls
cd <string>
git add .
read <string>
npm run test
cd <string>
vim <file>
sort
docker ps
ssh-keygen
sudo apt-get update
ls
git commit -m <string>
exit <number>
cd <string>
sudo sed -i <directory> <file>
sudo make clean install
ls
cd <directory>
git fetch upstream
python3 <file>
npm install <string>
fg
ps -aux
ls
kill <number>
docker-compose up -d --build
dir <string>
cd <string>
git fetch
mv <string>
sudo git clone <URL>
docker-compose logs
cd <string>
npm i
hexdump -b <file>
cd <string>
git pull origin master
fg
read -s -p <string>
ls
cd <string>
ls
ps -ef
cd <directory>
su - <string>
shutdown -h <string>
ls
pacman -Qe
grep -r <string>
sudo apt dist-upgrade
wget <URL>
cd <string>
clear
mkdir <string>
ls
vi <file>
git commit -m <string>
sleep <string>
ssh <string>
git checkout master
ls
sftp <file>
git add -u
sudo service nginx restart
cp -r <directory>
ls
cd <directory>
git init
ip a
ls
git clone --depth=<number> <URL> <directory>
mkdir <string>
cd <directory>
else\
sudo sed -i <directory>
cd <string>
grep <string>
cd <directory>
node <file>
which <string>
git status
cd ..
git commit -m <string>
ls -alrt <string>
ls
grep -v <string>
ls -l
curl -v -H <string>
git commit -a -m <string>
python3.9 <file> --target
vi <file>
rm -rf <string>
ls
vim
cd <string>
python3 -m <string>
cd <string>
xhost +
ls
clear
sudo nano <string>
git clone <URL>
exit
df
python3 --version
cd ..
git status
vim
cd <string>
cat <string>
sudo dpkg --configure -a
sudo vi <directory>
sudo apt-get update
exec zsh
cd <string>
git push
ls
clear
ls
cd <directory>
nano <file>
less <string>
ls
ls
ls
man <string>
sudo nginx -t
git commit -m <string>
ls
ls
cd <directory>
rm <string>
timedatectl
ls
vim <file>
vi <file>
git clone <URL>
ls
sudo cp <string>
git init
rm <string>
cd ..
clear
vim <file>
sudo sed -i <directory> <file>
ls
cp <string>
ls
ls
vim <file>
git add .
fg
git push origin <string>
ls
cd <directory>
env
git push -u <string> master
cd <string>
cd <directory>
cd <string>
ls
vim <file>
nano <file>
git clone <URL>
touch <string>
ls
git bisect <string>
sudo apt upgrade
cd
make clean
sudo add-apt-repository <directory>
cd ..
sed <directory>
cd ..
sudo git add <string>
git commit
cd <string>
exit
cd <directory>
git pull
grep <string>
ls
vim <file>
cat <string>
ls
git status
ls
curl <directory> -qO- <URL>
less <string>
npm install <string>
sync
mv <string>
ls
pwd
docker build -t <string>
code .
exit <number>
sudo rm -r <string>
cd <string>
touch <string>
sudo apt-get update
ls
nano <string>
<directory> <string>
ls
python3 <file>
cd <string>
git push origin master
cd <string>
cd ..
cd ..
cd ..
cd ..
sudo stop uwsgi
cd <string>
ls
xhost +
sed -i <string>
rm <string>
time go run <file>
sleep <number>
sed -i <string>
cd <directory>
ssh-add <directory>
vi <file>
git branch -M <string>
kill -s <number> <number>
cd <string>
vim <file>
ls
vim <file>
ls
ls
cd <string>
cd <string>
npm run test
ls
cd <string>
su field
ls
vi <file>
cd <directory>
ls
tail -n <string>
touch <string>
ls
exit
cd <string>
python3 <file>
cd <directory>
cp <string>
clear
cd <string>
git checkout <directory> -f
node <file>
sudo apt-get install <string>
sudo hostnamectl set-hostname <string>
mkdir <string>
cd <string>
git branch
vim <file>
journalctl -b -5 -e
git diff
cd
git clone <URL>
read -p <string>
wget <URL>
ls
exit
cd <string>
read -rp <string> <string>
ls
ls
ls
mkdir
ls
git status
pwd
cd ..
python3 -m <string> install <string>
ls
source <file>
git push
sed -n <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
git branch
clear
git push
ls
exit <number>
cp <string>
unset color_prompt force_color_prompt
export <string>
read -p <string>
git branch -D <string>
cd <directory>
uniq
cd <string>
nano <file>
ls
ls
npm
tmux
apt install <string>
sudo bash <string>
clear
sudo httrack --ext-depth=<number> <URL>
ls
awk <string>
vim <file>
rm <string>
rsync -a <string>
ls
git status
vim <file>
ssh <string>
vi <file>
kill -9 <number>
git add .
clear
git diff <string>
rm -r <string>
npm install -g <string>
sudo apt-get update -y
find Clientmate-5.3 -type <string> -exec <string> <number> <string>
awk <string>
git commit -m <string>
sudo systemctl reload <string>
find . -name <string> -print
git init
docker-compose logs --follow <string>
cd ..
vim <file>
ls
ls
git config --global <file> <string>
ls
tmux kill-server
less <string>
su - <string>
ls
cd <string>
vi <file>
date
git push -u <string> bryan-guner
nano <string>
ls
clear
clear
ls
ls
rm -rf <string>
cd <directory>
clear
fg
cd <directory>
cp -v <string> <directory>
cd <string>
npm install
ls
git status
docker-compose logs
apt install --yes <string>
ls
ls -lrt
ps auxww <string>
ls
rm -rf <string>
sudo sed -i <directory> <file>
python3 <file>
node <file>
cd <directory>
sudo apt remove <string>
git commit -m <string>
vim <file>
ls -la
ls
ls
git help
cd <string>
head -n <string>
ls
wget <URL>
vim <file>
exit
ls
git add <string>
sudo su -
tail -f <directory>
git pull
rm <string>
git clone <URL>
ping <file>
cd
git clone <URL>
python3
du -skh <string>
ls
read -p <string>
pwd
git push -u <string> master
sudo ufw allow <string>
vim <file>
cd <directory>
cat <string>
sudo curl -L <directory> -o <directory>
cd <string>
vi <file>
rg <string>
vim <file>
ls
fg
git push -u <string> main
git clone
ls
python3 <file>
exit
ls
read -p <string>
touch <string>
npm run dev
less
head -n10
cd <directory>
nano <file>
mv <string>
find . -type <string> -exec <string> -i <directory>
git commit -m <string>
cd <directory>
docker tag <string>
tail -f <string>
ls
nano <file>
vim <file>
git push heroku master
chown -R <string>
wget <URL>
read -r <string>
git add .
cat <string>
cd
ls
git add .
sudo bash
ls -al
cd <directory>
rm -f <string>
wget -O <file>
git init
docker run <string>
clear
cd ..
clear
nano <string>
sudo ls -l <directory>
ls
vim <file>
hg <string>
nano <file>
git stash pop
ls
ping <file>
sudo sed -i <directory> <file>
sudo mv <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
sed -e <directory> -e <directory> -e <string> -e <directory>
done
vi <file>
sudo vim <directory>
sudo apt-get install -y <string>
clear
ls -la
uname -r
git clone <URL>
cp -r <directory>
git commit -m <string>
ls
cd <directory>
ls
ls
sudo mv <string>
sh
mv <string>
ls -altr
cd <string>
cd ..
<directory> <string>
reboot
git clone <URL>
git remote add origin <URL>
reset
git push -u <string> main
git commit -m <string>
rm -f <string>
git commit -m <string>
npm install -g <string>
curl <string>
sudo ln -s <directory>
ls
ls
fg
sed -e <string> -e <directory> -e <string> \
git push -u <string> master
sleep <number>
reboot
grep <string>
git push
mkdir <string>
git commit -m <string>
cd <string>
sudo apt-get update
clear
source <directory>
mkdir <string>
git push
screen -r <string>
fg
sudo tar -xvz
git log
ls
sudo npm i -g <string>
sudo nano <directory>
cd <string>
clear
sudo su root
git add .
fg
df -H
vi <file>
git clone <URL>
ls -al
git push -u <string> master
ls
git add <string>
ls
tail -f <directory>
touch <file>
ls
cd
ls
vi <file>
clear
lsblk
cd <string>
git checkout <string>
cd <string>
ls
ls
cat <string>
cd ..
git add .
nano
tmux -u
docker-compose logs
which <string>
history
yarn add <string>
mv <string>
grep <string>
mvn exec:java
time go run <file>
docker build -t <string>
cd <string>
git push
vi <file>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
clear
git commit -m <string>
sudo python3 <file>
clear
cd <directory>
cp <string>
sudo docker kill corrade
git clone <URL>
cd <string>
history
node <file>
git commit
ls
cut -d <directory> -f1 <string>
cd ..
sudo systemctl start <string>
cp <string>
ls
kubectl get <string>
cd ..
rm <string>
npm run dev
ls -R
git add -A
script/build.sh
git push
sudo apt dist-upgrade
tail -f <string>
cd <directory>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
ls -R <string>
sleep <number>
cd ..
ls
aptitude -y <string>
git commit -m <string>
cd
mv <string>
tmux new
fzf
ls
top
cp <string>
sudo <directory> restart
vi <file>
git add .
ls
git add <string>
man <string>
man -k <string>
grep <string>
docker run <string>
ls
sudo sed -i <directory> <file>
sudo nano <directory>
chmod <number> <string>
sudo apt update
find . -empty -type <string> -print -delete
vim
vim
cd <string>
cat <string>
ls
ls
vim <file>
sed -i <string>
exit
chmod <number> -R <directory>
cd ..
sudo wget -N <URL>
cd <directory>
cd <string>
cp -R <string>
ls
mkdir -p <string>
unset color_prompt force_color_prompt
git -
git commit -m <string>
sudo systemctl status <string>
docker exec -it <string> bash
cd ..
cd <string>
cd <string>
source <string>
git reflog expire --expire=<string> --all
mv <string>
cd <string>
less
cp <string>
ls -lAF
sudo wget <URL>
npm init
cd <string>
setg RHOSTS.*
done\
sed <directory>
sudo apt install <string>
cd <string>
git commit -m
exit
git status
sudo curl -L <URL> -s)-$(uname -m) -o <directory>
head -y <file>
ls
sudo nginx -t
vim <file>
vi
clear
vim <file>
sudo systemctl status prometheus
git add <string>
mkdir <string>
git init
pwd
ls
npm express update
sudo <directory> -s <file>
clear
ls
cd <string>
vi <file>
exit <number>
<file> program
sudo ufw <string>
git push
sudo ls -l <directory>
git status
ls
git switch -c <string>
git remote -v
find . -size <string> -a -print -a -exec <string> -f <string> \
ls
mkdir <string>
ls
touch <file>
cd <string>
ls
ls
grep -i <string> >files
sudo apt update
mv <string>
exit
git config
ls
git commit -m <string>
pbcopy <string>
ls -a
cd
sudo port <string>
exit -1
sudo find . -name <string>
tmux new
cat <string>
cp -v <string> <directory>
vi <file>
curl -sL <URL>
ftp <string>
fg
sed <directory>
sed -n <string>
cd <string>
git push
python <file> runserver 0.0.0.0:2016
exit
cd <string>
mv <string>
unset -m <string>
ls -la
ls
ls
git commit -m <string>
ls
touch <string>
python3 <file>
vi <file>
cd <string>
ls
ls
cd <string>
sudo snap install <string>
ls
pkill <string>
clear
cd
npm start
git pull
cd <directory>
git push -u
git status
exit
cd
touch <file>
ls -la
cd <string>
git remote add origin <URL>
mv <string>
ls
read -rst <string>
clear
git submodule add <URL>
cat <string>
ls
script/build.sh
vim <file>
rm -rf <string>
fg
cd <directory>
npm i <string>
ls
sudo usermod -G <string>
git add .
more <file>
ls
rm -rf <string>
sleep <string>
cd <directory>
ls
git add <string>
cd <directory>
git pull
vi <file>
cd <directory>
ls
git commit
cd <string>
ls -al
cd <directory>
sed <directory>
git add .
ls
npm run start
cd <string>
git push -u <string> main
vim <file>
ls
cd <directory>
pico <file>
git git commit -m <string>
nano <file>
ls
ls
cd
git commit -m <string>
ls
mkdir <string>
ls
code .
git commit -m <string>
vim <file>
cd <directory>
git push -u <string> bryan-guner
cd <string>
docker ps
cat <string>
clear
git fetch
cd <string>
psql -h <string> -U <string> -d <string> -L <file> -a <string>
cat <string>
ls
w
python3 <file>
ls
ls
rm <directory> -rf
nano <file>
ls
vim <file>
unset <string>
s/:/ <directory>
cd <string>
LANG=<string> rpm -qp --queryformat <string>
sudo pacman -S <string>
history
rm <string>
ls -a
docker rm -f -- <string>
ls
npm install
nano <file>
ls -la <directory>
sudo chown -R <string>
vi <file>
ls -al
exit
rm <string>
ls
ls
ls
ls
mv <string>
grep -l <string>
sudo python <file> --cascade=<file> <number>
rm -r <string>
rm -r <string>
ls
pwd
cp -v <string> <directory>
sudo python <file>
curl <URL> -o <file>
vim <file>
clear
grep -v <string>
clear
ls
ls
cd
cd -
mvn compile
cd <directory>
sudo reboot
sudo fallocate -l <string>
cd <string>
cd <string>
exit <number>
git init
sudo add-apt-repository <string> [arch=<string> <URL>
sudo nano <file>
git commit -m <string>
rm -f <string>
rm -rf <string>
ls
wget <URL>
git ls-files --others --exclude-standard --directory --no-empty-directory --error-unmatch -- <directory>
ls
vim <file>
scp -r <string>
mkdir <string>
dpkg -l
ls
git commit -m <string>
git push origin master
git commit -m <string>
nano <string>
ls
cd <directory>
vim <file>
find
cd <string>
ls -l
vim <file>
ls
npm run frontend
git fetch
type -a <string>
top
ls
ls -la <directory>
ls
ls
mkdir <string>
cd <directory>
cd <directory>
cd <directory>
cd
then\
ls
cd ..
sed -i <string>
ls
ls
grep -a -i -E --no-filename <string> */*.log*
vi <file>
cd <string>
exit <number>
cat <string>
dpkg -i <file>
docker start postgres-container
clear
cd <string>
ls
exit
git commit -am <string>
clear
git status
git commit -m <string>
cd <string>
clear
cd ..
cd <string>
git status
ls
cd <string>
sudo python3 <file>
sh
find <directory> -name <string>
uname -m
cd <string>
git push origin master
sudo ifconfig <string>
ls
mkdir <string>
cd <string>
tmux
git add .
sh
cd ..
clear
git add .
cd <directory>
git push
git status
vi <file>
cd <directory>
sudo nala purge <string>
fg
sudo docker rm <string>
ls test
cd <directory>
chmod --reference <string>
chmod +x <string>
ls
history
source <file>
cd <string>
cat <string>
vim <file>
cat <string>
ls
cd <string>
cd <string>
sudo vim <directory>
pwd
cd <string>
ls
clear
sudo gem install <string>
cd <directory>
rm <string>
fg
source <string>
ssh <string>
find . -name <file> -type <string> -print -delete
npm start
cat <string>
cd <string>
mv <string>
sudo systemctl start <string>
ls
cd ..
git commit -m <string> --author <string>
grep -i <string> >files
exit
rm -f <string>
git push --set-upstream <string> master --force
systemctl disable <string>
source <directory>
ls
ls -lh <string>
ls
ls
git add <string>
cd <directory>
cd <string>
cd <string>
git init
ls
ls -la
cd <directory>
man <string>
git status
git add .
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
exit <number>
fg
cd
done
exit <number>
sed <directory>
ls -la
git init
mv <string>
apt-get install -f
clear
sh
ls
ls
curl <URL> -u <string> -d <string> -d <string> -d <string> -d <string>
sudo lpadmin -p <string> -o <string>
cd -
chmod +x <string>
git status
sudo apt -y <string>
ls
exit
vim <file>
cd <string>
cd <string>
cd <directory>
sudo mkswap <directory>
git clone <URL>
cd <string>
ls
vi <file>
git commit -am <string>
ls
find . -name <file>
script/build.sh
clear
sudo apt-get autoremove
cd <string>
ls
cd <string>
cd <directory>
done
ln -s <string>
mv <string>
xargs docker stop
vim
ls
sudo apt install <string>
grep -wPirn <string>
cd <directory>
git push
vim <file>
ls
ls
git status .
more <file>
cd ..
cd <string>
cd <string>
ls -ltr
kill -9 <number>
ssh-keyscan
sudo apt-get install --no-install-recommends <string>
ls
xargs -L1 <string>
docker run -v <string>
npm config <string>
curl -o- <URL>
tr <string>
git remote set-url origin <string>
cd ..
git init
tail -f
cd <string>
ps axfu
ls
ls
sudo -u <string> psql -c <string>
cd <string>
sudo usermod -aG <string> <string>
cd <string>
ls
sudo git clone <URL>
ls
python3.11 <file>
exit <number>
vi <file>
git br -a
ls -al
rm -rf <string>
cd ..
ls
clear
ls
ls
clear
git pull
git pull
git push
ln -sf <directory>
cd <string>
cd <string>
cd ..
open <string>
ssh <string>
ls -l
sudo make install
chmod +x <string>
cd <directory>
git pull
sort -R
sudo apt-get upgrade
exit <number>
vim <file>
cd ..
docker images
clear
git commit -m <string>
setg RHOSTS <file>
cd <string>
cd
git push origin
cd <string>
mkdir <string>
clear
cd <string>
sed <directory>
ls
sudo nala install <string>
sudo ln -sf <directory>
jq <string>
git push
cd
ls
sudo vim <directory>
vi <file>
sudo dpkg --remove -force --force-remove-reinstreq <string>
docker exec -it <string>
cd
cd <string>
vim <file>
exit
npm install
ls
ls
vi <file>
stat -c <string>
brew install <string>
sudo docker kill corrade
sudo vim <directory>
chown $USER -R <directory>
cd <string>
sudo ls -ld <directory>
cd <directory>
sudo gpg --dearmor
done
vim
ls
cd <directory>
ls
exit <number>
sed <directory>
ls
cat <string>
grep -rli <string>
ls
cd <string>
<directory> <string>
vim <file>
sudo apt-get update
mvn exec:java -Dexec.mainClass=<file>
mv <string>
ls
sudo do-release-upgrade -c
vi <file>
vim <file>
nano <file>
curl -fsSL <URL>
vim <file>
ls
clear
sudo -i
cd <string>
cd <string>
pacman -S <string>
git pull
docker-compose up -d --build
sudo apt-get install <string>
grep -vE <string>
find <string> -not <string> -wholename <file> -prune <string> -type <string>
export <string>
ls
mount
cd <directory>
cd ..
rm -r <string>
then
sudo -H <string> install <string>
git pull origin master
git remote add origin <URL>
git fetch
git remote -v
ls
sudo xcodebuild -license
cp <string>
cd <string>
python3 <file>
less -r
ls
cat <string>
git pull origin <string>
npm install --force
sh
ps -auxwf
cd ..
sudo docker run -d -p <string> --name <string>
sudo add-apt-repository <string> [arch=<string> <URL>
git commit -a
exit
cd ..
cd <string>
mv <string>
git checkout master
systemctl status <string>
exit
sed <directory>
git init
sed -e <directory> -e <directory>
ls
cd
cd <string>
cron
rm <string>
vi <file>
cd <directory>
git add <string>
docker pull <string>
make clean
git commit -m <string>
ls
npm i --save <string>
find .
cd
ls
ls
node <file>
cd <directory>
vim <file>
git add .
cd <string>
which <string>
docker
man <string>
cd <string>
sudo apt-key add -
cd <directory>
cd <string>
ls -l
ls
sed -i.bak -e <string>
ls
exit
sudo chsh -s <directory>
read -rp <string> <string>
nano <file>
cat <string>
sudo mkdir <directory>
ls
vi <file>
chmod +x <string>
source <directory>
su -i
git branch -d <string>
ls
clear
git commit -m <string>
ls
ls
grep -E <string>
g++ -std=<string> <file> -o <string>
ls
git remote -v
npm -i -g <string>
nano <file>
ls
ps aux
make clean
clear
sudo apt-key add -\
cd <string>
cd <string>
cd ..
cd <directory>
cd <string>
read -s -p <string>
cd <string>
ls
nano <file>
git -C <string>
cd ..
ls
ps ax
cd <directory>
grep -a -i -E --no-filename <string> */*.log*
find . -empty -type <string> -print -delete
sed -I <string>
cd <directory>
df -h <string>
git diff <string>
ls
ls
cd <string>
source <string>
ls
wget -q -O <file>
ls
ls
tar -tvf <file>
cd <string>
ls
chmod +x <string>
sed -i <string>
cd <string>
vim <file>
sudo mkdir <directory>
sudo lvcreate -L <string>
ls
git pull
cd <string>
sh
read <string>
ls
rm <string>
telnet <string>
vim <file>
cd ..
cd <string>
rm <string>
vi
vi <file>
sort -u
vim <file>
curl <string>
find . -iname <string> -exec <string> -rf <string>
sudo apt install <string>
ls
top
cp <string>
vim <file>
cd <string>
kubectl rollout status deploy mt-broker-filter -n <string>
sudo apt-get install <string>
ls
kubectl --namespace <string>
mkdir <string>
yarn add <string>
ls
sudo apt-get update
df
git add .
read -rp <string> <string>
ls
cd ..
chmod +x <string>
cd
sudo apt upgrade
read <string>
wget -q <URL> -O <file>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
rm -rf <string>
sudo apt-get autoclean -y
fg
ls
rm <directory> -fr
cd ..
cp <string>
vim <file>
git pull
sed -E -e <directory>
mkdir -p <string>
git commit -m <string>
clear
pwd
sudo apt-get update
rm -f <string>
git pull
ls
cat <string>
sudo apt install <string>
cd <string>
open <string>
sudo ln -s <directory>
setg RHOSTS.*
git merge develop
clear
ls
screen -r
cat <string>
mv <string>
read -s -n <number>
sudo xcodebuild -license
cd
wget -q -O <file>
clear
rm -rf <string>
sudo docker commit <string>
tar xz --xform <directory>
systemctl status <string>
docker-compose stop -d <string>
cd <string>
fg
vim <file>
exit
cat <string>
ls
ls
less <string>
cd <string>
git commit -m <string>
ls
exit
cd <directory>
sudo apt-get purge <string>
mkdir <string>
git status
git pull
exit <number>
git
python3 <file>
cd <string>
ls
git clone <URL>
git clone <URL>
cd <directory>
then
npm install -g <string>
npm run start
cd <string>
ls
curl -o- <URL>
git add .
git status
sudo apt-get remove <string>
exit
git push
sudo yum install git -y
rmdir <string>
cd ..
ls
ls
rm -r <string>
scp <string>
docker exec -it <string>
git clone <URL>
find .
cat <string>
git status
cat <string>
ls -lAF <string>
cd ..
ps -aux
cd <string>
clear
ssh <string>
sudo sed -i <directory> <file>
cd ..
exit
ls
cd <directory>
git pull
cd <string>
git status
git add <string>
git commit -m <string>
fg
cd ..
sudo apt install <string>
npm install pushstate-server --save
sudo apt-get install <string>
vim <file>
sudo usermod -a -G <string>
ls++ -a
ssh-copy-id -p <number>
tail -f <string>
cd <string>
git add .
ls
sort
cd <string>
sudo apt update
systemctl restart <string>
docker-compose up -d --build
sudo apt update
cd <string>
clear
ls
sudo zypper install <string>
git push -f <string> <string>
git log
ls
sort -nk <string>
pacman -Qqm <string>
top
fg
cd <string>
clear
wc -l
ls
ls
ls
exit
git push
ls
cd <string>
head -$var <string>
ls
git push
mkdir -p <string>
ls
cd ..
ls
vim <file>
cd
cd ..
sudo userdel <string>
vim
cat <string>
cd <string>
vim
exec zsh
cd <string>
sudo sed -i <directory> <file>
sudo <directory> restart
git clone <URL>
ssh -p <string>
rm -rf <string>
ls
fg
rm -r <string>
git add .
ls
git push
nano <file>
chmod u+x <string>
ls
ls
cd <string>
git status
vi <file>
nano <file>
ls -lh
vim <file>
git commit -m <string>
ls
cd <string>
apt-get install <string>
rm <string>
git pull -f
ls
ps auxf
sudo apt-get install <string>
ls
git branch
dirs in <string>
git commit -m <string>
npm run bench -- -c <file> -n <file>
mv <string>
ls -alrt
mv <string>
rm <string>
cd <string>
ls
ps -ef
less
git fetch
git checkout <string>
ls
cat <string>
ls
pwd
cd ..
ls
sudo systemctl stop <string>
ls -a
less
vi <file>
cd <directory>
wget -O - <URL>
sudo systemctl start <string>
ls
ruby -e <string>
cd <string>
exit
git push origin master
grep -q <string>
clear
cp <string>
cd <string>
vi
vi <file>
cd <directory>
git clone <URL>
ls
git init
wget <URL> -O <directory>
npx shadcn-ui@latest add <string>
git log --name-only --oneline <string>
git diff
brew link --overwrite --force <string>
sudo apt -y <string>
sudo mv <string>
cut -c <string>
source <file>
apt-key add <file>
mkdir <string>
git push -u <string> master
sudo pacman -S <string>
ls
read -rp <string> <string>
npm update
git checkout master
cd <string>
sudo apt -y <string>
grep <string>
npm install -g <string>
git merge develop
ls
rm -rf <string>
find . -type <string> -name <string>
git add <string>
find . -name <string> -exec <string> -c <string>
git clone <URL>
ls
ls
cd ..
rm -rf <string>
git co -t -b <string>
git add .
shutdown -h <string>
ls
vim <file>
cd <string>
wget <URL> -O <file>
terraform <string>
git add <string>
ping <string>
vi <file>
ls
exit <number>
exit <number>
vim <file>
npm run test
cat <string>
git -v
git diff
git init
grep <string>
sudo sed -i <directory>
find <string> -depth -exec <string> -c <string>
rm -rf <string>
git remote add origin <URL>
clear
kubectl -n <string>
exit
git remote add origin <URL>
git clone <URL>
git push origin <string>
npm install -f
sudo apt-get update
git commit -m <string>
ls
tail -f <string>
git difftool <string>
vim <file>
git add <string>
cd <string>
cp <string>
source <file>
git commit -m <string> --no-verify
cd <string>
vim <file>
nano <string>
ls
stow -R <string>
vi <file>
ps
git push
git add .
ls
mv <string>
npm run package
sudo python -m <string> --upgrade
find . -empty -type <string> -print -delete
cd ..
sudo rfkill
sudo apt-get install <string>
ls
ls
sudo enable ufw
cd <string>
ls
cp <string>
cat <string>
git rebase <directory>
cd <directory>
sudo nmap -sT -O <directory>
pwd
git push
exit
ls -l
ls
sudo apt update
vi <file>
fg
sudo systemctl start <string>
apt-key adv --keyserver <file> --recv <string>
man <string>
exit
lsblk
ls
htop
sed -e <directory> -e <directory>
vi <file>
cd <directory>
git status
vi <file>
git commit -m <string>
clear
git push --set-upstream <string> main
vim <file>
pwd
mount -t <string> overlay -o <string>
cd ..
git diff <string>
find . -empty -type <string> -print -delete
docker-compose up
mkdir <string>
git branch -D <string> logs --follow <string>
cd <string>
git add .
ls
git commit -m <string>
npm run test
clear
vi <file>
sudo find <directory> -name <file>
ls
git log
vim <file>
shutdown now
cd <string>
git add <string>
ls -l
cd <string>
sed -E -e <directory>
ls
sudo apk add <string>
cd <string>
cp -R <string>
apt-get update
kill -9 <number>
git checkout master
tmux source <file>
cd <string>
ls
ping <string>
cd
cd <string>
git config --list
npm start --active-arch-only -- --resetCache
git merge <string>
rm -rf <string>
sudo xcodebuild -license
ls -ltr
git push
fg
cd ..
ls
cd <directory>
sed <directory>
grep -r <string>
ls
git flow <string>
cp <string>
vim <file>
nano <string>
ls -a
<string> -e <string>
sudo yum install -y <string>
git remote add origin <URL>
sudo apt remove <string>
ls
vim <file>
git status
sudo apt install <string>
cd <string>
cp <string>
man <string>
shutdown now
cd <string>
ls -la
ls
git push
npm install <string>
git status
curl -X <string> -d <string> OR SELECT <string>
ls -la
vim
cd <string>
htop
sudo passwd <string>
cd ..
exit
git pull
exit
cd <directory>
git commit -m <string>
git status
ssh dirlic@10.18.0.39 -p <number>
exit <number>
fg
ls
git status
ls
node <file>
docker rmi -f <string>
cp <string>
nano <file>
ls
nano <file>
cd <directory>
code <string>
vim <file>
cd <string>
git checkout -b <string>
git clone <URL>
service apache2 reload
cd ..
sudo python2 <file> --cascade=<file> <number>
ls
cd <string>
cd <string>
cd <string>
wget <URL>
cd <string>
cd <string>
cat <string>
git status
vi <file>
git add .
git restore <file>
nano <file>
rm -rf <string>
<directory> -m <file>
pwd
clear
ls
git
git commit -m <string>
sudo rm -r <string>
then\
touch <string>
grep -i <string>
clear
vi <file>
vi
sudo nano <file>
git status
cd <string>
ls
wget -r -A <URL>
git add <string>
cd <directory>
ls -ltr
rm -f <string>
ls
git fetch origin\
git add <string>
cd ..
clear
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
ls
sudo sh <file>
sudo rm -rf <string>
ls
ls
rm -rf <string>
chmod +x <string>
cd <string>
exit
cd <string>
mv <string>
cd <string>
ssh-copy-id -i <string>
clear
vi <file>
git status
git remote set-url --add <string>
git remote add origin <URL>
ls
vim <file>
sudo apt-get install -y <string>
curl -O <URL>
ls
systemctl status <string>
npm install --global <string>
mv <string>
git st
less -R -N
sudo sed -i <directory> <file>
git init
git filter-branch --force --index-filter <string> --prune-empty --tag-name-filter <string> -- --all
docker-compose ps
fg
python3 <file>
ls
fg
history -d <string>
sudo aptitude -y <string> <string>
cd <directory>
exit <number>
mount <directory> -o <string>
grep <string>
rm -rf <string>
ls
cd ..
ls
git merge
sudo usermod -d <directory>
sudo <directory> restart
cd <directory>
mkdir <string>
less <string>
grep -vE <string>
source <directory>
wget <URL>
grep <string>
find . -name <file> -type <string> -print -delete
ls
bash
npm start
exit <number>
ls -la
grep -R <string>
mkdir <string>
rm <string>
cd ..
curl -L <URL>
ls -ltr
cd <string>
vi <file>
cd
vi <file>
cd <string>
ls
git add .
ls
nano <file>
cut -d' <string> -f3-6)"
sudo npm install typescript -g
ls
sudo sgdisk -d <number>
git init
git commit -m <string>
git push -u <string> bryan-guner
htop
git clone <URL>
cd <string>
telnet <string>
vi <file>
cd <string>
read -d <string> <string>
mkdir <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
git remote add upstream <string>
grep -i <string>
ls -ln
sudo apt-get upgrade
ls
git add -n <directory>
nano <file>
ls
git add <string>
docker run -i -t --rm -v <directory>
python3 <file>
git commit -m <string>
cd <string>
sudo npm install <string>
ping <string>
cd <directory>
clear
mkdir <string>
sudo vim <file>
find . -depth -exec <string> <string>
sudo -s
read -rp <string> <string>
nano <file>
git pull --rebase <string>
cd <string>
sudo apt-get update
sleep <string>
tmux new-session -d <string>
docker ps
sleep <number>
export <string>
git status
export <string>
git stash
tar xzvf <directory> -C <directory>
grep <string>
tail -f <string>
sudo poweroff
then\
git add .
mkdir <string>
git push -u <string> main
git diff
ls
source <directory>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
cd <string>
rm -rf <string>
vim <file>
chmod +x <string>
ls
ls
nano <string>
mkdir <string>
pulseaudio
nano
cd <string>
clear
fg
curl <string>
set -x
git commit -a
npx tailwindcss init -p
cd <string>
grep -v <string>
nano <file>
sudo unzip <file> -d <directory>
docker ps
ls
curl $opts -F <string>
git push
ls -ld <string>
cp <string>
cd <directory>
pacman -S <string>
cd <string>
cd <string>
bash
git pull
exit <number>
grep <string>
find . -empty -type <string> -print -delete
clear
git add .
git status
mkdir <string>
ls
git status
cd <directory>
read <string>
ping <string>
pwd
killall <string>
python3 <file>
cd
rm <string>
npm run dev
ls
ls
cd <string>
sudo Ippasswd -a <string>
ls
find . -name <file>
ls
sudo xbps-instalL -s
git add <string>
git commit -m <string>
git --version
find . -type <string>
git add .
git pull
fg
mkdir <string>
nano <string>
npm install <string>
grep <string>
ls
top
git commit --amend --no-edit --no-verify
wget -q -U <string>
git pull --ff-only
cd <directory>
ls
done
docker stop bigballers
clear
exit
nano <file>
ls
docker
git clone <URL>
git add .
sleep <number>
rm <string>
python3 <file>
ls -lt
cat <string>
apt list --upgradable
sudo reboot
rm -rf <string>
git branch --set--upstream-to=<directory>
npm install clipboard --save
setg RHOSTS <file>
git commit -m <string>
more
cd <directory>
exit <number>
cd <string>
source <directory>
git config -l
vim <file>
cd <directory>
ps -ef
cd ..
sudo apt autoremove
ls
nano <file>
git fetch upstream
vim <file>
code
git init
tmux
ls
cd <string>
cut -f <string> -d <string>
mv <string>
rm -f <string>
kill -9 <number>
clear
vim <file>
ls
clear
ls > <file>
ls
docker exec -it <string>
rm <string>
clear
nano <string>
read -r <string>
stat <file>
exit
sleep <number>
cp <string>
git init
code .
vim
git commit -a
cd <directory>
find <directory> -type <string>
ls
git diff master --name-status
history
git commit -m <string>
ls
cd <directory>
sudo service <string>
ls
ls
cd <directory>
nohup
cd <directory>
git branch
cd <string>
clear
vim <file>
tail -f <directory>
sudo apt-get update -y
rm -rf <string>
date
awk <string>
ls
sed -E -e <directory>
find . -empty -type <string> -print -delete
git push
ls
yarn install
ls -a
cd ..
<directory> <string>
docker logs <string>
wget <URL>
sed -i -e <string>
grep -i <string>
fg
clear
chsh -s <directory>
git push
exit <number>
cd <string>
nano <file>
ls
cd <directory>
git merge <string>
git remote -v
sudo ifconfig en0 ether <string>
curl -fsSL <URL> -o <file>
cd <string>
man <string>
ls -la
git pull
npm run start
cd <directory>
clear
find . -size <string> -a -print -a -exec <string> -f <string> \
sudo npm install -g <string> --unsafe-perm=<string> --allow-root
vi <file>
git commit -m <string>
git branch
exit
python3 <file>
cd <string>
cd
ls
cd <string>
apt-get install <string>
cd <string>
git status
chmod +x <string>
nc
git push
mount -t <string> -o <string>
git clone <URL>
less
python3 <file>
ps ax
composer <string>
done
git init
git commit -m <string>
kill -9 <number>
git checkout -b <string>
tail -f <directory>
git status
ls
ls
cd <directory>
cd <directory>
gsutil -m <string> -r <directory>
npm run test
rm -rf <string>
ls
cd <string>
vim <file>
apt install -y <string>
head
ls <directory> -Sa
kill <number>
ls
ls
man <string>
sudo apt install -y <string>
git add .
npm run package
git push -u <string> master
rm -rf <string>
vim <file>
pwd # tells you where you currently are
git status
git clone <URL>
exit <number>
exit <number>
git init
htop
rmdir <string>
ls
ls
sudo usermod -aG <string> $USER
usermod -G <string> -a <string>
vi <file>
rm <string>
mv <string>
git push -u <string> main
dpkg --get-selections <string> <file>
cd <string>
curl -sL <URL>
mkdir <string>
cd <string>
touch <file>
ls
vi <file>
clear
sudo apt-get dist-upgrade
wget -O <file>
cd <string>
ping <file> -c <number>
tr <string> <string>
ls -la
git push
clear
git commit -m <string>
git push origin <string>
cd ..
cd <string>
read
read -rp <string> <string>
vi <file>
sudo nano <string>
dpkg -i <file>
cd <string>
ls
ls
sed <directory>
cd <directory>
lsblk
cd <string>
clear
git fetch
sudo vim <directory>
ls
fg
git remote add origin <URL>
ls -la
sudo add-apt-repository <directory>
grep <string>
ls -all
date <string>
git commit -m <string>
vim <file>
sudo ifconfig <string>
exit <number>
clear
git log
clear
exit
cd <string>
sleep <number>
git push origin
source <string>
rm <string>
ls
env
mv <string>
vi <file>
mv <string>
rm -rf <string>
clear
find . -name <file> -type <string> -print -delete
git branch -M <string>
cat <string>
ls
cat -s <string>
sudo dpkg --add-architecture <string>
ls
ls -R <string>
ls
cd <string>
ls
git fetch
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git config -f <directory> --remove-section <string>
sudo sed -i <directory> <file>
nano <file>
git br
fg
exit <number>
read
git mv <string>
cd <string>
apt list --installed
ls
git commit -m <string>
sudo umount <directory> --force
cd <string>
git add .
ls
ls
ls
npm i --save-dev <string>
fg
ls
go build -o <string>
cat <string>
docker ps
rm -rf <string>
ls
history
openssl rand -hex <number>
vim <file>
clear
sudo vim <file>
git commit -m <string>
exit <number>
git push
vim <file>
git commit -m <string>
cd <string>
ls
git status
git commit
git status
python3 <file>
find . -name <file>
cd <string>
sudo make install
exit
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
tee <file>
cd <string>
vim <file>
git commit -m <string>
rm <string>
ps aux
git commit -m <string>
sudo airport --channel=<string>
sudo mv <string>
ls
cd ..
sudo ip route <string>
cd ..
grep <string>
ls
git log
vim <file>
git push
mkdir <string>
ls
vim <file>
cd <string>
cp <string>
git push
sudo rm -rf <string>
cp -r <directory>
rm -f <string>
npm install
rm <string>
git commit
rm -rf -- <string>
ls
git add <string>
git status
ls
git add <string>
ssh -X <string>
nano <file>
ls
sudo sed -i <directory> <file>
done
sudo apt install <string>
cd <string>
sudo chmod <number> <string>
cd ..
vim <file>
apt-get install <string>
tmux ls
ssh <string>
tail -n20
ls
touch <string>
git push --set-upstream <string> <string>
cd
mkdir <string>
read -rp <string> <string>
git push origin main
exit
cd <directory>
cd <string>
cd <string>
cd <directory>
git co master
cd <directory>
git checkout <string>
apt-get install <string>
history -a
clear
cd <directory>
sudo -s -u <string> -H
sudo chmod <number> <string>
cd ..
grep <string>
chgrp -R <string>
vim
find . -empty -type <string> -print -delete
mkdir <string>
du -skh <string>
cd ..
nano <file>
clear
history -r <string>
rm -rf <string>
fg
npm install sharp --save
git pull
git add <string>
clear
cd <string>
ls
cd <string>
sudo apt-get upgrade -y
git commit -m <string>
docker commit <string>
cat <string>
cd ..
git commit -m <string>
rm <string>
cp <string>
tail -f <directory>
cd <directory>
ssh reptilian@$REP_IP -t <string>
ls
git commit -m <string>
git clone <URL>
cat <string>
git status
tar -zxvf <file>
ps aux
cd <string>
cd ..
rm <string>
df
source <string>
clear
ls
python3 <file>
git add .
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git commit -m <string>
mkdir <string>
ls
sudo sed -i <directory>
docker rmi <string>
cd <string>
sudo reboot
cd <string>
python3 <file>
git add -A
sudo apt-get install <string>
ls
sudo python3 <file>
sudo halt
git push
ls
print <string>
ls
cd <directory>
cd ..
ps -ef
cd <string>
cd ..
mvn install:install-file <string>
cd <string>
git init
ls
git init
sleep <number>
ssh dirlic@10.18.0.39 -p <number>
cd <directory>
sudo sed <directory> <string>
ls
git remote add origin <URL>
sed -i <directory>
git clone <URL>
cd ..
vi <file>
done
touch <file>
vi <file>
cd <directory>
git add .
sudo vim <file>
export <string>
ls
git commit -m <string>
cd
cd <string>
docker stop <string>
cd <string>
history
sleep <number>
cd ..
pico <file>
ls
mvn -e <string>
sudo port install <string>
ls
curl -sSK <string>
exit <number>
ls
ls
cd -
ping <string>
sudo apt install --fix-broken -o <string>
clear
vim <file>
git add .
ls
git add .
ls
cd <string>
cd <string>
cd <directory>
less
sudo tmux kill-server
ls -lah
exit
cd
chmod u+x --recursive <string>
ls
ls
sleep <string>
sed <directory>
ps axfu
sudo tar -C <directory> -xzf <file>
git commit -a -m <string>
chmod <number> <string>
ls
sudo su -
cd <directory>
htop
cd <string>
vi
ls
fg
vim <file>
ls
git add .
source <file>
bazel test --test_output=<string> <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
cd <string>
ls
exit
cd <directory>
git commit -m <string>
ls
grep -q <string>
chmod -R <string>
git branch -M <string>
systemctl status <string>
cd <directory>
kubectl exec -ti -n <string>
rm <string>
exit
git commit -am <string>
ls -la
sudo ls -latr <directory>
git remote -v
fg
exit <number>
lsblk
ls -al
npm install
ls
w
ls
cp <string>
alias
cd ..
git commit -m <string>
cat <string>
clear
grep -E <string>
chmod <number> <string>
git pull
ls -l
mkdir <string>
rm <string>
pwd
chgrp <string>
git commit -m <string>
sed -e <directory>
nano <string>
grep -a <string>
sudo lighty-enable-mod <string>
curl <string>
mkdir <string>
apt-get autoclean -y
vim <file>
exit
cd ..
vim <file>
chmod u+x <string>
cd ..
ls
ls
grep -v -e <string> -e <string>
vim <file>
sudo pacman -R <string>
cd <string>
exit
git commit -m <string>
sudo python3 <file>
sudo chmod <number> <directory>
cd <string>
history
fg
docker-compose up -d --build
git merge -v
git reset HEAD^
cd <string>
clear
sleep <number>
cd <directory>
cd ..
sudo nvim <directory>
ls
pwd
find . -d <number> -type <string> -name <string> -print0
docker run -e <string> -v <directory>
cd ..
cd <directory>
sudo apt-get update\
sudo ntpdate
git remote set-url <string>
cd <string>
chmod +x <string>
sed -E -e <directory>
ls -alhtR <directory>
cd ..
tmux --v
ls -alrt
brew install --cask <string>
cd <string>
git nano <string>
cd <directory>
git config --get <file>
chown -R <string>
docker-compose logs
man <string>
telnet <string>
ls
sudo apt-get install <string>
cd <string>
npm i prettier -g
ssh <string>
sudo snap install heroku --classic
git init
cd <string>
ls
cat <string>
cat <string>
git commit -m <string>
cd ..
git reset HEAD^
tar -xf <string>
ls
sudo rm -r <string>
cd <string>
ls
ls
tmux new -s <string>
nano <file>
pkill <string>
cd <string>
sudo systemctl status <string>
ls -arlt
npm run coverage
cd <string>
docker-compose stop
ls
cd
sudo python3 <file>
vim <file>
sed -E -e <directory>
sudo apt-get install <string>
curl <URL> -k
ls
vi <file>
npm start
cd <directory>
chmod +x <string>
sudo sed -i <directory> <file>
git status
git pull
cp -p -i <string>
git push
docker exec -it <string> bash
git add .
git commit -m
git gc --prune=<string> --aggressive
apt-get -y -qq <string> <string>
cd <directory>
ls
curl -sL <URL>
ls
scp -r <string>
ls
cd <string>
git status
docker ps
ls
cd <string>
cd <string>
ruby --version
ls
clear
sudo tar -xzC <directory>
cd ..
python3 <file>
rm <string>
ls
clear
journalctl
cd ..
ls
ls
git push
cd ..
git checkout <string>
git config <file> <string>
vim <file>
cd <string>
killall <string>
git pull origin master
ls data* -ld
ls -a
python3 <file>
ls
ls
kubectl rollout status deploy mt-broker-controller -n <string>
cd <directory>
ls
tar -cf <file>
egrep -ri <string>
ls
awk <string>
ls
npm test
npm run package
ls
ls
cd
ls
kill <number>
cd <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
read <string>
ls
rm <string>
git status
sudo <directory> --verbose
sudo sed -i <directory> <file>
vi <file>
ls
cd ..
git branch -a
python3 <file>
sudo apt-get upgrade
git status
cd <string>
cd <directory>
fg
cd <string>
cat <string>
vim <file>
chmod <number> <string>
read -rp <string> <string>
sudo install -o <string> -g <string> -m <number>
touch <string>
git push
git commit -m <string> -f
ls
rm -rf <string>
cd ..
cd <string>
git status
ls -l
ls
ls
ls
sudo apt-key add -
exit
systemctl --type=<string>
clear
grep -v <string>
clear
sudo ssh-add -K <file>
docker rmi <string>
ls
mv <string>
more <file>
git push
pwd
top
git tag <string>
cp <string>
cp -r <directory>
clear
clear
clear
export <string>
vim <file>
find . -size <string> -a -print -a -exec <string> -f <string> \
git add <string>
ls
ls
fg
git push
git init
git commit -m <string>
cd <string>
cd ..
cp <string>
cd <string>
sync
terraform apply <string>
more <file>
diff <file> <file>
cd <string>
history -a
git checkout
cd <string>
git clone <URL>
sudo -s
ls -d
exec pwsh -nop -c <string>
apt-get install <string>
touch <file>
ls
open <string>
exit
vim <file>
ls
cd <directory>
git add <string>
git push
ls -la
ls
vi <file>
cd <string>
git cat-file -p <string>
git branch
git push
cd ..
ls
ls
sed -e <string> -e <directory> -e <string> \
alias <string>
clear
exit
vi <file>
vim
vim <file>
sudo adduser <string>
mv <string>
yarn add -D <string>
df
cd ..
rm -r <string>
ls
ls
vim <file>
cd <directory>
ls
sudo apt-get install <string>
vim
ls -ls
git push
cd <directory>
du -ds <string>
rm -f <string>
git stash
sudo apt-key add -
npm install -g <string>
sudo apt-get install <string>
clear
cd <string>
df -aH
git fetch --no-tags <string>
exit <number>
ls
sudo tar -zxf <file> -C <directory>
git add --all
cd <string>
groups <string>
cd <string>
sudo apt update\
git push
git stash pop
cd ..
ls
sudo pacman -S <string>
then
ssh-keygen -t <string> -C <file>
sed -e <directory>
sudo apt-get update
exit
git add <string>
ls
fg
git log
docker-machine create --driver <string>
git status
ls
git remote add origin <URL>
ls
npm install --save <string>
exit
rm <string>
cd ..
touch <file>
mkdir -p <string>
tail -f <string>
cd <string>
cd ..
grep <string>
docker ps # <string>
ls
cd <directory>
git commit -m <string> --no-verify
ls -a
sudo killall mongod
sudo pacman -Fyy <string>
vi <file>
git pull
ls -l
cd <string>
rm <string>
git commit -m <string>
npm run prod
vim <file>
ls
cd <directory>
ls
fg
git add -A
ls
sudo apt-get install <string>
cd ..
exit
sudo ip route add <string>
exit
git clone --depth <number> <URL>
rm <string>
else\
python3 <file>
ls
grep -i <string>
clear
cat <string>
wget -O <file>
code
alias <string>
cd
mv <string>
cd
sudo apt-mark <string>
cat <string>
diff <file> <file>
git log --oneline
cd <string>
vim <file>
exit <number>
cat <string>
git clone <URL>
cd <string>
git merge <string>
git remote
ls
pavucontrol
git add .
ls
vim
exit
ls -ltr
ls
ls -l
cut -c3- <string>
cd <string>
tar xzvf <file>
ls
ls
git push -u <string> master
dpkg -L <string>
ls
nano <file>
ls -ltr
cd <directory>
chmod <number> <string>
jq <string>
sudo python3 <file> install
cd <directory>
git commit -m <string>
ls
cd ..
git commit -m <string>
ls
cp <string>
exit
exit
sort -rn
ls -la <directory>
ls
sudo apt -y <string>
unset color_prompt force_color_prompt
cat <string>
npm install
ls
cd <string>
ls
clear
clear
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
ls
cd <directory>
sudo vim <directory>
npm i prettier -g
cd ..
sudo vim <directory>
clear
sed -i <string>
cp -v <string> <directory>
clear
npm -v
cd
cd <directory>
ls
git init
dpkg -c <file>
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
npm install -g <string>
git status
lsof -i:8000
ls -l
ls -la
cat <string>
scp <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
sudo tee <directory>
git push -u <string> main
cp -af <string>
sudo su -l <string>
ls -al
sudo systemctl start <string>
gsettings set <file> <string>
screen -r <string>
cd <string>
pacman -Scc
docker run <string>
sudo adduser <string>
docker build --tag <string>
npm run dev
cd -
cd <directory>
sed -E -e <directory>
mv <string>
sudo lpadmin -p <string> -o <string>
rm goxlr-utility -rf
npm install sharp --save
unset color_prompt force_color_prompt
sudo date -u --set=<string> -H <string> -sD - <URL>
sudo sed -i <directory>
pwd
exit
vim <file>
perl <file>
install <string>
ls
pwd
find . -name <file>
git remote remove origin
install --help
vi <file>
ls
ls
git status
ls
sudo dpkg -i <file>
cd <string>
file <string>
git init
rm -r <string>
git add .
git grep -l <string>
tar -xvcf <file>
cd <string>
cat <string>
sudo start uwsgi
sudo stop uwsgi
git checkout <string>
which <string>
git push --help
ls
ls
ls
wget <string> -O <string>
journalctl -b -0 -e
sudo npm install -g <string>
ls
ping <file>
sudo virsh -c <directory> <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
wc -l <string>
cd ..
ls
sudo netstat -tunlp
ls
docker-compose up -d --build
git pull origin yourbranch --allow-unrelated-histories
firefox-trunk --debug
bash <file>
cd ..
yarn <string>
clear
ls
rm -r <string>
git add <string>
cd <directory>
tail -f <directory>
cd <string>
git add .
cp -r <directory>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
git push -u <string> master
fg
cd <string>
git commit -m <string>
cat <string>
ls
clear
ls
cd ..
docker exec -it <string> bash
mv <string>
ls
nano <file>
ls -ltr
git add <string>
vi <file>
ssh dirlic@10.18.0.39 -p <number>
sleep <number>
cd <string>
ls
git reset HEAD^
find . -empty -type <string> -print -delete
cd <directory>
cd ..
grep <string>
git commit -m <string>
git clone <URL>
cd <string>
ls -la
python3 <file>
clear
sudo apt install -y <string>
git commit -m <string>
git add <string>
git pull
sudo mkdir -p <directory>
ls
cp -r <directory>
python3 <file>
git add .
clear
git rm --cached <string>
cd
clear
python -
cd <string>
read -p <string>
cd ..
fg
sudo chmod <number> <string>
python3 <file>
sudo apt-get install -y <string>
read <string>
ls
git tag <string>
cd <directory>
git status
git add <string>
ls
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
tar zxvf <file>
git config --global <file> <file>
su
exit
cd <string>
sudo chown <string>
npm run start
psql -U <string> -h <string> nzdpu_wis
clear
cat <string>
cd <string>
npm install -g <string>
sudo yum install -y <string>
sudo apt update
cd <string>
ls
read -n <number> -s -r -p <string>
git commit -m <string>
ls
git clone <URL>
ls -la
vim
git branch 2> <directory>
cd <string>
npm start
vi <file>
git init
ls
ls -R <string>
killall <string>
ls
mv <string>
nano <file>
git clone <URL>
find <directory> -type <string> -execdir <string>
ls
cd ..
sed <directory>
chmod <string>
cd ..
git branch -m <string>
git push heroku main
mvn compile
docker commit
cd <string>
exit
cd <directory>
code .
cd
ls
rm -r <string>
ls
mv <string>
cd <string>
ls
ls
git init
git status
sudo vi <directory>
ls
ls
cd <string>
ls
git commit -m <string>
cd ..
clear
dir <string>
cd ..
clear
git add <string>
touch <file>
cd <directory>
git add <string>
cd ..
top
git status
docker run -d -p <string> <string>
sudo -s -u <string> -H
sudo docker rmi <string>
chmod +x <string>
git log
wc -l
then
git commit -m <string>
cd ..
vi <file>
sudo npm install -g <string>
cd <string>
touch <string>
sudo find <directory> -name <string>
exit
sudo nano <directory>
wget --no-check-certificate -c --header <string>
apt-get upgrade -y
ping <string>
clear
cd ..
cat <string>
git add .
cd ..
exit <number>
ls
ls
sudo service nginx restart
sudo bash -c <string>
exit
ls
cat <string>
history
clear
wc -l
git clone <URL>
ls
ps aux
cd <directory>
tar xzvf <file>
cd <directory>
ls
cd <directory>
rm <string>
unset color_prompt force_color_prompt
cd <string>
cd <string>
ls
ssh -L <string> -i <string> -p${PASSTHROUGH_SSH_PORT} <string>
docker run <string>
git pull
gsettings set <file> <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
cd ..
ls
cd <string>
read -rp <string> <string>
ls
vim
ls
ls
git push
sudo keytool -genkey -alias <string> -keyalg <string> -keystore <string>
git commit -m <string> -f
git add <string>
git clone --depth <number> <URL>
diff <file>
cd <string>
docker-compose up -d --build
git init
ls
git status
sudo sed -i <directory> <file>
cd <string>
ls
git status
sudo apt-get install <string>
curl -o <string>
git commit -am <string>
clear
mkdir <string>
cd <string>
fg
cd ..
docker image ls
ls
sudo apt-get update -y
cd <string>
rmdir <string>
ls
ls
unset <string>
ls
ls
git push
ls
exit <number>
vi <file>
sudo mysql -u <string> -p --socket=<directory> <string>
ls
ls
touch <string>
rm -rf <string>
cd <string>
ls
cd <directory>
cat <string>
git clone <URL>
git push
ssh dirlic@10.18.0.39 -p <number>
fg
clear
fg
exit
docker-compose logs
npm run test
ls link
git pull
ls
du -skh <string>
man <string>
git checkout -b <string>
ls
npm start
git add .
ls
ls
docker rmi <string>
git push
cd ..
find . -name <file> -type <string> -print -delete
clear
ls
exit <number>
ls -l
git init
sed -i <directory>
cd <string>
cd ..
cp <string>
cd <directory>
cd <string>
git add <string>
cd <string>
git pull origin development
git push
ls
git fetch
ls -l
more
ls -al
rsync -a <string>
git clone <URL>
git commit -m <string>
nano <file>
git pull
git pull
git push origin <string>
apt-get -y <string> <string>
ls -l
git pull -s <string> -X <string> <string>
cd <string>
read <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string>
clear
sudo service nginx restart
ls
curl <string>
cd <string>
ls
git add .
cd <string>
sudo apt install -y <string>
npm ERR! <string>
cp -r <directory>
ls
cd <string>
du -xh <string>
sudo apt install <string>
sudo apt update
ls
bash <file>
ls
cat <string>
git push heroku main
fg
vim <file>
grep -a -i -E --no-filename <string> */*.log*
git config --global <file> <string>
tar xvzf <file>
python3 --version
wget <URL>
ps aux
uniq -c
clear
git checkout <string>
git pull --force
exit
ls
git checkout -- <string>
ls
wget -c -i <URL>
cd <string>
cd <directory>
vi <file>
sudo apt remove <string>
ls
rm -r <string>
exit
find . -iname <string> -type <string> -exec <string> -i <directory>
wget -r <URL>
mkdir <string>
cd ..
rm <string>
sed <directory>
git commit -m <string>
cd ..
npm install -g <string>
cd <directory>
ls
sudo flatpak override --filesystem=<directory>
git push origin
vim <file>
npm create vite@latest
cd <string>
ls
cd <string>
ls
git commit -m <string>
sudo emacs <string>
ls
cd
exit
read -r <string>
git commit
sudo addgroup <string>
cd <directory>
wget <URL> -O <file>
sudo service nginx reload
python3
git add <string>
grep -P <string>
systemctl --user <string>
sudo mount -t <string>
git checkout <string>
exit
time
cat <string>
find . -name <string> -print
vim <file>
mkdir -p <string>
git status
cd ..
docker stop <string>
cd <directory>
git push origin master
cd <string>
cd <string>
docker ps
git add -A
ls
apt update
rm -rf <string>
which
git fetch
diff <file>
mount --types <string> overlay --options <string>
sudo docker kill corrade
sudo apt install <string>
cd ..
file <string>
ls
git commit -m <string>
git config --unset <file>
git commit -m <string>
find $dir -type <string>
ssh dirlic@10.18.0.39 -p <number>
kill -l <number>
vi <file>
find . -name <file>
then\
ls
git add .
ls
npm run test
git stage <string>
ls
git fetch
clear
sudo fdisk <directory>
exit <number>
nano <file>
ls
git clone <URL>
vim <file>
fg
cp <string>
cd
cd <string>
ssh <string>
cd ..
exit
docker ps
read -r -p <string>
clear
git status
git branch -d <string>
kubectl --namespace <string>
rm -r <string>
cd
fg
exit
git init
ls
ls
nano <string>
clear
ls
ps -auxwf
cd ..
ls
git status
git pull
sudo apt-get update
mv <string>
git add <string>
git commit -m <string>
pwd
ls
python3.11 <file>
sed -i <string>
cd <string>
git config --get
cd <directory>
ls
man <string>
cd ..
ls
npm i <string>
npm i <string>
exit
ps
cd ..
ln -s <string>
git config --global <file> <string>
ls -la
git remote add origin <URL>
cd
git add .
find Clientmate-5.3 -type <string> -exec <string> <number> <string>
git config --global <file> <file>
ls
cd ..
exit
ls
wget -q -O <file>
vi <file>
cd <directory>
apt-get install <string>
git pull
clear
exit <number>
npm start
ls
cd <string>
vim <file>
rm <string>
mkdir <string>
sudo fuser -k -n <string>
git commit -m <string>
mkdir -pv <directory>
kubectl <string>
head -n <string>
exit
kubectl <string>
rm -rf <string>
cd <string>
ls -lrt
curl -LO <URL> -s <URL>
clear
ls
ls
git config --global <file> <file>
nano <file>
sudo mv <file>
ls
git clone <URL>
docker run -d -p <string> -p <string> -p <string>
git config --list
cd <string>
clear
cp -ip <string>
npx <string>
read <string>
git pull
git status
git init
cd <string>
cd <directory>
cd <directory>
ls
vi <file>
ls -a
ls
curl -H <directory> -X <string> -d <string>
nano <file>
vim <file>
mv <string>
grep <string>
cd <string>
ls -lart
head -y <file>
sudo nano <directory>
sudo nohup mongod --fork --logpath <directory>
git --no-optional-locks <string> --error-unmatch -m --directory --no-empty-directory -o --exclude-standard <directory>
cd <string>
pwd
cd ..
sudo python3 <file>
wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=<string> --domains <file> --no-parent <URL>
npm install malta -g
ls
vim <file>
sudo systemctl start <string>
npm install -save <string>
docker-compose logs
git push
rm -r <string>
sudo apt install <string>
cd ..
cat <string>
ls -ltr
pwd --help
history
cd <string>
rm -rf <string>
m -P"Inspect <string>
ls
exit
kubectl <string>
nc <file> <string>
git st
sudo apt-get install <string>
npm run test
nc <string>
ls
npm audit fix
mv <string>
git status
ssh -L <string> -C -N -l <string>
tail -f <string>
git commit -m <string>
curl <string>
git config --local --unset <file>
ls
git pull
ls -a
cd ..
cd ..
ls
unset color_prompt force_color_prompt
ls
ls
cd <directory>
more <file>
clear
rm <string>
openssl rand -hex <number>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
source <file>
cd <directory>
cd ..
curl -LO <string>
find . -empty -type <string> -print -delete
ls
clear
ls
clear
ls <directory> -al
ls
docker run -itd --name <string> -p <string>
clear
git clone <URL>
rm <string>
ls
ls
git clone <URL>
ls
ls
ls
cat <string>
rm -rf <string>
vim <file>
find . -name <file> -type <string> -exec <string> -rf <string>
history -r <string>
clear
curl -sSL --fail <file> -o <file>
git grep <string>
find . -empty -type <string> -print -delete
ls
ls
sudo pacman -Ss <string>
sudo apt-key adv --recv-keys --keyserver <string>
nano <file>
git branch
ssh -oStrictHostKeyChecking=<string> -oBatchMode=<string> -oConnectTimeout=<number> -i <string>
python3 <file>
clear
ls
git push -u <string> main
git clone <URL>
ps aux
mkdir -p <string>
pacman --noconfirm -S <string>
git log
nano <file>
clear
git clone <URL>
sudo cd <directory>
cat <string>
exit
cd <string>
git add -Av
sudo chmod <number> <directory>
npm uninstall -g <string>
cd <string>
fg
mount
mvn -e <string>
ls
fg
sudo systemctl restart <string>
rm -f <string>
cd <directory>
man xdg-desktop-menu --manual
mvn clean <string>
sh <file>
cd <string>
ls
sudo sed -i <directory>
print <string>
cron <string>
vim <file>
ls
sudo apt install -y <string>
xclip -i
git clone <URL>
git pull origin master
sudo unzip <file>
git fetch
git commit
vim <file>
read -p <string>
git add <string>
cd <string>
grep <string>
rm -rf <string>
ls
git log --name-only
pwd
cd ..
ls
docker image rm -f <string>
git reset --hard
ls
vim <file>
kubectl apply -f <string>
git push -f
mv <string>
cd <string>
git branch 2> <directory>
npm audit fix -f
sudo apt-get update
npm install <string>
sleep <string>
export <string>
vim <file>
git add <string>
chmod <string>
chmod <number> <string>
docker-compose build teh-germinator
sudo python <file>
ip link
top
git fetch
ls -l
ls
history
docker rm <string>
git push origin2
ls
git commit -m <string>
ls
sudo service nginx reload
python3
exit
sudo git add <string>
git commit -m <string>
apt-get install <string>
sudo apt-get install <string>
tail -n <string>
python3 <file>
killall <processname> # kill all processes with the name
cat <string>
docker push <directory>
systemctl status <string>
git branch
cd <directory>
npm init
rm -rf <string>
git add <string>
clear
cd ..
rm <string>
git pull
print <string>
man <string>
sudo pip3 install <string>
git add <string>
rm -f <string>
sed -i <string>
ls
tail -f <string>
ping <string>
cat <string>
cd ..
open <string>
git commit -m <string>
cd --
vi <file>
python3
ls
file <string>
vim
grep -qw <string>
ls
nohup node <file>
ls
git log
nc -l <number>
cd <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
git clone <URL>
ip addr
ls
git status
sudo cd <directory>
docker ps
git co PTS-578_redirects_not_updating_automatically
ls
cd <string>
vi <file>
sudo apt update
ls
sudo add-apt-repository <directory>
grep -n -c <number> -i <string>
ls
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE <string>
npm install <string>
sed -r <directory>
cd <string>
git pull
exit
vim <file>
touch <string>
sleep <number>
grep -i -E -o <number>
tee -a <string>
ls
sudo start uwsgi
sudo sed -i <directory> <file>
cd <string>
cd <string>
clear
nano <file>
bash -e <file>
sudo apt-get --assume-yes <string> <string>
git add .
curl <URL> -X <string> -d <string>
cd <string>
git push
ls
sudo sed -i <directory> <file>
sudo apt-get install -y <string>
sort -t':' -k <number> -u <directory>
ls
sudo apt install <string>
tmux kill-session -t <string>
rm -r <string>
ls
ls
vim <file>
ls
sh <file>
git rebase <directory>
cd ..
cd <directory>
clear
cd <string>
git add --all
ls
cp <string>
apt-get install mysql-server -y
git add
sudo rm -rf <string>
git commit -am <string>
cp -r <directory>
wget <URL>
tar -zxvf <file>
cd <string>
ls
npm start
uniq -cf <number>
wget <URL>
vim <file>
ls > <file>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=<string> --domains <file> --no-parent <URL>
cd ..
tar -xvf <file>
cd
cd <string>
cd ..
xargs -I <string> sudo apt install -y <string>
mkdir <string>
fg
reboot
fg
cd <directory>
vim <file>
vim <file>
ps -ax
sleep <number>
git clone <URL>
tr -d <string>
df -lh
sed <directory>
ls
cd <string>
npm install
ls
mkdir -p <string>
sudo apt-get autoclean -y
ls
sudo chmod <number> <directory>
apt-get update
git status
cd
nano <string>
grep <string>
php -r <string>
git pull -v
ls
sudo pacman -Syu
clear
ls
ls
vi <file>
sudo mkarchiso -v -w <string> -o <string> slim-iso
git init
ls
ls
vi <file>
cd <directory>
git clone <URL>
git add <string>
vi <file>
cd <string>
ls -a
sudo vim <directory>
which <string>
vi <file>
nano <file>
clear
ssh dirlic@10.18.0.39 -p <number>
ls
sudo nano <directory>
npm run serve
ls
curl -sS <URL> -o <file>
python3 <file>
tail -$2 <directory>
vim <file>
cat <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string>
cat <string>
git commit -m"update"
sudo bash -c <string>
ls -al
cd <string>
cd <string>
sudo update-alternatives --config <string>
ls ..
git init
git push -u <string> master
sed <directory>
ls
git add <string>
git commit -m <string>
apt update
exit <number>
cd ..
git pull
tail -f <directory>
git init
ls
read <string>
alias <string>
cd <directory>
sudo pacman -Syyu
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
cd <string>
clear
sudo nginx -t
cp -h
sudo crontab -e
ls
clear
sudo chmod <number> <directory>
ls
man <string>
vim <file>
cd <directory>
mount <directory> <directory>
git status
sudo tee <directory>
ls
git clone --depth=<number> <URL> <directory>
vi <file>
sudo python <file> --cascade=<file> <number>
cd <string>
clear
cat <string>
ls
cd <string>
mkdir <string>
vim <file>
git status
curl <URL> -u <string>
vim <file>
ls
yarn add <string>
ls -a
guard -c" <string>
git log --pretty=<string> ---abbrev-commit
sudo apt update
ls -a
docker logs <string>
ls
sudo sed -i <directory> <file>
cd ..
ls
sudo certbot --nginx -d <file> -d <file>
cd <directory>
git add -A
npm install
grep -i <string>
sudo apkg -i <file>
vim
vi <file>
exit
ls
sudo apt upgrade
sudo install -Dm644 <file>
cd ..
ls
git add .
then\
grep <string>
fg
git status
sudo make install
ls
clear
ls -altr
cd ..
clear
git adog
uname -a
cat <string>
cd <string>
cd <string>
clear
cd <directory>
npm install <string>
find . -empty -type <string> -print -delete
cp -v <string> <directory>
clear
python3 <file>
git branch -a
cd <directory>
ls -d <string>
unset <string>
rm <string>
npm install <string>
clear
rm -rf <string>
git clone <URL>
ssh-keygen -t <string> -C <file>
git push origin
exit
git push
nano <file>
sudo apt-get install udhcpc -y
git config --global <file> <string>
byobu-tmux
df
git remote add github <string>
groups <string>
clear
ls -la
git checkout master
cd <string>
ls
cd <directory>
cd <string>
fg
sudo touch <directory>
ls
ls
rm <string>
ls
bash -v <string>
alias <string>
ls -alhs
cd <string>
rm <string>
unset <string>
shutdown -h <string>
clear
tar -xvf <file>
dpkg --get-selections
cd ..
ls
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
ps axfu
sudo apt-get update
cd <string>
code .
sed <directory>
yarn -v
cd
shuf -n <string>
fg
pwd
ls
sudo nano <directory>
mkdir <string>
sleep <string>
cd <string>
cd <string>
exit
man du -ah
mv <string>
ls
git push -u <string> master
ls
kill <number>
man -k <string>
sudo chown <string>
ls
git clone --bare <string>
node <file>
clear
cd ..
docker-compose
ls
pacman -Scc
pwd
cd <string>
else\
vim <file>
ls
sudo shutdown now
cd <string>
ls
clear
sed -i <directory>
vi <file>
git bisect bad
ls -Al
cd <directory>
ls
cd <string>
cd <string>
cd <string>
clear
ls
git init
git add <string>
clear
git push origin master
vim
git add .
git branch
fg
git commit -m <string>
ls
git init
git status
bash <file>
cd <string>
vi <file>
docker-compose up
curl -G <directory>
mkdir <string>
ls
ls
docker rmi <string>
clear
killall <processname> # kill all processes with the name
more <file>
python3.11 <file>
ps
exit
clear
cd <directory>
ps -e
sudo poweroff
ip a
git remote add origin <URL>
ls -ltr
fg
clear
vim <file>
read -p <string>
cat <string>
cd <string>
vi <file>
ls -la <directory>
ls
vim <file>
cd <string>
sudo stop uwsgi
done
git commit -m <string>
ls
cp -r <directory>
git status
cd <string>
cut -f <number> -d <string>
docker exec -it <string> bash
ls -lS
mv <string>
cat <string>
pwd
python3 <file>
git clone <URL>
ls
ls
npm install
ls
vi <file>
byobu-tmux
sudo ln -s <directory>
git branch
cd <string>
cd <directory>
ls
clear
cd ..
curl <URL> -u <string>
dpkg-shlibdeps: erro: <string>
ip a
docker exec -it <string> bash
systemctl status <string>
ls
service mysqld start --skip-grant-tables
cd <string>
git status
ls
git pull origin master
cp <string>
cd
clear
cd <directory>
git stash pop
ls
dpkg -i <file>
vim <file>
ls
<file> program
cat <string>
ls
git commit -m <string>
ls -al
python3 <file>
sleep <number>
ls
mkdir <string>
clear
git fetch
read -p <string>
df -H
cd <string>
kill
gunzip <file>
vim <file>
ls
docker-compose logs
git add .
ls
ls
fg
ls
ls
clear
cd <string>
git commit
ls
git log
done\
curl <string>
cat <string>
vi <file>
cd ..
shift <string>
then\
rm <string>
cd <string>
ls
touch <file>
cd ..
df
vim
git remote add origin <URL>
done
git status
sudo mv <string>
ls -alrt
cd ..
python3 <file>
cd
apt-get install -y <string>
ls
ls
ls
git push origin main
sudo mkdir <directory>
ls
sudo cp <string>
cat <string>
cd <directory>
git commit -m <string>
git add .
git checkout master
source <directory>
git push
sudo nano <directory>
ls
exit <number>
ls
ls -a
ls
ls -l
ls
cd <string>
git push -u <string> master
ls
sudo dnf config-manager --set-enabled <string>
ls
cp <string>
git status
ps aux
mv <string>
git status
cd <string>
git status
sudo sed -i <directory> <file>
git commit -m <string>
vi <file>
vi <file>
cd <string>
ls
sudo apt-get install <string>
ls
git checkout <string>
cat <string>
cd <directory>
more <file>
clear
go tool pprof <file>
git push
ps -A
cd <directory>
uname -r
cd ..
cp -r <directory>
ls
clear
git remote add origin <URL>
ls
cd <string>
curl <URL> -o <directory>
git checkout master
sudo apt-key adv --keyserver <string> --recv <string>
top
rm <string>
cat <string>
chmod +x <string>
cd <string>
fg
cd ..
sudo ln -s <directory>
host <string>
htop
head -n1\
ls -l
ls
sed -i <directory>
find . -empty -type <string> -delete
sort -g
git commit -m <string>
ls
clear
more
cd <directory>
sudo chown -R <string>
rm -f <string>
clear
ssh-keygen -t <string> -C <file>
cat <string>
vim <file>
rm <string>
lsof -p <number>
ls
ssh
ls
git branch
ls -alrt
apt-transport-https \
hg ci -m <string>
find . -name <string> -type <string> -exec <string> -c <directory> -- <string>
git commit -m <string>
clear
ls
vim <file>
curl <string>
curl -k <URL>
touch <string>
git commit -m <string>
zeus.polsl.gliwice.pl - <number>
cd <string>
vim <file>
ls
git pull
ln -sv <string>
node <file>
cd <directory>
cd <string>
rm -rf <string>
clear
ls
htop
git commit --amend
code <string>
code - <string>
git clone <URL>
cd <string>
sudo pacman -S <string>
clear
git commit -m <string>
read -p <string>
cat -n <string>
ls
cd ..
tr
sudo apt-get install <string>
sudo apt-get install <string>
less <string>
cd <string>
clear
git clone <URL>
git push -u <string> master
sudo rm -rif <string>
ls
ls
ls
ls
cd <directory>
wget <URL>
cd <string>
ls
ps -auxwf
exit
git branch
git add -A
mv <string>
grep <string>
cd <directory>
cd <string>
sudo apt update
cat <string>
ls
sleep <number>
chmod <number> <string>
less <string>
sudo strace -p <number> -o <file>
ls - <string> -n
ps ax
clear
git add .
cd <directory>
ls
grep -e <string>
grep -vE <string>
exit <number>
vim <file>
ls
sudo npm cache clean -f
git pull
ls
ls
cp -R <string>
ls
sudo su -
multitail --no-repeat -c -s <number>
ssh <string>
git stash apply <number>
git count-objects -vH
setg RHOSTS.*
cat <string>
cd ..
ping <file>
sudo chmod <number> <string>
cp -r <directory>
ls
cd <directory>
<file> -L <string>
ls
exit <number>
git pull
cd <string>
cd <directory>
cd <string>
ls
vim <file>
ls
mvn install
git pull
fg
vi <file>
cat <string>
git reset <string>
command grep --color=<string> --no-filename -E <string>
vim <file>
git checkout <string>
git push origin
mount -l
ls
ls
tr <string>
python -m <file>
sudo service <string>
vim <file>
cd <string>
ls
cd <directory>
cd <directory>
tail -f <directory>
sudo apt upgrade
grep <string>
git clone <URL>
vim <file>
ls
rm <string>
ls
clear
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
rm -rf <string>
mkdir <string>
fg
ls
cd <directory>
clear
rm <string>
cd <string>
rm <string>
nano <string>
ls
bash
git add -A
npm install -g <string>
wget -O <file>
cd ..
unzip <file>
ls
git pull
cat <string>
clear
cd <directory>
unset <string>
curl -X <string> <URL> -d <string> -d <string> -d <string>
git remote set-url origin <string>
dotnet --list-sdks
exit
sed -i <string>
cd <string>
docker-compose up -d --build
git add -a
brew services <string>
cd <directory>
git status
cd <string>
vim <file>
exit
git push origin --delete <string>
rm <string>
cd <string>
sudo vim <directory>
cd ..
pwd
cd <string>
cd <string>
sudo apt upgrade
cd ..
exit
cp <string>
cd <string>
ps ux
curl -sL <URL>
git commit -m <string>
git add --all
sort -u
ls
cd <directory>
chmod <number> <string>
git commit -m <string>
ls
git checkout -- <string>
ls
ls
sort
git init
git add .
cat <string>
clear
cd <string>
vim <file>
cd <directory>
clear
cd <directory>
sudo -i
ls
sudo tar -C <directory> -xvzf <file>
git pull
cd ..
xargs -0 <string> -i <string>
cd <string>
read -p <string>
cd ..
ls
tar -xvf <file>
cd <directory>
sudo apt-get upgrade
git commit
ls
vi <file>
vim <file>
git push
touch <string>
rm -rf <string>
sudo update-alternatives --config <string>
git status
ls
ls
apt-cache search <string>
date
bash <file>
cd <string>
vi <file>
docker ls
env
cd <string>
ls
sudo update-alternatives --install <directory>
grep <string>
git fetch
cat <string>
python3 <file>
cat <string>
ls
cd <string>
fg
tr <string>
ls -la
git status
sudo apt-get install <string>
git commit -m <string>
ls
fg
sudo pacman -Rs <string>
sed -i <directory>
git add .
cd <string>
rm
rm -rf <string>
pwd
cd <string>
ls
vim <file>
cd <string>
ls
cd <string>
ls
sudo systemctl start <string>
cd <string>
git init
ls
git config --global <file> <string>
git add <string>
git commit -m <string>
docker-compose down
clear
mv <string>
git push
git add .
git pull
cd <string>
pico <file>
git remote add origin <URL>
cd <string>
cd <string>
sudo apt install nala -y
chmod +x <string>
sudo gem install <string>
cd
ls
cd <string>
ps -aux
apt install -y <string>
ls
cd ..
ls -ltr
cd <string>
ls
git push -u <string> master
rm -r <string>
exit <number>
git status
cd <string>
git remote -v
mkdir -p <string>
cd
rm <string>
touch -r <file>
less <string>
cd
grep -a -i -E --no-filename <string>
cd
cd ..
apt-get install <string>
cp -v <string> <directory>
git add -A
vim <file>
ls
clear
ls
sudo vi <file>
cd <string>
uname -r
git add <string>
ls
sudo add-apt-repository <directory>
sudo apt install nodejs -y
npm run start
ls
ls
cd <string>
which <string>
cd <string>
cut -d -f1 <file>
which <string>
vi <file>
git stash
ls
npm create vite@latest intro-svelte -- --template <string>
git status
cd
ls
tar xfvz <file>
cd ..
sudo systemctl status <string>
cd ..
ls
git push
sh
ls
psql -U <string> -h <string> <string>
cd <string>
cd <string>
ln -s <string>
sudo apt-key add -
git adog
ls
ls
cp <string>
yarn install
vi <file>
ls
sudo start uwsgi
rm <string>
ln -s <string>
git push --set-upstream <string> master
ls
read -p <string>
vim <file>
sudo service nginx reload
ls
git branch -d <string>
chmod -x <file>
ls
cd <directory>
cd ..
cd <string>
ls
ls
clear
mkdir <string>
unzip -e <file>
rm -Rf <string>
touch <file>
pwd
git push
cd <directory>
rm -f <string>
ls
nano
git commit
ls -lAF <string>
ls
code .
cd
sudo vim <file>
done\
ls
mv <string>
git st
vi <file>
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
ls
ssh-keygen
git remote rm <string>
git co PTS-578_redirects_not_updating_automatically
sudo vi <file>
mkdir <string>
sudo unionfs-fuse -o <string> -o <string>
vi <file>
docker run -d -p <string>
sudo su
history
cp -r <directory>
vi <file>
vim <file>
ls -ltr
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
sudo apt purge <string>
ls
ls
git branch
cd <string>
cd <string>
pwd
cat <string>
ls
clear
clear
sudo apt-key adv --keyserver <string> --recv-keys <string>
cd <string>
read -r -p <string>
clear
cd <directory>
git checkout <string>
cd <string>
pulseaudio -vvvv
cd <string>
git rm --cached <directory>
code .
fg
exit
vi <file>
git add <string>
ls
source <string>
exit
cd <directory>
ls
clear
done
grep
cd ..
ssh <string>
clear
source <directory>
git branch
ls
sudo node <file>
python3 <file>
rm -rf <string>
ls
clear
ls
ls
ls
rm -rf <string>
sudo stop uwsgi
cat <string>
cd <string>
npm run test
nano <file>
curl -s <string>
cd <directory>
ls
nano <file>
git commit -m <string>
ls
git remote add origin <URL>
vim <file>
wget -r -A.pdf <URL>
ps ax
exit
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
curl -v -H <string> <URL>
date <string>
git checkout <string>
sudo apt-get install codium -y
sleep <number>
cd <string>
sudo nano <directory>
ls
ls
grep -n <string> <directory>
done
sudo vim <directory>
ls
mkdir <string>
source <string>
cd <string>
git commit -m <string>
exit
exit
ls
history
cd ..
cp <string>
git fetch
git init
git add <string>
ls
cd
read -r <string>
ls
gzip <string>
brew update
fg
read -n <number> -p <string>
npm ERR! <string>
ls
cat <string>
cd <string>
ls
git checkout ${commit} -- <string>
nano <string>
df -H
git stash apply <number>
git commit -m <string>
ls
vim <file>
sudo reboot
cp <string>
cd <directory>
cd <string>
cd <directory>
vi <file>
awk <string>
vim <file>
vi <file>
git commit -m <string>
rm <string>
vim <file>
cd <directory>
tail -f <string>
python3 <file>
uname -r
git remote -v
ls
grep -Eq <string>
git revert <string>
exit <number>
ls
read -p <string>
mkdir <string>
exit <number>
df --help
git commit -m <string>
ssh dirlic@10.18.0.39 -p <number>
cat <string>
cd ..
wget <URL>
uniq
ls
cat <string>
git status
cd
fg
git add .
cd <directory>
chmod +x <string>
done
sudo ufw enable
rm <string>
cd ..
vim <file>
else\
sudo rm -rf <string>
cd <string>
git status
nano <file>
tar -tf <string>
ls
cd <string>
sudo -s -u <string> -H
exit <number>
cat <string>
fg
fg
mkdir -vp <directory>
cd <string>
cd <string>
cd <string>
exit
npm install
pwd
ls
ls
ls
cat <string>
clear
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
git status
top
less
cd <directory>
exit
git push -f <string> <string>
cp <string>
sudo service <string>
ls
rm <string>
ls
npm install
npm uninstall <string>
ls
cd <directory>
ps
cd <string>
grep <string>
docker exec -it <string> bash
rm <string>
sudo docker ps
git push -u <string> master -f
git status
cat <string>
vim <file>
git add -A
git commit -a
pacman -Syy
grep <string>
sudo vim <file>
vim <file>
sudo apt install -y <string>
exit
cd <string>
gpg --send-keys --keyserver <file>
ls
mv <string>
chmod <number> <string>
npm install
cd <string>
ls -lh
ls
mkdir -p <string>
sudo apt purge <string>
vim <file>
git pull
git revert
ls
nano
ls
cd <string>
cd <string>
clear
source <string>
ls
export <string>
ls
ls
screen -r <string>
git push origin master
rm <string>
find . -empty
python3 <file>
ip
exit
vim <file>
curl -OJLZ <URL>
cp <string>
sort -u <string>
exit
ls
git remote -v
docker-compose logs
tail -f <directory>
git pull origin master
grep -vi <string>
ls
git add .
git push
cd <directory>
nano <file>
vim <file>
tmux
cd <string>
ls
cd <string>
pwd
sudo chmod 775 <string>
vi <file>
cd ..
ps axfu
git push
git init
git commit -m <string>
ls
mkdir <string>
ls -la
git remote add origin <URL>
more <file>
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
cd <string>
git add <string>
sudo rm -r <string>
sleep <number>
git clone <URL>
grep <string>
git checkout <string>
git remote add origin <URL>
git clone <URL>
source <file>
git init
python3 <file> -- <string> @CAMERA=<string> <string>
vi <file>
git commit -m <string>
ps -u <string> # lists your processes
git init
cd ..
unset <string>
tar xzvf <file>
exit
cd <string>
cd <directory>
clear
exit
vim <file>
ls -la
git commit -m <string>
git fetch
tmux kill-session -t <string>
rm <string>
git status
pkill <string>
ls
vim <file>
yay -S <string>
ls
rm <string>
ls
clear
pwd
git status
ls
ls
uname -a
cd
find . -name <file>
exit <number>
ls
sudo apt-key adv --keyserver <string> --recv <string>
cd <string>
gpg --verify <file>
reboot
ls
ls
cd <string>
cd <directory>
ls -lh
ls
cd <string>
find . -size <string> -a -print -a -exec <string> -f <string> \
sudo apt-get install <string>
cd ..
ls
ls
cd <string>
clear
cd
ls
clear
wget -q -O - <URL>
sudo apt install <string>
<directory> <string>
ls
git pull
touch <file>
php -- --install-dir=<directory> --filename=<string>
vim <file>
ls
cd <string>
git commit
git add <string>
cd ..
vim <file>
npm i
curl -T <directory> <string>
cd <string>
unset <string>
cd ..
xargs kill -HUP
git commit -m <string>
sed <directory>
sed -i <string> -e <string>
sort
ls
clear
cd <string>
ps
sudo systemctl restart <string>
curl <string>
git status
date
git commit -m <string>
sudo userdel demouser
ls -latr <directory>
mkdir <string>
sudo vi <directory>
ls
uniq
ls
git checkout <string>
sudo sed -i <directory>
read -r -p <string>
ls
free -h
cd <directory>
chmod u+x <string>
git push
ls
ls
ls -R
exit <number>
git push origin master
vim <file>
sed -n -e <string> -e <string>
ls
ls
ls
exit <number>
open <string>
which <string>
view <string>
sudo passwd <string>
sudo apt upgrade -y
ls
sudo nala install <string>
setg RHOSTS <file>
git commit -m <string>
ls
git commit -m'Cool, <string>
ls
sudo apt install <string>
cd <string>
ls
ls
rm <string>
git commit -m <string>
npm run coverage
cd
cd -
find . -empty -type <string> -print -delete
cd
ls
cd <directory>
sudo apt upgrade
ls -lrth
docker build --help
curl <string>
cat <string>
ls
clear
ls
cd <directory>
ls
clear
sed -E -e <directory>
curl <URL> -u <string> -d <string>
df
sed <directory>
sudo sed -i <directory> <file>
npm create <string>
cd ..
fg
cd ..
cd ..
ls
sudo apt update
cd ..
touch <file>
cd <string>
npm i <string>
ls
vim <file>
which -a <string>
clear
cd ..
dpkg -l
ls
ls
cd <directory>
cd ..
groups
ls
ls
ls
vim <file>
cd <directory>
kubectl get pod -n <string>
ls
vim <file>
python3 <file>
git remote add origin <URL>
sudo sed -i <directory> <file>
grep -wPrn <string>
cat <string>
sudo pacman -Ql <string>
find <directory> -iname <file> -type <string> -exec <string> printf <directory>
python3 <file>
sudo halt <string>
tail -f <directory>
sudo apt install <string>
ls -l
cd <string>
ls
cd <string>
git remote -v
git push
ls
git add <string>
cd <string>
cd <directory>
cd <string>
wget <URL>
ls
cd <string>
less <string>
read -p <string>
ls
ssh {} -o -n <string>
git clone <URL>
alias <string>
cd <string>
ls
bash <file>
cd <directory>
cat <string>
vim <file>
vim <file>
ls -lh
chmod <number> <string>
cat <string>
ls -las
ls
cd <directory>
killall <string>
git status
exit
git add <string>
read -r -p <string>
rm -f <string>
git add <string>
npm i web3 --save
ls
git add <string>
npm start
cd ..
ls
sed <directory>
head -n <string>
mv <string>
ls
git push origin master
git diff <string>
touch <file>
sudo apt-get install <string>
ls
sudo npm start
cd <directory>
cd ..
cd
rm -rf <string>
sudo apt-get -y <string>
docker commit <string>
cat <string>
exit <number>
python3 <file>
cd <string>
cd <string>
grep -i <string>
ls
clear
cd <string>
git commit -m <string>
systemctl edit --full <string>
vim <file>
git add -A
exit
vi <file>
npx tailwindcss init -p
ls
cp <string>
more <file>
ls
vi <file>
ls
cd <string>
ls
chmod <number> <string>
cd <string>
ls
git remote add origin
then\
cd <string>
pkill <string>
git add .
rm
ls
clear
cd <string>
python3 <file>
ls
cd <directory>
rm <string>
sudo -u <string> -i <string>
git add -v --dry-run <string>
cd <string>
ls -l
rmdir <string>
ls
docker run --network=<string> --name <string> -e <directory> -p <string>
exit
npm
python3 <file>
vim <file>
mv <string>
cd <string>
ls
reboot
ls
service
git pull origin development
cd ..
cat <string>
exit
exit <number>
git commit -m <string>
vim <file>
mv <string>
rm <string>
nano <file>
vim <file>
git pull
git init
git rm --cached <directory> -f
cat <string>
ps axfu
sed -i <string>
sudo alternatives --set <string> <directory>
rm <string>
ls
pwd
ls
top
vim
cd ..
sudo pacman -S <string>
git fetch
cat <string>
source <string>
git push --help
fg
history
git branch
git clone <URL>
exit
sudo apt-get install <string>
read -p <string>
ls
screen
ls
python3 <file>
ls
docker-compose logs
ls -ltr
ls
which <string>
rm -fv -- <string>
find . -name <file>
grep -v <string>
ps auxf
rm -rf <string>
rm <string>
find <directory> -name <string> -print
sudo mkdir -p <directory>
ls
rm -f <string>
ps aux
vim <file>
ls -la
sudo apt-get update
sed -e <directory> -e <directory>
cd <string>
sudo reboot
ls
sudo -u <string> psql
git commit -m <string>
ls
cd
git pull
brew install <string>
clear
ls
rm <string>
vim
sudo mv <string>
cd ..
ls
chmod -R <number> <directory>
python3 <file>
yarn add <string>
git push -u <string> master
cd <string>
ls
mkdir <string>
ls -al
sudo apt remove <string>
ls -l
php artisan <string>
ls
ls
git add <string>
git push -u <string> master
sudo gem install <string>
find . -name <file>
git status
git rev-parse --abbrev-ref <string>
vi <file>
git status
vim <file>
git commit -m <string> --no-verify
cd <string>
cd ..
git clone <URL>
code .
git checkout -b <string>
sudo apt-get install <string>
export CFLAGS=<string> -std=<string>
clear
pwd
grep <string>
ls
sudo ln -s <directory>
sudo start uwsgi
ps -ef
gpg --send-keys --keyserver <file>
ls
git push
curl -sL <URL>
cd <string>
sudo nala purge <string>
ssh-add <directory>
git push -u <string> master
ls
man <string>
fg
git commit
ls
git add .
update-alternatives --install <directory>
cd ..
sudo shutdown
ls
rm -f <string>
ls
pwd
cd <directory>
ls
free
ssh dirlic@10.18.0.39 -p <number>
ls
git checkout <string>
cd <string>
cd ..
sed <directory>
mkdir <string>
cd <string>
chsh -s <string>
git commit
helm <string>
cd ..
cp -r <directory>
git pull origin <string>
git commit -vvv -a -m <string>
ls
git commit
ls
cd <directory>
find ~ -mmin <number> -type <string>
docker login
ls
git status
docker ps -aq
make clean
ps -aux
cd <string>
rm -rf <string>
pkill <string>
npm run dev
sudo docker build -t <string>
ls
vim <file>
rm -Wall
history
ls -all <directory>
local <string>
ls
cd <string>
sudo ifup <string>
sudo apt-get remove <string>
ls
ls
cd <directory>
npm run test
git add <string>
sudo gem install <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
exit
git pull origin master
sudo apt install <string>
cd <string>
npm ls <string>
lshw
read -p <string>
vim <file>
ls
ls
cd <string>
sudo sed -i <directory>
docker ps
touch <string>
exit
ls
docker build -t <string>
sudo -H <string> install <string>
nano <file>
cd <directory>
rm -rf <string>
ls
cat <string>
cd..
ls
git status
ls
cd <directory>
code <string>
mkdir <string>
cd ..
cp <string>
ls
npm run test
ls
docker run --rm -ti -v <string>
vim <file>
pwd
npm install react-native-permissions --force
ls
git clone <URL>
vim <file>
sudo ln -s <directory>
ls -a
npm run coverage
cd <directory>
exit <number>
cp <string>
npm install <string>
clear
git merge -continue
ls
git remote add origin <URL>
mkdir <string>
vim <file>
cd <string>
sudo apt autoremove
cat <string>
bash <(wget -qO- <URL>
git push
unset color_prompt force_color_prompt
sleep <number>
mv <string>
cd <directory>
npm install -g <string>
exit
sudo su
wget <URL>
git rebase -p <directory>
unset <string>
vi
ls
cd <string>
chmod +x <string>
git add .
grep -v -e <string> -e <string>
git push
ping <string>
git log --diff-filter=<string> --summary
ls
cd <string>
pwd
tmux switch-client -c <string> -t <string>
git commit -m <string>
git fetch origin\
ssh -t <string>
ls -l
date
exit
ls
ps -a <string> selects all processes with a tty except session leaders
cd <directory>
chmod <number> <string>
git add .
ssh-add <directory>
sudo add-apt-repository <directory>
cd <string>
vim <file>
vim <file>
cd <string>
git remote set -url <string>
cd <string>
ls
pwd
sudo git push <string>
git commit -m <string>
git add <string>
tmux
read -rp <string> <string>
ls
mkdir <string>
ls
curl -s <string>
git add <string>
git push
git -C <string>
cd <directory>
ls
vi <file>
su -
ls
head <filename> # outputs the first lines of file (default: <number> lines)
yarn install
exit
git log
cat <string>
curl <string>
sudo sed -i <directory> <file>
cd <string>
git status
ls
ls
exit <number>
git init
sudo journalctl -u <string> -e
npm install <string>
vim <file>
sudo apt-get update
clear
git commit -a
find . -empty -type <string> -print -delete
cd
ls
npm start
export <string>
git add .
git
git reset
ls
chown <string>
rails <string>
ls
clear
find . -empty -type <string> -print -delete
sed -i <directory>
exit
ls
docker-compose down
sudo apt remove <string>
chmod <number> <string>
cd <directory>
cd <string>
vim <file>
sudo apt autoremove
cd ..
clear
ls
sudo <directory> restart
cd <string>
find .
cd
psql -U <string> -h <string> nzdpu_wis
fg
ping <string>
docker exec -it <string> bash
git commit -m <string>
docker-compose down
ls
cd <string>
git add <string>
find <directory> -mindepth <number> -type <string> -exec <string> -t <directory> --backup=<string> <string>
exit
ls -la
npm install <string>
git add .
git add <string>
cd
clear
wc -l
sed -i -e <string>
ls
cd <string>
cat <string>
wget <URL>
ls
ls
ls -la
sudo vim <file>
ls -al
exit
uniq -u <file>
apt-get update
git pull origin master
clear
cd <string>
git push
ls -al
sudo kill <number>
clear
git pull origin master
git push origin master
ls
wget -O <file>
clear
pwd
vim <file>
nano <string>
fg
git branch
rm <string>
vim
su
git init
cd <directory>
git status
sudo vi <file>
mkdir <string>
sudo vim <file>
cd ..
sudo systemctl restart <string>
python3 <file> -i
mv <string>
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
sudo rm -rf <string>
clear
ls -l
sudo dnf install fish -y
cd <string>
git st
ls
cat <string>
mkdir <string>
ls
cd <string>
sudo <string> -c <string>
vi <file>
sudo mv <string>
sudo tune2fs -c <number>
clear
vim <file>
cd <string>
sudo port <string>
chmod <number> <string>
python3.5 -V
cd ..
git rebase -i <string>
sudo sed -i <directory>
vi <file>
cd <directory>
clear
vi <file>
cd
ps -ef
git push origin master
exit
npm install -D <string> postcss autoprefixer
ls
sudo chown $USER:users -R <string>
ls
then\
cd ..
chmod +x <string>
npm init -y
git push origin master
sudo add-apt-repository <directory>
sudo gpg --dearmor -o <directory>
su root
reboot
ls
ls
<directory> -m <file>
node <file>
mkdir <string>
cd <directory>
mkdir <string>
git pull
mkdir <string>
ls -la
xargs -o <string> <string>
git pull
cd
git adog
find . -name <file>
fg
ls
cd <directory>
man <string>
ssh dirlic@10.18.0.39 -p <number>
cd -
ls
git commit --amend --reset-author
sed -i <string>
ls
clear
vi <file>
sudo apt-get install <string>
sudo reboot now
sudo sed -i <directory> <file>
ssh <string>
ls -lah
sudo unlink python3
ls -ltah <string>
cd
ls
vim
ls
exit <number>
vi <file>
cd <string>
unset <string>
cd ..
yarn <string>
cat <string>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
ls -laSh
grep -e <string>
done
ls
git branch -d <string>
cd
docker rm <string>
rm <string>
cd <directory>
rm -rd <string> -f
source <file>
git merge
cd ..
sudo apt update
exit
find . -empty -type <string> -print -delete
fg
cd <string>
touch <file>
ls
cd <string>
ls
ls
read -r <string>
source <file>
time go run <file>
cd <string>
ssh <string>
grep <string>
sudo wget -O - <string>
ls
mv <string>
npm audit fix -f
ls
ls
cd ..
ls
clear
ls
pwd
git pull
git remote add origin <URL>
chmod +x <string>
cd <string>
grep <string>
sudo chown <string>
chmod +x <string>
ls
nano <file>
read -p <string>
git push origin master
fg
cp -r <directory>
cd <string>
cd <string>
curl -fsSL <URL>
git status
ls
npm config <string>
git --version
sleep <number>
vim <file>
exit
ls
ls
ls
journalctl -xe -b <number>
sudo fdisk <directory>
fg
git commit
sudo apt install <string>
find . -empty -type <string> -print -delete
git commit -m <string>
cd <directory>
find --help
history -a
rm -rf <string>
chmod <string>
cd <directory>
ls
sudo su
ls -a
ssh-keygen
ls
scp <string>
ls
git commit -m <string>
git remote -v
cd <directory>
wget -q -O - <URL>
rm -r <string>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
systemctl --help
git push heroku master
git fetch upstream
cd <string>
cd <string>
cd ..
exec zsh
sudo raspi-config
ls
sudo groupadd docker
python3 <file>
fg
git clone <URL>
ls
python3 <file>
mv <string>
git status
cd <string>
cd <directory>
cd ..
cd <directory>
sudo add-apt-repository <string>
psql -h <string> -U <string> -d <string> -L <file> -a <string>
find . -empty -type <string> -print -delete
sudo apt install -y <string>
npm run dev
clear
clear
ls
grep -E <string>
git status
clear
cat <string>
vim <file>
sudo apt install <string>
cd <string>
git add .
ls
pwd
cd <directory>
sudo apt-get -y <string> <string>
grep -r -i -n --exclude-dir=<string> <string>
ls -la
ls
sudo sed -i <directory> <file>
top
history -a
sudo yum install java-17-amazon-corretto-devel -y
git --version
git add .
sudo pacmna -S <string>
read <string>
vim <file>
python3.8
vim <file>
cd
npm install
git log --pretty=<string> <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <string> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file>
sudo apt-get install <string>
git push
ls -la
ls
cd <string>
ls -la
cd <directory>
rm --help
git add . -A
cp <string>
more <file>
ls
ls
ls
git remote -v
clear
git commit -"frankenstien's <string>
cd <string>
ls
git remote add origin <URL>
find -name <string>
cd <string>
nano <file>
cd ..
clear
vi <file>
vi <file>
git push origin master
cd ..
sudo restart <string>
read -s -n <number>
git rm <string>
cd <string>
sed <directory>
vi <file>
git reset <string>
rm -rf <string>
cp <string>
git commit -m <string>
rm -r <string>
ls
nano <string>
cd <directory>
git commit -m <string>
touch <file>
vi <file>
cp <string>
dpkg -l
node --version
screen -r
clear
ls
git commit -m <string> --no-verify
grep <string>
rm -rf <string>
cat <string>
ls
sudo make -j <number>
git push --set-upstream <string> main
ls
cd <string>
ls -ltr
ls
git add .
git push -f
exit
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE <string>
git commit -m <string>
git push
git commit -m <string>
npm run test
codedown javascript
rm <string>
git commit
kubectl rollout status deploy webhook -n <string>
su
sort -h -r
chmod <number> <string>
ls
ls
sed -i <string>
git push
cd <string>
source <file>
git commit -m <string>
sleep <number>
xargs -n1 <string>
git add -A
cd <directory>
git commit -m <string>
ls
git push
<directory> <string>
git add <string>
cd <string>
grep <string>
ls
vim <file>
cd
curl <string>
clear
sudo rm <directory> -rf
vi <file>
git status
su - <string>
sudo sed -i <directory> <file>
cd ..
cd <string>
sed <directory>
sudo vi <directory>
ls
rm -f <string>
ls
cd <string>
git st
more <file>
exit
clear
cd <string>
ls -R <string>
sudo nala purge <string>
ls
git push origin main
sort -k2 -k1n
sudo tee <directory>
apt install <string>
node <file>
xargs -n1 <string>
rm -rf <string>
sudo yum install -y <string>
python3 <file>
vi <file>
sudo pacman -h
read -e -p <string> -i <string>
cd
git fetch origin\
ls
docker-compose build teh-germinator
rm -f <string>
cd <directory>
git push origin master
fg
git diff <string>
find . -type <string> -exec <string> -s <file> -t <string> -o <file>
clear
ps -auxwf
cd ..
exit
wget <URL>
cd ..
vi <file>
ls
git commit -m <string>
ls
bash <file>
ls
cd ..
ls
ls
ls
vi <file>
vim <file>
ps -ef
exit
sudo du -h --max-depth=<number> <string>
git clone <URL>
vi <file>
ls
cd <string>
ls
git stash apply <string>
rm -rf <string>
ls
ls
git pull
less <string>
wget <URL>
ls
docker container rm repoDemo ------- <string>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
sudo systemctl status <string>
ls
ls
ls
exit
vim <file>
ls
ls -l
cd ..
cd <string>
cd <string>
cut -d <string> -f <string>
git diff <string>
find <directory> -type <string> -execdir <string>
htop
git commit -m <string>
sudo poweroff
sudo nano <directory>
sudo pip install -e <string>
curl -o- <URL>
ls
sudo groupadd docker
git push --set-upstream <string> <string>
vi <file>
clear
git push origin master
sudo rm -rf <string>
rm <string>
git add <string>
vim <file>
history
exit
git commit -m <string>
cat <string>
docker rmi <string>
git clone <URL>
cd <string>
ls
ls -l
git clone <URL>
git init
git push -u <string> main
cd <string>
sudo python <file>
cd <directory>
sudo python <file> --cascade=<file> <number>
true
cd ..
git init
git pull
vi <file>
ls
cd <string>
git push
sudo apt-get install <string>
exit
ls
git pull
cd <directory>
su - <string>
sudo su
ls
ls
wget -q -O - <URL>
cd <string>
clear
clear
mkdir <string>
grep <string> -C4 <string>
sudo apt get <string>
cat <string>
sudo firewall-cmd --zone=<string> --add-service=<string> --permanent
sh <file>
git commit -m <string>
clear
touch <file>
ls
sudo pacman -S <string>
clear
cp <string>
ls
cd <string>
xargs -0 <string>
ls
cd <string>
cd <string>
vi -t <string>
grep <string>
df -lh
find . -empty -type <string> -print -delete
sed -i <directory>
cd ..
exit
ls
sudo apt install binwalk -y
service apache2 reload
sudo ufw enable
ls
git clone <URL>
cd <string>
exit
ls
sudo dnf install -y <string>
cd <directory>
vim <file>
cd <string>
mkdir <string>
cat <string>
cut -d"/" -f2-
touch <file>
sudo usermod -G <string>
nano <string>
mkdir <string>
git push -u <string> main
npm install
git status
ls
git --version
npm install <string>
git rebase --continue
cd ..
more <file>
cd
ls
git add .
ls
git push origin
sed <directory>
git pull
git push
cd <string>
sudo chmod +x <string>
ls
ls
cat <string>
ls -l
adduser xtina
ls -la <directory>
reboot
sed -E -e <directory>
ls
git diff
find . -name <string> -type <string>
git commit
git describe --contains <string>
cd <directory>
ls
ls
cd <directory>
ls
npm start
xargs grep <string>
git status
vi <file>
sort -n
sudo sed -i <directory> <file>
ls -a
git status
ls <file> -l
mv <string>
clear
ip -6 <string>
rm -r <string>
git clone <URL>
rm -f <string>
sudo apt-get install <string>
vim <file>
git clone <URL>
xargs -0 <string> <string>
ip route <string>
sh <file>
sudo chown -R <string>
git commit -m <string>
git push -u <string> master
chmod +x <string>
vim
ls
sh
exit
cd <string>
sudo <file> -v -r -w <string> -o <string>
cd <directory>
ls
sudo mkdir <directory>
git pull
rm -f <string>
ls
vi <file>
vim <file>
git clone <URL>
pwd
less <string>
mv <string>
sudo sed -i <directory> <file>
git add .
sudo serve -s <string>
sort -nr
grep <string>
git rm -rf <string>
grep <string>
ls -la
cd ..
xargs kill -9 <directory>
git status
test
ls
git init
git push -f
ls
git add .
exit
ls
sudo apt update
ls
npm run start
find <directory> -type <string> -exec <string> <number> <string>
vim
ls -la
cd <directory>
sudo apt install <string>
find . -name <file>
git add .
cd ..
vi <file>
git commit -m <string>
host <string>
unzip <file>
vim <file>
cd ..
ls
cd ..
nano
man <string>
git push origin
cd ..
cd <string>
ls
clear
git add <string>
git diff
docker-compose up -d --build
sudo usermod -aG <string> <string>
git status
zeus.polsl.gliwice.pl - <number>
ls
wget <URL>
sudo apk add <string>
cd <directory>
exit
npm install <string>
mv <string>
ls
git remote add origin <URL>
htop
ls
sudo apt-get -y <string> <string>
git pull
cd <string>
ls
git commit -m <string>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
vim <file>
git submodule update --init --recursive\
clear
cd <directory>
sh <file>
ls -l
setg RHOSTS.*
cd <string>
cd <directory>
sudo swapoff -a
ls
ls
grep <string>
go get -u <directory>
cd
fg
clear
vi <file>
grep -v <string>
ls -la
git pull
ls
ls
pwd
git clone <URL>
vim <file>
cd <string>
rmdir <string>
sed -i -- <directory>
psql -h <string> -p <string> -U <string>
git commit --help
less <string>
ls
scp <string>
git checkout master
cd <directory>
vim <file>
fg
vim <file>
ls
cat <string>
cd <string>
su - <string>
git add .
fg
cd <string>
ls
sudo git add -u
grep -i <string> >files
ls
cd <directory>
git pull
ls
git status
cp -r <directory>
git pull
ls
ls
kill -9 <number>
killall -SIGUSR1 <string>
cd <string>
git add .
sudo apt-get -f <string>
ls g++ -l
rm -f <string>
git commit -m <string>
ls
ls
cd <directory>
read -rp <string> <string>
cd <string>
npm run dev
mv <string>
ls
npm run dev
python3 <file>
source <file>
cd <string>
code .
cd <string>
ls -al
sudo ufw enable
cd <string>
rm -rf <string>
print <string>
read -r <string>
clear
auto-apt -y <string>
ls
docker-compose logs
cd ..
ls
vi <file>
ls
ls
sudo yum update -y
cd ..
python3 <file>
bash <file>
vim
npm config set <string>
cd ..
clear
sed -n <string>
cp <string>
service <string>
time go run <file>
cd
vi <file>
cd <string>
ls -ald <string>
git reset --hard <string>
ls
mkdir <string>
rm -rf <string>
git branch
apt install <string>
mv <string>
brew install <string>
ssh dirlic@10.18.0.39 -p <number>
head -y <file>
ssh <string>
apt install <string>
git stash
cd <directory>
node
exit
done
git commit -m <string>
ls
cd <string>
cd <string>
sudo userdel bob
xrandr -q
sudo aptitude install <string>
git merge --allow-unrelated-history <directory>
cd <directory>
vim <file>
ls
sudo su
sudo apt-get install <string>
vim <file>
git add .
cd ..
vim
git clone <URL>
exit
mkdir <string>
ls
docker run <string>
su - <string>
ls
ls -lah
ls
sudo sed -i -e <string>
cd <directory>
ls
exit
cd ..
clear
wget <URL>
rm -rf <string>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
git init
cd <directory>
cd <directory>
nano <file>
chmod <number> <string>
ls
clear
curl -sL <URL>
exit
chmod <string>
npm run test
ls -la
sudo php <string>
cd <directory>
tmux
git status
ls -la
cd <string>
grep <string> -R <directory>
cd ..
sudo mkdir -p <directory>
rm -f <string>
git pull
git
rm <string>
bash
sudo apt-get --yes --force-yes <string> git <string>
rm -f <string>
git remote remove origin
ls -la
git push
ls
ls -l
vim <file>
curl <string>
cat <string>
mkdir <string>
sudo ln -s <directory>
ls
git push
sudo xbps-install -Sun
ls
rm -f -- <string>
cd ..
fg
python3 <file>
ls
ls
dpkg --get-selections <string> <file>
git commit -m <string>
then\
sh
git checkout <string>
git commit -m <string>
ls
ls -l
git fetch
docker image rm -f <string>
vim <file>
clear
rm <string>
cd <directory>
git status
ls
cd..
cd <directory>
git config <file> <file>
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git add .
top
ls
sudo fdisk -l
git init .
cd <string>
sudo nvim <directory>
sort -k <number> -n
cd <directory>
find . -type <string> -name <string>
cd <string>
source <string>
sudo kill -9 <number>
mv <string>
ping <string>
tmux source <file>
dpkg --status
git checkout <string>
cat <string>
ls
ls
ls
cd <string>
git commit -m <string>
cd <string>
ls
rm -ri <string>
ls
ls
df
sudo apt-get -y <string> <string>
wget -O <file>
nano <string>
rm -rf <string>
find . -empty -type <string> -print -delete
git pull origin main
sudo vim <file>
fg
clear
exit
cd ..
npm run start
sudo apt-get install <string>
vim <file>
ls
cd <directory>
ls
touch <string>
sudo pacman -Ss <string>
cd ..
vi <file>
wc -l
npm run bench -- -c <file> -n <file>
ls
sudo rm -R <string>
vim <file>
ls -l
fg
read -p <string>
touch <string>
python3 <file>
rm -f <string>
pwd
ls
rm -R <string>
git commit
ls
pkill <string>
git status
cd <string>
cd ..
cd <string>
git commit -m <string>
cd <directory>
dpkg -l
docker ps
exit
cd <directory>
sudo crontab -e
grep <string>
ls
vim
vim <file>
egrep <string>
git status
ls
ls
pico <file>
rm <string>
git for-each-ref --format=<string> <directory>
chmod +x <string>
ls
cd ..
clear
sudo dnf install <string>
git add <string>
git add <string>
ls
tmux ls
cd
rm <string>
ls
git init
grep <string>
vim <file>
git pull
wget <URL>
read -r -d <string> <string>
apt-get install <string>
cd ..
vi <file>
tmux kill-session -t <string>
reboot
ls
npm install
unset color_prompt force_color_prompt
vi <file>
stat <file>
chmod +x <string>
vi <file>
ls
vim
sleep <string>
ls
cp -r <directory>
ps -e
pacman -S <string>
tmux
yarn add <string>
cd ..
ip route <string>
rm -rf <string>
read -s -n <number>
grep -R <string>
ls
clear
cd <directory>
sed -i <string>
cat <string>
cd <string>
exit
ls
ls
source <string>
vim <file>
cd
git add .
ls
cat <string>
docker stop boost
sudo sed -i <directory> <file>
git commit -m <string>
rm <string>
cd <string>
exit
git add .
ls
git commit -m <string>
ls
cd <string>
codedown javascript
ls
python3 <file>
LANG=<string> rpm -qp --queryformat <string>
cd ..
sudo setfacl -m <string>
vim <file>
w
vi <file>
cd <string>
head -n <string>
cd <string>
git commit -m <string>
pwd
exit
sort
env
sudo mknod <directory>
less <string>
cd ..
docker exec -it <string> bash
git branch
mkdir <string>
sudo aptitude install <string>
vim <file>
npm install
cd <directory>
clear
done
cd <string>
ls
ls
vim <file>
read -r <string>
chmod <number> <string>
ls -ltr
ping <string>
ls
kill -9 <number>
sed -e <directory> -e <directory>
htop
python <file> runserver 0.0.0.0:2016
apt install <string>
ls
ls
ls
git diff
ls
git pull
ls
type <string>
git commit -C <string> --no-verify
sudo -E <string> -
ls -la <directory>
rm -rf <string>
tar -zxvf <file>
ls
rm -v <file>
sudo apt-get install <string>
git push -u <string> detail
ls
vim <file>
mkdir <string>
cd ..
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
sudo service nginx restart
ls
rm -rf <string>
vim <file>
clear
git init
nano <string>
vim <file>
git pull
ssh dirlic@10.18.0.39 -p <number>
apt-get upgrade
sleep <number>
sudo sed -i <directory>
bash
git commit -m <string>
ls
git commit -m <string>
cd <string>
grep -rE <string>
git commit
find . -name <file>
ls
ls
ls
exit
rm <string>
ls -la
cp <string>
git push
apt-get install <string>
grep <string>
git commit -m <string>
rm -rf <string>
code .
cd -
curl <string>
ls
ls -a
ls -la <directory>
grep -v <string>
git add .
cd <directory>
cd ..
cd <string>
sudo python3 <file>
git add .
cat <string>
cp <string>
cat <string>
vim <file>
vi <file>
git cat-file -p <string>
git pull
top
ls
cd <directory>
cp -r <directory>
ls
sudo docker kill corrade
sudo su
sudo udevadm trigger
chmod +x <string>
clear
sudo ip route add <string>
fg
ls
sudo apt-get install <string>
sudo systemctl start <string>
ps axfu
curl <string>
git commit -m <string>
grep --quiet <string>
clear
npm run bench -- -c <file> -n <file>
else\
vim <file>
cd ..
sudo tee <directory>
cd <directory>
find . -mtime -7 -type <string>
git pull origin master
sudo python3 <file>
git push --set-upstream <string> master
awk -F <string>
vi <file>
ssh reptilian@$REP_IP -t <string>
cd <string>
git add <string>
ls
source <file>
vi <file>
cat <string>
wget <URL>
vim <file>
script/build.sh
dir
git status
git pull
ls
ls
git config --global <file> <file>
local -a <string>
git restore --staged <string>
hostname -f
clear
journalctl
clear
cd ..
git clone <URL>
mv <string>
git status
sudo python <file> --cascade=<file> <number>
cat <string>
vim <file>
fg
rm <string>
git config --global <file> <file>
ls
ls # lists your files in current directory, ls <dir> to print files in a specific directory
git clone <URL>
git filter-branch --index-filter <string> HEAD
sudo -H <string> install <string>
rm -rf <string>
ls
clear
ls -ltr
ls
ls
done\
kill -HUP <string>
ls
ls
ls
ls
source <string>
vim
git push
vim
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
sudo snap install --classic <string>
tr
fg
ls -l
ls -lah
cd <string>
wget <URL>
ls
git tag <string>
git rm --cached <string>
ls -al
printf <string>
ls
npm install
ls
ls -la
cd <string>
ls
git diff
setg RHOSTS <file>
sudo docker ps -a
read -r -p <string>
git add <string>
cd <directory>
sleep <number>
su deployer -c <string>
ls
vim -Wall
clear
ls
cd <string>
vim
byobu-tmux
htop
cd
npm init
ls -l
cd <string>
ls
ls
ls
git push
fg
screen -r <string>
sudo su
git add .
sudo apt install --upgrade <string>
mkdir <string>
git checkout master
git push
ls
cd
sudo lsof -i <string>
cd <string>
sudo apt install <string>
cat <string>
git init
ls -altr
git branch -M <string>
vim <file>
ls
vim <file>
git commit -m <string>
ping <string>
clear
ls
cd <string>
clear
rm -rf <string>
grep -i <string> >files
git add .
apt-get -y -qq <string> <string>
git commit -m <string>
git commit -m <string>
rm -f <string>
git add <string>
chmod <number> <string>
touch <file>
git remote add origin <URL>
git diff <string>
cd <string>
npm install
cd <directory>
ls
vim <file>
top
yarn install
ls
cd ..
cd
sudo mount <directory>
free -h
reset
journalctl -xeu <file>
ls
clear
vim <file>
git add .
curl -i -H <directory> -H <string> -X <string> -d <string>
ls
sudo dnf install -y <string>
git add <string>
git checkout --track <directory>
node
git commit --allow-empty -m <string>
git add <string>
rg <string>
wget -cqO <string>
git clone <URL>
rmdir <string>
cd <string>
grep <string>
vi <file>
install <string>
git status
df -lh
ls
telnet <string>
sed -i <directory>
grep -r <string>
ls
git clone <URL>
cd ..
cd <string>
sed -i <directory>
git push
cd <string>
rm -r <string>
git add --verbose
ls -la <directory>
git status
sudo apt-get install <string>
git commit -m <string>
wget <URL> -O <file>
cd <string>
sudo pacman -U <file>
cd <directory>
mv <string>
docker-compose up -d --build
clear
sudo apt-get install <string>
exit
cd <directory>
cd <string>
fg
git reflog expire --all
xrandr
clear
chmod +x <string>
ls
ls
git commit -am <string>
cd <directory>
systemctl stop docker
git add -A
chmod <number> <string>
service apache2 restart
ls
git add <string>
ls
cat <string>
sudo apt install <string>
ls
cd <directory>
ls
cd <string>
curl <string>
ls
cd <directory>
cd <directory>
git commit -m <string>
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
git log
rm -f <string>
pwd
cd ..
chmod -x
exit
ls
npx <string>
vim <file>
ssh <string>
ls
cd <string>
grep -n <string> <directory>
cd <string>
clear
clear
cd ..
rm -rf <string>
ls
fg
cd <directory>
cd
curl -k <URL>
ls -lah
rm -rf <string>
cd ..
rm -rf <string>
cd ..
git status
ls
fg
git commit
ls
cd <string>
git checkout -b <string>
fg
vim <file>
openssl zlib -d -in <directory>
cd <directory>
vim <file>
docker rmi -f
git add .
ls
ls
sudo apt install <string>
ls
clear
grep -i <string>
npm install --global <string>
ls
cat <string>
git remote add origin <URL>
git commit
sudo apt-get update
sh
git fetch
wget -r <URL>
exit <number>
rm -f <string>
git clone <URL>
cat <string>
sed -e <directory>
gsettings set <file> <string>
vim <file>
ls
mkdir <string>
rm -rf <string>
brew install <string>
exit
sudo apt-get install <string>
sudo apt upgrade -y
vi <file>
cd
git remote add origin <URL>
find . -name <file> -type <string> -print -delete
ls
cd <directory>
lsblk
curl <string>
systemctl stop <string>
ls
cd
ls
touch <string>
apt-cache search <string>
pwd
apt-get upgrade -y
git push
wget
touch <string>
git push
sudo rm -rf <string>
touch <file>
ls
ls
git add .
vi <file>
git
sudo apt remove gnome-online-accounts -y
clear
cd ..
git fetch
ls
git commit -m <string>
ls
clear
git diff <string>
git init
ls
ls
ls
git clone <URL>
python3 <file>
bash
ls
git commit -m <string>
touch <string>
ls -lah
exit
cd <string>
git commit -m <string>
chmod u+x <string>
git branch 2> <directory>
exit
sudo chown -R <string>
ls
git push
sudo apt-get install -y <string>
sudo rm -rf <string>
mkdir <string>
cd
git add .
vim <file>
rmdir <string>
git pull
cd <string>
ls
python3 -m <string>
ls
source <string>
cd <directory>
git commit -m <string>
sudo sed -i <directory> <file>
cd <string>
ls
sudo apt install <string>
sudo docker exec -it <string>
sudo apt-get install -y <string>
vi <file>
sudo docker kill corrade
cat <string>
ls
ls
fg
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git branch -M <string>
cd <directory>
ls -l --a
ls
cp -r <directory>
sudo wget <URL>
ls
ls
vi <file>
git push -u <string> main
python <file> runserver 0.0.0.0:2016
git add .
exit
node <file>
head -n <number>
ls
cd
git commit -m -a <string>
ls
sudo apt-get install <string>
sudo systemctl stop <string>
git fetch
git status
cd
ls
ls
ssh <string>
git checkout <string>
python3 <file>
exit
sudo mv <string>
cd <directory>
cd
clear
cd ..
ps -a
screen -X -S <string>
history
sudo apt-get autoremove <string>
rm -rf <string>
sudo rm -f <directory>
ls
git commit -m <string>
cd <string>
cd <string>
ls
cd <directory>
tar -cvf <string>
rm -f <string>
apt update
git push origin master
cp <string>
ls
ls
which <string>
sudo openvpn --config <directory>
ls
ls
apt
clear
ls
grep -w <string>
curl -sSfL <URL>
git push -u <string> master
clear
cd ..
git push
ls
ls
sudo nano <directory>
clear
git git --help
cd ..
ls
ln -s <string>
fc-cache -vf <string>
find . -size <string>
rm -f <string>
cp -r <directory>
git log
ls
vim <file>
git clone <URL>
cp <string>
git checkout <string>
docker cp <string>
mv <string>
git branch -m <string>
vim <file>
docker exec -it <string> bash
tail -n <string>
set
rm <string>
ls
sudo install <string>
sudo apt purge <string>
ls
python3 <file>
ls
ls
sudo pacman -Syyu <string>
python3 <file>
git add .
npm run start
python3 <file>
alias <string>
git add .
git init
mkdir <string>
wget -nd -m -nv <URL>
cd <string>
wget -q -O - <URL>
clear
sudo -i
ls
sudo pacman -R <string>
clear
ls
git add .
cd <string>
git remote add origin <URL>
ls
exit
ls -la
sudo ufw allow <string>
rm -r <string>
find . -name <string> -prune -o -print
git commit -m <string>
curl <string>
ps -aux
ls
vi <file>
exit
cd <string>
git commit -m <string>
ls
cd <directory>
git status
git log
git co -- <string>
git commit --allow-empty -m <string>
fg
git pull
chmod <number> <string>
sudo xbps-instalL -S
git push
chown -R <string>
cd <string>
wget -O <file>
apt-get install libsqlite3-dev -y
ls
ls
wc -l
systemctl stop docker
clear
npm config set <string>
cd <string>
rm <string>
exit
ps -auxwf
ls
top
git status
git checkout master
done
less <string>
clear
ssh dirlic@10.18.0.39 -p <number>
git checkout <string>
ssh <string>
sh
git push origin main
ls -altr
sudo python <file>
cp <string>
bash
git commit -m <string>
ls
clear
exit
sudo apt-get update
cd <string>
git remote add origin <URL>
npm install --save-dev <string>
ls
exit <number>
grep -ohr -E <string>
npm test
cp <string>
vim <file>
git reset <string>
ls
ls
rm <string>
git branch main
grep -v <string>
tmux new-session -d <string>
sudo sed -i <directory> <file>
ls
unset <string>
cd <directory>
cat <string>
fg
ls
rm -rf <string>
cd
cd <string>
curl -i -s <URL>
fg
vi <file>
sudo setfacl -R -m <string>
clear
ls
ssh -T <file>
git commit -m <string>
date
vi <file>
sudo ifconfig <string>
ls
cd <string>
exit <number>
python3 <file>
cd
clear
cd <string>
ls
top
ls
ls
git add .
git config --list
du -h
git rebase <string>
cd <string>
docker container ls --all
git diff
cd
vim <file>
clear
dirname <directory>
ls
fg
cd ..
set
git add .
sudo usermod -aG <string> $USER
exit
cd <string>
exit <number>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
unset color_prompt force_color_prompt
git help -a
sudo sed -i <directory>
cd <string>
ls
git init
ls
cd <string>
cd
ls
git remote add origin <URL>
find . -name <file>
ls
cd <string>
cd <string>
ls
mv <string>
mv <string>
sudo kill -9 <number>
cp <string>
vim <file>
wget -O- <URL>
ls
git bisect good
rm -rf <string>
ps ux
xrandr --listmonitors
uniq
python3 <file>
exit
cd <string>
ls
read -rp <string> <string>
unset color_prompt force_color_prompt
sudo snap install <string>
mv <string>
clear
cd <directory>
ls
exit
wget -nd -m -nv <URL>
exit
pwd
ping <string>
git commit -m <string>
sed <directory>
ls
vim <file>
cd <string>
git clone <URL>
cat <string>
ls
fg
ls
cd ..
cd <string>
rm -rf <string>
ls
vi <file>
find <directory> -type <string> -name <string>
git config --global <file>
vim <file>
ls
sudo git push <string>
mvn install -D <string>
cp <string>
exit <number>
ls
ls
sed -i <directory>
nano <file>
sudo apt install -y <string>
git commit -m <string>
clear
cat <string>
cd ..
git add -p <string>
rm -rf <string>
git clone <URL>
exit
cd
ls -a
npm run start
sudo poweroff
grep <string>
chmod u+x <string>
cd <string>
mv <string>
cat <string>
cd <directory>
git branch
git clone <URL>
sudo nano <file>
npm i
uniq
cd ..
git status
git pull
ls
find $dir -type <string>
reboot -f
git merge
sudo apt install <string>
exit
vim <file>
git status
vi <file>
wget <URL>
ls
ls
sudo apt -y <string>
sudo nano <directory>
git merge <string>
cd <string>
cat <string>
cd <directory>
cd <directory>
sudo apt update
git status
sudo sed -i <directory> <file>
mkdir <string>
ls
sudo iptables -t <string> -A <string> -m <string> --cgroup <string> -j <string>
grep -E <string>
find . -type <string> -name <string>
eval <string>
cp <string>
python3
cd <string>
apt-get update
cd <string>
npm i <string>
let <string>
git add .
git commit -m <string>
ls
ls
ls
ls
find . -name <file> -exec <string>
cd <string>
rm <string>
vim <file>
wc -l
ls
mv <string>
cd <string>
which <string>
sudo add-apt-repository <string>
ls
ls
sudo rm -r <string>
ls
vim <file>
sudo sed -i <directory>
git branch -M <string>
done
sh <file>
ls
read -p <string>
ls
git status
cd ..
cd ..
tmux a -t'attributes'
git add .
python3 <file>
mv <string>
git co -b <string>
apt-get update
cd ..
sudo apt-get update\
ls
read
ls
fg
cp <string>
ls
xargs -L1 --no-run-if-empty <string>
vim <file>
wget -qO- <URL>
lsblk
exit
git checkout <string>
export <string>
git status
code .
cd <directory>
cd <string>
else\
cd <directory>
cd <string>
npx shadcn-ui@latest add <string>
cd <directory>
fg
sudo vim <file>
nano <string>
cp <string>
ls -alrt <string>
ls
ps aux
cd <string>
git branch -D <string>
vim <file>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
ls -la
bash
sudo reboot now
grep -r <string>
cut -d"=<string> -f2)
clear
vi <file>
yarn --version
git init
sudo pip install <string>
git status . <string>
ls
vi <file>
git clone <URL>
ls
exit <number>
exit <number>
ls
exit <number>
vim <file>
git push -u <string> main
ls -l
clear
vi <file>
cd <string>
ls
cd ..
vi <file>
ls
git ls-files <string>
git commit
usermod -G <string>
clear
head -n <string>
ssh-copy-id -i <string>
exit
pwd
exit
rm <string>
docker stop <string>
cd ..
ls
cd <string>
cd <string>
git revert <string>
clear
ls
git -b
git add .
exit
cd <string>
clear
ls
ssh-keygen -t <string> -b <number> -C <file>
cd <directory>
less <string>
mkdir <string>
exit <number>
rm -rf <string>
gsettings set <file> <string>
python3 <file>
npm install grunt-contrib-watch --save-dev
sort -n -r
sudo luarocks install <string>
git push
which <string>
clear
exit
ls
python3.11 <file>
git add <string>
clear
python3 <file>
fg
screen -r <string>
ls
git add -all
git pull
vim <file>
sudo sgdisk -d <number>
ls
cd <directory>
which <string>
sudo apk add <string>
sort -k1nr
sed --in-place <string>
git clone <URL>
git status
ls
git commit -m <string>
ls
cd ..
mv <string>
git add <string>
cd <string>
ls
python3 <file>
ls
git st
fg
sudo <directory> <string>
git push origin master
sudo prime-select nvidia
git push
ls
sudo <directory> -s <file>
cd <string>
ls
fg
code .
exit <number>
exit
vim <file>
unset <string>
du
sed <directory>
ls
ls
ls
cd <string>
ls -all <directory>
cd <string>
sudo zypper install <string>
ls
cd <string>
git branch -M <string>
ls -la <directory>
find . -maxdepth <number> -regextype <string> -regex <string> -type <string>
git push origin main
date
cd ..
bash
ls
git commit -m <string>
git clone <URL>
file <string>
ls
sudo yum install -y <string>
ls -R
sort > <file>
git branch -M <string>
vim <file>
rm -f <string>
cd <string>
ls
cd <string>
ls
xrandr --listmonitors
ls
git log
sudo sed -i <directory> <file>
python3 <file>
git commit -am <string>
git remote update <string>
git branch -m <string>
exit
find . -empty -type <string> -print -delete
cd <directory>
reboot
pwd
cd <string>
git add .
cd ..
curl -sSL <URL>
pkill <string>
git add --all
sudo sed -i <directory> <file>
clear
sudo sh
ls
sudo apt install -y <string>
vim
exit
grep
sudo mv <string>
git pull
cd
git status
sudo apt upgrade -y
git rebase mvc-start~ -i
ls -la
ls
touch <file>
cd <directory>
ls
clear
ls --help
sleep <number>
ls
top
ls
dir
ls
cd <string>
find
systemctl status <string>
git commit -m <string>
git remote add origin <URL>
vim <file>
ls
docker login
unzip <file>
curl -sl <URL>
git add .
npm i <string>
setg RHOSTS.*
ls
git push
vi <file>
cat <string>
git status
ls -ltr
exit <number>
git add .
sudo zypper se <string>
ls
git commit -m <string>
cd <directory>
ls
docker stop <string>
vi <file>
git commit -m <string>
git init
sudo snap install pycharm-community --classic
ls
vim
sudo netstat -tulpn
sudo nano <directory>
cd <string>
clear
node <file>
exit <number>
ls
git add <string>
git commit
kill <number>
grep <string>
grep -i <string>
mkdir <string>
sudo apt install <string>
clear
export <string>
cd <string>
cd ..
ls
clear
sudo apt-get install <string>
du
wget -O <file>
sudo apt-get update
cd <string>
vim
rm -rf <string>
git config --global --list
ssh dirlic@10.18.0.39 -p <number>
git branch --no-color <string> <directory>
vim <file>
git push origin
cat <string>
man
sudo nano <file>
cat <string>
mv <string>
ping <string>
sudo nano <file>
sudo update-alternatives --config <string>
which <string>
ls
ls
codedown javascript > <file>
kubectl port-forward --namespace <string>
ls
cd <string>
rm -f <string>
git commit -m <string>
clear
kill -9 <number>
npm update
git commit -m <string>
git add
cd <directory>
less <string>
source <file>
clear
cd ..
ls
docker run -d -p <string>
git pull
cd <directory>
git branch
git pull
npm run devstart
ls
cd <directory>
ping <string>
cd <string>
exit <number>
cd <string>
cat <string>
sudo dmidecode -t <number>
git remote -v
ls
sort -nr
cat
cd <string>
read <string>
git config --global <file> <string>
cd <string>
vim
sed <directory>
local <string>
rm <string>
cd <directory>
rm -r <string>
ps -ef
cd ..
<directory> <string>
cat <string>
cd ..
cd ..
find -maxdepth <number>
fg
clear
git revert <string>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
git push -u <string> master
ls
ls
sudo sed -i -e <string>
ls
vim <file>
sed -i <directory>
sh
ls
curl -sL <URL> -o <file>
ls -Al
git add .
cd ..
npm --v
ls
less <string>
ls
read -p <string>
clear
cd <directory>
cd <directory>
<file> <file>
python3 <file>
git add .
ps -auxwf
cd <directory>
ssh dirlic@10.18.0.39 -p <number>
python3 <file>
adduser arjun
ls
npm i sass -D
df
npm start
ls
npx <string>
tmux a
ls
tr <string>
cd <directory>
kubectl --namespace <string>
cd <string>
ls
ls
apt-get update
cd
ls
cd
git checkout <string>
git config --add <file>
rm -rf <string>
nano <file>
ls -al --color
ls
git remote add origin <URL>
ls
cd <directory>
git checkout -b <string>
ls
ls
cd <string>
ls -alrt
sed -i <string>
git init
clear
cd <string>
git add <string>
cd ..
git push -u <string> master
vi <file>
ps -u <string> # lists your processes
ls
vi <file>
ls
git add <string>
sudo certbot --nginx -d <file>
git commit
fg
touch <string>
cp <string>
ps -ae
sudo python <file>
docker images
unzip <file> -d <string>
fg
nano <file>
clear
ls -la
mv <string>
npm install
vi <file>
vi <file>
sudo apt-get install --reinstall <string>
cd <string>
git checkout master
sudo sed -i <directory> <file>
cd <string>
date
less <string>
fg
cd ..
code .
exit <number>
cd <directory>
sudo passwd <string>
exit
cd <string>
vim <file>
cd ..
git add .
git clone <URL>
read <string>
git pull origin master
wget <URL> -O-
nice <string>
cd <string>
ls -a
git status
nano <string>
ls
docker push <directory>
ls
cd <string>
sed -i <directory>
git add .
head
npm install --save-dev <string>
timedatectl <string>
cd <string>
cd <directory>
open <string>
cat <string>
zgrep -R -i <string>
tee -a <string>
ls
rm -rf <string>
ls
ps ux
ls
shutdown -h <string>
ls
ls -lt
sudo dnf install <string>
git reset --hard
cd <string>
cd ..
ls
git init
nano <file>
vim <file>
ls
git rm --cached -r <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git add <string>
vim <file>
cd <directory>
tmux
mkdir <string>
ls
vim <file>
git commit -m <string>
print <string>
git diff
touch <string>
source <file>
cd <string>
ls -la
vim <file>
git commit -m <string>
clear
exit
source <file>
mv <string>
clear
git init
sudo sed -i <directory>
ls
npm start
cd <string>
sudo ip route <string>
sudo docker exec -it <string>
time <string>
docker-compose up -d --build
git status
clear
ls
wget -q <URL> -O <file>
man -k <string>
cd ..
ls
ls
exit
sleep <string>
sudo systemctl start <string>
ls
chmod <number> <string>
ls
cd <directory>
cd ..
vi <file>
npm run dev
sudo poweroff
grep -oE <string>
ls
clear
sudo poweroff
clear
cd <string>
git commit -m <string>
grep <string>
ip a
git push -um <string>
sudo su
read -r <string>
chown <string>
ls
cd
vim <file>
vim <file>
mkdir <string>
ls
ls
fg
grep * -e <string>
python3 <file>
exit
sudo systemctl enable <string>
git commit --amend
vim <file>
sed -i <string>
ls
git commit -m"update"
tail <file> -n <number>
git config --global <file> <string>
exit
cd <string>
cp -v <string> <directory>
touch <string>
git checkout <string>
find . -name <file>
git add.
curl <string>
cd <string>
ls
ls
ls
sudo apt-get install <string>
git add .
exit <number>
ls
pwd
ls
ls
vim <file>
sudo pacman -S <string>
ls -l
cd
top
python3 <file>
git rm <string>
sudo nano <directory>
ls
clear
cat <string>
sudo git clone <URL>
cd <directory>
git branch
ls
zcat <file>
git push
sudo rm -rf <string>
host <string>
sudo make install
wget -O <file>
cd <directory>
sudo nano <string>
cd <directory>
time <string>
sort -u
cd ..
then
git remove <string>
cd <directory>
npm start
sudo apt-get update
git init
cd ..
touch <file>
clear
clear
cd <string>
cd <string>
true
LANG=<string> rpm -qp --queryformat <string>
npm init -f -y
sudo docker info
clear
ls
ls++ -a
mvn compile
npm start
vim <file>
cd ..
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
exit
fg
cd <string>
cd <directory>
ls
git branch
<file> - <number>
rm -fr -- <string>
nano <file>
git fetch --all
sudo chown <string>
git status
cd
apt install -y <string>
cd ..
xcode-select --install
ls
git add <string>
git add <string>
python3 -m <string> install --upgrade <string>
git status
code .
git log --all --graph --decorate --name-status <string>
git add <string>
sed -n <string>
vim --not-a-term <string>
ls -la
git add -v --dry-run <string>
git push
wget <URL> -O -
exit
git clone <URL>
mkdir <string>
cd <string>
ls
chmod <string>
cd ..
ls
du -sh <directory>
git branch
cd <directory>
which <string>
git clone <URL>
git status
ls
git pull
xargs -0 <string> <string>
ls++ -a
git config --global <file>
cd ..
git push
cd ..
git config <file> <string>
git reset --hard <string>
history
exit
source <file>
sudo apt-get purge <string>
exit <number>
git pull origin master
clear
ls
nano <string>
sudo apt install <string>
git log
ps -ef
git add .
vim <file>
ls
git checkout <string>
clear
touch <string>
ls
cd <string>
git clone --depth <number> <URL>
ls
cd <string>
cd <string>
ssh <string>
npm run dev
vi <file>
vim <file>
cd <directory>
touch <file>
ls
ls
exit
mkdir -p <string>
clear
df
npm install
cp -r <directory>
git status
nano <file>
ls
source <file>
sudo chmod <number> <string>
man <string>
clear
gsettings set <file> <string>
find . -empty -type <string> -print -delete
git status
ps -ef
cd <string>
exit <number>
wget -4 <URL>
ls
git pull origin main
chmod u+x <string>
find . -type <string> -print0
ls
docker-compose up -d --build
vi <file>
ls
cd <string>
ls
cd <string>
cd <string>
ls
ls
python3 -m <string> venv
sudo apt upgrade
ls
sudo install -o <string> -g <string> -m <number>
cd <string>
zcat <file>
git pull
ls
ls
ls
ls
vim <file>
ls
ls
cd <string>
ls
cd <string>
git stash
cd <string>
cd ..
sudo apt install <string>
fg
ls
cd <string>
cd <string>
npm -v
sudo yum <string>
rm <string>
ls
git add <string>
npm run bench -- -c <file> -n <file>
cd
cd <string>
ls
fg
read <string>
cd
vim <file>
clear
fg
ls
sudo yum install -y <string>
sudo sed -i <directory>
clear
npm install <string>
ls
cd ..
du -skh <string>
su
exit <number>
curl -L <string> -o <file>
rm -f <string>
code <string>
cd <string>
sudo nvpmodel -q
then
npm init -y
git add <string>
git commit -m <string>
cd ..
sudo apt update
fg
cat <string>
exit <number>
git clone <URL>
cd <string>
ls
cd
ls -la
rm <string>
vim <file>
ls
cat <string>
rvm <string>
cd <string>
ls
git add <string>
ls
rm <string>
cd <string>
git config --global <file> <file>
clear
ls
ls
exit
cd <string>
mkdir <string>
cat <string>
touch <file>
ln -sf <directory>
docker-compose up -d --build
git add <string>
git add -m.
git push
sudo pacman -Scc --noconfirm
ls
cd <string>
git add .
cd
git status
gpg --export --armor -vvv --output <string>
sudo flatpak update
fg
git tag <string>
node
do\
ls
ls
sudo certbot --nginx -d <file> -d <file> -d <file>
wget <URL>
ls
cd ..
cd <string>
sudo apt install <string>
sudo chown <string>
dpkg-query
git
rm <string>
cd ..
ls
ls
git commit --amend --reset-author
sudo git push -u <string>
cd <string>
git add .
git checkout master
sudo dd <string>
cp <string>
sudo zypper <string>
find . -maxdepth <number> -name <string> -type <string>
sleep <number>
exit
read <string>
composer install --no-dev <string>
rm <string>
htop
telnet <string>
sudo sed -i <directory>
cd <string>
sudo apt install <string>
sort
grep <string>
git commit -m <string>
git add <string>
unset color_prompt force_color_prompt
bash
sudo start uwsgi
<directory> <string>
vi <file>
docker ps
ls
git pull
ls
rm <string>
set
exit
sed <directory>
sudo apt -y <string> <string>
clear
clear
sudo apt-get remove --auto-remove <string>
mv <string>
ls
sudo pip install <string>
more <file>
open .
git clone <URL>
curl <string>
ls
git push
ls
git rebase -i <string>
sudo mv <file>
sudo apt-get update
rm -r <string>
sleep <number>
ls
ls
ls
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
git push -u <string> master
cd <string>
vim <file>
sudo apt-get install <string>
cd ..
curl -l
cd <string>
ls
shutdown -h <string>
ls
sudo sed -i <directory> <file>
git fetch origin\
grep <string>
cd <string>
sudo make
git remote add origin <URL>
git status
mkdir <string>
npm run dev
vim <file>
git add <string>
git commit -m <string>
git add .
cd <string>
fg
ls
vim <file>
sudo nano <directory>
code .
cd <directory>
curl -X <string> -H <directory> -d <string>
ls
git pull
read -sp <string>
ls -lh
nano <file>
source <directory>
find . -empty -type <string> -print -delete
cd <string>
vim <file>
cd <string>
uniq
docker-compose down
cd <string>
git fetch origin\
cd <string>
ls
fg
ls
git add <string>
ln -s <string>
ls -lt
git pull
export <string>
git status
exit
ls
vim <file>
chmod <string>
date
cd <string>
ls
cd <string>
ls -a
ls
cat <string>
wget -O <file>
fg
sudo systemctl start <string>
sed -e <directory>
npm install
ls
npm install
sudo sh <file>
cd ..
vi <file>
df -h
pwd
git pull
git checkout <string>
cp <string>
git ls-remote
ssh-add
cd <string>
sudo dnf install <string>
ls
git config --global <file>
mv <string>
ssh <string>
git branch
chmod u+x <string>
mv <string>
rm -f <string>
unset color_prompt force_color_prompt
man -k <string>
rmdir <string>
cd ..
clear
rm <string>
cd ..
sed -i <string>
cd <string>
git push
cd <string>
man -k
cp -a <string>
more <file>
exit
grep <string>
find . -empty -type <string> -print -delete
cat -v <string>
ls
vim <file>
git fetch
do\
sudo apt-get install <string>
sudo ufw allow <string>
cd <string>
cd -
ls
git log --oneline --graph --all
egrep <string>
bash
sudo su
grep <string>
ls
sudo service nginx reload
cd <string>
cd <directory>
bash --login
git checkout <string>
ls
cd <directory>
git add .
rm <string>
git remote add origin <URL>
cp -r <directory>
cd <string>
ls
clear
cd <string>
cd <directory>
rm <string>
vi <file>
xrandr -d <string> --output <string> --auto
then\
code .
sudo python <file> --cascade=<file> <number>
journalctl -qb <directory>
git clone <URL>
more <file>
kubectl get <string>
ls
ls
ls
localectl <string>
rm -rf <string>
ls
cd <directory>
apt-get -y <string> <string>
ps
sudo mv <string>
export <string>
cd <string>
cat <string>
git branch -d <string>
cd <string>
npm install react-native-actionsheet --force
ls
vim <file>
git status
mkdir -p <string>
mkdir <string>
cd <directory>
cd ..
cd <directory>
git stash
git remote add origin <URL>
pwd
cd
head -n1\
git add <string>
sudo ip route add <string>
sudo strace cat <directory>
exit <number>
ls
cd <directory>
man <string>
cp -r <directory>
git commit -m <string>
ls --all
sudo apt-get install <string>
vim <file>
ls
sort -g
ls
git fetch origin <string>
vim <file>
ls
set <string>
git init
wget <URL>
git diff --no-ext-diff --quiet --exit-code
git reset <string>
git commit -m <string>
npm install react-native-actions-sheet --force
cd <string>
tmux
clear
clear
ls
sudo docker kill corrade
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
clear
pacman-key --init
find . -type <string> -exec <string> -p -- <directory>
cp <string>
ls
git log
clear
grep -i <string>
sed -i <string>
exit
clear
ls
git pull
do\
git status
mv <string>
ls
pwd
sh <file>
sudo apt-get update
unset <string>
git status
find . -name <file>
sudo <directory> <string>
rmdir <string>
read -r <string>
npm install
vim <file>
vi <file>
rm <string>
cd <directory>
ls
git filter-repo --path-glob <string> --invert-paths --force
find . -type <string> -name <string> -exec <string>
history -r
rm <string>
ls
cp <string>
hg <string>
python3 <file>
less <string>
clear
cd <string>
ls
git status
python <file> runserver 0.0.0.0:2016
git add .
ls
clear
ls
git add .
sudo dpkg -i <file>
ls
cd <string>
sudo python2 <file> --cascade=<file> <number>
cd <string>
git status
docker pull <string>
fg
ls
sudo chown -Rv <string>
git add .
cd <directory>
cd <string>
sudo apt-get update
vim <file>
docker exec -it -u <string>
git diff
reboot
rm -rf <string>
ls
nano <file>
cd <directory>
sed -i <directory>
ls
git commit -m <string>
python3 <file>
kill -9 <number>
clear
du -m <directory>
sudo chmod a+rx <directory>
sh
sudo bash -
exit <number>
git add <string>
exit
cd
ls
ls
bash <file>
source <string>
docker-compose up -d --build
git add .
find <directory> -iname <file> -type <string> -exec <string> -c <string>
mkdir <string>
sudo systemctl status <string>
ls
less
npm install <string>
vi <file>
sudo httrack --ext-depth=<number> <URL>
cd <directory>
ls
ls
git add <string>
python3 <file>
mv <string>
eval
mv <string>
docker-compose logs --follow <string>
ls
cd ..
git add .
uniq
cp -r <directory>
sudo apt update
git push -u <string> master
ls
cd <string>
fg
git clone <URL>
ls
fg
cd <string>
ss
ps aux
ls
clear
alias
ls
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
exit
sudo apt-get update
git log --graph
sudo vi <directory>
cd <string>
sudo yum install <string>
sudo apt-get --assume-yes <string> <string>
ls
ls
sudo nano <file>
df -h
git clone <URL>
git status
cd <string>
git commit -m <string>
sudo sed -i <directory> <file>
sudo nano <directory>
git branch -M <string>
clear
ls -al
ls
clear
git push -u <string> bryan-guner
sudo -s
cd <string>
git status
git status
vi <file>
brew services <string>
cat <string>
ls -lh
eval <string>
history
sudo -u <string> -s
git add .
ls
git co master <file>
git init
git status
sudo kill <number>
ls
npx create-react-app spotify-practice --template <string>
ls projects
nano <string>
sudo apt-get update
df -lh
git config --list
ls
git clone <URL>
git push
git commit
cd <string>
cd ..
mkdir -p <string>
git add <string>
read -rp <string> <string>
sudo apt-get update
clear
ls
<directory> <string>
sudo mkdir -p <directory>
cd <string>
cd <string>
find . -size <string> -exec <string> -f <string>
sudo lpadmin -x <string>
wget -q -O - <URL>
ls
ls
git remote add origin <URL>
grep <string>
python3 <file>
ls
sh <file>
git remote add origin <URL>
cd ..
egrep -Eio <string>
ls -la
python3 <file>
sudo apt update
docker-compose -f <string>
ls
cp -r <directory>
git verify-pack -v <file>
rm -rf <string>
tmux a
ls
ls
cd <string>
curl -G <directory>
docker-compose up -d --build
exit
curl <string> --output <directory>
passwd
git branch
cat <string>
bash
find . -name <string> -type <string>
git --version
cd <string>
fg
ssh <string>
cd
fg
mvn compile
ls
cd ..
fzf -m
s/:/ <directory>
cd <string>
find . -name <file>
git push
less <string>
git pull
cd ..
cat <string>
git status
fg
dir
apt-get update
python3 <file>
npm run prod
vim <file>
find $dir -type <string> -exec <string> -k <string>
<directory> <string>
cd <string>
npm-recursive-install
git status
fg
cd <string>
awk <string>
wget <URL> --no-check-certificate
git push origin PTS-578_redirects_not_updating_automatically --force
vi <file>
git remote add origin <URL>
sudo dnf update
touch <string>
vi <file>
npm -v
git clone <URL>
cd <string>
vim <file>
git add .
done\
sudo nano <directory>
service apache2 restart
clear
cd ..
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cd <directory>
git status
awk <string>
tail -f <directory>
git status
git add .
cd ..
pwd ls
cd <directory>
vi <file>
sudo apt remove <string>
vi <file>
git checkout -b <string>
mkdir <string>
sudo dpkg --remove <string>
npm uninstall --save <string>
wc -l
clear
git add .
head -n20 <file>
ls
git remote add origin <URL>
more <file>
ls
cd <directory>
git filter-branch --index-filter <string> HEAD
rm <string>
nano <file>
chmod -R <string>
cd ..
ls
rm <string>
ls
source <string>
mv <string>
git checkout <string>
cd
awk <string>
git config --global <file> <string>
git add .
clear
vi <file>
cd <directory>
git add .
cd
mkdir <string>
sed -ri <string>
then\
ufw -info
git status
fg
clear
cd -
ls
ls
fg
ls
ls
mv <string>
wget <URL>
cd ..
cd <string>
ls
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
cd <string>
ps -auxwf
brew install --cask <string>
ls # lists your files in current directory, ls <dir> to print files in a specific directory
cd <directory>
npm install -g <string>
sudo sed -i <directory>
exit
ls
ls
more <file>
mv <string>
ls
mv <string>
cd <string>
rm -f <string>
rm -rf <string>
chmod <number> <string>
git config --global <file> <string>
sudo service <string>
ls
grep -v <string>
cd <string>
cd <directory>
curl --compressed -o- -L <URL>
fg
ls -la <directory>
cmake -S <string> -B <string>
sudo npm install
grep -v <string>
git commit
chmod u+x <string>
cd ..
ls
source <string>
ls
git commit -m <string>
ls
cd <string>
sh -
ls -la
sudo su - <string>
git commit -m <string>
cat <string>
cd <string>
sudo ls <directory>
pulseaudio
cd <directory>
sed -e <directory> -e <directory>
git branch -d <string>
exit
chmod +x <string>
grep <string>
ls
ls
git commit -m <string>
ls
ls
ls
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
kubectl --namespace <string> <string>
ls
cd <string>
cd ..
grep -i <string> >files
sudo apt-get install <string>
cd <string>
cd <directory>
npm run test
ip
nano
vim <file>
sudo python <file>
pwd
ls -l
vim <file>
ls
sudo sed -i <directory> <file>
vi <file>
cd ..
date
ls -la
apt-cache
sed <directory>
git remote add origin <URL>
cd ..
git add .
git pull -u -m
sudo sh <file>
sudo lshw -class <string>
cd <string>
clear
git push
sudo lshw
git push -u <string> master
cd ..
clear
git status
sed <directory>
ls
clear
tail -f <string>
cd <string>
exit
history
cd ..
git add .
ls
clear
git status
sleep <number>
cd <string>
dpkg -i <file>
pwd
git push
rm -R <string>
git pull -f
git pull
ls
ls
ls
ls
git remote -v
mkdir <string>
sudo make install
git init
wget -q <URL> -O <file>
cd <string>
cd ..
<directory> <directory>
ls -al
sudo mkdir <directory>
ls
git submodule update --init --recursive
df -lh
sudo apt-get -y <string>
git commit -a
ls
ls
exit <number>
clear
cd ..
exit
scp <string>
ls
fg
ls
ssh <string>
vim <file>
cd ..
clear
clear
find . -name <file>
head -n1\
git add .
git clone <URL>
ls
vim <file>
sudo rm -rf <string>
find . -empty -type <string> -print -delete
git add <string>
ls
read -p <string> -r
vim <file>
read -rp <string> <string>
mkdir <string>
sudo <directory> -d <file>
ls -alrt
ls
sudo xrandr --addmode <string>
ls -la
vim <file>
git push
git merge <string>
sudo docker run -it --name <string> --entrypoint <string> -u <string> --privileged -v <directory>
ls
head -n <string>
ls
ls
git push
sudo apt upgrade
vi <file>
cd <directory>
ls
clear
cd <string>
docker exec -it <string> bash
git pull
vim <file>
find . -empty -type <string> -print -delete
history
git commit -m <string> --no-verify
cd <string>
sudo add-apt-repository --remove <directory>
rm -fv <string>
cd ..
locate <string>
wget -r <URL>
cd ..
cd <string>
git push
clear
git pull
ls
ls
exit
fg
vim
fg
sudo apt upgrade
git status
ls
curl -o <string>
vi <file>
ls
grep -i <string> >files
cd <string>
sudo nano <directory>
ls
vim <file>
ls
sudo apt update
ls -l
rm -f <string>
ls -la
ls
ls
cd <string>
cd ..
sudo gpg --dearmor -o <directory>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
ln -s <string>
git add <string>
sudo sed -i <directory>
ls
clear
wget -r -l1 --no-parent -nH -nd -P/tmp -A".gif,.jpg" <URL>
vim <file>
sudo docker kill corrade
exit
then
su
vim <file>
python3.11 <file>
wget <URL>
cd <string>
ls
npm run bench
git checkout master
ls
docker ps
clear
byobu-tmux
ls -laSh
exit <number>
ssh dirlic@10.18.0.39 -p <number>
cd ..
xargs -I <string> kill -9 <string>
ls
git push
git commit -m <string>
vim <file>
git status
cd <directory>
ssh-keygen -t <string>
clear
ls
vi <file>
ls
python3 <file> -i <string>
ls
sudo nano <file>
apt-get install <string>
npm i beautify -g
cd <string>
ls
sudo ls <directory>
cd <string>
clear
git status
git status
docker-compose up -d --build
ls
exit
git push
git log
python3 <file>
ls
tail -40
vim <file>
cd ..
ls
ls
git reflog
cd <string>
docker-compose up -d --build
ps -auxwf
history -a
git commit -m <string>
ls
sudo python <file>
git co master
curl -s <string>
ftp <string>
sudo sed -i <directory> <file>
tmux new-session -d <string>
grep -Pv <string>
git status
mkdir <string>
export <string>
rm <string>
ls
git push heroku main
cd <string>
exit
git commit -m <string>
cp <string>
ls
npx <string>
pwd
fg
npm init -y
sudo apt-get install <string>
sudo dnf install -y <string>
ssh isl-env <string> -p <file>
cd <string>
less <string>
cd <string>
ls
docker-compose up -d --build
git push
sudo dpkg -i <file>
git push -u <string> main
cd <string>
rm <string>
cd <directory>
read -r <string>
ls
nc <string>
ping <file>
ls
read -p <string>
ls
git commit -m <string>
ls
sudo npm install -g <string>
ls
wget <URL>
sed -E -e <directory>
ls
sudo vim <directory>
cd ..
ls
cd <directory>
exit <number>
sudo dnf remove <string>
touch <file>
ls
kill <number>
npm install -g <string>
chmod +x <string>
git status
vim <file>
cd <directory>
cat <string>
vi <file>
fg
vim <file>
ls
docker build -t <string>
vi <file>
sudo make
git commit -m <string>
git pull origin development
fg
cd <string>
history
touch <string>
cd ..
ls
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
exit
sleep <number>
git checkout <string>
git status
git status
tr <string> <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
vi <file>
vim <file>
cd ..
sudo chown -R <string>
cd <string>
history -w
cd -
cp <string>
git commit -v -a -m <string>
date
vi <file>
date
git checkout
git push
cd <string>
ls
udevadm trigger
vi <file>
git add -A
ls
ls -l
cd <string>
sudo du -h --max-depth=<number>
export <string>
cd <directory>
su root
sudo sh
cd <directory>
ls
sudo apt-get install -y <string>
sudo apt purge mongo* -y
ls
sudo ufw status
wget -O- <URL>
cd ..
cd ..
fg
ls
vi <file>
cd <string>
clear
cd <string>
ls
git clone <URL>
scp <string>
ls
vim <file>
rm <string>
ls
sudo snap install <string>
cd ..
git branch -D <string>
ls
ps aux
cat <string>
clear
sudo -u <string>
sleep <number>
npm install
cd ..
cd <directory>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
git commit -m <string>
find -name <string>
cd <string>
exit
mv <string>
cd <string>
cd <string>
ls
sed -i <directory>
git reset HEAD^
egrep -ri <string>
cd
sudo apt-get install <string>
ls
apt-get update
wc find . -iname <file>
sort
mv * <directory> -f
cd <string>
ssh -L <string> -N -f -l <string>
ls
ls
ls
more <file>
ls
git clone <URL>
sudo apt -f <string>
git branch -u <directory>
bash <file>
git add .
cd <directory>
mkdir <string>
ls
cd ..
cd ..
sudo sed -i <directory>
cd <string>
ssh -i <string>
clear
sed <directory>
git commit -am <string>
ls
mv <string>
ls
rm -rf <string>
vim $(grep -l <string>
docker rm <string>
exit <number>
exit
git checkout <string>
vi <file>
sudo su
sudo su -
pwd
grep -Ev -e <string>
cd <string>
read -s -n <number>
apt-get update
cd <string>
export <string>
ls
apt-get update
sed -i <string>
df # shows disk usage
ls
vi <file>
git remote
sudo apt install <string>
docker-compose logs
cd <string>
git push -u <string> master
sudo <file> -v -w <string> -o <string>
mkdir <directory> --parents
clear
ls
mkdir <string>
find . -name <file>
ls
rm <string>
source <directory>
sudo dmidecode --type <number>
find folder -type <string> -name <file>
docker rm <string>
then\
git push
then\
cd <string>
git pull
history -c
sudo apt remove <string>
less
grep <string>
cd <directory>
sudo apt install -y <string>
rm <string>
ls
ls
git clone <URL>
git tag -a <string> -m <string>
vi <file>
ps aux
cd <string>
sudo apt-get upgrade
sudo sed -i <directory> <file>
git push heroku main
cd <string>
tail -f <string>
git pull
wget <URL>
cd ..
npm run dev
sudo apt-key adv --recv-keys --keyserver <string>
git add .
vi
npm install -g <string>
git commit -m -n <string>
ls
find . -type <string> -exec <string> <directory> {} +
sudo apt install <string>
ls
sudo apt install <string>
sudo su
cp <string>
ls
git help
apt list --upgradable
find . -empty -type <string> -print -delete
ls
history
mkdir -p <string>
ssh-keygen -t <string> -C
cd <directory>
sudo dd <string>
git pull origin <string>
python3 <file>
grep <string>
ls
vim <file>
cd <directory>
sudo -i
git add -v <string>
ls
git branch -M <string>
ls -lShra
ls
git remote add origin <URL>
more <file>
curl -H <string>
git status
sudo apt-get install <string>
git branch -M <string>
git remote add origin <URL>
cut -f <number> -d <string>
ls
sudo apt upgrade -y
top
sudo tee <directory>
cd <string>
npm run bench -- -c <file> -n <file>
wget -N <URL>
git add -A
reboot
cd <directory>
mkdir <string>
git clone <URL>
history
git push
cd ..
cd
ls
git remote set-url <string>
ls -la <directory>
read <string>
ls
cd <string>
cpio -p -d -v <string>
exit
nano <file>
tmux a -t <string>
ls
git add <string>
cd ..
ls
ls
grep -cv <string>
ls
git status
ssh-copy-id
ls
sudo chmod <number> <string>
find . -name <file> -type <string> -print -delete
python3.11 <file>
mkdir -p <string>
ls
cat <string>
dpkg -l
git checkout -b <string>
git push
git add -A
cd <string>
mkdir -p <string>
ls -la
cd <string>
cd <string>
git config <file> <file>
clear
read -r <string>
git pull
dpkg -i <file>
git add .
node <file>
cd <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
ls
cd <string>
cd <string>
cat <string>
cd <string>
grep <string>
fg
ls
ls
cd ..
rm <string>
exit <number>
cd <string>
git status
cd <directory>
open <string>
git push origin <string>
git pull origin development
pwd
sudo apt update
clear
mkdir <string>
git push
vi <file>
npm install
git fetch
cat <string>
file <string>
mkdir <string>
rm <string>
unset <string>
git branch main
python3 <file>
sudo flatpak <string>
python3 -m <string>
ls
cd ..
kill
python3.9
sudo zypper <string>
cd <directory>
cd <string>
apt-get update
cd <string>
ls
git remote add origin <URL>
rm -rf <string>
ping <string>
cd ..
alias <string>
sudo yum install <string>
git add .
history
cd <string>
ls
ls
git commit -m <string>
ps ax
vi <file>
ls
sudo rm -R <string>
vim <file>
chown <string>
mkdir --parents -- <string>
python3 <file>
mv <string>
clear
ls
rm -rf <string>
npm install
done
sudo apt-get install gparted -y
mkdir -p <string>
npm install
sudo apt install tor -y
sed -i <directory>
ls
bash
sudo sed -i <directory> <file>
git commit -v -a -m <string>
vim <file>
awk -F <string>
cd ..
cd <string>
git status
clear
ls
npm run dev
git commit -m <string>
git init
sudo systemctl daemon-reload
git init
ls
git add <string>
cd <string>
sudo apt-get update
git status
git reset HEAD^
vim <file>
sudo su -
vim <file>
sudo vim <directory>
git add .
xargs -L1 <string>
cd <string>
ls
sudo apt upgrade
sudo shoutdown -h <string>
pwd
clear
sudo rm -rf <string>
cd ..
vi <file>
mv <string>
nano <string>
sudo apt-get update
cd <string>
pwd
cd ..
sleep <string>
reset
ls -al
ls
sudo shutdown -r <string>
ls
cd <string>
git branch
docker-compose logs --follow <string>
ls
wget <URL>
sed <directory>
vi <file>
sudo sed -i <directory>
git reset HEAD^
cd <directory>
wget <URL>
mv <string>
find <directory> -name <file>
npm run test:watch
sudo chmod +x <string>
cd <string>
ls
ls
tmux --version
ls
ls
cd <string>
ls
ls
ls
chmod +x <string>
ls
clear
ls -la
clear
sudo python <file>
cd ..
cd <string>
fg
ssh <string>
tmux
vim
sudo node <file>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
cd <string>
ls
ls
exit <number>
mkdir -p <string>
cd <string>
exit <number>
git checkout -- <string>
npm test
git rebase -i <string>
cd <string>
clear
chmod +x <string>
awk <string>
ip a
read -p <string>
ls -l
ls
podman build -t <string>
vi <file>
git add <string>
fg
awk <string>
clear
wget <URL>
rm <string>
kill <number>
vi <file>
git push -u <string> main
ls
sleep <string>
git diff
npm install <string>
sudo -s -u <string> -H
ls
cat <string>
ls
git status
git add
ls
ls
cd <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
find <directory> -type <string> -execdir <string>
php -r <string>
git add -A
ls
read -r <string>
git remote remove <string>
cd
ls -R
ls
cat <string>
cd ..
git init
mv <string>
scp <string>
ls
grep -Ev <string>
vi <file>
cd <directory>
ps axfu
ls
git brancg -v
rm -rf <string>
pwd
mv <string>
find . -name <file> -type <string> -print -delete
ls
sudo docker run -p <string> -p <string> -v <directory>
tail -f <directory>
python3 <file>
git pull
exit
npm install
sudo dnf swap -y <string>
cd <string>
npm run test
chmod <number> <string>
exit
vi <file>
clear
cd <directory>
find . -type <string> -print0
git add <string>
cd <string>
xargs kill -9
cd <string>
cd <string>
exit
mv <string>
sleep <number>
sudo systemctl enable <string>
ls test
exit
grep <string>
ps -A
npm i <string>
rm <string>
git add.
cat <string>
git add .
sudo python3 <file>
sudo -s -u <string> -H
chmod <string>
clear
exit <number>
grep -R <string>
git pull
ps aux
rm -f <string>
ls
cp <string>
cd <string>
git push
apt-get update
ls
find . -type <string> -name <string>
sudo reboot
rm <string>
cd --
chmod +x <string>
cd
cd ..
ls
file <string>
git add <string>
chmod +x <string>
git commit -m <string>
ls
npm i <string>
clear
vi <file>
vi <file>
docker ps
cd ..
awk <string>
ls
find . -name <string> -exec <string> --parents <string>
ls
git commit
git st
ls
ls
docker-compose down -d <string>
git push
python3 <file>
git grep -l <string>
git add <string>
curl <URL> -u <string> -d <string> -d <file> -G
gsettings set <file> <string>
exit
exit
git add .
sudo apt-get install <string>
git branch
vim <file>
cd <string>
pwd
sudo npm cache clean -f
cd <string>
cd <string>
nano <file>
vim <file>
cd <string>
sort -rh
git add -A
gunzip <file>
vim <file>
git commit -m <string>
pwd
cd <string>
vim
rm -fr <string>
mv <string>
sudo rpm --import <URL>
npm i <string>
cd <string>
cd <string>
cd <directory>
ls
ls
docker build -t <string>
cd <directory>
cd <string>
cd <directory>
source <file>
cd ..
ls
nano <file>
sudo apt-get --assume-yes <string> <string>
git add .
sudo systemctl enable <file> --now
date
find . -name <string> -prune -o -type <string> -name <string> -exec <string> -c <string>
cd
git checkout -b <string>
cd <directory>
git add .
mv <string>
ls
cp <string>
cd ..
vim <file>
vim <file>
ls # lists your files in current directory, ls <dir> to print files in a specific directory
cd <string>
git status
sort -nr
git status
read <string>
cd <string>
sudo useradd -d <directory> -m <string>
ls
git remote
git commit -m <string>
grep -q <string>
exit
ls -la
ls
ls
ls
git init
git add <string>
grep <string> -r
ls
git commit -am <string>
ls
exit
ls
pwd
cd ..
find . -empty -type <string> -print -delete
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
wget <URL>
ls
apt-get install <string>
top
vi <file>
ls
vi <file>
ls
cd <string>
clear
exit
clear
ls
vim <file>
rm -R <string>
ls
curl <string>
cd ..
cd ..
sudo rm -r <string>
ls
git add .
git remote remove origin
ls
setg RHOSTS.*
ls
wget <URL>
ls
sudo sed -i <directory>
git clone <URL>
sudo apt-get -y <string>
ls++ -a
cd <string>
cd <string>
clear
cd <string>
git commit -m <string>
find . -name <file>
git status
git add .
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
npm install -g <string>
tr -d <string>
cp <string>
clear
git add .
git branch
ls
git bisect <string>
ls
ls
sudo apt-get -y <string>
dir
cd..
rm -P <string>
nano <file>
ps -ae
kubectl <string>
ls
grep <string>
rm -rf <string>
exit
hostname -a
ls
ls
chmod +x <string>
chmod <number> <string>
ip a
cd <string>
git stash pop
read -p <string>
ls
git commit <file> -m <string>
git commit -m <string>
git add .
pwd
ls
cd
vim <file>
pwd
docker run -h
ls -la <directory>
git push origin <string>
git push
git add .
ls
cd <string>
cd <directory>
cd <string>
ls
ls
chmod u+x <string>
sudo pacman -S <string>
ls
sudo chmod +x <string>
apt-get
dpkg -l
ls
mkdir <string>
ls -altr
clear
ls
cat <string>
git clone <URL>
vi <file>
git push origin main
mv <string>
git config --list
chmod u+x <string>
read -rp <string> <string>
ls
exit
ls
cd <directory>
git push -u <string> master
git add <string>
ls
fg
git add <string>
php artisan <string>
find . -empty -type <string> -print -delete
code .
vim <file>
ls
git commit
touch <string>
vim <file>
ls
cd ..
git status
<directory> <directory>
git pull origin <string>
vim <file>
sudo usermod -aG <string> $USER
cd <string>
brew
time <string>
sudo apt install xrdp-pulseaudio-installer -y
rm -rf <string>
chmod <number> <string>
mvn compile
grep -r <string>
cd <string>
sleep <string>
git checkout development -f
ls -la
npm run start
cd <string>
ls
sudo apt-get update
source <string>
git pull
grep -n <string>
sudo sed -i <directory> <file>
docker run -it -p <string>
grep <string>
cd
cd <string>
read -p <string>
ls
sudo apt-get update
sudo apt install <string>
ls
exit
ls
ls
ls
cp <string>
git commit -m <string>
ls
cd <string>
pwd
cd <string>
ls
ls
tmux a
ls
mvn
ls -la <directory>
ls
git pull
ls
chmod <number> <string>
docker ps
ls
grep --invert-match <string>
python3 <file>
git commit
sudo apt update
cd <string>
sudo nano <file>
done
du -sh
git push origin
cd <string>
sudo rm -rf <string>
git ci -m <string>
history -c
ls
git push --set-upstream <string> main
systemctl restart <file>
cd <string>
fg
docker ps -a
ls -tlr
cd <directory>
exit
cd <directory>
cat <string>
git push origin <string>
grep --help
ls
ls
vim <file>
mkdir -p <string>
cd <directory>
awk <string>
sed -i <directory>
cd <string>
sudo su
ls
ls
git push
sudo ln -s <directory>
cd <string>
python3.11 <file>
ls
cd <string>
git commit -m <string>
cd <directory>
npm install karma --save-dev
ls
cd ..
ls
git add .
mv <string>
sudo chmod a+rwx <directory>
git pull
exit <number>
sed -E -e <directory>
touch <file>
vim <file>
npm init -y
tail -f <directory>
cd <string>
ls
git commit -m <string>
git push
curl <string>
git add .
git status
ls
exit <number>
ls
cd ..
cd
git push --set-upstream <string> <string>
exit <number>
cd <string>
git push --force <string>
man <string>
cd ..
ls
cd <string>
sudo ifconfig en0 ether <string>
python3 <file>
vi <file>
pwd
rm <string>
clear
npm run start
find . -empty -type <string> -print -delete
cd <string>
awk --help
ls
cd
cd <string>
cd <directory>
git push -u <string> main
cd <string>
cd
npm init -f -y
do-release-upgrade --help
journalctl
perl -p -e <directory>
sudo nano <string>
exit
ls
git init
ls -al
ls
npm install -g <string>
cd <string>
ls
npm install -g <string>
cd <string>
du -sh
git remote -v
cd <string>
sudo pacman -S <string>
cd <directory>
ls
ls
git pull origin master
vi <file>
cd -
clear
sed -i.bak <directory>
python3 <file>
sed -E -e <directory>
read <string>
vi
cd <string>
done
cp <string>
exit
unset <string>
rm <string>
cd <directory>
sudo systemctl start <string>
git add --all
npm install <string>
awk <string>
cd <string>
sudo apt-get update
curl -L <URL>
ls -l
mkdir -p <string>
git fetch origin\
vi <file>
cd <string>
ls
source <directory>
sudo apt install <string>
git commit -m <string>
cat <string>
sudo tee <directory>
php --help
tar zxvf <file>
ls
sudo python3 <file>
cd
sudo apt-get install <string>
sed <directory>
ls
ls
exit
cd <string>
ls
ls
fg
update-alternatives --list <string>
ls
cd <string>
ls
find <directory> -type <string> -execdir <string>
cd <string>
cd <string>
git commit -m'Cool, <string>
cd <string>
cd <string>
file <string>
sudo nano <directory>
vim <file>
git status
ls
ln -s <string>
ls
exit
clear
ls
ls -l
ls
ls
git checkout -b <string>
cd <string>
cd <string>
cd <string>
cd <string>
exit
cd <string>
vim <file>
vim <file>
vim <file>
git status
npm run build
ls -l
clear
ls
rm -rf <string>
ls
docker-compose up -d --build
sudo apt install <string>
find . -name <string> -prune
cd ..
ls
touch <file>
exit
git add .
find . -type <string> -name <string> -exec <string> -H <string>
vim <file>
export <string>
ls -ltra
nano <file>
cd ..
more <file>
vi <file>
git config
less -r
find . -not <string>
ls
exit
cd <string>
env
python <file> runserver 0.0.0.0:2016
rsync <directory>
sudo pacman -Q <string>
cd <directory>
git branch
unset color_prompt force_color_prompt
ls
npm install <string>
vi <file>
grep -i <string> >files
git checkout <string>
nano <string>
grep -win -C <number>
ls
git status
read <string>
tmux source <file>
cd ..
cd <string>
ls
exit
mv <string>
rmdir <string>
cd ..
cd
rsync -a <string>
exit
rm -rf <string>
git branch
sudo service <string>
ls
ls
cd ..
mkdir <string>
cd <string>
uniq -c
rm -fv -- <string>
git add .
set <string>
npm install -g <string>
docker run -it --rm --net <string> --name <string>
python3 <file>
ls -lhr
history
ping <file>
sudo mkdir <directory>
sudo dpkg -S <string>
git checkout <string>
ls
vim <file>
git branch
cat <string>
git reset --soft <string>
ls
chmod +x <string>
ls -la <directory>
ls
cd <directory>
git add <string>
ls
ls
npm login
exit <number>
sudo su laravel
cd <string>
ls
git push
mv <string>
grep <string>
sudo tail -f <directory>
cd <string>
tail -f <string>
clear
ls
history
wc -l
vi <file>
git push
git commit -m <string>
ls
cd ..
sudo easy_install <string>
mv <string>
fg
nano <string>
cd <string>
exit
sudo apt-get -y <string>
sudo rmmod -f <string>
apt-get update
pkill <string>
ls
vim <file>
cd <directory>
clear
sudo code .
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
clear
ls
vi <file>
sudo apk add <string>
man <string>
cd ..
git add <string>
git init
du -d <number> -xh <string>
systemctl --type=<string> --state=<string> --all
python3 <file>
git add .
wget --quiet -O - <URL>
make install
cd <directory>
cd <string>
ls
git merge <string>
diff <file> <file>
ls
ssh <string>
pwd # tells you where you currently are
pwd
cd ..
git push
git add .
cd <string>
cd <string>
rm -f <string>
vim <file>
cd ..
git add -
stat
xargs -L1
rm -rf <string>
bash <file> -b -u -p <directory>
ls
node <file>
npm install -g <string>
sudo sed -i <directory> <file>
cat <string>
ls -l
npm install
ps -u <string> -o <string>
exit
cd ..
python3 <file>
find . -type <string> -print0
ls
sudo systemctl restart <string>
sudo tree -d <string>
git push
cd <directory>
ls
git branch
cd <string>
cd ..
sudo pacman -Rcn <string>
vim <file>
cd <directory>
curl -k <URL>
ls
bash
ls
cd <directory>
git config --global <file>
git status
sudo tee <directory>
npm adduser
sudo apt-get install <string>
git commit -m <string>
vim <file>
ls
git commit -m <string> --no-verify
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
ls
npm http <number> <URL>
git remote add origin <URL>
clear
cd <string>
fg
cut -d: -f1 <string>
vim <file>
ls
sudo rm -rf <string>
pwd
sudo tune2fs -l <directory>
sudo apt update
git commit -m <string>
ls
grep <string>
pwd
ls
clear
curl -k -s <URL>
git remote add origin <URL>
vim
ls
npm install
code <string>
cd <string>
ls
git commit
ssh <string>
git commit -m <string>
done
cd <string>
git add <string>
mkdir <string>
done\
vi <file>
apt-get install <string>
cd
cd <string>
ls
ls
git branch -b <string>
ls
ls
rm -r <string>
git commit -m <string>
nano <file>
docker push <directory>
git config --global <file> <file>
done
git status
cd <string>
clear
sudo apt-get update
ls
git add <string>
vim <file>
npm install --force
cd <string>
sudo update-rc.d <string>
vim <file>
sh <file>
exit <number>
cd
git stash
git checkout <string>
ls
clear
vim <file>
python3 <file>
cd ..
cd <string>
date <string>
rm -rf <string>
grep <string>
chmod +x <string>
git pull
git push -u <string> master
cd <string>
wget <URL>
ls
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
ls
read <string>
cat <string>
sudo rm -rf <directory> <directory>
grep -i <string> >files
chmod +x <string>
sudo chown -R <string>
ls -la
git commit -am <string>
vim <file>
ls
cd <string>
sudo git init
fg
clear
cd ..
cd <string>
ls -alF
cd <string>
git add <string>
ls
mkdir <string>
npm install -g <string>
exit
ls -la
npm run
ls
cd <string>
git switch main
ls -la
cd <string>
source <directory>
touch <file>
sudo mount <directory>
python3.11 <file>
pwd
grep <string>
grep -a -i -E --no-filename <string>
git remote add origin <URL>
bash <file>
clear
rm -r <string>
ls
exit
clear
cd <string>
git commit -m <string>
gsutil cp <file>
git commit -m <string>
cd <string>
sleep <string>
ssh <string>
ls
nohup node <file>
source <file>
cd <string>
curl <string>
ls
su
tmux kill-server
sed -i <directory>
git pull origin main
ls
cd <string>
exit
docker-compose up -d --build
apt install -y <string>
vi <file>
df
git push
find . -name <file>
python3.11 <file>
git checkout master
wget <URL>
cd <directory>
cd <string>
git log
git add -v -f <string>
npm publish --access <string> --scope=<string>
touch <string>
vim <file>
git push
source <string>
vim <file>
grep -a -i -E --no-filename <string> */*.log*
curl <string>
chmod <number> <string>
cat <string>
mkdir -p <string>
ls -la
ls
gunzip <file>
python3 <file>
cd <string>
scp <string>
ls
clear
sed <directory>
ps -eal
git add .
cd ..
git status
npm run coverage
mv <string>
find . -name <file>
docker run --rm <string>
rm <string>
curl <string>
read -p <string>
sudo mysql -u <string> -p
ls
npm install
tail +x # want to display all the lines from x to y. This includes the xth and yth lines.
fg
sudo nano <directory>
tmux attach-session -d -t <string>
sudo python3 <file>
cd ..
sudo apt-get -y <string>
ls
cd
fg
mkdir <string>
cd <string>
find . -name <file>
git commit -m <string>
unzip <file>
wget <URL>
clear
docker-compose logs
vim <file>
ls
cd <string>
exit
vi <file>
git init
ls -latr
git push
grep <string>
clear
git init
ls
git config --global <file>
cd <string>
ls -la
git status
sudo adduser <string>
npm i -g <string>
git add .
cd <string>
cd <string>
cut -f <number> -d <string>
cp -r <directory>
ls
cat <string>
cd <string>
vi <file>
ls
cd
cd <directory>
cd <string>
awk <string>
cd <directory>
ls
mkdir <string>
vi <file>
clear
cp -v <string> <directory>
git push origin master
cp <string>
cd ..
vim <file>
cd <string>
cd <string>
clear
ping <string>
sudo rpm --import <URL>
curl -O <URL>
cd <directory>
cd
clear
telnet <string>
ls
git commit -m <string>
git remote -v
touch <string>
rm -r <string>
ls
npm install react-native-gesture-handler --force
git add <string>
sudo groupadd <string>
cd <string>
journalctl
ls
sudo cp -r <string>
npm start
ls -la
du -chs <string>
ls
cd <string>
node <file>
cd <string>
ln -T <directory>
docker-compose logs --follow <string>
cd <string>
git init
sed -E -e <directory>
read -p <string>
htop
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
sudo start uwsgi
git clone <URL>
npm install --global <string>
git status
mkdir <string>
git pull origin master
git --version
git remote remove <string>
grep <string>
exit
source <file>
clear
clear
done
git stash apply <string>
ls
chmod u+x <string>
cd <string>
git commit --allow-empty -m <string>
vim <file>
git checkout master
cd <string>
git commit -m <string>
git commit -m <string>
sudo rpm -e <string>
sort -V
grep -i <string> >files
chmod u+x <string>
pkill <string>
git commit -a -m"login <string>
git add .
cd ..
ls -l
sed -E -e <directory>
sudo apt upgrade
ls
cd
ls
cd <string>
ls
ls
dpkg -s <string>
git fetch
ls
ps aux
ls -lh
cd <string>
cd <string>
git push -u <string> master
cd ..
ls
vi <file>
rmdir <string>
wget <URL>
cd
clear
ln -s <string>
vim <file>
read -r -p <string>
tmux a
grep <string>
mkdir <string>
vi <file>
ps axfu
ls
cd <string>
apt-get install -y <string>
git push
curl -b <string>
sudo port <string>
cd <directory>
python3 <file>
curl - <string> -H <string>
python3 <file> --epochs <number>
exit <number>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
ls
clear
mkdir <string>
vi <file>
sudo cp <string>
ls -la
find . -empty -type <string> -print -delete
clear
git commit -m <string>
cd
exit <number>
git status
git status
cd <string>
gpg --help
exit <number>
rm <string>
git cm -m <string>
sudo poweroff
npm install
ls
cd <string>
git checkout <string>
sudo chmod <number> <string>
cd
curl <string>
awk -F[\
script/build.sh
cd <directory>
cd <string>
vim <file>
git add .
git branch
screen
docker run -d -p <string>
ls
sudo apt install <string>
vim <file>
ls
cd <string>
sudo pacman -Syyu
git add <string>
sudo apt install curl -y
npm install -d
ls
LANG=<string> df -h
read -p <string>
cd <string>
cat <string>
cd <directory>
git log
git status
ls
git commit -m <string>
ls
ls
sudo bash -
sudo apt install flatpak -y
vi <file>
vim
cd <directory>
cd <directory>
cd <string>
rm -fr -- <string>
ls
apt-get -y <string>
git push -u <string> master
cd <string>
git push -u
mkdir <string>
wget <URL>
ls
git switch -c <string>
cd ..
cd <string>
sudo sed -i <directory>
ls
git commit -m <string>
cd <string>
export <string>
touch <file>
sudo add-apt-repository <string>
git log
mkdir <string>
cd <string>
cat <string>
ls
clear
cd ..
ls
git co PTS-578_redirects_not_updating_automatically
top
ls
ls
curl -V <directory>
git init
docker-machine ssh <string>
fg
vi <file>
sudo apt get update
sudo cp <file> <file>
tail -f <directory>
git add <string>
ping <string>
git clone <URL>
do\
less --help <string>
ls
git remote set-url origin <string>
cd <string>
git clone <URL>
cd <directory>
cd <string>
ls
git revert --skip <number>
clear
cd <string>
git status
rm -rf <string>
ls
npm start --production
touch <string>
sudo mkdir <string>
screen
ls
rmdir <directory> -f
ls -la
cd ..
git status
git diff <string>
ls
git pull origin master
mv <string>
cd <string>
ls
clear
then\
python3 <file>
cd ..
find . -empty -type <string> -print -delete
git log
cd <string>
ps aux
cd <directory>
systemctl status <string>
clear
cd <string>
git status
systemctl -t <string>
htop
ls
read -p <string>
cd <string>
mv <string>
clear
cd ..
ls
clear
sudo sed -i <directory> <file>
mkdir <string>
git br
systemctl status <string>
git add -A
ls
vim <file>
clear
vi <file>
git commit --amend --reset-author
ls
cd <directory>
kill <number>
ls -ltr
npm install
sudo rm -rf <string>
ls
cd <directory>
clear
grep -A <number>
exit <number>
sed -E -e <directory>
ls
passwd new
ls -la
rm <string>
git add .
cat <string>
vi <file>
rm -rf <string>
done
rm book.tex\ -\ <file>
yarn add --dev <directory>
nano <string>
ssh dirlic@10.18.0.39 -p <number>
sudo usermod -aG <string> $USER
clear
make -j <string>
more <file>
cd <string>
git init
vi <file>
ls
grep listen -nr
top
sudo ufw allow <string>
ls
cd <string>
vi <file>
cd <string>
lsof
sh <file>
cd ..
clear
cd -P -- <string>
pwd
vi -t <string>
git push -f --set-upstream <string>
cd <string>
sudo apt -y <string>
ls
apt install
ls
find . ! -name <string>
vi <file>
clear
touch <file>
cd ..
exit
cat <string>
npx <string>
cd <string>
ls
uniq -u <file>
chmod +x <string>
read -r -d <string> <string>
ssh <string>
source <file>
npm install -g <string>
clear
cd ..
cat <string>
ls
ls
cd <directory>
ls -a <string> lists all <string>
sudo wget <URL>
ls
rvm <string>
npm -v
read -p <string>
grep <string>
ruby
grep <string>
kubectl apply --filename <file>
vi <file>
git remote -v
ls
cd ..
ls
exit
ls
npm uninstall --save <string>
cd ..
ps
vim
cd <string>
sudo <directory> <string>
cd <string>
nano <file>
grep <string>
exit <number>
umask <number>
ls
find <directory> -iname <file> -type <string> -exec <string> -c <string>
clear
rm <string>
ls -alrt
host <string>
clear
open <string>
cd <string>
ls
git branch -D <string>
ls -la
git status
cd <string>
cd <directory>
grep -v <string>
shutdown
ls
cp <string>
cd <string>
mv <string>
git commit -m <string>
git commit -m
clear
sudo service nginx reload
apt-get -y <string> <string>
ls
python3 <file>
service apache2 reload
cd <string>
cd <string>
ls
cd <string>
touch <file>
git clone
sudo virsh -c <directory> <string>
sudo apt-get -y <string> <string>
su
git pull
vi <file>
cd <directory>
wget -r <URL>
rsync <directory>
source <string>
git init
ls
mkdir <string>
sudo git clone <URL>
ls
zcat <file>
ls
ls
vi <file>
ssh dirlic@10.18.0.39 -p <number>
vi <file>
clear
ls
wget -q -O - <URL>
read -p <string>
sudo pacman -S <string>
sudo docker run -d -p <string> --name <string>
ls
vi <file>
wc --help
clear
vim <file>
cd
python3.11 <file>
cd <directory>
mv <string>
git init
git clone <URL>
rm <string>
ls
ls
git push -u <string> bryan-guner
cd <string>
kill -9 <number>
sudo rm -rf <string>
ls
npm start
wget -q <URL> -O <file>
npm install <string>
less
cp <string>
sudo rm -rf <string>
clear
exit
setg RHOSTS <file>
sudo apt-key add -
cp -r -- <directory>
clear
sudo make
ls
ls
git push --help
git commit -m <string>
cd <string>
chmod <number> <string>
git commit -m <string>
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ls
git commit -m <string>
find . -mnewer <string>
git commit -m <string>
more <file>
git merge develop
cd ..
ls
tail -200 <file>
vi <file>
find . -name <string> -type <string> -print -prune -exec <string> -rf <string>
cd
sudo sed -i <directory> <file>
git fetch
git status
ls
exit <number>
cat <string>
rm <string>
ssh-copy-id -i <string>
clear
cd <string>
vim <file>
ls -l
npm install malta -g
cd <directory>
rm -R <string>
git remote add origin <URL>
git remote rm <string>
git pull -u <string>
ls
cat <string>
cd
docker ps
chmod +x <string>
cd <string>
iptables -L
cd <string>
ls -la
ls
nano <file>
ps -e
ls
git merge
npm-recursive-install
vim <file>
less <string>
cp -r <directory>
git init
git clone
git add <string>
vi <file>
cd ..
ls -la
sudo python <file> -cascade==<file> <number>
npm install
sudo make install
cat <string>
ps axfu
cat <string>
mvn exec:java -Dexec.mainClass=<file>
sudo ln -s <directory>
sudo xbps-remove <string>
cd <string>
cd ..
read -p <string>
sudo apt-get update
ls
sed <directory>
vim <file>
ls
vim <file>
rm <string>
cd <string>
git pull
git push
grep -v <string>
cd <directory>
xargs wc -l
sudo rm -rf <string>
ls
ls
ls -alF
cp <string>
ssh -i <string> remote_user@remote_host
sudo chown <string>
git co master <file>
git
sed -i <string>
sudo apt-get -y <string>
rm -rf <string>
ls -l
fg
sudo apt-get install <string>
ls
ln -s <string>
grep -i <string>
git remote -v
cd <string>
npm i
ls
git init
git config --global <file> <string>
cd <directory>
cat <string>
rm -f <string>
git config --global <file> <file>
git push
cd ..
exit
egrep -ri <string>
which <string>
kill <number>
ls
cd <string>
git init
ls -la
ln -s <string>
cd <string>
done
fg
ls
cd ..
cd <string>
vi <file>
sudo apt-get -y <string>
cd <string>
cd
grep -R <string>
git add .
ls
sudo apt-get install -y <string>
cd <directory>
wget -O <file>
vi <file>
sudo add-apt-repository <directory>
cd <string>
git commit -m <string>
ls
touch <file>
ls -al
ls
git pull
clear
vim <file>
cd <directory>
git remote add origin <URL>
ls
ls
wget -qO- <URL>
ls
chsh <string>
python3
git add <string>
ls -l
find -name <string>
ls
exit <number>
curl <string>
cd ..
exit
cd ..
git status
cd <string>
xargs -d'\n' <string> +x
npm run package
git commit -m <string>
npm install --save <string>
exit
curl -i -s <URL>
cd
git clone <URL>
cd <string>
ls -la
mv <string>
python3 <file>
git status
git push origin <string>
cut -d'<' -f1 <string>
clear
ls
touch <string>
ls
ls
git add .
cat -e <string>
ls
git branch
python3 <file>
ls
clear
clear
rm <string>
cd ..
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
ls
source <directory>
curl -sS <string>
cd <string>
exit
let <string>
grep -i <string> >files
git push
cd
cd <string>
git status
git lfs <string>
cd <directory>
cd <string>
npm install -g <string>
cd <directory>
git commit -m <string>
clear
git commit
ls
ls
cd..
vim <file>
apt-cache search <string>
curl <string>
sudo find <directory> -name <string>
exit
cd <directory>
clear
npm install <string>
ls
ls
ls
cd <string>
vi <file>
grep <string>
which <string>
sudo apt-get update
ls
ls
git add -v -f <string>
ls
ls
cd <string>
sed -E -e <directory>
grep <string>
exit
ls
docker run --rm -i -t <string>
ls
read -r <string>
cat <string>
ip a
tr <string> <string>
ls
clear
ls
ls
ls
ls -al
exit
cd <string>
git for-each-ref --format=<string> <directory>
git pull origin <string>
sudo apt-get update --fix-missing
vim <file>
git add <string>
pwd
cd <string>
python3 -
cd <string>
sudo docker run --rm -p <string>
cd <string>
sudo apt-get upgrade -y
done
vi <file>
sed -n <string>
mkdir -p <string>
ls
git add .
cd <string>
ls
cp <string>
cd <string>
sudo apt-get -y <string> <string>
sudo strace -f -p <number> -o <file> -g
git commit -m <string>
cd <directory>
docker exec -it <string>
ls
vi <file>
sudo node <file>
sleep <string>
ls
mv <string>
sudo sed -i <directory>
git commit -m <string>
git push
ls
git pull
sudo apt install <string>
ls -la
ls
vi <file>
git clone <URL>
git status .
rm -f <string>
git add .
ls
cd <directory>
cat <string>
sleep <string>
git clone <URL>
curl -i <string>
ls
history # <string>
npm init -y
cd <string>
ls
git commit -m <string>
sudo apt-get install <string>
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
chmod -R <string>
rm -f <string>
cd <string>
ls++ -a
git status
apt-cache search <string>
git status
ls -alrt
cat <string>
cat -s -n <file>
git checkout -b <string>
rg <string>
exit
git log
ls
date
timedatectl
cd <string>
cd <string>
ls
cd
ls
cd <directory>
cat <string>
ls
find . -type <string> -not -path <directory> -not -path <directory> -exec <string> -vf <string>
sudo node <file>
grep -qw <string>
sudo apt install <string>
ruby -e <string>
python3.11 <file>
ls
cd <string>
clear
ls
clear
cd ..
ls
rm -rf <string>
df -hT
git commit -m <string>
ls
which <string>
git status
cd <directory>
history
sudo passwd <string>
sudo install <string>
rm -rf <string>
cat <string>
cd <directory>
ls
curl <URL> --silent
git push
git stash
find . -name <file>
clear
gpg --list-sigs -vvv
ls
exit
npm i <string>
git config --global <file> <file>
rm <string>
sed -E -e <directory>
fg
rm -f <string>
sudo dnf install -y <string>
ls -la
sudo poweroff
git clone <URL>
git pull
cd <string>
ls
git clone <URL>
cd <string>
df -mh
cd ..
ls
clear
mv <string>
sudo sed -i <directory> <file>
cd <string>
git status
sudo apt update
cd ..
git clean -fd
git add .
source <directory>
rm -rf <string>
git commit
ls
cd <string>
curl -s <string>
cd <string>
sudo apt install <string>
unset <string>
sudo pacman -Syyu
ls -la
ls
ls
rm -rf <string>
git status
clear
cd
vim <file>
cd ..
git status
grep <string>
grep -Eo <string>
clear
ls -ltr
sudo apt install <string>
cat <string>
nano <file>
vi <file>
clear
grep <string>
git remote add origin <URL>
cd <string>
sudo apt-get install <string>
kill -9 <number>
tar -zcf <file>
sudo python3 -m <string>
sudo systemctl restart <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cd <string>
vim <file>
source <string>
git clone --depth <number> <URL>
vim <file>
sudo chmod -R <number> <string>
cd ..
sudo sed -i <directory> <file>
git push
cd <string>
done
git add .
docker exec -it <string>
cd <string>
sudo apt install gnome-tweak-tool -y
rm <string>
cd <string>
sudo tcpdump -D
ls
vim <file>
rm -rf* <string>
sudo sed -i <directory> <file>
cat <string>
rm -r <string>
fg
git pull
git status
export <string>
rm -f <string>
sudo dpkg --configure -a
sleep <number>
perl
fg
cd <directory>
git push origin
ls
cd <string>
ls
pwd
ls
python3 <file>
cd <directory>
ls
sudo sed -i <directory> <file>
openssl rand -hex <number>
systemctl enable <string>
ls
cat <string>
pwd
cd <directory>
ps -ef
cd <string>
pwd
open <string>
chmod <string>
mv <string>
make clean
exit
sleep <number>
git remote add upstream <string>
git pull
cd <string>
git clone <URL>
find . -type <string> -newermt <string>
cd <directory>
python3 <file>
cp <string>
screen
unzip -zst <file>
git add <string>
cat <string>
cd <string>
cd ..
ls
ssh root@ -v
vi <file>
python3 <file>
rm -rf <string>
cd <string>
cd <string>
cd <string>
cd ..
cd ..
npm install -g <string>
git pull
git clone <URL>
git pull
code <string>
fg
git push
source <file>
ls
ls
git init
source <file>
htop
ls
cd <string>
git status
git push origin master
git add <string>
touch <file>
vim <file>
ln -s <string>
sh <file>
cd <directory>
npm install -g <string>
cd <string>
more <file>
exit <number>
curl <URL> -u <string> -d <string> -d <string> -d <string>
fg
rm -f <string>
wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=<string> --domains <file> --no-parent <URL>
vim
sudo -i
cd <string>
history
lsblk
git add .
git push
cd
ls
sed <directory> - <string>
cd ..
ls
npm
npm i
rm -f <string>
ls
mkdir <string>
find . -empty -type <string> -print -delete
g++ -std=<string> <file> -o <string>
ls
cut -f2 -d,
ls
sudo add-apt-repository <directory>
ufw
sudo <directory> --install -DCMAKE_BUILD_TYPE=<string> -DPYTHON_VERSION=<number> --install-space <directory> -j1
vim <file>
git commit -m <string>
make clean
exit
ls
cd <string>
du -sh <directory>
ls
docker cp <string>
cd <string>
sudo apt-get install -y <string>
vi <file>
code .
chmod u+x <string>
rm -f <string>
sed -i <string>
git status
cd <string>
cat <string>
vi <file>
sudo mkarchiso -v -w <string> -o <string> slim-iso -r
mkdir <string>
npm config set prefix <string>
git commit -m -n <string>
mkdir <string>
pwd
sudo apt-get update
ls
ls
cd <string>
source <directory>
npm run build
ls
rm -rf <string>
vi <file>
export <string>
exit
sed -r <directory> > <file>
ls
cd ..
ls
cat <string>
clear
cat <string>
cd <string>
curl -sL <URL>
cd ..
ssh <string>
alias <string>
env
sudo gpg --dearmor -o <directory>
vim <file>
git please
clear
git status
kubectl get <string>
ls
find . -name <string> -type <string>
ls
ln -s <string>
print -P <string>
sudo apt-get install <string>
bash <file>
clear
git add <string>
git remote add origin <URL>
npm install jquery --save
npm install <file> --save
python3
git status
cd <string>
touch <string>
git clone <URL>
sh -c <string>
ls
cp <string>
ls
pwd
npm install <string>
sort -n
ls
ls
cd <directory>
clear
cd <string>
sync
cd <string>
git status
bash <file>
fg
cd ..
cd <string>
cd <string>
git clone <URL>
git push
cd..
cd <string>
ls
ls
rm <string>
git branch --no-color <string> <directory>
ls
npm install querystring --save
ls
cat -n <string>
git commit
git commit -m <string>
su
apt install <string>
ls
export <string>
ls -la
ls
cd <directory>
ls -l
npm install -g <string>
ls
rm -r <string>
cd <string>
tar -xvf <file>
git merge <string>
python3 <file>
exit
ls
ls
cp -r <directory>
grep <string>
cd -
ls
fg
top
ls
python3 <file>
fg
ls -al
ls
cd <string>
exit
cd <string>
awk <string>
sudo xbps-install -Su
source <string>
cron status
ssh dirlic@10.18.0.39 -p <number>
su
sed -i -e <string>
sudo sed -i <directory>
timedatectl
sudo nmcli con mod <string> <string>
exit
npm install <string>
cd ..
npm start
cd <string>
cd
git commit -Am <string>
npm install
source <file>
ls
mv <string>
apt-get upgrade
git add <string>
git status
clear
exit <number>
sudo apt update
curl -T <directory> <string>
git status
ls
chmod <number> <string>
sudo apt install <string>
sudo nano <directory>
git commit -m <string>
cd <directory>
rm -f <string>
dpkg -L <string>
cd <string>
rm <string>
cd <string>
ls
cd <string>
cat <string>
ls
vim <file>
ls
which <string>
ls
git commit -m <string>
rm <string>
nano <file>
sed -i <directory>
git rm <string>
cd <string>
cd <directory>
git lfs <string>
ps ax
tail -f <directory>
man <string>
git pull
cd ..
git commit -m <string>
cd
tail -1)
ls
git pull
git commit -m <string>
rm -r <string>
ls
sudo apt install wget -y
python3 <file>
sudo fallocate -l <string>
find . -print
ls
vim <file>
sudo shutdown -h <string>
apt-get install -y <string>
git add .
sudo apt -q -y <string> --no-install-recommends <string>
less <string>
git merge develop
ls
gsettings set <file>
rm -rf <string>
cd ..
sudo systemctl start <string>
grep -Fi -m1 <string>
cd <string>
read -p <string>
git commit -S -m <string>
cd <string>
date <string>
vi <file>
sudo yum install docker -y
vi <file>
ls
sudo docker rm corrade
git log
git add .
sudo -E <string> -
ls
bash <file>
rm <string>
ls
git commit -m <string>
ls
sudo usermod -aG <string>
ls
sudo apt-get install <string>
then\
vim <file>
ls
nano <string>
bash <file>
rm
git co HEAD .
ls
clear
mv -v <string>
grep <string>
ls
git status
vim <file>
sudo visudo
git stash list
source <string>
sudo cp <string>
fg
find . -type <string> -size <string> -delete
git status
git diff
docker-compose up -d --build
ruby
pwd
reboot
ls
grep <string>
cd <string>
git config --global <file> <string>
ls
clear
free
ls
ls
git status
cp <string>
cd ..
cd <string>
git add <string>
sudo wget <URL>
cat <string>
cd <string>
mv <string>
sudo sed -i <directory> <file>
sudo vim <file>
ls
ls
exit
ls
find . -name <file>
git status
chown -Rv <string>
git init
ls
git add .
git push -u <string> master
cd <string>
cd <string>
python3 -m <string> venv
rm <string>
ls
sudo add-apt-repository --yes --update <directory>
clear
docker ps
cp <string>
more <file>
xargs -L1 <string>
cd <directory>
vim <file>
sudo sed -i <directory> <file>
exit
ls
cd <string>
tail
npm install <string>
ls
clear
npm install swiper --force
sudo mkswap <directory>
ls
rm <string>
locate <string>
ls
ls
sed -ri <string>
cd ..
grep <string>
mv <string>
rm <string>
ls -la
vim <file>
sudo systemctl reload <string>
sort -Rz
tmux set-window-option -g <string>
ls
<directory> <string>
python3 <file>
cp <string>
ip route add -net <string>
ps
cd ..
sed <directory>
npm uninstall
git remote add origin <URL>
ssh dirlic@10.18.0.39 -p <number>
shutdown -h <string>
history -r <string>
cp <string>
<directory> <directory>
clear
fg
cd <string>
ls
sudo apt-get install <string>
grep -v <string>
ls
vi <file>
ls
cp <string>
cd <string>
ls
man <string>
install <string>
dotnet <string>
python3 <file>
rm <string>
cd <string>
tail -f <directory>
ssh dirlic@10.18.0.39 -p <number>
git commit -m <string>
fg
vi <file>
sudo apt-get install <string>
cd <string>
ls
kubectl rollout status deploy eventing-webhook -n <string>
wget <URL>
wc -c <file>
cd ..
cd ..
vim <file>
cd ..
less
ping <string>
docker-compose down
git status
clear
ls
done
git diff
fg
cd..
ls
done
rm <string>
clear
history
source <file>
cd <directory>
vim <file>
cd <string>
cd <string>
rm <string>
ps -ae
git add <string>
git commit -m <string>
grep <string>
tail <file> -n <number>
ping <file>
ls
ls
git push
sudo apk add <string>
cd <directory>
export <string>
git add .
sudo start uwsgi
source <file>
touch
find . -name <file>
sudo bash -c <string>
ruby -e <string>
find . -empty -type <string> -print -delete
docker exec -it <string>
ls
ln -s <string>
sudo <directory> <string>
cd <directory>
ls
docker kill <string>
vim <file>
history # shows command line history
git pull origin <string>
git stash pop
ls
sudo su
ls
git push -u <string> master
export <string>
unset <string>
rm -rf <string>
cd <directory>
exit <number>
git stage
cd
df -h
ls
git add <string>
cd <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
sort -u
ls
man <string>
cat <string>
cd
rm -r <string>
cd ..
source <directory>
ls
npm i <string>
vi <file>
cd <string>
sudo systemctl enable <string>
docker images
ls
clear
git push -u <string> master
git status
rm <string>
screen -r <string>
git pull origin master
clear
fg
exit
rm -rf <string>
npm i
ls
git reset <string>
vim <file>
sudo nvidia-xconfig --enable-all-gpus
clear
top
top
git push origin master
cd <directory>
systemctl stop <string>
ls
sudo -i
curl -sSL <URL>
cd <string>
docker run -d -p <string> --name <string>
sort -n -r
cd ..
git add -A
wget <URL>
cd <directory>
git add <string>
cd <string>
python3 -m <string> venv
vim
sudo grub-mkconfig -o <directory>
exit <number>
ls
git push origin main
cd <string>
cd <string>
git commit -m <string>
apt-get update
git init
ls -l
sudo pacman-mirrors -g <string>
git add -A
apt-get update
read -sn <number> -p <string>
fg
sudo sed -i <directory> <file>
vi -t <string>
exit
find . -iregex <string>
npm start
cd <string>
clear
rm -rf <string>
ssh <string>
read -r <string>
cd <directory>
rmdir <string>
rm <string>
cd <string>
exit
vi <file>
yarn <string>
python3 <file>
cd
git push
ls
cpio -p -d -v <string>
npx tsc --init
sudo mkdir <string>
git help -a
git reset HEAD -- <string>
git commit -m <string>
git commit -m <string>
history
ls
sleep <string>
mv <string>
fg
cd <string>
curl -fLo <file> --create-dirs <string>
sudo apt install --only-upgrade <string> -y
cd <string>
git status
docker logs <file>
cd
sudo apt install nginx -y
curl <string>
cd <directory>
git add .
rm -rf <string>
rm -r <string>
git clone <URL>
sleep <number>
cd <directory>
mv <string>
screen -r
docker login
docker image <string>
ansible-playbook -i <string> -c <string> <file>
cd <string>
cd ..
sudo xrandr --output <string> --same-as <string>
git pull
grep * -e <string>
docker run -it --name <string>
cd <string>
git push
cd <directory>
clear
cd
ls
mv <string>
rm -r <string>
cd <directory>
sudo docker kill corrade
git checkout --orphan <string>
cd <string>
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
npm run
grep <string>
docker-compose up -d --build
sudo su
ls
npm audit fix --force
vim <file>
ls
chmod +x <string>
gunzip <file>
cd <directory>
ls
vim <file>
ip a l
cd <string>
cd <directory>
export -f <string>
sudo rm -rf <directory> <directory>
git add .
clear
vim <file>
git remote add origin <URL>
sudo apt-get upgrade
sudo sed -i <directory> <file>
cp <string>
rm <string>
print <string>
python3
ls
cp -R <string>
clear
git status
ls
cd <string>
ls
cd <string>
git status
sudo pacman -S <string>
npx install-peerdeps --global <string>
vim <file>
git init
ls
ls
git push origin master
rm -r <string>
cat <string>
git git init
ls
git stash pop
git add .
curl -LJO <URL>
git diff <string>
sudo ntpdate <string>
vim <file>
time go run <file>
ls
vim <file>
clear
ls
git push -u <string> master
vim <file>
ls
ls
ls
git push
git log
ls
rm -rf <string>
pwd
ls
ls
touch <string>
clear
git init
mkdir <string>
clear
cd ..
git add <string>
export <string>
ls
ls
sudo systemctl enable <string>
unset <string>
clear
tmux kill-session -t <string>
read <string>
ls
vim <file>
sed -E -e <directory>
ls
rm -r <string>
ls --all
git push
ls++ -a
grep -i <string> >files
cd ..
cp <string>
ls++ -a
git stash
cd <string>
cd <string>
ls
docker exec -it <string>
cd ..
ls
clear
mkdir <string>
cd <string>
sh <file>
cd <string>
cd <string>
sudo usermod -aG <string>
ls
grep <string>
tr -d <string>
code
ls
clear
chmod <number> <string>
rm -rf <string>
ls
git status
git init
vim <file>
apt list --upgradable
grep <string>
cd <directory>
sudo pacman -Syu <string>
docker exec -it <string>
exit
cd ..
git push origin master
git status
cd ..
git status
curl -fsSL <URL> -o <file>
ls
tr -d <string>
ip a
source <string>
git push
cd <string>
curl -o- <string> -o- <URL>
ls -C -b
rsync -arv --exclude=<string> <string>
ls
grep <string>
ls
exit <number>
exit <number>
then\
sudo apt-get install <string>
python3 <file>
sudo usermod -aG <string> $USER
cat <string>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
perl -v
git add .
sudo apt -y <string> $(sort -u <string>
clear
git push -u <string> master
vi <file>
sudo poweroff
git log
pacman -S <string>
ls
cd <string>
npm install --save-dev <string>
mkdir <string>
npm start
ssh-keygen -t <string> -C <file>
cd <string>
tar -xfj <string>
docker images
uniq -d <string>
ls
exit
exit <number>
find <string> -name <string> -exec <string> -rf <string>
cat <string>
cd ..
sudo vi <file>
cd <directory>
vi <file>
sudo apt update
sudo lsof -a -i -s <string> -p <string>
cd <directory>
rm -r <string>
cd ..
exit
ssh -T <file>
systemctl stop docker
du -chs <string>
exit
git commit -m <string>
ls
ls
vim <file>
git log --pretty=<string> <string>
ls -l
ls
nc <string>
npm run coverage
ls
ls -alrt <string>
ls -la
cat <string>
mkdir <string>
sudo docker ps
python3 <file>
git commit -m"update"
git push
sudo docker rm corrade
grep -q <string>
ssh <string>
cd <string>
ls
rm -f <string>
cat <string>
ssh dirlic@10.18.0.39 -p <number>
sudo udevadm control --reload-rules
cd <string>
fg
fg
cp -r <directory>
clear
yarn install
sudo curl -L <directory> -o <directory>
git checkout <string>
sh
pico <file>
cd <string>
rm -f <string>
ls
groups <string>
cd
ls
rm -rf <string>
git commit -m <string>
ls -l
netcat <string>
sudo docker ps -a
nano <file>
unzip -c <file>
sudo <directory> restart
cd <directory>
ls
git remote -v
grep -E <string>
ls -l
exit
vim <file>
sudo npm start
git push
mkdir -p <string>
exit
sudo vim <file>
ls
clear
vim <file>
python3 <file>
rsync -avzr <directory>
ls
ls
cd <directory>
git init
ping <file>
sudo apt install -y <string>
sudo apt-get install <string>
top
ls
sudo pip install <string>
exit
rm <string>
cd <string>
git init
ls
cd <string>
nano <string>
sudo nano <directory>
sudo apt upgrade
vi <file>
cat <string>
cd <string>
ssh -t <file> tmux new -As0
git add <string>
ps aux
more <file>
clear
git push
git branch --no-color <string> <directory>
pwd
cd ..
git commit -m <string>
grep <string>
exit
chmod <number> <string>
cd ..
sudo sed -i -e <string>
ls
ls
cd ..
cd <directory>
vi <file>
ls
clear
cd <string>
npm start
ls
ls -lh
cd <directory>
ls
git fetch
cd <directory>
fg
vi <file>
cd <directory>
sudo setxkbmap -layout <string> -variant <string>
ls
df -h <string>
cat <string>
cd <string>
exit <number>
ls -lart
ls
vim <file>
cat <string>
cd <string>
ls -la
vim <file>
vim <file>
sudo -H <string> install -U <string>
ls -ls
<file> program
chmod <string>
ls
ls -l
ls -a
sudo vim <file>
git push <URL> <string>
ls
git status
unset <string>
ssh <string>
cd <string>
git commit
ls
cd <directory>
vi <file>
npm run start
git push
git init
ping <string>
cd ..
sudo docker ps -a
sudo apt-key add
git push
ls
cd
ls
npm start
clear
docker ps -a
sort
sudo pacman -Ss <string>
vi <file>
chmod <string>
sudo systemctl restart <file>
ls
git push
source <directory>
hostname
ls
ip addr
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ssh <string>
ls -la
git log
vim <file>
cd ..
git commit -m <string>
ls
ls
cd <directory>
exit
cd <directory>
docker ps --help
git rm --cached <string>
git add <string>
fg
ls
sudo npm start
docker pull <string>
grep <string>
git pull origin master
git status
exec perl -pe <string>
sudo python <file>
cp <string>
cd <string>
su - <string> -c <directory>
git checkout <string>
cd
sed <directory>
ls
ls
cd
clear
git checkout <string>
apt install <string>
cd <string>
v -
export <string>
rm -rf <string>
history
rm -rf <string>
git clone --depth <number> <URL>
done
cd <string>
sudo sed -i <directory> <file>
chmod u+x <string>
sudo install -m <number> -d <directory>
vi <file>
exit
cd <string>
grep <string>
git pull
ls
chmod <string>
clear
cd <directory>
git status
clear
git clone <URL>
sudo rm -r <string>
sudo docker images
grep <string>
docker-compose logs
top
ls
cat <string>
git branch -a
ls
sed -n <string>
ls
ls
cd <string>
mkdir <string>
cd ..
git status
ls
exit <number>
git add <string>
cd <string>
npm run test
cd
git get-content -path <file>
git branch
git clone <URL>
sudo sed -i <directory> <file>
vi <file>
exit <number>
nano <file>
ls
cd <string>
sudo pacman -S <string>
ls
exit <number>
ls
git pull origin master
sudo apt-get update
gsettings set <file> <string>
grep -wirl -C <number>
chmod +x <string>
sudo apt purge -y <string>
cd <string>
cd
cd <string>
cd <string>
sudo apt update
git fetch origin\
git push
ls
cd <string>
diff <file> <file>
cd <string>
git status
sudo nano <directory>
vi <file>
ls
mv <string>
sudo python3 <file>
git remote add origin <URL>
git pull
mv <string>
clear
clear
sleep <number>
cd <string>
git commit -m <string>
git clone <URL>
grep -Ev <string>
sudo su
grep -i <string> >files
ls
vi <file>
pwd
history -a
git push
git commit -m <string>
fg
cp -r <directory>
rm -rf <string>
ls
clear
exit
git add <string>
ls
cd <directory>
ls
perl <file>
rm <string>
ls
git add <string>
git checkout <string>
git status
npm install -g <string>
ls
sudo docker rm <string>
curl <string>
ls
exit <number>
git add <string>
cp -R <string>
ls -la
cd <string>
exit
set
git checkout master
bash
ls
sudo sed -i <directory>
git status
done\
cd <string>
cd
which <string>
cd <string>
git status
ls
find <directory> -mindepth <number> -delete <string>
yay -S <string>
cd ..
cd <string>
git stash pop
git push -u <string> master
rm rm -r <directory>
export <string>
mkdir <string>
git config --global <file> <string>
cd ..
ssh -L <string> -N -f -l <string> <string>
rm <string>
git cat-file -p <string>
touch <file>
exit
sudo journalctl -u <file>
clear
clear
cd <directory>
cd ..
ls
sudo find <directory> -iname <file>
xrandr
cd <string>
sudo adduser `id -un` <string>
git reset --soft <string>
git diff
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
cd <string>
rm -f <string>
cd
cd <string>
cd ..
cd <directory>
unset color_prompt force_color_prompt
pwd
cd <string>
pwd
cd <string>
telnet -tulpn
git commit -am <string>
sudo docker rm corrade
vi <file>
cd <string>
git push
vi <file>
git commit -m <string>
vim <file>
git rm -f --cached <string>
cd ..
vim <file>
git pull
ls
git status
ls
sleep <number>
ls
ip a
rm -f <string>
cd <string>
sudo nmcli <string>
mv <string>
sudo chown <string>
ls
cat <string>
exit
git push origin2
cd <string>
vi <file>
ls
cd <directory>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
cd <directory>
npm run start
vim <file>
ls
docker tag <string>
git add <string>
ls
ls
npm install --save <string>
ls
cd <string>
cd <string>
cd <string>
python3 -m <string> venv
vim <file>
sudo add-apt-repository <directory> -y
cat <string>
docker-compose logs
less <string>
git pull -u <string>
git remote add upstream <string>
rm -rf <string>
mv <string>
cd <string>
rm -rf <string>
ls -las
npm test
ls -la
ls
vi <file>
ps -u <string> # lists your processes
sudo rfkill <string>
sudo dnf update
git add -A
vim <file>
read -rp <string> <string>
exit <number>
ls
ls
sort -n
top
sed <directory>
git commit -m <string>
fg
rsync -a <string>
diff <file>
ls
curl -X <string> <URL> -d <string> -d <string> -d <string>
nano <file>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
cd ..
npm install
ls
rm -i <string>
history
npm test
cp <string>
uname -a
ls
ls
ls
cd ..
git reset --hard <string>
chmod <string>
wget <URL> -O <file> --no-check-certificate
rm <string>
cd <directory>
sudo python3 <file>
cd <directory>
else\
cd ..
sudo apt-key add -
chmod +x <string>
npm run build
ss -a
git clone --depth=<number> <URL> <directory>
cd <string>
curl -k <URL>
man <string>
npm run build
git add <string>
cd <directory>
clear
git push -u --force <string>
ls
sudo vim <directory>
git remote add origin <URL>
mkdir -pv <directory>
npm i
mkdir <string>
ls
sudo addgroup <string>
vim <file>
ls
ls
ls
git pull origin main
cd ..
ls
grep <string>
cd <string>
python3 <file>
source <string>
do\
vim <file>
cd <string>
vim
clear
ls
cd
cd <directory>
cd <directory>
rm -rf <string>
git checkout <string>
exit
cd <string>
vim <file>
tail -f <string>
yarn <string>
mv <string>
sudo swapoff <directory>
ls
vi <file>
find . -size <string>
cd <directory>
cd -
vi <file>
rm -f <string>
python3 <file>
git remote set-url origin <string>
cd ..
ls
vim
sudo systemctl enable <string>
git status
git push -uf <string>
grep -o
git init
cd <directory>
git branch -M <string>
cd <directory>
cd ..
tmux ls # <string>
vim <file>
cd <string>
cat <string>
curl --proto <string> --tlsv1.2 -sSf <URL>
exit <number>
rm <string>
ls
docker-compose logs --follow <string>
more <file>
ssh -i <string>
chmod +x <string>
ls
ls
ip route <string>
ls
apt-get update
sudo rm exit
ls
done
ls
vim <file>
clear
cd ..
git add <string>
pacman -S <string>
rm -r <string>
ls
ssh-add <directory>
vi <file>
cd
vim <file>
git push
ls
git status
exit <number>
fg
vim <file>
vim <file>
exit
ps
ls
ls
source <string>
ls
git push -u <string> master
cd <string>
read -p <string>
clear
nano <file>
npm run test
mkdir <string>
git add <string>
more <file>
ls
git status
cd <string>
cd <string>
ssh -X <string>
ls
ls
cd <string>
ls
clear
git branch
sudo partprobe <directory>
hwclock -s
git gc --aggressive --prune
clear
git pull
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git clone <URL>
ls -l
git config --global <file> <string>
cd <string>
date
curl <string>
clear
exit
git push -u <string> main
mkdir <string>
cd <string>
git push -u <string> master
curl -sfSL <URL>
ls
clear
cd <string>
clear
sudo uftrace <file>
clear
cat <string>
sudo chmod a+x <string>
rm <string>
grep -vf <file>
sudo shutdown -r <string>
cd <directory>
mv <string>
git status
cd <string>
git remote set-url origin <string>
python3
awk <string>
sleep <number>
npm http GET <URL>
cd <directory>
wget <URL>
cd
cut -d <string> -f <number>
ls
exit
ls
exit
ssh <string>
git commit -m <string>
setg RHOSTS <file>
ln -sf <directory>
ls
git status
cd <directory>
curl <string>
git commit -m <string>
sudo pacman -Ss <string>
clear
clear
fg
history
cat <string>
npm install <string>
git push -u <string> master
cp -r <directory>
rm <string>
nano <file>
mv <string>
docker tag <string>
ls
rm -rf <string>
ls -la
cd ..
cd ..
clear
ls
npm install
export <string>
cd <string>
python3.11 <file>
ls
ls
top
clear
rm <string>
ls
exit <number>
cd ..
git
sudo apt-get update
sudo reboot
mkdir <string>
ls
ls
cd <directory>
rm -r <string>
ls
time go run <file>
vim
git commit -m <string>
ls
clear
git add .
git pull
find . -name <directory> -type <string> -prune -exec <string> -rf <string>
date
mv <string>
sed <directory>
cd <directory>
cd <string>
cd
git push
ls
grep -v <string>
git status
git push -u <string> master
grep <string>
git rm --cached -r
sudo udisksctl unmount -b <directory>
curl <URL> -u <string>
ls
cp <string>
sudo mkdir -p <directory>
git add .
cut -d" <string> -f2-4\
ls
vim <file>
ls
vim <file>
git status
chmod <number> <string>
cut -f <string> -d <string>
open <string>
read -n1 -r <string>
cd <string>
mkdir <string>
cd <string>
git status
git push
git filter-branch --prune-empty --subdirectory-filter <string>
vim <file>
ls
git add .
gpg --verify <file>
ls
cd <directory>
sleep <number>
clear
chmod -x <file>
sudo python <file>
sudo sed -i <directory> <file>
exit
git clone <URL>
clear
code <string>
ls
cd <string>
vim <file>
bash <(wget -qO- <URL>
git rebase -i <string>
ls
sudo su
mv <string>
ls
ls
cd <string>
exit
pwd
rm -f <string>
git add .
ls
ls
ls
python3
vi <file>
ls
done
vim <file>
vim <file>
sudo stop uwsgi
file <string>
ls
vi <file>
ls
sudo nvim <directory>
read -r -a <string>
mount --types <string> overlay --options=<string> <directory>
vi <file>
sleep <number>
ls
cat
ls
python3 <file>
bash
mkdir <string>
cp -r <directory>
vim <file>
cd <string>
cut -d',' -f2 <file>
cd ..
vim <file>
mkdir <string>
exit <number>
git add .
cd <string>
mv <string>
clear
sudo chmod u+x <file>
ls
sudo python <file>
ls # lists your files in current directory, ls <dir> to print files in a specific directory
ps aux
find . -name <file>
curl --location <directory>
git commit -m <string>
sudo reboot
ls
systemctl restart <string>
ls -lrt
clear
git pull
git add <string>
shutdown
tail -f <file> --lines=<number>
rm -rf <string>
cd ..
git commit -m <string>
git add <string>
git remote add origin <URL>
rm -r <string>
ls
sleep <number>
touch <string>
cp -r <directory>
nano <file>
fg
cd ..
git commit -m <string>
top
mount
ls
git commit -m <string>
source <string>
git checkout -b <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
cat <string>
sudo apt-get install <string>
vi <file>
git remote add origin <URL>
clear
mkdir <string>
git add .
read <string>
vim <file>
cd ..
ls
vim <file>
cd <string>
type -a <string>
ls
cd ..
vi <file>
git co HEAD <directory>
cd <directory>
cd <directory>
ls
cd <string>
docker-machine env
sudo poweroff
cd <string>
cd <string>
curl -k <URL>
ps -ux
tail -f <directory>
find . -type <string> -a <string> -name <file> -o -name <file>
dialog --begin <number>
ls
curl -X <string> -d <string>
ls
cd <directory>
git checkout <string>
docker-compose up -d
unset color_prompt force_color_prompt
else\
clear
ls -a
clear
sudo systemctl stop <string>
cd <directory>
ls
git push
ls -ltrd <string>
killall <string>
sudo apt-get --purge -remove <string>
sudo yum install vim nano tree -y
read -s -p <string>
wget
ls
git submodule init
unzip <file>
ls
rm <string>
df -h <string>
git init
grep <string>
exit
nano <string>
ls
sudo supervisorctl status
git pull
ls
more <file>
git checkout <string>
kubectl exec $NEXUS_POD -- <string> <directory>
sleep <string>
sudo apk add <string>
exit
git init
scp <string>
exit
wget -r <URL>
ls
git pull
exit
git stash list
git commit -m <string>
sudo apt-get upgrade
git remote add origin <URL>
ls
tmux set-option -g <string>
cd <directory>
git log
rmdir <string>
ls
cd
ls
git add <string>
cd <string>
ls
find . -size <string> -a -exec <string> -f <string>
vim <file>
vim <file>
apt-get install <string>
add-apt-repository <directory>
sort
cp <string>
git clone <URL>
sed -i <directory>
ls
bash -l
sudo nano <directory>
git filter-branch --force --index-filter <string> --prune-empty --tag-name-filter <string> -- --all
sudo apt-get update
sh <file>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
sudo vi <directory>
npm run start
cd <string>
ls
ls
ls
exit
git push origin main
cd <directory>
man <string>
git add <string>
exit <number>
tail
git status
chmod u+x <string>
ls
git add .
cd ..
ls
ls
cd ..
cd ..
<directory> <string>
git commit -m"first"
exit
sort -u
grep -i <string>
ls
sudo pacman -Rsn <string>
git commit -m <string>
git clone <URL>
git push
git log
sed -i <string>
ls
ls -l
vi <file>
xcode-select --install
cd ..
git push -u
sudo pacman -S <string>
cd <string>
sudo python <file> --cascade=<file> <number>
clear
sed -i <string>
git add <string>
clear
exit
cd <string>
git status
npm run build
brew update
ls
locate <string>
fg
wc -l
vim <file>
ls
ls
git fetch
grep <string>
<directory> <string>
ls
cd <string>
python3 <file>
find -name <string>
cat <string>
docker push <directory>
exit
cd <directory>
mv <string>
fg
unset <string>
sudo apt-get install <string>
find <directory> -type <string> -name <string>
journalctl -xe -b <number>
cd <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
df -lh
ssh <string>
ps
cp <string>
git init
ls -l
cd <string>
git add .
vi <file>
ls
rm -rf <string>
cp -v <string> <directory>
ls
sudo apt-get install -y <string>
env
ls
cd <string>
cd <directory>
sudo poweroff
less <string>
git add <string>
ls
cd <string>
rake <string>
clear
exit
git log
cp -r <directory>
fg
ls
zgrep -i -E -o --no-filename <string>
chmod +x <string>
ls
git commit -m <string>
dir
python3 <file>
read -p <string>
cd ..
sudo apt-add-repository <directory>
rm -r <string>
vi <file>
git lfs <string>
cd <directory>
git diff
sed -i <directory>
cd <string>
vi <file>
cat <string>
cd ..
cd <directory>
exit
cd
cd ..
cd <directory>
ls
ps axfu
ls
ls
sudo fail2ban-client <string>
mv -f <string>
vi <file>
ls
python3 <file>
ln -f <string>
cd <directory>
ls
screen
cd
sudo apt-get install <string>
ls
ls
ls -la
sudo mkdir -p <directory>
vi <file>
bash <file>
sudo ufw status
cd <string>
ls
clear
ls
sudo enable ufw
cd <string>
git diff
ls
sudo python3 <file> install
node <file>
find . -name <file> -print
mkdir -p <string>
git checkout <string>
fg
vi <file>
clear
awk <string>
ls
ls
git log
clear
git push -u <string> main
git add .
grep -i -E -o <number>
cd <directory>
git add .
ls
ps
clear
ls
cd <string>
wc -l
cd <directory>
cd <string>
ls
find . -type <string> -exec <string> <directory> {} +
tar -zxf <file>
chmod +x <string>
curl <string>
cd ..
grep <string>
apt-get install <string>
git add <string>
cd <string>
cd
ssh <string>
mkdir <string>
cat <string>
history
sudo apt-get -y <string>
exit
diff <file>
mount --types <string> overlay --options <string>
cd <string>
wget <URL>
git init
git revert <string>
cd <directory>
exit
mkdir <string>
ls
git pull
git commit --amend --reset-author
cd <string>
fg
clear
ls
ls
vim <file>
systemctl restart <file>
stat -c <string>
rm -r <string>
ls
find . -iname <file>
pwd
wget <URL>
nano <file>
cp -ru <directory>
vim <file>
vi <file>
touch <string>
cd <string>
cd -
ls
clear
exit
nano <file>
ls -la
git push -u <string> master
cd <string>
git push
rm <string>
ls
alias <string>
npm install
tr <string>
ls
sudo chmod <number> <string>
ps -ef
grep -v <string>
ls
git push
ls
vi <file>
ls
git init
vi -t <string>
ls
cd <directory>
ssh <string>
sed -e <directory>
git status
ls -alF
curl --help
sudo usermod -a -G <string> <string>
less <string>
cd <string>
history -c
python3
vi <file>
git add .
diff <file>
cd ..
npm install <string>
find . -name <string> -type <string>
source <file>
cd <string>
sudo lvremove <directory>
sudo apt install <string>
ls -la
git push --set-upstream <string> main
git remote -v
ls
git commit -v
git pull origin master --allow-unrelated-histories
ls
fg
cd <string>
vim <file>
openssl genrsa <number>
cd <string>
rg <string>
cd <string>
git status
grep -Ev <string>
du
cd <string>
wget -r <URL>
cd <string>
cd <directory>
mkdir -p <string>
git push
git commit -m <string>
clear
cd <string>
cd <directory>
file <string>
ls
vi <file>
git status
exit
git status
ls
ls -l
unset color_prompt force_color_prompt
grep -F <string>
ls
cd <string>
ls
yarn <string>
ls -a
ls
cd <directory>
cat <string>
clear
git status
docker rm --force <string>
mv <string>
python3 <file>
clear
git fetch origin\
vim <file>
sudo apt-get update
cd <string>
git push
git add <string>
git commit -m <string>
npm run dev
ls
ls -alrt <string>
cd <directory>
vim <file>
mkdir <string>
clear
clear
clear
cd <string>
ls
curl <string>
npm i <string>
ls -la
cd <string>
cd <string>
ls
sudo python <file> --cascade=<file> <number>
cd <string>
git pull
cd
cd <string>
rm -rf <string>
git rm -rf --cached <string>
git add -A
find
ls
find . -empty -type <string> -print -delete
ls
git init
cd ..
git add -A
apt-get install <string>
git remote add origin <URL>
ls
ls
cd <string>
sudo service nginx restart
head
python3 <file>
git checkout master
xargs -L1 <string>
ls
sudo rsync -av --progress <directory>
vim <file>
rmdir <string>
ls
git checkout <string>
sudo mkdir -p <directory>
ls
LANG=<string> rpm -qp --queryformat <string>
chmod +x <string>
ls
ls
ls
git add .
ls
fg
vim <file>
ls
nano <file>
ls
exit
clear
mkdir <string>
cd <string>
git push -u <string> master
git push
python3 <file>
ls
ls
cd <directory>
npm start
rm <string>
cd <directory>
ls -al
sudo sgdisk --new=<string> --typecode=<string> --change-name=<string> <directory>
apt update
cd <string>
git switch <string>
ls
python3 <file>
chmod <number> <string>
cd <directory>
rm <string>
git reset HEAD^
sudo update-alternatives --config <string>
sudo python <file>
git init
git branch -M <string>
vi <file>
cd
sed <directory>
git remote add origin <URL>
wc -l
ls -la <directory>
git pull
cd
ls
git status
python3 <file>
git add .
ls
clear
cd
unset <string>
then
git add <string>
ls
ls -al
git commit
git status
ls
sudo sed -i <directory> <file>
ls
less <string>
git st
sudo apt-get update
cd ..
ls
ls
npm run register
vim <file>
ls
git branch
git add .
git rebase <string>
man <string>
ls
cat <string>
git commit -m <string>
export <string>
ls
git commit -m <string>
chown --help
ls
cd <string>
exit
ls
ls
unset color_prompt force_color_prompt
git add .
vim <file>
sort -k3 <string>
clear
cp -v -t <directory>
rmdir <string>
cd <string>
cd <string>
command -v <string>
ls
sed -i <directory>
ls
read -s -n <number>
ls
rm -rf <string>
git push origin
git clone <URL>
ls
tar -xzf <string>
cd <directory>
exit
clear
cd ..
clear
git diff
git rm --cached <directory> -f
git add <string>
vim <file>
git commit -m <string>
ls
git add <string>
ls
ls
ls
grep <string>
ls -a
clear
git status
ls
sudo snap install <string>
git add .
docker push <directory>
ssh-copy-id karen@10.87.111.34 -p <number>
git commit -m <string>
cd <directory>
cp <string>
grep <string>
rm -f <string>
rm -rf <string>
clear
git commit --amend
cd <string>
chmod u+x <string>
cat <string>
npm install -g <string>
curl -sS <string>
ls
sh
unzip <file>
clear
ls -a
git rm <string>
curl -sS <string>
pulseaudio --start
git stash apply <number>
tar xz --xform <directory>
code
cd <string>
git add .
clear
git pull
vi <file>
cd <directory>
fg
ln -s <string>
wget <URL>
ls
apt-get update
find .
sudo apt-get install google-chrome-stable -y
done
exit <number>
find -mindepth <number> <file>
sudo apt-get install <string>
git status
git pull origin master
sed -n <string>
npm install <string>
ls
git init
rm -f <string>
ls
cat <string>
cd
clear
docker exec -it <string> bash
chmod <number> <string>
ls
git add .
sudo nmcli con <string>
cat <string>
kill -9 <number>
ls
ls
apt-get update
cut -d'\' -f3 <file>
chmod u+x <string>
apt-get autoremove
git commit -m <string>
find <directory> -maxdepth <number> -mindepth <number> -type <string>
cd <directory>
cd <directory>
git init
touch <string>
ls
sudo apt-get install <string>
ls
vim <file>
tar xvf <file>
git push -u <string> master
curl <URL> -o <directory>
man <string>
rm -rf <string>
cd <string>
npm install <string>
ls
sudo apt-get update
cd <string>
ls
sudo cd root
cat <string>
cd ..
git commit -am <string>
awk <string>
touch <string>
vi <file>
ls
history
then\
git commit -m <string>
cat <string>
exit <number>
ls
cd <string>
grep <string>
ls
sudo systemctl restart <string>
cd
sudo dnf install <string>
exit
dir
cd ..
less
unzip <file>
git commit -m <string>
sudo modprobe <string>
ls -la
cd <string>
cd ..
reboot
ls
cd <string>
cd <string>
chmod <string>
cd ..
fg
rm -r <string>
docker-compose logs
sudo mysql -u <string> -p
vim <file>
sudo pip install <string>
exit <number>
sudo nano <directory>
git commit -m <string>
cd ..
sed -i <directory>
sudo openvpn --config <directory>
sudo motion -n
cd <string>
git clone <URL>
cd ..
grep <string>
git clone <URL>
<directory> -m <file>
git clone <URL>
cd <string>
export <string>
cd <string>
ls -ltr
vim <file>
git remote add origin <URL>
git add .
sudo sed -i <directory> <file>
npm install --save <string>
docker-compose up -d --build
cd <directory>
clear
apt-get -y <string> <string>
cd <directory>
vim <file>
ls -la
cd
sudo rm -rf <string>
ps -auxwf
apt list --upgradable
ls
clear
pwd
clear
git add .
ls -a
git clone <URL>
sudo sed -i <directory> <file>
cd ..
git commit -m <string>
wget -r <URL>
setg RHOSTS.*
git remote add origin <URL>
fg
git config --global <file> <file>
vim
sudo pacman-key --refresh-keys
cd <string>
tmux send-keys -X <string>
ls
cd ..
git push -f <string> <string>
ps -aux
clear
curl <string>
sudo sed -i <directory>
ls
ls
git clone <URL>
fg
nano <file>
cd ..
ls
find <directory> -type <string> -execdir <string>
cd <string>
ls
cd <string>
vim <file>
sudo systemctl start <string>
git add .
sed -E -e <directory>
clear
nano <file>
do\
ls
git status
git init
git add .
exit
sudo pacman -Ss <string>
ls
npm run build
git add .
sudo rm -r <string>
vim <file>
ls
ls
curl --silent <string>
cd <directory>
rm -rf <string>
touch <string>
cat <string>
ls
exit <number>
git status
git co master
git remote add origin <URL>
cd <directory>
python3 <file>
git add <string>
cd <string>
ls
cd <directory>
tail -f <directory>
sudo nano <file>
cp <string>
tail -f <directory>
ls -lhrt
cd ..
vim <file>
vi <file>
git add <string>
ls
ls
exit
yarn
git stash
python3 <file>
cd <directory>
git diff <string>
cd <string>
find . -print -exec <string>
rm <string>
git pull
ls
clear
grep <string>
chmod <number> <string>
cat <string>
then\
lsblk
touch <string>
rm -rf <string>
exit
ping <string>
ls
git push
ls
ssh <string>
cd
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE <string>
cd <string>
ls -la
cd <string>
ls
sed -i <directory>
cp <string>
cd <directory>
vim <file>
ls -la
node <file>
exit
exit
cd <string>
ls
cp <string>
rm -rf <string>
top
sudo apt install <string>
a ! href <string>
exit <number>
du -sh
cd <string>
mkdir <string>
sed -i -e <string>
sudo chmod +x <string>
mkdir <string>
git checkout <string>
cd ..
tmux a -t'attributes'
ls
pwd
vi <file>
git push
history -a
ls
cd ..
ls
ls
ls
sh <file>
git clone --recurse-submodules
sudo python <file> --cascade=<file> <number>
git clone <URL>
ls
sed -E -e <directory>
ls
sudo pip3 install <string>
touch <file>
ping <string>
sudo docker ps
su
vim <file>
clear
perl <file>
fg
cat <string>
code
unset <string>
openssl version -a
find . -name <file>
cd <directory>
exit
git commit -m <string>
sudo sed -i <directory> <file>
clear
wget -q -O <file>
rm -rf <string>
ls
sudo node <file>
git log --oneline --decorate=<string>
fg
clear
sudo ls <directory> -a
vi <file>
ls
git clone --depth=<number> <URL> <directory>
ls
git commit -m <string>
git status
clear
ls
find $BACKUP_ROOT -name <string> -mtime <string> -delete -print
rm -rf <string>
cat <string>
cd <string>
rm -rf <string>
git tag <string>
python3 <file>
nano <file>
sudo pacman -S <string>
git add .
git chekout <string>
git show --pretty=<string> --name-only <string> <string>
ls
cd <string>
grep <string>
find . -type <string> -name <string>
docker volume ls
sudo aptitude install <string>
history -c
vi <file>
clear
ls -la
exit
git fetch
exit
ls
cat <string>
git init
ls
cd <directory>
ls
ls
git push -u <string> master -f
find <directory> -iname <file> -o -iname <file>
chmod +x <string>
rm -rf <string>
rm -r <string>
clear
rm -rf <string>
vi <file>
cut -d' <string> -f <string>
rm -rf <string>
shutdown -h <string>
ls
ls
sudo poweroff
vim <file>
npm start
ls -a
sudo nmcli con <string>
cd <string>
git status
bash <file>
print <string>
git init
cd <string>
docker login
git checkout <string>
cd <string>
env
exit <number>
sudo lvremove <directory>
python3 <file> -sI <string> -sM <string> -dM <string> -dI <string> -
curl -sSL <URL>
screen
cd
sudo dnf update -y <string>
service <string>
cd <string>
grep -n <string>
sudo python2 <file> --cascade=<file> <number>
sudo cat <string>
killall <string>
ls
ls
git reset <string>
cd <string>
pwd
find . -name <string> -exec <string> -Dm644 <string>
vim <file>
ls
cp <string>
git pull
vi <file>
git init
cd <string>
rm -rf <string>
fg
cd ..
fg
rm <string>
ls
docker rm <string>
ls
rm <string>
vim <file>
killall <processname> # kill all processes with the name
cat -n <string>
chmod <string>
grep -i <string>
python3 -m <string> --version
git add <string>
sudo rm -rif <string>
ls
mkdir <string>
vi <file>
sh
exit <number>
killall <processname> # kill all processes with the name
cd <directory>
cd <string>
sed -e <directory>
ls
sudo apt-get install <string>
python3 <file>
exit
cat <string>
cd <string>
find . -name <file>
grep -i <string>
ls
sudo nano <file>
ls
cd <string>
sudo apt install <string>
clear
clear
ls
git pull
ls
chsh -s <directory>
sudo bash <string>
grep -E <string>
ls
cd <string>
tar -xvf <file>
vi <file>
ls
mkdir <string>
print <string>
git remote -v
cd <string>
ls
cat <string>
exit <number>
tail <file> -n <number>
systemctl status <string>
cd <directory>
ls
cd <string>
cd ..
cd ..
sudo apt upgrade
chmod -x <file>
cd ..
vim
ls
exit
cd <directory>
ls
tmux source-file <file>
vim <file>
vim <file>
git config --global <file> <file>
cd <string>
ls
exit <number>
sudo python3 <file>
sudo pacman -S <string>
cp <string>
python <file> runserver 0.0.0.0:2016
git status
vi <file>
ssh-keygen -t <string> -C <file>
git status
grep -i
sed -e <directory> -e <directory>
cd ..
exit
vi <file>
sudo dpkg -P <string>
rm -rf <string>
vim <file>
cd <string>
cd
service apache2 restart
touch <file>
rm -f <string>
cd <string>
git diff
cd ..
cd <string>
fg
git commit -m <string>
perl <file>
rm -r <string>
ls
git add .
exit <number>
git push origin
kubectl exec -it <string> -- <string> <string>
sudo cat <string>
sh
ls
clear
sudo docker ps
git commit -m <string>
ls -ltr
git pull
sudo apt-get update
clear
cd <string>
cd <directory>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
sudo flatpak override --system --env=<string> <file>
yarn add <string>
git push origin master
ls
git show origin -v
cd <string>
ls -alrt
ls
rm -rf <string>
sudo vim <directory>
ls
exit
cd <string>
rm -f <string>
sudo npm install --save-dev <string>
sudo vim <directory>
git status
git add .
sudo apt-get install <string>
grep
ls
npm install
wget <URL>
ssh-keygen -t <string> -C <file>
ls
cd
ls
clear
sudo install -Dm755 <string>
vi
cd <string>
ls
code .
rm -rf <string>
curl <string>
ls
cd ..
cd <string>
ls
ls -l
ls
vi <file>
vim <file>
curl -LSso <file>
time <string>
ls
git status
cat <string>
clear
vim
cd <directory>
cd <directory>
git submodule add <URL>
ls
wget -q -O <file>
git push
git log --oneline
xargs -n2 <string>
exit
grep -w <string>
exit <number>
grep -v <string>
vim <file>
git rm <string>
sudo apt install <string>
ls -la
exit
git commit -m <string>
git checkout <string>
git commit -m <string>
printf <string>
cd ..
more <file>
clear
fg
ls -a
ls
cd <directory>
ls
ls
setg RHOSTS <file>
git fetch
cd <directory>
exit
code .
vi <file>
cd <string>
vim <file>
done
cd <string>
date
ls
sudo mv <string>
sudo apt-get install <string>
ls
cat <string>
egrep -ri <string>
vi <file>
else\
chmod <number> -R <directory>
kubectl api-resources --api-group=<string>
npm start
git push
code .
ls
cd ..
git commit -m <string>
cd <directory>
apt upgrade -y
mvn clean
mkdir -p <string>
env <string>
ln -s <string>
ls
git remote add origin <URL>
git status
cd <string>
sudo apt install <string>
git clone <URL>
cd <string>
clear
cat <string>
sudo vim <file>
git pull
cd <string>
cd <string>
cat <string>
vim <file>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
read -s -n <number>
curl -H <string> -L <string>
ls
less <string>
clear
source <string>
cd ..
git branch -D <string>
grep <string>
ls
cd <string>
sudo yum install <string>
npm run test
git checkout <string>
cd <directory>
exit
ls
git diff <string>
cd <string>
sudo apt update
history
git diff
grep -w <string>
ls
vim <file>
cd <directory>
git add . --all
ls
git branch
git push
vi <file>
cd <string>
git status
vim <file>
cat <string>
clear
vi <file>
cd ..
ls
cd ..
git ps -u <string>
ls
cd <string>
ls
ls
sudo usermod -aG <string> $USER
git pull
git rm --cached -r
sudo apt install <string>
ls
cd <directory>
rm <string>
sudo prime-select nvidia
rm <string>
ls
vim <file>
grep <string>
sudo reboot
exit
ls
ls
git push
rm <string>
vi <file>
git remote add origin <URL>
cat <string>
docker ps
cp <string>
sudo apt-get install -y <string>
git add .
man
git init
grep <string>
docker exec -it <string>
npm run test
exit
read -r -a <string>
ls
exit <number>
vim <file>
df # shows disk usage
exit <number>
docker-compose up -d --build
exit
ls
vi <file>
touch <file>
cd <string>
eval <string>
go tool pprof <file>
curl <string>
code .
cd <directory>
clear
cd <directory>
mkdir <string>
clear
chmod <number> <string>
vi <file>
rsync <directory>
vim <file>
wc -w)" <string>
vim <file>
ls -la <directory>
git status
ls
git push
find -mindepth <number> -name <string>
cd <directory>
exit
grep <string>
fg
clear
nano <file>
pwd
cpio -p -d -v <directory>
git push -u <string> master
git diff <string>
curl <string>
ls
vi <file>
do\
vi <file>
rm <string>
vim <file>
ls
cd <string>
cd <directory>
sed -e <directory> -e <directory>
chmod <string>
history
clear
find . -name <file>
reset
clear
git commit -m <string>
source <string>
mkdir <string>
rm -f <string>
ssh-keyscan <string>
git commit -m <string>
sort
ls
tmux set-option -g <string>
tmux -v
cd <directory>
sed -e <directory> -e <directory> -e <directory>
sudo deluser <string>
clear
git add .
sudo sed -i <directory> <file>
clear
ls
cd <string>
sed -i <directory>
git status
vim <file>
wc
exit
sudo sed -i <directory> <file>
sudo add-apt-repository <directory>
curl -i -s <URL>
ls
sudo docker run hello-world
git remote add origin <URL>
cd <string>
less <string>
sudo npm i lebab -g
wget <URL>
sleep <number>
cd <string>
python3 <file>
npm run bench -- -c <file> -n <file>
git clone <URL>
wget -O <file>
rm -r <string>
cd <directory>
cd <string>
cd <string>
man <string>
vi <file>
cd <string>
find -name <string>
ls -l
sudo chown <string>
clear
git push -u --force <string>
git push
npm start
ls
cd <string>
git add <string>
docker rm <string>
clear
vi <file>
clear
git reset --hard
more <file>
git push
ln -sfv <file>
cd <string>
nano <string>
vi <file>
sudo apt-get install <string>
mv <string>
cd <string>
clear
psql -U <string> -h <string> nzdpu_wis
cat <string>
curl <string>
ls
ls
exit
<directory> <directory>
cd <string>
ls
pwd
cd <string>
rm <string>
cd <string>
clear
cd ..
history
grep <string>
git stash pop
vi <file>
sudo nvim <directory>
clear
cd ..
exit
sudo apt-get -y <string>
git status
cd <directory>
ls
cd ..
top
cd <string>
brew install <string>
cd ..
chmod +x <string>
ls
git push -u <string> main
exit <number>
git add .
sort
ls
ls
cd <string>
find . -type <string> -exec <string> <directory>
cd <directory>
cut -d',' -f2 <file>
read -p <string>
kill -9 <number>
git clone <URL>
cd <string>
ls
docker-compose down
fg
cd <string>
sudo apt install <string>
cd <directory>
git co -t -b <string>
exit <number>
git push --force --tags <string>
ls
cd
git commit -m <string> --no-verify
sed <directory>
bash <file>
ls
cat <string>
exit
vi <file>
sudo port install <string>
cd ..
cd <string>
head -n <string>
ls
git status
sudo apt-get update
wget <URL>
git remote add origin <URL>
rm -f <string>
cd <string>
cp <string>
cat <string>
ls
cat <string>
ps
ls
cd <string>
npm install
ls
git stash apply <string>
git fetch
git add .
awk <string>
git add .
exit
git push -u <string> master
find . -empty -type <string> -print -delete
cd <string>
git push origin <string>
cat <string>
df # shows disk usage
paste -sd+ -
git branch
ls -li
sudo reboot
git status
man <string>
git add
sudo pacman man
vim
source <directory>
vim <file>
ls -la
cd <string>
git commit -m <string>
scp <string>
byobu-tmux
sudo vi <directory>
source <file>
git commit -m <string>
sudo checkinstall -D --install=<string> --fstrans=<string> --pkgname=<string> --pkgversion=<string> --provides=<string> --requires=<string> <string>
ls
exit
touch <file>
git commit -m <string>
sudo chsh -s <directory>
ls
uniq -c
grep <string>
ls
rm <string>
git push
sed -i <directory>
git push
cd ..
cd <string>
tail <file> -n <number>
else
cd <string>
mkdir -p <string>
ls
ls
tee <file>
git commit
ls -la
ls
clear
codedown javascript
sudo apt-get install -y <string>
top
docker --version
sudo nano <directory>
sed -i <directory> -e <directory>
python3 <file>
git stash apply <number>
history -a
git pull origin main
ls
cd <string>
psql -U <string> -h <string> nzdpu_wis
dpkg -i <file>
rm -r <string>
cd ..
read -p <string>
ls
cat <string>
git add .
ls
ls
git init
grep <string>
cd <string>
cd <string>
git checkout <string>
cd <directory>
ls
sudo vim <file>
jq <string>
cd -
chmod <number> <string>
vi <file>
vi <file>
git init
exit
ls
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
git config --get <file>
ls
sleep <number>
git push origin main
python3 <file>
ls
exit <number>
ls
ls -l
git init
git init
nohup -c <string> <file> <string>
install -help
ls
docker-compose up -d --build
git push
cd
git add .
codedown javascript > <file>
ls
cd
systemctl disable <string>
cd <directory>
cd <string>
source <file>
python3 <file>
cat <string>
ls
ls
read -r -p <string>
ls
rm <string>
vim <file>
python3 <file>
wget -O <file>
cd ..
cp -r <directory>
more
cd <string>
vim <file>
cp -v <string> <directory>
fg
vi <file>
cd ..
less <string>
ls
git add .
git pull --rebase <string>
exit
ls
git status
ls
git pull origin main
git status
clear
which <string>
tcpdump --list-interfaces
chmod <string>
cd <string>
cd <string>
git push
dpkg --get-selections
sudo pacman -S <string>
go <string>
ls
ls
cd <string>
cd
vi <file>
apt -y <string> <string>
sudo gpasswd <string>
sudo apt update
ls -l
cd <string>
git push -u <string> main
clear
rm <string>
git pull
git remote
ls
xrandr
python3 <file>
rmdir -rf <directory>
ls -lAF <string>
python3 <file>
cd ..
git status
git checkout -b <string>
ls
git status
vi <file>
rm -f <string>
cd <string>
git pull --no-commit
su - <string>
cd <string>
find <directory> -name <string>
cd <string>
exit
export <string>
date <string>
sudo apt-get update
cd ..
npm install
systemctl status <string>
vi -t <string>
sudo docker exec -it <string>
grep -v <string>
chmod <string>
cd <string>
git push -u <string> main
sudo npm i prettier -g
ls
cd ..
git status
rm -r <string>
cat <string>
killall <string>
htop
cd <directory>
cd <directory>
cd <string>
dir
sudo apt-get install -y <string>
clear
cd
ls
mv <string>
python3 <file>
grep <string>
chown -R <string>
less -R
cd
git add .
git add <string>
ls
cd <string>
cd ..
top
sudo apt-get update
ping <string>
grep <string>
python3 <file>
cp <string>
rm <string>
git add .
ls
ls -al
apt-get install <string>
python3 <file>
python3 <file>
rm -f <string>
cd <string>
ls
unset <string>
help
tail
wget -q -O - <URL>
ls
chmod <number> <string>
sudo systemctl enable <string>
ls
clear
rm <string>
sudo openvpn --config <directory>
git please
pkill <string>
diff <file> <file>
grep
source <directory>
head -1 <file>
ls
cd <string>
source <string>
clear
sudo lighty-enable-mod <string>
apt-get upgrade
ls
clear
git commit -m <string>
fg
cd ..
ls -ltr
cd <string>
sudo docker commit <string>
bash <file>
ls
ls
cat <string>
chmod <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
clear
vi <file>
sed <directory>
df -lh
sudo systemctl status <string>
git add --all
clear
rm -rf <string>
cd ..
git commit -m <string>
nano <string>
sudo vi -w <directory>
git status
ls
mkdir <string>
clear
ls
git log --pretty=<string> --abbrev-commit
kubectl get <string>
systemctl status <string>
docker-compose logs
sudo apt-get install jenkins -y
git commit -m"update"
ls
vi <file>
cd <string>
git status
cat <string>
docker run -it --entrypoint <directory>
ls
cat <string>
df
wget -q <URL> -O <file>
cd <string>
git status
sudo apt-get install <string>
history -a
clear
ls
find . -type <string> -exec <string> <directory>
python3 <file> --parameter <string> --model <file>
sh -s - -b <directory>
exit
git push origin master
cd <string>
ls
git add <string>
cd ..
ls
cd.
rm -r <string>
git add .
history -a
vi <file>
ls
awk <string>
clear
rm -rf <string>
npm run prod
sudo yum install <string>
rm <string>
ls
sed -i <directory>
git add .
sudo sed -i <directory> <file>
git push
ls
ls
cd <string>
vim <file>
sudo vi <file>
vi <file>
lsblk
find . -type <string>
docker exec -it <string> bash
sudo <directory> --chip <string>
mkdir <string>
sudo docker rm corrade
git commit -m <string>
git push
bash -ls
cd <string>
git --version
tmux
git add <string>
sudo nohup rsync -avzhP --exclude <string> --exclude <string> --exclude <string> --exclude <string>
sudo pacman -S <string>
git config --global <file>
sed -i -e"s/root <directory>
ls -ltrd <string>
tmux new-session
clear
cd <string>
cd ..
tr <string>
git remote add origin
git add <string>
chmod +x <string>
source <string>
sudo mv <file>
ip a
tar -zxvf <file>
ls
sudo reboot
git commit -m <string>
cd
sudo apt-key add -
fg
su -sh <string>
ssh dirlic@10.18.0.39 -p <number>
ls
git init
git reset --hard <string>
openssl x509 -inform <string> -in <file> -outform <string> -out <file>
vi <file>
rm -f <string>
git push
git add .
vi <file>
tty
su deployer -c <string>
docker-compose logs
git status
rm -rf <string>
git pull
vim <file>
exit
mkdir -p <string>
rsync -avzr <directory>
sudo apt update
mv <string>
fg
npm init
sudo apt install
cd <string>
ls
capsctrl <directory> & disown
vi <file>
git status
man <string>
sudo make install
gsettings set <file> <string>
cd <string>
ls -la <directory>
read <string>
ss -nlpt
ls
grep -R <string>
cd <string>
vi <file>
rm -f <string>
docker rmi <string>
sudo ls <directory>
cd ..
npm start
ls
git init
vim <file>
vi <file>
cat <string>
ls
rm -rf <string>
git status
cat <string>
sudo sed -i <directory> <file>
sudo rsync -av --progress <directory>
clear
sudo service <string>
vi <file>
done
cd ..
vi <file>
head
ping <string>
ls
find . -name <file> -type <string> -print -delete
git log
git commit -m <string>
sudo rm -rf <string>
vim <file>
rm <string>
sudo apt upgrade
grep -E <string>
find <directory> -type <string> -execdir <string>
git commit -m <string>
rm -rf <string>
ls
git commit -a -m'Fix <string>
cd <string>
ls -lia
ls
git push
nano <file>
xargs --no-run-if-empty <string> inspect
cd <directory>
npm install <string>
kubectl logs -f -n <string>
ps -e
sed -e <directory> -e <directory>
cd
sudo sed -i <directory>
ls
systemctl start <string>
apt-get update
exit
cp -r <directory>
diff <file>
ping <string>
git rebase <directory>
ls
git add.
npm-recursive-install
cd
cd <directory>
git pull
python3 <file>
else <string>
curl <string>
git commit -m <string>
cd <directory>
source <file>
rm <string>
vim <file>
exit <number>
cd ..
ls
df -h
git add .
git rm <string>
cp <string>
git commit -m <string>
git add <string>
sudo npm i prettier -g
ls
cd <string>
killall <string>
mvn clean
sudo snap install --classic <string>
git remote add upstream <string>
npm i <string>
grep <string>
source <file>
sudo passwd <string>
ls
mv <string>
vim <file>
cd <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
cat <string>
cd ..
ls -la
rm -f <string>
git status
head
cd <string>
q=<string> -H <string> -H <directory> -H <string> -H <string> -H <string>
cp <string>
exit <number>
cp <string>
cd ..
less <string>
npm init
ssh dirlic@10.18.0.39 -p <number>
touch <string>
cd ..
git pull origin development
cd <string>
mv <string>
python3 <file>
git add <string>
git rebase -i <string>
npm run prod
vi <file>
fg
pwd
grep <string>
ls
fg
cd <string>
rm -rf <string>
more <file>
cd <directory>
ls
cd <directory>
<file> - <number>
vi <file>
nano <file>
cd <string>
less <string>
cd <string>
codedown javascript
ls -a
npm http <number> <URL>
man <string>
ln -s <string>
sudo pip install <string>
sudo ln -s <directory>
ls
vim <file>
npm run start
cd <string>
sudo curl -L <directory> -o <directory>
cd <string>
sudo apt-get remove <string>
ls -l
ls
fg
ps aux
clear
cd <directory>
cd
sudo apt-get install <string>
sudo chmod +x <string>
exit <number>
vi <file>
git status
ls -a
sudo apt upgrade -y
ls
python3 -m <string> install <string>
ls -altr
git icommit -m <string>
docker exec -it <string>
cd
ssh-copy-id <string>
sudo python3 <file>
ps ax
ls
ls -la
wget <URL> -O <file>
find . -name <file>
cd <string>
cd <directory>
ls
cd <directory>
pwd
git config --global <file> <file>
cd <string>
source <file>
sudo pacman -S <string>
cd ..
ls
git add .
npm start
fg
sudo python <file>
clear
cd <string>
bash <file>
ls
cat <string>
mkdir <string>
scp <string>
git status
sed -E -e <directory>
su - <string>
ls
script/build.sh
git checkout <string>
touch <string>
vim <file>
cd <string>
exit
mkdir -p <string>
sudo unzip <file> -d <directory>
docker exec -it <string>
cd <string>
ls
sudo aptitude <string>
sudo cp <string>
sudo npm install -g <string>
ls -ltr
ls
sudo restart <string>
git add .
exit
sudo apt -y <string>
git init
git push
tail -f <directory>
touch <string>
ls
ls
ps -aux
exit
ssh dirlic@10.18.0.39 -p <number>
cd ..
sudo cp <file> <file>
rm <string>
rm <string>
cd <string>
git rm --cached <string>
nano
sudo sh -s <string>
awk -F[\
git status
ls
ls -al
cd ..
ls -la
ls
vi <file>
cat <string>
clear
cut -c <string>
grep <string>
cd <directory>
git add .
tail -100 <file>
git status
git pull
ls
sudo apt install <string>
git clone <URL>
ls
read -rp <string> <string>
cd <directory>
cd ..
pwd
git commit -m <string>
mkdir <string>
curl -V
find <directory> -type <string>
npm install <string>
ls
sudo pip3 install -i <URL>
cd <string>
vim <file>
vim <file>
vi <file>
git switch <string>
chmod <string>
ls
tty
ping <file>
history
nano <file>
service apache2 restart
ls
more <file>
sudo python3 <file>
npm install -g <string>
docker network ls
git add .
chmod <number> <string>
history -s <string>
fg
ls
cd <directory>
git push -u <string> bryan-guner
sh <file>
read <string>
cd <directory>
git status
vim <file>
tmux
git branch
ls
cd <string>
git init
xargs -0 <string> -t <string>
docker stop bigballers
git status
git log -n <number>
brew tap <directory>
curl -fsSL <URL>
git push
cd
sudo reboot
man <string>
git submodule add <URL>
ls
cd <directory>
rm -rf <string>
tar zxvf <file>
git commit -m <string>
git commit --amend
cd ..
git commit -am <string>
rm -rf <string>
grep <string>
python3 <file>
wget <URL>
cd ..
ls
git config --unset <file>
wget -O <file>
npm start
tail -1
cat <string>
git commit -m <string>
cd <string>
cd <string>
tail +x # want to display all the lines from x to y. This includes the xth and yth lines.
git config --list
fg
cd <string>
ls
ls
git status
ls
clear
cd <string>
chmod u+x <string>
fg
npm install
cd <string>
mkdir <string>
ls
git checkout -b <string>
exit
ls
cd <directory>
npm i <string>
cd <string>
exit
cd <directory>
ls
grep -iIHrn --color=<string> <string>
vim
cd <string>
scp <string>
git status
vim
apt-get autoclean -y
ls
sudo mkdir -p <directory>
LANG=<string> rpm -qp --queryformat <string>
fg
cd <string>
sudo apt-get dist-upgrade
head -n <string>
sudo systemctl enable <string>
git show <string>
find . -type <string> -name <string>
vi <file>
vim <file>
cd <string>
cd <directory>
ls
cd <string>
python3 -m <string>
sed -E -e <directory>
git pull origin master
sed -i <string>
cd <string>
node <file>
su - <string>
git add .
exit <number>
grep <string>
sudo apt-get -y <string>
vi <file>
python3 --version
ls
cd ..
rm -rf <string>
sed -i -e <string>
bash <file>
man <string>
rm -fr <string>
vim <file>
npm install
cd
ls -al
git pull
chmod -R <string>
git commit -m <string>
rm <string>
vim <file>
wget <URL>
cd <string>
sudo killall <string>
sudo vim <directory>
clear
ls
cd <directory>
ls
cd <string>
sudo -H <string> <file> --help
exit
tar zxvf <file>
cd ..
cd <string>
git clone <URL>
pwd
sudo apt-get install <string>
pwd
sudo ln -s <directory>
type <string>
cd
sudo reboot
ls
clear
ls
sudo chown -R <string>
su root
sudo apt-get update
git commit --amend --no-edit --no-verify
cd ..
rm -rf <string>
ls -l
git status
pico <file>
source <file>
cd <directory>
ls
ls
export <string>
rm <string>
ls
sudo service <string>
npm install
sudo nano <directory>
vi <file>
cat <string>
rm -f <string>
cp -r <directory>
git add .
vim <file>
docker-compose exec -T <string>
git status
ls
exit
cd
git add .
docker rmi <string>
ls -la
history
cd ..
cp <string>
touch <string>
ls
git add .
vi <file>
ls
grep -i <string> >files
git add .
cd <directory>
git push -f
chmod
cd <directory>
time go run <file>
ls
cd <directory>
vi <file>
git log
wget <URL> -O <file>
cd <directory>
ln -s <string>
vim <file>
cd <string>
pwd
ls
git status
fg
cd <string>
git push
cd
vim <file>
cd ..
ls -l
cd <string>
cd <string>
git commit -m <string>
ls
ls
exit
mkdir <string>
rm -rf <string>
vi <file>
find <directory> -user <string>
vi <file>
clear
cd <string>
grep -E <string>
sudo npm install <string>
exit
sudo certbot --nginx -d <file>
grep -E <string>
sudo apt-get install <string>
du -sh
git pull
vim <file>
cd <string>
cpio -p -d -v <directory>
git init
du -sh
sed -E -e <directory>
then\
exit
sudo pacman -S <string>
ls
npm run prod
ls
ln -sf <directory>
docker run -v=<directory> -w=<directory> --rm -it <directory>
sudo apt update -y
ls
wget <URL>
grep -Eq <string>
code .
npx create-react-app <string>
git status
python3 <file>
cd ..
git pull
git commit -m <string>
cd <directory>
cd <directory>
cd ..
git init
rm -rf <string>
less <string>
exit <number>
du -ch <file>
rm -r <string>
ls
cd <string>
fg
cd ..
cp <string>
cd <directory>
uname
sudo apt install -y <string>
vim <file>
ls
df
git push
cd <string>
sudo apt install xautolock --reinstall
cat <string>
sudo vi <directory>
<file> program
ls
chmod <string>
mkdir <string>
less <string>
cd ..
sudo apt update
docker --version
sudo apt install <string>
vim <file>
docker stop boost
cd ..
cd <string>
cd <string>
rm <string>
ls
cd
python3 <file>
exit
cd <directory>
brew services <string>
git add <string>
cd ..
rm -f <string>
pwd
sudo ufw allow <string>
git add <string>
cd <string>
npm audit fix
cd <directory>
git commit -m <string>
grep <string>
vi <file>
git config --global <file> <file>
git push
sudo apt-key adv --keyserver <file> --recv <string>
cp -r <directory>
git stash
docker build -t <string>
ls
chmod <string>
git push
git add <string>
sudo apt install <string>
ls -la
cd ..
git fetch origin\
sudo apk add <string>
vi <file>
cd
done
sudo lsof -ti:8889
docker ps
code <string>
cd <directory>
sudo rm -rd <directory>
git status
npm install -g <string>
git config --global <file> <string>
npm i sass -D
git commit -m <string>
vi <file>
ls
git init
clear
ls
vi <file>
cd ..
ip a
ls
ls
git push
ls
cd <directory>
cd <directory>
apt-get upgrade
rm <string>
cd..
vim
sudo apt-get update
git push
mv -v -t <directory>
cd ..
then
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ls
git st
more <file>
nano <string>
fg
cd <string>
grep -i <string> >files
ls
git add .
ls
cd
docker-compose logs
clear
cd <string>
git push origin main
clear
clear
cd <string>
sudo supervisorctl <string>
vim <file>
ls
vi <file>
sudo apt install make -y
sudo systemctl daemon-reload
git commit -am <string>
fg
cat <string>
cd ..
ls
sudo mv <string>
more <file>
ls
clear
npm start
sudo dpkg -i --force-overwrite <string>
fg
clear
file <string>
do\
ssh dirlic@10.18.0.39 -p <number>
ls
ls
rsync -a <string>
git revert
cd <string>
cd <string>
git push origin
git push -u <string> main
ls
rm <string>
git commit -m
cd ..
systemctl hostname <string>
git tag -a <string> -m <string>
git diff
ls
rm <string>
cd
npm run coverage
git status
cd ..
export <string>
ls
sudo python <file>
git commit
sudo dnf install -y <string>
vim
npm run dev
clear
cd <string>
ls
ssh <string>
chmod -x <file>
cat <string>
sudo nala install <string>
cd <directory>
python3 <file>
npx tailwindcss init -p
npm run dev
xargs find
ls -lT
cd ..
vi <file>
mv <string>
find . -name <file> -type <string> -print -delete
rm -rf <string>
ls
ls
LANG=<string> rpm -qpl <string>
git status
cd <directory>
tmux attach -t <string>
sudo ifconfig <string>
ls ..
awk <string>
sudo git status
ps aux
git clone <URL>
sudo rm LICENSE
git add .
date
cd <directory>
git add <string>
sudo shutdown -y
wget -r <URL>
vim <file>
ls
sed -i <directory>
dpkg --get-selections
cd <string>
git clone <URL>
set
cd <string>
read <string>
cd <string>
git commit --amend --reset-author
cd
clear
sudo sh <file>
git add -v <string>
ls
git hist
cd
ls
cd ..
cd ..
sudo pacman -Ss <string>
ls
git push
clear
git add -A
cd
tail -f <string>
openssl rand -hex <number>
vi <file>
ls -la
cd <string>
git checkout <string>
read -s -p <string>
sudo apt --upgrade <string>
who
ln -s <string>
sort -n -k2
ls
fg
ls
read -p <string>
ls
ls
rm <string>
tmux kill-session -t <string>
docker build --build-arg <string> -t <string>
cat <string>
git config --global <file> <file>
cat <string>
git status
npm run dev
cat <string>
uname
ls
git status
find . -mtime <string>
cd ..
git commit -m <string>
cd <string>
ls
mkdir -p <string>
read <string>
killall <string>
sudo snap install --classic <string>
git add .
mv <string>
ls -lrt
ls
cp -r <directory>
ls
cd <string>
git remote add origin <URL>
cd <directory>
rm -rf <string>
nc -l <number>
exit
wc -l
man <string>
npm install
git commit -m <string>
wget -q -O <file>
ls
cat <string>
mv <string>
rm <string>
sudo systemctl restart <string>
git push origin master
python3 <file>
git log
ls
ls
bash -
git add <string>
sed -n <string>
which <string>
npm i
cd ..
mkdir <string>
git commit -m <string>
cd - <string> <string>
date
git push
clear
git push -u <string> master
git remote add origin <URL>
ls
git add .
sleep <number>
cd <directory>
ls
ls
git status
git remote
cd <string>
grep -i <string>
tee <file>
cd ..
dmidecode
nano <file>
find -config.def.h
ls
vim <file>
git push -u <string> main
history -r <string>
sleep <number>
npm run test
pwd # tells you where you currently are
sudo usermod -a -G <string> <string>
vi <file>
history -a
docker exec -it <string> bash
vim
sleep <number>
cd <directory>
exit <number>
cd <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
cd <string>
cd ..
chmod +x <string>
sed -i -E <string>
sed -i <string>
sudo dd <string>
ls
ls
mkdir <string>
alias <string>
ssh dirlic@10.18.0.39 -p <number>
exit
cd <string>
cd <string>
ssh-add --apple-use-keychain <directory>
nohup python3 <file> <string>
git add
npm install <string>
ls
ls -la
uname -r
cd ..
vi <file>
exit <number>
npm i <string>
rm -rf <string>
ls
ls
ls
docker logs <string>
python3 <file> -sI <string> -sM <string> -dM <string> -dI <string>
cat <string>
git diff
cd ..
apt-get install jenkins -y
docker push <directory>
sudo mkdir -p <directory>
cd <string>
git fetch
cd <string>
npm start
cd <string>
setg RHOSTS <file>
ls
cd ..
touch <string>
cd <directory>
rm -r <string>
git commit -m <string>
node <file>
sleep <number>
ps -ef
ls
sudo stop uwsgi
vim <file>
git submodule add <URL>
git clone <URL>
cd ..
npm i <string>
cd <string>
git status
git commit -m <string>
cd <directory>
vim <file>
ls
apt-get -f <string>
top
find . -iname <string>
fzf <string>
wget <URL>
cd ..
fg
cd ..
git add <string>
cd
git remote set-url --add <string>
git add .
sudo npm test
git clone --depth <number> <URL>
mvn compile
rm -rf <string>
ls
git status
git co master
find <directory> -type <string> -iname <string> -execdir <string> --no-act <directory>
sudo pacman -Syu
done\
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
sudo nano <directory>
sed <directory>
sudo update-rc.d <string>
setg RHOSTS.*
ls
clear
git init
git push -u <string> master
rm <string>
vim <file>
python3 <file>
cd <string>
mkdir <string>
git remote add origin <URL>
npx <string>
cd <string>
jq -r <string>
ls
clear
sudo vi <directory>
ls
cd <string>
ls -alrt
cat <string>
rm -f <string>
umount <directory>
cd <directory>
sudo mv <string>
git status
python3 <file>
sudo apt remove <string>
sudo apt update
rm <string>
ls
ls
cd <string>
ls
cd <directory>
pwd
fg
ls
git commit -m <string>
chmod u+x <string>
cd <string>
ls
git add .
exit
git rev-parse --git-dir <string>
git push -u
sleep <number>
ls
screen -dr
sudo apt-get update\
rm <string>
git push origin
sudo shutdown now
clear
git push -u <string> master
cd <directory>
ls
docker export <string>
chmod +x <string>
ls
cd <directory>
git push
tail -f <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
vim <file>
fg
git commit -v -a -m <string>
bash <file>
vi <file>
ls
cd <directory>
cd <string>
ls
clear
cd <string>
clear
vi <file>
sudo systemctl restart <string>
ls -lt
helm init --service-account <string> --tiller-namespace <string> --upgrade
sudo mount <directory>
wc -l
apt-get remove <string>
clear
ls
wget <URL>
python3 <file>
grep -v <string>
ls
git diff
git add .
git push
cd <string>
sort
done
ls
sed <directory>
npm init -y
ls
ping <string>
ls
tmux
code .
tr -dc <string>
ls
curl <string>
view <string>
ls
sed <directory>
chmod +x <string>
git push -u <string> master
git push -u <string> main
git clone <URL>
git commit -m <string>
cd ..
cd <string>
htop
rm -rf <string>
clear
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
cd <directory>
du -skh <string>
cat
ps -e
ls
cd
sudo npm install <string>
ls
git push
sudo service <string>
cd
python3 <file>
ssh <string>
exit <number>
cd <directory>
cd <string>
ls
ls
cd <string>
ls
cd <string>
exit
cd <string>
git push
awk -F <string>
cp <string>
mv <string>
cd <directory>
sed -i <directory>
sudo udevadm trigger --subsystem-match=<string>
ls
npm audit fix --force
git add -A
<file> <file>
git
cat <string>
git rm
ls
ls
ls -latr
git reset --hard <string>
git status
curl -s <string>
chmod -R <string>
export <string>
docker run -t -i <string>
git commit -m <string>
ls
clear
vim <file>
php -v
sudo npm install npm@latest -g
vi <file>
sudo vim <directory>
git remote
cd <string>
find . -perm <number>
cd..
ls
wget <URL>
cut -d <string> -f <string>
cd
rm <string>
ls
docker compose up -d
mkdir -p <string>
git clone <URL>
cd <directory>
vim <file>
python3 <file>
exit
cp <string>
git push origin main
sudo chmod +x <string>
awk <string>
ls
nano <file>
ls
vim <file>
cd <string>
ls
ls
cd <string>
sudo systemctl enable <string>
git push
cd <string>
ls
apt-get autoremove --purge
git clone <URL>
byobu-tmux
ls
docker-compose up -d --build
ls
brew services <string>
grep -Fxq <string>
touch <file>
ls
ls
ls
cd <directory>
exit
cd ..
git commit -m <string>
chsh --help
cat <string>
ls
cd <directory>
mkdir -p <string>
ls
git clone <URL>
cat <string>
sudo systemctl restart nginx
vim
ls -a
cat <string>
cd <string>
ls
git status
find
cp <string>
cat <string>
jq <string>
uname -a
ls
ls
cd <string>
ls
git status
npm --version
mv <string>
cd <string>
cat <string>
cd <string>
wc -l
cd <string>
sudo gpasswd -a <string>
find -name <string> -type <string>
rm -rf <string>
time go run <file>
cd <string>
cat <string>
mv <string>
source <string>
ls -la
pwd
sudo xbps-install <string>
ls
ls
touch <string>
service apache2 reload
rm <string>
sudo systemctl status <string>
ls
cat <string>
clear
fg
date <string>
ls
ls
npm start
sudo sed -i <directory> <file>
pwd
cd <string>
dpkg --search <directory>
vi <file>
sudo nano <directory>
ls
npm run dev
mkdir -p <string>
exit
git commit -m <string>
sudo -E <string> -
git add .
cd <string>
ls
ls
ls
ls
cd <directory>
git remote add origin <URL>
ls
ls
git checkout master
cd ..
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
rmdir <string>
cp <string>
sudo apt-get update
exit <number>
curl -T <directory> <string>
ls -al
sudo apt update
vi <file>
vi <file>
npm start
cd
cd <directory>
sudo chgrp <string>
cd ..
clear
git pull
clear
df --help
ls
cd <string>
source <file>
clear
ls
open .
git st
ls
sudo dpkg --configure -a
cd <string>
cd <string>
cd <string>
ssh -help
history # shows command line history
ls
sudo reboot
cd
lsblk
docker run --help
ls
less <string>
vim <file>
sudo sed -i <directory>
cd <directory>
script/build.sh
git remote add upstream <string>
man <string>
exit
npm run dev
cd <directory>
clear
make clean
cd <directory>
clear
pwd
clear
mkdir <string>
sort
read <string>
clear
ls
grep <string>
exit <number>
ls
ls
cd ..
sudo yum-config-manager --enable <string>
git pull origin master
git bisect <string>
curl <URL> -u <string> -d <string> -d <string> -d <string> -d <string>
sleep <number>
exit
ls
ls
podman <string>
vim <file>
ls -la
cd <string>
sudo reboot
git rm -f --cached <string>
git add .
find
apt install <string>
docker ps -a
cd <string>
ls
git clone <URL>
ls -a
ls
find . -empty -type <string> -print -delete
vim <file>
rm -R <string>
rm -f <string>
cd <string>
mount -t <string> -o <string>
find . -empty -type <string> -print -delete
awk <string>
vim <file>
curl <string>
touch <file>
git push origin main
git remote add origin <URL>
cd <string>
pwd
git pull origin master
cd <string>
docker login <string>
git commit -m <string>
cat <string>
mvn compile
egrep <string>
git init
npm run dev
cd <string>
sudo vi <file>
cd <string>
sudo pacman -S <string>
git status
cd
more <file>
telnet <string>
cd <directory>
ls
git remote -v
vim <file>
cd
git init
cp <string>
cat <string>
vim <file>
grep -v <string>
tar xvf <file>
clear
sed -ri <string>
cd <string>
print <string>
reboot
git push
bash --help
ls
cd <directory>
sudo nvim <directory>
curl -sSLf <string> -o <string>
rm <string>
ls
ls++ -a
git push
exit
cat <string>
sudo mv <file>
vim <file>
tmux set-window-option -g <string>
sudo apt-get install <string>
grep <string>
cd <string>
sudo apt update -y
alias
vim
fg
exit
cd
npm install <string>
grep <string>
ls
ls
chmod +x <string>
git commit -m <string>
sed -i <directory>
sudo start uwsgi
sudo make install
sudo sed -i <directory> <file>
ls
cat <string>
rm -r <string>
ls
<directory> -m <file>
cd <string>
cat <string>
python3 <file>
npm install
git stash
git status
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
clear
clear
cd <string>
git status
mount -t <string> overlay -o <string>
ufw
vim <file>
sudo apt-get install docker-ce -y
ls
git clone
cd ..
vi <file>
find . -name <file> -type <string> -print -delete
git pull
vi <file>
ls
ls
read -p <string>
sudo ufw allow <string>
fg
git --version
cd <directory>
strings <file>
ls
ls
git add <string>
git add <string>
vim
ls
npm run test
sudo chown -R <string>
ls -latr
clear
find . -type <string> -exec <string> -n -e <directory>
read -r -p <string>
ssh <string>
chmod <number> <string>
ls -la
export <string>
exit
ls
source <directory>
clear
cd
cd <string>
git remote -v
ls
bash <file>
clear
ls
cat <string>
cd ..
cp <string>
git describe --contains --all <string>
git add .
ls
git status
vi <file>
curl -fsSL <URL>
cp -r <directory>
fg
scp <string>
gsettings set <file> <string>
git ci -m <string>
chsh --list-shells
cd <string>
git commit -a -m <string>
tail -f <directory>
vim <file>
ls
ls
vi <file>
vi <file>
apt-get update
grep -rnw <directory> -e <string>
ls
cd <string>
sudo poweroff
vi <file>
cd
ls
exit
ssh dirlic@10.18.0.39 -p <number>
ls
cd ..
cd <string>
cd <string>
cd
git add <string>
cd ..
cd <string>
pwd
ls
git push --set-upstream <string> <string>
git merge <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd <string>
git commit -C <string> --no-verify
done
git add <string>
rm -R <string>
vi <file>
git branch
cp <string>
head
ls
clear
cd
ls
cd <string>
apt-key adv --keyserver <file> --recv-keys <string>
vi <file>
install <string>
git commit -am <string>
npm audit fix
ls
docker stop <string>
npm start
git remote add origin <URL>
npm run test
git pull
sudo ufw allow <string>
git add -A
sudo docker ps -q
fg
cd <string>
git config --global <file> <file>
git submodule update --init --recursive
sudo find <directory> -name <file>
cd <string>
git reflog
cd <directory>
ls
ls
git init
ls
vi <file>
sudo rm -R <string>
git push -f <string> <string>
git st
cd <string>
python3 <file>
ls
exit <number>
apt-get install <string>
ls
cd <directory>
mv <string>
git clean --force <string>
sudo apt-get dist-upgrade
cd <string>
cd <directory>
sudo apt-key --keyring <directory>
xhost +
git add .
df -h
cd <string>
ls
top
apt-get install -y -qq <string>
sudo -H <string> install -U <string>
clear
curl <string>
read -a <string>
docker pull <string>
curl -sH <string> <directory>
ls
apt search <string>
source <file>
ls
history
mkdir <string>
git pull
sudo systemctl restart nginx
setg RHOSTS <file>
cd ..
git init
clear
vim <file>
cd ..
sed <directory>
git push
sudo apt-get install <string>
git tag
sudo usermod -G <string>
rm -rf <string>
git status
ssh dirlic@10.18.0.39 -p <number>
ls -a
clear
sed -i <string>
sudo gsettings set <file>
cd <string>
docker volume ls
sudo mv <string>
ls
sudo chown -R <string>
sudo sed -i <directory> <file>
vim <file>
clear
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ls
ls
git add .
vim <file>
ls
git stage <string>
ls
which <string>
cp -r <directory>
rmdir <string>
cd ..
cd ..
git commit -C <string> --no-verify
vi <file>
ls
ls
git status
cd <string>
read <string>
clear
python3 <file>
bash
rm -rf <string>
history
git init
history -a
sudo rm -r <string>
vim <file>
cd <string>
ls
cd <directory>
jq <string>
ls
sed -i <directory>
python3 <file> --epochs <number>
sudo dpkg -P <string>
cd <string>
cat <string>
ps m -o <string>
sudo dpkg -i <file>
vim <file>
cd <string>
ls
npm run build
ls
sudo apt-get install <string>
exit <number>
vim <file>
clear
sudo make uninstall
find . -type <string> -exec <string> <directory>
sudo apt-get --yes --force-yes <string> nodejs
sed -i -e <string>
ls
vim <file>
git config --global <file> <file>
sudo sed -i <directory>
cd <string>
vim
ls
mv <string>
cat <string>
sed -E -e <directory>
clear
vim <file>
git commit -m <string> --author <string>
sudo chmod u+w <directory>
fg
git status
sudo firewall-cmd --list-all
cat <string>
git push --set-upstream <string> master
git submodule update --init --recursive\
ls
npm start
cd <directory>
grep -i <string> >files
sudo apt upgrade
curl --silent <string>
strip --strip-unneeded <string>
journalctl -b
rm <string>
cd <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
rm -rf <string>
git init
clear
yarn install
git status
vi <file>
ls -1 <directory>
diff <file>
cd <string>
npm run dev
ls
cd <string>
python3 -m <string> install --user
<directory> -m <file>
curl -sL <URL>
source <string>
wc
ag -v <string>
tr <string>
fg
sudo systemctl enable <string>
vim
ls
brew install --cask <string>
sudo reboot now
git checkout <string>
grep <string>
ls
git push -u <string> main
ls
cd ..
sudo docker rm corrade
sudo apt-get update
cd <string>
apt-get install -y <string>
dpkg --get-selections <string> <file>
ls
git push -u <string> master
chmod <number> <string>
exit
ls
rm <string>
docker-compose logs
ls
vi <file>
vi <file>
pwd
fg
clear
curl -s <string> -H <directory> -H <string> -H <string> -H <string>
source <file>
git status
cd <directory>
ls
git clone <URL>
cd <string>
git add <string>
eval <string>
done
mv <string>
ls
chmod +x <string>
ls
source <file>
ls
sudo ls -ltr <directory>
ls -alrt
vi <file>
exit <number>
git commit -m <string>
clear
sudo npm i prettier -g
less <string>
mv <string>
git init\
sudo ltrace -p <number> -o <file>
git rebase -i <string>
cd <string>
find . -name <string> -exec <string> -c <string>
vim <file>
git commit -m <string>
mkdir -p <string>
curl --help
xargs -0 <string> <string>
git add <string>
git commit -m <string>
cat <string>
cd ..
cd <string>
screen -r
cd <string>
cd <directory>
exit
rm -fv -- <string>
locate <string>
sudo service nginx restart
sudo fdisk <directory>
clear
ls
ln -s <string>
npm audit fix
cat <string>
clear
npm run dev
cd <string>
mkdir <string>
cd <directory>
cd <directory>
ls
sudo apt-get install -y <string>
cd <string>
cd <string>
fg
sudo chmod +x <string>
python3 <file> --model-path <file> --conf <string> --img-size <number>
vim
vim <file>
cd <directory>
cat <string>
ping <file>
git init
vim <file>
git add <string>
cd <string>
ls -al
wget -c <URL> -O -
top
ls
vim <file>
sudo apt yt-dlp -U
cd <string>
ls
cat <string>
cd <string>
clear
rm <string>
git remote add origin <URL>
cd ..
find -type <string> -mtime <string> -exec <string> -f <string>
ls
clear
sudo service nginx restart
df -H
cd ..
git clone <URL>
sudo nano <directory>
done
nohup python3 <file> <string>
cd <string>
ls
sudo start uwsgi
find . -mtime <string>
sudo apt-get update
cp <string>
git status
cd <string>
rm <string>
cd ..
ls
grep <string>
tail -f <string>
git push
source <string>
clear
python3
bash
cd <directory>
wc -l
git pull origin <string>
exit
git init
tail -f <directory>
chmod <number> <string>
cd ..
cd <string>
clear
curl -sSLf -o <string>
find . -type <string> -path <string>
git push
grep <string>
rm -r <string>
npm run dev
ls
git add .
sudo tail -20 <directory>
grep <string>
ls -lAF <string>
cut -d <string> -f <string>
git push origin <string>
print
git commit -m <string>
sudo vim <file>
pwd
cp -r <directory>
cd <string>
cd <string>
ls
mv <string>
wc
git status
rm <string>
ls
cd <string>
vi <file>
cd <directory>
sudo iptables -t <string> -A <string> -o <string> -j <string>
docker build -t <string>
chmod +x <string>
cd <string>
awk <string>
vim <file>
git checkout master
clear
sed -i <directory>
mv <string>
ls
date
ls
cat <string>
npm test
rm -f <string>
cd ..
ls
ls
cd <string>
exit <number>
npm start
screen
sudo emacs <string>
ls
git commit -m <string>
ls
cd <string>
python3 <file>
vi <file>
npm install -g <string>
vi <file>
ls
git status
rm -vrf <directory>
sudo apt-get install <string>
cd ..
python3 <file>
sudo add-apt-repository -y <directory>
cd <directory>
sudo snap install blender --classic
git init
npx shadcn-ui@latest add <string>
ls
cat <string>
cp <string>
vim <file>
sort
cd <string>
sudo kill -9 <number>
git add -A
man <string>
wget <URL>
export <string>
source <file>
ssh
awk <string>
ls
exit <number>
sleep <string>
cd <string>
git checkout <string>
exec $(compgen -c
find . -type <string> -print0
vim <file>
npm i sass -D
cd ..
git config --global <file> <file>
fg
reboot
pwd
cd <directory>
sudo -i
cp -r <directory>
exit
date
vi <file>
git pull
ls
rm <string>
sudo add-apt-repository <directory>
git stash
ls -a
chmod u+x <string>
source <file>
ps aux
git config --global <file>
mv <string>
sudo cat <directory>
docker-compose up -d --build
fg
cd <string>
clear
du -h
ls
ls -all
vi <file>
rm -Rf <string>
ls
sed <directory>
xrandr -r
clear
git init
sudo nano <directory>
ls -las
sudo subl <string>
sudo add-apt-repository <directory>
cat <string>
git init
cat <string>
npm install --save <string>
git commit -m <string>
exit <number>
chmod <string>
git push
cd ..
ls
apt-get install <string>
cd <string>
ssh <string>
sed <directory>
cd <string>
git push
sudo -u <string>
exit
mkdir <string>
git add <string>
fg
cd -
export <string>
vi <file>
psql -U <string> -h <string>
npm install -g <string>
git commit -m <string>
git init
cd <directory>
git status
git commit -m
npx tailwindcss -i <file> -o <file> --watch
grep <string>
pwd
ls
git commit -m <string>
git status
cd <string>
exit
docker stop bigballers
cd <directory>
sudo apt-get install <string>
ssh dirlic@10.18.0.39 -p <number>
mkdir -p <string>
exit
clear
python3 <file>
git add .
ls
cd <directory>
git status
mkdir <string>
sudo rpm -i <string>
clear
clear
sudo netstat -tuln
sudo apt purge <string>
wget -q <URL> -O <file>
export <string>
sudo apt-get clean
cd <string>
ls
history
ls -ltr
mkdir <string>
vim <file>
ls
ls
ls
dir <string>
cd <string>
git remote add origin <URL>
sudo gpg --import -
npm audit fix -f
npm install <string>
cd <string>
npm run start
php artisan <string>
byobu-tmux
nano <file>
chmod +x <string>
npm i -D <string>
git add <string>
sudo systemctl status prometheus
rm -r <string>
cd <directory>
curl -v --data <string>
git status
ls
gpg --keyserver <file> --recv-key <string>
git add <string>
read -r -p <string>
ls
cp <string>
pkill picom
vim
xargs -L1 <string>
clear
ls
cd <string>
git init
ls
cd <directory>
cd <string>
sudo vim <directory>
ls
date
cd <string>
rm -f <string>
cd <string>
sudo kill -9 <number>
python3 <file>
find . -type <string>
clear
grep -x <string>
git push --set-upstream <string> <string>
ssh-add <directory>
git push
exit <number>
codedown <string>
git --git-dir=<string> <string> --shell --format=<string> <string>
ls
cp -r <directory>
source <file>
vim <file>
git push origin master
ls
ls
vim <file>
git push -u <string> master -f
cat <string>
ls
ls
git gc --aggressive --prune
fg
ls
bash
git log
git commit -m <string>
sudo sed -i <directory>
ls
read -n <number> -p <string>
cd <string>
cd
exit
cd ..
vi <file>
ls
git push
cd -
ls
git flow <string>
git add .
setg RHOSTS <file>
git config --global <file> <file>
ls
vi <file>
cd <string>
ls -a
ls
less <string>
cd <string>
node <file>
ls
rm -f <string>
read -p <string>
ps -ef
cd <directory>
sudo python3 <file>
git push
vi <file>
cd <string>
clear
cd <string>
sudo service <string>
ls
grep -i <string> >files
cd ..
cd <string>
done
sudo pip install --upgrade <string>
pacman -S <string>
open <string>
ls
vi <file>
git status
apt-get install <string>
cd <directory>
cd ..
rm <string>
ls
sudo apt-get update
cd <directory>
ls
cd <directory>
cat <string>
git status
git add <string>
which <string>
vi <file>
cd - <string> <string>
npm run test
vim <file>
git fetch origin
git add .
git push
exit
ps -auxwf
psql -h <string> -U <string> -d <string> -L <file> -a
sudo mkdir <directory>
git push origin PTS-720-fix_feature_flag_values_in_Germinator --force
cat <string>
top
date
exit <number>
rm <directory> -rf
mv <string>
clear
nc <string>
cp <string>
exit
vim <file>
clear
vim <file>
vim <file>
sudo apt upgrade
tail -n20
curl -i <URL> -F <string> -F <string>
git pull
mv <string>
cd <string>
sudo su -
git commit
npx <string>
git add .
sudo nvidia-settings -a <directory>
sudo zypper install <string>
git status
git commit -m <string>
ls
rm <string>
npm install -g <string>
clear
sudo apt-get update
docker-compose up -d --build
grep <string>
vim
cd <directory>
sudo useradd -d <directory>
sudo apt-get update
cd ..
ls
git add <string>
cd
clear
git push
sudo tee <directory>
mkdir -p <string>
rm <string>
ln -s <string>
sudo zypper se <string>
vim <file>
git branch -D <string>
cat -v
yarn
vim <file>
cd <string>
yarn <string>
npm init -y
python3 <file>
rm -rf <string>
rm -rf <string>
ls
watch -n <string>
ls
ps -eal
cd <string>
fg
ls -a
git commit -m"update"
docker ps -a
cd <string>
git push -u <string> master
wget -r --no-parent <string>
cd <directory>
curl -o <string>
git clone
sudo nano <directory>
git status
wget -q -O <file>
vim <file>
git init
git commit -am <string>
cd ..
sed -i <string>
git push --set-upstream <string> <string>
sudo dpkg -i <file>
python3 <file>
git push
clear
git checkout -b <string>
docker ps
ls -ltr
xrandr --output <string> --on
cd <directory>
npm install
exit
fg
git add -f <string>
grep -r <string>
git add .
git push origin <string>
clear
cd ..
cd <string>
git status
clear
cd ..
npm run build
cp <string>
ls
sudo fdisk <directory>
cd <directory>
read -r -p <string>
ls
ls
clear
ls
less
git commit -m <string>
exit
vim <file>
tar xvzf <file>
sudo locale-gen <string>
done
vim <file>
sleep <number>
rm -rf <string>
cp <string>
sudo curl -s <URL>
python3 <file>
cd <string>
sudo reboot now
git checkout
cd <string>
cd <string>
npm i <string>
which <string>
ls
cd <string>
ls
git commit -m <string>
git add -A
git --version
sudo apt update
top
cd <directory>
python3 <file>
chsh <string>
python3 <file>
touch <file>
ls
brew install <string>
fg
size <string>
clear
ls
cd <string>
cd ..
su
clear
vi <file>
ls
cd <directory>
vim <file>
cut -d <string> -f <string>
ls
git diff <string>
vi <file>
sed -e <string> -e <directory> -e <string> \
cd <string>
git clone <URL>
ls
codedown javascript
git push
read -p <string>
sudo wrmsr -p${core} <string>
git commit
docker kill <string>
sudo vim <directory>
ls
tail -f <directory>
git config --global <file> <file>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
vi <file>
git commit -m"api"
wget <URL>
git push
pico <file>
history -a
find . -type <string> -ctime <string>
pwd # tells you where you currently are
ls
mkdir <string>
print <string>
git clone <URL>
mkdir <string>
curl <URL> -u <string> -d <string> -d <string> -d <string> -d <string>
sudo -s -u <string> -H
cd <string>
killall <processname> # kill all processes with the name
ls -al
clear
read <string>
ls
cd <string>
git commit -m <string>
vim <file>
ls
ls
cd <string>
ls
ls
docker login -u <string>
cd <directory>
git commit -v -a -m <string>
grep <string>
ls
cd <string>
usermod -a -G <string>
cat <string>
git status
free
tail -f <string>
sudo apt-get purge <string>
git config --global <file>
cd ..
curl -sLo <string>
cd <string>
sudo pacman -S --noconfirm <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
grep <string>
git add <string>
git status
sudo apt install <string>
ls
ls
sudo vim <file>
ls -l
npm run dev
cd <string>
grep <string>
git init
df # shows disk usage
git clone <URL>
shutdown -h <string>
ls
sudo xbps-install <string>
tmux a
find . ! -empty -type <string>
exit
mv <string>
sed -E -e <directory>
rm -r <string>
git stash
curl -O -L <string>
clear
ls
clear
rm -r <string>
git push
ls
git init
vim <file>
sudo sed -i <directory> <file>
git remote add origin <URL>
cd <string>
cat <string>
git log
top
ls
<file> --root-dir=<directory> <string>
ls
cd ..
make clean
vim
ps aux
cd <directory>
vim <file>
ls -al
vim <file>
df
sudo chmod <number> <directory>
cd <string>
git commit -m <string>
else\
uname
vi <file>
rm <string>
fg
history
git pull
git commit -m <string>
npm install
fg
cd <directory>
ls
ls
vim <file>
sudo nano <directory>
pwd
egrep -r <string>
cd <string>
cd <string>
ls
exit
cat <string>
ls
ls
exit
ls
sed -E -e <directory>
ls
sudo shutdown now
cd <string>
exit
git status
git --version
vi <file>
sudo chmod +x <directory>
sudo ifup <string>
ls
ls
ruby <string>
git clone <URL>
nc <number> <number>
cd
git status
more <file>
git pull origin master
chmod <number> <string>
su root
sudo dnf search <string>
clear
sudo apt-get update
docker start <string>
vim
docker rm <string>
git clone <URL>
find . -not -name <string> -ls -delete
vim <file>
cd <string>
top
cd <string>
sudo pacman -S <string>
cd <string>
sudo apt update
cd <directory>
export <string>
ls
ls
ls
cd <directory>
ls
mv <string>
git add .
grep -e <string> -e <string>
stat
ls
git init
git commit -am <string>
ls
ls
sudo make clean install
cd <string>
ls
less <string>
du -h -maxdepth-1
wget --no-check-certificate <directory> -O <file>
cd <string>
python3 <file>
git push
ls
ls
wc -l
chmod u+x <string>
sudo apt-get autoremove
docker start postgres-container
cd
cd
vi <file>
sudo sed -i <directory>
apt-get install <string>
ls
cd <string>
sudo ifconfig en0 ether <string>
cd ..
sed <directory>
sudo smbpasswd -a <string>
mv <string>
sudo apt-get update
git push -u <string> master -f
npx shadcn-ui@latest add <string>
cp -rv <directory>
ls
htop
cd ..
grep <string>
ls
rails <string>
clear
pwd
git
man <string>
tar xz --xform <directory>
nano <file>
cd
cd ..
touch <file>
git pull
git checkout -b <string>
npx create-react-app <string>
git commit -m <string>
exit
sudo sed -i <directory> <file>
git commit
git commit -m <string>
clear
clear
git add .
ls -ltr
chown <string>
cd
find . -name <file> -type <string> -print -delete
vi
vim <file>
ls
git init
grep -E <string>
sudo cp <string>
code
ls
clear
git pull
ls -lh
npm start
rm -rf <string>
sed <directory>
ls
ls
source <file>
git pull
sudo apt install <string>
vi <file>
fg
git commit -m <string>
git add <string>
cd <directory>
git config --global <file>
ls
vi <file>
cd <directory>
rm -f <string>
sudo wget <URL>
cd <directory>
rm <string>
tail -f <directory>
ls
git add .
tail -f <directory>
docker-compose build
sudo apt-get install docker-ce -y
cd <string>
ls
cat <string>
cd ..
ls
ls
xargs -L1 <string>
sudo dpkg -i <file>
cd <directory>
git pull origin master
git status
sudo add-apt-repository -y <directory>
git commit -m <string>
read -rp <string> <string>
ls
git config --global <file> <string>
exit
cd ..
docker exec -it <string>
ls
git add <string>
git submodule update logger base64 <string>
git merge <string>
ls
sudo apt-get -y <string> <string>
which <string>
git commit -m <string>
git branch -M <string>
ls
ls
npm run start
exit
git flow <string>
ls
docker-compose up -d --build
ls
ls -R <string>
ls
ls
ls
dotnet <string>
rm -r <string>
cd <directory>
cp <string>
git commit -m <string>
pwd
fg
vim <file>
ls
touch <string>
cd
cd <string>
cat <string>
cp <string>
clear
git push -u <string> master
ls -ltr
OK - <string>
git commit -m <string>
npm test
cd <string>
git add <string>
python3.11 <file>
sudo apt upgrade
yarn install
docker login
vim <file>
sudo make clean install
ping <string>
cd <string>
clear
code <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
sudo netstat -apn
touch <file>
git commit -m <string>
cd <string>
git push -u <string> master
sudo apt install <string>
sudo git clone <URL>
vi <file>
which <string>
npm run bench -- -c <file> -n <file>
wget <URL>
vi <file>
ps aux
sudo service nginx restart
cd
vi <file>
cat
git pull
git commit -m <string>
ls
ls
ls -ltr
ls=<string> --oneline --decorate
cd -
rmdir <string>
mkdir -p <string>
ls
ls
rm <string>
vim <file>
du -sh
git commit -m <string>
ls
grep -F <string>
mkdir -p <string>
mount --types <string> overlay --options <string>
tail -f <string>
ls
du --max-depth <number>
grep <string>
cd ..
ls
clear
sudo stop uwsgi
ls
ls
rm <string>
ssh dirlic@10.18.0.39 -p <number>
exit
sort grouped -h -r <string>
mv <string>
cd ..
clear
cd ..
git add <string>
du -sh <directory>
npm run start
clear
git log
sudo sed -i <directory> <file>
cd ..
ls
npm run pretty <string>
grep -Ev <string>
git log
cd ..
cd <directory>
wget <URL>
sudo cat <directory>
git log --oneline -n <number>
ls
vi <file>
vim <file>
read -p <string>
ls
screen -r <string>
chmod <number> <string>
vim <file>
ping <string>
kill <number>
git pull
git commit -m <string>
git config --global <file> <file>
ls -ltra
rm <string>
chmod +x <string>
clear
grep -i <string>
fg
clear
cd <string>
grep -oE <string>
apt install -y <string>
sudo apt purge <string>
grep <string>
vim <file>
vi <file>
npm install -D <string> postcss autoprefixer
ls
vim <file>
wget -qO - <URL>
systemctl status <string>
clear
fg
sleep <string>
cd <string>
sudo su
ls
git clone <URL>
cd ..
git pull
cd <string>
vim <file>
ls
sudo apt update -y
cd ..
git commit -m <string>
cd
exit
cd ..
clear
ls
sudo pacman -S <string>
cd <string>
sudo apt-get install <string>
mv <string>
cd <string>
cd <directory>
ls
ls -la
pwd
sudo sed -i <directory>
cd <string>
cd <directory>
rm -rf <string>
less -R
ssh <string>
sudo npm start
rm <string>
cd <string>
sed -i.bak <directory>
vim <file>
git
sudo vim <directory>
cd ..
exit
cd <string>
git commit -am <string>
sudo apt htop
tmux
ls -latr
git status
cd ..
ls
cd ..
date <string>
git status
git push
vim
exit
ls
cd <string>
python <file> runserver 0.0.0.0:2016
clear
cd <directory>
cat <string>
sudo docker rm corrade
ls
git rebase -i <string>
fg
chmod u+x <string>
vi <file>
clear
vim <file>
sudo apt-get -y <string>
clear
cd
mv <string>
exit
ls -l
cd <directory>
git branch -M <string>
cd
more <file>
python3 <file>
sudo apt --purge <string>
sudo dnf install <string>
cd <string>
cd <string>
pwd
cd <directory>
rm -rf <string>
awk -F/ <string> -1
vim <file>
clear
cat <string>
nano <file>
ls
reset
ls
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
vim <file>
chmod <number> <string>
rm <string>
cd <string>
cp -r <directory>
cd <string>
cd ..
vi <file>
zeus.polsl.gliwice.pl - <number>
ping <string>
git add -v <string>
ls
sudo poweroff
git push
ls
sudo git fetch
python3 <file>
git status
cd <string>
npm uninstall <string>
sort -g
git pull
fg
wc -l
npm i <string>
python3 <file>
git push origin master
npm update
ls
ls
ls
sudo apt install <string>
grep -A5
ls
ls
cd <directory>
cd <directory>
git fetch origin <string>
curl <string>
sudo apt install
ls
type <string>
ps -eal
ln -s <string>
ls
source <directory>
ls
cd ..
cat <string>
ls
ls
nano <file>
git push
git commit -m <string>
cd <directory>
touch <file>
rm <string>
cd <string>
fg
sudo apt install <string>
ls
tmux kill-session -t <string>
read <string>
ls
which <string>
vi <file>
code .
grep <string>
ls
ls -la
service apache2 restart
git branch
clear
clear
git reset HEAD^
sed <directory>
docker run -d --name <string> -p443:443 <string>
cd
git add <string>
rm <string>
git add <string>
ls
git add .
curl -sSN <string>
exit
vi <file>
sudo apt update
cut -f2-
cd <string>
clear
cat <string>
git remote add origin <URL>
sudo make install
rm <string>
ls
sudo <directory> -avd <string>
sudo ufw status
git init
source <directory>
ls
su root
ls
cd
ls
done
git add .
ls
exit
cd <string>
exit
clear
ls
git clone --depth=<number> <URL> <directory>
sudo apt-get install <string>
npm install react-native-actionsheet --force
ls
setg RHOSTS <file>
cp <string>
sleep <number>
xargs -n1 <string>
vim
git config --global <file>
git add -A
mkdir <string>
git merge --strategy=<string> --no-commit <string>
mv <string>
ls
vi <file>
git commit -m <string>
git commit -m <string>
man <string>
ls -ltr
sudo rm -rf <string>
clear
ls
vim <file>
rm
cd <string>
sudo fc-cache -fv
apt-get update
tr <string>
cd <string>
apt-get update
systemctl daemon-reload
ls
rm -r <string>
nano <file>
killall <string>
git add .
rm -rf <string>
cd ..
exit <number>
npm i
cd <directory>
exit <number>
ls
cd ..
fg
cat <string>
source <directory>
cd <string>
git push
rm -r <string>
git push --set-upstream <string> main
sudo apt-get install -y <string>
exit <number>
ls
cd <string>
cd <directory>
ls
exit
tmux
cd <string>
ls
exit
cd ..
grep -w <string>
vim <file>
sed -i <directory>
code .
scp <string>
cd <string>
sudo docker kill corrade
wget -qO- <URL>
clear
clear
make clean
sudo apt-get upgrade
sudo restart <string>
brew install <string>
clear
ls
git push
ls
cd <directory>
code <string>
git commit -am <string>
git clone
vim <file>
nc <file> <string>
cd <string>
clear
bash <file>
less
vim <file>
sudo reboot
clear
ls
vim <file>
ls
exit
wget -O <file>
git push origin master
git commit -m <string> -f
git commit
sudo rm -rf <string>
git init
git commit -a
ps m -o <string>
git push -u <string> master
git add -A
git commit --allow-empty -m <string>
ls
cd
ls -al
cd
vi <file>
who
cd ..
clear
ls
vi <file>
cd <string>
ls
cd <string>
vim <file>
sudo firewall-cmd --state
fg
ls
git rev-list --objects --all
cd <string>
pwd
grep -Eo -e <string>
cd <string>
sudo apt list --ugpradable
git pull upstream <string>
cd <string>
exit
ls
ls
exit <number>
clear
cd
du -sh <directory>
find
ls
read -r <string>
tail -f <string>
cd <directory>
cd <string>
ls -latr
clear
clear
wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=<string> --domains <file> --no-parent <URL>
cd <string>
cd <string>
ls -d -- <directory>
cd <string>
sudo service <string>
git init
vi <file>
sudo <directory> -q
else\
sed -e <directory>
sudo apk add <string>
sudo apt-get install <string>
ls
pwd
clear
git push -u <string> master
git pull
vim <file>
cd <directory>
vim <file>
ssh dirlic@10.18.0.39 -p <number>
git pull origin master
exit
vim <file>
sudo npm audit fix -f
git add .
npm install
sudo reboot
rm <string>
cd ..
cd <string>
rm -f <string>
git pull
cd <directory>
sudo chmod +x <string>
sed -i <string>
git add -i
cd <string>
python3.11 -m <string>
git branch
git commit -t <string>
sed -i -e <string>
vim <file>
ls
cd <string>
sudo make
ls
sudo mkdir <directory>
ls
git push
vim <file>
sudo apt install <string>
find . -type <string>
find -name <string> -type <string>
find <directory> -mindepth <number> -type <string> -exec <string> -t <directory> --backup=<string> <string>
cp <directory> -r` <string>
docker start postgres-container
ls
cd ..
git pull
cd <directory>
clear
ls
git remote -v
exit
chmod +x <string>
cd -
touch <file>
source <file>
cd <directory>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
git co -t -b <string>
docker exec -it <string>
sudo sed -i <directory>
sudo shutdown
docker exec -it <string>
ls
python3 <file>
ls
git checkout -b <string>
read -p <string>
ssh -T <file>
git status
cd <string>
find
git push
head -n <string>
pulseaudio
git checkout master
clear
read <string>
code <string>
command -v <string>
cp -v <string> <directory>
cd ..
cd <directory>
cd <directory>
done < <string>
pwd
git add .
cat <string>
grep <string>
ls++ -a
exit
docker-compose logs
ls
sudo <directory> <string>
cd ..
git rm --cached <string>
ls
ls
git status
source <directory>
tail -f <string> --lines=<number>
git checkout <string>
curl -sL <URL>
sudo supervisorctl update
source <directory>
cd <directory>
tcpdump -i <string> -v <string>
ls
bash
type <string>
git remote add origin <URL>
history -w
zgrep -i -E -o --no-filename <string>
cat <string>
fg
git push
git commit -m <string>
grep -v <string>
sudo nmcli con mod <string> <string>
curl -L <URL> -o <file>
cd ..
ls
vim <file>
sudo vi <directory>
<directory> -m <file>
vi <file>
vi <file>
date <string>
git status
git branch --set-upstream <string>
npm install -g <string>
vi <file>
cd <string>
history -w
touch <file>
rm <string>
mkdir <string>
reboot
npm i <string>
python3
grep <string> -win <string>
ls # lists your files in current directory, ls <dir> to print files in a specific directory
sudo git pull
clear
sudo sed -i <directory>
ls
fg
pwd
vim <file>
vim <file>
sudo
git pull
git pull
git push -u <string> main
sudo chmod <number> <directory>
git status
nl
cd <directory>
ls
ls
ls
sudo crontab <file>
ls
docker ps
ls
git add .
<directory> <string>
cat <string>
git add .
git hist
mkdir <string>
<directory> <directory>
exit
cd <directory>
ls
ls
diff <file>
vi <file>
git rebase -i <string>
chmod +x <string>
git status
sudo vi <directory>
sudo start uwsgi
find . -name <file> -type <string> -print -delete
nano <file>
sudo apt install <string>
apt-get info <string>
clear
cd <string>
cat <string>
cd <string>
git clone <URL>
exit
ls
which <string>
git push -u <string> master
clear
exit <number>
<directory> <string>
git remote add origin <URL>
sudo nano <directory>
clear
apt-get -f <string>
ls
apt list --upgradable
cat <string>
find <directory> -name <file>
cd ..
ls
ls
git pull origin master
cd ..
type <string>
git add .
npm i
exit
git clean -cf
cd
git push -f <string> <string>
cd
sed -i <string>
tail -$2 <directory>
mkdir <string>
ls
less
ls
su service httpd <string>
ls
ls
git add <string>
ls
git status
mv <string>
ls
xargs -L1
cd <directory>
clear
cd <string>
git branch -M <string>
fg
exit
ping -c <string>
vi <file>
ls
df -x
npm install querystring --save
cd <string>
passwd
make clean
vi <file>
ls
git commit -m <string>
php
cd <string>
ls
bash <file>
ls
apt-get -y <string> <string>
cd <string>
sudo tlp-stat -c
rm -rf <string>
cd <directory>
man <string>
grep <string>
cd
ls
rm -f <string>
ssh <string>
su
npm install <string>
exit
cd <string>
ls
npm init
ls
env
ls -l
cd ..
ls -la
ls
sudo apt update
ls -la
ls
nano
python3 <file>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
find . -empty -type <string> -print -delete
ls
exit
ls
cd ..
rm <string>
ls
read -p <string>
sudo docker kill corrade
clear
cd
docker-compose logs
ssh-copy-id <string>
grep -i <string> >files
sudo apt-get install --only-upgrade <string>
date
source <string>
sudo systemctl start <string>
reset
ls
scp <string>
git commit -a -m <string>
sed <directory>
ls
cp <string>
cd ..
ls
cd..
ls
exit
git reset HEAD^
npm install
kill <number>
ls
clear
cd <string>
git push -u
grep <string>
git push origin master
cd
fg
ls
cd <directory>
mv <string>
git clone <URL>
ls
ip addr <string>
sleep <number>
git add .
npm start
npm i pm2 -g
git clone <URL>
mkdir -p -- <string>
rm -rf <string>
cd <string>
dir
docker logs <string>
sudo rm -r <string>
sed <directory>
ls
ls
exit <number>
grep <string>
vi <file>
vim <file>
ls
git commit -am <string>
nano
cd <string>
sudo git add <string>
exit <number>
git status
cd <string>
git checkout -b <string>
chmod -R <string>
cd <string>
sh <file>
ls
grep <string>
rmdir <string>
git push
sudo apt autoremove
scp <string>
cd ..
git add <string>
cd <string>
touch <string>
cd <string>
cd <string>
ls
cd <string>
source <file>
cd <string>
git add <string>
exit <number>
mv <string>
screen -r
cp <string>
ls
ls -la
sudo ufw allow <string>
mv <string>
sudo wget -O <directory>
vim <file>
git status
curl -sSL -o <string>
df -h <string>
ls
read -r <string>
fg
ls
hexdump <file>
git pull --rebase <string>
git status
cd ..
sort > <file>
tmux kill-session -t <string>
cd ..
clear
sudo cp <file> <file>
cd <directory>
cat <string>
git remote add origin
cat <string>
cat <string>
head -$prune <string>
clear
npm install
vim
rm -rf <string>
exit
sudo apt install <string>
cd <directory>
git cm -m <string>
read <string>
ls
git add .
cat <string>
git add .
ls
git commit -m <string>
npm audit fix
cd <string>
nano <file>
find . -empty -type <string> -print -delete
history
grep <string>
ls
cd <directory>
cd <string>
docker-compose up
sudo xbps-remove <string>
clear
git commit -m <string>
grep <string>
sudo apt-get install <string>
pwd
git submodule add <URL>
ls
cd <directory>
exit
ls
mkdir <string>
ls
git status
python3 <file>
git push
cd <string>
cd ..
sudo install -b <file>
npm run dev
find . -empty -type <string> -print -delete
kill -9 <string>
ls
cd <string>
mv <string>
rm -f <string>
fg
ls
sudo emacs <string>
ls
ls
setg RHOSTS <file>
vim <file>
git status
exit <number>
grep <string>
<directory> <directory>
clear
mv --interactive -- <string>
apt-get install <string>
chmod <number> <string>
exit
git checkout <string>
git clone <URL>
wget <URL>
ls
git clone <URL>
cd <directory>
cd
git pull --no-edit
read -p <string>
exit <number>
sudo nano <directory>
ln -s <string>
apt-get -f -y <string> <string>
git init
rm -rf
ls
git checkout --
cd <directory>
docker-compose logs --follow <string>
find . -name <file>
cd
ssh dirlic@10.18.0.39 -p <number>
sudo ifconfig <string>
docker-compose logs
git hist
ps aux
ls -alrt
cd <directory>
grep <string>
touch <string>
open <string>
chmod <string>
cd <string>
ls
ls
vim <file>
who
ls
git add <string>
npm i <string>
mkdir -p <string>
sudo apt update
cd <string>
ls
git add .
git push
pwd
clear
cd <string>
ls
dpkg --configure -a
ls
git checkout <string>
nohup python3 <file> <string>
git rm <string>
python3 <file>
sudo bash
ls
top
mkdir -p <string>
cd <string>
cd <string>
rm -f <string>
docker cp <string>
fg
print <string>
ls -la
git clone <URL>
sudo mkdir -p <directory>
bash <file>
docker swarm init --advertise-addr <string>
mv <string>
ls
clear
cp -r <directory>
git add .
cat <string>
rm -rf <string>
sudo rm -r <string>
git commit
curl -fsSL <URL>
sudo apt upgrade
ls
ls
nano <file>
sudo nano <directory>
ls
cd <directory>
rm -rf <string>
ls -alh
cd <string>
git add <string>
vim <file>
read -p <string>
ls
ls
node
cat <string>
grep -A1 <string>
tmux set-window-option -g <string>
xargs gunzip -vt
cd <directory>
docker ps
cp <string>
cat <string>
git add .
sudo ufw <string>
sudo <directory> -s <file>
ls
vim <file>
cd
fg
docker-compose build teh-germinator
ssh <string>
cd <directory>
git pull
git mv <string>
git commit -m <string>
git commit -m <string>
ls
ls
df # shows disk usage
cd ..
sudo apt update
git config --global <file> <file>
sudo git pull origin master
cp <string>
rm <string>
curl -T <directory> <string>
sudo easy_install <string>
cd <string>
git add .
sudo git commit -am <string> --amend
chmod -x <file>
vi <file>
sed -i <directory>
cd <directory>
git clone <URL>
sh -s -- -y -b <directory>
git add .
git config
vim <file>
ls
git commit -m <string>
ls
cat <string>
sudo apt-get -y <string>
exit
cd
rm -i <string>
exit
cd ..
chmod +x <string>
wget $LM_URL -O <file>
mv <string>
vi <file>
cd <string>
cd ..
top
git config --global
find orig -name <string>
cat <string>
exit
git diff
ls
find states -type <string>
vim <file>
exit
vim <file>
ls
cd <string>
sudo shutdown -h
sudo vim <file>
git push origin master
sudo apt-get install <string>
find $dir -name <string> -exec <string> -nHP <string>
sudo mount -o <string>
find . -size <string> -a -print -a -exec <string> -f <string> \
git status
awk <string>
clear
git clone <URL>
docker build -t <string>
pkill <string>
exit
git clone <URL>
mv <string>
ls
cd <string>
read -p <string>
awk <string>
dpkg --list
docker-compose up -d --build
sudo nano <string>
git commit -m <string>
ls
clear
sleep <number>
read -rp <string> <string>
nano <string>
touch <file>
git clone <URL>
clear
ls
sudo dpkg -r <string>
ls
sudo apt-add-repository -y <directory>
read -rp <string> <string>
git status
exit <number>
ls
ls
cd <string>
git push -u <string> master
npm -v
exit
vim
cd <directory>
ls -al
git commit -m <string>
git commit -m <string>
cd <string>
git add .
git commit -m <string>
git add .
sudo python3 <file>
sed <directory>
sudo git pull origin master
ls
rm -rf <string>
ls
git push origin master
cd <string>
npm init -y
sudo dpkg --configure -a
xargs docker rmi
git status
git status
vi <file>
mv -f <string>
git push
cd <string>
sudo stop uwsgi
fg
cd ..
git pull
vim <file>
clear
sudo apt-get update
git add <string>
vim <file>
rm <string>
cd <string>
mkdir -p <string>
ls
npm install
sudo systemctl daemon-reload
git add .
ls
ls
ls
cat <string>
exit <number>
bash
python3.11 <file>
find . -name <string> -type <string>
git remote add origin <URL>
sudo systemctl start <string>
git clone --branch <string>
rm -rf <string>
bash
finger <user> # displays information about user
cd <string>
vi <file>
sudo chmod +x <string>
source <directory>
sudo apt-get install <string>
git remote remove <string>
chmod <number> <string>
mkdir <string>
node <file>
ls
clear
find . -empty -type <string> -print -delete
mkdir -p <string>
gunzip <file>
sudo dpkg -r <string>
source <string>
vim <file>
git filter-repo --path-glob <string> --invert-paths --force
kubectl get pod -n <string>
read -r -p <string>
exit
git config --global <file> <string>
ssh <string>
ls
cd <directory>
clear
npm run test
exit
vim <file>
cat <string>
sleep <number>
git clone <URL>
ls
git init
cd
cd <string>
cp <string>
ls
man <string>
find . -empty
ls
rm <string>
chmod -R <string>
find . -empty -type <string> -print -delete
ls
npm install -g <string>
mv <string>
clear
sudo pacman -Sdd <string>
rm -r <string>
ls
git cat-file -p <string>
ls
ls
mkdir <string>
npm run start
setg RHOSTS.*
done
mkdir <string>
cd <directory>
sudo bash
gpg --verify <file> <string>
sudo service nginx reload
reboot
git pull origin master
clear
ls
vim <file>
diff <file>
sudo systemctl enable <string>
ls
fg
sudo python <file> --cascade=<file> <number>
ls -la <directory>
git add <string>
mkdir <string>
ls
sed -ri <string>
ls
cd <string>
cd <directory>
exit
git push -u <string> master
cat <string>
brew tap <directory>
ls
ls
git remote add origin <URL>
rmdir <string>
sudo apt-get -y <string>
read -p <string>
git branch -d <string>
git add .
sudo apt update
vim <file>
sudo sed -i <directory> <file>
cd
less <string>
cd ..
pwd # tells you where you currently are
cd
git add <string>
mkdir -p <string>
cd <directory>
sudo apt purge lightdm* -y
ls
ls
sudo dpkg -i <file>
cd <string>
ls
ps aux
sudo mkinitcpio -p <string>
chmod -R --reference=<string> <directory>
sleep <string>
ps -ef
sudo su
vim <file>
sed <directory>
awk <string>
git reflog expire --all
ls
nano <file>
cd
exit
cd <string>
ls
ls
htop
git add <string>
git remote add origin <URL>
cd ..
cd <directory>
ls
git push -u <string> master
ls
exit
git add .
unset color_prompt force_color_prompt
cd <string>
cd <directory>
rm -rf <string>
find . -name <string> -type <string>
fg
cd <string>
git switch <string>
git status
ls++ -a
grep <string>
cd <string>
cd <string>
exit
ls
ls
ls
ls
local <string>
tar -xf <string>
vi <file>
ls
mkdir -p <string>
cd <directory>
sudo su
git remote add origin <URL>
python3 <file>
cd ..
cat <string>
sed <directory>
git config --global <file> <string>
cd <string>
open
screen -r
mkdir <string>
git commit -m <string>
npm start
ls
vim <file>
ls
cd <string>
find . -name <file>
git clone <URL>
clear
ls
git status
cd
git config <file> <file>
git branch -D <string>
docker images
ls -la <directory>
cd <string>
find . -empty -type <string> -print -delete
ls
docker run -ti <string>
git init
ls
git clone <URL>
ls
cd <directory>
vim <file>
sudo yum install -y <string>
sudo stop uwsgi
sudo apt-get install -y <string>
cd <directory>
sudo reboot
ls
apt-get autoremove
read <string>
sudo apt update
cd ..
fg
cd <directory>
ls -a
vim <file>
git remote add origin <URL>
python3 <file>
codedown javascript > <file>
then\
vim <file>
mkdir -p <string>
ls
source <directory>
sudo reboot
ls
npm run start
curl <string>
ls
rm -rf <string>
ls
ls
rm <string>
fg
cp <string>
xargs -0 <string> -- <string>
vim <file>
cd <string>
ls -lh
exit
sudo pacman -S <string>
chsh -s <directory>
clear
sudo rm -f <directory>
grep <string>
wc -l
sudo nano <directory>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
cd <string>
<directory> <directory>
git pull
git init
rm -rf <string>
clear
sudo apt update
git init
fg
clear
cd <directory>
git commit -m <string>
ls
ls
ls
tail -n <string>
sudo sed -i <directory> <file>
cd <string>
cd
sudo ln -s <directory>
cp -r <directory>
vi <file>
git rm <string>
screen -ls
git status
locate <string>
rm -rf <string>
cd <string>
sed <directory>
git clone <URL>
cd <string>
ls
history -w
npm run start
open .
git remote add origin <URL>
touch <string>
cd <directory>
cd
cd <directory>
exit
sudo pacman -S <string>
mv <string>
sudo apt-get remove --purge <string>
python3 <file>
sudo apt-get install <string>
git filter-branch --prune-empty --index-filter <string> --tag-name-filter <string> -- --all
sudo apt-get install <string>
read -rp <string> <string>
grep <string>
vim
git update-ref -d <string>
npm install
awk -F <string>
df -h
sleep <number>
ls
git push
exit
ls
fg
pwd
git add .
vim
npm install --save <string>
ls
docker-compose up -d --build
vi <file>
sudo apt-get clean
ls
vim <file>
ls
sudo snap install ruby --classic
mkdir <string>
which <string>
exit <number>
nano <file>
sudo journalctl --since <string> -e
git commit -m <string>
xargs -L1 -I'{}' <string> <file>
cd <directory>
vim <file>
cd ..
git push -u <string> master
ls
mkdir <string>
sudo apt-get update\
mv <string>
cat <string>
git config --global <file> <string>
find . -name <string> -type <string>
cd ..
chmod <number> <string>
ls
cd ..
wget <URL>
ls -lCc
vim <file>
sudo sed -i <directory> <file>
exit <number>
mkdir <string>
ls
ls
cd ..
git status
vim <file>
screen [-d] -r <file>
vim :%!xxd -r <string>
ls
shutdown
git checkout <string>
tmux source <file>
clear
vim
ls
cd
clear
clear
git clone <URL>
kill -9 <number>
cd <string>
cat <string>
ls
rm <string>
exit
cd ..
ls -l
sudo yum <string>
curl <string>
sudo reboot
git commit
sed <directory>
cd
rm -f <string>
cd <directory>
ssh <string>
cd <string>
cd
git init
fg
sudo ln -s <directory>
ps ux
git pull
ls
cd <directory>
git add .
cd <directory>
sudo sed -i <directory>
cd <directory>
git commit -m <string>
python3 <file> -w <file>
ps aux
rm <string>
git add <string>
cat <string>
sudo apt --purge <string>
chmod +x <string>
cd <directory>
screen -r
git diff
mkdir <string>
fg
git add .
sudo gem install <string>
pwd
ls
find . -empty -type <string> -print -delete
htop
ls
ls
ls
cd <string>
rm -f <string>
cd <directory>
cd <string>
less <string>
npm install <string>
cd ..
rm -rf <string>
git status
cat <string>
cd ..
git pull origin main
sleep <string>
sudo ifconfig en0 ether <string>
which <string>
docker stop <string>
passwd
grep --exclude <string> -r <number>
cd ..
head
git commit -m <string>
cd <string>
cat <string>
docker ps
code --verbose
cd ..
ssh dirlic@10.18.0.39 -p <number>
ls
ls
vi <file>
bzip2 --version <string>
ls -la
<directory> -m <file>
grep
git checkout <directory> -f
cd <string>
git clone <URL>
sudo find . -empty -type <string> -print -delete
npm run test
pacman -S <string>
cd <directory>
npm install
git remote set-url origin <string>
sudo make install
sudo python <file>
fg
cd <string>
git commit -m <string>
mkdir <string>
git pull
npm install --save <string>
docker logs <string>
which <string>
git push
apt-get install <string>
npm run build
ls
git log
cd <string>
git init
touch <file>
sudo apt-key add -
ls
git status
git log
apt-get install <string>
exit
clear
ls
git pull origin development
npm install -g <string>
ls
git init
nano <string>
ls
su -
vi <file>
git branch
ls
git merge <string>
sudo sed -i <directory>
sudo rm public_data
cd <string>
sleep <number>
cd <directory>
cd
sudo snap install node --classic --channel=<number>
sudo sh -s <string>
cd ..
mkdir <string>
ssh dirlic@10.18.0.39 -p <number>
node <file>
date -f <string>
vim <file>
sudo cp <string>
git status
clear
done
cd <string>
cd ..
git status
ls
go test
grep -i <string> >files
clear
ls
less -RX
npm run build
date
column -c3 -s <string> -t
ls
sudo su
cd..
cd <string>
ls
rm <string>
exit
grep -B <number> <string>
git pull
git add <string>
find ~ -name <string>
git clone <URL>
pwd
tmux a
git pull
git init
xargs -n1 <string> -i <string>
apt-cache search <string>
cd ..
git commit -a -m <string>
ls -la
ls
vim <file>
chmod +x <string>
cd ..
grep <string>
vim <file>
kill -9 <number>
rm <string>
cd <string>
vi <file>
nano <file>
more <file>
wget <URL>
clear
do\
sleep <number>
chmod +x <string>
cat <string>
cat <string>
mv <string>
vim <file>
tr
chmod +x <string>
git commit -m <string>
sed -E -e <directory>
sleep <string>
sort
read -p <string>
cd
cat <string>
cd <directory>
cd
read -r -p <string>
rm -rf <string>
cd <directory>
yarn add -D <string>
history
git branch -d <string>
cp <string>
clear
vi <file>
clear
exit
exit <number>
npm install <string>
touch <file>
read <string>
vim <file>
rm <string>
git pull
cd <directory>
npm i <string>
git init
sudo apt-get -y <string>
sudo apt-get update
ls
ls
ls
ls -ltr
cd <directory>
find . -type <string> -name <string>
git commit -m <string>
find . -empty -type <string> -print -deletefind <string> -empty -type <string> -print -delete
ls
bash <file>
cd <string>
vi <file>
rm <string>
reboot -f
nano <file>
ls
ls -l
cat <string>
rm -rf <string>
cd <string>
ls
sudo make install
ls
git init
grep <string>
vi <file>
vi <file>
cd <string>
ls
sudo apt-get update
exit
bash -s <string> --ruby
ls
php --help
ls
git add .
cd
ls
ls
grep -i <string> >files
git log
git commit -m <string>
vim <file>
cd ..
npm i <string>
docker run -d -t --name <string>
vim <file>
sleep <string>
sudo make install
exit
cat <string>
cd ..
ps aux
unzip <file>
rm -f <string>
sudo systemctl stop <string>
git push
git branch -M <string>
top
vim <file>
sudo pip install <string>
ls
cd <directory>
cd <string>
rm <string>
ls
apt-key add -
sudo npm uninstall <string>
sudo pacman -S <string>
vim <file>
sudo dnf search <string>
find src
ls
git push -u <string> main
ls
vim <file>
cat <string>
git push -u <string> main
sh <file>
history
screen -X -S <string>
local <string>
chmod u+x <string>
exit
git add <string>
ls
git add .
exit <number>
mv -iv <string>
sleep <number>
vim <file>
vim
ls
cat <string>
vi <file>
sudo apt-key adv --keyserver <string> --recv-keys <string>
which <string>
ftp <string>
git status
cd <string>
mkdir <string>
cd <directory>
clear
unset -f <string>
git add <string>
curl <directory> -qO- <URL>
sudo vim <directory>
pwd
cat <string>
clear
git stash
vi <file>
ls
cd
sudo apt-get update
sed -E -e <directory>
cd <directory>
git checkout <string>
ls
cat psql -h <string> -U <string> -d <string>
sleep <string>
sudo rm -rf <directory> <directory>
ls
vi <file>
cd <directory>
ls
git add .
npm run dev
find . -name <string> -type <string>
cd <string>
cd ..
clear
ls
source <directory>
sudo sed -i <directory>
ls
ls
sudo start uwsgi
cd
cd <directory>
git merge <string>
cd ..
then\
npm install <directory> -D
cd <string>
pacman -S <string>
vi <file>
mv <string>
cd ..
curl -O <URL>
ls
man <string>
cd <string>
sh
cd <string>
ls
cd <string>
sudo apt install <string>
touch <string>
history
git status
grep -r <string>
vim <file>
cd ..
cd <string>
exit
cut -d <string> -f <string>
sort
ls
git status
git reset --hard <string>
ls -alrt
docker push <directory>
cd <string>
df
done
sh <file>
rm -f -- <string>
cd <string>
git status
cd <string>
fg
sudo <directory> -RfX <directory>
sudo su - <string>
grep -R <string>
sudo apt-get install <string>
ls
git push -u <string> main
code <string>
cd <string>
cd <directory>
git status
mv <string>
docker ps
exit
source <file>
vim
ls
sudo php <string>
exit
sudo wget <URL>
fg
vi <file>
git -C <string>
git remote add origin <URL>
curl <string>
ls
ls
git remote add origin <URL>
cp <string>
ls
cat <string>
ls
sudo -i
exit
git remote set-url origin <string>
cd <string>
nano <file>
clear
git add
git branch -a
grep $BAZEL_GREP -nrE <string>
ls
ssh-keygen -t <string>
vi <file>
git pull
history
git status
git init
sudo apt purge <string>
python3 <file>
openssl passwd -6
rm <string>
sudo apt remove <string>
mvn clean <string>
locate
cd <string>
ls
cd <string>
sudo snap install code --classic
chmod <number> <string>
vim <file>
cd
ls
ls
cd ..
ls
git push origin master
cp -a <string>
clear
unset <string>
git branch 2> <directory>
less <string>
vim <file>
cd <string>
python3 <file>
npm run dev
cat <string>
cd <directory>
curl -O <URL>
git commit -m <string>
cd ..
cd ..
python3 <file> runsslserver --certificate <file> --key <file>
git merge <string>
sudo npm install -g <string>
cd <string>
mkdir <string>
sudo stop uwsgi
<file> <file>
sed -i -e <string>
cd
clear
vi <file>
git push --help
mkdir <string>
install
ls
nano <file>
vim <file>
chmod <number> <string>
git diff <string>
touch <string>
npm i
clear
git status
who
cd <string>
cd <string>
grep <string>
git pull
sed <directory>
vi <file>
clear
ls
vim <file>
wget -r -A <URL>
rm <string>
cd <directory>
ls
alias <string>
cd ..
git status
cd ..
cd <string>
sudo python3 <file>
git status
top
node <file>
vi <file>
ls -la
git diff <string>
reset
cd <string>
npm run pretty
cd <string>
vim <file>
ls
ip
cd <string>
grep -iER <string>
history # shows command line history
cd <directory>
cd <directory>
ls
sudo sed -i <directory> <file>
git init
git pull
cd <string>
cut
ls -l
git add .
vim <file>
clear
vim <file>
exit <number>
find . -empty -type <string> -print -delete
grep <string>
cp -r <directory>
sudo udevadm trigger
git status
exit
ls
ls
printf <string>
git branch main
sudo httrack --ext-depth=<number> <URL>
chmod +x <string>
man <string>
sudo reboot
ls
git submodule add <URL>
cd <string>
git commit -m <string>
ls
git commit --amend --no-edit --no-verify
ex
ls
npm i
curl -sL -O <string>
cd <directory>
vim --version
sudo cp <string>
ls
xrandr
ping <string>
cd ..
npm i
python3 <file>
cd ..
touch <file>
cd <directory>
git push
sudo su
git commit -m <string>
ls
apt-get update
ls
source <string>
vim <file>
cd <string>
apt-get install <string>
sudo pacman -U <file>
cd ..
sudo snap install <string>
tar -xvf <file>
ls
cp <string>
sudo luarocks --lua-version <string>
vi <file>
vim <file>
cd <string>
mkdir <string>
cd <string>
git add .
clear
ls
ls
cat <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string>
vi <file>
mkdir <string>
cd <string>
git push
python3 <file>
mv <string>
cd <string>
cd <directory>
cd <directory>
python3 <file>
cd <string>
ls
ls
sudo make
git
touch <string>
cd ..
tail -f <string>
ls -ltr
cd <directory>
cd <string>
cd <directory>
cd ..
apt-get install -y <string>
sudo docker logs -f <string>
grep <string>
sudo apt install <string>
man -k <string>
cd <string>
code .
cd <directory>
git init
cd <string>
exit
vim <file>
vi <file>
vim <file>
su
ls
rm -r <string>
cd <string>
ls
cd <directory>
cd <directory>
rm <string>
ls
git push
ls -alrt <string>
vim <file>
cd <directory>
curl -sL <URL>
cd ..
git commit -m <string>
read -p <string>
cd <string>
cd <string>
curl <URL> --silent
sudo nala update -y
cd <string>
ls
chmod <string>
sudo touch <directory>
exit <number>
ls
ls
git pull origin master
head -c <string>
pwd
grep -v <string>
git ls-remote <string>
which <string>
cd <directory>
cd <string>
chmod <number> <string>
date <string>
git add .
sudo apt update -y
shutdown -h <string>
LANG=<string> rpm -qp --queryformat <string>
curl -i -s <URL>
sudo <file> -v -r -w <string> -o <string>
apt-get update
cd <string>
chmod u+x <string>
ls
git pull
git clone <URL>
sed -n <string>
sudo easy_install
ls
cp <string>
ls
git config --global <file>
ls
ps -ef
ls
sudo nano <directory>
git add .
clear
service apache2 restart
npm run coverage
docker volume rm <string>
git commit
ls
docker-compose down
cd <string>
ls
ls
chmod a-w-r-x,u+r -- <string>
sudo vi <file>
exit <number>
tar xvf <file>
sudo raspi-config
sudo apt install <string>
rm -rf <string>
vim <file>
cd ..
vim
ps ax
cd <string>
vim <file>
ls
sudo apt install wordpress -y
vi <file>
grep -rhn <string>
rm -rf <string>
git log --oneline --graph
cd ..
zgrep -i <string>
sudo installer -store -pkg <file> -target <directory>
python3 <file>
sudo apt install <string>
find . -empty -type <string> -print -delete
ls
git add .
cd <directory>
mv <string>
cd <string>
sudo sed -i <directory> <file>
sudo python <file>
docker run -d -p <string> -v <file> -v <directory>
mkdir <string>
ls
cd <directory>
cd <directory>
exit
exit <number>
vim <file>
rm <string>
git commit -m <string>
git commit -m <string>
read -e -p <string>
sort -g
git remote rm <string>
cat <string>
cd ..
read -r <string>
sudo apt-get clean
rm -rf <string>
clear
sudo apt install <string>
exit
touch <file>
cd <directory>
bash <file>
ls
fg
cut -d"/" -f <string>
git switch main
ssh <string>
cd ..
ls
cd <string>
python3.11 <file>
ls
ls
source <string>
cd <string>
ls
vim <file>
cd
sudo update-initramfs -u -k <string>
ls
sed <directory>
mkdir <string>
ls
find . -name <string> -type <string> -ls -delete
npm start
cd ..
sudo reboot
cd
exit <number>
cd <string>
sudo apt-get upgrade -y
node <file>
vim <file>
ls
vi <file>
grep --help
find . -empty -type <string> -print -delete
clear
code .
cd <string>
ls
ls
vim <file>
cp -r <directory>
ls
ls
docker-compose -f <string>
ls
python3 <file>
more
git commit -m <string>
cd <string>
ls -la <directory>
docker --version
ls
ls
ls
which <string>
vim <file>
npm install --save-dev <string>
rm -rf <string>
git push
git commit -m <string>
git branch -M <string>
cd <string>
find . -type <string>
ls
sudo mkdir -p <directory>
cd <string>
cd
ls
ls
sudo sed -i <directory>
vi <file>
ls
bash <file>
cd <directory>
cat <string>
apt-get update
git rebase <directory>
git commit -m <string>
awk <string>
cd <string>
tail -f <directory>
git status
ls
git diff <string>
fg
ls
git commit -m <string>
ls
ls
rm -help
vi <file>
python3 <file>
sudo ufw allow <string>
vim <file>
chmod +x <string>
cd <directory>
sudo yarn install
ssh-keygen -t <string> -C <file>
cd <string>
git pull
then\
sudo docker ps -a
git push
exit
ls
df -h
ls
exit <number>
git diff
vim <file>
cp <string>
df -h
ls
ls
cat <string>
vim
su
cd ..
cd ..
sudo apt-get -y <string>
ls
ls -l
clear
find . -name <file>
ls
cd <directory>
git clone <URL> --depth <number>
sed -E -e <directory>
vi <file>
mv <string>
git commit -m <string>
cd ..
find .
git add -A
sudo rm -r <string>
curl -k -s <URL>
ls
sudo rm -rf <string>
source <directory>
exit
ls
sudo add-apt-repository <directory>
cd <directory>
git checkout <string>
read -r <string>
exit
grep <string>
cd <string>
cd ..
tac <string>
git push
python3
grep -i <string> >files
git add <string>
vim <file>
wget <URL>
git status
git push origin master
grep <string>
cd..
docker-compose up
setg RHOSTS <file>
vim <file>
ls
mkdir <string>
man <string>
cd <string>
ls
ls
git pull
clear
git add .
open <string>
xargs -I{} -n1 <string>
ls
grep -E <string>
git branch -M <string>
cat <string>
cp <string>
sudo nano <directory>
source <string>
git update-index --really-refresh -q <directory>
ls
ls
cd ..
ls
cat <string>
sudo apt install ruby-dev -y
git add <string>
sudo apt-get purge <string>
git commit -am <string>
sudo start uwsgi
git commit -am <string>
perl -nle <string>
cd ..
sudo apt install -y <string>
ls -la <directory>
ls
ls -al
ls
sudo apt install <string>
done
ls
pwd
sudo service <string>
rm -rf <string>
cd ..
sudo -i
ls
exit <number>
sudo npm i prettier -g
history -a
cd
tmux source-file <file>
eval <string>
sudo vi <file>
sh <file>
cp <string>
sed <directory>
grep -iIHrn --color=<string> <string>
sleep <number>
grep -i <string>
vim <file>
git clone <URL>
sudo ls <directory>
git pull
ls -all
head -n <string>
pwd
vim <file>
grep <string>
cut -d <string> -f-200
uniq
source <directory>
rm -rf <string>
unset <string>
sed -i <string>
ls
cat <string>
cd <string>
ls
ls
cd <string>
ls++ -a
sudo
git status
cd <directory>
cd <string>
cp <string>
systemctl start <string>
sudo pip install -U <string>
pwd
bash
ls
clear
ls
sudo docker run hello-world
grep -Fxq <string>
grep * -e <string>
vi <file>
ls # lists your files in current directory, ls <dir> to print files in a specific directory
pwd
find Clientmate-5.3 -type <string> -exec <string> <number> <string>
ls
git checkout <string>
ls
fg
sleep <string>
cd ..
cat <string>
ssh <string>
ls
cd <string>
sudo reboot
ls
npm install
clear
git commit -m <string>
cut -f1 -d <string>
exit <number>
rm -rf <string>
python3 <file>
exit
ls
sed -E -e <directory>
clear
git push -u <string> bryan-guner
grep -E <string>
cd <string>
vi <file>
tail -f <directory>
git fsck
vim <file>
git branch -a
exit
code <string>
sudo reboot
rm -rf <string>
sudo apt-get update
wget <URL>
ls
grep -w <string>
vi <file>
dmesg
git remote add origin <URL>
chmod <number> <string>
sudo apt install <string>
sudo apt-key add -
exit
ls
sudo bash
mv -f <string>
sudo stop uwsgi
ls
mkdir <string>
vi <file>
then\
ls
cd <directory>
ls
ls
cd <string>
ls
ls
ls
git commit -m <string>
git push
alias <string>
ls
git fetch origin <string>
cd
cp <string>
git add <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
history -r <string>
tmux
cd ..
fg
ls
systemctl stop kubelet
git config --global <file>
git reset --hard
sed -i <string> -e <string>
grep <string>
ls
chmod +x <string>
ls
cut -d <string> -f <number>
git commit -m <string>
sh <file>
npm start
git pull
cd <string>
git clone <URL> --branch <string>
git commit -m <string>
sudo certbot --nginx -d <file> -d <file> -v
find <directory> -name <string>
rm <string>
date
python3 <file>
npm run pretty
sudo docker build -t <string>
cd <string>
git clone <URL>
ls
git remote add origin <URL>
ssh-keygen -t <string>
git clone <URL>
ls
cd <directory>
git add .
clear
more <file>
vi <file>
find -name <string>
history -a
wget <URL>
ls
clear
git add .
exit
cd <string>
sudo restart <string>
sudo apt-get install curl -y
less <string>
cp <string>
sudo apt-get -y <string>
ssh-add
exit
git status
git add <string>
clear
cd <string>
git status
ls++ -a
rsync <directory>
ls
curl <string>
exit
ls
rm <string>
rm <string>
cd <string>
git add .
pico <file>
git push origin <string>
openssl rand -hex <number>
ls
vi <file>
ls
clear
cd
sudo systemctl daemon-reload
npm run coverage
exit <number>
killall <string>
ls
ls -lrt
sudo sh <file>
ls
ls
ls
top
ls
vi <file>
find . -type <string> -name <file> -exec <string> --with-filename <string>
cd ..
tmux select-window -t <string>
git checkout <string>
ssh -qTnNfD <number>
cd <string>
mkdir -p <string>
git switch <string>
clear
ls
vi <file>
git commit -m <string>
fg
top
cd <directory>
find <directory> -type <string> -name <string>
git status
tmux show -s <string>
tail +x # want to display all the lines from x to y. This includes the xth and yth lines.
sudo sh -c <string>
cd <string>
dpkg --get-selections
sleep <number>
clear
tmux send-keys -t <string>
cd <string>
ls -ltr
ls
sudo sed -i <directory>
npm audit fix
exit
git init
rm <string>
clear
ls -l
cd <string>
clear
zip -FS -q -r <file>
ls
ping <string>
rm -rf <string>
npm run coverage
pwd
ls
tmux a
service <string>
curl <URL> -u <string>
git remote -v
cd <directory>
head -n <number>
sudo apt-get update
python3 <file>
alias
ls
ls
make clean
cd ..
ls local
apt-get -y <string> <string>
sed -i <directory>
sudo sed -i <directory> <file>
ls
ls
mv <string>
ls
ls
git commit -m <string>
git please
cd <directory>
python3 <file>
cd <directory>
cp -av <directory>
docker-compose logs
ls -ltr
grep <string>
sed -i <directory>
git push origin main
cd <string>
cd <directory>
sleep <number>
cd <string>
ls
cd <string>
ln -sf <directory>
vim <file>
git commit -am <string>
cd <string>
curl <URL> -OJL
exit
cd <string>
npm i require-dir-all -f
pwd
sudo pacman -S <string>
sudo apt install <string>
pwd
ls
sudo vim <directory>
git reset --hard
cd <string>
cd ..
export <string>
sed -i <directory>
free -m
git remote -v
ls
sudo gem install ffi -- --enable-libffi-alloc
clear
sudo curl <URL>
bash <file>
exit
mkdir -p <string>
cp <string>
sudo apt-get update
exit
cd
sudo chmod -R <number> <string>
git commit -m <string>
cd
vim <file>
ls
mkdir -p <string>
rm <string>
vim <file>
mvn archetype:create -DgroupId=<string> -DartifactId=<string> -DarchetypeArtifactId=<string>
sudo nano <directory>
source <file>
git reset <string>
wget <URL> -O <directory>
git status
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
cd <string>
fg
cd ..
git push
rm <string>
tmux kill-server
ls
curl -H <string>
ls
du -sh <directory>
cd <directory>
ls -ltr
sleep <number>
nc <number> <number>
sed <directory>
grep <string>
sudo apt update
vi <file>
fg
git add --all
ls
ps -u <string> # lists your processes
cd..
ln -s <string>
nano <file>
git clone <URL>
ls
cd <string>
help <string>
more <file>
git add .
pwd
git push -u <string> bryan-guner
vim <file>
a ! href <string>
git commit -m <string>
ls
ls
ls
sleep <number>
sudo sed -i <directory> <file>
cd
<directory> -m <file>
top
sudo apt install <string>
git commit -m <string>
cd <string>
git commit -m <string>
git branch main
git bisect good <string>
sudo dpkg -i <file>
ls
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
bash
cd <string>
ls
ls
find . -name <file> -type <string> -print -delete
vim <file>
yay -S <string>
rm -f <string>
git status
cd
git init
git push origin master
rm -fr -- <string>
docker commit <string>
systemctl start docker
ls
df -h
vim
unset -f <string>
ls
cd ..
read -p <string>
cd ..
git init
git remote add origin <URL>
git commit -m <string>
git add <string>
rm -r <string>
git add -A -- <string>
git clone <URL>
cd <string>
ls
find -mindepth <number> -name <string>
ls
pwd
sudo chown -R <string>
pwd
fg
cd <directory>
ls
cd <string>
wc -l
git pull
sudo supervisorctl status
pwd
vi <file>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
docker rm <string>
ls
cd <string>
vim <file>
git status
clear
ssh dirlic@10.18.0.39 -p <number>
git add <string>
ls
sudo apt install <string>
cd <directory>
ls
ls
grep <string>
ls
ls
ls
clear
exit <number>
git branch
fg
<directory> <directory>
ls
sudo bash -s -
git status
cd <string>
find . -empty -type <string> -print -delete
clear
ls -ar
git add .
cp <string>
df
ls -al
vi <file>
ls
git add .
touch <string>
ls
npm init
sudo -l
cd ..
env
ls
wget <URL>
fg
sudo apt -y <string>
vi <file>
su
git push -u <string> master
git pull
sed -i <directory>
code <string>
cd <string>
cd <directory>
ls
ls
vi <file>
git remote add origin <URL>
exit
sudo apt-get update
exit <number>
git status
ls
sudo fc-cache -f -v
curl -sSL <URL>
sudo cp <file> <file>
cd <string>
cd
ssh <string>
grep <string>
git status
sed -i <directory>
systemctl disable <string>
npm i sass -D
nano <file>
cat <string>
sudo add-apt-repository <directory>
vim <file>
g++ -fPIC -DPIC -shared -nostdlib <directory>
cd <directory>
mv <string>
cd <string>
rm -f <string>
cd ..
curl <string>
rm -r <string>
fg
ls
cd <string>
sudo tail -f <directory>
sudo systemctl restart <string>
curl -T <directory> <string>
sudo apt install apache2 -y
sudo apt install -y <string>
mkdir <string>
dmesg
exit
cat <string>
cd <string>
sudo apt install <string>
git commit -m <string>
ssh <string>
ls
ls
sudo ls <directory>
git config --get <file>
ls
cut -d <string> -f <string>
rm -rf <string>
cd
cd ..
npm install <string>
code <string>
cd <string>
sudo mv <string>
sudo npm install <string>
chmod <number> <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
builtin cd <directory>
cat <string>
git branch --set-upstream-to=<directory> <string>
tmux
grep <string>
sudo apt-get install -y <string>
find . -size <string>
done
export <string>
exit
ls
exit
grep -Fxq <string>
ls -l
git bisect <string>
docker ps -a
ls
less
ls
vim <file>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git branch
cd <directory>
git add .
ls
fg
ls
git commit
ls
sudo dpkg -i <file>
sed <directory>
git pull origin master
git branch -a
mkdir -p <string>
python3 <file>
tail -10
mkdir <string>
mkdir <string>
history -a
clear
ls
git pull
ls
exit
grep <string>
docker pull <string>
touch <file>
sudo apt-get -y <string>
git push -u <string> main
rm <string>
ls
apt-get install <string>
cd ..
cd <string>
ls
sudo apt-key add -
sudo cp <string>
find <directory> -newerct <string> -print
cd <directory>
sudo make install
docker-compose build teh-germinator
cd ..
tar -xvzf <file>
nano <file>
sudo apt -y <string>
ls
sudo apt upgrade
sudo ifconfig en0 ether <string>
bash -s -- <string>
find <directory> -mtime -1 -ls
ls -l
rm <string>
git config --global <file> <file>
git pull origin main
nano <string>
ls
ls
cat <string>
ls
ls
vim <file>
sudo fdisk -l
cat <string>
chmod u+x <string>
rm -r <string>
ls
cd <string>
cd <string>
cd <string>
history # shows command line history
npm run dev
vim <file>
brew unlink <string>
cd <directory>
cd <string>
sudo add-apt-repository <string> [arch=<string> <URL>
ls
mv <string>
sudo ufw status
docker load -i <file>
cd <directory>
ls
cd <directory>
sudo apt install <string>
tail -$2 <directory>
rm -rf <string>
git status
vi <file>
rm <string>
wget <URL>
sudo pcmanfm
ls
rm <string>
git commit -m <string>
sudo service nginx reload
git stash pop
git push -u <string> main
grep -iE <string>
ps -ef
pbcopy
ssh dirlic@10.18.0.39 -p <number>
dir
sudo motion -n
ls
cd <directory>
find . -type <string> -name <string> -exec <string>
git add <string>
ls projects
cd <string>
wget -O <file>
ls
ls
cd <string>
mv <string>
scp -r <string>
git add .
cd <string>
ls -alrt
git rebase --abort
sudo cp <file> <file>
cat <string>
ls
find . -type <string> -exec <string> <directory>
ls
git pull
ls
git status
git pull origin master
ls
tmux -V
git push
git commit -m <string>
sed <directory>
open .
vi <file>
ls
vim <file>
docker-compose
mv <string>
git status
git push origin master
ls
git switch <string>
rm <string>
ls
date
cd <string>
git diff
ls
cat <string>
clear
cd ..
sudo pacman -S <string> --noconfirm
git commit -m <string>
rm -rf <string>
clear
ls
git clone <URL>
sudo apt-get install -y <string>
ps -ax
vi <file>
ps aux
alias <string>
ln -s <string>
ls
ls
docker-compose logs
cd <string>
cd
git status
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
find <directory> \( -iname <string> -or -iname <string>
git fetch
useradd <string>
git add -A
du -h <directory>
curl -v --data <string>
git status
git commit -m <string>
cd <string>
curl -LO --output-dir <directory>
vim <file>
git commit -m <string>
ls
ls -alh
ls
ls
node <file>
ls -ls
npm start
apt-get update
cat <string>
ls
sudo ufw status
rm -rf <string>
rm -rf <string>
vim <file>
ls
grep <string>
sudo reboot
ls
cd <string>
sudo python <file>
ls
ls
exit
ssh <string>
ls
ls
docker rm -f <string>
vi <file>
npm i
read
sudo apt-get install -y <string>
kubectl get <string>
clear
ping <file>
ls
mkdir <string>
ls
sudo reboot now
done\
vim <file>
cp <string>
cp <string>
git remote add origin <URL>
exit
git commit -m <string>
pwd
exit
ls
ls
eval <string>
ls
vim <file>
cd <string>
cd.
python3 --version
ls
fg
exit <number>
ls
read <string>
cd <directory>
kubectl <string>
ls
cd ..
cd <string>
cd <string>
curl -fsSL <URL> -o <file>
docker-compose logs
sudo useradd --home <directory> --group <string> --shell <directory>
cd <string>
vi <file>
git push
cd
ls
cd
rm <string>
ls -al
vim <file>
ls -la
ls
find . -type <string> -mtime <string>
cd <string>
ls
git commit -m <string>
npm install -g <string>
cd <string>
ping <string>
vim <file>
cd ..
dpkg -i <file>
git commit
cd <string>
git push
mkdir <string>
then\
cd <string>
sudo installer -store -pkg <file> -target <directory>
cd <string>
read -p <string>
mount
ls
vim <file>
cp -r <directory>
sudo apt-get update
cd <directory>
git clone <URL>
fg
df -h
exit <number>
ls -l
python3 <file>
ls
fg
cd <string>
fg
code .
git add .
git ls-remote <string>
apt install <string>
git hist
ls
ls
npm install -g <string>
ls
cd ..
sudo apt install <string>
du
grep -i <string> >files
source <file>
vi <file>
cp <string>
sudo su
sudo pacman -Syu <string>
npm install
history
ls -la
xargs -L1 <string>
git add .
git commit -m <string>
curl -X <string> -d <string> -d <string>
history
npm run bench -- -c <file> -n <file>
sudo rm -rf <string>
sudo sed -i <directory> <file>
git pull origin master
find . -empty
git add .
sudo update-alternatives --config <string>
ls
tail -f <string>
clear
ls
git gc --aggressive --prune=<string>
vim <file>
cd <string>
cat <string>
ls
git init
ls
git add .
mv <string>
rm -fr <string>
sudo yum install tree -y
ls
git pull
brew install <string>
git branch -M <string>
ls -lah
sed <directory>
vim
git add <string>
vim <file>
ls
git add .
chmod +x <string>
clear
ls
ls -la
sleep <number>
ls
vi <file>
git add .
ls
sed -i <string>
sudo pacman -S <string>
cd <string>
grep -a -i -E --no-filename <string>
df -h
sudo cp <string>
apt-add-repository
top
exit
export <string>
ssh -t <file> tmux new -As0
cd <string>
git log
cd ..
vim <file>
wget <URL>
find . -name <string> -print
ls -al
read -p <string>
cd <directory>
grep <string>
exit
ls
sudo make -j4 <string>
cd <string>
sudo apt install <string>
sed -i <directory>
sed -i -e"s/# <string>
cp -r <directory>
git status
cd <string>
exit <number>
sed -e <directory>
git config --global <file> <file>
git add <string>
sudo snap install <string>
sudo nano <directory>
mkdir -p <string>
cd <directory>
git tag <string>
cd <string>
ls
file <string>
sudo journalctl -u <file>
ls
ls
sudo jpico -nonotice -linums -nobackups <string>
ls
git status -v
git commit
sudo pacman -Rns <string>
vim <file>
open .
ls
ls
cd ..
ls
vi <file>
ls -l
cd ..
cat <string>
wget -q <URL> -O <file>
python3
sudo sed -i <directory> <file>
ls
vi <file>
clear
grep -i <string> >files
ls
git add .
sudo systemctl restart <file>
vim <file>
ssh <string>
git add <string>
source <string>
node <file>
python3 <file>
ip a
cd <string>
git checkout -b <string>
sudo systemctl enable <string>
vim <file>
clear
git push
ls
cd <string>
ls
rm <string>
vim <file>
git log
cd <directory>
less <string>
cd <directory>
true
ls
touch <file>
find ${DirFindRoot} -type <string> -name <string> -print0
vim
ls
vi <file>
git cat-file -p <string>
git add .
chmod <string>
git branch
rm -rf <string>
ls
ls
screen -r <string>
wget <URL>
vi <file>
sudo nano <string>
exec <string>
ls -la
ls
rm <string>
ls
cd <string>
ls
nano <string>
then
cd <string>
git add .
wget <URL>
python3 <file>
cat <string>
git merge <string>
ls
cd <string>
cd <string>
cat <string>
clear
sudo vim <directory>
vim <file>
cd ..
ls -alh
cd <directory>
cd..
cd <directory>
sudo apt-get purge <string>
pwd
git add .
sudo docker kill corrade
git commit --amend --reset-author
cd <string>
ls
sudo gpg --dearmor -o <directory>
clear
sudo make clean install
cd <string>
ls
cd ..
apt search <string>
curl -sSL <URL>
vim <file>
git log
ls
cd <string>
mkdir -p <string>
cd <string>
su -
exit
git push
ls
sudo apt update
cd <string>
git status
ls
chmod a+w -R <string>
git commit -m <string>
sudo apt-get -y <string> <string>
ls
git add <string>
chmod <number> <string>
cd ..
git commit -m <string>
git commit
mv <string>
vi <file>
cd ..
git push
ls
ls -la
git checkout <string>
grep -Eq <string>
chmod <number> <string>
sudo apt-get update
sudo nano <string>
ln -s <string>
cd <string>
git remote add origin <URL>
sudo sed -i <directory> <file>
rm -rf <string>
sudo docker rm corrade
git add <string>
cd ..
mkdir <string>
less <string>
vim <file>
exit
cd ..
git reset HEAD^
git status
exit
ls -a
tail -f <directory>
clear
rm -rf <string>
cd ..
git status
npm config
sudo apt-get install <string>
pico <file>
history -a
rm -rf <string>
cd <string>
git push origin main
cp -r <directory>
npm i <string>
git add
vi <file>
then\
ls
source
cd ..
vi <file>
code .
git add <string>
ls
cat <string>
cd <string>
mv <string>
ls
cd <directory>
cd
cd <string>
git pull
cd <string>
awk -F',' <string>
curl -sL <URL>
vim <file>
clear
ls
git add .
ls -la
git diff
rm <string>
clear
uniq -c
cat <string>
ls
ls
cp <string>
cd <string>
git commit -m <string>
ls -a
cd -
exit <number>
ps aux
tar zxvf <file>
pwd
find . -name <file>
git log --oneline
docker stop bigballers
vi <file>
git add .
cd <directory>
git push
ssh dirlic@10.18.0.39 -p <number>
git status
ls
ping <string>
ls
sudo poweroff
docker-compose up -d --build
git add <file> -f
cat <string>
vi <file>
kubectl <string>
ls -lart
cd <string>
cd <string>
cp <string>
cd <directory>
mv <string>
git push origin
clear
chmod u+x <string>
sudo dnf install <string>
git checkout -- <string>
grep listen -nrw <file>
exit <number>
sudo pacman -S <string>
cd <string>
less
rm <string>
sort
ls
lsblk
ls
ls
cd <string>
ls
git commit -m <string>
sudo rsync -av --progress <directory>
vim <file>
rm -rf <string>
cd <string>
rm <string>
git push -u <string> master
sudo poweroff
ls
ls
systemctl start kubelet
rm -r <string>
cd <string>
git merge <string>
cd <string>
vi <file>
ls
ls
mv <string>
sudo chmod a+rwx <directory>
telnet <string>
find . -type <string> -name
cat <string>
read -rsn1
read -rp <string> <string>
sudo tail -f <directory>
git init
nano <string>
vi <file>
git config --global <file>
mkdir <string>
ls
python3 <file>
sudo yum install <string>
cd <directory>
ls -la <directory>
ls ..
ls
clear
git push
git status
unset color_prompt force_color_prompt
mkdir <string>
cd <string>
a ! href <string>
exit
rm <string>
exit <number>
sudo apt install -y <string>
npm start
touch <string>
git push -u <string> main
exit
brew install <string>
sed -e <directory>
cd <directory>
exit
ls
docker pull <string>
ps -A
cd <string>
cd <string>
clear
rm -rf <string>
ls
cd <string>
source <file>
ls
ls
python3 <file>
curl
curl -LO <string>
vi <file>
touch <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
docker exec -it <string>
sed <directory>
man <string>
cd ..
rm -r <string>
cd <string>
ls
sudo touch <directory>
mv <string>
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git commit -m"update"
vim <file>
sudo python <file>
npm uninstall -g <string>
git status
git remote add origin <URL>
git push -u <string> main
ls
vim <file>
cd <string>
cd <directory>
cd <string>
cd <string>
cd <string>
clear
cd <string>
cd ..
clear
cd <string>
rm -f -- <string>
cd <string>
vim <file>
cd <directory>
cd ..
ls
ls
cd <string>
ls
docker-compose logs
sed -n <string>
cd <string>
more <file>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE <string>
git add <string>
clear
tmux attach
git init
git pull origin master
cd <string>
vi <file>
clear
git push -u <string> main
ls
vi <file>
ls
npm run dev
sudo ls <directory>
ls
git push
wget <URL>
mv <string>
grep -v <string>
vi <file>
tr <string> <string>
clear
vi <file>
apt-get -u <string>
cd <string>
git diff
sudo reboot
sudo gem install <string>
cat <string>
cd ..
tmux --version
vim <file>
git status
fg
ssh dirlic@10.18.0.39 -p <number>
cd <directory>
code .
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
pkill <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
vim <file>
ls
find . -type <string> -print
mv <string>
cd <string>
cat <string>
git pull origin development -f
touch <string>
exit
git status
pwd
vi <file>
git verify-pack -v <file>
mkdir <string>
ls
vim <file>
cp -r <directory>
python3 -m <string> install <string>
docker-compose logs --follow <string>
git fetch
cd ..
cd ..
find . -type <string> -exec <string> -i <directory>
ls
cd <string>
sudo cp <string>
sudo sed -i <directory> <file>
brew cask install <string>
ls
sh
sudo yum install -y <string>
git status
python3 <file>
git status
sudo apt-cache search <string>
ls
ls
npm run start
cd ..
chmod u+x <string>
grep <string>
git remote
cd
git clone <URL>
cd
cd <directory>
clear
sudo adduser <string>
ls
clear
cd <string>
do\
cd <string>
kubectl apply -n <string> -f <file>
ps aux
clear
clear
cd <string>
man <string>
find . -empty -type <string> -print -delete
git add .
ls -la
exit
cd <string>
ls
cd ..
sort -V
cd <string>
ls
git clone <URL>
mkdir <string>
ls
cd <directory>
touch <string>
clear
cd
git push
cd
git reset --hard
cd <string>
man <string>
sudo pip3 install <string>
cd <directory>
sudo sed -i <directory>
git push
mount -l
ls
git init
nano <file>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
sudo mount <directory>
cd <string>
npm uninstall <directory> --force
pwd
vi <file>
clear
kill -9 <number>
ls
mkdir -p <string>
ls
grep -v <string>
cd ..
cd <string>
mkdir <string>
sed -i <string>
git commit -m <string>
ls
sudo nala install <string>
cd <directory>
ls
ls
sudo pacman -Rns <string>
do\
git checkout <string>
sudo wget -qO <directory>
ls
ls
tail -f -n200 <directory>
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
ls
npm-recursive-install
git clone <URL>
top
ls
ls
unset color_prompt force_color_prompt
git pull
cd <string>
man <string>
cd <directory>
cd ..
mkdir <string>
git commit -m <string>
git add <string>
git checkout <string>
clear
exit
ls
git fetch origin
cd <string>
docker exec -it <string> bash
git status
git log --oneline
npm install
cd <string>
curl -H <directory> --data-binary <file>
ls
cd <string>
ls -la
find . -name <string> -type <string>
ls
ls
ls
cd
sudo apt-get autoclean
vim <file>
vi <file>
vi <file>
ls
which <string>
mv <string>
exit <number>
mount -l
cat <string>
npm init -Y
npm start
cd <string>
ps
ls
ls
rm <string>
clear
ls
chmod +x <string>
ls
nano <file>
cd <string>
cd <string>
ls -ltr
mkdir <string>
git commit -v -a -m <string>
find <directory> -type <string> -execdir <string>
ls
rm -i <string>
git status
cd ..
vim <file>
cd <directory>
git add <string>
rm <string>
ls
rm -f <string>
history # <string>
cd <directory>
exit
source <string>
rm <string>
ls
cd <string>
sudo nano <directory>
vim <file>
vi <file>
grep <string>
git config --global <file> <string>
cd <string>
ls
sudo stop uwsgi
cat <string>
curl -k <URL>
ls
sudo docker rm corrade
git config --global <file> <string>
sudo rm -rf <string>
sudo vi <directory>
grep -v <string>
nano <file>
git cat-file -p <string>
apt-get install <string>
ls -la
rm <string>
vi <file>
awk <string>
cd <string>
ls
mv <string>
sudo apt-key adv --keyserver <file> --recv-keys <string>
cat <string>
cd <string>
less <string>
ssh isl-env <string> -p <file>
cd <string>
git commit
sudo dpkg -i <file>
fg
git
vi <file>
cd <directory>
ls
git status
find . -empty -type <string> -print -delete
ls -lah
cat <string>
cd <string>
ip -6 <string>
cd <string>
cp <string>
cd ..
git commit -m <string>
vim <file>
which <string>
ls
cd <string>
ls
brew install <string>
cd <string>
cd <string>
ps -auxwf
git push -u <string> master
ls
ls
curl <string>
git status
cd <string>
time go run <file>
cat <string>
ftp <string>
cd <string>
unset <string>
pwd
vim <file>
npm audit fix -f
npm start
ls -R
ls
ls
rm -r <string>
git add <string>
ls
cd <string>
sed -e <directory> -e <directory>
find . -type <string> -print0
ls
cd
vi <file>
cd <string>
grep <string>
sudo mv <string>
vi <file>
curl -fsSL <URL>
clear
wget -O - <URL>
kubectl apply --filename <file>
ls
sudo apt-get install <string>
exit
ls
docker-compose up -d --build
ls
sudo git pull origin master
source <file>
git pull -s <string> -X <string> <string>
sudo dnf install -y <string>
sleep <number>
git commit -m <string>
cat <string>
read -p <string>
git push
sudo sed -i <directory>
ls
git merge <string>
touch <file>
curl <string>
cd <directory>
ls
tmux kill-session
git add .
ps
vi <file>
sudo apt-add-repository <directory>
ps aux
exit
cd
sudo dpkg -i <file>
cd <string>
git add <string>
chmod +x <string>
cd
ls
git branch 2> <directory>
sudo -u <string> psql
git commit -m <string>
python3 <file>
sed -i <directory>
git add .
git pull origin master
fg
clear
vi <file>
sudo stop uwsgi
rm -r <string>
sudo apt-get install <string>
cd <string>
history
exit
grep -i <string> >files
mkdir <string>
awk <string>
cd <directory>
vim
sh <file>
sudo apt install <string>
npm run dev
ls
ls
fg
git push origin master
clear
clear
sudo nano <file>
ls
rm <string>
done
vi <file>
nano <string>
cd <directory>
dmesg
find . -name <file> -type <string> -exec <string> -rf <string>
cut -f <string>
ls
cd <string>
systemctl status <string>
git merge <string>
ls
pwd
head -n <string>
vi <file>
clear
ping <string>
ls
cd
cd <string>
git push
cd <directory>
ip a l
cat <string>
git push
sudo apt install <string>
cd <directory>
git commit -m <string>
git status
cd <directory>
cat <string>
ls -l
man <string>
sudo su
ls
sudo chown --reference=<directory> <string>
less -FXRS
sudo python3 <file>
ls
cd <string>
exit <number>
ls -la
git checkout <string>
find . -empty -type <string> -print -delete
ls
vi <file>
setg RHOSTS <file>
clear
git add -A
rm <string>
unset <string>
ls
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
nohup
sudo python <file>
git pull origin development
find . -empty -type <string> -print -delete
sudo apt-get install -y <string>
find . -type <string> -name <string>
npm i -g <string>
vim <file>
wget -q -U <string>
dotnet <string>
fg
vi <file>
ls
git add .
sh <file>
git status
cd <directory>
npx <string>
cd <string>
grep <string>
cd <string>
vim <file>
docker-compose ps
ls
mkdir <string>
cd ..
cd <string>
exit
cd <directory>
python3 <file>
git pull
firefox-trunk --jsconsole --jsdebugger --devtools
ls
cut -c <string>
exit
fg
git add .
mv <string>
env
cp <string>
ls
grep -rP <string>
git pull
sudo tcpdump -i <string> <string>
read -es <string>
exit
rm <string>
git push origin <string>
cd <string>
cat <string>
apt-get update
rm -rf <string>
vi <file>
apt install -y <string>
cd <directory>
vi <file>
vim <file>
tail -f <string>
cd <directory>
python3 <file>
sudo rm -rf <string>
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
python3 <file>
systemctl stop docker
cd
unzip <file>
git pull
vi <file>
ls
pacman -S <string>
ls
git commit -m <string>
zcat <file>
sudo su
sed <directory>
clear
cd <directory>
sed <directory>
tail -f <directory>
ls -lh
cd <string>
cd <string>
cd ..
git add <string>
cd ..
docker
git commit -am' <string>
ls
code .
awk --help
cd ..
cd <string>
sudo systemctl start <string>
cd ..
cat <string>
pkill <string>
find . -empty -type <string> -print -delete
less
killall <processname> # kill all processes with the name
git fetch
ls
cd <string>
grep -v <string>
clear
do\
aptitude install <string>
git remote -v
touch <file>
cd ..
sudo apt update
touch <string>
docker run -d -p <string> <string>
git push
ls
time go run <file>
sudo apt --fix-broken <string>
cat <string>
capsctrl <directory> & disown
npm run bench -- -c <file> -n <file>
sudo dpkg --add-architecture <string>
ls
cd <string>
vim <file>
rm <string>
fg
grep -v -e <string> -e <string>
sudo rm -rf <string>
clear
git push
ls
git config --global <file> <file>
ls
cd <string>
vim <file>
ls
tty
sudo su
vim <file>
git clone <URL>
cd <directory>
git commit -m <string>
psql -U <string> -h <string> nzdpu_wis
touch <string>
rm <string>
grep <string>
wget <URL>
history -c
clear
done\
cd
exit
tail -f <string>
vi <file>
ls
vim <file>
sudo ln -s <directory>
rm -f <string>
mkdir <string>
git checkout <string>
tail -f <directory>
vim <file>
sudo chown <string>
git add .
grep -R --color=<string> <string>
chsh <string>
npm run devstart
mkdir <string>
clear
clear
ls
ls -al
npm install
clear
git add .
find <directory> -iname <file> -type <string> -exec <string> printf <directory>
cd <string>
sudo nano <directory>
dpkg -l
sudo chmod <number> <directory>
cd <string>
grep <string>
ls
tmux source-file <file>
man <string>
vi <file>
cd <string>
git config <file> <file>
ls
fg
sudo flatpak override --system --filesystem=<directory> <file>
cd <directory>
vi <file>
npm install sharp --save
git init
vi <file>
cd <string>
tmux
ls
cd <directory>
cd <string>
git status
ls
cp <string>
clear
ls
sudo pip install -U -H <string>
sudo nginx -t
dir <string>
sed -i <directory>
unset <string>
python3 <file>
ls
ls -R -l <directory>
fg
grep -r <string>
rm <string>
sed -n <string>
cat <string>
ls
sudo mv <string>
service <string>
awk <string>
git clone <URL>
exit
vim
ls
npm run test
vi <file>
hg <string>
git add <string>
sudo apt install <string>
ls
cd <string>
rm -f <string>
source <file>
scp <string>
cd <directory>
done
open <string>
cd
docker start <string>
exit\
git --version
git clone <URL>
ls
apt-get -y -qq <string> <string>
fg
tr <string> <string>
ls -l
git commit -m <string>
cd <directory>
cd <directory>
git branch -a
dpkg-divert
cd <string>
git push
clear
vim <file>
ssh-keygen -t <string> -P <string> -f <directory> -C <string>
ls
find . -name <string> -exec <string> <string>
cd <directory>
rm <string>
sort -nr
tail -f <directory>
ufw --help
git remote add origin <URL>
git push --set-upstream <string> <string>
ftp <string>
ps -A
ls
git remote -v
top
sort -rh
npm-recursive-install
cd ..
docker exec -it <string> bash
pwd
cp -r <directory>
cd <string>
npm audit fix --force
vim <file>
ls
git commit -m <string>
git add .
cd ..
cp <string>
git status
ls
cp <string>
git checkout -b <string>
apt-get install <string>
cd <string>
git clone <URL>
clear
find . -name <file> -type <string> -print -delete
<directory> <string>
sudo apt-key add -
git add .
docker ps
git push -u <string> main
git checkout master
clear
git grep -l <string>
git pull
sudo vim <file>
rm -rf <string>
clear
python3 <file>
ps -eo <string>
sudo chown -R <string>
cd
<directory> <string>
make clean
cat <string>
git config --add --global <file>
find . -empty -type <string> -print -delete
history
exit
cd ..
git add <string>
sudo ntpdate -B -u <string>
ls
git pull origin master
cd <directory>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
cd <directory>
python3 <file>
git commit -m <string>
npm run dev
grep <string>
vi -t <string>
docker-compose up -d --build
rm <string>
ls -al
git reset <string>
fg
sudo apt-get update
xargs kill -HUPsystemctl <string>
sed -i <directory>
tail -f
git clone --depth=<number> <URL> <directory>
git status
sudo python <file>
vim <file>
cd ..
sh <file>
cd ..
cd ..
cat <string>
cd ..
fg
docker-compose up -d --build
cd <string>
chmod u+x <string>
cd <string>
sudo service nginx restart
ls
touch <string>
cd <directory>
vi <file>
exit
cd <string>
git init
vi <file>
composer install
ps aux
cd <directory>
sudo sed -i <directory>
cd <string>
cd <string>
ls
sudo apt-get -y <string>
ls
vim <file>
ls
python3 <file>
git diff
fg
nano <file>
ls
pushd <directory>
exit
ls
fg
npm http <number>
ps -ef
ls
ls
mv <string>
df
ls
ls
rm -r <string>
cd <directory>
cd <string>
ls
cd <directory>
git status
cd <directory>
ls
ls
git fetch --all
git commit -m <string>
git
source <directory>
cd <string>
git pull
python3 <file>
rm <string>
docker ps
cd <string>
git fetch
git
sed -i <directory>
clear
cd
vim <file>
ls
cd <directory>
pwd
mkdir <string>
vi <file>
du -h
sed -E -e <directory>
git add <string>
python <file> runserver 0.0.0.0:2016
ls -lt
head -n <string>
sudo -E <string> -y <directory>
sudo zip -r <file>
vim <file>
cd <string>
npm update -g <string>
clear
cd <directory>
clear
sudo python <file>
mkdir <string>
git status
git pull origin master
cd ..
mkdir <string>
rm <string>
cd <directory>
vim <file>
tmux a -t <string>
chmod +x <string>
python3 <file>
awk -F[\
exit
sudo sed -i <directory>
cd <directory>
rm <string>
sort -nk <string>
git commit -m <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ls
cd <string>
ls
grep <string>
git commit -m <string>
ls -all
cd <string>
npm run bench -- -c <file> -n <file>
screen -r <string>
ls
cd ..
grep <string>
ls
ps -ef
rm <string>
touch <string>
git push
cd
git remote add origin <URL>
cd <directory>
pacman -Syu <string>
sudo sed -i <directory> <file>
done
rm <string>
history
ls
code <string>
df -h
clear
rm -rf <string>
docker run -it --rm -v <directory> -p <string>
fg
kill <number>
ls
ps ax
apt-get update
exit
sudo pip3 install <string>
cp <string>
cd ..
git tag <string>
fg
git init
ls
git init
cd <string>
clear
cd <string>
cd <string>
cd ..
git pull
sudo prime-select nvidia
git help
ls
history -c
vim <file>
sed -i <directory>
cd <string>
clear
sudo badblocks -sv <directory>
chmod +x <string>
sudo nmcli con mod <string> <string>
sudo apt-key add -
sudo mv <string>
docker-machine env
mv <string>
ls
tmux kill-session
setg RHOSTS.*
git remote add origin <URL>
vim <file>
git pull
sudo su chmod <string>
git remote set-url --add <string>
git revert
sudo nano <directory>
vim <file>
sudo apt-get update
cd <string>
clear
git commit
ln -s <string>
git push
ls
ls -la
sleep <number>
ls
ls
ssh-keygen
code .
vim <file>
sed <directory>
grep -F <string>
htop
clear
ls
read -r <string>
sudo cat <directory>
cp <string>
vim
vim <file>
ls
sed <directory>
ls
docker exec -it <string>
vim <file>
ls
apt-get install -y <string>
sudo make install
read -p <string>
git add .
vi <file>
pacman -S <string>
git push -u <string> main
ping <file>
patch <file>
ls
ls -a
ls
fg
cd <string>
ls
rm -f <string>
sudo docker ps -a
fg
git status --ignored
ls
git commit -m <string>
cd <string>
git remote add origin <URL>
ls
git clone <URL>
open <string>
sudo pacman -S <string>
git status
git commit -m <string>
vim <file>
exit <number>
npm install react-icons --save
fg
git clone <URL>
git checkout master
ln -s <string>
ls
sudo apt upgrade
sudo ifconfig <string>
ls
cd <directory>
ls
git config <file> <string>
python3 <file>
sudo rm -rf <string>
chmod +x <string>
apt-key adv --keyserver <string> --recv <string>
bash <file>
ls
rm <string>
clear
cd ..
cd <string>
ls
ls -ltr
mv <string>
fg
tail -n20
vim <file>
cat <string>
npm i <string>
screen -r <string>
source <file>
nano <file>
ls
sudo npm start
ssh <string>
stat -c <string>
git filter-branch <string> --tag-name-filter <string> --env-filter <string>
curl <string>
cd <string>
psql -U <string> -h <string> <string>
vi
mkdir -vp <directory>
rm -rf <string>
apt-get -y -qq <string> <string>
ls
cd <directory>
cd <string>
rm -rd <string>
clear
rm -r <string>
git reset --soft <string>
ls
git push -u <string> main
exit <number>
npm install -g <string>
fg
sudo chown -R <string>
ls
git pull
exit
git init
ls
git branch -M <string>
open <string>
git branch -a
less <string>
ls
git status
cd <string>
rm <string>
mkdir <string>
ls
sudo python <file>
ls
git br -a
npm run dev
git status
git add .
ls
apt-get install <string>
ls -alrt
git commit
nano <file>
cd ..
sed -e <directory>
sed <directory>
ls
npm i codedown -g
git checkout --orphan <string>
mkdir -p <string>
cd <string>
ls
awk -F <string>
git status
npm i
ls
sudo nano <directory>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
cd <string>
python3.11 -m <string>
touch <file>
pwd
ssh-add --apple-use-keychain <directory>
vim <file>
cd <string>
rm <string>
sudo npm update -g
clear
cd..
git commit -m <string>
ls
setg RHOSTS.*
git add .
sudo su
git add .
mv <string>
ls
cd <string>
git log
su
curl -fsSL <URL>
git add .
ls
read -rp <string> <string>
bash <file>
ls -a
sudo sed -i <directory>
git merge <string>
alias <string>
clear
cd ..
sleep <number>
cd <string>
git switch <string>
ls
cd ..
exit <number>
ls
clear
sudo apt install xclip -y
sed -i <directory>
git remote add origin <URL>
grep -r <string>
git commit -m <string>
cd
cp
git init
mkdir -p <string>
cd <string>
ls
ls
python3 <file>
xargs -L1 <string>
git rebase <directory>
vi <file>
git fetch origin\
sudo apt-get update
fg
git config --global <file> <file>
code <string>
vim <file>
sudo pacman -S <string>
cat <string>
vim <file>
sudo apt install <string>
tmux a
ls
python3 <file>
git commit -m <string>
apt-get purge -y <string>
touch <string>
git commit
sudo cp -r <string>
grep -a -i -E --no-filename <string> */*.log*
sed <directory>
cat <string>
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
reboot
mkdir <string>
git init
find . -size <string> -a -print -a -exec <string> -f <string> \
ls
sed -e <directory>
rmdir <string>
git config --global <file> <string>
cd <directory>
git clone <URL>
read -rp <string> <string>
git status
cd ..
git commit -m <string>
ls
git push
chmod +x <string>
wget -c <URL> -O <file>
cd ..
cd <string>
git commit -m <string>
git remote
cd <directory>
sudo npx <string>
ls -l
sudo apt update
exit
ip a
ls
top
sudo apt-get install <string>
cd <string>
ls
clear
sudo systemctl start <string>
rm -rf <string>
clear
cd <directory>
sudo apt install <string>
git push <URL> -f
cd <string>
cd <string>
ls
read -r -p <string>
git push -u <string> master
ls
size <string>
clear
git pull
rsync -a <string>
cd ..
cd <string>
git commit -m <string>
cd ..
docker container <string>
ls
grep -i <string> >files
cd <string>
cd <string>
git status
exit <number>
sudo git push -u <string>
tmux a
fg
tail +n # Print nth line from file.
awk <string>
ls
vim <file>
df -kH <string>
ls
clear
ls
man -k <string>
cd <string>
cd <string>
sudo apt install <string>
grep <string>
nano <file>
cd ..
clear
sudo shutdown -hP <string>
mv <string>
cd <string>
grep <string>
git status
bash <file>
grep <string>
exit
clear
cd ..
git add -A
git commit -m <string>
git add <string>
clear
exit
sudo nala --purge <string>
rm -r <string>
git pull
mv -a <directory>
ls
chmod +x <string>
git add <string>
git log --oneline
cd ..
mkdir <string>
git push
ls -la
vim <file>
sudo python3 <file>
git rebase <directory>
git config --global <file>
cat <string>
cd <string>
git add .
sudo apk add <string>
ls -a
npm i
cd <directory>
ls
vim <file>
ls
cd <string>
git push origin master
cd <string>
npm http <number> <URL>
sudo rm -rf <string>
npm i
rm -rf <string>
vi <file>
cd ..
git checkout <string>
clear
vim <file>
fg
more
exit <number>
ssh dirlic@10.18.0.39 -p <number>
git push
cd <string>
ls
git add .
cd ..
time
sudo git add -A
git diff <string>
print <string>
git add .
cd <string>
fg
exit
perl
ls
screen -rd <string>
git add .
ls
cd <string>
nano <file>
cd <string>
sudo apt-get update
exit
ls
ls
uniq -u
du -h <directory>
ls
tmux a
ls
ls
vim <file>
ls
xclip
git commit -m <string>
code .
git commit -m <string>
rm <string>
cd <string>
sudo sed -i <directory> <file>
clear
set
npm run start
git status
cd ..
rm -rf <string>
chmod u+x <string>
python3 <file>
ls
curl -v -H <string> <URL>
tail
less <string>
cd <string>
vi <file>
ln -s <string>
npm run dev
mv <string>
curl <string>
sudo apt install <string>
npm i --save <string>
git status
setg RHOSTS.*
ps # prints a line of information about the current running login shell and any processes running under it
cd
tail -f <string>
ls
cp <string>
git config --global <file> <file>
npm install <string>
grep -v -e <string> -e <string>
npx <string>
uniq
python3 <file>
sudo su
grep <string>
git clone <URL>
uniq
ls
cd
sudo --help
less
vim <file>
rm <string>
sleep <number>
sudo lsof -i <string>
find -name <string> -type <string>
docker ps -a
sudo ltrace -f -p <number> -o <file>
ls -alrt
ls
ls
cd <string>
cd ..
cd <string>
find . -iname <string> -print
top
sudo nala install <string>
npm start
git push --set-upstream <string> <string>
ls
ls
cd <string>
clear
cd ..
ls
cd <directory>
cd <string>
ls
npm init
cd <string>
fg
read -rp <string> <string>
wget <URL>
python3 <file>
git add <string>
ls
cd <string>
curl -sL <URL>
npm run start
ls
git pull
git remote add origin <URL>
git pull
ls
clear
done
cd <string>
yarn <string>
brew install <string>
git -C <string>
sudo pacman -Ss <string>
ls
git init
cd <string>
rm -v <file>
ls
ls
ls
diff <file>
sudo apt-get update
sudo apt install <string>
ls
exit
ls
wc
curl -SL <URL> -o <directory>
cd <string>
vim <file>
cd
git add <string>
cd <directory>
exit <number>
sed <directory>
chmod +x <string>
clear
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
exit <number>
time go run <file>
git commit -m <string>
git commit
grep -i <string> >files
vim <file>
sudo usermod -l <string>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
cd
git push origin main
bash <file>
npm start
touch <file>
cat <string>
docker build --tag <string>
rm -rf <string>
dpkg --configure - <string>
sudo fallocate -l <string>
cd <string>
clear
ls
sudo apt install <string>
mv <string>
ls
cp <string>
cat <string>
ps -aux
ls
docker
htop
grep -i <string>
go <string>
python3 <file>
git push
ls
cd <string>
tail <file> -n <number>
git status
xargs git add
git init
systemctl start <string>
yarn add <string>
chmod u+x <string>
time <string>
vi <file>
date
cd <string>
git add <string>
rm -r <string>
cd <directory>
cd <string>
git remote -vvv
clear
ls
sh
sudo apt-get -y <string>
ls
cd <string>
cd <string>
cd <string>
git add .
cd ..
ls
ls
code <string>
vi <file>
git add .
cd <directory>
npm install --save <string>
nano <file>
sudo apt update
ls -l
git diff <directory> -- <file>
vi <file>
chmod <number> <string>
sudo chown <string>
curl -X <string> <URL> -d <string> -d <string> -d <string>
cd <string>
clear
ls -l
git add .
cd <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
vim <file>
ls
cd <string>
git push
ls
ls
cd ..
sudo snap install <string>
cd ..
clear
open <string>
sudo apt install python3 -y
ls
git add .
npm init
cd <directory>
vim <file>
which <string>
cd <string>
cd <directory>
ls
git pull
sudo apt install <string>
docker-compose up -d --build
git branch -a
alias <string>
<directory> -m <string>
ls
rm <string>
cd <string>
cd <string>
sed <directory>
ls
cd <string>
sudo start uwsgi
grep -i <string> >files
vi <file>
sudo apt remove <string>
git status
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
mkdir <string>
ls
vim <file>
sudo rm -R <string>
mv <string>
cd <string>
cd <directory>
vim <file>
rm <string>
clear
sudo
git remote add origin <URL>
sudo rm -r <string>
exit
git add <string>
ls
cd <directory>
cd <directory>
git remote add --all
git push -u <string> master
sed -e <directory>
sudo apt update
ls
tail -f <string>
sudo bash <string>
ls
vi <file>
chmod +x <string>
sudo add-apt-repository <string>
cd <string>
read -rp <string> <string>
exit
exit
install <string>
ls
exit <number>
chown -R <string>
cd <string>
exit <number>
unzip <file>
cd <string>
sudo ln -s <directory>
ls
ls
npm start
git init
curl <string>
vi <file>
mv <string>
ls
git push
code .
ls
ls
clear
grep -i <string>
ls
cd <string>
ls
ls
exit
vi <file>
sed <directory>
npm install express-generator -g
cd ..
ssh-copy-id <string>
pwd
sudo
ls
ls -a
gpg --verify <file>
exit
rm <string>
mkdir -p <string>
docker run --name <string> -p <string>
cd <directory>
vi
git clone <URL>
ls
sudo python <file>
git commit --amend --reset-author
npm install querystring --save
cp <string>
less
ls
ls
grep -o <string>
git add .
sudo tar zxvf <file> -C <directory>
npm run
clear
sudo mkdir <string>
sudo apt install <string>
git pull origin master
git push
clear
apt install <string>
cd <string>
sudo ufw allow <string>
sudo sed -i -e <string>
cd <directory>
find . -type <string>
cd ..
git clean -df
rm <string>
ls
python3 <file>
cd <string>
ls -l
cd <string>
cat <string>
ls
vi <file>
cd <string>
sudo firewall-cmd --add-service=<string> --permanent --zone=<string>
sed -i <directory>
vim <file>
cd ..
ls
cat <string>
sudo <directory> restart
clear
git commit -m <string>
cd <string>
cd <string>
exit <number>
cd <directory>
man <string>
find -name <string> -type <string>
ls
rm -rf <string>
vim <file>
xargs -0 <string> -i <string>
cd <string>
cd <string>
git status
fg
clear
sudo systemctl status prometheus
sudo a2enmod <string>
vim <file>
chmod <string>
cd ..
git stash show -p
git push -u <string> master
grep -E <string>
tmux new-window -kt <string>
git status
fg
ls
fg
git config --global <file> <string>
ln -av <directory>
npx <string>
git stash pop
git add .
git status
ls
python3 <file>
ls
sudo apt install <string>
exit <number>
git restore <file>
ls
npm start
sudo sed -i <directory> <file>
which <string>
ls
ls -a
brew install <string>
cd <string>
clear
clear
sed -i <string>
git diff <string>
git push -u <string> main
rm -f <string>
vi <file>
ls
ls
su
sudo find ~ -name <file>
ls
vim <file>
cd <string>
sudo chmod -R <number> <string>
sudo make install
ls
cd <directory>
sed <directory>
sh
ls
cd <string>
sleep <number>
git commit -m <string>
cd ..
cd ..
git stash
mkdir <string>
cd <string>
vim <file>
sudo npm install
ls
clear
cd ..
ls -alrt
ls
sudo update-alternatives --install <directory>
npm i <directory> -f
cd <string>
export <string>
cd <string>
cut -d":" -f2
sleep <string>
sudo service nginx reload
cd <string>
ls
sudo adduser arjun
exit
cd <string>
ls
cd..
grep <string>
nano <string>
cd <directory>
git init
grep <string>
less <string>
cat <string>
nano <string>
git pull
git st
ls
tail -n <string>
pkill picom
chmod +x <string>
mkdir <string>
ls
rm <string>
nano <file>
grep -C50 <string>
nano <string>
sudo <directory> <string>
git clone <URL>
vim <file>
cd <string>
git commit -m <string>
git add <string>
git add <string>
cp <string>
cd <string>
npm i <string>
curl -v -H <string> <URL>
mv <string>
chmod +x <string>
ls
sudo sed -i <directory> <file>
ls
ls
cd <directory>
git fetch origin\
grep <string>
touch <file>
vim <file>
sudo wget <URL>
git grep <string>
ls
python3.11 <file>
ls
sudo add-apt-repository <directory>
ls -l
sudo poweroff
sudo cp <string>
curl --proto <string> --tlsv1.2 -LsSf <URL>
egrep -v <string>
git clone <URL>
sudo rm -rf <directory> <directory>
grep -i <string>
cat <string>
ls
vim <file>
cp <string>
sudo nvim <directory>
clear
mkdir -p <string>
wget -r <URL>
exit
cd
vi <file>
git push --force <string>
git add -u
mv <string>
npm install <string>
exit
npm run devstart
sudo make clean install
local -a <string>
vi <file>
cd <string>
git init
python3 <file>
wget <URL>
ls
source <file>
source <string>
cd <string>
nano <file>
sudo chmod -R <number> <string>
clear
clear
git log
vim <file>
source <file>
cd ..
cd <string>
git commit
ls
ls
sed -i <directory>
sudo ps aux
ls
ls
sudo add-apt-repository <string> [arch=<string> <URL>
git checkout <string>
ln -s <string>
git pull
sed -n <string>
cd <string>
ls
fg
ls
head -5
sudo xbps-install <string>
ln -s <string>
history -a
sudo apt install <string>
ls -lAF <string>
sed -E -e <directory>
git add <string>
sudo yum -y <string> <string>
cd ..
git submodule add <URL>
grep <string>
git pull
sudo docker ps -a
cd <string>
git commit
ls
clear
read <string>
mv <string>
git commit -m <string>
cd <string>
ls
cd <string>
ls -l
ls
cp -i <string>
less
sed <directory>
git filter-branch --index-filter <string> HEAD
ls -l
diff <file>
git status
sudo python <file>
apt-cache
rm <string>
vim <file>
docker network ls
dir
git clone <URL>
ls
vi <file>
dir
git commit
sudo systemctl restart <file>
exit
git clone <URL>
read -p <string>
clear
git pull origin development
ls
sudo python <file> -cascade==<file> <number>
ls
chmod +x <string>
cd <string>
ssh dirlic@10.18.0.39 -p <number>
chmod -R <number> <directory>
sudo ansible all -a <string>
ls
npm run dev
tail -f <directory>
sudo groupadd <string>
clear
cd <string>
done
docker ps
npm uninstall -g <string>
sed -i <string>
ls
ls
cd <string>
vi <file>
sudo apt install
cd <string>
ls
ls
git add .
ls
uniq
cd <directory>
cd <string>
clear
cd <string>
ls
nc <string>
find . -empty -type <string> -print -delete
sudo apt-get install firefox -y
ls
ls
ls
git push
cp <string>
ls
curl <string>
clear
ls
sudo -i
cd ..
ls
vi <file>
rm -r <string>
clear
ps -aux
ls -al
sed -r <directory> > <file>
cd <directory>
ls
ls
codedown <string>
ls
ls
git pull
cd <string>
bash
exit
apt-get -y -o <string>
yay -S <string>
cd ..
ls
ls
scp <string>
ls
ls
sudo sed -i <directory>
su field
cd <string>
bash
openssl
sudo lvcreate -L <string> -s -n <string>
fg
ls -a <string> lists all <string>
git reset --hard <string>
rm -rf <string>
ls
cd <directory>
ls
ls
ls
git commit -m"update"
git branch -D <string>
git commit -m <string>
git commit -m <string>
ls
git commit -m <string>
cd <string>
mkdir <string>
read -p <string>
cd <string>
systemctl --user <string> <file>
mkdir <string>
cd ..
ssh <string>
git push
man <string>
cat <string>
cd
sudo ifconfig en0 ether <string>
apt-get update
nano <string>
npm install marked -g
cd
docker-compose up
service apache2 reload
cd <string>
mkdir <string>
fg
kubectl get <string>
npm run build
npm start
sudo apt install <string>
more <file>
vi <file>
apt-get update
clear
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cd - <string> <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
read -s -n <number>
ln -s <string>
cd <string>
rm <string>
git init
bash -x <string>
cd ..
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
clear
exit
head -n <string>
cd ..
docker pull <string>
git log
clear
cd ..
composer
ls
sudo npm install -g <string>
cd <directory>
bash <file> -Europe
tar -x -C <string>
ls
brew install <string>
export <string>
tar -xvf <file>
vi <file>
cd
git remote update <string>
vi <file>
git stash list
npm i lebab -g
ls
tr <string> <string>
vim <file>
npm install <string>
cd <string>
ls
xargs -L1 <string>
docker cp <string>
cd <string>
clear
man
journalctl -b -2 -e
sudo systemctl start <string>
cd ..
ls
ls
git commit --amend
cd <string>
cd <string>
git status
ls
rm -f <string>
ls
ls
sudo vim <directory>
sudo docker rm corrade
vim <file>
cd <directory>
cd <string>
cd <string>
ls
cd <directory>
cd <string>
sudo systemctl restart <string>
ls
git pull
cd <string>
cd
git push origin <string>
exit
find <directory> -type <string> -path <string> -print -quit
git remote add origin <URL>
curl -fsSL <URL>
sudo service <string>
ls
sudo ln -sf <directory>
git add .
cat <string>
sudo mv <string>
vim <file>
cd ..
git commit -a -m <string>
ls
systemctl start <string>
ls
git config <file> <string>
git checkout master
vim <file>
cd <directory>
ls
grep -x <string>
git remote add origin <URL>
find . -empty -type <string> -print -delete
perl
git log --oneline -n <number>
git init
exit
cp -r <directory>
do\
nice
cd <directory>
clear
git stash
git commit -am <string>
ls
wget -qcO <string>
ls
ls -lrt
ls
sudo chmod <number> <directory>
cd <string>
ls -l
vi <file>
exit
git push -u <string> master
mkdir <string>
cat <string>
ls
nano <file>
git pull origin master
rm -r <string>
ls -R
sudo sed -i <directory> <file>
systemctl status <string>
fg
find . -empty -type <string> -print -delete
git add .
ls
mkdir <string>
sudo pacman -S <string>
sudo cp -r <string>
sudo dnf install -y <string>
nano <file>
find
cd <string>
git --git-dir=<file> <string>
cat <string>
ls
docker-compose up -d --build
sed <directory>
cd ..
read -n <number> -s -p <string>
sudo apt install <string>
clear
less
cd <string>
vi <file>
sudo npm install -g <string>
date
ls
df -H
ls
ls
git checkout master
ls
cd <directory>
git commit
sudo nano <file>
sudo export <string>
clear
sudo apt install <string>
ls
sudo apt-key add -
rm -r <string>
ls
git commit -a -m <string>
sudo killall mongod
cd <directory>
ls
rm <string>
cd <string>
ls
git commit -m <string>
cd <string>
sudo npm install -g --unsafe-perm <string>
ls
python3 <file>
rm -f <string>
vi <file>
sudo nvim <directory>
git git commit -m <string>
git init
ls
modprobe
less <string>
clear
apt-get clean
du -skh <string>
cd <directory>
cd <directory>
cd <directory>
ls
git commit -m <string>
vi <file>
git status
rm <string>
ls
npm install
cd ..
git push origin main
grep -a -i -E --no-filename <string> */*.log*
cat <string>
cd <directory>
cd <directory>
vi <file>
ls
cd <directory>
ls
sudo cp -r <string>
sysctl <string>
cd <directory>
ls
which <string>
source <string>
exit <number>
rm -rf <string>
ls
rm -rf <string>
read -n <number> -s -p <string>
vi <file>
ls
clear
sudo apt install <string>
sudo pacman -Rsn <string>
sudo apt install <string>
nohup <string>
export <string>
find . -size <string> -a -print -a -exec <string> -f <string> \
python3 <file>
fg
alias <string>
cd <string>
git commit -m <string>
chmod -x <file>
rm -ir <string>
ls
ls
ls -alF
ls
sudo chown -R <string>
shutdown -h <string>
exit <number>
nano <file>
git checkout <string>
git push
ls
vim <file>
git init
cd <directory>
ls
source <string>
vim <file>
git add .
cd ..
cd <directory>
grep <string>
git branch
cp <string>
sudo vim <file>
rm <string>
ls
pwd
ls
open .
git push origin <string>
more <file>
exit <number>
sudo pacman -S <string> --noconfirm
git push origin master
cd <string>
ls
ls -l
sudo python3 <file>
rm -rf <string>
cat <string>
ls
top
code <string>
ls
cd ..
sudo su -l
sudo -i
cd
select(.status.containerStatuses[].name==<string> <string>
find . \( -iname <file> -or -iname <string> -or -iname <file> -or -iname <file> -or -iname <file>
tr <string> <string>
git commit -am <string>
curl <string>
cd <string>
npm install -g <string>
ls
ls
cd ..
cd <string>
git add -u
git status
git add <string>
cat <string>
git remote add origin <URL>
ls
git status
grep <string>
cd <directory>
man <string>
clear
ls
cd <string>
cd <string>
htop
cd <string>
cd ..
git commit -a -m <string>
sudo node <file>
sudo apt-get upgrade
ls
git pull
git commit
ls
unzip <file>
git push origin
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cd <string>
sudo mkdir <directory>
ls
exit <number>
exit
docker-compose up -d --build
git checkout <string>
ls
cp -r <directory>
git remote add origin <URL>
ls
stat
cd <string>
cd <string>
sed -r <directory> > <file>
sudo add-apt-repository <directory>
ls
ls
tmux a
git status
cp <string>
cd <string>
docker-compose logs --follow <string>
vim <file>
cp -v <string> <directory>
git init
ls
cd <string>
cd <directory>
exit
ruby -e <string>
npm install -g <string>
cd <string>
vim <file>
ls
cp -r <directory>
cd <string>
cd <string>
mkdir <string>
ls
curl -s <string>
man <string>
cd <string>
cd <string>
cd <string>
cp -ip <string>
git commit-tree <string>
sudo apt-get install <string>
kill -9 <number>
npm run bench -- -c <file> -n <file>
sed <directory>
git add .
sudo <directory> -KW -v <string> -p <string>
kubectl <string>
open .
sudo apt-get install <string>
sudo pacman -Syyu <string>
cd <directory>
du -ach
git remote set-url origin <string>
cd ..
cd <string>
cp <string>
sudo systemctl status <string>
ls
sudo python2 <file> -cascade==<file> <number>
cp <string>
cd <directory>
cd <string>
ls
cat <string>
sudo apt-get install <string>
git push --tags <string>
git pull
vim <file>
ls
history
fg
sudo docker rm <string>
exit
mkdir -p <string>
git add .
fg
vi <file>
ls
sudo kill -9 <number>
ls
cd <string>
exit <number>
cd <string>
dpkg --remove --force-remove-reinstreq <string>
clear
ls
sudo mkarchiso -v -w <string> -o <string> slim-iso
ls
ls
ls
exit <number>
ls
ls -a
unset color_prompt force_color_prompt
ls
clear
hwclock
vim <file>
cat <string>
vi <file>
clear
chmod u+x <string>
<directory> -m <file>
exit
sudo pacman -Ss <string>
vi <file>
sudo sed -i <directory> <file>
sudo apt install -y <string>
sudo apt install build-essential -y
ls
python3 --version
npm install marked -g
curl -s <string>
unset <string>
python3 <file>
du
sudo zypper <string>
sudo apt install <string>
vi <file>
pwd
git reset --hard
cd <string>
ls
git init
npm install -g <string>
ls
git fetch origin\
cd <string>
sudo git add <string>
git add <string>
mkdir <string>
sh -c <string>
find . -iname <file>
git status
cat <string>
rm <string>
bash <file>
nohup python3 <file> <string>
source <file>
sudo rm -r <string>
vi <file>
cp <string>
sudo apt update
ls
fg
git commit -m <string>
curl <string>
sudo apt-get install <string>
clear
ls
npm install --save <string>
grep <string>
ls -la
sudo <file> -L <string>
cd <directory>
ls
apt-cache
sudo apt-get remove <string>
git commit -m <string>
ssh-copy-id -i <string>
tr -s <string>
ls
ssh -p <string> user@host # connects to host on specified port as user
read <string>
pwd
uname -s
ls -la
ls
exit
rm -rf <string>
wget <URL>
sed -e <directory> -e <directory> -e <string> -e <directory>
ls
ps
history
xargs -0 <string> -- <string>
ping <string>
git push origin master
ls -l
ssh <string>
xargs 7z a -mx=<number> <directory>
uniq
cd <string>
set -x
ls -c
chmod +x <string>
ls
diff <file>
git rm <string>
ls
cd <string>
mkdir <string>
git clone <URL>
rm -rf <string>
ls
sudo gedit <string>
cd
cat <string>
vi <file>
fg
npm run develop
clear
fg
git commit -m <string>
cd ..
cd <string>
exit
sudo apt install <string>
cd <string>
git add .
pwd
cd ..
fg
cd
cd ..
ls
df -h
chmod <number> <string>
nano <file>
ls
cd
cd ..
ls
sudo pip install <string>
git add .
git branch
sudo apt update
cd <directory>
git config --global <file> <file>
rm <string>
wget -O <file>
sudo chmod +x <string>
sudo do-release-upgrade -y
cd ..
cd <string>
ls
find . -empty -type <string> -print -delete
cd <string>
ps aux
mkdir <string>
git add .
cd <string>
git status
tail -f <string>
cd <string>
vim <file>
ls -la <directory>
else\
chmod u+x <string>
su - <string>
dpkg --get-selections <string> <file>
python3.7 <file>
sudo ltrace -p <number> -o <file>
npm run start
git reset HEAD --hard
vim <file>
sudo ls <directory>
git commit -m <string>
ssh -X <string>
cd ..
date
ls
vi <file>
tail -f <directory>
type <string>
apt-get install -y <string>
setg RHOSTS.*
ls
wc -l
nano <string>
sudo apt autoremove -y
ssh dirlic@10.18.0.39 -p <number>
sudo poweroff
ls
ls
sudo wget -nv <URL> -O <directory>
history
git clone <URL>
rm -rf <string>
sudo apt-get install <string>
ls
git init
service apache2 reload
ls
cd ..
cd <string>
docker commit <string>
bash <file>
vim <file>
brew update
sudo rm -d <directory>
cd <string>
cd ..
ls
git pull
cp <string>
vim <file>
git add .
docker rmi <string>
clear
git diff
git config --global <file> <file>
git add -A
sudo apt upgrade
cd <directory>
git branch -D <string>
cat <string>
ls
more <file>
vi <file>
npm run bench -- -c <file> -n <file>
wget <URL>
apt update
vi <file>
git please
sudo vim <file>
ls
sudo dpkg -i <file>
npm install express --save
wget $flutterLINK -O <file>
nano <file>
sed <directory>
cd <string>
find <directory> -type <string> -exec <string> <number> <string>
ls
rm -rf <string>
rm -f -r <string>
cd <string>
open <string>
apt-cache search
cd ..
ls
vi <file>
docker-compose build <string>
cd ..
git status
ls
cd <directory>
rm -rf <string>
ls --all
git fetch
git commit -a
ls
mkdir <string>
mysql -h <string> -u <string> -p <string>
ls
npm run develop
mv <string>
git clone <URL>
git checkout -b <string>
clear
code --diff <file>
sudo chmod <number> <string>
ls
vim <file>
ssh-cp-id -i <file>
ls
git rebase -i <string>
ls
vi <file>
ls -a
ls
rm -rf <string>
npm uninstall <string>
exit
cd
vi <file>
clear
cd <string>
touch <file>
cd <string>
bash
ls
curl -v -X <string> <directory> -H <directory> -H <string> -H <string> -H <string> -H <string> -H <string> -H <string>
rm <string>
fg
mv <string>
grep -i <string> >files
chmod <string>
git push origin master
sudo apt-add-repository <directory>
ls -l
git add <string>
cd ..
clear
ls
git push
sudo pcmanfm
cd <string>
vim <file>
cd <string>
exit <number>
cd ..
capsctrl <directory> & disown
mvn install
find . -empty -type <string> -print -delete
docker run -e <string> -v <directory>
clear
ls
sudo apt install <string>
git push
git commit -m <string>
git commit -m <string>
ls
sh <file>
vi <file>
git init
ls
git clone <URL>
ls -ld <string>
cd ..
sudo apt-get upgrade -y
rm -rf <string>
ls
shutdown -h <string>
sudo sed -i <directory>
ls
ls
ls
ls -la <directory>
git add <string>
git add .
vim <file>
cd <string>
chmod +x <string>
cd <string>
open <string>
sudo mysql -u <string> -p
ls
sudo make
then\
rm -rf <string>
git commit -m <string>
rm <string>
ls
hostname -i
ls
pwd
docker rmi <string>
python3 <file>
chmod +x <string>
cd <string>
exit
ls
rm -r <string>
chmod +x <string>
ls
cd <directory>
ls -alrt
git pull
ls
git status
sudo bash -c <string>
<file> - <number>
tmux
apt-get update
git pull origin master
exit
touch <file>
sudo add-apt-repository ppa:$1 -y
ls
find . -empty -type <string> -print -delete
curl -sLo <string>
ls
vim <file>
cd <string>
curl -fsSL <URL>
vi <file>
git status
vi <file>
npm install <string>
git checkout
git add <string>
cd ..
ls -l
sudo xrandr --newmode <string>
cd <directory>
ls
git checkout -- <string>
rm -Rf <string>
clear
git status
ls
cd <string>
cd <string>
ls
sed -i <string>
clear
curl --silent -L <file>
git commit -a
cd <directory>
fg
cd <directory>
cd <string>
source <directory>
wc -l
clear
wget $KODI_URL -O <file>
ls -xAh
sudo apt-get install <string>
ls
cd <directory>
pwd
fg
ls
cd <string>
cd <string>
vim <file>
ls
cd <string>
git diff
cd <directory>
ls -l
chmod <number> <string>
fg
ls
ls
perl <file> --NO_HTSLIB
git rebase -i <string>
codedown javascript > <file>
ls -l
clear
ls -lShr
cd
python3 <file>
reboot
clear
cd <string>
wget --output-document=<file> <URL>
cat <string>
read -p <string> -r <string>
ls -lah
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
touch <string>
vim
ls
rm <string>
grep <string>
npm run vue --version
cd <string>
git status
cd <directory>
cd <string>
clear
cd <string>
which <string>
vi <file>
cd <string>
git status
npm i <string>
cd <directory>
git commit -m <string>
reboot
ls
ls
vim <file>
cd <string>
ls
ls
git commit -m <string>
cat <string>
git pull
nano <file>
git clone <URL>
cd ..
clear
ls
ls
sleep <number>
nc <string>
reboot
git add .
exit
cat <string>
cd ..
sudo certbot --nginx -d <file>
cd
cd <directory>
sed -e <directory>
cp <string>
cd ..
vi <file>
ls
ls
vim <file>
cd <directory>
cd <directory>
ls
ls
cd <string>
cd <directory>
vi <file>
python3 <file>
du -hsx <string>
exit
cd <directory>
fc -l <number>
sed -i <string>
ls
ls
sudo ufw allow <string>
cd ..
ls
source <directory>
pwd
ls
grep <string>
cd ..
cd <directory>
git init
cd <directory>
cd
ls -la
git commit -m <string>
sudo apt install <string>
git push
sed <directory>
clear
exit
cd <string>
cd..
git fetch upstream
git commit -m <string>
ls
sudo mv <string>
ls
nano <file>
sudo su
git checkout -b <string>
sudo gedit <string>
shutdown -h <string>
git push --set-upstream <string> <string>
cd <directory>
which <string>
cd <string>
cd <directory>
docker run --help
nano <file>
ls
ls
watch -n0,1 <string>
clear
git push
df # shows disk usage
git config <file> <file>
git remote remove origin
type -a <string>
bash
cd
git commit -m <string> --no-verify
npm install
npm install -D <string>
python3 <file>
setg RHOSTS.*
ls
vi <file>
cd <string>
git status
git commit -m"ajout"
vim <file>
cd ..
vim <file>
source <file>
wget <URL> -O <file>
rm -rf <string>
git status
sudo sed -i <directory> <file>
vim <file>
git remote add origin <URL>
npm run register
git push -u <string> detail
sudo apt install <string>
grep -i <string>
sed -i <string>
git push -u <string> main
ls
git add .
sudo rm -rf <string>
git st
source <string>
openssl req -new -out <file> -key <file> -subj <directory>
cat <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
git add .
mv <string>
cd
ls
ls
ls
find . -name <string> -exec <string> -c <string>
ls
git status
sudo npm install express -g
git pull
tar -cf <file> -T -
tar
read -rp <string> <string>
ls -lart
curl -v -H <string> <URL>
diff <file> <file>
ls -la
curl -o- <URL>
sudo pacman -Syu
ls
pacman -S <string>
git remote add origin <URL>
cat <string>
python3
ls
grep -e <string>
cd ..
setg RHOSTS.*
less <string>
ls
git status
cp <string>
sudo systemctl status <string>
vim
cd <directory>
cd..
dpkg -L <string>
vim <file>
cat -s <string>
npm i -g <string>
python3 <file>
service apache2 restart
docker image <string>
vim <file>
ls -lh
sudo chmod <number> <string>
cp -R <string>
cd ..
vi <file>
chmod +x <string>
cd <string>
cat <string>
cd <string>
mount -t <string> overlay -o <string>
git init
npm ls
ls
tail -f <directory>
ls
clear
source <file>
cd ..
head -n10
awk <string>
sudo apt update
ls
sed -i <string>
mkdir <string>
systemctl mask <file>
cd <directory>
sudo apt-get install -y <string>
ls -al
find . -type <string> -mtime <string> -delete
ls
git commit
vi <file>
git commit
rm <string>
git branch -M <string>
git commit -m <string>
pico
sort -u <string>
cd <directory>
git checkout <string>
ls -ltr
man <string>
git add <string>
nano <file>
node <file>
exit
git status
git commit -m <string>
cd <directory>
ls
vi <file>
ls
git branch -M <string>
ls
cd <string>
vim <file>
fg
ls
vim <file>
git remote add origin <URL>
source <string>
sudo docker rm corrade
ls
exit
sudo apt remove <string>
touch <string>
cp -r <directory>
cp <string>
clear
ls
cat <string>
ls -la <directory>
sudo apt install <string>
git status
rm <string>
git status
git commit --no-verify --message <string>
cd <directory>
vim <file>
ls
sudo apt update
column -t -s <string>
sudo reboot
sudo apt-get install <string>
ls
mv <string>
npm init -y
ls
ping <string>
vim <file>
fg
cd ..
vim <file>
python3 <file>
vim <file>
git add <string>
ls
git push origin <string>
git config --global <file> <string>
ls
curl -fsSL <URL>
ls
git config --global <file> <string>
git add .
cd ..
docker-compose up -d --build
git log --follow --date=<string> --pretty=<string> <string>
clear
pwd
sort
cd <string>
git commit
man -m <directory>
ls
cd <directory>
docker stop <string>
ls
sudo rm -rf <string>
sudo <directory> <string>
vim <file>
hostname -I
cd <string>
ls
ls -a
grep <string>
git add .
ls
cd
cd <string>
git switch <string>
cd
git add .
python3 <file>
cp <string>
git push
brew install <string>
git commit -m <string>
cp <string>
mkdir -p <string>
clear
cd <string>
ls -R <string>
ls
vi <file>
exit
grep <string>
rm -rf <string>
git status
vi <file>
cd ..
cd <directory>
ls
vim <file>
cd <string>
cd <string>
rm <string>
ls -al
find . -size <string>
cd <directory>
ls
openssl s_client -connect <string>
sudo <directory> <string>
ls
ssh-keygen -t <string> -b <number> -C <file>
exit
ls
ls
chown -R <string>
sudo vim <file>
docker rmi <string>
ls
man
docker-machine <string>
wc -w
apt-get -f -y <string> <string>
cd <string>
pwd # tells you where you currently are
ls
ls
unzip <file>
grep -i <string>
ls
exit
clear
python3
done
vim <file>
git add
ls
git rm lf --cached <directory>
ls -lrt
sudo docker rm corrade
ls
cp -r <directory>
ls
docker start postgres-container
sleep <number>
sudo killall -9 <string>
tmux kill-session
cd ..
vi <file>
exit
vim <file>
sudo git remote <string>
read -p <directory> -n <number> -r <string>
htop
pkill picom
cd <string>
cd <string>
ls
sudo ufw enable
rm <string>
wget <URL>
vi
ls
wget <URL>
cat <string>
ls
w
git clone <URL>
ls
git push --delete <string>
vi <file>
less <string>
grep -i <string>
history
clear
cd <directory>
read <string>
ls -al
find ~ -name <string>
sudo sed -i <directory> <file>
xargs sed -i <directory>
git commit -f
sudo sed -i <directory> <file>
cp -r <directory>
sudo python <file> --cascade=<file> <number>
sudo apt install -y <string>
sudo chmod +x <directory>
ls
touch <string>
ip addr
ls
rm <string>
cd <string>
chmod +x <string>
git push
git remote add origin <URL>
cd <string>
clear
su - <string>
cat <string>
git add .
read <string>
cd <string>
clear
sudo -i
mkdir <string>
sudo make clean install
git branch
bash
vim <file>
clear
vim <file>
ls
rm -f <string>
sudo nvm -v
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cd <directory>
mv <string>
ls
ls
clear
ls
cd <string>
cd <directory>
exit <number>
cd <string>
cd ..
perl <file>
git status
cd <directory>
ls
sudo stop uwsgi
ls
clear
sudo wget <URL>
read <string>
wget <URL>
cd <string>
npm start
cd <string>
sudo poweroff
git commit -m <string>
cd <directory>
cd <directory>
git remote add origin <URL>
cd <string>
cd <string>
systemctl disable <string>
cd <directory>
git --no-pager <string> --oneline
ls
cd <directory>
clear
clear
ls
git remote add origin <URL>
cp <string>
sudo apt-get upgrade
source <string>
ls
git commit -m <string>
ls
git add <string>
shutdown -h <string>
ls -al
clear
mv <string>
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
sudo stop uwsgi
man <string>
ls
pacman -S <string>
ls
who -H
git ls-remote <string>
docker run -d --restart <string> --name <string> -v <directory> -e <string> --cpu_usage_limit=<string> <directory>
git add .
cd <string>
rm -r <string>
sync
curl -s -o <file>
ls
ls
docker images
source <string>
vi <file>
curl -# --upload-file <string>
curl -s -L <URL>
cd <string>
grep -vE <string>
cat <string>
sudo apt install wget -y
ls
ls
ls
cd <directory>
git status
grep -inE --color=<string> <string>
find . -type <string> -name <string>
ls -la
sleep <string>
git commit -m <string>
ls
exit
sudo fail2ban-client <string>
git status
cat <string>
cd
npm uninstall -g <string>
python3 <file>
systemctl start kubelet
cd ..
cd ..
docker run <string>
sudo sed -i <directory>
cd ..
sudo nginx -t
exit
cd ..
unset <string>
ls
git branch 2> <directory>
docker login <file> -u <string> --password-stdin <string>
git checkout -b <string>
sudo pip3 install <string>
ls
cd <directory>
chmod u+x <string>
sudo tee <directory>
wget -O <file>
sudo su
cd <string>
git log
git commit -a
sudo poweroff
egrep -v <string>
cd
cd <string>
cd <string>
source <directory>
ls
git diff --name-status
cd <string>
ls
ls
sh <file>
ls
ls
git status
git status
ls
ls
docker image ls
cd <directory>
ls
fg
git pull origin main
ls
grep -i <string> >files
export <string>
find . -newermt <string> -type <string> -print
git add .
ls
ls
cd <string>
mv <string>
cat <string>
chmod +x <string>
sudo docker pull <string>
less
cd <directory>
git remote add origin <URL>
cd ..
cd ..
clear
git clone --bare --branch=<string> --single-branch <URL>
sudo sed -i <directory> <file>
git add .
sudo apt-get update
sudo apt-add-repository -y <directory>
exit
npx create-react-app frontend --template <string>
ps aux
sed -i -e <string>
git checkout -v
ls
cd <string>
cd <string>
git add .
cd <string>
sudo python3 <file>
clear
wc -l
vi <file>
git
git init
mkdir <string>
cd <directory>
find . -name <file> -type <string> -print -delete
apt-get update
nano <file>
ls -ls
sudo touch <directory>
sed <directory>
sh
source <directory>
ls
touch <string>
cd <string>
ls
sudo mv <file>
wget -q -O - <URL>
ls
du -h -d <number>
done
sh
git status
sudo su
clear
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
cd <string>
git status
clear
clear
pacman -S <string>
git add .
env
ls
git pull
kill -s <number> <number>
reboot
cd <string>
git add .
git pull
df -g
git commit -m <string>
ls
cd <string>
print <string>
git --git-dir=<directory> --work-tree=<directory> <string> -a -m <string>
ls
cd ..
nano <file>
git add -A
fg
git commit -am <string>
ls
npm -v
ls
cd <directory>
clear
ls
git add .
git status
rm <string>
git pull
vim <file>
cpio -p -d -v <string> <string>
git push -u <string> main
bash <file>
sudo vim <file>
ls
git add .
rm -rf <string>
ls
ls -a
sed <directory>
cd <directory>
cd <string>
git commit -m"update"
top
cd <string>
npm install <string>
ls
rm -rf <string>
cd
clear
git init
git remote -v
git status
git stash
curl -sL <URL>
less
vim <file>
exit
cd ..
nvm_grep -q <string>
git commit -m <string>
dotnet <string>
grep -Eio <string>
cd ..
read -p <string>
ls
cd ..
git push origin master
ssh dirlic@10.18.0.39 -p <number>
ls
docker-compose logs
cd <string>
which -a <string>
apt-mark
docker exec -it <string> bash
npm run test
ls
cd <string>
ls
git commit -m <string>
source <string>
ls
ssh <string>
exit
ls
npm run coverage
vim -O <file>
vim <file>
cd <string>
ln -s <string>
ls
s/:/ <directory>
cd
ls
git push
git push origin
read -p <string>
mkdir <string>
cd <string>
ls
cd <directory>
sudo flatpak <string>
cd <string>
sudo cat <file>
ls
ls
ls
git init
sudo fc-cache -f -v
exit <number>
curl -L <URL> -s`-`uname -m` <string>
python3 <file>
sudo aptitude <string>
cut -d' <string> -f4-
rm <string>
mkdir <string>
python3 <file>
cd <string>
git push -u <string> main
git branch -D <string>
ls -la
clear
git commit -a -m <string>
mkdir <string>
python3 <file> -- <string> @CAMERA=<string> <string>
rm -rf <string>
sudo apt update
sudo apt upgrade
ps ax
ls -la <directory>
clear
vim <file>
ssh -X <string>
ls
apt-get install <string>
git config --global <file>
cd <string>
ls -la
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
cd <directory>
screen -r <string>
git init
screen -r
grep -E <string>
clear
vim <file>
cd <directory>
sudo apt install gnome-tweak-tool -y
clear
git push
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
cd ..
vi <file>
cd
ls
vim <file>
cd ..
apt-get install <string>
exit
cd <string>
rm -R <string>
sudo apt-key fingerprint <string>
ls
git pull
bash
cd <string>
cd <string>
sudo su
xargs -n1 <string>
clear
pavucontrol
ls
ls
cd <string>
git push
ls -lah
sudo docker run --rm --volume <directory>
cat <string>
sed -i <string>
mkdir <string>
fg
exit <number>
mkdir -p <string>
git status
cd <string>
vim <file>
ls -l
ls
sudo apt autoremove
git clone <URL>
ss
ls
cd <directory>
ls
perl <file>
exit
exit
mkdir <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cat <string>
ls
ls
cat <string>
<directory> <string>
sudo apt-get update
ls
exit
git push origin master
git commit -m <string>
git push -u <string> main
vi <file>
cd ..
sed -i <directory>
cd ..
grep -Syu
git init
cd <directory>
vi <file>
cat <string>
cd <string>
vim <file>
sudo updatedb
ssh dirlic@10.18.0.39 -p <number>
exit
sudo rm -rf <string>
exit
wget -O <file>
find . -size <string> -a -print -a -exec <string> -f <string> \
unset <string>
vim <file>
sudo nano <string>
sudo -i
ls
fg
exit
sudo mv <string>
ls
cd <directory>
cat <string>
exit
chmod +x <string>
ls
shutdown now
rm
cd
cd <string>
git status
cd
vi <file>
command cp -i <string>
clear
code .
cat <string>
fg
touch <string>
git reset --soft <string>
sudo pacman-mirrors -f5
halt
git remote
vi <file>
ls
cd <string>
ls
npm start
rsync <directory>
git config --global <file>
cd <directory>
ls
cd <directory>
git remote -v
rm -rf <string>
git clone <URL>
vim <file>
cd ..
sudo chmod -R <string>
git pull --rebase
rm <string>
ls
git status
<directory> <string>
exit
vim <file>
cd ..
apt update
find $dir -type <string>
cd <string>
rm -rf <string>
cd ..
man -k <string>
ls
grep <string>
ls
find . -type <string>
ls
git merge
ls
cat <string>
ls
vi <file>
cd <string>
sudo aptitude -y <string> <string>
cd <directory>
ls
history
LANG=<string> rpm -qp --queryformat <string>
cd <string>
vim <file>
info <string>
ls
cd <string>
ls
ls -la
ls
ls -al
mv <string>
ls
vim <file>
git commit -m <string>
git clone <URL>
ls
git init
cat <string>
ls
ls
mv <string>
ls -la <directory>
ls
ls -la
ls
cp <string>
cd <string>
terraform apply -var=<string>
pwd
exit
exit
ls
git rebase -i <string>
sed <directory>
sleep <number>
ls
cd <directory>
ls -R
cp -r <directory>
fg
mkdir <string>
exit
sort -nr -k1
nc <number> <number>
cd <string>
more <file>
rm <string>
unset color_prompt force_color_prompt
git commit -m <string>
ls
tail -f <directory>
cd <string>
cd ..
git commit -a
git remote add origin <URL>
uname -a
sed -Ei <directory>
docker pull <string>
mv <string>
sudo apt-get install <string>
exit
ls
mv <string>
df -u
cd
mkdir <string>
ls
git add
pwd
cat <string>
cd <directory>
git add <string>
apt install <string>
exit
grep <string>
ls
yarn add <string>
sed <directory>
cd <string>
sleep <number>
clear
vi <file>
ls
cd <directory>
cd
docker-compose logs
git co HEAD .
rmdir <string>
ls
awk <string>
exit <number>
cd
cd <string>
pwd
git commit -m <string>
sudo install -o <string> -g <string> -m <number>
cd ..
cd -
ls -altr <string>
mkdir <string>
npm login
vim <file>
exit
git status
fg
cd
docker run -itd --name <string> -p <string>
cd <string>
cut -d' <string> -f4-
rm -rf <string>
date
git commit -a
cd <string>
clear
ls
vi <file>
docker-compose up -d --build
vim <file>
grep -e <string>
git commit -m <string>
scp <string>
ls
cat <string>
cd <string>
find -name <string> -type <string>
npm install
git clone <URL>
man <string>
git remote remove origin
curl -L <string> --output <file>
cd ..
ls
cd ..
git rm <string>
rm -rf <string>
service apache2 reload
ls
ls
apt-get
zcat <file>
setg RHOSTS <file>
chmod +x <string>
python3 <file>
exit <number>
ls
sed -i <string>
git status
cd <string>
vi <file>
mkdir <string>
sudo cp -R <directory>
sudo yarn install
vi <file>
git commit -m <string>
df
sudo apt-get -y <string>
ls -lah
git checkout -b <string>
vim <file>
grep <string>
ls -c
git add .
ls -al
read -rp <string> <string>
ls
cp <string>
mv <string>
git remote remove origin
nano <file>
sudo apt-get update
git add <string>
git status
cd <string>
grep <string>
cd ..
journalctl -b
aptitude upgrade -y <string>
ls -la
cd <directory>
curl -T <directory> <string>
cd ..
cd <string>
sed <directory>
rm <string>
rm <string>
cd
sudo gpg --dearmor -o <directory>
ls
ls
cd <directory>
vim
cd
ls
ls
cat <string>
cd ..
sort -u
xargs -0 <string> -n -H <string>
git branch
git remote -v
vim <file>
git add <string>
ls
sudo shutdown
ls -a
python3 <file>
ln -s <string>
ls
ls
git ls-files
code .
local <string>
npm install express --save
sudo apt-add-repository <directory>
ls
sudo apt install <string>
vi <file>
cp <string>
chmod +x <string>
cd <string>
cd <directory>
python3 <file>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
sudo sed -i <directory>
sudo -u <string>
git st
sudo python3 <file>
git add <file> -f
clear
apt-get install <string>
cut -d <string> -f <string>
vi <file>
open .
clear
uniq
ls
wget -r <URL>
ls
ls
cd ..
find . -maxdepth <number> -name <string> -type <string>
git push
tail -f <directory>
cd ..
ps aux
sudo apt install <string>
git push
ls
fg
ls
cd <string>
ls
then
npm run test
git add <string>
git push
cd <string>
ls -a
ls
cat <string>
rm -r <string>
fg
export <string>
cat <string>
brew install <string>
cd <string>
exit
sudo nano <string>
git add .
find . -name <file>
cd <string>
mkdir <string>
vi <file>
nl
cd <string>
head -n <number>
su
time <string>
ls
docker-compose up -d --build
sudo apt-get update
git add <string>
sudo apt-get upgrade
grep <string>
docker stop <string>
screen -r <string>
clear
clear
cd ..
cd <string>
tail
git push
rm -r <string>
ls
vim <file>
git init
tmux
sudo pip install --upgrade <string>
ln -s <string>
ps aux
sudo python3 <file>
ls
git commit -m <string>
sudo vim <file>
python3 -m <string> install <string>
ls
nano <file>
find . -size <string> -a -print -a -exec <string> -f <string> \
ls
git commit -m <string>
cd <string>
pwd
git commit -m <string>
git add .
grep -i <string> >files
git checkout <string>
git add .
cd
unzip --h
cd <directory>
ls
git add .
ls
nano <string>
npm install
git clone <URL>
cd <string>
scp <string>
vi <file>
ls
git push
sudo make install
ls
ls
find -name <string>
mkdir <string>
git status
git commit -m <string>
bash
clear
ls
exit
ls
git branch
ls
ls -ltr
sudo systemctl enable <string>
fg
df -lh
dpkg -l
ls
vim <file>
git --version
git push
cd <string>
git push
grep <string>
git status
sudo rm -rf <string>
scp <string>
cd ..
cd
ls
diff <file>
mkdir <string>
cd <string>
git commit -m <string>
git log
find -f <string>
bash
grep -oP <string>
grep -v <string>
clear
cd <string>
stow -R <string>
rm -r <string>
sudo snap install code --classic
cd
git commit -am <string>
git commit --allow-empty -m <string>
git add <string>
cp <string>
cd <string>
sudo apt install <string>
sudo adduser <string>
sed <directory>
clear
clear
sed -ri <string>
ls
history # shows command line history
git log
cp -r <directory>
python3 <file>
set <string>
ls
ls
git commit -m <string>
touch <string>
git add <string>
sudo apt install <string>
byobu-tmux
cd ..
cd
cd <string>
ls
ls
cd ..
sudo apt purge <string>
cd <string>
sudo systemctl daemon-reload
sudo apt-key add -
cd <directory>
ls -ltr
cd <string>
git push origin PTS-372_Remove_components_from_daily_tracker --force
ls
dpkg-shlibdeps: <string>
ls
less
git add <string>
python3 <file>
cd <string>
python3 <file>
sudo service nginx reload
cd <directory>
cd <string>
cd <string>
find <directory> -name <file>
cat <string>
sudo apt update
ls
cd <string>
nano <file>
npm install --only=<string>
vim <file>
git init
sudo chsh -s <directory>
cd <string>
clear
fg
vi <file>
git add <string>
mkdir -p <string>
cd <string>
cd <string>
ls
grep <string>
cp <string>
ls
npm http <number> <URL>
rm -f <string>
exit
sed -E -e <directory>
sudo make clean install
vim <file>
sudo rm -rf <string>
cd ..
ls
ls
cd <string>
rm <string>
cd <string>
mkdir <string>
sudo apt-get autoremove
chmod <number> <string>
ssh <string>
cat <string>
cd <string>
ls -alrt
xargs git rm -r --cached --ignore-unmatch <string>
git rm --cached <string>
sudo apt-get install <string>
top
ls
git add .
sudo cp -rf <string>
cd <string>
cd <string>
git push -u <string> detail
npx <string>
cd <directory>
man <string>
ls
git add .
tail -f <directory>
git push origin master
sudo apt install <string>
cd <directory>
sudo install -C <string>
code <string>
bash <file> -b -u -p <directory>
python3 <file>
find . -empty -type <string> -print -delete
git
ls
fg
npm run dev
git branch --set-upstream-to=<directory> <string>
ls
ls
egrep -v <string>
sudo find <directory> -xdev -type <string> -size <string>
ls
cd <string>
git push -u <string> master
python3 <file>
ssh <string>
ls
ls -ltr
exit
grep -r <string>
cd <string>
cd <string>
ls
bash
reboot
read -rp <string> <string>
grep <string>
ls -l
pwd
ls
sudo cp <file> <file>
sudo apt full-upgrade -y
history
alias <string>
python3 <file>
git push
node <file>
git push
cd <string>
shutdown -h <string>
ls
vim <file>
rm -rf <string>
cp -r <directory>
mkdir -p <string>
ls
localectl <string>
ls
git co HEAD .
ls
exit
clear
cd <string>
ls
git commit -m <string>
cd <string>
source <string>
vi <file>
vim <file>
ls
ls
git commit -m <string>
cd <string>
git add .
git clone <URL>
ls
vim
systemctl status <string>
tail -f <directory>
cd <string>
ps -u <string> # lists your processes
ls
fg
git pull -f
fg
git pull
cd <string>
clear
rm <string>
cd <directory>
ls
touch <file>
npm run test:watch
npm run
set -ex
git checkout <directory> -f
ls
history
cat <string>
cd <directory>
apt list --upgradable
cd <string>
ls
ls
ls
git add .
git commit -m <string>
cp <string>
ls
find . -type <string> -exec <string> -i <directory>
npm install -D <string> postcss autoprefixer -p
cd <string>
ls
sed <directory>
vi <file>
screen -ls
cd <directory>
git pull
python3 <file>
npm start
npm start
clear
exit
cd <string>
git push origin main
git branch -M <string>
ls -la
cd ..
psql -U <string> -h <string> nzdpu_wis
cd <string>
clear
init
ls
cd
git gc
git commit -m <string>
watch -n0,1 <string>
sort
python3 <file>
clear
chmod -x <file>
ls
ps aux
cd ..
ls -l
ls
vim <file>
sudo nano -c <string>
python3 <file>
git init
clear
exit
clear
git clone <URL>
ls
chmod <number> <string>
npm install --save <string>
ls -a
vim <file>
cd <string>
cd
clear
ls
cd ..
cd <string>
sudo su
vim <file>
git remote add origin <URL>
cd <string>
tar -xvf <file>
tail -f <string>
rmdir <string>
dirname --help
exit <number>
ls
cd <directory>
kill -sigusr1 <number>
ls
clear
tmux
ls
cd
kubectl get <string>
chmod <number> <string>
ls
cd <directory>
clear
rm <string>
mv <string>
clear
git pull
sudo halt
git push origin <string>
git remote add origin <URL>
php -- --install-dir=<directory> --filename=<string>
ls
clear
ls
grep -r <string>
dpkg -L <string>
sudo apt full-upgrade -y
sudo apt-get -y <string> <string>
cd <string>
cd <directory>
vim <file>
exit <number>
git commit -m <string>
cd ..
ssh dirlic@10.18.0.39 -p <number>
ls
git status
bash <file>
telnet <string>
npm install
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
exit
ls
git clone <URL>
cd <string>
ls
cd
clear
sudo apt update
ls
cd ..
ls
cd <directory>
cd ..
sudo npm i -g <string>
ssh-keygen -t <string> -C <file>
vim <file>
clear
mkdir <string>
vi <file>
ls
who
sudo docker run -e <string> -e <string>
cd <directory>
ls
ls
then
kill <number>
git push -u <string> master
cd <string>
npm i <string>
cd <string>
ls
chown -R <string>
cd <string>
sed -e <directory> -e <directory>
cd
git rm -r <string>
wget -O <file>
done
cd <string>
read -p <string>
git add <string>
sudo snap install <string>
sudo aptitude purge <string>
ls
docker-compose down
chmod <number> <string>
cat <string>
sudo reboot
touch <string>
git commit -m <string>
export
cd ..
cd ..
cd ..
git pull
apt list --upgradable
ls
git add .
cat <string>
vim
npm install --force
sudo su
exit <number>
git add <string>
fg
grep -v <string>
ls
g++ -std=<string> <file> -o <string>
exit <number>
sleep <number>
apt install haveged -y
cd <directory>
git commit -m <string>
clear
git remote
wget -q -O <file>
cd ..
python3 <file>
fg
ls
tail -f <file> --lines=<number>
clear
rm <string>
git diff
sudo apt install <string>
git pull
ls
ls
ssh-copy-id -i <string>
cd <directory>
ls
git commit -m <string>
sudo chown <string>
sudo mkdir <directory>
ls
ls
ls
ls
cd <string>
htop
ls
gpg --verify <file> <string>
vi <file>
shutdown now
git rm --cached <string>
clear
git init
cd <string>
chmod <number> <string>
npm i <string>
sudo add-apt-repository -y <directory>
git status
grep -iE <string>
sudo ln -s <directory>
git add <string>
git add <string>
ls
ls
git clone <URL>
ls
rm <string>
curl -fsSL <URL>
ps aux
clear
ls
git commit -m <string>
ls
vi <file>
git clone <URL>
rm -v <file>
cd <string>
git commit -m"update"
print <string>
vi <file>
ssh -t <file> sh -c <string> attach
sudo apk add <string>
clear
cd <string>
exit
git pull
git init
open <string>
vim <file>
sudo sed -i <directory>
dpkg --get-selections <string> <file>
clear
find . -name <file> -print0
git push
clear
xargs -L1 -I'{}' <string> -rE <string>
sed -E -e <directory>
ls
cd <string>
python3 <file> --model-path <file> --conf <string> --img-size <number>
vi <file>
ls -l
cat <string>
npm i -g <string>
git clone <URL>
ls
ls -al
rm <string>
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
ssh-keygen -t <string>
ls
cd <string>
git commit -am <string>
cd <directory>
apt install <string>
cd
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
wget <URL>
cd <string>
python3 <file>
ls -la <directory>
cd <directory>
cat <string>
ls
ls
cd <string>
cd <string>
cd <string>
brew uninstall <string>
ls
ls
git commit -a -m'WIP'
sudo xbps-remove <string>
vim <file>
sudo chown <string>
clear
ls
cat <string>
find . -name <file> -type <string> -print -delete
cd <string>
ls
git stash list
git pull origin master
ls
grep <string>
ps aux
cd ..
docker images --no-trunc --format <string>
apt-get purge <string>
ls -al
git commit -m <string>
npm run start
sleep <number>
ls -lrt
nano <file>
vim <file>
git commit -m <string>
nano <file>
ls
mv <string>
bash
mv <string>
git config --global <file> <file>
sudo apt-get install <string>
cd <string>
sudo reboot
git add .
ls
cd <directory>
sudo mount <directory>
sudo apt install -y <string>
git pull
cd <string>
git push
ls
cd <string>
mv <string>
git push
cd <string>
read -r -p <string>
git reset --hard
su root
rsync -a <string>
exit <number>
git clone <URL>
cp -r <directory>
npm i <string>
git pull
vim <file>
sudo sshfs -o <string>
sudo nano <directory>
ls
vim <file>
docker-compose stop <string>
cd ..
vim <file>
ls
wget <URL>
git push
cd ..
ls
ip
ls
git add .
git status
exit <number>
git pull origin development
git init
tail -f <directory>
LANG=<string> rpm -qp --queryformat <string>
sudo wget
fg
top
ls
git push
code
sudo ufw allow <string>
cd ..
exit
cd <directory>
vi <file>
curl -X <string> <URL> -d <string> -d <string> -d <string>
cd <directory>
rm -rf <string>
vim <file>
cd <string>
cut -d=<string>
clear
rm -f <string>
clear
vim <file>
sudo nvim <directory>
cd <string>
git add .
read <string>
sudo rm -rf <string>
curl --ftp-create-dirs -T <string>
git branch
npm run coverage
ls
tee -a <string>
fg
cd <string>
vi <file>
ls
cd <string>
git add .
grep <string>
ls
systemctl status <string>
tmux
export <string>
vi -t <string>
sudo python <file>
npm install -g <string>
ls
sed -e <directory>
git add <string>
ls
exit
ls
grep <string>
clear
cd ..
<file> program
vi <file>
tail -f <directory>
exit
cd <string>
cd <string>
git fetch
ls
ls
vim <file>
vim <file>
ls
vim <file>
git remote add origin <URL>
ls
cat <string>
then\
rm -fv -- <string>
ls
cd ..
clear
sudo apt-key adv --keyserver <string> --recv-key <string>
apt-get update
vi <file>
cd <string>
curl -o- <URL>
find . -size <string> -a -print -a -exec <string> -f <string> \
git add <string>
rm <string>
ls
exit
sudo chmod -R <number> <string>
vim <file>
npm test
mv <string>
cat <string>
ls
exit
cd <string>
ls
chmod -x <file>
ls
git init
docker rmi -f <string>
git commit -m <string>
vi <file>
rm <string>
git push -u <string> master
exit <number>
ls
ls -lrt
read -s -p <string>
python3 --version
git checkout <directory> -f
ls
ls -al
<string> --tree-spawn -mca <string>
cd <string>
ls
cd <directory>
ls
clear
tail -f <string>
git add <string>
git add <string>
git status
rm <string>
mv <string>
awk <string>
cd <string>
git diff
sudo python3 <file>
cat <string>
chmod +x <string>
sudo apt-get install <string>
git stash pop
git merge <string>
git submodule add <URL>
cd <directory>
chmod <number> <string>
ls
git add <string>
git clone <URL>
git status
cd ..
cd ..
git stash
cd
git diff
clear
ls -lrlt
cd <string>
vi <file>
git push origin main
ls
vi <file>
ls -la
cd <string>
sudo addgroup <string>
vi
git pull origin master
exit
ls
sudo pkill <number>
mkdir <string>
cd <string>
cat <string>
git add <string>
rm -rf <string>
wget --quiet <URL>
git commit --amend --no-edit
git branch -M <string>
sudo python3 <file>
sh
git status
ls -l
sudo su
git push
cd ..
exit
systemctl --type=<string> --state=<string>
ls
curl --fail <string>
sudo ufw <string>
cd <string>
clear
python3 <file> runsslserver <number> --certificate <file> --key <file>
cd <string>
ls
sudo start uwsgi
brew services <string>
ls
head -n1
ls
touch <string>
ping <string>
git commit -m <string>
git commit -m <string>
ls
sudo apt install -y <string>
mkdir <string>
python3 <file>
cd -
sudo <directory> restart
docker ps
ls
cd ..
sudo yum --nogpgcheck -y <string>
docker pull <string>
git add <string>
git remote -v
git add .
clear
clear
wget <URL> -O <file>
git clone <URL>
vi <file>
git reset --hard <string>
clear
yarn add -D <string>
cd <directory>
git push
git commit
sudo parted <directory>
cd ..
python3 <file>
cd <string>
git config
ls
sh -c <string>
git commit -m <string>
clear
vim <file>
ls
code .
ls
git rebase -i <string>
vim <file>
nano <file>
cat -n <file>
apt-get install <string>
rm -r <string>
curl -i <string>
vi <file>
clear
cd <string>
ls
cd <directory>
sudo apt-get update
code .
ls
git status
rm -rf <string>
tail +x # want to display all the lines from x to y. This includes the xth and yth lines.
cd <string>
vim <file>
sudo apt install <string>
ls
sudo yum <string>
exit <number>
cd <string>
git add --all
git remote -v
ls
ls
exit
git add .
sed -e <directory>
ls -l
sudo sed -i <directory> <file>
cd <directory>
vim <file>
exit
ls -l
git commit -m <string>
ls
ls
git checkout <string>
ls
ls -l
ssh dirlic@10.18.0.39 -p <number>
cd ..
fg
pwd
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
find . -size -10k
cd <string>
done
more
cd ..
ls
git commit -m <string>
ls
mv <string>
cat <string>
sudo snap install --classic <string>
fzf <string>
git status
git config --get --unset <file>
cd <string>
docker-compose ps
python3 -m <string>
vi <file>
sudo apt-key add -
docker run --help
vim <file>
su field
ls
ls
node <file>
cd ..
vi <file>
curl -sLX <string> <string>
mv <string>
clear
npm uninstall --save <string>
ls
git add <string>
aptitude install openjdk-7-jdk -y
as <string>
git --global
git add .
cp -rv <directory>
<directory> <string>
mv <string>
cd ..
cd <directory>
sudo iptables -t <string> -D <string> -p <string> --dport <number> -m <string>
LANG=<string> rpm -qp --queryformat <string>
ls
rm -r <string>
vim <file>
git clone -b <string>
npm run make
nvm_grep <string>
chmod +x <string>
ls --all
mkdir <string>
git add <string>
exit
grep -i --color=<string> <string>
cd <string>
ls
df -k <string>
ls
exit <number>
setg RHOSTS <file>
cd <string>
ls -alrt
mv <string>
sudo cp -rf <string>
ls -la
cd <string>
printf <string>
sudo apt upgrade
docker stop boost
cd
rm -f <string>
top
vi <file>
cp -r <directory>
ls
sudo pacman -Syyu
git --help
git commit -m <string>
cd <string>
sudo vim <file>
sudo ss -tunelp
cd <string>
sed -i <directory>
git remote add origin <URL>
htop
ls
git pull origin <string>
mkdir <string>
cd <string>
cd <directory>
git pull
ls
cd <directory>
git config --list
sudo docker run hello-world
cd ..
cd <string>
less <string>
cd <string>
exit
do-release-upgrade
mv <string>
sudo apt-get -y <string>
time <string>
ssh dirlic@10.18.0.39 -p <number>
exit <number>
then\
ls
docker compose up
mkdir <string>
rm -r <string>
cat <string>
git add <string>
rm -fr -- <string>
sudo vi <file>
sudo make clean install
ps -aux
git log
kill -9 <number>
ls
LANG=<string> rpm -qp --queryformat <string>
git commit -m <string>
ls
cd <string>
cd <string>
sudo mv <string>
vim <file>
git pull
ls
sudo ls -latr <directory>
git commit -m <string>
rm -rf <string>
cd <string>
git status
git push origin
history -a
git pull
cd ..
git push
git commit -m <string>
cd <string>
ls -R
chmod u+x <string>
curl -H <string> -X <string>
bash <file>
cd <string>
curl <directory> -qO- <URL>
git add <string>
vim <file>
vi <file>
git push origin master
sudo apt-get update
clear
npm start
git add <string>
ls
git commit -m <string>
vim <file>
ls
clear
git status
sudo apt-get clear
sudo python3 <file> install
vi <file>
git fetch
git status
ssh -X <string>
cd ..
ls
ls # <string>
ls
npm install
ls
sort -nr
git status
ls -la
ls
tail -f <directory>
ls
then
rm -rf <string>
dpkg -l
less
cd ..
git push
grep -E -o <string>
sed -E -e <directory>
<file> <file>
ls
sudo rm -rf <string>
clear
cd <string>
ls
ls -al
sudo mount <directory>
git add .
cat <string>
view <string>
git checkout <string>
ls
sudo timedatectl <string>
git add <string>
nc <string>
make -j <string>
clear
ls
ping <string>
ss
rm -rf <string>
vi <file>
done
sudo pacman -S <string>
ls
docker container ls --all ------- <string>
chmod u+x <string>
ls -1
git branch -M <string>
ls
rm -r <string>
npm cache <string>
rm -f <string>
cd <directory>
pkill <string>
nano <file>
sudo apt update
sed -ri <string>
git push
cd
sed <directory>
fg
git commit -m <string>
cd ..
cd <string>
git clone <URL>
vim <file>
clear
ls
cp -r <directory>
sudo yum install <string>
ls
apt-add-repository
cd <directory>
kubectl get svc --all-namespaces
clear
vi <file>
touch <string>
ls
sudo mv <string>
mkdir -p <string>
touch <file>
cd <string>
export <string>
clear
git
cd ..
git status
rmdir -r <string>
sudo su
sudo apt install <string>
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
pwd
ping <string>
cd <string>
cd <directory>
git clone <URL>
sudo systemctl enable <string>
done
git clone <URL>
ls
git branch
exit
exit
cd <string>
clear
df -Ph
apt-get -y <string> <string>
cp -r <directory>
cd <directory>
cd <directory>
cd <string>
ls -la
cp <string>
top
git reset --hard <string>
rm <string>
sudo pacman -S <string>
cd
history
git co master
vi <file>
cd <string>
ls
cd <string>
git push -u <string> master
ls
exit <number>
git log
select(.status.containerStatuses[].name==<string> <string>
done
perl -nle <string>
sudo apt-get update
sed -n <string>
git add <string>
chmod <number> <string>
exit <number>
git add .
ping <string>
cd <directory>
touch <string>
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
apt-get -y <string> <string>
ls
ls
ls
cd <string>
read -p <string>
cd <string>
sudo python <file>
git commit -m <string>
rm -f <string>
sudo su
sudo rm -rf <string>
ls
cat <string>
vim <file>
nice
cd <string>
git pull origin master
sudo mkdir <string>
cd ..
cd -
find . -empty -type <string> -print -delete
cd <string>
git remote set-url origin <string>
clear
ls
ls
git pull origin master
sudo crontab -u <string> -e
grep -v <string>
sudo sed -i <directory>
docker-compose logs
find <directory> -name <string>
<directory> <directory>
sed -i <string>
git status
git commit -a
cd
clear
sudo chmod <number> <directory>
git commit
touch <string>
cd <directory>
mv <string>
ls
sudo nginx -t
cd <string>
cd <string>
fg
ps aux
ssh-keygen
tar -xvzf <file>
fg
sed -i <string>
pwd
cd <string>
find . -empty -type <string> -print -delete
sed -i <directory>
ls
vim <file>
nano <file>
sudo sed -i -e <string>
git clone <URL>
docker exec -it <string> bash
git push
clear
wget -q -O <file>
less
tmux
cd <string>
rm -fr <string>
rm -r <string>
ls
find . -empty -type <string> -print -delete
cd <string>
ls
npm install
docker ps -a
cd <directory>
git merge <string>
ls
python3 <file>
clear
cd <directory>
git push
gsettings set <file>
sudo vim <directory>
sed <directory>
cd <string>
ls
find $dir -type <string> -exec <string> -k <string>
ls
sh <file>
exit
open .
sudo apt install <string>
touch <string>
mv <string>
ls++ -a
vim <file>
git add .
ls
ls
ls
mkdir -p <string>
cd <directory>
git status
ls
tar -zcvf <file>
git clone --depth <number> <URL>
cd <string>
rm * -rf
sudo sed -i <directory>
cd <string>
git status
git --version
source <directory>
git clone <URL>
cd <string>
cd <directory>
git push -u
cd <string>
sudo apt-get install <string>
git init
fg
cp <string>
pwd
clear
sudo systemctl start <string>
docker run -e <string> -v <directory>
mv <string>
brew services <string>
cd <string>
git push
ln -sf <directory>
find . -name <file>
cd <string>
git clone <URL>
hostname -I
git add <string>
vim <file>
ls
cd <string>
ls
ls
git checkout <string>
ls
find . -name <string> -type <string> -exec <string> -c <directory> -- <string>
top
cd <string>
ls
sudo sh <file>
rm <string>
sed -i <directory>
sudo nano <string>
ls
mv <string>
clear
ls
cd <directory>
ls
yarn add -D <string>
who
ls
npm start
sudo systemctl stop <file>
sudo service <string>
set -e
git commit -m <string>
exit
wget -O <file>
ls
ls
python3 <file> --epochs <number>
ls
mkdir -p <string>
ls
vi <file>
curl -sSL <URL>
cat <string>
git push
systemctl status <string>
cd <string>
git commit -m <string>
exit <number>
pwd
git init
rm -f <string>
ls
docker images
docker-compose kill <string>
curl <string>
rm -f <string>
find . -type <string> -empty -delete <string>
ls -l
nano <string>
vim <file>
git pull --no-edit
ls
apt install <string>
git add .
sudo apt-get update\
ls
npm start
cp -r <directory>
git stash
fg
ls
sed <directory>
rm -rf <string>
chfn
git ci -m <string>
git config --global <file> <file>
docker-compose logs
ps -aux
ls
unset <string>
sudo sed -i <directory>
cd ..
ls
git commit -m <string>
go
rm <string>
python3 <file>
git push
fg
read <string>
docker images
sudo vim <file>
mv <string>
mkdir <string>
ls
cd <string>
read -p <string>
cd <string>
pico <file>
exit
fg
ls -l
ls
ls
ls
cd <string>
export <string>
mv <string>
sudo add-apt-repository <string> [arch=<string> <URL>
xargs wc -l
ls
sudo python3 <file>
sed -i <string>
cd <string>
cd <directory>
ls
cd <string>
ls
tmux ls
vim <file>
wget -q -O <file>
ls
clear
sudo apt-get purge <string>
diff <file>
ls
git commit -m <string>
vim <file>
nano <file>
export <string>
sudo apt-get install <string>
tail -n <string>
curl -s <string>
git commit -m <string>
ls
ls
git status
cd ..
clear
source <string>
git commit -m <string>
ls
ls -l
git add <string>
su - <string>
ls
ls
ls -la
ls
fg
docker stop <string>
cd <string>
python3 <file>
ls
ls
git pull origin master
ls
chsh -s <directory>
sudo raspi-config
sudo docker ps -a
cd
grep <string>
find . -name <string> -type <string>
git commit -m <string>
sudo stop uwsgi
exit
ftp <string>
cp -a <string>
clear
git add <string>
cd <directory>
cd <directory>
cd <string>
ls -lt
mkdir <string>
fg
git init
git pull
git pull origin master
sudo vim <file>
ls
cd <directory>
sudo apt-get install redis-server memcached -y
grep <string>
cd <directory>
git push -u <string> main
git remote add origin <URL>
git clone <URL>
exit <number>
find . -name <file> -type <string> -exec <string> -rf <string>
find . -type <string> -a <string> -name <file> -o -name <file>
read -r <string>
git add .
mkdir <string>
rsync -a <string>
cd <string>
git status
cd <string>
cd -
cd <directory>
git add <string>
git init
git status
sed -i <string>
curl -OL <URL>
cd <string>
rm <string>
sudo apt update
curl -fsSL <URL>
grep -ia <string>
git add <string>
sudo sed -i <directory> <file>
sudo rm -rf <string>
du -sh <directory>
grep <string>
cd ..
ss
npm install
fg
vim <file>
wget <URL>
ls
cd <directory>
ls
git add.
mv <string>
ls
rm -rf <string>
git push
ls
git co master
screen -ls
sudo apt-get update
git init git add <string>
git
cd ..
ls -la
ls
git log <string> -- <string>
cd <string>
exit <number>
git reset --soft <string>
sudo pacman -S <string>
exit
sudo python3 <file>
cd <string>
vi <file>
git remote add origin <URL>
vim <file>
git add <string>
sudo pacman -R <string>
git push
git fetch origin\
git status
ls
git add .
mv <string>
sudo ltrace -f -p <number> -o <file>
cd <directory>
ls
cd <string>
cd ..
sudo apt upgrade
ls
cat <string>
git commit
ls
cd <directory>
vim <file>
python3 <file>
fg
git branch -M <string>
grep -v <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
killall -KILL -u <string>
cd <string>
sudo chmod +x <string>
ls
mkdir <string>
ls
sudo reboot
ls
ls
ls
sudo apt install <string>
ls -a
mkdir <string>
ls
ls
git add <string>
clear
chmod <number> <string>
ls
git clone <URL>
ls
grep -v <string>
less
rm <string>
docker-compose up -d --build
ls -l
git remote remove <string>
npm install -g <string>
mkdir -p <string>
cd
vim <file>
cd <string>
ps aux
killall <processname> # kill all processes with the name
done
su
sh <file>
vi <file>
git submodule sync
vim <file>
cd <string>
git status
cp <string>
ls
ls
vim <file>
vi <file>
vim
git pull
clear
docker run -itd --name <string> -p <string>
cd <directory>
grep -i <string>
cd <string>
du -sh <directory>
git commit -m <string>
exit
grep -v <string>
git commit -m <string>
systemctl --type=<string> --state=<string> --all
vi <file>
ls
git stauts
git commit
ls
cp <string>
top
pwd
ls <directory> -ld
sudo apt install <string>
rm -rf <string>
git pull
ls
cd <directory>
history -a
ls -la <directory>
ls
ls
sudo shutdown now
git commit -m <string>
python3 <file>
cat <string>
wc -l <string>
wget -qO- <URL>
sudo cp <string>
sudo apt-get install <string>
ls
git push -u <string> main
cat <string>
rm <string>
grep <string>
grep <string>
ls
cd <string>
clear
vi <file>
cd <string>
sort -nr -k <number>
rm <string>
grep -v <string>
rm -r <string>
git clone <URL>
ls -a
docker ps
grep -H -R -o -n -I <string>
sudo apt-get update
git pull origin master
sudo pacman -Syu
curl <string>
sudo reboot
git pull
cd <string>
cd <string>
ls
cd <directory>
ls
cat <string>
python3 <file>
sed -e <directory>
then
ls
exit
clear
cd ..
grep <string>
passwd
cd <directory>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec -print <string>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
sh
nano <file>
rm <string>
cd ..
rm <string>
ls
cd <string>
ls
sudo -H <string> install <string>
ls
ls -lh
cd ..
rm <string>
cd <string>
git remote add origin <URL>
npm i <string>
clear
git add .
read <string>
LANG=<string> rpm -qcp <string>
apt-get install <string>
cat <string>
hexdump -C <file>
sudo gem install <string>
git pull origin master
mkdir <string>
open <string>
git add <string>
cd ..
nano <string>
git commit -m <string>
ls
ln -s <string>
chmod <string>
vim <file>
cd <string>
git branch --delete <string>
ls
ls
sudo systemctl daemon-reload
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git add .
git pull
git push
git status
file <string>
source <file>
ls
cd <directory>
ls
vi <file>
ls
ls
cd <string>
git rev-parse --short <string> <string>
ls
git add .
apt-get install <string>
killall <processname> # kill all processes with the name
systemctl enable --now <string>
rm -r <string>
ls
sed -i -e <string>
git add .
shutdown -h <string>
cd
pavucontrol
cd
docker rmi <string>
exit
ssh dirlic@10.18.0.39 -p <number>
yarn add <string>
wget
cat <string>
git add .
rm <string>
sudo nala install <string>
ls
source <directory>
ls
cd <string>
unset <string>
code .
source <file>
git init
ls
ls
top
rm -fr <string>
ls
sudo apt install <string>
sudo pacman -S <string>
ls
egrep -ri <string>
ls
cat <string>
sed -e <string> -e <directory> -e <string> \
git filter-branch --tree-filter <string> --prune-empty <string>
sudo
ls
ls
ls
git clone <URL>
cd <string>
npm audit fix -f
ls
ls
ls
mv <string>
cd <string>
ls
apt-get update
cd <directory>
ls
ls
cd ..
cd <string>
LANG=<string> rpm -qp --queryformat <string>
cd <string>
git clone <URL>
git commit -m <string>
git help <string>
ls
killall <string>
sudo dpkg -i <file>
git push -u <string> bryan-guner
vim <file>
sudo dpkg -i <file>
npm install -g <string>
ls
cd <string>
wc -l
git add .
sudo make install
ls
sudo apt-get -y <string>
nano <file>
python3 <file>
git commit -m <string>
which <string>
read -r -p <string>
sudo mkdir <directory>
bash <file>
systemctl disable <string>
ls
mkdir <string>
git add .
sudo pacman -R <string>
ls
less <string>
mv <string>
cd <string>
cd <directory>
git show <string>
cd <directory>
cd <directory>
ls
less <string>
nc -l <number>
sudo curl -sS --compressed -o <directory>
ls
grep -i <string> >files
sudo sysctl -w <string>
history
code .
ls
tar -xf <string>
git init
exit <number>
git add .
which <string>
reboot
source <file>
rm <string>
clear
apt upgrade
chmod -x <file>
ls
mv <string>
pwd # <string>
sudo apt-get remove -y <string>
vim
php -S <string> -t <directory>
git add <string>
export <string>
cd <directory>
cp <string>
done
sudo xbps-remove <string>
sed -i <string>
rm -r <string>
git push
sudo tee <directory>
vim <file>
exit <number>
ls -la
vim <file>
find . -type <string>
vi <file>
ls
docker ps
cd <string>
export <string>
ls
ls
cd <directory>
find -name <string> -type <string> -printf <string>
ls
ls
cat <string>
ls
ls
print <string>
ls -la
grep -w <string>
ls
print <string>
ls
ls -latr
docker login
git pull origin <string>
rm <string>
grep -R <string>
ls
cd <string>
cd <string>
rsync -avzr <directory>
git add .
ls
find $dir -maxdepth <number> -type <string> -exec <string> -B <string> --max-depth=<number> <string>
vim <file>
file <string>
git pull
exit
cd <string>
sudo apt update
ls
ping <string>
cd <string>
ls
which <string>
date
ls
rm -rf <string>
fg
bash
cd <directory>
source <file>
vi <file>
python3 <file>
read -rp <string> <string>
cp <string>
sleep <string>
bash <file>
cd <string>
htop
sort
sudo npm install pm2 -g
git init
cd <string>
local <string>
cat <string>
sudo docker kill corrade
cd <string>
fg
cd <string>
clear
cd <string>
ping <string>
ls
git branch -M <string>
exit
ls
fg
grep -v <string>
systemctl stop <string>
sed -i <directory>
rm -r <string>
ls++ -a
cd ..
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
fg
vi <file>
git pull
ps -ef
git commit -m <string>
clear
ls
ls
cat
sudo dpkg --remove <string>
sudo wget <URL>
git pull
cd <directory>
ls
grep <string>
cd <string>
vi <file>
sudo apt-key add -
fg
npm install
su - <string>
sudo apt-get update\
ls
curl <string>
env
cd <directory>
cd <directory>
sudo apt-key add
systemctl cat <file>
git push
git init
mv <string>
cd -
docker
git clone <URL>
git commit -a
exit
ls
ls
cat <string>
python3 <file>
git stash pop
clear
cd <string>
git commit -m <string>
clear
docker-compose up -d --build
cd <string>
cd ..
sudo apt-get install <string>
uname
git restore -A
mkdir <string>
python3
ls
ls
find . -name <string> -type <string> -print -prune -exec <string> -rf <string>
ls
sudo su
go <string>
cd
git push origin <string>
ls
vim <file>
clear
mkdir <string>
ls -l
vim <file>
python3 <file>
git push -u <string> main
git push
sed -r <directory>
du -h -maxdepth <number>
rm <string>
git add <string>
cd <string>
clear
git branch
sudo apt-get update
vim <file>
npm install
ls
clear
mkdir -p <string>
tmux a -t <string>
sudo sed -i <directory> <file>
find <directory> -iname <file> -type <string> -exec <string> -c <string> --wrap=<string> --from <string> --to <string> <string> -o <file> <string> {} \
git add <string>
cd ..
cp -r <directory>
chmod -x <file>
docker run -d -p <string>
sudo mv <string>
clear
ls
sudo chkconfig --add <string>
vim <file>
clear
cat <string>
timedatectl show-timesync --all
pacman -Syyu --noconfirm <string>
awk <string>
git co -b <string>
sudo sed -i <directory> <file>
vim <file>
cd ..
ls -la
sudo mount <directory>
ls
cd <directory>
ls
git add .
cd <string>
exit
git add .
fg
git add .
cp <string>
sudo firewall-cmd --zone=<string> --add-port=<directory> --permanent
cat -n <string>
git status
git commit -m <string>
exit
vim <file>
sudo emacs <string>
grep -i <string> >files
vi <file>
exit
cd <string>
sleep <number>
sort -g
ls
setg RHOSTS <file>
git push
cd <string>
mv <string>
vim <file>
mv <string>
git merge <directory> --allow-unrelated-histories
uniq
fg
ls _build
curl <string>
sudo nano <string>
ls
ls
bash <file>
rm -r <string>
python3 <file>
find . -empty -type <string> -print -deletefind <string> -empty -type <string> -print -delete
cat <string>
git push
stat
fg
clear
cd <string>
exit <number>
mkdir <string>
sudo -E <string> -
ls
fg
git commit -m <string>
git push --set-upstream <string> <string>
cd <string>
cd <directory>
sudo apt upgrade
fg
fg
vim <file>
curl <string>
git status
exit
npm ERR! <string>
git commit -m <string>
sudo cryptsetup <string>
sed -E -e <directory>
ls
git status
open -a <string>
ls
mv <string>
cd <string>
npm --help
cd <string>
npm run test
sudo n
ls
kubectl rollout status deploy activator -n <string>
yarn <string>
ls
sudo apt install <string>
git commit -m <string>
cd <string>
exit
docker exec -it <string> bash
ssh -t <string>
clear
rm -r <string>
vim <file>
clear
ls
rmdir <string>
cd <string>
sudo service nginx restart
vi <file>
rm -rf <string>
ls
shutdown
kubectl apply --filename <file>
touch <string>
cd <directory>
ls
docker-compose up -d --build
cd <string>
less <string>
git pull
cat <string>
tmux attach
cd ..
cd <string>
read -r <string>
cd <directory>
pwd
cd <string>
read -rp <string> <string>
sed -i <string>
clear
cd <directory>
cd <string>
cd <string>
vim <file>
sudo apt install <string>
pwd
ls
git push
ln -s <string>
cd
git checkout <string>
done\
git push -u <string> master
cp <string>
git add .
ls
npm run start
cd
git remote add origin <URL>
rm <string>
curl <URL> -u <string> -d <string>
sudo -i
clear
ls
sudo sed -i <directory> <file>
rm <string>
cp -r <directory>
ls -l
git status
tail -f <string>
docker exec -it <string>
head -n1\
sudo chmod <number> <string>
clear
find . -name <file> -type <string> -print -delete
bash
vim <file>
git merge develop
wget -q -U <string>
vi <file>
mv <string>
mkdir <string>
vi <file>
finger <user> # displays information about user
cd <directory>
find . -name <file>
cp <string>
sleep <number>
git push origin main
grep <string>
ls
ls -alrt
reboot
rm -rf <string>
ps
ls
mv <string>
rm -r <string>
cd <directory>
tr <string>
exit
ls
git status
ls
brew install <string>
sort
git remote -v
vi <file>
cd <string>
vim <file>
which <string>
npm install eslint --save
ps -ef
git pull
apt-get dist-upgrade -y
sudo pip install <string>
rm -r <string>
vim <file>
clear
read <string>
cat <string>
rm -rf <string>
tar xzf <string>
grep <string>
git commit --amend
vim
rm -rf <string>
read <string>
clear
vi <file>
ls
sudo pip install <string>
cd <directory>
sudo mount -o <string>
git clone --depth <number> <URL>
ls
ls
cd <string>
ls
vi <file>
ls
sudo apt install <string>
cd ..
ls
wget <URL> -O <file>
exit
unset -f <string>
cd <string>
ls
ls
cd ..
ls
cp <string>
sudo apt update
cd <string>
cd <string>
tail <file> -n <number>
git branch 2> <directory>
sudo shutdown
git push origin master
cd ..
cd <string>
git add -A
ls
git clone <URL>
git pull
cd <string>
docker-compose down
exit
xhost +
git rm --cached <string>
grep <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
sed <directory>
cat <string>
tail -1)"\
vim <file>
ls
git pull
cat psql -h <string> -U <string> -d <string>
ls
mkdir <string>
ls
vi <file>
git status
git push
cd
scp <string>
mkdir <string>
git pull
ls
git commit -m <string>
git pull origin main
git commit -m <string>
mvn compile
sudo cp <string>
sudo groupadd -f -r <string>
<directory> <directory>
sudo systemctl start <string>
cd ..
ls
git help <string>
cd <directory>
ls
ls
ls
git commit --allow-empty -m <string>
clear
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
sed <directory>
sudo shutdown -h <string>
grep <string>
git add .
cd ..
shutdown
ls
cd <string>
ls
ls
ls
cat <string>
ls
apt-get upgrade -y
cd <string>
ls
mv <string>
sudo cp -r <string>
vim
git push --set-upstream <string>
ls
awk <string>
cat <string>
exit <number>
sudo sed -i <directory> <file>
ls
cd <string>
cd
cd
clear
cd <string>
fg
git clone <URL>
rm -rf <string>
cd <string>
more <file>
docker-compose logs --follow <string>
exit <number>
vim <file>
git commit POP3.* -m <string>
grep -i <string>
sudo npm install <string>
apt-get install <string>
sudo systemctl restart <string>
ls
rm -f <string>
ls
sudo mkswap <directory>
sed -E -e <directory>
cd <string>
git push
git commit -v -a -m <string>
open -a <string>
tail -f <directory>
apt-get -y <string> <string>
git commit -m <string>
git status
touch <string>
done
dotnet <string>
ls
source <file>
npm test
vim <file>
mv <string>
sudo service <string>
cd <directory>
npm start --active-arch-only -- --resetCache
ls -la
ls
mv <string>
rm -rf <string>
sudo apt-get install -y <string>
git add .
git push
git status
sudo docker run -d -p <string> -p <string> -v <directory> --name <string>
git push -d <string>
git add .
find . -type <string>
sudo sysctl -q -w <string>
cd <string>
cd
sync
cd <string>
clear
strings <file>
ls
head -10\
git add <string>
vim <file>
grep -q <string>
cd
chmod <number> <string>
vim <file>
ls
ls -lah <string>
ls
head -n <string>
sudo -E <string> -
sudo git clone <URL>
ls
vi <file>
git add -v -f <string>
ls
kubectl get <string>
mkdir <string>
rm <string>
sudo add-apt-repository <directory>
docker run -v <string>
clear
ls
git add <string>
cd ..
cd <string>
grep -i <string> >files
sudo vim <file>
ls -la
which <string>
ls
mkdir <string>
sudo nano <directory>
git pull
fg
touch <file>
find --help
git clone <URL>
cd <string>
exit
sudo gem install <string>
cd <directory>
git commit -m <string>
git add <string>
git init
sed -i <string>
vim <file>
ls
fg
clear
ls
npm start
read -p <string>
ls
patch <file>
date
cd <string>
read -rp <string> <string>
which <string>
vim <file>
clear
clear
git status
git commit -m <string>
mv <string>
cd <string>
ls
find $dir -type <string>
cd <directory>
cd <directory>
exit
ls
docker rm <string>
cd <string>
sed -i <directory>
sed -i <directory>
systemctl restart <string>
wget -r <URL>
sudo apt install <string>
git pull
LANG=<string> rpm -qp --queryformat <string>
nano <file>
ls
cd <string>
cat <string>
rm -r <string>
touch <file>
sleep <string>
rm -rf <string>
git commit -m <string>
systemctl status <string>
curl <string>
git add -A
docker stop <string>
cd <string>
fg
cd <string>
df
find <string> -type <string> -name <string> -printf <string> -delete
curl -o <string>
cat <string>
git remote add origin <URL>
cd <string>
cd <string>
cd <string>
ls
xz
cd <string>
git config --global <file> <string>
git add .
cd <string>
git commit
ls
vim <file>
ls -la <directory>
git commit
eval <string>
tail -f <string>
sudo apt-get install <string>
printf <string>
git add .
git pull
git push
sudo apt autoremove
find . -type <string> -exec <string> -i <directory>
cd <string>
cd <string>
vi <file>
ls
ls
ls
cd ..
ls
git add .
ls
git status
sudo bash <string>
sed <directory>
git commit -m <string>
cd <directory>
cd <string>
rm <string>
history
docker rm <string>
mkdir <string>
vim <file>
shutdown -h <string>
ls
exit
sudo nvim <directory>
git branch -M <string>
find <directory> -name <string> -delete <string>
git status
exit
curl -H <string>
ls
ls
dpkg -l
vi <file>
exit
sed -e <directory>
rm -rf <string>
vi <file>
cd ..
git add <string>
source <file>
git status
sudo sed -i <directory> <file>
git pull
cd
git status
git checkout <string>
cd <string>
nano <file>
ls
git clone <URL>
find . -name <file>
export <string>
ls
cd <string>
mkdir <string>
cp -r <directory>
sudo tee <directory>
rm <string>
ip route <string>
cd <directory>
scp -r <string>
mkdir <string>
source <directory>
cp -r <directory>
cd <string>
rm -rf <string>
sed -i <string>
mv <string>
ls
cd <string>
vi <file>
cd ..
ls
ls
ls
cd <directory>
find <directory> -type <string> -execdir <string>
date
then\
ls
clear
sudo lighty-enable-mod <string>
git --nopager <string> --oneline
ls
python3 <file>
grep -wPr <string>
rm -vrf <directory>
npm start
sed <directory>
cd <string>
cd <string>
npm install
xargs -L1 <string>
scp <string>
ls -la
cd
find . -name <file> -type <string> -print -delete
ls
python3 -m <string> install <string>
cd <string>
git status
git commit -a
which <string>
cd..
git remove -v
service apache2 reload
ln -s <string>
git init
npm start
do-release-upgrade
vim <file>
sudo rm -rf <string>
sudo subl <string>
clear
ls
ls
git status
mkdir -p <string>
vim <file>
npm i -g <string>
du -ah --max-depth=<number>
yarn add <string>
git init
grep -a -i -E --no-filename <string>
curl -T <directory> <string>
make clean
cd <directory>
exec <string>
setg RHOSTS <file>
man <string>
ls -a
killall <processname> # kill all processes with the name
vim <file>
cd <string>
ls
cd <directory>
cd ..
history
docker exec -t -u <string>
bash <file>
cd <directory>
fc-cache -vf
chown -R <string>
npm init
g++ -std=<string> <file> -o <string>
curl --proto <string> --tlsv1.2 -sSf <URL>
ls
clear
sudo pacman -Syyu
git tag <string>
tail +n # Print nth line from file.
mkdir -p <string>
scp <string>
ls
cd <directory>
cat <string>
sudo cp <string>
apt-get update
git push
ls
npm run start
git clone -b <string>
sudo lsof -n -i4TCP:$1
ls
cd <string>
git push
dpkg --list
docker exec -it <string> bash
cd <string>
git commit -m <string>
service <string>
cd ..
ls
ls
cd <directory>
vim <file>
cd <string>
else\
ssh -J
npm run build
vim <file>
git branch
unset color_prompt force_color_prompt
vi <file>
python3 <file>
git commit -am <string>
git clone <URL>
rm -r <string>
ls
exit <number>
cd <string>
fg
git clone --depth <number> <URL>
ps -auxwf
ls
vim <file>
sudo npm install <string>
docker run <string>
ls -l
sudo deluser <string>
git init
clear
<file> program
find . -name <file>
sudo sed -i <directory>
ls
vim <file>
node <file>
git config --global <file>
grep <string>
ls
file <string>
git checkout <string>
export <string>
sudo dpkg-reconfigure tzdata
ls
python3 <file>
npm run frontend
git commit -m <string>
cd ..
ls
cd
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cd
sudo vim <file>
docker-compose stop
git push
cd <string>
cd <string>
ls
exit
curl <string>
python3 <file>
git log
cd <directory>
sudo ip route add <string>
ls
sed <directory>
cd <string>
cat <string>
cd <string>
cd ..
cd
git config --global <file> <string>
ls
mkdir <string>
wget $flutterLINK -O <file>
ls
cd <directory>
vim <file>
curl -X <string> -d <string> -d <string>
local <string>
git push
vim
ls
cd
exit
sudo dnf install <string>
fg
cat <string>
git config --global <file>
read
cd <directory>
go build <file>
docker rm <string>
sudo userdel bob
cd <directory>
cd <string>
ls -l
sudo wgnord <string>
git remote add origin <URL>
unset <string>
npm i -f
rsync <directory>
git remote add origin <URL>
vim <file>
exec zsh
mkdir -p <string>
git diff
rm <string>
git push
su
cd <string>
open <string>
ls -latr
npm-recursive-install
ls
git branch --verbose
sudo emacs <string>
git commit
vim <file>
cd <string>
cd ..
chmod <number> <string>
tail -f <directory>
sed <directory>
vim <file>
alias
docker-compose up -d --build
mount --types <string> overlay --options <string>
git commit
cd <string>
touch <string>
git commit -m <string>
npm init -y
git checkout -b <string>
ls
ls
cd <string>
exit
export
git remote -v
wget <directory> -O <file>
grep -i -a <string>
git init
ls
read -r <string>
clear
sudo sed -i <directory>
npm i -g <string>
cd
pwd
sudo -s <string> <directory>
npm start
set
cd <string>
rmdir <string>
cd
ls
ls
vi <file>
git add <string>
cd ..
clear
npm install --save-dev <string>
find . -name <file> -type <string> -print -delete
git clone <URL>
npm i -g <string>
vi <file>
apt update
sudo mkdir -p <directory>
rm -r <string>
ls
cd <string>
docker info
cd ..
ls
ls
rm -r <string>
npm ls
ls
ls -la <directory>
grep <string>
sudo systemctl restart <file>
cd <string>
git checkout <string>
cd <string>
python3 <file>
cd
ps aux
then\
sleep <number>
scp <string>
node -v
chmod <string>
cd <string>
exit <number>
ls
cat <string>
ls
ls
sudo dnf install -y <string>
ls
cd ..
cd <directory>
code <string>
ssh dirlic@10.18.0.39 -p <number>
git checkout -b <string>
git add <string>
bash
clear
sudo apt update
apt-get install <string>
git checkout -b <string>
sort -h -r
sort -g
clear
sudo xcode-select --install
cat <string>
git commit
cd <string>
docker history <string>
cd <string>
vim <file>
sudo apt-get install <string>
clear
git checkout master
cat <string>
git remote add origin <URL>
clear
git co - <string>
git add .
sudo vim <file>
sudo apt-get install nasm --fix-missing
pwd
awk --help
history -c
git checkout <string>
wget -O- <URL>
export <string>
git tag <string>
cd <string>
cd
cd <directory>
systemctl enable <string>
systemctl stop kubelet
nano <file>
cd ..
cd ..
ls
ls
df -h
done
git show
awk <string>
sudo adduser arjun
cd <string>
git pull
ls
rm <string>
code <string>
cd ..
exit <number>
fg
git pull
cd <string>
python3 <file>
git add .
git status
brew install --cask <string>
docker compose up -d
ls -la <directory>
sudo sed -i <directory> <file>
cd <directory>
clear
cd ..
wget -O <file>
ls
git pull
sudo bash <file>
ls -tlr
sed <directory>
vi <file>
cd ..
script/build.sh
more <file>
cd <string>
git help
vim <file>
clear
sudo pacman -S <string>
cd <string>
bash
git config --global <file>
mv <string>
git init
module --version
sudo nala purge <string>
mv <string>
sudo useradd -m <string>
mkdir <string>
rm <string>
npm run dev
ls
sudo pip3 install --extra-index-url <URL>
clear
ls
sudo stop uwsgi
sudo nvim <directory>
npm install
kill -9 <number>
git checkout <string>
ls -latr <directory>
vi <file>
docker rm -f <string>
python3 <file>
ls
cd <string>
head
sudo chmod <number> -R <string>
python3 <file>
which -a <string>
find . -name <file>
exit <number>
vim <file>
clear
nano <file>
ls
git merge <string>
ls
vim <file>
git
ls
ls
curl -sSL <URL>
git clone <URL>
grep -i <string>
ls
pwd
sleep <number>
su - <string>
sleep <string>
ls
vi <file>
git add .
printf <string>
npm run build
cd <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
git push origin2
git status
python3 <file> --epochs <number>
bash
set <string>
chmod <number> <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
ps aux
cd ..
cd <directory>
git log --max-count <number> --pretty=<string> --abbrev-commit --no-merges --decorate <string>
rm -r <string>
ip a
code <string>
ls
clear
sudo python3 <file>
cp <string>
sleep <number>
ls
exit
jq -r <string>
ls
ls
cd <directory>
exit
rm -v <string> -name <file>
sudo apt install <string>
sudo rm -rf <string>
git add .
cd <string>
ls
clear
then\
sudo python <file> --cascade=<file> <number>
mkdir <string>
docker rm -f <string>
rm <string>
git filter-branch --env-filter <string>
ps # prints a line of information about the current running login shell and any processes running under it
vim <file>
clear
git checkout <string>
git config --bool <file>
ls
cd <directory>
ls -la
export <string>
sudo chmod <number> <directory>
sudo apt-get update
killall <string>
sudo nginx -t
cd ..
git remote add origin <URL>
vim <file>
ls
grep -q <string>
tail -f <directory>
rm -r <string>
cat <string>
git fetch
git push
cd <directory>
clear
top
rm temp -rf
npm i <string>
sudo chmod +x <directory>
git init
top
sudo make
exit <number>
awk <string>
apt-get install <string>
grep <string>
lsblk
chmod +x <string>
ls
ls
ls
cd <directory>
cd <directory>
git pull
ls
cat <string>
vim <file>
npm run test
vim <file>
git stash apply <string>
sort -rh
ls
code .
vi <file>
vim <file>
yarn
ls
vim <file>
ls
vi <file>
cd <string>
screen -r <string>
sudo apt remove <string>
vim <file>
cd <directory>
read <string>
sh <file>
sudo mkdir <directory> -p\
chmod <number> <string>
ls
git stash
clear
git pull
git status
cd <directory>
ls
sed -Ei <directory>
mkdir <string>
sed <directory>
history
git init
ls
ls
ls
ls
ps # prints a line of information about the current running login shell and any processes running under it
git branch -M <string>
ls
tail -f <directory>
sudo shutdown -r <string>
sort
npx create-react-app my-app --template <directory> --use-npm
grep -q <string>
ls
ls
cat <string>
sudo cp -r <string>
cd ..
ls -l
curl <URL> -o <file>
ls -lt
cd <directory>
done
mv <string>
su
ls -alF
grep <string>
vim <file>
vim <file>
ls -al
sudo systemctl reload <string>
clear
ssh-keygen -t <string> -b <number> -C <file>
git push -u <string> main
git add .
tmux a -t <string>
read <string>
clear
cd <string>
cd ..
vim <file>
sudo shutdown
wget -O <file>
sudo apt remove <string>
cd
ls
sleep <string>
history
man <string>
pwd
nano <file>
curl -L <URL> -o <file>
git commit -m <string>
npx tailwindcss init -p
clear
read <string>
ls -a
clear
uniq
mkdir <string>
sudo port <string>
cd ..
sudo tar zxfv - -C <directory>
find . -iname <string> -print0
rm <string>
cd ..
ls
sed -ie <directory>
git restore <file>
exit
htop
ls
cd ..
tail -f <string>
history
sudo docker stop <string>
cut -c <string>
rm -rf <string>
python3 <file>
git log --full-history -- <file>
git commit -m <string>
python3 -m <string> install <string>
vim <file>
ls
git status
clear
git push
ls
ls -la
clear
sudo apt-get upgrade -y
vim <file>
printf <string>
sudo apt-get upgrade -y
git add <string>
code <string>
mkdir -p <string>
clear
history
sudo install -Dm755 <string>
python3
cd ..
sudo pacman -S --overwrite <string>
ls -l
ls
kill -9 <number>
git branch -D <string>
vi <file>
clear
touch <string>
mkdir <string>
cd ..
sudo apt-get install <string>
clear
ls
else\
sudo apt-get install <string>
cd <string>
cd <directory>
cd <string>
ls -la
git status
g++ -std=<string> <file> -o <string>
curl <string>
git merge <string>
ls
find . -name <file>
npm login
git commit -m <string>
cd ..
ls
awk <string>
git clone <URL>
cd <string>
ls
mkdir -p <string>
ls
sudo apt-get install <string>
ls
git remote add origin <URL>
cd ..
ls
cd <string>
git commit -m <string>
vi <file>
fg
code .
rm <string>
print <string>
ls
mkdir <string>
open .
git tag -a <string> -m <string>
source <string>
mkdir <string>
cd..
npm i <string>
ln -sv <string>
sudo start uwsgi
ls
cd <string>
exit
ls
python3 <file>
ls
sed <directory>
ping <file> -DA
nano <file>
ls
ls
git rebase -i <string>
npm run start
ls -l
cd <string>
ln -s <string>
exit
cd <string>
vi <file>
ls
vim <file>
cd <string>
sudo pacman --no-confirm -S <string> <string>
ls
cd <directory>
cat <string>
rm <string>
ls
fg
apt install -y <string>
sudo flatpak override --env=<string>
sort -h
cd <string>
mkdir <string>
cd <string>
sed -i <string>
nano <file>
vim <file>
brew cask install <string>
cd ..
git clone <URL>
ping <file>
npm install
git add <string>
ls
ps -aux
cd <string>
git commit -m <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
sudo firewall-cmd --permanent --zone=<string> --add-port=<directory>
mv <string>
git commit -m <string>
cd ..
vi <file>
cd <string>
sudo python3 <file>
sudo cat <directory>
git branch
cd <string>
mkdir <string>
git pull
sudo poweroff
ls
cp -v <string> <directory>
bash <file>
git config --global --add <file>
git branch 2> <directory>
cd <string>
git commit -m <string>
vim <file>
cd <directory>
cd <string>
docker run --help
cp -r <directory>
ls
ls
sudo service <string>
sudo cp -fr <string>
sleep <number>
grep -n <string> <directory>
cd ..
node <file>
vim <file>
source <string>
vim <file>
cd <string>
touch <string>
sudo pacman -S <string>
which <string>
ls
git push
chmod <number> <string>
ls
fg
vi <file>
curl <string>
export <string>
git push origin
grep -Pv <string>
cd ..
ls
ls
yarn install
npm start
git checkout master
cd <string>
cd ..
git pull
sudo apt-get -y <string>
mv <string>
sudo apt install -y <string>
read -p <string>
find $dir -type <string>
git commit -m <string>
git status
sudo ln -s <directory>
clear
ls
git remote set-url origin <string>
cd <directory>
ls -lah
reset
nano <string>
sudo apt-get install <string>
git push -u <string> master
vim <file>
ls
rm -f <string>
git log --format=<string> -n <number>
git lfs <string>
cd <string>
cd <string>
bash <file>
xargs grep <string>
kubectl <string>
git push origin main
rm -rf <string>
cd <directory>
cd <string>
git config --global <file>
sed -i.bak <directory>
sudo apt install <string>
sudo pacman -S <string>
git clone <URL>
git commit -m <string>
vim
ls
vim
sed <directory>
vi <file>
<directory> -m <string>
cd
ls
chmod <number> <string>
find <directory> -name <file>
npm i
vi <file>
exit
vim <file>
curl <string>
rm -r <string>
cd <directory>
cd <string>
exit
less
nano <file>
exit
sed <directory>
cd <directory>
sudo apt-get install <string>
local <string>
curl <string>
curl <URL> -k
git commit -m <string>
cd <string>
cd <string>
chmod <number> <string>
clear
cd <directory>
cd <string>
date
git merge <string>
exit <number>
sed -n <string>
grep -F <string>
cat <string>
git add <string>
unset color_prompt force_color_prompt
cd <directory>
ls
htop
git fetch
git clone <URL> -f
git pull
ip a
git checkout -b <string>
pwd
bash
git pull origin master
grep -h <string>
vi <file>
sudo vim <file>
cd <string>
screen -r
sudo chmod -R <string>
read -p <string>
sudo nano <directory>
cd
su -
curl <string>
systemctl status <string>
ls
sudo lvresize -l <string>
cd ..
sudo sed -i <directory>
mkdir <string>
sudo pacman -Syu <string>
git commit -m <string>
ls -alrt
cd <string>
mv <string>
cd <string>
sudo dpkg -i <file>
history -a
cd <directory>
git commit -m <string>
ls
uniq -c
npm install <string>
cd
docker run --name <string> -d -p <string>
cd <string>
sudo apt-get purge <string>
pwd
git add <string>
sudo mousepad <directory>
vi <file>
ls
sudo a2disconf -q <string>
cd <string>
screen -r
killall <string>
git pull
ls
ls
pwd
clear
cd <directory>
rm <string>
cd <directory>
git clone <URL>
cd <string>
source <directory>
read <string>
git init
git status
git pull
mkdir <string>
nano <file>
let <string>
cd <string>
cd <directory>
less <string>
sudo ln -s <directory>
ls
cd <string>
open <string>
ls
cd ..
find . -name <string> -type <string>
ls
g++ -fPIC -DPIC -shared -nostdlib <directory>
clear
grep <string>
cd <string>
ls
sed <directory>
ls
fg
ls
cd <string>
env
cd <directory>
ls -la
exit <number>
git push
ls
clear
exec <string>
git log --oneline
git pull
git reset
read -p <directory> -n <number> -r <string>
mkdir <string>
done
ls -l
clear
ls
cat <string>
ls
git checkout master
ls
ls
sudo apt update
mkdir -p <string>
cd <string>
git rebase <string>
npm install <string>
apt-get install <string>
sh <file>
mkdir <string>
then\
ls
cat <string>
service <string>
rm -rf <string>
tee -a <string>
git status
git add .
clear
ls
git add -p
cd <string>
git branch rm <string>
cd
vi <file>
vim <file>
git pull
mkdir <string>
grep <string>
python3 <file>
aptitude install -y <string>
cut -d <string> -f <string>
docker volume rm <string>
history -s <string>
sudo sed -i <directory>
cd <string>
cat <string>
git-filter-repo --version
ls
clear
read -r <string>
pwd
ls
exit <number>
docker container <string>
vim <file>
cd <string>
pwd
rmdir <string>
cd ..
ls
cd <string>
npm run devstart
cd <string>
cd <string>
ls -ltr
ls
reboot
npm start
perl -0777 -pie <directory>
read -p <string>
sed -E -e <directory>
git pull
sudo npm install -g <string>
cd <string>
rm <string>
ls
git config --global <file> <string>
sudo yum install <string>
git add .
exit
grep <string>
ls
vim <file>
cd..
fg
git commit -m <string>
nano <string>
git status
cd <string>
cd <string>
git push origin master
rm <string>
sudo ufw allow <string>
mkdir -vp <directory>
cd <string>
git add .
mv <string>
cd <string>
reset
then\
git commit -m <string>
git add .
cd ..
cd <string>
grep <string>
touch <string>
ls
sudo apt-get install -y <string>
vim <file>
cd <string>
git stash help
git status
vim <file>
ls
git add .
cd <string>
xargs -L1 <string>
cd <directory>
cd <string>
git add .
wc -l
grep -v <string>
cat <string>
rmdir <string>
exit <number>
more <file>
cd <string>
cd <string>
nano <file>
cd <string>
grep -rn <string>
ssh dirlic@10.18.0.39 -p <number>
git push --set-upstream <string> main
vi <file>
fg
ls
vi <file>
cd <string>
git add .
sudo yum install -y <string>
export <string>
uname -m
cd <string>
vim <file>
cd <directory>
ls
git status
git add .
exit <number>
git add .
read -sp <string>
git status
cd <directory>
vim <file>
chmod +x <string>
git status
read -e -p <string>
mkdir <string>
sleep <number>
sudo ln -s <directory>
sudo apt update
cat <string>
cat <string>
curl <string>
cd <directory>
vim <file>
cp <string>
ls
mv <string>
touch <string>
w
cd ..
ls
yarn add <string>
ls -a
cd <directory>
mkdir <string>
ps -auxwf
killall <string>
su
git remote add origin <URL>
ls
npm run dev
sudo pacman -S <string>
cd <directory>
git commit -m <string>
cd <string>
cd <string>
systemctl --user <string> <file>
sed -i <string>
git add <string>
git init
git config --global --list
sudo add-apt-repository <directory>
git help <string>
env
clear
sudo raspi-config
cd <string>
ls
sudo python <file>
ls
vim <file>
npm install <string>
sudo cp <file> <file>
python3 <file>
vim <file>
wget -P <directory>
ls
ls
wget -O <file>
ls
docker pull <string>
cd <directory>
ls
git init
rm -r <string>
mkdir <string>
docker-compose logs
git status
cp <string>
cd ..
read -rp <string> <string>
sort
ls
fg
local <string>
curl -u <string> -H <string> -X <string> <URL>
chmod +x <string>
ls
mv <string>
mkdir <string>
cd ..
grep --help
clear
git commit --no-edit
ls
git add .
grep <string>
ls
sudo tail -f <directory>
git status
sudo docker pull <string>
date <string>
cd <string>
clear
cd <string>
grep -i <string>
git commit -m <string>
cp -r <directory>
code .
git add -A
git checkout -q <string>
mv <string>
ls
ls
cd <string>
git commit -m <string>
cd <string>
git checkout master
ls -la <directory>
vim <file>
sudo ls -la <directory>
ls
sudo dpkg -i <file>
nc-docker --help
cd <directory>
ls
cd <directory>
cd ..
date
vim <file>
dpkg --get-selections
sudo <directory> restart
docker ps
grep -v <string>
cd <string>
bash
sudo apt-get update
sudo nvim <directory>
sudo sed -i <directory>
ls
cd <string>
ls
git status
git clone <URL>
sleep <string>
ls -l
cd ..
sudo systemctl start <string>
cd <string>
sudo apt install <string>
git add
which <string>
sudo su thin start -p <number>
mv <string>
exit
touch <file>
sort -k <number> -n
sleep <number>
sed -E -e <directory>
rm -f <string>
host <string>
sudo du -h --max-depth=<number>
ls
npm uninstall -g <string>
ls
docker exec -i -e <string>
scp <string>
git status
npm http <number> <URL>
ls
sudo nmcli con <string>
ls
pavucontrol
ls
cd <directory>
ls
vi <file>
clear
git add
ls
cd <string>
ls
sed -i <directory>
rm <string>
git commit -m <string>
cd <string>
cd ..
cd <directory>
git status
ssh-copy-id <string>
sudo su
git add .
pwd
cd <directory>
cd <string>
git add .
vi <file>
jq <string>
clear
mv <string>
sudo xbps-install -Su
pwd
npm install <string>
git push -u
ssh dirlic@10.18.0.39 -p <number>
find . -name <file>
sudo apt-cache policy <string>
ls
nc <number> <number>
pwd
grep <string>
cd
ls
kill -9 <number>
exit
cd <directory>
code <string>
sudo localectl set-x11-keymap <string>
read <string>
sudo apt-get remove <string>
vi <file>
docker-compose build teh-germinator
git commit -m <string>
sort
ls
git config --global <file>
mv <string>
vim <file>
vi <file>
touch <file>
mv <string>
cd <string>
exit <number>
cd ..
pwd
vim <file>
clear
sudo systemctl enable <string>
rm -fr <string>
perl -ne <string>
git status
sudo mount --bind <directory>
mv <string>
apt-get -f -y <string> <string>
bash
npm run test
cd <string>
sudo vi <directory>
ls
git checkout <string>
vim <file>
ssh
git status
ls
sudo sed -i <directory> <file>
mv <string>
git commit -n <string>
exit
cd <string>
sudo python3 <file>
ssh <string>
ls
cd..
bash
rm -rfv <string>
exit
git init
ls
git commit -m <string>
mkdir <string>
apt-get install <string>
ls -lh <string>
ls
cd ..
ls -la
vim -O <file>
git status
vim <file>
date
git info
export <string>
vi <file>
grep -i <string>
git commit --message <string>
clear
ls
cd <string>
ls
git reset <string>
rm -rf <string>
ls
ping <string>
journalctl -b -3 -e
sudo touch <file>
ls
vim <file>
npm i
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
git checkout <string>
sudo ifconfig en0 ether <string>
git init
sudo apt install xclip -y
git commit
cd <directory>
cd <directory>
git -push <string>
cd <string>
cd <string>
man <string>
rm <string>
pwd
clear
ls
cd ..
git status
ping
ls
sleep <number>
byobu-tmux
mv <string>
ls
cd <directory>
ls
ls
vim <file>
more <file>
npm uninstall react-native-action-sheet --force
cd ..
ls -la
git remote rm <string>
cd <string>
cd <string>
git pull
rm -r <string>
fg
ls -a
ls
apt-get install <string>
ls
vim <file>
cd <directory>
cd <string>
sudo chmod u+x <file>
ps -ef
cd ..
nano <file>
find pc_* -mtime <string> -exec <string> <string>
ln -s <string>
ls
sudo apt-key adv --keyserver <string> --recv <string>
apt-get install <string>
nc
git status
cd ..
curl <string>
ls
cd <string>
mkdir <string>
git push
cd <directory>
ls
git commit -m <string>
ls
npm run bench -- -c <file> -n <file>
tmux send-keys -t <string>
sudo rm -f <directory>
ls
pwd
sudo npm install -g <string>
xargs perl -pi -e <directory>
npm run start
git status
git push
cd <directory>
git rm <string>
rm -r <string>
ls
ls
rm <string>
ls
git pull
npm run test
cd <string>
cd ..
clear
cd <string>
cd <string>
cd <string>
cat <string>
sudo apt-get install <string>
source <file>
ls
sudo docker rm corrade
pwd
pwd
sudo apt-get install -y <string>
git checkout -b <string>
sed -e <directory> -e <directory>
exit <number>
tar -crzf <file>
rm <string>
ls
rm <string>
cd <string>
ls
ls
clear
ls
npm install
git init
pwd
wget <URL> -O <directory>
ls
sudo apt-get install <string>
git add .
cp -r <directory>
date
git checkout -b <string>
cd ..
git diff
git commit -m <string>
vi <file>
cd <directory>
wget <URL>
python3
rm -rf <string>
sudo apt-get install <string>
cd ..
vim <file>
byobu-tmux
sudo make install
git push origin master
bash
clear
vim <file>
ls
ls
cat <string>
mv <string>
sed <directory>
fg
cd ..
cp <string>
sudo su -
code <string>
mkdir <string>
git status
rm -rf <string>
cp <string>
df -h
find . -name <string> -type <string>
vim <file>
cd ..
rmdir <string>
vim
docker exec -it <string>
git add <string>
cd <directory>
cd <string>
clear
sed -i <string>
clear
sudo add-apt-repository <directory>
cd <directory>
ls
read <string>
cd <string>
npm run test
ls # lists your files in current directory, ls <dir> to print files in a specific directory
cd ..
sudo vim <directory>
git commit -m <string>
ls
docker pull <string>
git commit -m <string>
git push
git status
rm <string>
cd <string>
vi <file>
cat <string>
tar xzvf -
ls
exit
sudo apt update\
fg
sudo mv <string>
exit
cd ..
ls
file <string>
vim <file>
nl
grep <string>
clear
cd ..
sudo systemctl enable --now <string>
vim <file>
ls
rm -f <string>
ls
vi <file>
ls
vim <file>
git push -u <string> master
touch <file>
exit
sudo mkdir -p <directory>
docker run -v <directory> -v <file> -v <file> --user <string>
sudo apt install <string>
touch <string>
cd ..
cd <string>
exit
sudo usermod -aG <string> <string>
cp -v <string> <directory>
ps -u <string> # lists your processes
nc -l <number>
curl -LO <string>
source <directory>
cd <directory>
git push -u <string> master
rm <string>
git checkout <string>
git rebase <directory>
git checkout <string>
sudo apt-cache search <string>
ls -l
curl -sL <URL>
cd <directory>
cd ..
cd
ls
ls
git remote add origin <URL>
sed <directory>
vi <file>
sudo aptitude <string>
sed -i <string>
ls
python3 <file>
git commit -m <string>
ls
find . -name <file>
git init
chmod u+x <string>
find . -empty -type <string> -print -delete
mkdir
cp <string>
history
touch <file>
wc -l
ls -lh
cd <string>
ls -al
vim <file>
cp -R <string>
sudo apt-get update
ls
docker tag <string>
make clean
cd <string>
apt list --installed
ls
systemctl enable --now <string>
git init
sudo dnf remove <string>
ls
npm i -g <string>
sudo yum remove httpd -y
cd <directory>
ls
git status
ls
vi <file>
git stash pop
ls -a
git push origin master
ls
find . -name <file>
nano <file>
cd ..
cd - <string> <string>
ls
cat <string>
grep <string>
hexdump -c
sort -n
git add .
cd ..
git commit -am'm'
cd ..
sudo make test
git remote set-url <string>
sudo pacman -Rss <string>
clear
print <string>
git bisect good
yarn install
git pull
code .
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
git commit
git branch 2> <directory>
grep <string>
python3 <file>
clear
ls
fg
git pull origin main
clear
cd <string>
cd <directory>
vim <file>
cd <string>
git merge
date <string>
sudo apt-get update
reboot
cd ..
ls
git fetch upstream
ls
sudo apt-get upgrade -y
sudo service <string>
ls
mail -s <string>
vi <file>
vim <file>
mkdir <string>
vim
ls
ls
cd <string>
git add .
ls
git checkout
grep <string>
cd <directory>
clear
ls
clear
cd <directory>
read -rp <string> <string>
vim <file>
tar
vi <file>
rm <string>
exit
vi <file>
cd <string>
cd <string>
cd <directory>
git remote add origin <URL>
sudo apt-get install -y <string>
git commit -m <string>
vi <file>
cd ..
ps # prints a line of information about the current running login shell and any processes running under it
sudo apt-get update
rm -f <string>
vim <file>
chmod <number> <string>
git add .
clear
exit
chmod <number> <string>
git init
man <string>
vim <file>
xargs -r <string> rm
less <string>
git
ls -al
sudo umount <directory>
then\
git commit -m <string>
cd <string>
git commit -m <string>
ls
time <directory> -cpuprofile=<file>
docker exec -it <string>
rm -rf <string>
sudo update-alternatives --config <string>
grep -v <string>
cd <directory>
date
cd <directory>
reboot
cat <string>
git remote remove origin
ls
cd <string>
vim <file>
git reset --hard
sudo fdisk -l
mv <string>
cd ..
vi <file>
cd
ls -ls
php -v
sudo apt-get upgrade
ls
bash <file>
export <string>
ls
pwd
vim <file>
clear
cp <string>
find . -type <string> -exec <string> -i <directory>
git stage <string>
sudo apt-get install <string>
sudo ifconfig
ls
npm ERR! <string>
sudo apt-get install -y <string>
exit <number>
cd <string>
git status
ls
exit <number>
git commit -m <string>
ls
docker container ls --all
cat <string>
ls
npm --version
rm -rf <string>
sudo node <file>
read -p <string>
vim <file>
rm -rf <string>
sudo apt-get install <string>
read -r <string>
ls
git commit -m <string>
cd ..
sed -n <string>
exit
git reflog expire --all --expire=<string>
sed -nE <string>
ls
git status
cd <string>
ls
sudo npm install -g <string>
cd <string>
pwd
sudo apk add <string>
cd <directory>
cd <string>
cd <string>
sudo pacman -Sw <string>
git add --all
curl -o- <URL>
sudo <directory> <string>
git add --all
find . -empty -type <string> -print -delete
vim <file>
docker build --build-arg <string> --build-arg <string> -t <string>
ls
ls
fg
vi <file>
exit
fg
sudo dpkg -i <file>
ls
ls
cd <string>
nano <string>
git commit -m <string>
curl <string>
git remote -v
vi <file>
chmod +x <string>
git add <string>
ls
cd ..
sudo nala purge <string>
git push
cd ..
ls
docker-compose stop -d <string>
sudo apt purge <string>
git status
ls
git push
git add <string>
vim <file>
ls
sudo gem install <string>
npm run test
cd ..
mkdir <string>
ls
npm run coverage
cd ..
git remote add origin <URL>
cp <string>
cd ..
ls
vim <file>
tmux new
cd <directory>
git branch -M <string>
exit
ls
ls
git rebase -i <string>
docker image rm -f <string>
ls -l
git add <string>
vim <file>
git add <string>
cd <string>
rmdir <string>
grep -E <string>
ls
shutdown -h <string>
kill -9 <number>
cd <string>
touch <string>
exit
ls
git commit -m"update"
clear
exit
git clone <URL>
read <string>
cd <string>
cd ..
git push origin main
grep -E <string>
git push
ls
clear
sudo pacman -S <string>
grep <string>
grep -Ev <string>
mv
apt-get install <string>
reboot
dpkg -l
ps -f -p <string>
git add <string>
git status
git push origin
clear
grep -vw <string>
sudo <directory> <string>
sudo -s -u <string> -H
ssh -T <file>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
exit
ls -ltr
cd <directory>
awk <string>
chmod -v <string>
ls
git pull
cd ..
mkdir <string>
kill <number>
ls
du -sh <directory>
ls
rm -rf <string>
tmux source <file>
git log --graph --decorate --oneline
cd <string>
sudo apt-get install <string>
ls
git push
cd ..
npm init
ls
git commit -m <string>
npm run dev
cd <string>
code .
find . -maxdepth <number> -type <string> -exec <file>
ls
cd <directory>
ls
ls
cd <directory>
git status
rm -r <string>
vi <file>
cd <string>
ls
ls
ls
top
sudo useradd -d <directory>
ls
exit
ls -lA <directory>
cd <string>
man -k <string>
do\
git status
git branch
mkdir <string>
more <file>
ls
brew install <string>
npm run package
exit <number>
find . -name <file>
wget -q <URL> -O <file>
cd <directory>
nano <file>
mv <string>
cd <directory>
ls
curl -o <string>
sudo python <file>
cd <string>
sudo rpm --import <URL>
grep <string>
docker tag <string>
git remote add origin <URL>
cd <directory>
perl -e <string>
cat <string>
top
docker images
exit <number>
git add <string>
ls
sudo apt update
exit <number>
htop
vim <file>
ls
git push
git commit -m <string>
cd ..
mv <string>
mv <string>
mkdir <string>
git checkout <string>
mkdir -p <string>
cd <directory>
mkdir <string>
export <string>
ls
git init
cd <string>
source <file>
rmdir <string>
git push
exit
git add .
grep -n <string> <directory>
git add .
ls
vim <file>
locale-gen
cd <string>
ls
rm <string>
apt-get update
git push -u <string> master
sudo dpkg --configure -a
cd..
git pull
vi <file>
npm install <string>
ls
nano <file>
git commit -m <string>
ls
cd <string>
ls
git --version
ls
rm -r <string>
cd <string>
exit
vi <file>
cd <string>
sudo dnf config-manager --add-repo <URL>
dir
npm i <string>
ls
ls -a
cd ..
git push
sudo su -
clear
git log
ls
top
git push
git rm --cached -r <string>
npm run coverage
read
true
sudo cat <file>
rm <string>
exit
ls
ls
ls
sed -ri <string>
sudo apt-key add -
sudo ufw enable
ls
git checkout -b <string>
git push
python3 <file>
sudo sed -i <directory>
cd <string>
print <string>
apt-get update
yarn add -D <string>
cd <directory>
sudo pacman -Qo <string>
ls
mkdir -p <string>
sudo add-apt-repository <string> [arch=<string> <URL>
ls -lah
ls
wget <URL>
vi <file>
find . -type <string> -exec <string> -i <directory>
git status
sudo rm -rf <directory> <directory>
ls
ls
curl <URL> -u <string> -H <string> -G
nano <file>
npm install -f
git push
clear
source <string>
git add <string>
su
vi <file>
git config --global <file> <file>
cd <string>
git log
apt-get install -y <string>
ls
nano <file>
kill -9 <number>
git add .
git add .
cd <string>
kubectl apply --filename <file>
apt-key adv --keyserver <string> --recv <string>
apt-get install <string>
ls
git git commit -m <string>
rm <string>
sudo dnf update
less <string>
unzip <file>
ls
git add <string>
find . -empty -type <string> -print -delete
git stash
sudo apt-get autoclean
grep <string>
ls
docker-compose ps
cd <string>
wget <URL> -O <file>
vim <file>
npm update
cd <directory>
ls
exit
ls ..
ls
grep -rP <string>
tar -zxvf <file>
git commit -m <string>
cp <string>
cd <string>
sudo apt-get install <string>
sed -i <directory>
psql -U <string> -h <string> <string>
sh -c <string> -fLo <directory>
vi <file>
cd <string>
cd <string>
cp -r <directory>
clear
<file> program
sudo su -
sudo mount -t <string> -o <string>
ls
cd ..
ls
eval <string>
pico <file>
read -r <string>
ls
cd <directory>
sudo apt upgrade -y
ls
sed -E -e <directory>
cd <string>
grep <string>
ls
rm -r <string>
cd <string>
cp -r <directory>
vim <file>
npm start
cd ..
ls
git add <string>
apt list --upgradable
ls
ls
git status
npm install
git push -u <string> master
clear
head -n1\
du -xh
git status
git push -f <string> <string>
cat <string>
rm <string>
vim <file>
sudo zypper install <string>
exit
cd <string>
cd <directory>
sudo apt install <string>
ls
chmod <string>
git add .
cd <string>
docker-compose up
cd <string>
zcat <file>
ls
ls
cd <string>
git add <string>
git commit -m <string>
ls
git push
cd <string>
clear
sudo nano <directory>
vim <file>
sed -e <directory>
wget <URL> -O <directory>
more <file>
cat <string>
ls -ls
cd <directory>
clear
yay -Sy <string>
cd <string>
sh <file>
find -iname <string>
mv <string>
cd <string>
ls
vi <file>
clear
vi <file>
git reset --hard
vi <file>
vim <file>
sudo find $1 -name <string> -print
git push -u <string> main
npm i <string>
sudo <directory> -R <string>
git status
ls
cd <directory>
git status
vim <file>
git add .
cd ..
sudo tail -f <directory>
git pull
cd <string>
rm -r <string>
adduser padraig
cd <directory>
grep -vE <string>
unzip -o <string>
git push
git status
git status
exit <number>
ls
done
cd <string>
ls
chmod u+x <string>
reboot
cd <string>
python3 <file>
apt update
git init
sudo su
git commit -m <string>
sudo mv <string>
kill <number>
cd <string>
git config --global <file> <file>
ls
systemctl --user <string> <file>
python3 <file>
mv <string>
sudo sed -i <directory> <file>
sudo add-apt-repository <string>
cd <string>
ps --ppid <string>
cd <string>
cp <string>
ssh
rm <string>
<directory> -m <file>
ls
ls
git clone <URL>
sudo apt-get -y <string> <string>
ls
exit
sudo apt-get dist-upgrade -y
ls
git fetch origin <string>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
clear
top
git ls
cd
sudo stop uwsgi
ls
git commit -m <string>
cd <string>
git init
ls
ls
ls
cd <directory>
mv <string>
cd <directory>
cd ..
git fetch
rm <string>
exit
mkdir <string>
cd ..
vim
rm -rf <string>
ls
ls
npm run bench -- -c <file> -n <file>
gunzip <file>
date
vim <file>
chmod u+x <string>
grep -v -e <directory> -e <string> -e <directory>
ls
exit
which --help
exit
git fetch origin\
xargs -0 <string> -l <string>
git add <string>
ls
npm run build
git status
git branch -M <string>
more
sudo python <file> --cascade=<file> <number>
git clone <URL>
npx <string>
sudo pacman -S <string>
git status
source <directory>
ls
rm <string>
ls
cd ..
ls
reset
ps -ef
ls
ps ax
git add <string>
grep -Fvx -f <string>
exit <number>
git commit -m <string>
sudo apt-get install <string>
cd <string>
git branch
npm run start
git pull -f
vim <file>
ls
ls
perl <file>
cd <string>
cd <directory>
grep <string>
exit
pwd
cd
cd ..
cd <directory>
vi
mkdir -p <string>
docker build -t <string>
cd <directory>
git clone <URL>
cd <string>
read -r <string>
ls
ls -a
ls
vi <file>
git commit -m <string>
ls -la <directory>
cat <string>
cat <string>
ls
sudo service nginx reload
cat <string>
sudo ufw allow <string>
sed -ri <string>
rm -rf <string>
cd
cd <string>
docker image ls
sudo stop uwsgi
git checkout master
cd <string>
ls
mkdir <string>
sudo tail -F <directory>
cd <string>
read -s -n <number>
screen -r <string>
apt install <string>
cd <string>
vim <file>
exit <number>
nano <file>
git add .
git commit -m <string>
source <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string>
ls -la
vi <file>
vi <file>
clear
clear
<file> program
cd ..
cp <string>
exit
<directory> <directory>
clear
cd <directory>
vim <file>
touch <string>
ls
vi <file>
<file> <file>
ls
git status
ls
git commit -m <string>
sudo sed -i <directory> <file>
sudo -s -u <string> -H
ls -l
cd <string>
vim <file>
apt-cache search <string>
cd <string>
vi <file>
vi <file>
sudo rfkill --help
more
chmod <number> <string>
read <string>
clear
ls
cd <string>
git commit
ls
mkdir <string>
clear
sudo apt update
ls
find . -empty -type <string> -print -delete
ls
git commit -m <string>
cd <string>
cd <string>
vi <file>
cut -c <string>
exit
find . -name <file> -type <string> -print -delete
clear
exit
rm <string>
cp <string>
touch <string>
cd <directory>
exit
journalctl
sudo apt-get install -y <string>
cd <directory>
cd <string>
ls
cd <directory>
grep -win -C <number>
cd <string>
ls
clear
cd ..
less <string>
git commit -m <string>
sudo ifconfig en0 ether <string>
git -c <string>
history # shows command line history
git commit -m <string>
docker-compose logs
ls
git push --set-upstream <string> master
cat <string>
apt install <string>
ls
git checkout <string>
sort
npm i
cd <string>
rm <string>
apt-get install -y --no-install-recommends <string>
vi <file>
more <file>
man <string>
git pull --rebase
cat <string>
git add .
cat <string>
cd <string>
git config --global <file> <string>
dpkg -L <string>
tmux a
cd ..
sudo python <file>
git push origin --delete <string>
cd <string>
clear
fg
sudo setxkbmap -layout <string> -variant <string> -option <string>
sed -i <directory>
psql -U <string> -h <string> nzdpu_wis
find <directory> -type <string> -size <string> -exec <string> -lh <string>
vim <file>
curl -fLo <file> --create-dirs <string>
clear
shutdown -h <string>
grep <string>
sudo cp <string>
git fetch origin\
git remote add origin <URL>
wc -l
ls
cd <string>
cd ..
sudo apt-get install -y <string>
ls
cd ..
docker tag <string>
which <string>
kill -9 <number>
git pull
git pull
docker push <directory>
unset <string>
vim
sudo python <file>
clear
rm -rf <string>
ssh-add -l
ls
docker-machine create -d <string>
ls
cd <string>
git status
rm <string>
pwd
clear
rm -f <string>
kubectl --namespace <string>
sudo apt install <string>
cd <string>
grep <string>
vim <file>
mkdir <string>
cd
cd
sed -i <string>
git commit -m <string>
sudo timedatectl set-timezone sudo timedatectl <directory>
exit
docker-compose
clear
cd
sudo prime-select <string>
code .
git checkout -
cd <directory>
ls
ls
cat <string>
read <string>
git push
sudo apt update
cat <string>
clear
git add <string>
<file> - <number>
cd ..
curl <string>
git config --replace-all <file>
git branch -M <string>
rm -rf <string>
git init
fg
git commit -m <string>
cd <string>
rm -ir <string>
mkdir -p <string>
cat <string>
cd
find . -empty -type <string> -print -delete
git pull
ls
cd ..
wget <URL>
du -a <string>
git commit -m <string>
tmux send-keys -X <string>
who <string>
exit <number>
cd <string>
more <file>
scp <string>
git remote add origin <URL>
sudo ldconfig
cat <string>
sudo apt install <string>
pulseaudio --start
curl <string>
clear
git init
setg RHOSTS <file>
sudo usermod -a -G <string>
vim <file>
cd <directory>
ls
export <string>
yarn
ls
history -a
exit
ls
grep -r <string>
vim <file>
ls
git add .
vim
sudo reboot now
sudo <directory> restart
ps aux
ls
ls
mv <string>
cd <string>
vi <file>
sudo nano <string>
git init
dir <string>
find <directory> -type <string> -name <string> -prune
diff <file> <file>
cd <string>
htop
vim <file>
mv <string>
ls
ls
ls
cat <string>
git branch 2> <directory>
awk --help
git pull
ls
git pull
clear
grep -v <string>
cd <string>
sudo yum install <string>
ls -lh <string>
ls
wget -O <file>
vi <file>
git status
read -r <string>
clear
ls
cd ..
cat <string>
git log
grep <string>
chmod u+x <string>
ls
command <string>
ls
cd <directory>
cd <string>
rm -rf <string>
cd <string>
ls -ltr
vi <file>
cd <string>
cd ..
curl -F <string>
ls
git push -u <string> main
vim <file>
git add .
mkdir <string>
cp <string>
ls
sudo rm -rf <string>
git push -u <string> master
ls -a
git commit -m <string>
ls
ls
fg
git push
vi <file>
git status
cd <directory>
cd
su - <string>
screen
sudo mv <string>
tar -cvf <string>
chmod <number> <string>
git remote add origin <URL>
ssh -tt -L <string>
man <string>
ls
docker-compose up -d --build
clear
git log
wget <URL>
cd <string>
git commit -m <string>
ls
vim <file>
cd <string>
clear
git add .
mv <string>
vi <file>
git pull
git commit -m <string>
screen -r <string>
git add <string>
exit
cd ..
cd <string>
sudo -E <string> -
ls
git gc --prune=<string>
ls
vim <file>
fg
fg
python <file> runserver 0.0.0.0:2016
cd <string>
git config --global <file> <string>
sudo vi <directory>
sudo yum install <string>
chmod <string>
find . -size <string> -a -print -a -exec <string> -f <string> \
source <string>
python -c <string>
ls
ls -la
sed -n <string>
ls
python3 <file>
ls
dotnet publish --output <directory> --runtime <string> --configuration <string> -p:PublishSingleFile=<string> -p:PublishTrimmed=<string> --self-contained <string>
git submodule
git commit -m <string>
ls
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
vim <file>
ls
mkdir <string>
sh <file>
vi <file>
npm install --save <string>
bash
vim <file>
ls
cd <directory>
git gc
exit <number>
ls
git commit -am <string>
ssh <string>
rm <string>
touch <string>
vi <file>
cd ..
git push origin <string>
cd <directory>
ls
python3 <file>
cd <string>
sudo apt-get clean
cd <string>
cd <string>
sudo apt-get install <string>
sudo docker ps -a
rm -rf <string>
sed -e <directory>
man <string>
find . -name <file>
git commit -m <string>
git clone <URL>
chsh -s <string>
ls
ls
docker-compose up -d --build
ls
ps -ef
sudo start uwsgi
ls
sudo poweroff
mkdir -p <string>
git push origin master
ls
mkdir -p <string>
ls
df -m <string>
git commit -m <string>
ls -l
cd ..
ls
ls
cd <string>
ls
git remote add origin <URL>
su
sudo apt-get -y <string>
git clone <URL>
cd ..
sudo nano <string>
mv <string>
npm audit fix -f
ls -ltra
sudo apt-get update
git init
git init
clear
touch <string>
sudo apt upgrade -a
curl -v --data <string>
curl -so- <URL>
sh
cd <string>
mv <string>
cd ..
exit
ls
exec <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
chmod <number> <string>
pwd
cd <directory>
git status
vi <file>
cd <string>
git add .
git add <string>
git status
docker-compose -f <string>
mv <string>
vi <file>
ssh dirlic@10.18.0.39 -p <number>
ssh <string>
cd <string>
git init
cat <string>
exit
ls
cd <string>
rm -r <string>
sudo apt remove <string>
vim <file>
ls
git remote add origin <URL>
mkdir <string>
git status
cat <string>
cd <string>
git remote add origin <URL>
npm i <directory> -f
cd <directory>
sudo pacman -Syu --noconfirm
git branch -M <string>
ls -l
sudo usermod -a -G <string>
cat <string>
then
cd
ls
rm -r
sudo apt-get update
git status
cd <string>
ls
ls
cd ..
mv <string>
git bisect bad
cd <string>
curl
ls
cd ..
python3 <file>
touch <file>
git push origin main
cp <string>
git filter-branch --index-filter <string>
clear
then\
ls
sed <directory>
git push origin master
clear
exit
python3 <file>
sleep <number>
git pull --all
ls
sudo prime-select nvidia
setg RHOSTS.*
ssh-keygen -t <string> -b <number> -C <file>
fg
code .
git add .
rm <string>
rm -rf <string>
pwd
ls
sort -u
sudo cat <directory>
cd <string>
cd <string>
ps -ax
clear
docker stop <string>
git branch -M <string>
cd
chmod <number> <string>
pwd
done
ls
bash
curl -L <URL> -o <file>
git push origin master
git push -u <string> master
cd ..
ls
lsblk
ls
sudo make
vim <file>
sudo systemctl restart <file>
ls
ls
ls
cat <string>
cd <string>
git push
ls
git add <string>
exit
history -a
ls
ls
ls
vim
git bisect bad
make clean
ls -l
cd <string>
then\
clear
npm install <string>
true
tmux a
ls
cd <string>
ls
ls -lAF
rm -r <string>
date
npm start
cd <string>
fg
ls
aptitude install <string>
clear
cd ..
git log
ls
python3 <file>
rm <string>
fg
cd <string>
cd <string>
git status
ls
rm -rf <string>
docker-compose up -d --build
source <string>
git pull origin master
npm i gulp -D
sort
tail -f <string>
fg
cd ..
git status
cat <string>
ls
cat -n
sudo apt-get install -y <string>
vim <file>
ls
useradd bob
history -r
git clone <URL>
exit
git tag
sudo ln -s <directory>
ls
mkdir <string>
ls
ls -al
vi <file>
head -1 <file>
cat <string>
cd <string>
git add <string>
ssh-keygen -t <string> -a <number>
read <string>
git push -u <string> master
vim <file>
cd <string>
git remote add origin <URL>
sudo apt purge kde* -y
cd ..
git status
ls
ls
git checkout master
cd <string>
chmod <number> <string>
cd <string>
git push
ls
ls -a
sudo firewall-cmd --zone=<string> --add-port=<directory> --permanent
ls
git pull
curl <directory> -qO- <URL>
cd <string>
cd ..
sudo nmcli con mod <string> <string>
ls
ls
vim <file>
cd <string>
cd <string>
git add .
curl -s <string>
pwd
tmux
less <string>
git push
find . -type <string> -exec <string> <directory> {} +
tail -n1
vi <file>
ls
exit
git add <string>
gpg --verify <file>
cd
cut -f -16 <string>
ls
git add <string>
mkdir -p <string>
vim <file>
cd..
cd <string>
time <directory> -cpuprofile=<file>
ls
sudo apk add <string>
let <string>
ls
exit
python3 <file>
git grep -I --color=<string> <string>
ln -s <string>
ls
cd <string>
wget <URL>
lsblk
cp -a <string>
git add .
bash <file>
cd -
clear
ssh <string>
git commit -m <string>
rm -rf <string>
fg
python3 <file>
git remote add origin <URL>
rm -rf <string>
ssh <string>
exit
git log
vi <file>
wget -r <URL>
sudo docker rm corrade
ping <file>
wget -q -O - <URL>
git add .
python3 <file>
sudo supervisorctl <string>
bash --version
done\
vi <file>
ls
ls
cd <directory>
cd <string>
cd <string>
ls
less <string>
ls
sudo apt install <string>
vi <file>
exit
vi <file>
export <string>
touch <string>
cd <string>
npm config <string>
ls
ls -l
git remote add origin <URL>
ls
gpg --dearmor <string>
cd <string>
git add <string>
useradd bob
cut -c <string>
ls -al
cd <directory>
exit
exit
tail -n <string>
cd <string>
vi <file>
git push origin master
sudo npm install -g <string>
ls
read -s -n <number>
docker run -v <directory> -v <directory> --rm -it <string>
ls
vi <file>
which <string>
vi <file>
ls
cd <directory>
colrm <number>
cd ..
mkdir <string>
curl <URL> -u <string>
fg
sudo apt --fix-broken <string>
cd
npm install -D <string> postcss autoprefixer
cd ..
git clone <URL>
ls -l
clear
ls
ls
ls
ls
cd <string>
git status
git push -u <string> main
sudo cmake .. -DPYTHON_MAJOR_VERSION=<number> -DPYTHON_MINOR_VERSION=<number> -DPIP_PLATFORM=<string> -DDS_PATH=<directory>
apt-get install
rm -rf <string>
pwd
python3 <file>
ls
ls
cd <directory>
git commit -m <string>
ssh <string>
ls
git pull
cp <string>
kill -s <number> <number>
mv <string>
cd ..
ls
rm path -rf
clear
git add -A
git remote add origin <URL>
read <string>
cd <directory>
git commit -m <string>
clear
curl <URL> -k
vi <file>
exit
ls
sudo swapon <directory>
ls
true
git commit -m <string>
cd <string>
sed -i <string>
cd ..
shutdown -h <string>
sudo poweroff
clear
ls
git push
bash
git pull
sudo git config <file>
git reset --hard
nano <string>
ls
tmux a -t'attributes'
clear
fg
ssh <string>
vim <file>
ls
ls
ls
cd ..
history
man <string>
xargs -i <string> <string>
git pull
git add .squeue --start
ls
vi <file>
exit
cat <string>
sudo python <file>
rm <string>
ls
cd ..
ls
then\
ls
alias <string>
git commit -m <string>
exit <number>
fg
ls
apt-add-repository
mv <string>
cd <string>
cd <string>
cp <string>
ls
vim
ps ax
sudo gem install <string>
cat <string>
mv <string>
grep -v <string>
fg
wget <URL>
cd ..
sudo mysql -u <string> -p --socket=<directory> <string>
python3 <file>
cat <string>
ls -lah <string>
ls
unzip <file>
clear
ls
sudo ufw <string>
vim <file>
git push -u <string> master
git clone <URL>
cd ..
rm <string>
touch <file>
egrep <string>
ls
git grep <string>
git log
exit
npm run test
ls
chmod +x <string>
vi <file>
cd
git push -u <string> master
exit
ls -al
ls
cd
git clone <URL>
cd <directory>
wc
ls
sudo make
python3 <file>
cat <string>
nginx -s <string>
cd <directory>
vi <file>
ls -la
git clone <URL>
sed <directory>
ls
git branch
git config --global <file> <string>
sleep <number>
git init
netcat
vim <file>
npm install --save-dev <string>
ls
systemctl status <string>
cd
ls
git commit -m <string>
docker push <directory>
ls
test
cd <directory>
git commit -m <string>
sudo tee <directory>
cd <string>
screen
make
cd <string>
ls
sudo add-apt-repository <directory>
touch <string>
cd <string>
ls
sudo apt-key adv --keyserver <file> --recv-keys <string>
fg
ls
cd <directory>
less <string>
cd <directory>
cd <directory>
cd ..
git log
ls -la
set -o <string>
ls
unzip -o -d <string>
git remote add origin <URL>
sudo rename -n <directory>
vim <file>
git checkout <string>
sudo pacman -S <string>
ssh -i <string>
git push origin master
chmod <string>
npm update
docker run -d <string>
systemctl status <string>
mv <string>
ls
git commit -m <string>
set -e
sudo reboot
ls++ -a
ls -lh
rm -rf <string>
curl -fsSL <URL>
rm -r <string>
sudo apt install <string>
docker-compose up
cd <string>
ls
clear
clear
ssh <string>
find . -empty -type <string> -print -delete
file <string>
awk -F <string>
cd <string>
vim <file>
sudo sed -i <directory> <file>
npm install <string>
clear
ls
zeus.polsl.gliwice.pl - <number>
clear
nano <string>
mkdir <string>
find . -type <string> -print0
npx tailwindcss init -p
sudo tune2fs -c <number>
vi <file>
exit <number>
bash <file>
exit <number>
exit
ls
rm -rf <string>
git add <string>
sed <directory>
docker build -t <string>
docker inspect --format <string>
sudo userdel bob
ls
grep -oP <string>
cd <string>
git push
sudo apt install <string>
ssh -i <string> remote_user@remote_host
git commit -m <string>
curl -sS <string>
cat -v
git add .
docker run -e <string> -v <directory>
export <string>
sudo docker run ubuntu -it
su - <string>
ls
mv <string>
top
ps -ef
fg
sudo apt-get update
cd ..
cd <string>
git pull origin master
sudo vim <directory>
cd ..
ln -s <string>
git add .
git remote add origin <URL>
sudo python3 <file> install
vi <file>
ls
ls
cd <string>
vim <file>
ls
git status
exit <number>
cd <directory>
nano <file>
docker rm -f -- <string>
vim <file>
sudo sed -i <directory> <file>
npm http GET <URL>
git fetch
vi <file>
cd <string>
ls
cd ..
cd <directory>
npm install -g <string>
git clone <URL> -b <directory>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git add <string>
git push -f
vim <file>
cd <string>
cd <string>
sudo bash -c <string>
git status
cd <string>
mount
node <file>
npm -v
ls
exit
mkdir <string>
cd <directory>
vim <file>
ls
cd <string>
sudo apt update
sudo lvcreate -L <string> -s -n <string>
cd <directory>
git diff <string>
cd <string>
ls
git commit -m <string>
vim <file>
gpg --verify <file> <string>
docker-compose -p <string> -f <string>
ls
ls
grep -E <string>
rm -r <string>
chmod <number> <string>
ls
ps -aux
sed -i'' -e <directory>
ls
npm start
git add .
read -r -p <string>
sudo lvcreate -L <string> -s -n <string>
git commit
vi <file>
clear
vi <file>
vi <file>
ls -ltr
git add .
ls
ls
git push -u <string> main
cd ..
cd <string>
docker images
ls -la
systemctl stop <string>
git clone <URL>
git add .
ls
systemctl restart <file>
rm <string>
exit
find . -size <string> -a -print -a -exec <string> -f <string> \
sudo chown <string>
uname -a
vim <file>
apt-get purge <string>
ls -a
sudo reboot
vim <file>
cd <string>
git status
python3 <file>
wget -qO - <URL>
ps
cd ..
ls
ls
grep -i <string> >files
ls
cd ..
exit
git clone <URL>
bash
git branch -a
cd <string>
git add .
ls -al
ls
git clone <URL>
cd
fg
ls
git push
ls
ls
cd
git clone <URL>
ls
exit
git rm --cached <directory> -f
sudo ufw allow <string>
ls
cd <string>
sudo sed -i <directory> <file>
git switch main
nano <string>
git commit -m <string>
sudo pacman -S <string>
cp <string>
code
grep -x <string>
git
python3 <file>
git status
vi <file>
sudo su
sudo apt update
sudo add-apt-repository <directory>
ls
exit
ls
git commit
vi <file>
npm run bench -- -c <file> -n <file>
ls
git commit -a -m <string>
sed -E -e <directory>
clear
git --version
sudo sed -i <directory> <file>
tail <file> -n <number>
sed -e <directory> -e <directory>
sudo nmcli con mod <string> <string>
code <string>
git clone <URL>
date
sh <file>
ls
code -r <string>
systemctl status <string>
ls
cat <string>
cd <directory>
ls
cd
cat <string>
docker rm <string>
head <filename> # outputs the first lines of file (default: <number> lines)
git reset
clear
sudo add-apt-repository -y <directory>
git push
git add <string>
wget -O <file>
sudo apt update
cd
exit
cat <string>
ls
cd -
curl <string>
ls
sudo python <file>
exit
ls
sudo sed -i <directory> <file>
mkdir <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
curl -sSLO <file>
ls
ls
ls
git commit
sudo apt-get remove <string>
cd ..
setg RHOSTS <file>
date
cd ..
vim <file>
cd <string>
apt install <string>
wget <URL>
ls -la
cd
cd <string>
ls
git add <string>
ls
python3 <file>
cd <string>
find . -name <file>
cd <string>
sudo xbps-install <string>
cd <string>
cd <string>
cd <string>
true
vi <file>
git push -u <string> master
vim <file>
cd <directory>
cd
vi <file>
less <string>
cd rm -r <string>
sudo vim <directory>
pkill
git branch
git commit -m <string>
unzip <file>
git commit -m <string>
vim
rm -f <string>
git commit -m <string>
git push origin main
cd <string>
ls
ls
rm -r <string>
git push -u <string> master
install -Dm644 <file>
mkdir <string>
ls
exit
git status
git init
find . -size <string> -a -print -a -exec <string> -f <string> \
sudo apt-get update
ls
cd <directory>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
wget -O - <URL>
git commit -am <string>
clear
clear
cat <string>
cd <directory>
sudo python3 <file>
fg
sudo reboot
ls
bash <file>
cd <string>
df -h <string>
yarn install
vi <file>
read -s -n <number>
cd
mkdir -p <string>
sudo start uwsgi
git pull
ls
ls
fg
ls
vim <file>
ls
git commit -am <string>
git checkout <directory> -f
cd <string>
npm i -g <string>
sudo apt-get install <string>
install -Dm644 <file>
sed -i <string>
git commit -am <string>
sed -E -e <directory>
cd <directory>
git commit -m <string>
ls
cd <directory>
cd ..
ls
git co master
ls -l
clear
fg
git pull
curl <string>
git init
uniq
vim <file>
curl -sL <URL>
rm <string>
git clone <URL>
set <string>
wc -l
git branch
cd <directory>
ls
egrep -ri <string>
code <string>
sudo restart <string>
ls
cd <string>
sudo apt-get autoremove
fg
g++ -std=<string> <file> -o <string>
ls
sudo start uwsgi
chmod +x <string>
killall <processname> # kill all processes with the name
clear
vi <file>
then\
vim
sudo gem install <string>
ls
ls
done
clear
tar -xf <string>
chmod +x <string>
cd ..
git push --force --tags <string>
less
ls
git commit -m <string>
sudo systemctl start <string>
git commit -m <string>
ls
kubectl --namespace <string>
sudo su
vim <file>
cd <string>
grep -E <string>
sudo poweroff
git diff <string>
cut -d <string> -f <number>
cd ..
cd <string>
find . -name <string> -exec <string> -c <string>
then\
which <string>
mkdir <string>
rm <string>
sudo dd <string>
ls
cd <string>
ss
fg
npm run test
git add .
systemctl status <string>
uniq -c
sudo apt-get install <string>
ls
git commit -m <string>
ls
nano <file>
find . -iname <file>
git commit -m <string>
git commit -am <string>
vim <file>
cd <directory>
ls
cd <string>
sudo apt-get install -y <string>
sed -i <directory>
mv <string>
cd ..
which <string>
mv <string>
git status
git clone <URL>
clear
cd <directory>
ls
vim <file>
cd <directory>
git checkout <string>
git branch -M <string>
ls
vim <file>
sudo apt-get autoremove
clear
git status
sudo systemctl start <string>
xargs -0 <string> <string>
chmod -v <string>
man <string>
capsctrl <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
fg
git push -u <string> master -f
cd <string>
git checkout <string>
git push
git remote add origin <URL>
ls -la
systemctl start <string>
cd <string>
ls
cd
git rm <string>
rm -r <string>
rm -rf <string>
clear
cd ..
git clone <URL>
cd <string>
cd ..
cd <string>
cd ..
cd <string>
wget -q -O <file>
git commit -m <string>
df
ls
ls
clear
cd <string>
bash <file>
cd <string>
jq -r <string>
nano <file>
ls
tcpdump -i <string> -v <string>
wc -l
cd <string>
fg
ls
git add -A
ls
ls
cd <string>
awk <string>
clear
ls -c
clear
cd <directory>
vi <file>
fg
ln -s <string>
sudo apt-get update
ls
exit <number>
sort -rn
vi <file>
wc
git add -f <string>
cd
cd <directory>
done
git log
xrandr
sudo sed -i <directory> <file>
nano <file>
git commit -m"update"
sleep <number>
find -name <string>
cd <directory>
git add <string>
ls
ls
docker top <string>
vim <file>
ls
clear
vim <file>
sudo apt-get install libkrb53 --reinstall
git add -u
git checkout main --force
tar -xvf <file>
git add <string>
git add <string>
vim
rm <string>
clear
git commit -m <string>
cat <string>
ls
sudo nano <directory>
git remote add origin <URL>
cat <string>
cd <string>
git clone <URL>
mkdir -p <string>
git config --global <file> <file>
rm -rf <string>
git status
vi <file>
rm <string>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
diff <file>
exit <number>
git pull --all
docker exec -it <string>
git add .
clear
sleep <number>
npm run start
find . -size <string> -a -print -a -exec <string> -f <string> \
git pull
vi <file>
cat <string>
cat <string>
git init
clear
ls
git commit -m <string>
touch <string>
ls
vi <file>
cd <string>
zgrep -i -E -o --no-filename <string>
git please
cd ..
python3 --version
apt-get install <string>
exit
ls
git commit -m <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> --wrap=<string> --from <string> --to <string> <string> -o <file> <string> {} \
vim <file>
ls
cp <string>
sudo localectl set-x11-keymap <string>
cd ..
ls
then
mv <string>
vi <file>
more <file>
git commit -m <string>
clear
git --version
git commit
source <directory>
cd <string>
docker ps -a
cd <string>
cp <string>
cat <string>
find <directory> -type <string> -exec <string> <number> <string>
ls
rm -rf <string>
xargs -I{} <string> -c <string> -t <number>
more <file>
ls
sed -i <directory>
cd <directory>
ls
code .
git status
rm <string>
git checkout <string>
sudo curl -0 <URL>
clear
cd <string>
git commit -m <string>
git status
ls
sudo apt update
git pull
cd <string>
sed -i <directory>
git gc --prune=<string>
usermod
cd <string>
code .
npm install <string>
git add -a
ls
head <filename> # outputs the first lines of file (default: <number> lines)
wget -O <file>
ls -la
wget <URL>
npm config set prefix <string>
mkdir <string>
cd <string>
sudo apt-get -y <string> <string>
ls
read -s -n <number>
lsblk -h
git checkout <string>
git commit -m <string>
cd <directory>
exit <number>
vi <file>
cd <string>
cd
code .
cd <string>
git commit -m <string>
sudo pacman -Syyu
grep <string>
git status
rm -r <string>
sudo sed -i <directory> <file>
cat
ls=<string> --pretty=<string> <string>
git push origin <string>
ls
source <file>
rm <string>
cd <string>
open <string>
mv <string>
cat <string>
python3 <file>
history
ls
cd <string>
sudo apt install <string>
sudo apt-get -f <string>
ls
sleep <string>
exit <number>
dotnet <string>
exit
ls
vi <file>
<file> - <number>
git commit -m <string>
fg
clear
rm <string>
vim <file>
bash <file>
cd <string>
git push
vi <file>
git init
ls
cd <string>
sudo mkswap <directory>
ls
ls
cd <directory>
cd <directory>
grep -i <string> >files
cd <directory>
git commit -m <string>
sleep <number>
sudo <directory> restart
git --no-pager <string>
rm <string>
mv <string>
curl -O <URL>
date
cp -r <directory>
git add --all
exit
rm -r <string>
vim <file>
cd <string>
ls
ls -ltr
ls
cd <directory>
helm init --tiller-namespace <string>
npm
ls
let <string>
clear
python3 <file>
ssh isl-env <string> -p <file>
grep <string>
touch <file>
cd <string>
cd <string>
cd ..
exit <number>
cd <string>
sudo start uwsgi
ls
sed -E -e <directory>
cd <string>
open <string>
vi <file>
git commit -m <string>
more <file>
git pull origin development
git add .
git remote add origin <URL>
sudo locale-gen <string>
cd <string>
ls
find . -name <string> -type <string>
sudo sed -i <directory> <file>
sed -r <directory>
exit <number>
sudo sed -i <directory> <file>
git push
exit
cd <string>
mv <string>
ls
sudo sshfs --help
wget <URL>
git commit -m <string>
top
exit <number>
npm run test
do\
git checkout <string>
shutdown now
ls -la
cd ..
ls
vim <file>
wget -cO <string>
git remote set-url origin <string>
cd <string>
ls
rm <string>
ping <file>
pwd
exit
sudo pacman -S <string>
cd <directory>
tail -n <string>
ls -lah
sudo apt-get remove --purge <string>
ls
git push --set-upstream <string> <string>
ls
exit
ls
git init
rake <string>
git pull origin development
mv <string>
python3 <file>
vim <file>
ls
exit
ls
brew update
grep <string>
code .
pwd
tmux --version
cd ..
cd ..
vim
exit <number>
clear
clear
cd ..
tail -f <directory>
mv <string>
sudo -u <string> psql
git push
ls
git add .
ls
npm install
ls
cd <string>
git commit -m <string>
sudo apt install <string>
mkdir <string>
git pull origin master
ls -al
sudo zypper se <string>
find <string> -name <file>
sudo apt update
ls -l
cd <directory>
ls
cd
info <string>
ls
git add <string>
du -all --block-size=<string> <string> --max-depth=<number>
exit
cd <string>
git count-objects -vH
git add .
vi <file>
grep -e <string> -e <string>
ls
grep <string>
pwd
git commit -m <string>
git checkout -b <string>
lsof
sudo update-alternatives --config <string>
exit
ls
exit <number>
which <string>
apt-get update
cd <string>
cd <directory>
mkdir <string>
git add -A
clear
cat <string>
ls
nano <file>
sort -n
vim <file>
sleep <number>
ls
git add .
git commit -m <string>
python3 <file>
cd <string>
ls
cd <directory>
ls
ls -G
rm <string>
vim <file>
sudo ln -s <directory>
ls
fg
ls -lart
cd
cd ..
sleep <number>
ls
rm -rf <string>
grep <string>
unset <string>
docker-compose logs --follow <string>
mkdir <string>
sudo apt purge <string>
ls
git remote set-url origin <string>
sudo rm -r <string>
git commit -m"Abc <string>
which <string>
<directory> <string>
ls
ls
cd
vim <file>
clear
vim <file>
git gc
ls
ls
cd <string>
sudo journalctl -u <file>
vi <file>
stat <file>
exit
sudo apt install <string>
fg
git remote add origin <URL>
git remote -v
mv <string>
cd <string>
git status
clear
cd <directory>
vim <file>
ls
cd ..
ls
cd ..
clear
ls -la
sudo apt install <string>
tail -f <string>
ls
else\
curl --request --help
cd <string>
clear
ls
eval `ssh-agent -s`
git push --set-upstream <string>
less
sudo -i
git status
git init .
git push heroku main
cp -r <directory>
sudo chmod a+rwx <directory>
su
passwd
openssl rand -hex <number>
yarn <string>
code
rm -f <string>
kill -9 <number>
mkdir <string>
export <string>
git stash pop
vi <file>
ls
sudo pip install --upgrade <string>
ls
ls
sed -e <directory>
ls
sudo add-apt-repository <string> [arch=<string> <URL>
git pull
cd ..
ls++ -a
sudo apt upgrade
touch <file>
cd <string>
nano <file>
ls -la
chmod <string>
ls
fg
vim <file>
kubectl <string>
ls
cd <string>
rm <string>
ls
cd <string>
python3 <file>
ps aux
find . -empty -type <string> -print -delete
cd ..
top
git
git status
read -p <string>
exit
ls -la
ls -all
npm run prod
chmod <number> <string>
ls
git commit -m <string>
git remote remove origin
curl -v -X <string> <directory> -H <directory> -H <string> -H <string> -H <string> -H <string> -H <string> -H <string> -H <string>
sudo apt install <string>
git pull --ff-only
cat <string>
rm <string>
grep -vE <string>
nano <file>
cp <string>
vim <file>
exit
git commit -m <string>
grep -i <string> >files
sudo <directory> restart
rm <string>
vim <file>
apt-get update
cd <string>
sudo pacman -S <string>
sed -i <directory>
sudo apt-get update
sudo apt install <string>
ls
sudo add-apt-repository <directory>
ls
jq <string>
clear
more <file>
npm run prod
reset
ls
git add .
git init
ls
cd <directory>
cd <directory>
ls
cat <string>
vim <file>
vi <file>
cd <string>
ls
sudo shutdown now
git clone <URL>
fg
open <string>
read -p <string>
ls -a
ls -al
sudo poweroff
ls
psql -U <string> -h <string> <string>
sudo apache2 --version
vim <file>
pushd <directory>
git commit -m <string>
ls
git pull
ls
python3 <file>
tmux kill-server
rm <string>
ls
docker-compose up -d --build
ls
sudo restart --help
vi <file>
sudo apt update
git init
vim <file>
git push -u <string> main
cd <string>
sudo nano <directory>
apt-cache search <string>
cat <string>
vim
ls
git add -A
journalctl -u <string> --all
chmod <number> <string>
ls
git pull
grep -A <number> -i <string>
ls
sudo sgdisk -d <number>
find <directory> -type <string> -print0
wget <URL>
read -p <string>
git status
git commit -m <string>
ls
git clone <URL> -f
exit <number>
ls
ls
git clone <URL>
sudo apt install -y <string>
cd <string>
exit <number>
cd
fg
curl <string>
sudo sed -i <directory> <file>
sudo sed -i <directory> <file>
git push
git commit -m <string>
wget -q -O - <URL>
vim <file>
sudo apt-key add -\
useradd <string>
rm <string>
clear
rm <string>
exit
clear
cd <string>
git pull
docker-compose logs
pico <file>
sed <directory>
npm init
git co master
cd <string>
git rebase --abort
cp <string>
cd <string>
sudo rm -r <string>
dpkg --search <directory>
git branch
ls
ls
clear
exit
cp -R <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cp -r <directory>
cd <string>
git status
git config --list
ls
cd <string>
git commit -v -a -m <string>
exit
script/build.sh
clear
cd <directory>
ls
ls
docker-compose up -d --build
sudo apt-key add -
ls
git pull origin master
git commit -am <string>
cd
rm -rf <string>
git commit -m <string>
cd <directory>
curl -so- <URL>
fg
vim <file>
sudo reboot
source <string>
ls
git diff <string>
ls
rev
nano <file>
git commit -m <string>
ls
rm <string>
git push
ls
wget -q -O - <URL>
rm -rf <string>
sudo -E <string> -y <directory>
git branch -M <string>
nano <string>
cd ..
grep -i <string>
cd ..
unzip <file>
sudo apt-get update -y
ls
cd <directory>
exit
cd
sudo systemctl status <string>
git pull
ls
ls
git status
ls
npm run coverage
ls
history
git add <string>
rm <string>
ls
vi <file>
npm install express --save
cd ..
ls
npm test
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
diff <file> <file>
git
clear
tar -zcvf <file>
exit
tar xz
sudo git config --global <file>
git status
ls
rm <string>
clear
cpio -p -d -v <string>
ls
cd ..
mv <string>
grep -hr -e <string>
docker images
uname
cat <string>
ls
exit <number>
ls
apt list --upgradble
ls
cd <string>
ls
less
cd <string>
ls
git merge develop
ls
git clone <URL>
sudo apt --fix-broken <string>
ls
cd ..
mkdir <string>
cd <directory>
ls
git add <string>
ls
ps ax
rm -d <string>
python3 <file>
which <string>
sudo apt-get install <string>
sudo cat <file>
ls
cd <string>
cd <string>
cd <directory>
ls
git config --global <file> <string>
nano <file>
ls
tmux
git status
cd <string>
ln -s <string>
htop
cd <string>
ls
ls -l
rm -r <string>
vi <file>
git config --global <file> <string>
sudo apt install <string>
vi <file>
git clone --depth <number> <URL>
python3 <file>
vim <file>
vim <file>
tail -f <directory>
sudo a2disconf <string>
done
sudo apt update
clear
ls
ls
sudo mysql --defaults-extra-file=<directory>
ls
vi <file>
sudo sed -i <directory> <file>
sudo sed -i <directory>
cd <directory>
rm <directory> -rf
git commit -m <string>
rm -r <string>
pwd
vi <file>
cd <string>
git stash pop
npm cache clean --force
ls
ls
timedatectl set-timezone <directory>
git commit -m <string>
clear
git commit
sudo dpkg -i <file>
exit
cd <string>
vi <file>
else <string>
wget <URL> --no-check-certificate
ls -al
rm <string>
npm create vite@latest <string>
ls
source <directory>
vi <file>
ls
vim <file>
git bisect good
cd <string>
git status
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
git checkout -b <string>
ls -laSh
tr -s <string>
cd ..
export <string>
ls
tail -f <directory>
ls
fg
ln -s <string>
ls -la
ls
ls
ls
cd <string>
ls
read -p <directory> -n <number> -r <string>
rmdir <string>
history -n
read -r <string>
ls
sudo reboot now
grep <string>
git commit -am <string>
git push origin master
apt-mark <string>
docker volume create <string>
ls
sudo apt-get update
vim <file>
cd <string>
apt list --upgradable
clear
rm -rf <string>
ls
vi <file>
vim <file>
find <directory> -name <string>
vim <file>
sudo dhclient -v -r <string>
git push -u <string> master -f
git status
cd ..
exit <number>
sudo python3 <file>
mvn clean package -Dmaven.wagon.http.ssl.insecure=<string> -Dmaven.wagon.http.ssl.allowall=<string> -Dmaven.wagon.http.ssl.ignore.validity.dates=<string>
sudo apt-get install <string>
ls
git init
cd <string>
wget --quiet <URL>
wget -qO - <URL>
sh
cd <string>
vi <file>
python3 <file>
curl -sS <string>
git pull origin master
docker-compose down
ls
vim <file>
cd <string>
ls
ls -la
ssh -p <string> user@host # connects to host on specified port as user
ls
du
ls
clear
wget -q <URL> -O <file>
exit
cd <directory>
sudo gem install <string>
cp -r <directory>
git pull
pwd
npm i <string>
vi <file>
git merge --allow-unrelated-histories <string>
grep -qF <string>
grep -v <string>
git pull
df -h
git add --all
ls
ls
ls -lah
cd <string>
ls
cd..
git add
ls
vi <file>
cd <directory>
python3 <file>
rm -rf <string>
ls
cd
history
sudo mkdir -p <directory>
cd <string>
head -n1
git bisect
ls
git add .
curl -k <URL>
cd <directory>
vi <file>
mv <string>
cd <string>
vim <file>
cd ..
cd <string>
git remote add origin <URL>
rm -f -- <string>
history
cd <string>
cut -f1 -d: <directory>
cd <directory>
cd <directory>
vi <file>
git branch -r
git init
apt list --upgradable
git log
clear
ls
sudo dnf update -y
npm install -g <string>
docker exec -it <string>
rm <string>
cd <string>
git pull
ls
cd <string>
ls
git add <string>
sudo poweroff
npm http GET <URL>
apt update
grep <string>
cd ..
cat <string>
ls
cd <directory>
find . -name <file> -type <string> -print -delete
ls
clear
ls
python3 <file>
git remote set-url origin <string>
cd
ls
sudo mkdir <directory>
grep <string>
ls
cd <string>
cd <directory>
vim <file>
git add <string>
cd
mkdir -p <string>
git -C <string>
mkdir -p <string>
ls
else power_discharge=<string> -v <directory> -v <string>
exit
ls -alrt
ls
find <directory> -mindepth <number> -type <string> -iname <string> -exec <string> <string>
ls -als
top
curl -J -O <string>
ls
ls
find . -name <file>
cd <string>
curl <URL> -O
git show <string>
git add .
vim <file>
ls
ping
cd ..
git push
sudo cp <string>
cp -h
cd <string>
npm install --global <string>
git status
git push
sudo dnf install <string>
clear
find . -empty -type <string> -print -delete
cd <string>
sudo pacman -Syyu <string>
rm <string>
ls -laSh
cat <string>
npm run dev
ufw status
cd ..
rm <string>
ftp -help
ls
df -h
python3.11 <file>
ls
nginx -s <string>
npm install
cd <directory>
ls
npm install
ls -l
sudo ifup <string>
file <string>
git commit -m <string>
grep <string>
git push -u <string> bryan-guner
source <file>
ls
vim <file>
rsync -arv --exclude=<string> <directory>
docker
pacman -S <string>
du -skh <string>
git push -u <string> master
cp
ls
cd <string>
git branch -v
code .
ls -a
rmdir <string>
git commit -m <string>
git status
cd <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
sudo dnf install <string>
git commit -m <string>
vim
git add .
sleep <string>
cd <string>
exit
sudo fdisk <directory>
git add .
mkdir <string>
git commit -m <string>
exit
cat <string>
cd <string>
cd <string>
sed -i <directory>
sudo cp -r <string>
git commit
sed -i <string>
git init
cd <string>
git commit -m <string>
curl -v -H <string> <URL>
cd <string>
ls
ls
ls
fg
cd
sudo mkdir <string>
ls
sudo make test
wget -q -U <string>
sudo apt-get -y <string> <string>
ls
kubectl --namespace <string>
tr <string> <string>
find . -name <file>
curl -sL <URL>
sudo vim <file>
sudo apt install <string>
clear
vi <file>
cd <directory>
apt-get -y -qq <string> <string>
systemctl stop docker
npm i @react-native-community/toolbar-android@^0.2.1 --force
ls -R <string>
cp <string>
clear
sudo python3 <file>
vim <file>
sudo install <string>
cd <directory>
history
clear
lsblk -O
sudo sed -i <directory> <file>
vi <file>
ls
exit
cd <directory>
fg
nohup
git log
sed <directory>
sudo apt install <string>
ls
sudo apt-get -y <string> <string>
ls
ping <string>
cd
cd ..
git branch -d <string>
vim <file>
ls
zeus.polsl.gliwice.pl - <number>
cd ..
sudo zypper se <string>
sort
sudo sed -i <directory>
cat <string>
ps aux
git push origin master
git add <string>
ls
mkdir -p <string>
ls -l
find . -name <string> -type <string>
which <string>
git gc --prune=<string> --aggressive
cd <string>
ls
git add <string>
chmod <string>
git push -u <string> main
sudo apt-key adv --keyserver <string> --recv <string>
cd
sudo chmod <number> <string>
pwd
docker start <string>
ssh-keyscan -H <file>
git commit
ls
npm i
install
read -r -p <string>
mkdir -p <string>
ls
pwd
vi <file>
sudo pip install <string>
a ! href <string>
ls
cd <string>
git add <string>
pwd
clear
cd
sudo apt-get update
ls
nl
ls
nano <file>
npx shadcn-ui@latest add <string>
history # shows command line history
git grep -l <string>
sudo apt-get purge <string>
cd ..
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a
cd
print <string>
cd <string>
nano <file>
tail -f <directory>
git checkout -b <string>
ls -a
ls
ls
sudo apt-get install <string>
sudo reboot
rm -rf <string>
cut -d <string> -f <number>
vi <file>
tmux source <file>
ls
sudo cat <directory>
export
cd <string>
docker run -d <string>
grep <string>
unset color_prompt force_color_prompt
sudo shutdown -h <string>
npm init -y
nano <file>
clear
exit <number>
git push origin master
git reset <string>
sleep <number>
cd
lsblk
ls
sudo stop uwsgi
ls
ls -lrt
sudo pip install -U <string>
fg
cat <string>
rm -f <string>
git add <string>
ls
grep -v <string>
ps ax
vim <file>
ls
ps aux
apt-get install <string>
sudo pacman -S <string>
mkdir <string>
exit
cd <string>
git status
mkdir <string>
fg
rm -fr <string>
git rm --cached <directory>
clear
htop
adduser Padraig
cd <string>
tail -f <directory>
ls
sudo apt install lamp-server^ -y
git status
ls
rmdir <string>
ls
cd ..
git checkout <string>
ip link <string>
chmod u+x <string>
git status
unzip <file>
sudo raspi-config
git remote add origin <URL>
ping <string>
ls
git init
grep
nano <file>
clear
clear
ls
cat <string>
sudo systemctl enable <string>
sudo curl <URL> -o <directory>
ls
sudo apt --remove-essentia <string> --no-fix-broken
curl <string>
bash
cd <directory>
cat <string>
sudo apt-get update
ls
cd <directory>
docker-compose logs
git add .
grep -Fxq <string>
ls
git add -A
sudo pacman -S <string>
cd ..
npm run test
git push
git commit -m <string>
vim <file>
vim <file>
git pull
cd <string>
ls
ls
rm -f <string>
cd <string>
cd <string>
npm install -g <string>
sudo apt install <string>
cp -r <directory>
cd <directory>
killall -SIGUSR1 <string>
cd ..
docker login <string>
git log
less
which <string>
clear
git status
clear
sudo apt-get install <string>
cd <string>
sudo apt-get update
head -y <file>
git config --get <file>
git clone <URL>
clear
exit <number>
git help <string>
uniq
dpkg --get-selections
cd <string>
rm -rf <string>
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
sudo dnf install <string>
mkdir <string>
sudo mkfs -t <string>
clear
curl <string>
exit <number>
ls
bash
git checkout -- <string>
cd ..
sudo easy_install <string>
vi <file>
read -rp <string> <string>
cd ..
git status
service <string>
sudo -E <string> -y <directory>
vi <file>
ls
sudo apt-get install <string>
cd ..
g++ -std=<string> <file> -o <string>
ls
find . -name <file>
cd ..
vim <file>
sudo su
vim <file>
ls
php
ls
ls
less <string>
sudo apt install <string>
sudo git clone --depth <number>
clear
sudo sed -i <directory>
clear
ls
ls
ssh-keygen -t <string> -b <number>
code .
git branch
done
ls
cd ..
chmod <number> <string>
ls
sudo -i
cd <string>
git stash
rm <string>
git add -p
cd ..
curl --proto <string> --tlsv1.2 -sSf <URL>
python3 -m <string> install --upgrade <string>
sudo lshw
git status
npm uninstall <string>
cd <string>
cd <directory>
vi <file>
pwd
cd ..
cd
git add .
cd <directory>
sudo yum install <string>
sudo xbps-install -Su
npm start --active-arch-only
ls
python3 -m <string> install <string>
git branch
sudo mv <string>
clear
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
cd <string>
cd <string>
git add <string>
vi <file>
npm install -g <string>
python3 <file>
vim <file>
cd <string>
git status
rm -rf <string>
rm <string>
vim <file>
git please
read -r -p <string>
ls
npm run dev
vim <file>
git revert
chmod <number> <string>
apt-get install linux-headers-$(uname -r
git remote add origin <URL>
sudo apt-get -y <string>
git add .
fg
cd
ssh dirlic@10.18.0.39 -p <number>
git push origin master
ls
mv <string>
clear
exit
top
more <file>
npm start
sudo nano <string>
npm i --save-dev <string>
mkdir <string>
ls
cd <string>
wget <URL>
cd ..
help
ls
git checkout -b <string>
cat <string>
ls
grep <string>
cd <string>
ls
cd ..
touch <string>
cd ..
npm i sass -D
ls
top
cd ..
ls
git stash
ls
sudo apt-get install <string>
exit
ls
chmod u+x <string>
tar -xf <string>
tr -d <string>
sleep <number>
curl -SL <URL> -o <directory>
cat <string>
git pull
less <string>
ls
touch <string>
ls
docker logs <string>
wget <URL> -O <file>
ls
mkdir <string>
cd <directory>
cat <string>
sudo add-apt-repository --remove <directory>
ls
code .
git status
sh <file>
python3 <file>
git grep -l <string>
rm -r <string>
vim <file>
git pull origin <string>
vim <file>
exit
git commit -m <string>
shutdown -r <string>
sudo apt-get remove <string>
sudo stop uwsgi
git add <string>
sudo -t <string>
vim <file>
ssh <string>
npm init
apt install <string>
df -h
<directory> <string>
done
ls
ls
exit
npx create-react-app spotify-practice --template <string>
done
su root
cd <string>
git log --graph --decorate
cd <string>
ls
ln -s <string>
git status
clear
pwd
ls
sudo tail -f <directory>
cut -d <string> -f1
ls
xargs grep <string>
sudo chmod +x <string>
clear
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
grep -A <number>
sudo dpkg -i <file>
clear
cat <string>
ls
export <string>
<directory> <string>
which <string>
ls
rm <string>
sort
git fetch origin\
touch <file>
cd <directory>
cd <string>
ls
cd <string>
chmod <number> <string>
ls
ls
sudo sed -i <directory>
sudo docker kill corrade
chmod -v <string>
clear
vim <file>
sudo sed -i <directory>
ls
git branch
ls
cat <string>
fg
mkdir <string>
git stash pop
ls
cd <string>
git push
source <file>
sudo apt-get update -y
ls
apt-get install <string>
sudo nvim <directory>
ssh-add -D <string>
sudo apt-key add -
less <string>
npm run pretty <string>
sudo apt-get install <string>
npm install malta -g
sudo nano <file>
git pull
fg
sudo dnf -y <string> <string>
git pull origin <string>
cd
cd <string>
exit <number>
cd <string>
ls
sed -rn <directory>
git push -u <string> master
tail -f <string> --lines=<number>
sed -ri <string>
cat <string>
cat <string>
ls
true
cd <directory>
ssh
ps -o <string>
cd <string>
cd
wget --quiet -O- <URL>
rm -rf <string>
find . -name <file> -type <string> -print -delete
tail
rm -rf <string>
sudo apt-get install <string>
wget --user=<file> -password=<string> -r <URL>
dpkg --list
sudo nano <directory>
code .
git push
git add .
sudo rm -rf <string>
git config --global <file>
cd ..
exit
exit
cd <string>
grep -rn <string>
vi <file>
alias <string>
git clone <URL>
npm run coverage
grep -v <string>
ls
ls
git add .
htop
ls
sudo dnf install <string>
export <string>
cd ..
sudo gem install <string>
less <string>
cd <string>
ls
python3 -m <string> venv
rm <string>
cd <string>
vi <file>
exit
git add --all
cat <string>
git commit -m <string>
docker-compose up -d --build
sudo python <file> --cascade=<file> <number>
sudo apt-get autoremove -y
sudo service nginx restart
cd <directory>
sudo apt-get install -f
git push -u <string> master
ps axfu
vim <file>
cat <string>
mv <string>
sed <directory>
source <file>
ls
ls
sudo smbpasswd -a <string>
ls
ls
man <string>
sudo cp <string>
script/build.sh
git status
git init
rm <string>
find <directory> -mindepth <number> -type <string> -exec <string> -t <directory> --backup=<string> <string>
git commit -m <string>
sudo apt install <string>
finger <user> # displays information about user
cd <string>
exit
sudo rm -rf <string>
dpkg -l
sudo udevadm control --reload-rules
cd <string>
vim <file>
git commit -m <string>
ls
cd <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
clear
sudo make install
git add .
tail -f <string>
cd <string>
git checkout <string>
sudo apt-get purge <string>
git please
cd <string>
clear
ls
ls -la
ls
rm -rf <string>
ls
<directory> <directory>
ls
vim
cd <string>
ls
cd <string>
cd ..
wget $URL -qO -
sudo chmod a+wr <directory> -R
sort passwd
sudo apt install <string>
git pull --rebase
git add .
export <string>
git pull
mkdir <string>
ls -l
cd <string>
sudo systemctl is-active <string>
cp -r <directory>
tr -d <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git remote set-url --add <string>
exit
cd <string>
git merge <string>
cd ..
column -t
find . -mtime <string>
node
vi <file>
bash <file>
ls
cd ..
cd <string>
vi <file>
cd ..
screen -ls
pwd
ls
ls -l
cd
exit
sudo killall <string>
git clone
cd
mkdir <string>
ls
clear
ls
wget <URL>
clear
ls
clear
vim <file>
cd <string>
mv <string>
touch <file>
rm <string>
ls
git co PTS-578_redirects_not_updating_automatically
ls
cd <string>
ls
printf <string>
ls
nano <file>
done
systemctl stop kubelet
ls
vi <file>
cd ..
cp <string>
systemctl
sudo systemctl status <string>
systemctl start <string>
tail -f <directory>
sudo git clone <URL>
cd ..
du -ah
git push origin master
ls
vim <file>
env <string>
vim <file>
git init
grep <string>
ls
codedown <string>
touch <string>
git fetch upstream
cd ..
rmdir --help
sudo sed -i <directory>
git add <string>
git status
ls
ls
npm install
reset
cd <directory>
more <file>
cat <string>
mkdir <string>
ls
chmod +x <string>
python3 <file>
sed <directory>
git remote add origin <URL>
git remote add origin <URL>
vi <file>
ping <string>
sudo make install
clear
vim <file>
clear
rate=<string> -O - <directory>
g++ -std=<string> <file> -o <string>
man -k <string>
ls
cd ..
cd <string>
clear
cd ..
ls++ -a
cd
sudo apt-key add -
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
xargs git tag -d
git commit -m <string>
git commit -m <string>
pwd
history
df
exit <number>
open <string>
git add --all
ls
vim <file>
vi <file>
cd <string>
docker run <string>
cp <string>
cd <string>
export <string>
git add <string>
tail -n7
cd <string>
sudo sed -i <directory> <file>
sudo vi <directory>
yarn install
reboot
sudo apt install <string>
ls -la
cd <string>
mkdir <string>
git commit -m <string>
git log --pretty=<string>
ls
git commit -m <string>
xargs -L1 <string>
cd
npm install -D <string> postcss autoprefixer
rm -rf <string>
git commit -a
grep <string>
code .
git config --global <file> <string>
done < <string>
git init
sudo updatedb
ls
sudo systemctl daemon-reload
vi <file>
exit <number>
git checkout main --force
ls
vi <file>
vi <file>
ls
ls
cd ..
vi <file>
git checkout
git config --global <file> <string>
mkdir <string>
git clone <URL>
more <file>
time <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
git commit -m <string>
ls
npm install <string>
cd <string>
mkdir <string>
git init
ls
cd <string>
clear
cd <string>
mv <string>
clear
ls
grep <string>
sudo npm install
docker run -d -p <string> -p <string> --name <string> --restart=<string> -v <file> -v <directory>
ls
cd <string>
cd <string>
ls
cd <directory>
ls -la
rm -rf <string>
npm run dev
open <string>
cd <string>
cd <directory>
cd ..
clear
sudo rm -rf <string>
chmod +x <string>
clear
sudo sed -i <directory>
kubectl rollout status deploy 3scale-kourier-gateway -n <string>
ps -auxwf
mv <string>
vi <file>
exit
uniq
sed <directory>
cd <string>
sudo apt-get install <string>
vi <file>
top
vim
sudo apt install <string>
touch <file>
source <string>
mv <string>
exit
sudo pip install <string>
git stash
bash
ls
docker exec -it <string> bash
ls
touch <string>
rm -rm <directory>
curl -sI <string>
rm -r <string>
ls
sort
sudo pacman -S <string>
cd <string>
ls
npm install <string>
cp <string>
cd <directory>
ls
ls
vim <file>
vi <file>
cd
fg
git restore <file>
grep <string>
cd <directory>
ls
python3 <file>
setg RHOSTS <file>
git status
git fetch
cat <string>
cd <string>
ls
docker
git commit -m <string> --no-verify
apt-get install <string>
reboot
git status
bash
curl -sSL <URL>
git add <string>
ls
git pull
find - -name <file>
sync
done
vim <file>
ls
jq <string>
clear
ls
cd <directory>
cd
curl -o- <URL>
git status
mkdir <string>
ls -l
apt install
cat <string>
cd <directory>
cd <string>
sudo lvremove <directory>
sh <file>
ls
vim <file>
sudo apt install <string>
cd <string>
curl <string>
grep -i <string> >files
mkdir <string>
cd <directory>
ls
vim <file>
sudo apt-get install <string>
mv <string>
git commit -am <string>
touch <string>
clear
clear
ls
git status
exit
git status
docker-compose up -d --build
cd ..
rmdir <string>
grep <string>
dir
sed -i <directory>
git log --graph
grep -i <string>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
cd ..
sudo apt-get install -y <string>
ln -s <string>
sudo rm -rf <string>
sudo su
ssh <string>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
sed -r <directory>
pkill <string>
ls
ls -l
git help
sudo npm i -g <string>
git checkout <string>
npm i require-dir-all -f
ls
cd
sudo git commit
ls
cd <string>
git bisect bad
git status
sudo mysql
git branch
sudo prime-select nvidia
ls
git commit -m <string>
ls
cd <string>
sudo -i
exit
docker inspect --format <string>
vi <file>
htop
ls
git add .
shutdown
sudo lpadmin -p <string> -o <string>
sudo mount <directory>
find . -name <file> -type <string> -print -delete
sleep <number>
cd <directory>
git add .
df=<string> -y
vi <file>
find . -type <string> -exec <string> -i <directory>
git reflog expire --all
sort -k1gr
sudo mv <string>
fg
mkdir <string>
grep <string>
npm audit fix
wget -O <file>
kill -9 <number>
git add <string>
sed -e <string> -e <string> -e <directory>
sudo pip install <string>
exit
cd <string>
code .
git push
sed <directory>
grep <string>
git status
cd <string>
open <string>
touch <file>
rm -r <string>
pwd # tells you where you currently are
su
exit
ls
cd <directory>
sed <directory>
cd <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd <directory>
ls
sudo apt-get install <string>
mv <string>
cd <string>
npm install
clear
ls
history -a
reset
ls
ls -al
git branch -M <string>
git status
cd <string>
git pull
cd <directory>
mkdir <string>
sudo chown -R <string>
sudo chkconfig docker <string>
ls
sudo sed -i <directory>
ls -l
sudo raspi-config
cd ..
cd <string>
cd
cd <string>
ls
less <string>
history
cd <directory>
grep <string>
mkdir <string>
cd <directory>
sudo sed -i <directory> <file>
ls
ls
fg
less <string>
wget <URL>
clear
read <string>
cut -f <string>
git reflog expire --expire=<number> --all
python3 <file>
alias <directory> -c <string>
vim <file>
cd <string>
cd <string>
du -shx <string>
git push
cd <string>
cd <string>
vi <file>
cd <string>
vim <file>
tar -ztvf <file>
ls
rm <string>
mkdir -p <string>
curl --data <string>
mv <string>
sudo systemctl status <string>
tail -f <string>
apt-get install <string>
cut -d, -f1,9,11,14,16
clear
ls
ls
sudo su
exit
grep <string>
git status
cp <string>
sudo apt upgrade python3
ls
vim <file>
ls
git status
exit <number>
cd <directory>
cd <directory>
find src
sudo pacman -S <string>
git commit -m <string>
curl --progress-bar -L -O -C - <string>
sudo apt upgrade
sudo docker images
cat <string>
git add .
ls -lhat
sed -i <directory>
pwd
vi <file>
vi <file>
rsync -rt <string> <directory> --port=<number>
sudo nano <directory>
git pull git init git add <string>
cd ..
mkdir <string>
sudo sed -i <directory>
sudo apt-get install -y <string>
w
cd ..
ping <string>
ssh
clear
ls
ls
exit
done
mount -t <string> overlay -o <string>
ls
sudo mkdir <string>
ls
fg
ls
git commit -m <string>
ls
vim <file>
git fetch
docker
unset <string>
sudo vi <file>
git init\
sed -i <string>
bash
ls
source <file>
git init
git add .
git add .
cat <string>
cd <string>
python3 -v
fg
ping <file>
docker exec -it <string> bash
cd <string>
ls
npm install
ls
rm -f <string>
git st
clear
sudo apt-get install -y <string>
cd <string>
ls
touch <string>
cd <string>
grep <string>
touch <string>
cp <string>
mvn exec:java -Dexec.mainClass=<file>
cd ..
cd <directory>
git clone <URL>
git status
jq <string>
ls -l
fg
sudo sed -i <directory> <file>
ls
ln <file> <string>
ssh <string>
npm run bench -- -c <file> -n <file>
rm <string>
curl -XDELETE <directory>
clear
perl
cd <string>
cd <string>
git add --all
cd <string>
sudo mount -t <string>
cd ..
bash
cp
sed -i -e <string>
git commit -m <string>
git push -u <string> master -f
vi <file>
sed -i <string>
git tag -l
ls
ls
git pull origin master
nano <file>
sed -nE <string>
npm start
sudo usermod -aG <string> <string>
vi <file>
rm -rf <string>
sudo systemctl start <string>
cd <string>
xargs docker rmi
vim <file>
git add .
ls
ls
vim <file>
clear
cd
git add <string>
pwd
ls
cd <string>
clear
sudo pacman -S <string>
ls
ls
clear
read -p <string>
rm -rf <string>
rm -r <string>
wget $latest_url -O <file>
vim
node <file>
npm run build
ls -al
sudo apt install <string>
curl <string>
ls
sort
cd
git add .
sudo xcodebuild -license <string>
ls
ls
python3 -m <string>
cat <string>
awk --version
ls
rm -r <string>
du -hs
wget -qO- <URL>
ls
git push
ls
git add <string>
code .
docker-compose logs
git remote rm <string>
rm <directory> -rf
exit
sudo apt-get remove <string>
ls
sudo zypper se <string>
ln -sv <string>
head -1
sudo -s
ls
head -n <string>
vim <file>
history
ls -la
git commit -m -n <string>
cd ..
iptables -L
mv <string>
cd <directory>
ping <string>
rsync -a <string>
npm create vite@latest intro-svelte -- --template <string>
docker run -it -p <string>
chmod <string>
ls
git remote add origin <URL>
docker run -p <string> -p <string> -p <string> --shm-size=<string> <directory>
cd <string>
vim
ls
exit
cd <directory>
rm -rf <string>
git clone <URL>
mkdir <string>
ls
cd <string>
ls
git reset <string>
python3 <file>
npm start
sudo apt update
git fetch origin <string>
ls
cd <directory>
sudo cp <string>
sudo dpkg --add-architecture <string>
cd <string>
sudo docker run hello-world
git checkout
ls
cd
ls
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
cd <directory>
ls
cd <string>
sed -nE <string>
ls
git commit -m <string>
grep -x <string>
exit
clear
clear
cd
export <string>
tmux a -t <string>
sudo add-apt-repository <directory> -y
git checkout <string>
sudo vi <file>
cat <string>
htop
ls
unzip <file>
ls
git add -A
perl -ne <string>
strings <file>
curl -sL <URL>
cd <string>
ls
ls -al
ls
git add . -N
cat <string>
git add <string>
ls -la
cd ..
rm -r <string>
npm install
cd <directory>
pacman -Sy <string>
git push origin master
sudo apt update
source <directory>
vim
git checkout <string>
ls
clear
vim <file>
cat <string>
vim <file>
ls
git -a
rm <string>
cd <string>
sort -nk1,1
ls
df -h
then\
ls
vi <file>
wget -nc --continue <URL> -P <string>
systemctl status <string>
cd <directory>
cd <string>
sudo apt-get install <string>
ls -la
cd <directory>
cd..
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
find . -empty -type <string> -print -delete
cd <directory>
ls
cd <string>
sudo adduser <string>
clear
cd <string>
exit <number>
cd <directory>
git push origin <string>
exit <number>
git add -A
docker-compose build
tail -n10
ls
cd ..
<file> -t <string>
ls -a
chmod <number> <string>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
history -a
mkdir <string>
ls
cd <directory>
chmod <string>
rm <string>
cd <string>
docker pull <string>
clear
cd <directory>
cd
ls
sudo python <file>
cd <string>
cd <string>
fg
rm -rf <string>
ls
git push origin master
git remote remove origin
exit <number>
pwd
git init
vim <file>
git clone <URL>
mv <string>
ls
ls
sudo apt install gh -y
cd ..
cd <directory>
find . -maxdepth <number> -name <string> -exec <string> <string>
cd <string>
sudo adduser <string>
vim <file>
sed -re <directory>
cd <directory>
sudo curl -sSL <URL> -o <directory>
cd
cd <string>
ls -lah
npm run frontend
sudo airport --channel=<string>
cd ..
cd <string>
ls
npm install --save
cd <string>
then\
git commit --allow-empty -m <string>
sort -u)
ls
cd ..
ftp 198.19.255.136
sleep <number>
curl <URL> -o <file>
cd ..
ls
ls
git add .
ls
ls
git remote add origin <URL>
cd <string>
exit
ls
cd ..
cd <string>
git remote add origin <URL>
git pull origin development
npm install -g <string>
git checkout
curl <string>
ls
<directory> -m <file>
done
git clone <URL>
cd ..
ls
alias <string>
ls
mkdir <string>
git push -u <string> master
mkdir -p <string>
cd <string>
cd ..
cd
vim <file>
cd <string>
ls
ls
grep <string>
exit
vim <file>
ls -a
git status
cd <string>
sudo -s -u <string> -H
grep <string>
sudo bpftrace -e <string>
wget <URL>
git
exit
view <string>
cd ..
git status
vi <file>
sudo tee <directory>
git add -A
ls
cat <string>
ls
git clone <URL>
git add <string>
curl --ftp-create-dirs -T <string>
sudo apt-get install <string>
source <string>
git pull
git add <string>
grep -wPirn <string>
sudo add-apt-repository <directory>
npm install -g <string>
cd
git push -u <string> master
ps aux
ls
git status
git init
exit
git clone <URL>
rm -rf <string>
cat <string>
apt-get update
cd <directory>
cd <directory>
sudo apt-get autoremove <string>
cd <string>
chmod +x <string>
ls -al
rm -rf <string>
ls
exit
cd <string>
vi <file>
ls
sudo chmod <number> <directory>
sudo localectl set-x11-keymap <string>
cat <string>
cat <string>
cd <string>
git commit -m <string>
grep <string>
history # <string>
bash <file>
ls
cp <string>
ls
ls
find <directory> -name <string>
rmdir <string>
ls
clear
chmod <number> <string>
vim <file>
docker build -t <string>
sort -u <string>
git clone <URL>
mkdir <string>
ls
wget -O <file>
cd <directory>
ls
exit <number>
mv <string>
sudo npm list
ls -ltr
npm run test
chmod <string>
git status
ls
su - <string>
ls
ls
cd <string>
fg
git
then\
cd <directory>
yarn install
ls
fg
ps -auxwf
cd ..
grep -A1 <string>
ssh dirlic@10.18.0.39 -p <number>
git push
exit
read -n <number> -s -p <string>
ls
sudo apt update
wget -P <directory>
cd <string>
systemctl start kubelet
cd <string>
clear
ls -lah
usermod -aG <string>
ip addr
ls
mkdir <string>
clear
cut -c <string>
clear
git push
sudo wget -r <URL>
vi <file>
grep -v <string>
sudo iptables -t <string> -A <string> -o <string> -j <string>
reset
cd <string>
git clone <URL>
git remotes -v
python3
php artisan <string>
cd <directory>
cd <directory>
pwd
ls -la
grep -r <string>
cd <string>
git status
nano <file>
ssh dirlic@10.18.0.39 -p <number>
sudo su - <string>
cd <string>
sudo apt-get install <string>
ls
cd <directory>
ls
find <directory> -name <file> -type <string> # -print <string>
docker-compose up -d --build
cd <string>
nano <file>
rm -rf <string>
git add <string>
tail -f <directory>
vim <file>
cd <string>
git clone <URL>
ls
wget <URL>
git add <string>
sudo dnf install <string>
vim <file>
cd <directory>
code <string>
cd ..
ls
cd <string>
cd <string>
ls
exit
docker push <directory>
git add .
wget -P <directory>
cat <string>
vim <file>
cd <directory>
ls
sudo apt upgrade
cd ..
docker-compose up -d --build
clear
mkdir <string>
git commit -m <string>
clear
wget <URL>
ls
sudo apt-get install <string>
exit
git clone
docker exec -it <string>
cd <string>
git commit -a
curl -X <string> -d <string>
git reset <string>
cd <directory>
vi <file>
cd <directory>
git push origin master
tr <string> <string>
tty
mkdir <string>
chown -R <string>
sudo chmod <number> -R <directory>
sudo docker kill corrade
cd <directory>
kill -9 <string>
sudo apt-get install <string>
ps aux
git clone <URL>
apt-get -y <string> <string>
vim
export <string>
clear
git checkout <string>
rm -rf <string>
git status
vim <file>
git checkout <string>
ls
source <file>
ls
grep <string>
cd <string>
git commit -m <string>
git clone <URL>
ls -la <directory>
rm -rf <string>
bash <file>
ls
rm -r <string>
systemctl start docker
sudo ufw allow <string>
exit
fg
exit <number>
git checkout <string>
ls
sudo apt update
ls
grep <string>
docker ps
vi <file>
ls
ls
git add .
grep -inrw <string>
sudo gem install <string>
exit <number>
clear
grep -i <string>
ls
wget <URL>
clear
cd <directory>
cat <string>
git status
cd <string>
git add .
sudo ifconfig <string>
cat <string>
cd <directory>
ls
sudo yum install -y <string>
man <string>
fg
vi <file>
exit
git commit --amend --reset-author
cd ..
exit
mv <string>
ssh <string>
vi <file>
git status
git add .
cd <string>
fg
ls
mkdir <string>
vim <file>
ls
tail -f <string>
cd <string>
ls -la
cd <string>
ls
sudo service nginx reload
ls
git commit
nano <file>
sudo mount <directory>
type <string>
source <string>
cat <string>
npm run bench -- -c <file> -n <file>
cd -
mv <string>
ls -la
sudo apt install <string>
git status
ls++ -a
fc-cache -r
git push -u <string> main
cd <string>
pwd
exit
ln -s <string>
vim
ls
vim <file>
fg
ls
charset=<string> -H <string> -H <string> -H <string> -H <string> -H <string> -H <string>
cd <string>
sudo make install
git rm <string>
ls
ls
cd <string>
find . -name <file> -type <string> -size -30k -delete
ls
sudo apt-get update
ls
awk <string>
git
sudo userdel demouser
ssh -L <string> -N -f -l <string> <string>
vim <file>
fg
cd ..
cd <string>
npm install
clear
git checkout -b <string>
cd ..
ls
ls
umask
grep -E <string>
sudo modprobe <string>
clear
vim <file>
print <string>
ls
cd <string>
su
exit
git add .
sh <file>
cd <string>
grep -rl <string>
cd <directory>
diff <file>
git add -A
ls
ls -ltr
python3 <file>
clear
bash
apt-get install -y <string>
cd <string>
sed -i <string>
docker-compose up -d --build
vim
cd <string>
git config --global <file> <string>
<directory> <string>
ps axfu
git remote add origin <URL>
ls -l
git status
wget <URL>
sudo apt-get install -y <string>
ls
print <string>
source <file>
mount
select(.status.containerStatuses[].name==<string> <string>
exit <number>
ls
git status
tail -$limpiar <string>
ls
find . -name <string> -exec <string> <string>
ls
cd ..
set -ex
git status
finger
cp <string>
ls
sudo pcmanfm
cd <string>
git commit -m <string>
npm uninstall -g <string>
git push
clear
wget -O <file>
ls
git remote set-url origin <string>
more
cd <string>
exit
git config --origin <file>
then\
sudo wget -O <directory>
rm <string>
ls
git config --global <file> <string>
sudo git config --system <file>
cd <string>
git submodule add <URL>
git add .
ls
vim <file>
git reset --hard <string>
kubectl --namespace=<string> <string> <string>
git reset --hard <string>
exit <number>
rm <string>
cat <string>
podman run -p <string>
docker start postgres-container
ls
clear
cd <directory>
find . -empty -type <string> -print -delete
ls
vim <file>
ls
exit
df -h <string>
cd <string>
ls
groupadd -r <string>
ls
sudo rm -rf <string>
sudo python <file> --cascade=<file> <number>
git push
ls
ls
ls
ls
sudo chown -Rv <string>
cat <string>
sudo vi <directory>
uniq
npm run start
clear
clear
clear
cd <directory>
rm -rf <string>
mkdir -p <string>
sudo chmod -r-r-r- <directory>
cat <string>
cd <string>
sudo vi <directory>
ls
sed -i <directory>
exit
cd
python3 <file>
mv <string>
exit <number>
ln -sfn <directory>
ls
ls
sudo apt-get update -y
git commit -m <string>
hostname
cd <string>
git commit -m <string>
cd <string>
ls
done\
bash <file>
exit
ls
chmod +x <string>
sudo aptitude purge <string>
ls
ls
sed -ri <string>
cd <string>
git add <string>
rm -f <string>
ls
apt-get update
sudo rm -rf <string>
ls -la
npm run bench -- -c <file> -n <file>
cd <string>
find . -name <file> -type <string> -print -delete
rm -rf <string>
grep <string>
clear
sed <directory>
ls
cd <string>
git commit -m <string>
clear
ls
tcpdump -i <string> -c5 -nn <string>
ls
cd ..
git checkout master
sudo python3 <file>
nano <string>
cd <string>
git commit
ls
git status
git stat
sudo nano <directory>
cd <string>
git --version
exit
cd <string>
mkdir <string>
ls
vi -t <string>
sudo pacman -S <string> --noconfirm
git reset <directory> --hard
ps aux
vi <file>
cd <string>
ls -latr <directory>
ls
git checkout <string>
hostname
nano <file>
sudo sed -i <directory>
history -a
sudo apt-get update
cat <string>
ping <file>
vi <file>
clear
cd <string>
vi <file>
git add <string>
git pull origin <string>
sed <directory>
sudo halt
rm -f <string>
npm run start
source <directory>
ls
cd <directory>
git pull --rebase
python3 <file>
python3 <file>
git commit -m <string>
source <directory>
cd <string>
cd ..
ping <file>
ls
clear
sudo cp <string>
ls -lh
exit
sudo apt-get update
cd <string>
ls
git add <string>
clear
sudo python3 <file>
git pull origin master
npm i <string>
python3 <file>
ls
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
ls
sudo chmod <number> <string>
wc -l
vim <file>
find . -empty -type <string> -print -delete
cd <string>
ls -lAF
ps -ef
cd <string>
wget <URL>
npm install react-native-camera --force
ls -lAF
cd ..
vim <file>
reset
python3 <file>
ls
ls
cat <string>
vi <file>
clear
git checkout <string>
less <string>
ls -la
git clone <URL>
exit <number>
ls -alrt
nano <file>
sudo sed -i <directory>
ls
apt-cache
ls
vi
sudo shutdown
ls
sudo cp <string>
vim <file>
sudo make
clear
cd <string>
git rm <string>
git remote add origin
find -r <file>
clear
curl --silent -L -o <directory>
ls -lF
ls
usermod -G--groups
git log
git add <string>
ls -la
cat <string>
touch <file>
git add .
cd <string>
sudo apt-get update
fg
ps aux
ls
fg
systemctl status <string>
cd <directory>
grep <string>
git config --help
mv <string>
chmod <number> <string>
ls
sudo chmod <number> <directory>
diff <file> <file>
cp -v <string> <directory>
php <file>
git add <string>
python3 <file>
cd <directory>
git add <string>
ls
fg
git commit -m <string>
sort -uf <string>
man <string>
sudo apt-get update
cd <string>
exit
sudo make install
cd -
tail -f <directory>
nano <file>
apt-get update
clear
env <string>
vim <file>
git add .
ls
ls
tr <string>
vi <file>
zcat <file>
cd <string>
npm run build
cd <string>
exit
sudo -E <string> <string>
git status
pwd
cd <string>
touch <string>
ls
clear
clear
sudo apt-key add -
rm -rf <string>
git add.
git commit
git branch
sudo rm -r <string>
cd <string>
ls
read <string>
vim
cd <string>
cd <string>
exit
ls -l
cd <directory>
vi <file>
lsblk -f
git co HEAD <directory>
rm <string>
exit
vim
sudo apt upgrade
cd <directory>
ls
git switch <string>
git pull
sudo apt-add-repository <directory>
cd <directory>
cd <directory>
rm -rf <string>
vim <file>
time go run <file>
clear
sudo kill -9 <number>
ls
ls
ls
git clone -b <string>
cd
vim <file>
mkdir <string>
cd ..
rmdir -r <string>
sudo apt-cache search <string>
cd <string>
grep <string>
sudo mkdir <directory>
sudo -s
hexdump <file>
bunzip2 <string>
python3 <file>
mv <string>
git init
sed <directory>
sudo poweroff
ls
ls -ld
nohup <string>
sudo sysctl -w <string>
ps -elf
tee <file>
ls
git commit -m <string>
passwd
touch <string>
curl <string>
cat <string>
awk <string>
npm install
rm <string>
cd ..
python3 <file>
exit <number>
npm run dev
git checkout master
vi <file>
sleep <string>
git commit -m <string>
ls
git restore <file>
view <string>
python3 <file>
npm install -g <string>
mkdir -p <string>
git hist
fg
cd ..
vim <file>
sudo cd <directory>
ls
cd ..
vim <file>
chsh -s <string>
cd ..
cd <directory>
ps ux
exit
exit <number>
sed <directory>
fg
ls -alrt
vim <file>
ls
python3 <file>
ls
ls -la
ls -lt
docker volume create --name=<string>
exit
ls
ls
docker logs <string>
vim <file>
cd <string>
mv <string>
ls -l
git status
ls
git add <string>
git status
docker-compose up -d --build
ssh isl-env <string> -p <file>
git commit -m"update"
sudo apt install <string>
sudo apt-get update
curl -Ls <URL> -o <directory>
cat <string>
ls
ls
cd ..
mkdir <string>
git push origin master
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ls
git commit
ls
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
nano <file>
grep -v
cp <string>
vim
sudo add-apt-repository <string>
git status
grep -B <number> -E <string>
npm install typescript -g
nano <file>
ls
sudo update-alternatives --set <string>
sort -nr
fg
grep <string>
mkdir -p <string>
git clone <URL>
vi <file>
awk <string>
git status
clear
mv <string>
exit
chmod +x <string>
cd <directory>
<directory> -m <file>
ls
ps -A
vi <file>
cd <string>
npx shadcn-ui@latest add <string>
git commit -m <string>
mkdir <string>
git restore <file>
cd <string>
git add <string>
npm run start
rm -rf <string>
git commit -m <string>
cd <string>
nano <file>
cd ..
grep -c <string>
ls
sudo apt install <string>
sudo apt-get install <string>
rm <string>
sudo apt install <string>
git push
sudo apt-get update
exit
git status
clear
grep <string>
ls
sudo apt-get update
exit
dpkg -l
sudo pacman -S --noconfirm <string>
exit
ping <string>
ls
ls
systemctl --user <string> <file>
ls
rm -r <string>
cd <string>
less <string>
fg
cd <string>
git add .
clear
git checkout <string>
rm -rf <string>
sudo apt install <string>
npm run bench -- -c <file> -n <file>
sudo docker rm corrade
cd <directory>
exit <number>
killall <processname> # kill all processes with the name
sudo vim <file>
ls
git branch --no-color <string> <directory>
vi <file>
git rebase <string>
ls
python3 <file>
python3 -v
sudo pip install <string>
ls -lA <directory>
ls -l
npm uninstall react-native-action-sheet --force
exit <number>
cd <string>
cd <string>
ls -alF
ls
exit
git add <string>
vi --version
hostname -h
npm install -g <string>
ls
ls
cd <string>
clear
apt-get update -y
ls
git init
mv <string>
rm -rf <string>
git push origin --force --all
mkdir <string>
sudo rm -r <string>
ls -ls
cd <string>
chmod +x <string>
mkdir -p <string>
vi <file>
git log
git add .
scp <string>
sudo dnf install -y <string>
git push
exit
git add <string>
cd
cd <directory>
sudo apt-get update\
cd <string>
mv <string>
fg
clear
vim
git add <string>
git status
column -t
exit
cd <string>
ls -la
ls
rm <string>
ls
sudo -i
npm i
exit
kubectl <string>
cp <string>
sudo nano <directory>
tail -f <directory>
chmod +x <string>
git checkout <string>
cat <string>
git clone <URL>
ls
ls
ls
ls
exit <number>
git push
ls
nano <file>
du -sh
swapon --show
xargs --no-run-if-empty <string>
git commit -m
git hist
less
cd <directory>
sudo rm -rf <directory> <directory>
exit
docker-compose
docker-compose up -d --build
cd ..
picom --experimental-backends -b
exit
cd <directory>
python3 <file>
git remote add upstream <string>
cd
cd <directory>
git checkout -
fg
cp <string>
vim <file>
vim <file>
cd ..
ls
find . -name <string> -type <string>
cp <string>
export <string>
ls
cd <string>
git rebase -i <string>
cd <directory>
git add .
ls
cd ..
exit
cd <string>
sudo chmod <number> <directory>
curl -s <string>
sudo npm install --global <string>
telnet <string>
vi <file>
cd <string>
ls
git commit -m <string>
which <string>
exit <number>
cp -r <directory>
cd <string>
export <string>
cd ..
sudo pacman -S <string>
cd ..
code <string>
git status
man <string>
cd ..
clear
ssh <string>
cat <string>
ls
grep --color <string>
cd <string>
vim <file>
clear
ls++ -a
npm run develop
ls
exit
sudo apt update
sudo rm -r <string>
git add <string>
curl <string>
ip addr <string>
docker-compose up -d --build
ls
ls
python3 <file> --epochs <number>
cd ..
exit <number>
sudo sed -i <directory>
vim <file>
cd <string>
sudo git add <string>
vim <file>
sudo gem install <string>
git init
git status
ls
git status
ls
cd <string>
vi <file>
ls
exit
git add .
cat <string>
git push -u <string> master -f
shuf -n <number> -o <string> <file>
mv <string>
ls
sudo npm install -g <string>
sudo motion -n
vim <file>
sudo su
npm run test
git co -- <string>
cd <string>
git add .
git status
cd
rm <string>
cat <string>
cd <directory>
git ls-remote <string>
ls
cd ..
ps -a <string> selects all processes with a tty except session leaders
vim <file>
git push origin main
clear
curl -ksSLO <URL>
git push -u <string> master
head
sudo apt-get install <string>
ls -la
exit
ls
exit
systemctl enable --now <string>
mkdir -p -m <number>
vim
git init
cd
grep <string>
git push origin
cd <string>
sudo ufw enable
sudo apt install <string>
ls
done
ls -l
sudo systemctl status <string>
git status -v
clear
git status
git add .
cd
ls
ls
sudo apt-get install <string>
cd ..
ls
ln <file> <string>
exit
sudo localectl set-x11-keymap <string>
bash
git add <string>
rm -rf <string>
git commit -m <string>
npm install
ls
git commit -m <string>
cd <string>
vim <file>
sudo ufw allow <string>
nano <file>
git clone <URL>
fg
git checkout <string>
cd <string>
sudo -V
ls -al
cd <string>
touch <file>
sudo python <file>
exit
cp <string>
git add .
ls
clear
sudo dpkg -i <file>
vi <file>
sudo rm -r <string>
ls
git add .
yarn --version
cd <string>
pwd
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
sudo xbps-install <string>
git log
cd <directory>
cat <string>
git add .
git checkout --ours <file>
git checkout <string>
read <string>
mkdir <string>
wget -q -O <file>
cd
ls
cd ..
ls
npm run dev
ls
ls
sudo apt-get update
git diff <string>
dpkg-reconfigure locales
go tool pprof <file>
sudo -i
clear
ls
sudo pacman -Syyu <string>
nano <file>
htop
done
vim <file>
cd
ls
ls
alias <string>
find . -name <file> -type <string> -print -delete
git commit -m <string>
cd
read -n <number> -s -p <string>
cd <string>
git config --global <file> <file>
ls
vim <file>
fg
npm run coverage
cd ..
ls
source <string>
cd <string>
exit
df -h
exit
cd <directory>
curl -sSL <URL>
uniq -c
export <string>
mv <string>
xhost +
git checkout --quiet <string>
mkdir -p <string>
node -v
cd <string>
ls
git push
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ls
sort -g
git branch -u <directory>
du -sh <directory>
tee -a <string>
cd
vi <file>
git branch -M <string>
export <string>
cd -
git remote add origin <URL>
npm init
sed -i <string> -e <string>
sudo reboot now
vim
ls -alrt
sudo lvcreate -l <string>
sudo docker run --rm -p <string>
curl <string>
cd <string>
npm run dev
su
cat <string>
sudo apt install <string>
cd
git add <string>
git add -A
git remote -v
exit <number>
tail -f <string>
npm start
cd <string>
ps -eal
mv <string>
ls -ltr
exit
read -p <string>
git push -u <string> main
ls
ps axfu
sudo pacman -Syyuu
chsh -s <string>
done
apt-get -y <string> <string>
nano <string>
python3 <file>
ls
curl -L <directory> -o <directory>
grep -e <string>
clear
cat <string>
ls
git push
python3.8 -m <string>
git init
clear
ls
find <string> -iname <string>
npm audit fix -f
cd ..
ls
sudo
git status
exit
cd <string>
sudo apt-get install <string>
sort
vi <file>
vim <file>
git status
ssh dirlic@10.18.0.39 -p <number>
ls -ltr
sudo tee
git push origin master
sudo shutdown -h <string>
dmesg
clear
git pull
sudo sed -i <directory>
top
strip
cd <directory>
cd <directory>
wget
npm install promise-polyfill --save-exact
git add .
git pull
cp <string>
ls
git commit -m <string>
code .
unset <string>
git config --unset <file>
cat <string>
mkdir <string>
sudo apt-get --purge <string>
open <string>
git clone <URL>
sudo apt-get -y <string> <string>
exit
cd <string>
clear
ls
unset color_prompt force_color_prompt
grep -i <string>
git add .
ls
rm <string>
fg
python3 <file>
nl
sudo mkdir <string>
fg
cd ..
ls
exit
npm run prod
tar xzvf <file>
ls
ls
ls
ls
ls
git init
mv <string>
cd <string>
fg
ls
ls
ls
ls
cd ..
wget <URL>
sudo systemctl status <string>
ls
clear
rm -rf <string>
who
git status
cd <directory>
sudo mkdir -p <directory>
cd <directory>
git commit -m <string>
then\
ps -ef
source <file>
vim
yarn
cd <string>
apt-get update
vim <file>
cd <string>
ls -la
head -n1\
grep <string>
mkdir <string>
git push
pwd
cd ..
git commit -m <string>
tr <string> <string>
ls
npm install <string>
ssh-copy-id -i <string>
vi <file>
ls
git clone --mirror <string>
npm init
clear
dpkg -i <file>
ls
grep -i <string> >files
sed -i <directory>
ls
cp -r <directory>
mkdir <string>
exit
ls -l
git -C <string>
mv <string>
mkdir <string>
curl -L <URL> -o <file>
sudo mv <string>
find $dir -type <string>
cd <string>
source <file>
cd <directory>
wget -r <URL>
find . -type <string> \( -name <string> -o -name <string> -o -name <string> -o -name <string> -o -name <string>
<directory> <directory>
git status
ls
sudo firewall-cmd --state
git push -u <string> master
cat <string>
cd ..
eval <string>
ls
sudo apt udpate -y
ls
docker-compose up -d --build
pwd
vim <file>
pavucontrol
rm -rf <string>
ls
exit
cd ..
git branch
npm init -y
rm -rf <string>
cd <directory>
cd <directory>
tmux kill-session -t <string>
nano <string>
ls
docker ps
unset color_prompt force_color_prompt
strings <file>
ls
docker pull <string>
vim <file>
cd <string>
clear
rm -rf <string>
sudo make install
git pull
ls -la
cd..
cd <string>
cd ..
vim <file>
done
ls
cd <directory>
git --git-dir=<string> <string> --format=<string> <string>
mkdir -p <string>
grep pacman -Syyu
ls
cd <string>
ls
cd ..
git commit --amend
sudo systemctl restart nginx
cd ..
ls
git fetch
git pull
ps aux
grep <string>
rm -rf <string>
cd ..
cd <string>
source <file>
ls
ls
grep <string>
git add .
npm install
make clean
cd <string>
grep <string>
ls
ls
sudo apt-get install <string>
ls
ls
sudo su
cd <string>
git pull
cd <string>
vim <file>
vim <file>
git clone <URL>
sudo pacman -Rcns <string>
cd <directory>
git init
cd <string>
sudo reboot
ls
exit
fg
cd ..
ls
ls
ls
sudo dpkg -i <file>
python3 <file>
cat <string>
npm install --save-dev <string>
ls
find <directory> -type <string> -execdir <string>
ls
find . -empty -type <string> -print -delete
sudo apt-get update
git status
sudo cp -rf <string>
git add <string>
cd <string>
cat <string>
cd <directory>
git add <string>
clear
xrandr -q
vim <file>
cd <string>
git init
mkdir -p <string>
git branch
ls
git pull origin master
mv <string>
mkdir <string>
git commit -m <string>
cd <string>
ls
read
exit
read -p <string>
ls
mkdir <string>
git commit -m <string>
cd <string>
git pull
git switch main
sudo dpkg-reconfigure <string>
cd ..
cd ..
cd
vi <file>
git add <string>
ls -la <directory>
env
curl -X <string> -d <string>
git remote add origin <URL>
clear
npm install react-native-actions-sheet --save
ls
wget <URL> -P <directory>
ls
chmod <number> <string>
sudo sed -i <directory>
more <file>
xargs docker stop
ls
sudo rm -rf <string>
sudo reboot
git init
pwd
ls
git add .
tail -f <directory>
cd -P -- <string>
grep <string>
source <directory>
kill <number>
sudo vim
git push
vim <file>
cat <string>
read -rp <string> <string>
dir
pkill <string>
cd <directory>
wc -l
sudo mv <string>
rmdir -r <string>
sudo dhclient <string>
exit <number>
ls -a
clear
ls
tr <string>
ls
cd <string>
rm -r <string>
vim <file>
ls
ls
ls
ls
mkdir <string>
bash <file>
sudo apt update
git add <string>
cd <string>
done
sudo apt-get update
cd <string>
clear
read -r -p <string>
ls
cd <string>
git push
touch <string>
htop
git status
ls
wget -q -O - <URL>
ls
cd <string>
read <string>
git add <string>
vim <file>
vim <file>
ssh -i <string> remote_user@remote_host
read -s -n <number>
ls
more <file>
wget <URL>
ls
ls
exit <number>
vim <file>
ls
vim <file>
rm <string>
sudo chmod u+x <file>
ls
git push
cd <string>
cd <string>
git stash
ls
help <string>
man <string>
a ! href <string>
npm install
ls
ls
vi <file>
git add
clear
cd <string>
unset color_prompt force_color_prompt
sudo sed -i <directory> <file>
cd <string>
ls
cd <directory>
ls
sudo reboot
scp <string>
ls
clear
cd <string>
git commit -m <string>
git push
sudo dpkg --clear-selections
cd <string>
cd <directory>
ls
ls
git remote -v
ls
grep -vw <string>
cd <directory>
ls
ls -la
cat <string>
cat <string>
clear
git add .
ls
cd <string>
ps aux
vim <file>
git update-ref --stdin
sed -e <directory> -e <directory>
python3 <file>
exit
python3 <file>
python3 <file>
ls
cd ..
grep -vFx -f <string>
exit
git rebase --abort
mv <string>
cd <string>
git status
ls
git add <string>
head
code .
man <string>
cd ..
find . -name <file> -type <string> -print -delete
npm install
sudo zypper <string>
clear
git clone --depth=<number> <URL>
git init
exit
cd <string>
ls
cd <directory>
git update-ref -d <string>
cd ..
find <directory> -name <file> -print
ls
sort -h
git log
cd <string>
sudo apt install <string>
script/build.sh
read <string>
git commit -m <string>
clear
ls
usermod
git push
ssh <string>
ls -lht
git push -u <string> main
git diff
git ls-files
nano <string>
killall <string>
git commit -m <string>
python3 --version
git config --global <file> <file>
ps
xhost +
git branch -M <string>
tail -f <string>
sudo apt show <string>
ls
curl <string>
reboot
ls
git pull
npm run test
clear
fg
cd <string>
ls
nano <string>
ls
cp <string>
ps -auxwf
ls
git remote add origin <URL>
git commit -am <string>
cd ..
alias
curl -fsSL <URL>
rm -rf <string>
exit
ls
ls
cd <string>
exit <number>
ls
pwd
ls -lh
git status
clear
git clone <URL>
git commit -m <string>
which <string>
vim <file>
sync
git checkout <string>
exit
git commit -m <string>
read -p <string>
ls
git init
exec zsh
ls
ls
git clone <URL>
cd <directory>
vim <file>
rm -rf <string>
ls
ls
sudo chmod -R <number> <string>
ln -s <string>
source <file>
nano <file>
ls
git add .
mv <string>
sudo apt-get install <string>
ls
ls
git clone <URL>
cd ..
cp <string>
ls
git add <string>
git add <string>
cd <directory>
exec zsh
exit <number>
cd <string>
fg
chmod +x <string>
curl <string>
top
exit
find . -empty -type <string> -print -delete
ls
cat <string>
git add <string>
curl -i <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
git pull
clear
ls -las
awk -F <string>
sudo sed -i <directory>
grep <string>
sudo netcfg -a
sudo chmod +x <string>
apt-get update
ls -la
ls
xargs -L1 <string>
chmod <number> <string>
git checkout --orphan <string>
git status
head -1 <file>
nano <file>
chmod +x <string>
ls
fg
sudo systemctl reload <string>
less <string>
sudo passwd <string>
more <file>
clear
ls
ls -al
ls
rev
ls
sudo pacman -S <string>
cd <string>
git init
cat <string>
cd ..
rm -f -r <string>
git submodule update
clear
ls
git status
ls
ls -l
npm i -g <string>
cd <string>
cp <string>
git push origin solution --force-with-lease
sudo docker run -v <directory>
cd <directory>
mkdir <string>
git status
git commit -m <string> --no-verify
git pull
perl <file>
clear
vi -b <file>
bash
cd <string>
patch abs -asf
docker images
sudo ufw allow <string>
cd <string>
sudo apt-get -y <string>
python3 <file>
git checkout -b <string>
ls
sudo mkdir <directory>
sudo systemctl stop <string>
ls -la
source <string>
mkdir <string>
sudo apt install <string>
mkdir -p <string>
apt-get update
docker
ls
lsblk
git remote add origin <URL>
ls
git log
cat <string>
mv <string>
mv <string>
ls
vi <file>
git commit
sudo python <file>
print <string>
cd <string>
LANG=<string> rpm -qp --queryformat <string>
cd ..
tmux -v
cd <directory>
find . -name <file> -type <string> -exec <string> -rf <string>
sudo chmod <number> <string>
git push
grep <string>
npm -v
ls
npm i -g <string>
sudo apt dist-upgrade
ls -la
git status
python3 <file>
ls
cd <directory>
read -rp <string> <string>
vim <file>
rm <string>
ls
sudo apt-get -y <string>
more <file>
vi <file>
sudo chmod -R --reference=<string> <string>
clear
cd <string>
sudo usermod -aG <string>
cd <string>
file <string>
ls
sudo apt install <string>
wget <URL>
sudo fdisk -l <string>
ls
ls
bash <file>
clear
apt-get update
ls -l
ls
cd ..
cat <string>
ls
ls
sudo nano <directory>
ls
sudo vim <directory>
cd <string>
docker run --rm --entrypoint <string> $GL_IMG_REPO -c <string>
git commit -m <string>
htop
curl <string>
cd <string>
ls
ls
rm -r <string>
git status
git checkout <string>
git pull
cd ..
sudo sed -i <directory>
exit <number>
a ! href <string>
rm <string>
git add <string>
cd <string>
cd ..
git commit -m <string>
nano <file>
git add .
rm <string>
rmdir <string>
sudo start uwsgi
mkdir <string>
cd <directory>
ls
sudo apt-get install phpmyadmin -y
vim
git status
export <string>
cd ..
file <string>
git checkout <directory> -
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
sudo vi <directory>
cd <string>
sudo vi <file>
du -sh <directory>
test -z <string>
ls
npm run test
df # shows disk usage
git commit -m <string>
git commit -m <string>
rm -rf <string>
ls
ls
ps -aux
cd <string>
git clone <URL>
vi <file>
sudo add-apt-repository <directory> -y
git co master <file>
fg
ps -ax
git reset --hard
pwd
ls
git clone <URL>
vim <file>
cd <string>
watch -n <string>
ls
git remote add origin <URL>
ls -l
vim <file>
cat
vim <file>
source <file>
sudo apt-get -y <string> <string>
cd <string>
git clone <URL>
ls
cd <string>
chmod <number> <string>
cd <directory>
vi <file>
git status
cd <directory>
cd <string>
git add .
done
ls
source <file>
ls -la
cd <string>
git status
vi <file>
ls
systemctl status <string>
sudo python <file>
sed <directory>
mv <string>
clear
git bisect bad
clear
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
mkdir <string>
sed -i <string>
git add .
ls
cd <directory>
chmod +x <string>
ls
cd <directory>
sudo apt-get install -y <string>
ls
cd <string>
more <file>
ls -a
git check-ignore -q <string>
wc -l
cd <directory>
clear
source <file>
terraform apply <string>
git clone <URL>
exit
cd ..
npm run watch
ls <directory> -a
ls
mvn install -D <string>
git add .
rm -rf <string>
git pull
ls
git init
ls
git stash
chmod +x <string>
cd <string>
sudo start uwsgi
cd <string>
git status
git commit -C <string> --no-verify
git submodule add <URL>
sudo docker exec <string>
exit
mkdir <string>
cd <directory>
sleep <string>
cd <string>
git status
curl <string>
ls
cd <string>
git add <string>
git commit -m <string>
mv <string>
sudo apt install <string>
mvn clean
cd <string>
cd <directory>
sudo chmod <number> <string>
git commit -m <string>
git push
ls
cat <string>
git status
exit
read -s -n <number>
rm -rf <string>
cd ..
ls
git status
<directory> <string>
vi <file>
rm <string>
npm install jest-fetch-mock --save-dev
git push origin master
exit <number>
cd <string>
vim <file>
cd <string>
clear
bash --version
ls
git add <string>
clear
rm <string>
time <string>
ls -alrt
cd <string>
sed <directory>
pwd # tells you where you currently are
ps -ef
tmux
exit
ls
cd ..
exit
git checkout <string>
find $1 -type <string> -iname <string> -print0
ls
ls
sudo chmod a+r <directory>
grep -E <string>
ls
clear
cp -pr <string>
fg
mv <string>
ps aux
top
cd ..
read <string>
rm <string>
man <string>
sudo apt purge <string>
uname
exit
cd ..
git clone <URL>
cat <string>
sudo systemctl status <string>
curl -G <directory>
ls
sudo apt-get update
sudo apt-cache show <string>
git status
ls
sudo pip install -e
git add -A
vim <file>
exit <number>
ls
git push -u <string> master
exit
alias <string>
exit <number>
sudo add-apt-repository <directory>
mkdir -p <string>
cd ..
rm -f <string>
ls
rm <string>
vim <file>
ls
ls
read <string>
git fetch --no-tags <string>
ls
ls
git commit -m <string>
fg
git pull
ssh <string>
git remote add origin <URL>
cd <directory>
sort -n -r -k2
nano <string>
ls
htop
cd <directory>
sudo apt install <string>
cd ..
git add <string>
ls
ls++ -a
rm <string>
grep -R <string>
sudo nano <directory>
ls
grep <string>
git branch -M <string>
df -k
vi <file>
git push
ls -lh
git clone <URL>
docker run <string>
mv <string>
ls
ls
pwd
cd <string>
ls
setg RHOSTS.*
git commit -m <string>
history
sudo wgnord -c <string>
mv <string>
ls
vim <file>
htop
ls
ls
ls
cat <string>
sudo rm -r <string>
cd ..
ls
ls
git gc --aggressive --prune=<string>
cd ..
mv <string>
npx <string>
curl -o- <URL>
git diff <string>
git log
history -a
find . -empty -type <string> -print -delete
clear
read -p <string>
git log
cd ..
ls
curl <URL> -u <string> -d <string> -d <directory> -d <directory> -d <string>
cd <string>
ls
rm -f <string>
sudo apt-key add -
git push -u <string> master
tmux -V
read <string>
sed <directory>
git status
git add <string>
rm -rf <string>
fg
python3 <file>
psql -U <string> -h <string> nzdpu_wis
cron <string>
vim <file>
ls
git config --global <file> <string>
docker-compose up -d --build
find . -empty -type <string> -print -delete
vi <file>
chmod +x <string>
rm <string>
vim <file>
git status
vim <file>
clear
git add <string>
git status
git status
git hist
ls
git pull -u <string>
vim <file>
sudo pacman -S <string>
cp <string>
awk <string>
<directory> <directory>
sudo nano <file>
rm -rf <string>
git status
tail -f <directory>
cp -r <directory>
history -d <string>
cd <directory>
cd <directory>
ps
chmod u+x <string>
fg
cd ..
du -chs <string>
docker logs <file>
ls
sudo dpkg -i <file>
su root
ls
sudo ifconfig en0 ether <string>
cd
git status
cd <string>
read -p <string>
sudo make install
ls
git add .
clear
sudo apt-get install -y <string>
git branch 2> <directory>
mkdir <string>
cat <string>
ls
rm -rf <string>
rm -rf <string>
mkdir -p <string>
python3 <file>
sudo tail -f <directory>
npm i sass -D
fg
ssh <string>
cd <string>
mkdir <string>
git add .
cd <string>
sudo poweroff
npm install
cd <directory>
git commit -m <string>
wget -O <file>
sudo apt-get install <string>
npm i
tmux kill-session
wget -q -O <file>
npm i
export <string>
cd <directory>
sudo curl --data <string>
cd
time go run <file>
su
find . -empty -type <string> -print -delete
vim <file>
ls
npm install -g <string>
cd <directory>
vim <file>
ls
sudo i2cdetect -y <number>
ls
chmod <string>
git rebase -i <string>
git push
sudo pacman -S <string>
then\
cp <string>
sudo nginx -t
git status
git status
grep --help
nano <file>
cd ..
git restore <file>
ls
vi <file>
nano <string>
sh
grep -v <string>
cd <string>
cp <string>
sed -i <directory>
curl <string>
git add .
ls
git pull
code .
mv <string>
cd <string>
sudo apt update -y
find . -type <string>
tar xzf <string>
chmod +x <string>
clear
help
sudo crontab -e
vim <file>
find . -type <string> -exec <string> <directory> {} +
ls
sudo update-alternatives --set <string>
ls
ls
read -sn <number> -p <string>
cd <directory>
git log
chmod <number> <string>
git grep -e <string> -e <string>
git status
head -n <string>
mkdir <string>
git checkout -b <string>
du -sh
ls
sudo pacman -s <string>
grep <string>
ls
exit
docker-compose up
ls
df -h
mv <string>
ls
rm <string>
service apache2 restart
cd <directory>
git push
sudo cp <file> <file>
clear
git push
sudo nano <string>
cd <string>
sudo groupadd -r <string>
cd
git status
find . -name <file> -type <string> -print -delete
npm run build
sed -i -e <string>
ls
cd <string>
git
git commit -m <string>
rm <string>
git stash
git remote add origin <URL>
docker-compose logs
git add <string>
git clone <URL>
npx create-react-app <string>
ls -a
ls
ls
git filter-branch --index-filter <string>
git add .
ls
bash <file>
ssh dirlic@10.18.0.39 -p <number>
git pull
sudo pip install <string>
vim <file>
ls
clear
cd <string>
diff <file> <file>
python3 <file>
ls
cd <directory>
nano <string>
mv <string>
ls
cd <string>
mv <string>
docker-compose up -d
exit
ls
dir
ls
read -rp <string> <string>
ls
ls
vi <file>
sudo apt install <string>
python3 <file>
docker image <string>
cd ..
less <string>
apt-get update
cd <string>
git init
ls
npm i <string>
sh <file>
cd ..
usermod -aG <string> <string>
git add .
cd <string>
touch <file>
ls
cat <string>
exit
grep
sudo apt-get update
<file> program
cd ..
ls
su -
mv <string>
cd
npm i <string>
cd <directory>
sudo aptitude purge <string>
grep <string>
npm audit fix
git clone <URL>
vi <file>
ls
ls
ls
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
npm install --save <string>
ps -aux
git clone <URL>
fg
cd <string>
cat <string>
awk <string>
git add <string>
cd <directory>
htop
cut -f <number> -d <string>
localectl set-x11-keymap <string>
cd <string>
ls
cd <string>
sudo nano <file>
exit <number>
ls -la
service <string>
npm install -g <string>
ls
awk <string>
which <string>
history -a
ls
exit <number>
cd <directory>
ls <directory> -ld
vim
git pull
wget -q -O <file>
sudo serve -s <string>
cat <string>
mkdir <string>
tmux
nc-docker --help
git add -A
nano <file>
mv <string>
vim <file>
ls
reboot
ssh-keygen -t <string> -b <number> -C <file>
ruby -e <string>
git status
git add .
cd <string>
sudo make install
npm run bench -- -c <file> -n <file>
mv <string>
curl -sSL --fail <directory>
cd <directory>
ls
ls
git push
ls
sudo dpkg -i <file>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
git add .
git clone <URL>
ls
dir -l
ls -l
mv <string>
sudo dpkg --remove <string>
git commit -am <string>
ls
su -c <string> -O - <directory>
cat <string>
clear
rm <string>
cp <string>
cat <string>
git add <string>
cd <string>
ls
ping -c1 -W <number>
ls
go build <file>
python3.11 <file>
git commit
vim <file>
ls
git restore <file>
sudo reboot
ls
ping <string>
ls
git checkout <string>
git add <string>
ls
fg
docker-compose logs
done
exit <number>
ps aux
cat --color=<string> <file>
ls
npm install <string>
clear
sudo chown --reference=<file> <file>
clear
ls
ls
git pull origin master
cd ..
mkdir <string>
git reset HEAD --2023/
sudo -i
rm <string>
npm run test
cd -
ls
git push origin master
ssh dirlic@10.18.0.39 -p <number>
sleep <number>
ls -l
sudo make
sudo sed -i <directory> <file>
ssh <string>
ls
sed -n <string>
cd <string>
clear
ls
<directory> <string>
ls -alrt
cat <string>
cd <directory>
git rebase -i <string>
sudo dmidecode -s <string>
docker inspect --format <string>
git init
rm -rf <string>
read -r <string>
chmod +x <string>
cd <directory>
git add <string>
ls
grep <string>
grep -vw <string>
find . -type <string> -exec <string> <directory> {} +
tail +n # Print nth line from file.
dpkg -L <string>
head <filename> # outputs the first lines of file (default: <number> lines)
ls
sudo apt-get install <string>
cd <string>
cat <string>
git status
fg
sed
cp <string>
ping <string>
cd <string>
cd <string>
ls
clear
rm -rf <string>
git -C <string>
ls
sudo npm install -g <string>
pulseaudio
top
ls
npm install
ls
cd <string>
git push -u <string> main
tmux attach -t <string>
git add <string>
ls
ls -latr
ls -al
exit
cd <string>
ls -la
git revert <string>
rsync <directory>
less
python3 <file>
cd <string>
cd ..
cp -ip <string>
git commit -am <string>
sleep <number>
cd ..
git add <string>
sudo apt-get upgrade -y
cat <string>
ls
source <string>
cd <string>
cd <directory>
clear
vim <file>
git init
exit
man <string>
ls
vi <file>
sudo mv <string>
rm -rf <string>
cd <string>
df -t <string>
cd <string>
cd <directory>
ls
git clone <URL>
systemctl stop <string>
touch <file>
systemctl status <string>
ls
mkdir <string>
git commit -m <string>
git init
screen
find . -iname <string>
cd <string>
git add .
mkdir <string>
source <string>
find -name <string>
git log
rm <string>
git tag <string>
cd <directory>
clear
cd <directory>
git clone <URL>
ls -laSh
git commit -m <string>
git commit -m <string>
vi <file>
cat <string>
fg
sudo ufw <string>
ls
git stash
ls
chmod <number> <string>
clear
ls
exit
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
ls -a
ls
npm i <string>
exit <number>
source <directory>
sudo apt-get install -y <string>
npm run bench -- -c <file> -n <file>
vim <file>
exit
ls
bash
mkdir <string>
clear
grep <string>
ls
ls
git push
git add .
fg
sudo service nginx reload
mv <string>
sudo apt autoremove
vi <file>
then
cd <directory>
ls
cd <directory>
git add <string>
ls
ls
ls
git status
git status
reboot
cd <string>
clear
ls
clear
git status
git status
clear
ls
less
git push origin
git remote add origin <URL>
cd <directory>
sort -u
tr <string> <string>
ls
ls
npx tsc --init
kubectl <string>
git config --replace-all <file>
ls
<directory> <string>
grep -e <string>
git commit -m <string>
cd <string>
cd <string>
git git
rm <string>
mv <string>
exit
rm -rf <string>
cd <directory>
ls
git clone <URL>
ls -l
git commit
ls
vim <file>
ls
cp <string>
ls
git branch
bash
wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=<string> --domains <file> --no-parent <URL>
ls
git remote add origin <URL>
sudo aptitude install <string>
mv <string>
cd..
ls
ls
exit
cd
sed -i -e <string>
git push
sudo
cd ..
clear
sudo rm -r <string>
cd ..
brew install <string>
git status
git commit -am <string>
bash <file>
git push -u <string> main
git branch
sudo apt install npm -y
top
exit <number>
python3 <file>
cd <string>
npm install <string>
git commit -m <string>
python3 <file>
rm -rf <string>
read <string>
vi -t <string>
git push -u <string> main
git commit -m <string> --no-verify
export <string>
mount
git init
sudo cat <directory>
apt-get update -y
sudo yum install httpd -y
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
nano <string>
cd <string>
ls -la
cd
sysctl status <string>
sudo pacman -S --noconfirm <string>
git pull
sleep <string>
sed -i <directory>
cat <string>
ls
npm install -S <directory>
git clone <URL>
dpkg -i <file>
cd ..
ls
tmux a
mkdir <string>
source <directory>
git status
vim <file>
rm -i <string>
ls
cd ..
mvn compile
ls
git commit -a -m'WIP: <string>
git commit -m <string>
ls -la
<directory> <string>
cd <directory>
vim <file>
ls
cd <string>
cd <string>
sudo sed -i <directory>
ls
cd <string>
cd <string>
vi <file>
git add .
cd <string>
ls
vi <file>
unset <string>
npm run start
ls
sudo apt-get install -y <string>
docker rmi -f <string>
ls
cp <string>
rm <string>
source <directory>
xargs -0 <string> -i <string> -e <directory>
tr <string> <string>
ls
exit <number>
history -w
ls
sudo sed -i <directory>
ls
ls
npm install -g <string>
git clone <URL>
sudo ufw enable
ls
gpg --dearmor
ls -la
rmdir <string>
cd <string>
apt-get update
cd <string>
cd ..
rm <string>
ls
find . -name <file>
cd..
history
npm install -g <string>
vim <file>
cd
more <file>
cd <string>
ls
sudo systemctl enable <string>
clear
du -kx
git push -u <string> master -f
cd <string>
sudo chmod <number> <directory>
docker run -it --rm -v <string>
sudo -H <string>
git add .
sudo vim <file>
sudo lvcreate -L <string>
ls
curl --location <directory>
cd <string>
cd <directory>
ls
cd <directory>
clear
git push -u <string> main
wget <URL>
cd <directory>
git commit -m <string>
git help -g
sort
docker rm <string>
vi <file>
ls
cd ..
sudo pacman -S <string>
sudo rm -rf <string>
sudo apt -y <string>
ls
mvn compile
node
git remote add origin <URL>
php -S <string>
mkdir -p <string>
git add .
git pull
cd <string>
exit
docker-compose logs
git add <string>
ls
ls
mvn exec:java
ls -la
cd <string>
touch <string>
cd ..
git commit -m <string>
ssh -p <string> user@host # connects to host on specified port as user
ls
grep -r <string>
ls
sudo chmod +x <directory>
wc -l
nano <file>
ls
git push -u <string> main
cd..
kubectl get <string>
cp <string>
vi <file>
ls -la
tail -f <directory>
ls
exit
docker-compose stop
nano <file>
find . -empty -type <string> -print -delete
clear
cd ..
exit <number>
do\
git stage
git add <string>
git add <string>
ls
cd ..
top
cd <string>
rmdir <string>
sudo apt-get install -y <string>
sudo npm install -g <string>
exit
sudo apt update
ps -ef
read -r -p <string>
vim <file>
cd <string>
git commit -m <string>
ls -ltr
fg
tr <string>
rm -r <string>
tar --help
cd ..
git pull
vim <file>
rm -r <string>
rm -f <string>
ls -ltr
vim <file>
sudo gem install <string>
sudo apt-get install <string>
git add <string>
su
ls
ls
sudo apt-get -y <string>
vi <file>
ls
wget -t <number> --max-redirect <number> --retry-connrefused -O <string>
ls
uniq
git push
git commit -C <string> --no-verify
cd <directory>
curl -s <string>
which -as <string>
cd
sudo vi <directory>
cd <directory>
cd <directory>
nano <file>
cd <directory>
touch <string>
history
ls
git branch
cd ..
exit <number>
cd <directory>
cd <string>
vi <file>
ls
clear
which <string>
git clone <URL>
apt-get clean
git pull origin development
cd <string>
sed -i <directory>
sudo dpkg -i <file>
git --work-tree=<string> --git-dir=<string> <string>
rm <string>
cd <string>
cd ..
cd <string>
ls
git commit --amend
sleep <number>
pwd
vi <file>
git commit -m <string>
ls
tail -f <directory>
ls
less
rm <string>
read -rp <string> <string>
git commit -m <string>
sudo apt-get install -y <string>
cd <directory>
sed <directory>
cd <string>
sudo docker pull <string>
chmod <number> <string>
find . -type <string>
git diff
chmod <number> <string>
fg
file <string>
fg
ls
vi <file>
vi <file>
ls
ls
sed -E -e <directory>
true
ls
clear
vim <file>
exit
egrep <string>
vim <file>
ssh-agent
cd
git commit -m <string>
ls
git rebase -i <string>
rm -rf <string>
sudo reboot
sudo ldconfig -n <directory>
cd <directory>
grep <string>
sort
git push
sudo mkdir <directory>
ls
tail
git add <string>
sudo nano <directory>
sudo docker run -d -p <string> --name <string>
vi <file>
cp <string>
ssh -p <string> user@host # connects to host on specified port as user
sudo chmod a+rwx <directory>
chown -R <string>
cd <directory>
cd <directory>
touch <string>
git commit -m <string>
fg
cp -r <directory>
cd <string>
cd ..
ls
apt-get install <string>
git add.
ls
git status
cd <string>
ps -auxwf
apt-get update
ls
ls
vi <file>
ls
cd <string>
git commit -m <string>
cd <string>
git add .
cd <string>
<directory> <string>
cd
rm -r <string>
cp <string>
cd <string>
ls
vi <file>
git patch <string>
git init
ls
ls++ -a
vim <file>
sudo npm install n -g
vi <file>
ls -lh
source <file>
cut -f <number> -d <string>
git pull
cd <directory>
git commit -m <string>
ls
sudo chmod u+x <file>
ls
ls
service <string>
sudo sed -i <directory> <file>
fg
ls
git commit -m <string>
sudo cat <directory>
sudo lpoptions -d <string> -l
cd
sudo systemctl status prometheus
cd ..
sudo nano <directory>
cd <string>
cd <string>
sed -E -e <directory>
ls
npm init -y
fg
sudo <file> -v -r -w <string> -o <string>
vim <file>
service apache2 restart
sudo apt update
ls
ls
sudo pip3 install <string>
sudo pacman -R <string>
clear
git add .
ls -l
ls -lh
gsettings set <file> <string>
git st
<directory> <string>
git push -u <string> main
ls
cd <string>
mv <string>
rm <string>
git rm --cached <string>
cat <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
cd <directory>
dpkg -L <string>
exit
done
ls
sudo apt-get install -y <string>
cd ..
which <string>
ls
cd <string>
ls
ls
less
curl -fsSL <URL>
rm -rf <string>
vi <file>
git diff
pwd
sleep <number>
ls
git init
mv
wget -r <URL>
cd <string>
fg
systemctl daemon-reload
cd <string>
git init
source <string>
git init
git commit -m <string>
export <string>
ls
git fetch --all
ls
ls
clear
npm run start
git remote add origin <URL>
ls
docker run -d <string>
vim <file>
chmod +x <string>
ls
sudo chmod -r--r--r-- <directory>
docker-compose up -d --build
ls
cd ..
git status
git config --global <file> <string>
ls
touch <file>
ls
vi <file>
ls
sed <directory>
git push origin master
sudo sed -i <directory>
git add .
git status
exit
sudo sed -i <directory>
cd <string>
cd <string>
screen
pwd
vim <file>
sudo usermod -aG <string> <string>
wget <URL>
python3 <file>
git reset
vim <file>
top
sudo vi <directory>
sudo node <file>
cd ..
df -h
cd <string>
clear
cd ..
clear
cd <string>
sudo vim <directory>
cd <string>
sudo -u <string>
vim <file>
su root
cd ..
ls -lAF <string>
cd <string>
sudo git commit
sudo nohup mongod --fork --logpath <directory>
clear
cd <directory>
vi <file>
git pull
ls
cut -c60-61)
find . -name <file>
git log
cd <string>
sudo a2enmod <string>
rm -f <string>
git status
python3 <file>
rails --version <string>
ls
df -h
cp <string>
tail -f <directory>
rm -r <string>
vi <file>
find .
mvn archetype:generate -DarchetypeGroupId=<file> -DarchetypeArtifactId=<string> -DarchetypeVersion=<string>
sudo apt-get update
clear
git status
git merge -s <string> --no-commit <string>
git commit -m <string>
sort -u
ls
git add <string>
cd <directory>
ls
git clone <URL>
touch <string>
ls
sed -i <string>
exit
git config --add --global <file>
git status
git checkout -b <string>
du -sh -- <directory>
cd <string>
python3 <file>
mkdir -p <string>
rm -rf <string>
ssh -i <string> -p${LOCAL_PORT} <string>
source <file>
cd ..
kubectl get <string>
cat <string>
sudo python <file>
git status
curl <string>
ssh <string>
htop
clear
fg
cd <string>
sudo chmod a+rwx <directory>
cd <directory>
cd ..
sudo apt-get update
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
vim <file>
ls
ls
find <directory> -name <string>
git push -u <string> master
ls
sudo apt-get install -y <string>
cd ..
ls
rm -rf <string>
git log --oneline
git reset <string>
ls
scp <string>
rm -Rf <string>
nano <file>
git add <string>
rm <string>
ls
man <string>
cd ..
vi <file>
history -a
ls
git push
exit
shutdown -h <string>
ls
ls
vim <file>
cd <string>
tar -C <directory> -xvz
ls
ls
xargs -L1 <string>
cd <string>
capsctrl <string>
ls
rm -r <string>
vim <file>
git commit -m <string>
git commit -m <string>
grep <string>
find -name <string>
cd <string>
exit <number>
ls
date
cd <directory>
cp <string>
df # shows disk usage
wget -O <file>
ls
clear
git --version
ls
cd <string>
cd ..
ln -s <string>
vim <file>
sudo apt-get install -y <string>
ls -a
cd ..
su
vim
sudo apt-get update\
git add.
rm <string>
ls
vim <file>
cd <string>
sed -i <string>
rm -rf
git status
sudo chmod <number> <directory>
ls
ls
cd ..
exit
ls -la
wget <URL>
clear
ping <file>
ssh dirlic@10.18.0.39 -p <number>
sudo chmod +x <string>
npm i <string>
sudo apt-get update
ls
sudo flatpak override --env=<string>
ls
cd ..
pacman -Qdt
git add .
fg
rm -r <string>
ls
chmod -R <string>
vim <file>
find . -iname <string> -exec <string> -rf <string>
man -k <string>
ls
ls
awk -F/ <string> -1
ls # lists your files in current directory, ls <dir> to print files in a specific directory
ls
read -rp <string> <string>
git pull origin <string>
git cm -m <string>
cd <string>
git config --global <file>
cd ..
cd <string>
ls
cd <string>
grep <string>
nohup node <file>
ls
rm -rf <string>
ls
xargs -d <string>
cd <string>
sudo systemctl stop <string>
shutdown -hP <string>
sudo chown <string>
rm <string>
git branch
python <file> runserver 0.0.0.0:2016
kubectl apply --filename <file>
sudo <file> -v -w <string> -o <string>
tee <file>
rm -Rf <string>
npm i
grep -i <string>
unset -f <string>
rm -Rf <string>
npm i <string>
git config --global <file>
tmux a
ls
cd <directory>
sed -E -e <directory>
exit
vim <file>
mv <string>
cp <string>
grep <string>
clear
fg
sed -i <string>
ls
vim <file>
ls
sudo update-alternatives --config <string>
ps axfu
curl <string>
rm -rf <string>
setg RHOSTS.*
sudo rmdir -r <string>
git add <string>
npm run start
git checkout <string>
ls
cd ..
apt list --upgradable
sudo systemctl restart nginx
ls
sudo -i
rm <string>
ls
docker exec -it <string> bash
shutdown -h <string>
clear
vi <file>
git add .
clear
apt install -y <string>
find . -empty -type <string> -print -delete
chmod <number> <string>
ls
ls
ls
ls
open <string>
ls
bash
ls
vim <file>
strings <file>
curl -G <directory>
exit
ls
sudo apt-get update
ls
wget -r <URL>
vim <file>
sudo add-apt-repository <string>
grep <string>
cd
sudo sed -i <directory> <file>
cd <string>
ls -l
ps -ef
ls
sudo tee <directory>
ls
docker-compose up -d --build
cp -r <directory>
fg
cat <string>
touch <string>
ls
sed <directory>
vim <file>
cd <directory>
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
ssh <string>
ls
ls
ls
exit <number>
cd <directory>
nano <string>
clear
open .
ls
ls
ls -lAF
sort -k2,2 -nr <string>
ls -la
mkdir <string>
cd ..
docker ps
ls
df -lh
npm init
cp <string>
file <string>
clear
mkdir -p <string>
exit <number>
rm -r <string>
sudo tee <directory>
ls
rm <string>
ls
git checkout master
find . -name <string> -type <string> -exec <string> -c <directory> -- <string>
vim <file>
git stash
pwd
cp -v <string> <directory>
sudo mount <directory>
git push
apt install -y <string>
cd <string>
cd <directory>
setg RHOSTS.*
less -S
sudo su
find . -empty -type <string> -print -delete
mkdir -p <string>
clear
git diff <string>
exit
cd <directory>
sudo -u <string> rm -rf <directory>
cd ..
git describe HEAD
cd <string>
git status
sudo vi <directory>
clear
fg
git add <string>
ls
git commit -m <string>
cd ..
cat <string>
ls
cp <string>
sudo journalctl -u <file>
git add .
sudo vim <file>
cd ..
ssh-keyscan <string>
apt-get install <string>
cd <string>
sudo apt upgrade -y
npm run bench -- -c <file> -n <file>
sudo apt get <string>
cd <string>
ls
rm <string>
wget <URL>
ls
mkdir <string>
npm http GET <URL>
vim <file>
sudo apt-get update
more
source <string>
source <file>
sudo halt
fg
cd
wget -q <string> -O <file>
cat <string>
git add .
rm -f <string>
ssh <string>
cd
sh
rm <string>
cd <string>
docker image <string>
fg
git rm <string>
cd ..
ls
cd <string>
cd <string>
sudo snap install beekeeper-studio --classic
ls
sh
npm -v
git add <string>
git branch
pwd
clear
ls
wget <URL>
git fetch upstream
ls
vi <file>
clear
ls
ls
cd ..
fg
git add <string>
git push origin
clear
wget --content-disposition <string>
git status
read -rp <string> <string>
touch <file>
vim <file>
ls
sudo python3 <file>
sudo start uwsgi
awk -F\" <string>
ls -la
userdel ken
git clone --depth=<number> <URL> <directory>
setg RHOSTS <file>
find <directory> -mtime -1 -ls
git remote -v
git co PTS-578_redirects_not_updating_automatically
rm -r <string>
git clone <URL>
ls
git config --global <file> <file>
cd <string>
mv <string>
git status
sudo nala install <string>
cd <directory>
vim <file>
mkdir <string>
python3 <file>
git symbolic-ref HEAD <directory>
code <string>
sudo apt update
npm install -g <string>
ls
git stash
source <string>
sudo apt update
usermod -aG <string>
git init
git add <string>
nano <string>
git status
vi -t <string>
read -p <string>
ls
cd <directory>
xargs -L1 -I'{}' <string> -rE <string>
cd <string>
cd <string>
cd <string>
git add .
git push
clear
vim <file>
cd <directory>
cat <string>
fg
<directory> <string>
clear
vi <file>
ls
ls
docker ps -a
top
vi <file>
cd <string>
vim <file>
ls
cd ..
ls
ls
cd <string>
ls
git commit -m <string>
git checkout master
mkdir <string>
sudo apt update
mv <string>
ls
git commit -m <string>
grep -R <string>
ls
date -I <string>
uname -a
git remote remove origin
ls
vi <file>
exit
export <string>
cd <string>
clear
tar -xf <string>
clear
cd <string>
grep -v <string>
git push origin <string>
code .
git pull origin master
cd <string>
xargs sed -i -e <directory>
df
apt-get remove <string>
ls -l
ls
sudo vi <directory>
sudo nvim <directory>
ls -la
git status
code .
python3 <file>
vim <file>
ls
cat <string>
cd -
ls
cd
git push -u <string> main
ls -alF
find . -name <file> -type <string> -print -delete
cd
ls -lh
ls
cd <string>
sudo apt-get update
wc -l
cd <string>
vim <file>
cd ..
cd <directory>
find . -empty -type <string> -print -delete
perl -ne <string>
ls
more
fg
cd <string>
cd <string>
cp <string>
ls -al
which <string>
chmod +x <string>
cd <string>
touch <file>
exit
rm -rd <string>
ls -a
sudo dpkg -i <file>
grep <string>
cd <directory>
git checkout <string>
sleep <string>
exit
rm <string>
git commit -m <string>
cat <string>
tmux
cut -d <string> -f <string>
curl -s <URL> -o <directory>
git commit -m <string>
vim <file>
cat <string>
docker-compose exec <string>
npm login
git clone <URL>
ls
ls
exit
cd
vim <file>
cp -r <directory>
vi <file>
vi <file>
ls
sudo -s -u <string> -H
chmod +x <string>
ls
sudo yum install -y <string>
git fetch
git reset --soft
which -a <string>
cd <string>
ls
ls
vim
apt install <string>
cd <string>
npm run dev
mkdir <string>
cd <string>
exit <number>
rm <string>
git status
exit
git commit -v -a -m <string>
which <string>
less
sudo python3 <file>
ls
ls
fg
sudo mkdir -p <directory>
ls
git checkout
time go run <file>
sudo update-crypto-policies --set <string>
git tag -a <string> -m <string>
less <string>
git checkout -b <string>
git fetch
ssh dirlic@10.18.0.39 -p <number>
less <string>
git checkout -b <string>
cp <string>
git add .
find . -name <string> -print
df
history
git diff
vim <file>
ssh <string>
find . -name <file>
cd <directory>
ls
git remote add origin <URL>
cd <string>
cat <string>
git status
git rm --cached <string>
exit
find . -maxdepth <number> -type <string> -executable
ls
ls
git branch
touch <file>
sudo poweroff
git push origin master
ssh -p <string>
cd <directory>
sudo mount <directory> -o <string>
vim <file>
sudo apt install -y <string>
grep <string>
code .
git pull origin master
git remote add origin <URL>
ps aux
git push -u <string> master
ls -la <directory>
ls
git log
ls
python3 <file>
cd
more <file>
cd <string>
rm -r <string>
cd <string>
mkdir <string>
cd <string>
vim <file>
rm <string>
cd ..
cd <string>
vi <file>
ls
npm run develop
cat <string>
sudo chmod <number> <string>
cd <directory>
sudo updatedb
ls
git remote add origin <URL>
python3
clear
grep <string>
ls
ls
ls
grep <string>
cd <string>
psql -h <string> -U <string> -d <string> -L <file> -a <string>
clear
python3 <file>
grep <string>
ssh <string>
do\
ls
ls
git push
cd <string>
sudo mkdir <string>
sed <directory>
git pull
git commit --amend --no-edit --no-verify
ls ..
cd <directory>
vim <file>
sudo chown -r <string>
rm -rf <string>
psql -h <string> -U <string> -d <string> -L <file> -a <string>
sudo systemctl start <string>
vim <file>
vim <file>
git checkout master
git add .
ls
ls
grep -i <string>
exit <number>
unset color_prompt force_color_prompt
python3 <file>
kill -9 <string>
cd ..
fg
git push origin
export <string>
ls
git push -u <string> main
sudo chmod -R <string>
sh <file>
sudo apt-get install <string>
ls
clear
sudo sed -i <directory>
cd <string>
cd <string>
cd ..
cd <directory>
cd <string>
type <string>
history -w" <string>
cd ..
less <string>
cd <directory>
exit
cd ..
git config --global.username
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
setg RHOSTS <file>
mv -f <string>
pwd
rm -rf <string>
grep --help
rm -f <string>
ls
ls -Tl
npm install
rm <string>
source <file>
npm run dev
git branch 2> <directory>
sudo apt-key fingerprint <string>
cd
cd <string>
screen
cd ..
rm <string>
git commit
fg
cd -
cd <string>
shred -uz <directory>
git help <string>
chmod +x <string>
git fetch upstream
mkdir <string>
ls
source <directory>
cd <string>
cd <string>
clear
bash
sudo apt-get install python3-pip -y
ls
cd <directory>
systemctl status <string>
git commit
ls
ls
sed -e <directory>
ls
ls
grep <string>
cd <directory>
apt install -y <string>
vi <file>
kubectl --namespace <string>
sed <directory>
ls
rm <string>
ls
fg
sudo dnf install <string>
apt-get install <string>
cat <string>
command -v <string>
ls
nano <file>
sudo apt-get update
python3 <file>
ls
fg
git pull
exit <number>
tmux new-session -d <string>
vi <file>
git fetch origin\
awk <string>
git push
ls
docker rm -f <string>
more <file>
ls
sudo cat <directory>
git pull
rm -r <string>
cd ..
cd <directory>
cd <directory>
clear
cd <string>
exit
cd <directory>
vi <file>
sudo apt-get upgrade
gunzip <file>
git status
cd <string>
cd <string>
sudo virsh -c <directory> <string>
cd <directory>
clear
cd ..
cd ..
vi <file>
git pull origin development
grep <string>
git rev-parse --short=<number> <string>
vi <file>
git commit -m <string>
cat <string>
vi <file>
ls
clear
git clone <URL>
dir
git add .
cd <string>
npm start
export <string>
git checkout master
cd <directory>
apt-get -y -qq <string> <string>
cd <string>
clear
cat -n <string>
git status
fc-cache -f -v
cd <string>
git status
git stash pop --quiet --index
vi <file>
ls -alF
git commit -m <string>
ls
read <string>
vi <file>
clear
git pull
git add <string>
apt list --upgradable
ls
git add .
su chmod <number> <file>
cat <string>
docker-compose up
ls
git status
cut -f-12,16,17,21- <string>
cd <string>
npm install mongodb@2.2.33 --save
ls
sudo make
ls -la
vim <file>
htop
cd <string>
curl <string>
ls
df -ThH
cd
apt-get update
git tag <string>
git add .
git commit -m <string>
ls
git clone <URL>
touch <string>
cd <string>
python3 <file>
find . -name <file> -type <string> -print -delete
bash <file>
git status
sudo <directory> <string>
dir
sudo apt install <string>
ls
fg
git remote add origin <URL>
vi <file>
ls -C -w <string> --color=<string>
ls
sed <directory>
fg
type <string>
read -p <string>
ls
ls
git init
ls
grep <string>
cat <string>
wget -r -l <number> -nd -nH -A <string>
ls
git push origin master
cd <string>
sed -i -- <directory>
sudo nvidia-settings -a <directory>
sudo systemctl enable <string>
read -r <string>
git push --set-upstream <string> main
git grep <string>
ls -al
unset color_prompt force_color_prompt
source <file>
cat <string>
vim
tmux a
git please
sudo apt-key fingerprint <string>
rm -rf <string>
git push origin
clear
ping <string>
cd
grep <string> -rl <string>
cat <string>
git clone <URL>
ls
cd <directory>
cd ..
ls
sed <directory>
cd ..
git blame -w -M
ls
docker-compose up -d --build
clear
cd <directory>
mv <string>
source <directory>
ls
git push -u
git status
find . -empty -type <string> -print -delete
vim <file>
code .
cd <string>
done\
sudo pacman -Syu
ls
clear
git status
clear
ls
ls
cat <string>
git add
<directory> <directory>
ls
git branch -d <string>
ls
git pull
cd <directory>
ls
curl <string>
grep -rni --include=<string> <string>
cd <string>
ls
curl -LO <string>
sudo python <file>
npm i
ls
cd
ls
git push --set-upstream <string> master
clear
git remote remove origin
sudo tee <directory>
cd <directory>
ls
ls
vi <file>
grep -i <string>
cd <string>
nano <file>
docker network ls --format <string>
ls
rm -rf <string>
scp <string>
docker-compose down
sudo apt-get install -y <string>
cd <string>
ls
cd
export <string>
exit
export <string>
exit
sudo shutdown -r <string>
cat <string>
exit <number>
git add <string>
git --version
cd ..
apt-get update
ls
vim <file>
sudo systemctl start <string>
cat <string>
sudo journalctl -u <file>
more <file>
ls
cd <string>
ls
sudo apt-get install <string>
cd <string>
curl -s <string>
cd <string>
mv <string>
ls
cd ..
fg
less <string>
cd <string>
ls
sudo docker rmi <string>
ls
cd <directory>
ls
sudo apt-get update
vi <file>
ls
code <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
dpkg --list
ls
docker stop bigballers
find <directory> -name <string>
ls
cd <string>
cd <string>
git push origin master
ls
git init
sudo rm -rf <directory> <directory>
mv <string>
ls
git pull
vi <file>
vim <file>
cd
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git branch
vim <file>
git remote add origin <URL>
git pull origin development -f
npm install
exit
ls
vim <file>
cd <string>
ls
ls
cd <string>
git add .
git push -u <string> main
find <directory> -type <string>
ls
npx <string>
sudo apt-get install <string>
sudo pacman -Syu
clear
ls -l
npm start
clear
ls
ls
git commit -m <string>
clear
brew install <string>
git hist
tar -xvf <file>
ls -l
cd <directory>
npm http GET <URL>
ls
git init
find . -name <string> -print
sudo vim <file>
git add .
fg
git add <string>
git push
sudo apt-get -y <string>
git add <string>
sudo sed -i <directory> <file>
read -r -p <string>
rm <string>
git diff <string>
local <string>
clear
ls -1 <directory>
cd <string>
cd ..
git status
wc -l
cd ..
sudo apt-get install <string>
git commit -m <string>
python3
git commit -m <string>
ln -s <string>
rm -rf <string>
history -r <string>
apt-get install <string>
type -a <string>
clear
git checkout <string>
cd <string>
cd <string>
apt list --upgradable
vim <file>
ls
vim
less <string>
curl <string>
find $1 -type <string> -iname <string> -print0
cd <directory>
git add <string>
cd <string>
clear
ls -a
cp <string>
cd ..
ls
clear
sudo sed -i <directory> <file>
ls
ssh dirlic@10.18.0.39 -p <number>
git submodule update --remote --merge
ls
ls
do\
then\
curl -T <directory> <string>
npm install <string>
git grep -l <string>
git status
python3 <file>
exit
find . -empty
vi <file>
rm -r <string>
cd <string>
clear
node
ls
ls
exit
ls
exit <number>
ls -l
ls
ls -la
sudo apt install <string>
df -h
ls
touch <string>
cd <string>
vi <file>
ls
git config --global <file>
cd ..
git st
cd
git pull
kill <number>
mkdir -p <string>
dpkg -i <file>
systemctl mask <file>
exit
git push -f
git remote add origin <URL>
rm -rf <string>
ls
git commit -m <string>
ls -a
history -a
mvn install -D <string>
composer <string>
grep <string>
cd <directory>
ssh <string>
clear
cd <string>
cd <string>
vi <file>
git remote -v
cd ..
groups
git add <string>
clear
sudo tee <directory>
mkdir <string>
xargs -0 <string> <string>
vim <file>
git pull
ps ax
ls
vi <file>
git add <string>
exit
read -r -p <string>
nano <file>
git add .
git diff
clear
git fetch upstream
cd <directory>
ls
systemctl start <string>
cd <string>
ln -s <string>
touch <string>
ls
ls
rm -rf <string>
npm i
ls
wget -qO- <URL>
cd <string>
vim <file>
sudo nano <file>
vi <file>
ls
ls
fg
sudo apt install -y <string>
find . -empty -type <string> -print -delete
do\
ls
done
git clone <URL>
exit
wget <URL>
git init
sudo stop uwsgi
mkdir <string>
git push
python3 <file>
git reset --hard <string>
vi <file>
cat <string>
cd ..
sudo fdisk -l
ls
git push -f
pwd
docker logs <file>
git init
mv <string>
ssh -p <string> user@host # connects to host on specified port as user
ls
python3 <file>
else\
git clone <URL>
vi <file>
ls
ls
npm run start
man <string>
ls
npm start
ls
ls -la
sudo apt-get install -f
ssh <string>
export <string>
git commit -m <string>
docker-compose up -d --build
cd <string>
grep <string>
cd <string>
fg
npm run start
sudo rm -rf <directory> <directory>
ssh <string>
ls
find <directory> -name <file>
sudo sed -i <directory> <file>
cd <string>
cd ..
tmux source-file <file>
sudo dpkg -i <file>
vi <file>
vi <file>
ls
find -type <string> -exec <string> <number> <string>
mvn clean
ln -s <string>
git commit -m <string>
mv <string>
cd <directory>
fg
ls
sudo yum-config-manager --add-repo <URL>
sudo sed -i <directory> <file>
ls -la
mkdir <string>
clear
cp -r <directory>
exit
ls
ls
git add <string>
python3 -m <string> install <string>
git status
sudo ls <directory>
chmod <string>
rm -f <string>
cd <directory>
vim <file>
xrandr --output <string> --off
vim <file>
git branch 2> <directory>
diff -u <string>
rm -f <string>
ls
git log --stat
chmod u+x <string>
cd ..
cd <string>
exit
npm i <string>
cd ..
ls
sudo vim <file>
vi <file>
cd <string>
exit
man <string>
ls
cd <directory>
lsblk
git clone <URL>
git commit -m <string>
less <string>
node <file>
git status
ls
cd ..
sudo git pull origin master
git diff
cp <string>
sudo install <string>
npm install --save <string>
cd <string>
clear
cd <string>
ls
read -p <string>
ls
ls -la
sudo systemctl reboot
sudo apt-key add -
clear
wget <URL>
ls
ls -alrt <string>
npm i
mv -f <string>
mv <string>
ls
cd ..
exit
ls
grep <string>
sudo ls -lha <directory>
git commit -am <string>
git add .
yarn add <string>
chmod u+x <string>
ls
vim <file>
exit <number>
git clone <URL>
curl <string>
git rebase <directory>
less
cd
chmod <number> <string>
done
cd <string>
sudo sed -i <directory> <file>
cd
cd <string>
ssh dirlic@10.18.0.39 -p <number>
more <file>
ls
docker-compose up -d --build
git push origin master
grep <string>
npm run test
git add <string>
git rev-list --objects --all
git rm <string>
chmod <string>
ls -l
brew install <string>
read <string>
git add .
sudo rpm --import <URL>
sed -i <directory>
cd
sudo chmod a-x <file>
git remote add origin <URL>
curl -so- <URL>
cd <string>
exit
cd ..
ls -la
cd
sudo vim <file>
mv <string>
git status
vi <file>
cd
reset
find . -name <file>
ls
cat <string>
grep -x <string>
export <string>
df -h
ls
sudo sysctl -w <string>
touch <string>
sudo apt-get install <string>
clear
rm -f <string>
ls
git add .
git add .
rm <string>
ps -o <string>
su
ls
sudo passwd <string>
node
cd <string>
cd <string>
cd <string>
ls
top
ls -la
touch <file>
ls
git push
cd <directory>
git diff-tree --no-commit-id --name-only -r <string>
git status
exit
ruby -rubygems -e <string>
npm install --save <string>
sudo chmod <number> <string>
sed -i <directory>
sudo -s
git pull origin master
help
docker-compose down
mv <string>
fg
clear
find . -iname <file>
ls -R
ls
ls
fg
cd ..
sudo passwd <string>
rm <string>
cd <directory>
cd <string>
npm i -g <string>
sudo lsof -i -P -n
cat <string>
cp <string>
python3 <file>
cd ..
ps -eo <string>
sudo rm -Rf <directory>
cat <string>
ls
read -r <string>
systemctl status <string>
ps ux
clear
less <string>
cd <string>
ls
git pull
cd <string>
git add <string>
mkdir <string>
cd <string>
more <file>
git add .
fg
rm -rf <string>
cd ..
sudo mv <string>
ls
sed <directory>
ls
ls
sudo apt-get remove --purge <string>
sudo systemctl restart nginx
wget <URL>
git commit -m <string>
vi
sudo dpkg -i <file>
cd <string>
fg
sed -i <directory>
wget <URL>
vim <file>
cd.
exit <number>
ls
rm <string>
cd <string>
git rebase -i <string>
mkdir <string>
clear
cd <string>
sudo stop uwsgi
rm -rf <string>
sudo add-apt-repository <directory>
cat <string>
sh <file>
ls
ls
ls -la
git remote add origin <URL>
cd <string>
sudo rm -rf <string>
ls
cat <string>
cd <directory>
exit
ls
head <filename> # outputs the first lines of file (default: <number> lines)
cd ..
ls
vi -t <string>
du -a <string>
git clone <URL>
cd <building_worker_folder> ------- <string>
cd <string>
wget -qcO <string>
cat <string>
git add <string>
curl -fsSL <URL>
git add.
cat <string>
mkdir <string>
ls
mkdir <string>
git commit -m <string>
cd ..
mkdir <string>
cd
find . -empty -type <string> -print -deletefind <string> -empty -type <string> -print -delete
clear
clear
find . -empty -type <string> -print -delete
mkdir <string>
cd <directory>
git add .
cd <string>
cat <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
ls
cd <string>
cd <string>
cd ..
ls
find . -type <string> -mmin -120 <string>
ssh <string>
git diff
cd <string>
chmod <string>
cd <string>
git add <string>
cd <string>
ls
cd <string>
cd <string>
npm i <string>
git fetch
ls -a
sudo chmod --reference <directory>
ssh <string>
mv <string>
clear
awk <string>
ls
git status
rm -r <string>
clear
cd ..
cd <string>
vi <file>
exit <number>
git init
vi <file>
ls
cd <string>
ps aux
sort -k2,2 -nr <string>
du -ach
git pull
ls
rmdir <string>
vi <file>
git
cd <directory>
cat <string>
vim <file>
git add .
cd <directory>
rm -rf <string>
cd <string>
find . -name <string> -type <string>
rm <string>
exit <number>
cd <string>
cd <string>
cp -fR <directory>
cd ..
exit
sudo chmod +x <directory>
clear
cd <string>
docker run -d -p <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
grep <string>
g++ -std=<string> <file> -o <string>
vim <file>
ls
scp <string>
ls
ls -la
cd <string>
grep <string>
sudo <file> -v -w <string> -o <string>
print <string>
ls
rm -r <string>
cd <directory>
cd <string>
cd ..
sudo vim <file>
ls
vi <file>
ls
vi <file>
cd <directory>
history # shows command line history
chmod <number> <string>
sudo -s -u <string> -H
vi <file>
sudo apt install <string>
git add .
git remote -v
cd <string>
sudo rm -rf <string>
exit <number>
cd <string>
git add . -N
sudo python <file>
done
rm -rf <string>
perl -lnwe <string>
touch <string>
sudo make clean install
rm -r <string>
git push
source <string>
npm run dev
clear
hostname
git add .
git status
ls
tail -n <string>
vi <file>
git status
fg
docker ps
ls
local <string>
cd <string>
cd <directory>
chmod <number> <string>
cd
sudo systemctl daemon-reload
helm <string>
code .
mkdir <string>
git add <string>
cd ..
cd <string>
ls
ls -lrt
unset <string>
git commit
sudo service <string>
ping <string>
cd <directory>
ls
date
cd ..
git push
cd ..
ls
python3 <file>
grep <string>
git config --global <file> <file>
rm -r <string>
node
npm start
git status
ls
ls
cd -C -h
docker-compose stop -d <string>
do\
npm install
git add
git clone <URL>
ps aux
cd ..
clear
git init
ls -alrt
ls
cat <string>
ls -latr <directory>
cd <directory>
cd <string>
set
cd ..
read -rp <string> <string>
cd <string>
git init
git commit --allow-empty -m <string>
sed <directory>
ls
pwd
npm install
unset color_prompt force_color_prompt
tar -xvf <file>
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
git commit -m <string>
ls
ls
clear
ls
source <directory>
done
read -p <string>
cd <string>
cd <directory>
docker images
cd <string>
clear
git add <string>
git commit -m <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
screen
git commit -m <string>
git status
ruby <string>
git status
git commit -am <string>
cp <string>
ls
mv <string>
exit
docker build -t <string>
ls
ls
exit
clear
mkdir <string>
cd <string>
git add .
git branch
git push origin main
vim <file>
cat <string>
ls
vim <file>
sudo flatpak override --env=<string>
git add <string>
cd <string>
curl -sSL <URL>
git push -u <string> main
sed -e <directory> -e <directory>
nano <file>
rake <string>
exit <number>
exit
ls -lh
cd <string>
sudo yum install <string>
git commit -m <string>
clear
clear
docker-compose --version
git help <string>
sudo shutdown now
git commit -m <string>
mkdir <string>
ls
exit
cd <directory>
cd <directory>
sudo rm -r <string>
exit
ls
git commit -m <string>
ls
sudo sed -i <directory> <file>
rm <string>
cd
chmod u+w -- <string>
curl -fsSL <URL>
vim
sudo nano <file>
ls
cd <directory>
grep <string>
source <directory>
grep <string>
apt-get install -y <string>
cd <string>
git status
sudo rm -r <string>
cp -r <directory>
sudo i2cdetect -y <number>
ls
cd <string>
git config --global <file> <string> --timeout=<string>
cd <string>
git commit -m <string>
ls -1 <directory>
ls
find . -type <string> \( -iname <file> -o -iname <file> -o -iname <file>
ls
vim <file>
npm start
done
find . -iname <string> -type <string>
cd ..
tail -f <string>
cd ..
sudo nano <string>
git checkout master
git push origin
ls
cp <string>
sudo apt-get install <string>
clear
cd <string>
git status
ls
clear
git push origin
exec <string>
exit <number>
mkdir -p <string>
cd <string>
apt-get install -y <string>
sudo ifconfig en0 ether <string>
sudo sysctl -w <string>
ls
clear
sudo umount <directory>
cp -r <directory>
git init
sleep <string>
clear
sudo apt update
cp -r <directory>
ls
exit
gzip <string>
clear
git commit -m <string>
vim <file>
vim
git checkout -b <string>
cd <directory>
sudo lvremove <directory>
cd
sed -ri <string>
git init
ls -lisa
git add <string>
sudo add-apt-repository <string> [arch=<string> <URL>
cd ..
cd <directory>
cd <string>
npm uninstall --save <string>
ls
cd ..
systemctl
dpkg --list
ls
cd <string>
sudo apt-key add -
du
npm i <string>
mkdir <string>
ls
ls
clear
ls
cd <string>
diff <file>
cd
tmux kill-server
docker build -t <string>
cd <string>
sudo dpkg -r <string>
cd ..
chmod +x <string>
git add .
pbcopy
xargs -r -I <string>
grep -q <string>
rm -rf <string>
cd <string>
ls
ssh dirlic@10.18.0.39 -p <number>
cd ..
done
xargs -0 -I{} <string> xf {} -C <string>
ls
curl <string>
vim <file>
git push
ls -l
ls
cat <string>
git add <string>
byobu-tmux
cd <string>
git status
ssh dirlic@10.18.0.39 -p <number>
su - <string>
ls
cp <string>
cp -r <directory>
git add <string>
docker-compose logs
git rm <directory> -f
git tag
ls -al
find . -type <string> -printf <string>
sudo apt-mark <string>
df
grep -o -P <string>
mkdir <string>
exit
git add .
cd
alias <string>
cat <string>
cd ..
touch <file>
git push
ls
git remote -v
ls
ls
exit
ls
sudo tee <directory>
sudo usermod -aG <string> <string>
cd <string>
cut -d',' -f1 <file>
in
clear
git init
cd <string>
git checkout <string>
head -1 <file>
vim <file>
sudo usermod -aG <string> <string>
sed -i -e <string>
kubectl <string>
ls
mkdir <string>
ls
ls
cd ..
ls -a
vi <file>
git status .
ls
mv <string>
script/build.sh
mkdir <string>
python3.11 <file>
cd ..
sudo apt-get install <string>
mv <string>
ls
sudo nano <directory>
ls
export <string>
cd <directory>
cd <directory>
sudo service <string>
vim <file>
ls
done\
cd ..
sudo apt-get update
sed <directory>
git remote -v
vim <file>
git commit -a
ls
export <string>
git pull
source <string>
cd
ls
find -name <string>
ls
ln -s <string>
ls
ls
ls
cd <string>
ls
ls
npm run bench -- -c <file> -n <file>
telnet -h
ls
cd <string>
npm i sass -D
ls
sudo sed -i <directory>
pavucontrol
sudo tee <directory>
head
cat <string>
git add <string>
ps -H -o <string>
cd -
rm <string>
git pull origin master
open
kill <number>
git push
cat <string>
mkdir <string>
open .
vim <file>
ln -s <string>
ls
git commit -m <string>
exit
wget <URL>
sudo yum install -y <string>
git add -A
ls
uniq
ls
git push
vim <file>
python3 <file>
ls
clear
git status
clear
ls -R
grep -E <string>
rm <string>
touch <string>
rmdir <string>
mkdir -p <string>
ls
sudo -k
vi <file>
unset <string>
sudo python3 <file>
ls
brew update
sudo apt-key adv --keyserver <string> --recv <string>
cd <string>
sudo vi <directory>
cat <string>
cd
cd ..
ls
git co master <file>
jq <string>
ls
<directory> <string>
touch <file>
ls
cat <string>
clear
sudo vim <file>
npm i <string>
ls
cat <string>
git add -a
ls
git add <string>
git add <string>
done
strings hidden_variable -e <string>
capsctrl <directory> & disown
sudo docker kill corrade
cd ..
git add .
exit
ls
clear
which <string>
man <string>
git pull
git status
git push -u <string> master
fg
vim <file>
git commit -m <string>
history
nano <file>
cd <directory>
git config --list
clear
clear
vim <file>
iptables -I <string> -p <string> --dport <number> -j <string>
git clone <URL>
bash --help
sort -n -r
grep -i -E <number>
exit
cd ..
ls
ls
python3 <file>
cd <directory>
ls
cd <string>
ls
cd ..
ls
vim <file>
cp <string>
cd <directory>
git push
git clone --depth=<number> <URL>
cp -r <directory>
cat <string>
sudo service nginx restart
cd <string>
sed -i <directory>
git push
ls
git add <string>
git checkout <string>
ls
ls
cp <string>
cd ..
grep <string>
sudo sed -i <directory> <file>
sudo su - <string>
ls -alF
npm run develop
ssh-keygen -t <string> -b <number> -C <file>
service apache2 reload
git pull
ls
cd <directory>
apt -yqq <string>
git add .
cd <string>
yarn <string>
wget -q -O - <URL>
open <string>
cd <directory>
git status
cd <string>
cd <string>
vi <file>
vim <file>
sort -n
sudo su
sudo sed -i <directory> <file>
sed <directory>
ls
vim -l <file>
ls
cd <string>
top
git push -u <string> main
read -p <string>
ls
git add .
docker run -d --restart=<string> -p <string> -v <directory> --name <string>
cd
ssh -o <string>
cd <string>
docker ps
sudo nano <directory>
cd <string>
ls
chmod u+x <string>
cd <string>
cd <directory>
sudo usermod -s <string>
clear
mkdir -p <string>
sudo nano <directory>
kubectl apply --filename <file>
ls -ltr
grep -i <string> >files
cat <string>
cd <directory>
sudo nano <file>
top
find . -name <file> -type <string> -print -delete
git pull
cd ..
cat <string>
cd ..
cd <string>
git branch
sudo apt-key add -
ls
npm run test
fg
git --global
chmod <string>
exit
sudo apt install <string>
chmod <number> <string>
cd <directory>
git add .
git remote -v
grep <string>
head -n <number>
cd <string>
cd <string>
ls
git status
ssh <string>
cd
rm <string>
curl <string>
done
ls
sudo zip -r <file>
sudo kill <number>
script/build.sh
sed <directory>
git commit -m <string>
nano <file>
mv <string>
ls
python3 -V
cat <string>
ls
chown -R <string>
git remote add origin <URL>
vi <file>
find . -type <string> -exec <string> <directory> {} +
ls
git commit -m <string>
sudo make install
<directory> <string>
git clone --depth <number> <URL>
sed -i <string>
cd <directory>
cd ..
vim <file>
ls
sudo wget -qO- <URL>
ls
sudo apt-get install <string>
git commit -m <string>
sort
sudo apt update
rm -f <string>
ls
exit <number>
git config --add <file>
mv <string>
export <string>
git rebase <directory>
ls
grep -i <string>
git status .
grep -rl <string>
cd <directory>
chmod u+x <string>
rm <string>
ls
sudo apt-get update
sudo apt-get update
exit
ls
cd <directory>
git add .
clear
pbcopy
rm -f <string>
npm i -g <string>
cd
git config -l
reset
ping <file>
git commit -f
cd <string>
sudo apt-get upgrade
ls
mkdir <string>
ls
vi
cd <string>
python3 <file>
sort
git init
fg
sudo systemctl list-units --type=<string> --state=<string>
cd <string>
rm -rf <string>
cd <string>
vim <file>
git -C <string>
ls
git reset HEAD^
vi <file>
cd ..
python3 <file>
clear
sudo pacman -S <string>
chsh -s <directory>
history
sudo lsof -t -i:3000
apt-get install <string>
cd <directory>
git push origin <string>
cd <string>
vim <file>
kill -9 <string>
cd ..
cat <string>
git push -u <string> main
pwd
read <string>
ls
ls
ls
source <string>
python3 <file>
touch <file>
ls
git push -u <string> master
ls
cd <string>
npm run dev
git remote -v
ls
cd <directory>
ls -F
git push -u <string> master
python3
git remote rm <string>
ls
sudo pip install -U <string>
vim <file>
cd
yarn add <string>
cd <string>
ps -auxwf
more <file>
ls
cd <directory>
sudo pacman -S <string>
sudo apt install <string>
ps2pdf14 - <file>
sudo udevadm control --reload-rules
git status
git commit -m <string>
git status
cd ..
git status
fg
cd <directory>
ls
cd
ls
ls
cd ..
git status
sudo pip3 install --upgrade <string>
npm run pretty
cd <directory>
sudo apt show <string>
cd ..
ssh dirlic@10.18.0.39 -p <number>
cd <directory>
docker exec -it <string>
docker compose up
docker rmi -f <string>
ls
<directory> <directory>
cut -f <string> -d <string>
cd ..
cd <directory>
git clone --depth=<number> <URL> <directory>
cd <directory>
cat <string>
ls
cd <string>
cd <directory>
cd <string>
git clone <URL>
history
git login
mkdir <string>
pwd
cd ..
git log
open <string>
ls
ls
git add .
git branch -m <string>
cd ..
git commit -m <string>
ls
ls
egrep
cd <string>
g++ <file> -o <number>
grep -E <string>
cd <string>
rm -rf <string>
cd <string>
sudo apk add <string>
cd ..
npm install
nano <file>
ls
fg
cd <directory>
clear
rm -r <string>
git add <string>
cd <string>
sudo yum install -y <string>
cd <directory>
ssh-add <directory>
sudo apt-get install <string>
ls
ls
source <directory>
cd <string>
tmux ls
sudo apt-get install <string>
cd <string>
git remote add origin <URL>
cd <directory>
ls
sudo apt-get -y <string>
cd <string>
sudo groupadd docker
vi <file>
ls
sudo chmod <number> <string>
sed -i <directory>
sudo npm install nativefier -g
sudo lvcreate -L <string> -s -n <string>
cd <directory>
exit
ls
mkdir <string>
tail -f <string>
clear
openssl genrsa -out <file>
then\
git pull
more <file>
ls -lah
vim <file>
cd <directory>
cd <string>
su
ls
npm install
ls
ls
ls
git commit -m <string>
exit
du -skh <string>
then\
git co master
shutdown
sudo aptitude purge <string>
ls
which <string>
ls
git add .
vim <file>
vim <file>
fg
ls
sudo systemctl daemon-reload
git init
vim
ls
history -a
exit
cd <directory>
git pull
cd ..
vim <file>
sudo apt-get install <string>
top
apt-get autoremove -y
docker-compose up -d --build
ssh -X <string>
ls
docker stop boost
pwd
exit
find <directory> \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <string> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file>
ls -latr
read -p <string>
sudo apt install <string>
git pull
ls
apt-cache show <string>
exit
clear
cd <string>
rsync -arv --exclude=<string> <string>
du -skh <string>
exit
wget -O - <URL> -sr).asc
clear
cd <string>
ls
git stash
ls
ls
cd <string>
zeus.polsl.gliwice.pl - <number>
sudo chmod +X <file>
cd <string>
cd ..
git push origin main
grep <string>
cd ..
cd ..
clear
sudo shutdown -r <string>
shutdown
source <file>
sudo npm install -g <string>
cd <directory>
cat <string>
cd
vim <file>
rm <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
curl -so- <URL>
sudo chown <string>
ls
mount
docker pull <string>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
git commit --amend
ls
ls -l
eval <string>
cd <string>
tail -n <string>
git push
ls
ls
python3 -m <string> install <string>
print <string>
ping <file>
tmux
mv <string>
git status
exit
ls
ps auxf
sudo nohup mongod --port <number> --dbpath <directory> --replSet <string> --smallfiles --oplogSize <number>
chmod <number> <string>
sudo apt purge <string>
fg
cp <string>
cd <string>
cd <string>
sudo service nginx restart
git clone <URL>
git status
ls -ltr
view <string>
tail -f <directory>
exit <number>
cd ..
ls
cd <string>
kubectl get <string>
cd ..
sudo apt upgrade
cd <string>
vim <file>
du -shx <string>
cd <directory> -las
git clone <URL>
clear
cd <string>
git status
cat <string>
cd <string>
clear
sudo chown <string>
git status
kill <number>
sudo su
grep -q -e <string>
cd <directory>
cd ..
sudo sysctl -q -w <string>
rm -rf <string>
mkdir <string>
ls
yay -S <string>
sudo sed -i <directory>
ls
ls
cd ..
clear
ls
ls
sudo su
ls
git clone <URL>
cd <string>
sudo apt-get update
git commit
cd ..
ls
git push origin master
grep <string>
curl -H <string> -X <string> <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
curl -sS <string>
kubectl get $XR --output <string>
clear
ls
ls
sudo vi <directory>
git config --global --get <file>
mv <string>
git commit -m <string>
sudo installer -store -pkg <file> -target <directory>
git pull
cd ..
npm start
find . -empty -type <string> -print -delete
ls
cd <string>
clear
bash
git add <string>
sudo pacman -Scc
find <directory> -maxdepth <number> -type <string> -exec <file>
sudo dpkg --get-selections <string>
npm start
sudo apt-key fingerprint <string>
vi <file>
jq <string>
sudo add-apt-repository --remove <directory>
git merge develop
git commit -m <string>
curl -v -H <string> <URL>
ls -la
sudo mysql -u <string> -p --socket=<directory> <string>
cd <string>
vim
setg RHOSTS <file>
touch <file>
git rm <string>
open <string>
exit
ls
helm upgrade --install <string>
cd <string>
sudo reboot
cat <string>
sudo fuser -k <directory>
cd <string>
mkdir -p <string>
clear
git commit -m <string>
ls
find . -maxdepth <number> -type <string> -exec <string> <string>
vim <file>
git config <file> <string>
kill <number>
git status
exit
cd ..
pwd
git clone <URL>
sudo systemctl start <string>
cd <string>
rm <string>
sudo apt-get update
git pull origin development
sudo rm -r <string>
fg
clear
chmod +x <string>
chmod <number> <string>
sudo apt-get -y <string>
xargs -L1 -I'{}' <string> <file>
apt-get update
vim <file>
rm <string>
grep -v -e <string> -e <string>
ls -ltr
cd <string>
ls
cd
rm -f <string>
pwd
cd ..
sudo apt get update
source <file>
clear
exit
ls -la -F --color=<string> --group-directories-first
ls
vim <file>
ls
git remote -v
nano <file>
sudo systemctl enable <string>
xargs eslint --fix
git commit -m <string>
git clone <URL>
sudo sed -i <directory>
exit
cd <string>
exit <number>
wc -l
cd
mv <string>
sudo chmod a+rwx <directory>
node <file>
sed -n <string>
ls
cd <string>
free
ls
exit
git add -A
sudo apt-get update -y
git config --global <file>
find . -maxdepth <number> -regextype <string> -regex <string> -type <string>
ls
cd ..
cd
sed -i -E <string>
cd <string>
ssh -T <file>
cd ..
git stash
ps -ae
rm -rf <string>
cd
ls -la
code <string>
setg RHOSTS.*
git init
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
git commit -m <string>
ls
find <directory> -type <string> -execdir <string>
exit <number>
cd <directory>
ip a
sudo usermod -aG <string> $USER
sudo chmod <number> <string>
git init
git status
mkdir <string>
sudo mkdir <directory>
exit
cd
sudo apt-get dist-upgrade -y
cd ..
sudo apt update
cat <string>
git st
find . -name <file> -type <string> -print -delete
curl <URL> -u <string> -H <string>
docker build <string> -t <string>
sudo snap install -classic <string>
vim <file>
git commit -v -a -m <string>
ssh <string>
cd <string>
ls
ls
ls -ltr
rm -rf <string>
cd <directory>
cd <string>
sudo apt upgrade
ls
ls
sudo -rm <string>
cd rm -r <string>
ls -la
grep <string> -A10000000
tar -xf <string>
else <string>
ps -ef
vi <file>
ls
git branch
git status
clear
cd <string>
sed -e <directory> -e <directory>
docker build -t <string>
exit
cd ..
ls
sudo reboot
ls -a
exit
bash
git status
exit
rm -r <string>
clear
sudo light -U <number>
make clean
ls -la
vim <file>
git clone <URL>
git push
npm start
cd <string>
cat <string>
mkdir <string>
sudo apt install <string>
cd <string>
git diff
sort -n
git add .
sudo apt-get -f <string>
vim
sudo apt-get update
sudo loadkeys fa
xargs -0 <string> <string>
git branch
sudo mkdir -p <directory>
ping <string>
less
lsof -n -i4TCP
ls
sudo apt-get install -y -q <string> <string>
df <directory> -h
sudo pacman -S <string>
brew install <string>
ls
ls
sudo apt update
exit <number>
ls
cp -i <string>
vim <file>
ls
docker exec -it <string> bash
sed -i <string>
vi <file>
npm install
git pull
ls
exit <number>
cp -r <directory>
cd <string>
docker commit <string>
tmux kill-server
vi <file>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
docker ps
cd <string>
curl <string>
ls
ls
ls
git branch --no-color <string> <directory>
ls
git submodule add <URL>
man <string>
nano <file>
docker push <directory>
npx <string>
htop
git add .
git branch 2> <directory>
cd <string>
sudo -s
python3 <file>
sudo rm -rf <string>
ls
cat <string>
rm <string>
sed -i <string>
cd <string>
curl -X <string> -d <string>
ls
mount -t <string> overlay -o <string>
sudo systemctl start <string>
mv <string>
chsh -s <directory>
git add <string>
open <string>
docker-compose up -d --build
code .
exit
python3.9 <file> --target <string>
vi <file>
sudo scutil --set <string>
npm init -f -y
ls
cd ..
ls -la
ssh-add <directory>
sudo dpkg -i <file>
vim <file>
cd ..
exit
ls
pkill <string>
cd <string>
npm-recursive-install
sudo sed -i <directory> <file>
cd ..
git commit -m <string>
sudo yum install tree -y
ls
fg
sudo gpg --keyserver <file> --recv-keys <string>
sudo reboot
vi <file>
ls
cd <string>
ls
sed <directory>
git commit -m <string>
cd <string>
sudo chmod -R <number> <string>
ssh -p <string> user@host # connects to host on specified port as user
cd <string>
cd ..
cut -d: -f1
chsh -s <directory>
date
exit
git status
vim <file>
mkdir <string>
cd
cd <directory>
sed <directory>
cd <string>
dotnet
sudo apt-get install ros-indigo-openni2-launch -y
clear
cd <string>
sudo gpasswd -a <string>
top
kubectl --namespace <string> <string>
docker run <string>
xsel -l <directory> -b
git add -A
ls -la
cd <string>
ls
grep <string>
git clone <URL>
ls
read -rp <string> <string>
fg
cd <string>
git push
cd <string>
exit
sudo apt-get update
mv <string>
git add <string>
ls
time
sort -nr
git log
cd <directory>
set <string>
fg
sed -i <string>
mkdir -p <string>
chmod +x <string>
cd <directory>
fg
gpg --list-sigs -vvv
unset -f <string>
ls
sudo apt -y <string>
git add <string>
npm run test
docker-compose up -d --build
rm <string>
ls
cd <string>
cd <string>
sudo date -s <string>
su -l <string>
scp <string>
cat <string>
grep <string>
git status
sudo reboot
sudo sed -i <directory>
read -n <number> -s -p <string>
git commit -m <string>
rm -f <string>
ls
sed <directory>
git clone <URL>
vi <file>
cd ..
wget -O <file>
git add .
python3.9 <file> --target<sys.path>
sudo start uwsgi
ls
cd <string>
ls
fg
sudo docker rm corrade
cp <string>
npm i
git push origin master
cd <directory>
yarn add <string>
cd <string>
cd <directory>
clear
npm run dev
more <file>
clear
find <directory> -type <string>
clear
git switch <string>
exit <number>
git config --global <file> <string>
cd <string>
git add .
git init
ls
python3 <file>
grep -rl <string>
ps ax
xargs
sed <directory>
rm <string>
cp <string>
sudo systemctl restart <string>
cat <string>
git commit --amend
mkdir <string>
sudo auto-cpufreq --stats
cd <string>
python3 <file>
cat <string>
node <file>
sudo apt install <string>
cd <string>
cd <string>
ls
python3
find . -name <file> -type <string> -print -deletefind <string> -name <file>
ls
cd <string>
ls
cd ..
git commit --amend --reset-author
ls
sudo chmod +x <string>
clear
ls
ls
git pull
killall -SIGUSR1 <string>
awk <string>
ls
ls
sudo installer -store -pkg <file> -target <directory>
git status
rm -f <string>
open .
git commit -m <string>
ls
git add .
touch <string>
cd
ssh -p <string> user@host # connects to host on specified port as user
rm -rf <string>
mkdir -p <string>
git commit -m <string>
cd ..
npm install
tr <string>
git add <string>
ls
cd <string>
cd <string>
cp <string>
cd <string>
git init
curl -o <string>
mkdir <string>
git remote add origin <URL>
cd <string>
let <string>
clear
ls
npm -v
mkdir <string>
ls
sudo sed -i <directory>
cd <directory>
sudo poweroff
npm start
cd <directory>
sudo apt-get install <string>
npm start
ls
curl -o <string>
ls
find . -name <string> -exec <string> -c <string>
grep <string>
chsh -s <string>
sudo npm install <string>
git push -u <string> master
git commit -m <string>
chmod +x <string>
cd <directory>
<directory> -m <file>
sed <directory>
vi <file>
git push -u <string> main
git remote add origin <URL>
git commit -m <string>
done
ls
ls
cd <string>
vim <file>
grep -i <string> >files
sudo pip install -r <file>
docker build -t <string>
chmod <number> <string>
ps -aef
exit <number>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
ls
ls
exit
ls
clear
ssh -o <string>
cd <string>
npm install react-native-reanimated-carousel --force
npm config set prefix <string>
make clean
ls
ls
chmod <number> <string>
cd <string>
python3 <file>
export <string>
rm <string>
vi <file>
ls
cd ..
clear
ls
sudo dnf install <string>
ps aux --sort=<string>
vim <file>
git push
ls
cd ..
ls
touch <string>
cd ..
git commit -m <string>
mkdir <string>
sudo npm install <string>
mkdir <string>
wget <URL> -O - -o <directory>
ls
exit
nano <file>
exit
ls
code <string>
rm -rf <string>
vim <file>
read -r <string>
ls
python <file> runserver 0.0.0.0:2016
git commit -am <string>
git push origin master
apt-get -y <string>
sudo apt dist-upgrade
exit <number>
ls
source <string>
ls
git commit
cd <string>
npm uninstall -g <string>
cd <string>
find . -empty -type <string> -print -delete
sudo chown <string>
grep <string>
grep -o -i <string>
ls
touch <string>
ls
cd <directory>
cd <string>
sudo apt-get purge <string>
git pull
ls -la
git pull --all
mkdir <string>
sed <directory>
cat <string>
sudo vi <directory>
code .
sudo rm -rf <string>
clear
find . -name <file>
file <string>
ls
vim <file>
unset <string>
grep <string>
ls
git add .
sudo apt update
sudo chown <string>
git commit -m <string>
git status
sudo mysql -u <string> -p
ls
export <string>
man <string>
docker-compose ps
git clone
git pull origin main
df -h
cd ..
cd <string>
sudo snap install code --classic
sudo apt-get install -y <string>
ls
ls
sed -E -e <directory>
git add --all
more <file>
cd <string>
git checkout -b <string>
fg
ls -lisa
git add .
git reset --hard <string>
git push -u <string> bryan-guner
ls
docker inspect --type=<string> <string>
cd <directory>
cat <string>
chmod -R <string>
git branch
sudo python3 <file>
clear
git log
exit
docker-compose logs --follow <string>
ls++ -a
grep -i <string> >files
find . -empty -type <string> -print -delete
sudo certbot --nginx -d <file>
sudo apt install <string>
ls
ls
sudo apt-get install <string>
done
vi <file>
cd <string>
git add <string>
ssh <string>
git grep -l <string>
cd ..
cd
clear
cat <string>
cd <string>
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
rm <string>
vim <file>
rm <string>
ls
xz -9 <file>
source <directory>
ls
git status
less
git status
git push
apt-key add -
ls
cd <directory>
q=<string> -H <string> -H <directory> -H <string>
git add <string>
cd <string>
ls
sudo add-apt-repository <directory>
git add .
ls
cd <string>
sudo vi <file>
git checkout -
cd <string>
cd <string>
cd <directory>
ls -a
grep <string>
cd <string>
cut -c <string>
git commit -m <string>
export <string>
exit <number>
wget <URL>
vi <file>
curl -sSL <URL>
git commit -C <string> --no-verify
done < <string>
clear
podman <string>
touch <string>
sudo ln -sf <directory>
ls
wget <URL>
git branch
ls
cd
python3 <file>
sudo apt-get update
curl <URL> --progress-bar -L -o <file>
git remote add origin <URL>
ls
nano <file>
tail -f <directory>
cd <string>
man <string>
nc <string>
which <string>
ls
ls
history
cat <string>
cd <string>
ls -latr <directory>
php
git status --porcelain
git commit -m <string>
ls
rm <string>
git co HEAD .
sudo apt-get -y <string> <string>
git checkout <string>
clear
rm -rf <string>
ls
curl -o <string>
clear
clear
ls
pwd
less
cd <string>
sudo raspi-config
cd <string>
rm -rf <string>
pwd
cd <string>
ls -la
sudo apt install <string>
fg
exit
cd ..
sudo gem install <string>
apt-get install <string>
cut --help
vim <file>
clear
vi <file>
cd ..
nano <file>
cd <directory>
ls -ltr
sudo npm install typescript -g
sudo localectl set-x11-keymap <string>
wget <URL>
shutdown -r <string>
ls
chmod <number> <string>
gpg --dearmor
git pull --no-edit <string>
<directory> <directory>
fg
ls
exit <number>
cd <string>
git push
cd <string>
git commit -m <string> --author <string>
ls -lt
git
sudo virsh -c <directory> <string>
sudo pip install <string>
sudo nano <directory>
rmdir <string>
git commit -m <string> --no-verify
cd <string>
kill -9 <number>
vim <file>
sudo apt-get install -y <string>
git clone --depth=<number> <URL>
cd ..
kubectl --namespace <string>
ls
exit
wget -nv --show-progress -O <file>
git add --a
sudo stop uwsgi
git remote add origin <URL>
vim <file>
git diff
docker create --read-only --name=<string> <string>
bash <file>
cat <string>
sort -nr
sed -E -e <directory>
read -p <string>
ls
cd <string>
cp <string>
cd <string>
sudo apt-get install -y <string>
ls++ -a
ls
clear
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
cd ..
chown <string>
clear
git commit -m <string>
vim <file>
cp -r <directory>
curl -d <string>
vi <file>
cat <string>
cd ..
nc <string>
cd ..
cd <string>
vi <file>
git commit -m <string>
mkdir <string>
mkdir <string>
ls
man <string>
sudo apt install <string>
ls
sudo cd root
ssh dirlic@10.18.0.39 -p <number>
vi <file>
ls
wget <URL>
cat <string>
clear
ls
git init
clear
sudo chown -R <string>
vim <file>
cd <string>
fg
git branch
git add <string>
clear
cd ..
scp <string>
service <string>
cd ..
cd <string>
wc -l <string>
pwd
npm update
cd
git filter-branch --env-filter <string>
npm install --save <string>
npm ERR! <string>
cp <string>
docker run --rm --entrypoint <string> <string> -c <string>
ps -eo <string>
ls
clear
git status
python3 -
cd <string>
sudo poweroff
less <string>
git log
find . -type <string> -mindepth1
git status
cat <string>
git merge develop
mkdir <string>
cd <string>
git pull origin development
vim <file>
sort
git clone <URL>
rm -f <string>
cd <string>
vim <file>
mkdir -p <string>
du -skh <string>
python3 -m <string> install --no-cache-dir --editable <string>
exit
top
tail -n <string>
sudo dpkg-reconfigure tzdata
telnet <string>
xcode-select --install
git bisect <string>
cd ..
git commit -m <string>
kill -l
ls -a
rm <string>
clear
clear
cd <string>
sed -i <directory>
grep <string>
git push
git add .
cat <string>
cd ..
sudo rm -rf <string>
git add .
rm -rf <string>
cd ..
git push -u <string> master
ls
node <file>
git push origin master
sudo
vim
docker-compose ps
sudo dnf search <string>
rm <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
git stash pop
ls
sudo docker run --rm --volume <directory>
exit
sudo sed -i <directory>
sudo apt-get update
fg
wc
exit
sed -i <directory>
source <string>
cd <string>
git log
sudo mv <string>
vi <file>
pwd
sudo aptitude <string>
touch <file>
vim <file>
npm run test
git commit -m <string>
ls
<directory> -e <string>
ls
exit
clear
setg RHOSTS <file>
git init
sudo cat <string>
npm run make
cat <string>
ls
python3 <file> --model-path <file> --conf <string> --img-size <number>
cd
ls
tmux kill-server
sudo nvidia-settings -a <directory>
git commit -m <string>
cd
vim
sudo curl <URL> -o <directory>
unzip <file>
docker ps -f <string>
dir
go tool pprof <file>
tail -f <directory>
npm update
git add .
git remote add origin <URL>
mkdir <string>
apt-get upgrade -y
git pull upstream <string>
ls
git status
docker tag <string>
cd <string>
grep -P <string>
sudo dnf install <string>
sudo sed -i <directory> <file>
cd <string>
rm -rf <string>
find . -type <string> -exec <string> <directory> {} +
sudo apt-get install <string>
git commit -m <string>
git status
cat <string>
cd <string>
ln -s <string>
vim <file>
mkdir <string>
sudo apt-get autoremove
date
ls
history -r
ls
sudo swapon <directory>
vi <file>
git bisect bad
cd <string>
vim <file>
git push
git status
vi <file>
docker inspect --type=<string> <string>
mv <string>
code <string>
fg
git merge
git commit -m"update"
clear
cd <string>
python3 <file>
exit <number>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
watch <string>
ls -al
vim <file>
sed -E -e <directory>
npm i --save-dev <string>
clear
git gc --aggressive --prune
ls
ls
cd <directory>
grep -a -i -E --no-filename <string> */*.log*
ls
sudo lpoptions -d <string> -l
docker-compose logs --follow <string>
vim <file>
clear
wget <URL>
git add .
awk <string>
cd <string>
cat <string>
git status
cut
git add .
cd
bash <file>
git checkout <string>
sudo pacman -Syyu <string>
git stash pop
cd ..
ls
git status
cd ..
sudo restart <string>
ls
unset color_prompt force_color_prompt
ls
cd <string>
mvn compile
git add <string>
cp <string>
exit
pwd
ping <file>
sort -u
ls
git clone <URL>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
cd <directory>
sudo apt -y <string> <string>
vim <file>
ls
tmux kill-session -t <string>
history -r <string>
exit <number>
sed -i <directory>
ls -a
cp -rf <string>
apt-key
git status
fg
cat <string>
ls
awk --help
cd ..
ls
locate <string>
vi <file>
ls -alrt <string>
code .
git init
ls
bash <file>
clear
ls
sed -i -e"s/server_name <string>
cd <string>
git remote add origin <URL>
vi <file>
git difftool -y --cached
curl -s <string>
sudo snap install <string>
cp <string>
cd <directory>
git pull
vi <file>
vim <file>
cd <directory>
ls
sudo apt-get purge <string>
git add .
git add .
time go run <file>
git add .
grep -qi <string>
brew tap <directory>
df
cd <string>
mkdir <string>
vim
ls
sudo shutdown -r <string>
mkdir <string>
git rebase <string>
nano <file>
ls
sudo timedatectl set-timezone <directory>
grep -Eio <string> <string>
git status
export
ssh <string>
cd ..
sudo pacman -Ss <string>
python3.11 <file>
scp <string>
ls
cd <string>
ls
ls
cd ..
cp -rp <string>
sudo letsencrypt --email <string> --domains <string> --agree-tos --renew-by-default --manual <string> --preferred-challenges <string> --server <directory>
ls
sudo pcmanfm
git tag -d <string>
wc -l
mv <string>
vi <file>
dir
cd <string>
rm -rf <string>
git checkout <string>
npm install
awk <string>
grep <string>
vi <file>
rm -rf <string>
cd -
ls
git add .
git push origin2
git commit -m <string>
rm <string>
git commit -m <string>
sudo service nginx reload
vim
docker login <string> -u <string> --password-stdin <string>
git push -u <string> master
git push
vim <file>
git status
git remote add origin <URL>
git add .
rm <string>
docker build -t <string>
find . -name <file>
git commit -m <string>
chmod -x <file>
cd <string>
git add <string>
clear
sudo poweroff
git status --ignored
nano <string>
sudo sh -c <string>
clear
cd <string>
git branch
sudo chown <string>
cd <string>
ls -la
mv <string>
cd <string>
ls
ls
rm <string>
git status
npm install <string>
git pull
cd <directory>
git ls-tree --name-only <string>
git clone <URL>
dir <string>
sudo vim <directory>
cd <string>
nc <string>
cd ..
ls
cd ..
git push origin master
cp -r <directory>
eval <string>
ls
sed -e <directory> -e <directory>
more <file>
git status
sed -i <directory>
nano <string>
ls
ls
python3
curl <string>
sudo -u <string> psql -c <string>
rm <string>
cd <directory>
git pull origin development
git commit -a
sudo ansible all -m <string>
cd ..
ls
cd <directory>
cd
git checkout --orphan <string>
cd <string>
ls
export <string>
npm i <string>
curl -s <string>
find -name <string> -delete <string>
fg
npm run dev
git pull origin master
rm -rf <string>
npm run bench -- -c <file> -n <file>
sed <directory>
cd ..
ls
npm run coverage
sed -E -e <directory>
mkdir <string>
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
vi <file>
git add <string>
sed -i <string>
sudo du -h --max-depth=<number>
clear
cd <string>
ls
vi <file>
grep -i <string> >files
npm run dev
git log
git diff
exit
mkdir -p <string>
less <string>
sed -ri <string>
docker-compose up -d --build
ls
vim <file>
cd <string>
chmod u+x <string>
sh <file>
cd ..
sudo apt-get install <string>
npm run dev
sudo apt-get -y <string>
git commit -m <string>
rm -r <string>
cd <directory>
git add -A
pkill picom
ls
clear
sudo udevadm trigger
vim <file>
git push origin2
exit
git bisect bad
service <string>
vim <file>
ls
rm <string>
ls
npm run dev
wget -c <URL>
sudo rpm -Uvh <string>
ls
cd
cd <string>
grep <string>
ls
ls
sudo find $dir -type <string>
git rebase <directory>
cd <directory>
git status
reboot
git push
cd <string>
fg
cd ..
ls
ps aux
clear
git pull
cd <directory>
git pull
curl <string>
cd <string>
ls
cd <string>
cd
tmux a
sudo apt install graphicsmagick -y
yarn add <string>
find . -name <string> -delete
git gc --aggressive --prune=<string>
ls --color=<string>
cd <directory>
cd ..
man -k <string>
cp <string>
vim <file>
cd <directory>
cd ..
sudo pacman -Rs <string>
ls
git branch -M <string>
sudo ifconfig en0 ether <string>
ls
git config --global <file> <string>
ls
cd
apt-get remove packagename=<string> --purge
apt-get purge -y <string>
clear
cd <string>
clear
clear
cd <string>
top
cd <directory>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
ls
clear
rm <string>
npm start
<directory> <directory>
git checkout master
sudo pacman -Ss <string>
sudo git clone <URL>
ls
php artisan <string>
git add <string>
cd <directory>
clear
cd <string>
sudo apt install <string>
git stash
git status
vi <file>
ls -l
time <string>
ls
ls
sudo apt-get dist-upgrade
code <string>
tail -25
git commit -a -m <string>
sudo apt install <string>
npm install
git show <string>
sudo chfn <string>
find . -name <file> -print0
sudo yum install <string>
python3 <file>
ls
touch <file>
ln -s <string>
vim <file>
apt-get update
cd <directory>
sh <file>
git init
done
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ssh <string>
df
df
ls
node <file>
yarn add <string>
exit
vim <file>
grep <string>
date
cd <directory>
sed -n <string>
apt-get update
ls
ls
ls
code <string>
grep <string>
cd <string>
tail -f <directory>
ls
ls
clear
docker-compose up -d --build
git remote add origin <URL>
ls
sudo dnf remove -y <string>
vi <file>
ls
git clone <URL>
exit
bash <file>
cat <string>
nano <file>
sed
cd <string>
sudo apt-get -y <string>
ls
vi <file>
ls
cd ..
cd <string>
ls
cd <string>
ls
git push -u <string> main
exit <number>
git commit
ls
man <string>
git push origin master
mv <string>
sudo mv <string>
docker-compose up
sudo apt-get -y <string>
clear
cd <string>
gsettings set <file>
ls
ls
wget -qO- <URL>
git status
xargs kill -9
git submodule update --init
cd <string>
git init
cd ..
zip <string>
vi <file>
ls
fzf --info=<string> --print-query --bind=<string>
git clone <URL>
git add .
exit
cd <string>
cd -
ls
sudo stop uwsgi
clear
sudo dpkg -r <string>
source <directory>
git push
docker-compose stop <string>
rm -rf <string>
terraform <string>
cd ..
chmod u+x <string>
grep <string>
apt-get
chmod <number> <string>
wc -c
mkdir <string>
curl --silent <string>
sudo npm install -g <string>
python3 <file> -i <string>
cd <string>
tail -f <directory>
cd <string>
ps -auxwf
chmod +x <string>
sudo -s -u <string> -H
cd <directory>
ls
ls
rm -rf <string>
sudo make install
mv <string>
chmod <number> <string>
git status
ls
docker ps
git rev-parse --show-toplevel
ls
wget <URL>
docker run --rm --entrypoint <string> $GL_IMG_REPO -c <string>
ls
git status
more <file>
cp -r <directory>
cd ..
vim <file>
ls
git clone <URL>
git clone <URL>
npm run make
sudo ln -s <directory>
cd <string>
ls
print <string>
cd ..
cd <directory>
sudo tar -czf - <string>
chown -R <string>
vim
sed -i <directory>
chmod <number> <string>
ls
sudo vim <file>
man <string>
ls -le
docker start postgres-container
cd <string>
ls
read -r <string>
git push --force-with-lease <string>
cpio -p -d -v <string>
mkdir <string>
sudo ln -s <directory>
rm <string>
npm install <string>
sudo chown -R <string>
clear
chmod <string>
ls
sudo lsof -i <string>
cd <string>
cd <string>
cp <string>
git clone <URL>
git status
rm <string>
vi <file>
git commit -m <string>
git add <string>
git push --set-upstream <string> <string>
clear
cd <directory>
git config --global <file>
cd <string>
sudo docker kill corrade
ls -la <directory>
clear
cd <string>
git push
git push origin
sudo apt-key adv --keyserver <string> --recv-keys <string>
cd <string>
cd ..
tail -f <string>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
rm -f <string>
git status
cp -r <directory>
ls
ls
ls
vi <file>
ls
git add .
cp <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
sudo zypper <string>
ls
git commit -m <string>
ls
fg
git push -u <string> master
vim <file>
ls
scp <string>
ls
ls -a
ls
vim
rm <string>
ls
cd <string>
cd <directory>
git status
ls++ -a
git add <string>
cat <string>
exit
clear
vi <file>
cd <string>
sh
ssh -CqTnN -R <string>
clear
ls
grep <string>
pwd
exit
curl -s <string>
read -s -p <string>
cd <string>
ls
vim <file>
cd <string>
cd <string>
ls
cd <string>
cd <string>
then\
ls
source <directory>
cd <directory>
rm <string>
sed -i <directory>
docker rmi --f <string>
patch <file>
cat <string>
sudo apt-get update
clear
ls
sudo shutdown -h <string>
uname -p
ls
npm install
sudo ln -s <directory>
ls
done
ansible-playbook <file>
ls
sudo pacman -Scc --noconfirm
apt install -y <string>
xargs -r -I <string>
cd ..
git checkout master
curl <string>
vi <file>
git status
ls
sudo apt-get install cloudflare-warp -y
cat <string>
clear
git status
sleep <number>
python3 <file>
vi <file>
touch <string>
clear
ls
wget -q --show-progress <URL>
nano <file>
reboot
sudo reboot
ls
cd <string>
ls -R <string>
ls
cd <string>
curl -o <string>
fg
sudo -rf <directory>
sudo apt --remove-essential <string> --no-fix-broken
cd <string>
sudo easy_install <string>
git rm --cached <string>
git diff
date
cp <string>
sudo sed -i <directory> <file>
sudo apt-get update
sudo poweroff
cd <string>
head
ls
ls
fg
cd <string>
git pull --rebase
cd <string>
less
sed -i <string>
cd
git clone <URL>
git init
ls
cd <directory>
sleep <number>
git commit -m <string>
sort -k2 -k1n
python3 <file>
npm install netlify-cli -g
mkdir <string>
sudo vim <file>
open <string>
ls
cd <directory>
npm install
cp <string>
ls
git status
code <string>
cd <string>
cat <string>
cd <string>
ls
apt install -y <string>
tail -f <string>
git add <string>
ls
ls
chsh --version
cd <string>
alias <string>
sudo su
rm -f <string>
cd <string>
cd <string>
exit
shutdown
git status
ls
sed <directory>
ls
ls
apt-get install <string>
git checkout -
sudo -H <string> install <string>
ls
vim <file>
vi <file>
clear
ls
cd <string>
docker stop <string>
vim <file>
exit <number>
git push
ls
done
git commit -m <string>
find . -name <file>
sudo make clean install
git pull origin master
ls
cd <string>
cd <string>
cd
npm install react-audio-recorder --save
sudo apt install -y <string>
git gc --prune=<string>
cd <string>
vim <file>
rm <string>
ls
vi <file>
chmod +x <string>
cd <string>
sudo sed -i <directory> <file>
ps
cd <string>
vim <file>
cd <string>
clear
ls
code .
ip a
tail -r
ls
git config --global <file> <file>
ls -la
rm -rf <string>
git config --global <file>
cd <string>
git status
pwd
exit
history
git status
ls -lrt
cd ..
cd ..
grep <string>
git
sudo apt install --fix-broken -o <string>
ls
clear
chmod <string>
grep -i <string> >files
tmux a
ls
su -c <string>
npm install <string>
sleep <number>
sudo tar -xj --strip-components <number> --overwrite -C <string>
curl <string>
vim <file>
vi <file>
rm -rf <string>
fg
ls
touch <string>
cd ..
fg
sudo rm -rf <string>
tee <file>
cd <string>
rm -rf <string>
git config --global <file> <string>
scp <string>
nano <string>
curl -sSfL <URL>
clear
git push origin
tar -zxvf <file>
sudo systemctl status <string>
ls
history
chmod u+x <string>
cd <directory>
git remote -v
pwd
awk <string>
ls
git add <string>
cd <string>
python3 -m <string> install <string>
git status
cd <directory>
git log --format=<string> <string>
sudo zypper install <string>
rm <string>
clear
git add .
git add .
cd..
git commit -m <string>
cd <string>
clear
cd <directory>
cd <string>
read <string>
git commit -m <string>
clear
vim <file>
git commit --amend
rvm <string>
yarn <string>
ls
fg
vi
ls
rm -rf <string>
git clone <URL>
ls
cat <string>
cd
docker --version
git push heroku master
wget -q <URL> -O <file>
clear
awk <string>
sed -i <directory>
git config --global --add <file>
clear
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
git branch -m <string>
ls
cd ..
wc -l
ls -a
chmod <number> <string>
sudo dnf install -y <string>
git pull
ls
ls
uniq
clear
git push
sudo sysctl -p
sleep <number>
sudo apt-get update
ls
cd <string>
ls++ -a
git pull
ssh dirlic@10.18.0.39 -p <number>
sudo vim <file>
rm <string>
git checkout -b <string>
vim <file>
git pull origin development
ls
nano <file>
git commit -m <string>
git
find . -name <file> -type <string> -print -delete
clear
git push -u <string> master
vim <file>
cd ..
cd
sudo -u <string> pg_basebackup -h <string> -D <directory> -U <string> -v -P
cd <directory>
sudo ifconfig en0 ether <string>
git push --tags --force
ls
git remote add origin <URL>
cd ..
ls
clear
git push
clear
cd <string>
sudo apt install -y <string>
dpkg -x <file>
chmod +x <string>
find . -name <file> -exec <string>
more <file>
find . -type <string> -exec <string> <directory>
git pull origin <string>
ls
cd ..
git remote add origin <URL>
vi <file>
sudo <directory> restart
ls
ls
code .
exit
rm -r <string>
git push -u <string> master
cd <directory>
git diff <string>
ls
ls
git clone <URL>
cd <directory>
ls
python3 <file>
git add <string>
git add <string>
python3 <file>
rm <string>
ln -s <string>
vim <file>
cd <directory>
ls
exit <number>
tee -a <string>
sudo
ls
cd ..
fg
git stash pop
git status
fg
exit
ls
rm -r <string>
clear
vim <file>
mv <string>
cd ..
diff -u <string>
sudo zypper se <string>
git branch 2> <directory>
grep <string>
mkdir <string>
less <string>
rm -rf <string>
cd ..
git push -u <string> master
clear
read -rs
ls -lh
cd ..
nohup <string>
cd <string>
ls
ls
git commit -m <string>
cd <string>
ls -R
git status
cd ..
cd <string>
git branch -M <string>
python3 <file>
git add .
vi <file>
clear
exit
git st
mkdir -p <string>
git checkout master
cd <string>
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
sudo -i
sudo -s -u <file> -H
docker kill <string>
ls
npm start
command tar -zcf <file>
reboot
ls
vim <file>
ls
touch <string>
sudo apt-key add -
docker
rm <string>
cd <string>
find .
cd <string>
cd <directory>
vi <file>
sort
ls
less
git pull
cd -
sudo docker rm corrade
ssh -X <string>
apt-get install --reinstall <string>
cd <string>
git status
sudo pacman -S <string>
clear
nano <file>
docker rmi -f <string>
clear
pwd
cd <directory>
git commit -m <string>
vim <file>
ls
cd ..
sudo apt install <string>
apt-get install <string>
docker rm <string>
ls
clear
exit
git commit
cd <string>
ping <file>
cd <string>
patch <file>
tail -n <string>
find . -type <string> -path <string>
exit
mkdir <string>
sudo killall mongod
python3 <file>
git status
code
ls
ls
cat <string>
ls
cd <string>
sudo apt install <string>
cd <string>
cd <string>
cd <string>
less <string>
git config -f <string> --remove-section <string>
eval <string>
ls
git checkout master
python3 <file>
sudo apk add <string>
exit <number>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
wget <URL>
git add .
ls
ls
git status
git config --global <file> <string>
cd <string>
cd <directory>
sudo dpkg -i <file>
ls
ls
shutdown -h <string>
git status
ls -la
git branch
cd
cd <string>
cat <string>
ls
ps -eo <string>
mkdir <string>
codedown javascript > <file>
ls
ls -la
ls
export <string>
git init
rake <string>
man <string>
perl -ne <string>
sudo docker images
done
git status
find . -type <string> -exec <string> <directory>
cd ..
ls
cd <directory>
sh -c <string>
git push -u <string> master
systemd
top
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a
vim <file>
git status
ping <file>
cd <string>
git commit -m <string>
ls
set
clear
git commit
rmdir <string>
sudo snap install heroku --classic
ls
apt-get install -y <string>
npm install -g <string>
ls -l
git add -A
ls
exit <number>
cd <directory>
date
ls
ls
ls
cd <string>
cd <string>
clear
mkdir <string>
cd ..
sudo sed -i <directory> <file>
sudo systemctl start <string>
git checkout -b <string>
sudo apt-get install <string>
mv <string>
ls
env
LANG=<string> rpm -qp --queryformat <string>
cd <string>
ls
rm -f <string>
history
ls
fc-cache -fv
cd <string>
<directory> <directory>
vi <file>
ls
man <string>
make -j4
npm run coverage
ag -v <string>
sudo cp -r <string>
rm -rf <string>
apt --help
apt-get update
rm -rf <string>
rm -r <string>
cd <string>
chmod <string>
sudo sed -i <directory> <file>
<file> - <number>
sudo vi <directory>
cd <string>
ls
ls
cd <string>
cd ..
sudo su
cd <directory>
perl <file>
eval <string>
grep -i <string> >files
ssh <string>
git commit -m'Cool, <string>
ls
git help -a
chmod <number> <string>
chmod <number> <string>
clear
chmod <string>
code --verbose
rm -v -- <string>
ls
history
cd ..
vi <file>
rm <string>
npm install
exit <number>
python3.11 <file>
cd <directory>
cd ..
git commit -m <string>
git status
git diff
wget -O - <URL>
git init
git switch main
git reset --hard <string>
ls
ls
sed <directory>
history
grep <string>
git push
ls
cd
tmux
vim <file>
git init
ls
find . -size=<string>
man <string>
sudo apt-get update
cd <string>
sudo service <string>
exit
sed -i <directory>
vim <file>
git branch -d <string>
git co HEAD <directory>
clear
mkdir <string>
less <string>
ps
git stash
git commit -m <string>
ls
ls
git stash
ls -las
read <string>
cd <string>
git add --help
sudo pacman -S <string>
cd <string>
cd <string>
wc -l
git pull origin master
chmod +x <string>
ls -all <directory>
ssh dirlic@10.18.0.39 -p <number>
read <string>
sudo apt install <string>
exit <number>
rm <string>
exit <number>
wget <URL>
git checkout <string>
python3 <file>
ls
ssh dirlic@10.18.0.39 -p <number>
git rm --cached <directory> -f
ls
docker inspect -f <string>
ls
touch <file>
git status --porcelain
ls
npm start
mvn clean
ls
ls
hwclock --systohc
ls
grep <string>
ls
cd <directory>
sed -i <string>
vi <file>
cd <string>
screen
npm audit fix -f
sudo cp <string>
ssh dirlic@10.18.0.39 -p <number>
cd <directory>
cd <string>
find . -type <string> -name <string>
cd <string>
ls -l
cd <string>
curl <string>
git log
ls
ls
curl <string>
source <string>
fg
vim
vim <file>
cd ..
exit
exit
cd ..
sed <directory>
docker ps -a
git add <string>
chmod +x <string>
clear
git lfs <string>
which <string>
git stash
cd <string>
type <string>
ls
ssh -L <string> -N -f -l <string> <string>
find <directory> -name <string> -type <string>
fzf <string>
grep <string>
ls -l
sudo pacman -S <string>
git remote set-url --push <string>
wget <URL>
mkdir <string>
git commit -m <string>
<directory> <string>
git commit -m <string>
ls
sudo dhclient -v <string>
ls
cd ..
cd <string>
git commit -m <string>
cd <string>
cd <string>
date
rm -rf <string>
vi <file>
vi -t <string>
cd <string>
ls -al
cd <directory>
set
mkdir <string>
cd
cd ..
docker exec -it <string>
docker-compose
ls
ls
<directory> <string>
cd <directory>
ls
ls
npm -v
ls
ls
cd <directory>
ls -alh
ls
git status
git push origin PTS-372_Remove_components_from_daily_tracker --force
cd <string>
su -c <string>
sudo apt update
npm install --save <string>
grep -Eom1 <string>
rm <string>
git commit -a
clear
ls
cd <string>
touch <file>
git remote add origin <URL>
df -h <directory> -i
exit
touch <string>
ls
vi <file>
clear
cd <string>
ls
sudo systemctl enable <string>
ls
curl <string>
cd <directory>
pulseaudio
nano <string>
vi <file>
file <string>
exit <number>
rm -f <string>
python3 <file>
git status
docker exec -it <string>
grep <string>
cd ..
cd <directory>
ls
cd <string>
vim <file>
cd ..
cd ..
cd <string>
curl -LJO <URL>
git st
wget <URL>
git add <string>
sudo pico <directory>
cd <string>
vi <file>
sudo mkdir <directory>
mkdir -p <string>
vi <file>
sudo apt-get install <string>
read -r <string>
cp -r <directory>
cd <string>
git remote add origin <URL>
sudo shutdown now
sed -i <string>
ls
ls
mkdir <string>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
cp -r <directory>
ls
ls
cp <string>
ls
ls
cd -
rm -f <string>
sudo systemctl restart <string>
rm <string>
cp <string>
cd ..
git diff
fg
find . -empty -type <string> -print -delete
cd <directory>
ls
done
git push
cd <string>
source <directory>
git branch
sleep <number>
vim <file>
ls
ls
cd
sudo chmod a+rwx <directory>
sudo pico <string>
cd <string>
npm run test
git pull
mv
ls
cd <directory>
make clean
exit
cd <string>
done
docker-compose up
source <string>
vi <file>
grep <string>
git commit -m <string>
vim <file>
ls
history
git add <string>
ls
exit
mkdir <string>
python3 <file>
git add .
vi <file>
ls -lrt
sh
tmux a
ssh-add <directory>
rm <string>
cd ..
git commit -m <string>
awk <string>
ls
cd <string>
cd <directory>
python3 <file>
date <string>
ls
cd <string>
clear
sudo systemctl daemon-reload
df -h
source <file>
ls
view <string>
git push origin master --tags
git push
ls
ls -lA <directory>
ssh <string>
ls
git commit -m <string>
ls
ls
cp -r <directory>
docker start <string>
type <string>
ls
mkdir <string>
chmod +x <string>
cd <string>
cd <string>
script/build.sh
grep <string>
mkdir -p <string>
python3 -m <string> install -U <string>
git push
source <directory>
finger
cd ..
docker exec -it <string>
find <directory> -size <string>
vim
apt-get install <string>
cd <string>
python3 -m <string>
git pull
sudo systemctl start <string>
clear
fg
clear
sudo sed -i <directory>
kill -HUP <string>
ls
ls
unset -v <string>
sudo apt install <string>
clear
git show origin --v
less <string>
exit
head -10
perl <file>
git status
ls
git commit -m <string>
sudo pacman -U <file>
screen
git code .
exit <number>
ssh <string>
cd <directory>
git add <string>
ls
git commit -m <string>
git status
sudo apt-get install <string>
apt-get autoremove
python3 <file>
clear
mkdir <string>
sudo mysql -u <string> -p
git branch
true <string>
git clone
cd <directory>
ls
cd ..
cd <string>
cd <string>
git merge <string>
ls test
git push
wc -l
shutdown -h <string>
npm start
sudo mkdir -p <directory>
git config --global <file>
ls
sudo cd root
git commit -am <string>
source <file>
vim <file>
sudo sed -i <directory> <file>
git branch
sudo apt install -y <string>
ls
git push
ls -l
ls
ssh-keygen -t <string>
cd <string>
git pull
sudo apt-get install <string>
ls
chmod +x <string>
ls
export <string>
ls
ls
ls
git pull
node -v
ls
sudo sed -i <directory> <file>
ls
exit
ssh-add <directory>
sudo rm -r <string>
ps aux
cd <directory>
git clone <URL>
ls
git push
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
git push
cd <directory>
cd <string>
chsh -s <directory>
rm -r <string>
exit
sudo gem install <string>
npm init
sed -i <directory>
setg RHOSTS <file>
git checkout development -f
git push
ls -la
sudo fdisk -l
clear
rm -fr <string>
ls
nano <file>
cd <directory>
cp -p <string>
git add <string>
vi <file>
head <filename> # outputs the first lines of file (default: <number> lines)
cd <string>
git switch <string>
python3 <file>
tmux a
sudo vi <directory>
grep -e <string> -e <string>
cd <directory>
rm <string>
read -p <string> -a <string>
cd <string>
npm install -g <string>
ls
mv <string>
cd <string>
fg
ls -alh
ssh <string>
help
git reset --hard <string>
byobu-tmux
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
sudo apt-get upgrade -y
docker compose up
ssh -X <string>
find . -empty -type <string> -print -delete
git status
clear
time go run <file>
mkdir <string>
cd <string>
alias
code <string>
cat <string>
git push -u <string> main
ls
git commit
sudo apt install gnome-tweak-tool -y
fg
code <string>
cut -d"/" -f <string>
apt-get install -y <string>
ps auxww
ls
ls
ls
diff <file> <file>
npm test
ssh <string>
git pull origin development
cd <string>
git remote add origin <URL>
ls
ls -altr
git push
vi <file>
git config --global <file>
git add .
cd
read -r <string>
cd <directory>
apt-get install <string>
git commit -m <string>
cd ..
ls
chmod +x <string>
fg
cd <string>
ls
vim <file>
rm -f <string>
vi <file>
rm -rf <string>
rm <string>
sort -g
rm -rf <string>
ag ALL --nocolor
cat <string>
sleep <number>
sudo certbot certonly --nginx
cd..
git commit -am <string>
clear
python3 <file>
ls
ls
ping <string>
vim <file>
docker compose <string>
done
ls
sudo su
sudo chmod -R <number> <string>
ls
clear
cd ..
ls
cd -
git init
clear
du -h -d <number>
cd <string>
ls
set
xrandr -d <string> --output <string> --auto
ls
cd
reset
cd ..
cd <directory>
cd <string>
git push
git pull origin master
df
ls
mv <string>
npx unlighthouse --urls <URL>
sudo useradd <string>
git init
cd ..
ps ax
exit
ls
git stash
cd ..
cd <string>
sudo fdisk <directory>
nano <file>
git add
git status
exit <number>
clear
ls
git init
ls
git add -A
clear
cd <directory>
less
ls
cd <string>
clear
wget <URL> -O -
brew install ${FONTS[@]} --cask
read -p <string>
git push -u <string> master
git push
python3 <file>
ls
cd <string>
git clone <URL>
git push
exit
unset <string>
git push -u <string> master
cd ..
sudo git commit
ls
sudo apt-get -y <string>
chmod u+x <string>
export <string>
cd <string>
git init
read -s -n <number>
man
ls
mv <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
sudo systemctl status <string>
head -10
ssh-keyscan -H <file>
npm i <string>
cd <string>
ls
killall -s <number>
sudo git config --global <file>
git init
ls -latr <directory>
ls
cd <directory>
sh
cd <string>
sudo yum install -y <string>
find . -type <string> -a <string> -name <file> -o -name <file>
clear
cd <string>
cd ..
head -n <string>
ls
exit <number>
cd <string>
ls -la
git add .
sudo nvim <directory>
cd <string>
chmod <number> <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
setg RHOSTS.*
setg RHOSTS.*
cd <string>
exit <number>
grep -a -i -E -o --no-filename <string>
vim <file>
cp -R <string>
cd <string>
cd ..
git branch -m <string>
cd ..
chmod +x <string>
git branch -a
htop
cat <string>
git config --global <file> <file>
docker run -it --entrypoint <directory>
sudo vim <directory>
ls
screen -r <string>
docker-compose up -d --build
pwd
ls
find . -name <string> -maxdepth <number>
more <file>
<directory> -e <string>
rm <string>
exit <number>
ls
ln -s <string>
ls
rm -rf <string>
ls
git pull
cd <string>
ps -ef
cd ..
cd <directory>
git push
clear
ls
git add <string>
vim <file>
ls
ls
df -h
sudo mv <string>
rm -rf <string>
ssh <string>
rm -rf <string>
sudo pacman -S <string>
cd
cd <string>
cat <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
vi <file>
systemctl status <string>
sudo chmod <number> <string>
uniq
tail -f <directory>
mvn compile
ls -la <directory>
cd <string>
ls
sudo pacman -s <string>
ls
fg
python3 <file>
cd <directory>
docker exec -it <string> bash
grep -i <string> >files
cd <string>
cd <string>
git clone <URL>
touch <file>
ls
ls
cd <string>
ls
git commit -m"update"
git config --global <file>
rm <string>
ls -la
fg
git status
cd -
ls
vim <file>
wget -q <URL> -O <file>
find . -type <string> -name <string> -ls -delete
sudo chmod +x <string>
vi <file>
cd ..
grep <string>
git commit -m <string>
service apache2 reload
cd <string>
git add <string>
clear
cat <string>
ls
sudo apt-get -y <string> <string>
pwd
install --help
grep -E <string>
ls
git add .
sudo chown <string>
clear
wget <URL>
cd <string>
sudo apt-get install -y <string>
date <string>
ls
nano <file>
grep -a <string>
cd <string>
git remote -v
git clone <URL>
clear
exit <number>
fg
ls -l
ls
git init
sudo mv <string>
vi <file>
nano <file>
grep <string>
git push
grep -i <string> >files
git commit -m <string>
ssh <string>
apt-get upgrade
ls -a
mv <string>
ls
git pull
vim <file>
ls
clear
ls
cp <string>
man <string>
cd
git config --global <file>
cd <string>
ls
ls -la
git checkout <directory> -f
exit
ls
export <string>
vim <file>
cat <string>
ssh-keygen -t <string> -b <number> -C <file>
grep -nr --include=<string> <string>
rm -rf <string>
git push
clear
sudo apt update
exit
git status
cd <directory>
vim <file>
cd <string>
exit
ls
vim <file>
git rm
git commit -m <string>
ls
exit
rm <string>
git remote add origin <URL>
cd
systemctl restart <file>
less <string>
ls
man <string>
ls
cd <string>
sudo rfkill <string>
screen -S <string>
clear
man <string>
ls
ls
ls
git push
rm <string>
clear
rm -rf <string>
cp -rv -t <directory>
vim <file>
cd <string>
cd <directory>
cd <string>
sudo vim <file>
ls
cat <string>
ls
tail -f <string>
mkdir <string>
mv <string>
cd <directory>
vim <file>
rm <string>
vi <file>
chmod <string>
docker run -d -p <string> --name <string>
fg
git init
top
vim <file>
ls
apt install -y <string>
sudo deluser --remove-home <string>
sudo yum install -y <string>
bash <file>
touch <file>
find . -name <file> -type <string> -print -delete
git stauts
npm install
sudo chmod +x <string>
cd <string>
cd ..
ls
vi
vi <file>
source <string>
sudo cat <directory>
sudo apt-key add -
nano <file>
sudo poweroff
grep -rlI <string>
rm -rf <string>
ls
then
then
cd ..
<directory> -m <file>
clear
git pull
git add .
vim <file>
git add
git add .
cd <string>
fg
ls
sed <directory>
cd <string>
su
read -p <string>
tail -f <string>
exit <number>
git add <string>
sudo pacman -S <string>
history -a
cd <string>
vim <file>
ls
ls
cd <string>
cd <directory>
cd <string>
git log
vim <file>
ps aux
ls
fg
git add -A
fg
git remote add origin
cp <string>
clear
sudo systemctl restart nginx
ls
mkdir <string>
ls
ls
dpkg --get-selections <string> <file>
cd <string>
grep <string>
go build <file>
top
man <string>
git status
sed <directory>
yarn add <string>
exit
sudo adduser <string>
cd <directory>
ls
ls -lt
node <file>
ls -arlt
read -e <string>
curl <URL> -u <string> -d <string> -d <string> -d <string> -d <string>
git commit -m <string>
python3 <file>
nano <file>
sudo find <directory> -type <string> -name <file>
ls
exit <number>
sudo ln -s <directory>
sudo pacman -Syyu
cd ..
cd
hostname
git add .
git init
ls
yarn <string>
sftp <file>
ls
git push
ls
git add .
hostname
mv <string>
ls
sudo apt purge <string>
sudo apt install <string>
vim <file>
clear
sudo ifconfig en0 ether <string>
sort -g
clear
journalctl -xe -t <string>
read -s -n <number>
vi <file>
ls
cd <directory>
ls
cat <string>
ls -al
ls
git commit -m <string>
dpkg-shlibdeps: erro: <string>
cd ..
cd <string>
ls
vim <file>
exit
grep <string>
cd ..
git pull
ls
read
clear
sudo apt-get install <string>
sudo rm -r <string>
clear
git push origin main
sudo date -s <string>
sudo npm start
git add -A
python3 <file>
clear
ls
ls
sudo apt-get install -y <string>
ls
ls
ls -la
rg <string>
ls
clear
sudo stop uwsgi
cd <string>
wget <URL>
git config --global <file> <string>
docker-compose --version
cd <string>
fg
cd <string>
python3 <file>
rm -i --help
sudo apt install <string>
git reflog expire --all
ls
git config <file> <file>
vim <file>
uname
curl -fsSL <URL>
git commit -m <string>
cd <string>
cd ..
rm -rf <string>
ls
grep -v <string>
ls
docker rmi -f <string>
read -p <string>
exit <number>
ls
cat <string>
exit
ls
done
killall <string>
exit
git status
ls
git add <string>
vim <file>
cd <string>
mkdir -p <string>
ls
npm install
wget <URL>
ssh <string>
clear
source <file>
rm -f <string>
curl -sS <string>
git push -f
ls
sudo xbps-install <string>
vim <file>
rm -rf <string>
tail +x # want to display all the lines from x to y. This includes the xth and yth lines.
bash <file>
cp <string>
rm -f <string>
systemctl status <string>
clear
exit
ls
mv <string>
git commit -m <string>
chmod <number> <string>
npm start
ls
cd <string>
git add .
git init
git add <string>
git bisect good
ls
clear
git push
sudo apt-get -y <string>
tail -$2 <directory>
python3 <file>
sudo mv <string>
ls
vim
cd <string>
git rebase -i <string>
git push -u <string> main
ls
chmod <number> uploads -R
git commit -m <string>
sudo python <file>
apt install -y <string>
ps aux
read -s -n <number>
ls
mkdir <string>
git st
vi <file>
perl <file> --NO_HTSLIB
python3 <file>
ls
sudo apt-add-repository <directory>
git add -A
cd <directory>
npm run test
cd <string>
sudo apt install <string>
ls
sudo reboot
cd <string>
sudo snap install --classic <string>
cd <string>
sudo apt install <string>
vi <file>
python3.11 <file>
cp <string>
rm <string>
rm <string>
rm <string>
wget <URL>
git push origin
docker-compose up -d --build
ls
mysql <string>
rm -f -- <string>
ls
ls
git merge <string>
sudo ufw allow <string>
git commit
codedown javascript > <file>
cd ..
git remote add origin <URL>
vim <file>
systemctl status <string>
git push
cd <string>
sudo mv <string>
git checkout -
sudo apt-key add -
grep <string>
exit
sudo sed -i <directory> <file>
sudo poweroff
cd <string>
exit
cp <string>
git add <string>
ls
brew cleanup -n <string>
vim <file>
ls
cat <string>
ls
yarn <string>
mvn install
mkdir -p <string>
ls
rm -rf <string>
htop
ls
time <string>
ls
npm init
rg <string>
docker pull <string>
git st
cp <string>
ls
sudo apt-key add -
nano <file>
docker-compose up -d --build
git pull
git stash push -m <string>
hwclock
ls
vim <file>
git commit -m <string>
cd <string>
cd ..
git status
git add <string>
git commit -m <string>
git pull
ls -la <directory>
git init
ls
cd <directory>
git status
exit
python3.11 <file>
git pull
ls
exit <number>
sudo pavucontrol
vi <file>
ls -a
chmod +x <string>
done
ls -ltr
git commit -m <string>
ls
cd
cd <string>
cd <directory>
git fetch
nano <string>
cat <string>
rm -fr -- <string>
ls
cd ..
sleep <number>
git --no-optional-locks <string> --error-unmatch -m --directory --no-empty-directory -o --exclude-standard <directory>
git commit -m <string>
cd <string>
ls
sudo reboot
mv <string>
ls
vim <file>
cd <string>
ls
sudo cp <string>
git stash clear
ls
sed <directory>
ls
else\
ls
clear
npm run bench -- -c <file> -n <file>
chmod u+x <string>
sed <directory>
vi <file>
nano <file>
top
cd ..
ls
ls
exit
cd
cd <directory>
systemctl status <string>
git rm -f <string>
chmod <string>
bash <file>
ls
curl --fail <string>
htop
tail -f <string>
chmod <number> <string>
cd
wget
shutdown -h <string>
exit <number>
top -p <number>
cd <string>
git add .
pwd
cd <string>
cd <directory>
ls
rm <string>
ls
kill -s <number> <number>
ls -al*
vim <file>
exit
cd <string>
python3 <file>
sudo service <string>
ls
git commit -m <string>
ls
cd <string>
cd
git status
cd ..
ls -l
git push origin master
cp <string>
clear
git remote add origin <URL>
cd <string>
ls
ls
docker ps
docker run -d -p <string> --name <string>
ls -la
cd <directory>
vim <file>
cd <string>
scp <string>
clear
cat <string>
ls
ls -la
git push origin master
cd ..
git pull --all -u <string>
sed -i <directory>
time <string>
rm -rf <string>
sudo apt-get install -y <string>
git branch
git add <string>
git clone <URL>
sudo sh <file>
ls
sudo python <file>
cd
find . -iname <file>
wget --no-check-certificate <URL> -O <file>
cd <string>
git status
git add .
find . -empty -type <string> -print -delete
git branch
git status
chmod -x <file>
cd
ls
ls
exit
cd <directory>
ls
vim <file>
vi <file>
ls
clear
cd <string>
clear
docker stop <string>
git add <string>
git pull
man <string>
git merge <string>
touch <string>
git clone <URL>
ls
git add .
git add .
ls
nano <file>
cd <string>
vim . -NO
history -a
rm -R <string>
man -k <string>
then
git checkout <string>
python3 <file>
sudo timedatectl <string>
cd <string>
exit
git add <string>
git remote add origin <URL>
git add .
python3 <file>
cd <string>
python3 <file>
git config --get <file>
ls
cd <directory>
ls
fg
ls
clear
ls
ls
rm -f -- <string>
ls
ls
cat <string>
ls
sudo apt purge <string>
diff -u <string>
git push --set-upstream <string> master
which
git clone <URL>
cd
cd <string>
sudo visudo
sudo sed -i <directory>
cd <string>
npm install --global <string>
cd <directory>
cd ..
sed -e <string> -e <directory> -e <string> \
cd <string>
sudo apt-get install <string>
fg
npx <string>
nano <file>
docker compose up -d
git pull
ps ax
sleep <number>
cd
sudo mv <string>
sudo python <file>
find . -empty -type <string> -print -delete
sudo nvim <directory>
sudo tee <directory>
clear
sudo smartctl -a <directory>
git add .
ls -l
rm -rf <string>
cd ..
ls
cp <string>
cd ..
ln -s <string>
sudo code --no-sandbox <string>
dir
git push -u <string> main
zcat <file>
cat <string>
git describe --contains <string>
git config --global <file> <file>
sudo apt-get -y <string>
apt-get install <string>
grep -E <string>
ls
sudo systemctl status <string>
pwd
git commit -m <string>
ls
sed <directory>
rm <string>
clear
cd <string>
tail +n # Print nth line from file.
tar zxvf <file>
git checkout <string>
rm -rf <string>
git pull origin master
fg
cd ..
git commit
cd ..
sudo apt rm <file>
clear
vim <file>
fg
fg
git filter-branch --index-filter <string>
nano <file>
apt-get install --reinstall <string>
vim <file>
read -p <string>
rmdir <string>
cd -
apt-get install <string>
bash
chmod u+x <string>
docker image <string>
cat <string>
cd ..
ls
cp <string>
reset
ls
git commit -m <string>
chmod +x <string>
ls
cd <string>
history
ssh <string>
curl -sSL <URL>
mv <string>
docker images
tail -f <directory>
cd ..
cd <string>
mkdir <string>
git add .
fg
ls
cd <string>
head -n <string>
chmod <string>
mkdir <string>
ls
vim <file>
cat <string>
vim <file>
npm run test
curl -sSL <URL>
git add .
chown -R <string>
tmux set-option -g <string>
ls
ls
cd
wget -q -O - <URL>
htop
cd <string>
docker run --tty --interactive <directory>
git pull
ls
ls
clear
git checkout -- <string>
ls -la
clear
nano <file>
cd <directory>
docker push <directory>
sudo rm -rf <string>
ls
cd <string>
ls
git commit -a
cd ..
ls -al
cd <directory>
exit
man <string>
vim <file>
sudo systemctl enable <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
cd
git add -A
mkdir -p <string>
git add <string>
sed -i <string>
git push -u <string> bryan-guner
ls
ls
cd <string>
sudo python3 <file>
cd <string>
cp <string>
mkdir -p <string>
cd <directory>
fg
cd <directory>
wget <URL>
sleep <number>
sort --numeric-sort --key <string> --key <number> --key <number>
exit
rm -f <string>
ls
clear
sed -E -e <directory>
file <string>
cd <string>
cp <string>
exit
cd <string>
ls -al
sudo apt-get install <string>
paste -sd+ -
git push
ls
nano <string>
sudo touch <directory>
wget -qO - <URL>
zip <file> -@
curl -s <URL> -o <directory>
less <string>
eval <string>
git pull
grep <string>
ls -al
git switch -
ls
sed <directory>
git init
xrandr --output <string> --off
curl <string>
ls -ls <file>
ls
cd <string>
clear
ls
git commit -m <string>
ls
source <string>
git checkout -b <string>
cd <string>
cd <directory>
git status
sudo apt-get install <string>
git status
more
python3 <file>
git add .
cd <string>
cd ..
git push
sudo npm install
read <string>
perl -pe <string>
sleep <number>
ls
git add <string>
ls
sed <directory>
git pull -s <string> -X <string> <string>
npm run frontend
sudo easy_install -Z <file>
done
chmod <number> <string>
sort -hr <string>
curl <URL> --data <string>
rm <string>
sudo apt update
ls
ls
sudo apt update
sudo chown niten2:niten2 -R <directory>
git log
cd <string>
cp -r <directory>
git clone <URL>
scp <string>
npm test
sudo reboot
cd <string>
git
ls
mkdir <string>
ls
cd <string>
git rebase <directory>
view <string>
setg RHOSTS <file>
sudo pip install <string>
bash -v
chmod +x <string>
grep <string>
bash -v
cd <string>
git clone <URL>
ps
export <string>
head -n20
ls
sudo add-apt-repository -y <directory>
cd <directory>
touch <string>
find . -empty -type <string> -print -delete
sudo apt-get install <string>
ls
apt-get update
sed -i <directory>
sudo vi <directory>
ls
ls
cd <string>
cp <string>
npm run prod
bash
cd ..
git add .
sudo sysctl -w <string>
python3 <file>
rm -rf <string>
ls
clear
ls
exec <string>
read <string>
ls
cd ..
gsutil cp <file>
sudo scp <file> <directory>
git log
cd <string>
clear
make clean
sed -i <directory>
sudo dpkg --add-architecture <string>
git clone <URL>
git commit -a -m'WIP: <string>
ls
sudo apt-get install <string>
clear
cd <directory>
python3 <file>
ls
chmod <string>
less <string>
npm update
clear
clear
git clone <URL>
ls
mkdir <string>
psql -h <string> -U <string> -d <string> -L <file> -a <string>
vim <file>
find $dir -type <string>
docker exec -it <string>
read <string>
npm audit fix -f
mkdir <string>
cd <string>
python3 <file>
cat <string>
vi <file>
ps -al
ls -alrt <string>
cat <string>
git commit -am <string>
exit
vim <file>
npm run dev
git add -A
git checkout master
fg
sudo ufw allow <string>
cd <string>
wc -l <string>
cd <string>
rm <string>
tail -f <string>
npm i -g <string>
vim <file>
cd <string>
cd ..
ls
ls
ls
ls
sudo apt install <string>
git init
sed <directory>
cd ..
grep <string>
ping <string>
sudo mkswap <directory>
cd <string>
mv
ls
git checkout <string>
git init
ls -al
ps -u <string>
vi <file>
cd <string>
exit
cat <string>
git remote add origin <URL>
ls
sudo apt-get update
git stash
cat <string>
find . -type <string> -exec <string> -i <directory>
cd -
cd
ls
cd <string>
less <string>
sudo apt-get install <string>
ls
cd <string>
git commit -m <string>
curl -X <string> -H <directory> --data-urlencode <string>
ls
ls
grep <string>
vi <file>
ls
rm -r <string>
vi <file>
ls
rm -rf <string>
ls
cd <directory>
su
vim <file>
sudo apt-get install <string>
source <file>
npm run test:watch
tmux
cd <directory>
clear
vim <file>
git pull
sudo apt-get update
git config --global <file> <string>
ls
vim <file>
ls
sed -i <string>
vi <file>
sudo apt update
pkill picom
vim <file>
pacman -S <string>
vim <file>
exit
git push
clear
cd ..
python3 <file>
cd ..
clear
yarn <string>
exit <number>
sudo npm update npm -g
history
ls
vi <file>
git
git add .
cp -v <string> <directory>
ls
vim <file>
sudo vim <directory>
sed -i <string>
ls
vi <file>
npm audit fix
ls -ltr
wget -r <URL>
sudo updatedb
git add .
sudo vim <directory>
chown <string>
ls
pwd
cd <string>
more <file>
vi <file>
zeus.polsl.gliwice.pl - <number>
sed -i <string>
git push origin master
ls
cd <string>
ls
cd <string>
mkdir <string>
sh
git pull
ls
git add <string>
wget
git init
cd ..
sudo sed -i <directory>
clear
apt-key add -
git status
git status
clear
git push
cd <string>
ls
vim <file>
ls
ls
cd ..
mv <string>
git commit -m <string>
cd <directory>
git status
cd ..
ls
cat <string>
ls
vim <file>
ls
rm -rf <string>
ls
git push
cd <directory>
git rebase <string>
git commit -m <string>
cd <string>
vi <file>
ls
sudo ufw <string>
ls
ls
npm http GET <URL>
clear
git branch -M <string>
exit
cat <string>
vi <file>
git pull
git add <string>
ls
npm run test
grep -a <string>
ls
sudo python3 <file>
git add <string>
read -p <string> -r <string>
wget -qO - <URL>
cd ..
vi <file>
cd <directory>
fg
git diff
rm <string>
ls
sudo sed -i <directory> <file>
git init
ls++ -a
vim <file>
ls
git
mv <string>
npm i <string>
clear
ls
curl -S <URL>
ls
npm start
nano <file>
sudo ntpdate -q <string>
git clone <URL>
cd <string>
find . -name <file>
ps aux
cd ..
ls
grep --help
sudo airport <string>
vi
git config --global <file> <string>
sudo sed -i <directory> <file>
chmod +x <string>
git status
ls
exit
ls
read <string>
cd ..
chmod u+w -- <string>
ls
cd
git add -A
ls
cd <string>
git status
exit
ls -
git branch
pwd
scp <string>
ls
curl -o <string>
fg
vi <file>
ssh-copy-id <string>
fg
git commit -am <string>
npm i -D <string>
source <file>
sudo apt-get install <string>
sed -i <directory>
ls
chmod u+x <string>
git status
git push origin master
ls
ls -l
cd <string>
ssh-keygen -f <directory> -R <string>
cd <directory>
egrep -ri <string>
ls -l
git checkout -b <string>
dpkg -i <file>
git commit -am <string>
git remote -v
cd <string>
fg
helm upgrade --install <string>
npm install --save <string>
git st
ls
cd <directory>
source <directory>
rm nvim -r
chmod u+x <string>
rm -rf <string>
ls
wget -O <file>
sudo apt install <string>
ls
sudo rm -rf <string>
less <string>
git branch
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd <string>
service apache2 reload
pwd
cd <directory>
ps aux
read -rp <string> <string>
sudo systemctl enable --now <string>
ls
git pull origin master
cd <string>
cd <directory>
cd <string>
ls
mkdir <string>
killall <string>
cd ..
ls
git init
clear
sudo pacman-key --recv-keys <string>
git config --global <file>
sudo apt update
ls -ar
sh
<directory> <directory>
exit <number>
git push -u <string> master -f
exit <number>
sudo python3 <file>
eval <string>
exit
ls
grep -i <string> >files
sudo apt-get install <string>
python3 <file>
ls -la
rm -r <string>
git commit -m <string>
cat <string>
cd <string>
clear
rm -f <string>
ls
git rebase --onto <string>
git diff
sudo sed -i <directory>
ls
vi <file>
git status
less <string>
mkdir <string>
cd ..
history -a
ls
git commit --amenl
cat <string>
cd <string>
vi <file>
ls -l
mv <string>
ls -la
sudo apt-get update
ls
git br
git push
pwd
ls
rm -rf <string>
mv <string>
ls
ls -lRa
grep -r -I --exclude-dir=<string> <string>
ls
sudo pip install --upgrade <string>
bash <file>
vim <file>
fg
git add .
sudo nano <string>
clear
git push
vim <file>
git help
fg
cd <string>
sudo sed -i <directory> <file>
rm -rf <string>
cd <directory>
sudo bash <file>
ls
ls
sudo apt install -y <string>
git pull origin master
sudo apt-get install <string>
git push -u <string> master
reboot
ls
sudo npm install -g <string>
wget -q -O <file>
sudo systemctl start <string>
mkdir -p <string>
cd <string>
cd ..
kill -s <number> <number>
ls
git remote add origin <URL>
mv <string>
ip a l
cd <string>
ls
npm run make
tr
touch <file>
htop
mv -f <string>
ls -l
git status
read -r <string>
sudo lvcreate -L <string> -s -n <string>
history -c
ls
shutdown -h <string>
git rm -r <string>
ls
find . -name <file>
git status
pwd
git push origin master
tail -f <directory>
git init
vim <file>
source <string>
ls
rm <string>
vim <file>
exit
curl -O <URL>
nano <file>
diff <file> <file>
sed -ne <directory>
clear
print <string>
sed -n <string>
sudo ip link set <string>
cd <string>
<file> - <number>
ping <string>
ls
cd <string>
cd <directory>
sudo chown -R <string>
git clone <URL>
git init
sudo ufw allow <string>
mvn install
ls
cat <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
git status
cd ..
cd <string>
fg
du -sh <directory>
cd <string>
git pull -s <string> -X <string>
find . -name <string> -type <string>
cd <directory>
vim <file>
git clone <URL>
cd ..
git add .
git commit -m <string>
mkdir <string>
npm init
sudo apt-key add -\
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git add <string>
ls
vim <file>
vim <file>
which <string>
git status
docker
git commit
git status
sleep <number>
python3 <file>
dpkg -l
grep -i <string> >files
ls -l
git st
git add <string>
ls -lt
cd <string>
ls
ls
sudo ufw allow <string>
clear
man <string>
man <string>
python3 <file>
mv -r <directory>
git filter-branch --commit-filter <string>
clear
ssh <string>
git clone <URL>
git status
sudo apt install <string>
cd <string>
git add <string>
ls
find <directory> -type <string> -execdir <string>
sudo apt install <string>
less
cd <string>
rm -rf <string>
cat <string>
sudo vim <directory>
nano <string>
ls
sudo systemctl start <string>
npm install --force
ls
cd <directory>
docker exec -it <string> -- <string>
mkdir <string>
tail -15
fg
exit
cd <string>
exit
ls
find . -name <file>
clear
ls
read -r <string>
git log --name-status <string>
git branch -M <string>
sudo zypper install <string>
clear
vi <file>
git push origin master
pwd
grep <string>
fg
wget -q -O - <URL>
ssh dirlic@10.18.0.39 -p <number>
cd ..
git st
git add --verbose
ls
cd <string>
chmod --reference=<string> <string>
ls
cat <string>
docker exec -it <string> bash
npm run test
vim <file>
ls
git commit
mysql -p <string>
ln -s <string>
cd ..
ls
cd -
git add .
script/build.sh
ls
clear
git gc --prune=<string> --aggressive
vi <file>
wget `curl -s <URL>
source <string>
git revert
paste <string>
git branch
mkdir -p <string>
sudo reboot
ls
cp <string>
cd <directory>
sed -i -e <string>
fg
find . -empty -type <string> -print -delete
sudo ldconfig
cd <string>
npm run test
exit
cd <string>
sudo bash
ls
vim <file>
vim <file>
cat <string>
clear
ls -ltah
type <string>
grep <string>
rm -rf <string>
cd <string>
ls
ls
ssh <string>
grep <string>
ls
sudo sed -i <directory>
cp <string>
git pull origin master
chmod <string>
docker image ls
ls
rm -f <string>
cd <directory>
read -rp <string> <string>
sed
ls
sudo nano <directory>
ls
mkdir <string>
python3 <file>
clear
sudo ln -s <directory>
sudo apt yt-dlp --upgrade
mv <string>
top
lsblk
cd <string>
cat <string>
sudo apt-get check <string>
vi <file>
cd ..
wget <URL> -O -
bash
else\
sudo gpg -o <directory>
ls
sh <file>
sudo make
python3.8
rmdir --help
cat <string>
exit
git config --global <file> <string>
cd <string>
curl <string>
ls
awk <string>
vi <file>
cd <string>
sudo apt-get purge nodejs --auto-remove
grep <string>
sudo apt upgrade
ls
kill <number>
git fetch upstream
grep <string>
grep <string>
cd <string>
mkdir <string>
ls
curl -i -s <URL>
clear
ls
mv -f <string>
read -r -p <string>
sudo source <string>
git config --global <file> <string>
ls
exit
touch <file>
cd ..
df -h
ls
ls
shutdown -h <string>
ls
ls
sudo pacman -S <string>
git commit -m <string>
head -y <file>
cd <string>
npm test
cat <string>
tac <string>
time go run <file>
sudo apt install <string>
ls
exit
vim <file>
ls
tail <file> -n <number>
git branch
ls
less <string>
ls
clear
npm run test
ls
exit
cd <directory>
docker images
ps -a <string> selects all processes with a tty except session leaders
npm start
cd <directory>
cd <string>
ls
vi <file>
ls
exit
git push origin master
git status
git add <string>
ps -u <string> # lists your processes
brew install <string>
git switch -c <string>
xrandr -q
git add .
git push
sudo dnf update -y
cd <string>
type <string>
yarn add -D <string>
docker exec -it <string>
history
ls
ls
git pull
cp -iv <string>
git commit -m <string>
source <string>
ls
rm -r <string>
eval <string>
git status
cd <string>
clear
grep -f
npm run serve
git push -u <string> master
cd <string>
<directory> <string>
vim <file>
python3 <file>
docker tag <string>
docker push <directory>
git log
ls
git push origin master
ls
rm <string>
git remote
sh
xclip -i -sel <string> -f
sudo emacs <string>
ls -R
git add .
git push --set-upstream <string> <string>
ls -la
git commit -a -m <string>
ls
sudo docker rm corrade
ls
rm -r <string>
ls
vim <file>
cd <string>
clear
clear
git commit -m <string>
sudo apt-get update --fix-missing
npm run test
cd <string>
npm i --save-dev <string>
clear
htop
cd <string>
exit
ls
exit
apt-get install -y <string>
ls
sudo find $dir -type <string>
sed
cd ..
ls
cd <string>
exit
ls
sudo apt-get install <string>
ls
cat <string>
clear
ls
ls
ls -ltr
read <string>
ps aux
git commit --amend
cd <string>
git switch <string>
git remote
cd ..
cd <string>
rm <string>
ls
npm install -D <string>
sudo apt update
touch <string>
exit <number>
cd <directory>
cd ..
exit
exit
sudo rm -r <string>
cd <string>
vim <file>
curl -so- <URL>
wget <URL>
source <file>
cd <string>
vim <file>
clear
sudo rm -rf <string>
cat <string>
clear
ls
ls
pico <file>
wget --spider -S <directory>
cd ..
ls
git add .
find . -name <file>
git push -f --tags
wget <URL> -O <file>
killall <string>
ls
ls -l
cd <string>
clear
rm <string>
cd <directory>
sudo iptables -I <string> <number> -m <string> --state <string> -p <string> --dport <number> -j <string>
clear
ls
python3 -m <string> -V
cp <string>
sed -i <directory>
ls
git commit --allow-empty -m <string>
cd ..
ls -a
sudo tail -f <directory>
sudo docker run --rm --volume <directory>
git commit -m <string>
ls
cd <directory>
git status
cd <directory>
ls
sudo sed -i <directory> <file>
mkdir <string>
ls
clear
nohup <string>
vim <file>
clear
nano <file>
git pull
sudo sed -i <directory> <file>
npm run start
ls
cd <string>
ls
vi <file>
cd <string>
cd <string>
cd <string>
vi <file>
ls
vim <file>
vim <file>
find . -empty -type <string> -print -delete
ls
git pull
sudo dnf update -y
git status
sudo chmod a+r <directory>
sudo python <file>
git add .
xargs -0 <string> --files-with-matches <string>
cd <string>
exit <number>
cd
vim <file>
git remote -v
ls --color
ls
ls
exit <number>
ln -s <string>
git push -u <string> master
fg
sudo stop uwsgi
git add <string>
rmdir <string>
git status
ls
git add .
ls
do\
git init
sudo pacman -Suy <string>
cd <string>
curl <URL> -k
sudo python <file>
cd <string>
vi <file>
fg
journalctl -xb
clear
git add .
dpkg --clear-selections
cd <string>
ls
npm start
git push origin master
cd <string>
grep <string>
ls
ls
htop
cd <string>
ls
grep <string>
ls
top
xargs -L1 -I'{}' <string> <file>
python3 <file>
git commit -m <string>
ls
sudo docker run --rm --volume <directory>
ls
rm -R <string>
cd <string>
grep -rP <string>
vim <file>
cp <string>
done
vim <file>
python3 <file>
vi <file>
cd <string>
ln -s <string>
git push
git push
touch <file>
cd <string>
code .
sh
sed -E -e <directory>
sudo apt install <string>
tmux send-keys -X <string>
vim <file>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
ls
exit <number>
sudo apt install <string>
tail -f <file> --lines=<number>
ssh <string>
systemctl status <string>
ls
clear
sudo apt-get install <string>
ls
sed -i <directory>
rm -rf <string>
ls
git config <file> <file>
mv <string>
rm <string>
ls
ls
vi <file>
git adog
git init
sudo apt update
npx <string>
chmod +x <string>
cd <string>
ls
ls
ls
more <file>
ps aux
ls -ltrd <string>
python3.11 <file>
vi <file>
sudo <directory> restart
ls
git fetch
git help
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
less <string>
cat <string>
git branch -Df <string>
rm <string>
ls
npm i <string>
docker run -d <string>
ls
cat <string>
cd <string>
sudo mkdir -pm755 <directory>
exit
mv <string>
sed <directory>
sudo tail -f <directory>
cd <string>
mkdir <string>
git add .
ls
ls
xrandr --outpu <string> --off
ping <string>
less <string>
wget <URL> -O <directory>
fg
cd <string>
cp -r <directory>
history -w
vi <file>
ls
git submodule update --recursive
sudo nvim <directory>
rmdir <string>
ls
ls -l
cd <string>
npm run test
ls
vi <file>
ls
find <directory> -name <string>
chmod <number> <string>
help
cd <directory>
sudo apt-get install <string>
ssh <string>
ls
git reset --hard <string>
python3 <file>
ls
sudo sed -i <directory> <file>
cp <string>
history
bash
git commit
git push
git add <string>
source <string>
vi <file>
nano <string>
sed <directory>
sudo add-apt-repository <directory>
git pull
cd <string>
cd ..
ls
rm <string>
cd <string>
sudo nano <directory>
clear
exit <number>
git add .
cd ..
cd ..
ip route <string>
vim <file>
clear
python3 <file>
mv <string>
unset -f <string>
brew cask install <string>
git status
apt search <string>
exit
cd <directory>
npm install -g <string>
ls
curl <string>
cp -i <string>
cd <string>
git commit
ip -6 <string>
ls
find <directory> -type <string>
cd ..
exit
ls
ls
cd -
cd <string>
sed -E -e <directory>
ls -la
sudo docker images
fdisk -l
python3 <file>
rm -f <string>
sleep <number>
cd <string>
git init
ls
git config --global <file> <file>
git fetch
cd
diff -u <string>
awk <string>
git st
ls
git add <string>
cd <string>
git commit -m"update"
vim <file>
clear
docker-compose down <string>
nano <file>
exit <number>
vim <file>
git status
clear
killall <string>
cd -
cd <directory>
history -r
cd <string>
ls
apt-get -y <string> <string>
cd <directory>
docker exec -it <string> bash
vim
rvm --default <string>
ls
git remote add origin <URL>
time <string>
grep -Eve <directory> -e <directory>
npm install
exit
vi <file>
ps ux
fg
cd <directory>
clear
git pull
cp <string>
git revert --continue
sudo bash <string>
cd <string>
cd
cd <string>
ls -l
<directory> <string>
tmux
git status
more <file>
kill -9 <number>
sudo yum update -y
exit <number>
clear
nohup python3 <file> <string>
cd
ls
cd <string>
killall
ls
python3 <file> -sI <string> -sM <string> -dM <string> -dI <string>
unset -f <string>
python3 <file>
cd <string>
grep <string>
sudo sed -i <directory>
git commit
cd <directory>
touch <file>
byobu-tmux
cd <string>
sh <file>
npm install
env
ls
git stash -m <string>
ls -lAF
ls
ln -f <string>
grep <string>
ls
sudo prometheus --config.file=<directory>
nano <file>
git status
git clone <URL>
git push origin master
sudo apt upgrade
docker network <string>
clear
sudo sed -i <directory> <file>
clear
git please
awk <string>
ls
git add <string>
rm -rf <string>
cd ..
docker
git config --global <file>
git commit -m <string>
ls
sudo apt-get install <string>
ls
git restore <file>
mv <string>
vim <file>
chmod <number> <string>
source <file>
vi <file>
git add .
git status
unset <string>
tail -f <directory>
mkdir
ls -al
ls
ps aux
git commit -m <string>
cd <string>
xargs -0 <string>
cd
sed -E -e <directory>
sudo install_name_tool -change <directory>
find . -name <file> -type <string> -print -delete
sudo pacman -S <string>
ls
top
tar -xvJf <file>
cd ..
chmod <number> <string>
rm <string>
git init
ls
fg
cp -r <directory>
npm install <string>
sed <directory>
ls
capsctrl <directory> & disown
grep <string>
ls
cd <string>
pwd
ls
git remote -v
npm install -g <string>
composer
sudo apt remove -y <string>
sudo apt-get install -y <string> -r`
du
rm <string>
cd <directory>
cd <string>
python3 <file>
npm run test
cd <string>
bash
sudo flatpak update
vim <file>
mount -t <string> -o
sudo <directory> <string>
npm install typescript -g
git commit -m <string>
ssh-add <directory>
cd <string>
sudo sed -i <directory> <file>
ls
vim <file>
cp -r <directory>
git status
sudo python3 <file>
mv <string>
git add .
vi <file>
cd ..
cd <string>
cd <directory>
cd
cd <string>
tar -zxvf <file>
chmod <number> <string>
sudo fail2ban-client set <string>
ls
vi <file>
ls
git cat-file -p <string>
sudo sed -i <directory>
sudo sed -i <directory> <file>
sudo apt install -y <string>
exit
ls
git pull
git clone <URL>
cd <string>
cat <string>
git init
pwd
sudo apt-get install <string>
cd <string>
python3 <file>
vim <file>
ls
git remote add origin <URL>
read -r <string>
rm -rf <string>
sudo sed -i <directory> <file>
vim <file>
git co HEAD .
ls -la <directory>
tail -f <string>
cd <string>
sudo prime-select nvidia
print <string>
ls
cd <string>
ls -lh
ls
python3
ls
pwd
git push origin master
git add <string>
docker exec -it <string>
chmod <string>
vi <file>
git commit -m <string>
cd ..
cd <string>
git init
ls
ls
cd ..
ls
sudo rm -f <directory>
ls
mv <string>
bash
git pull
clear
cd
tmux source <file>
git pull
vim <file>
cd
ls n?d* -d
nano <string>
cd <string>
python3 <file>
cd <string>
cat <string>
cd <string>
ls -all <directory>
python3 <file>
ls
git status
git init
pwd
git commit -am <string>
python <file> runserver 0.0.0.0:2016
chmod +x <string>
cd <string>
git push -fu <string>
mv <string>
fg
mount --types <string> overlay --options <string>
sudo subl <string>
git status
more <file>
vim <file>
cd <string>
cd ..
exit
sudo ln -sf <directory>
read -rp <string> <string>
ls
clear
cd <directory>
cd <directory>
ls
sudo apt-get install <string>
date
npm start
vim <file>
killall -s <number>
iptables -I <string> -p <string> --dport <number> -j <string>
ls
<directory> <string>
docker run -d -p <string>
ls
python3 <file>
dpkg -i <file>
git push
cd ..
git push -u <string> main
git commit -m <string>
cd <directory>
apt-get update
git commit -m <string>
clear
clear
vim <file>
cat <string>
cd ..
sudo apt-get upgrade
brew services <string>
cd <directory>
cd <string>
ls
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
cd <directory>
vi <file>
find . -name <file> -exec <string> <string>
docker exec -it <string> bash
docker-compose up -d --build
cat <string>
sudo journalctl -u <file>
docker logs <string>
cd <directory>
find -name <string>
cd <string>
cd <string>
ls
ls
sudo pacman -S <string> --noconfirm
git branch
cat <string>
clear
git branch
systemctl status <string>
find src
cd <string>
git -f <string>
cp -r <directory>
cd <string>
rm -rf <string>
vim <file>
cd <string>
cd <string>
sudo bash
setg RHOSTS.*
yarn install
ls
git commit -m <string> --no-verify
rm -r <string>
ls
sudo npm install <string>
sudo apt install <string>
ls
vi <file>
cd <string>
cd <directory>
ls
rm -rf <string>
vi <file>
git commit -m <string>
rm <string>
ls
fg
ls
ls
clear
env
sudo shutdown now
ls
git add <string>
chmod <number> <string>
sudo snap uninstall <string>
ls
ln -s <string>
git status
cd ..
mv <string>
cd <directory>
vi <file>
cat <string>
pwd
git add <string>
ls -la
clear
sudo pacman -S <string>
ls
git reflog expire --expire=<string> --all
git push
git commit -m <string>
git push
alias <directory> -c <string>
git branch main
vi <file>
man <string>
exit
vim <file>
ls
sudo apt-get -y <string>
exit
sudo node <file>
source <string>
python3 <file>
ls
cd ..
sudo sed -i <directory> <file>
git ps
git status
mkdir <string>
exit
ls
sudo pcmanfm
ls
sudo sed -i <directory>
rmdir
more <file>
cd <string>
vim <file>
vim <file>
find . -type <string>
scp <string>
curl -X <string> -H <directory> -d <string>
sudo curl -fsSL <URL> -o <directory>
vim <file>
cd <string>
cd ..
grep -i <string>
exit
apt install <string>
ln -s <string>
python3 <file>
kill <number>
done
sudo apt-get update
man <string>
sudo yum install git -y
ls
sudo nano <directory>
type <string>
ls
ls
vim <file>
git commit -m <string>
vim <file>
grep -Eo <string>
clear
sudo git commit -m <file>
clear
rm <string>
git push
mv <string>
chmod +x <string>
make clean
git checkout <string>
mvn exec:java -Dexec.mainClass=<file>
rm <string>
apt-get -y -qq <string> <string>
cd <string>
clear
clear
perl
unset color_prompt force_color_prompt
nano <file>
kill <number>
grep -v <string>
open <string>
<directory> <string>
git commit -m <string>
git checkout <string>
cd <string>
ls
unset <string>
pwd
git difftool -y --cached
clear
ls
exit
git push
vim <file>
vim <file>
ls
git add .
sudo pacman -Ss <string>
sudo yum install <string>
su -s <string>
exit <number>
kubectl apply --filename <file>
npm i --save <string>
sudo pacman -Q <string>
ls
unzip -o <string>
cd ..
cd ..
ls
ls
grep -v -E <string>
git commit -m <string>
clear
ls
curl <string>
screen -X -S <string>
cd <directory>
sudo su
git commit -m <string>
sudo zip -r <file>
mv <string>
sudo dnf install -y <string>
perl <file>
<directory> -m <string>
cd ..
cat <string>
sudo fail2ban-client ping
grep -n <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
cd <string>
ls
ls
python3 <file>
<directory> <string>
touch <string>
cd ..
cd <directory>
sudo apt-get update
cut -d" <string> -f2-4\
git init
git pull
df -h
ls
sudo rm -rf <directory> <directory>
git init
pwd
git checkout <string>
clear
curl <string>
ls -a
awk <string>
sudo sed -i <directory> <file>
sudo reboot
curl -sSL -o <string>
nano <file>
cd <directory>
touch <file>
cd ..
ls
git push origin <string>
sudo a2enconf -q <string>
sudo apt-get upgrade
ls
sudo stop uwsgi
read -r -p <string>
ls
git pull
ls
clear
git log
cd <string>
pwd
git init
ls
cd <string>
vim
df -g
cd <string>
sudo groupadd docker
git clone <URL>
ls
ls
cd <string>
exit
find . -name <file> -type <string> -print -delete
sudo make install
vi <file>
grep -iaH <string>
cd <directory>
mkdir <string>
cd ..
ls
ls
ssh dirlic@10.18.0.39 -p <number>
file <string>
ls
cat <string>
cp <string>
nano <file>
git status
cd <string>
cd ..
cd <string>
awk <string>
ls
cd <string>
cd ..
clear
cd <directory>
npm start
cd
cd <string>
sed -r <directory>
let <string>
vim <file>
touch <file>
docker-compose -f <string>
git add <string>
python3 <file>
sudo cp <string>
exit
rm -f <string>
npm install -D <string>
cp -R <string>
clear
git checkout <string>
update-alternatives --config <string>
git pull
clear
python3
ls
<directory> <directory>
sudo ufw allow <string>
date <string>
cd <string>
vi <file>
git push origin main
cd <directory>
cd <string>
fg
curl <URL> -k
vim
git checkout -b <string>
sudo -i
touch <string>
git add .
git init
find . -empty -type <string> -print -delete
touch <string>
git add <string>
cat <string>
sudo reboot now
ls
vim <file>
git co master
cd <string>
find . -name <string> -print0
cd ..
fg
cat -n <file>
ls
ssh <string>
cat <string>
git clone <URL>
cd <string>
ls
git commit -am <string>
cp <string>
sed -i <string>
sudo pacman -S <string>
cd
ls -las
vi <file>
stat <file>
sudo apt-get update
cd <string>
git fsck
npm run dev
grep -v <string>
cd
ls
vi <file>
python3 <file>
mkdir <string>
ls
clear
<directory> <string>
ls
git log
setg RHOSTS.*
ls
pwd
git push -u <string> main
killall <processname> # kill all processes with the name
ls
git pull
ps aux
ls
ls
ls
ls
awk <string>
ls
clear
kill -9 <number>
exit
clear
cd
grep -v <string>
git pull
export <string>
docker-compose logs
vi <file>
sed <directory>
history -c
sudo nano <string>
sudo apt-get update
vim <file>
clear
history -r
ls -l
curl -fsSL <URL>
npm init -f -y
cd <string>
git diff <string>
sed <directory>
chmod <number> <string>
git rev-list --objects --all
cd <string>
rm -rf <string>
less <string>
rm -rf
ls
cat <string>
head
sudo apt install -y <string>
curl <string>
cd <string>
curl -s <string>
git filter-branch --index-filter <string>
ls
sudo apt update
rm -rf <string>
grep -nr --color=<string> --include=<file> <string>
vim <file>
vim <file>
cd <directory>
sudo apt autoremove --purge <string>
exit
exit
ls
touch <string>
sudo yum update -y
wget -q <URL> -O <file>
sudo git pull origin master
clear
cd <string>
ls
cd ..
unset color_prompt force_color_prompt
ls
ls
code <string>
rm -f <string>
chmod <string>
ls -a
ssh-copy-id
vim <file>
rm -r <string>
cd <string>
grep <string>
cd <string>
sudo yum install -y <string>
git pull
python3.11 <file>
rm -rf <string>
ls
sudo chown -R <string>
read -r -p <string>
cd <string>
ls -alrt <string>
git add .
rm -rf <string>
exit
cd ..
cd <string>
vi <file>
rm -r <string>
clear
vim <file>
ls
sudo apt-get install <string>
cd ..
cd ..
pwd
cat -n <string>
python3
git update
sleep <number>
cd <directory>
cd <string>
ls
cd <directory>
rm <string>
git show <string>
ls
git log <string> -- <string>
wget -q <URL> -O <file>
git restore <file>
sudo pip3 install <string>
git status
sudo rm -r <string>
exit <number>
python3 <file>
set
ls
sudo apt-get install <string>
git push origin <string>
sudo add-apt-repository <string>
ls
ssh <string>
done
curl -fLo <file> --create-dirs <URL>
then\
nano <file>
vi <file>
curl <string>
grep <string>
export <string>
nice
git add .
clear
git remote add origin <URL>
service apache2 restart
sudo apt-get -y <string>
sudo su
cd <string>
ls -l
clear
find . -empty -type <string> -print -delete
cp <string>
sudo make clean install
ping <string>
cd <string>
ls -la <directory>
<directory> <string>
vi <file>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
rm -R <string>
cp <string>
sudo cat <file>
vi <file>
chmod +x <string>
vi <file>
python3 <file>
ls
exit
git reset <string>
service mysqld start --skip-grant-tables
cd <string>
ls
sudo rm *
git init
cd
cd <string>
git reset --hard
rm <string>
cd ..
read <string>
wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=<string> --domains <file> --no-parent <URL>
sudo apt-get install -y <string>
cd <string>
ls -alF
ls
cd <directory>
git commit -m <string>
rm -rf <string>
exit
python3 <file>
screen -r <string>
chmod <number> <string>
ls -la <directory>
exit
rm <string>
shutdown -h <string>
vi <file>
git commit -m"help"
cd <string>
grep -E <string>
ls
date <string>
fg
exit
read -rp <string> <string>
npm run
ip a
git status
sudo setxkbmap -layout <string> -variant <string>
npm install -f
rm <string>
cd <string>
ls
cd <string>
vim <file>
ls
git add <string>
ls
ls
find . -name <file>
git checkout master
cat <string>
git add .
cd <string>
sudo install_name_tool -id <directory>
sudo apt-get install <string>
exit
ping <string>
cd ..
python3 <file>
ls
git commit
df -h
source <directory>
cat <string>
mv <string>
git commit -m <string>
vim <file>
git remote add origin <URL>
rm -rf <string>
git add <string>
cd ..
grep <string>
exit <number>
top
find $dir -type <string>
pwd
sudo touch <directory>
mkdir <string>
cd <string>
tr -d <string>
cd <string>
touch <file>
sort -g
wget -r <URL>
git status
sudo reboot
cd <string>
cd ..
python3 <file> -- <string> @CAMERA=<string> <string>
rm <string>
sudo chmod +x <string>
grep <string>
exit
chmod <string>
cp -r <directory>
sudo sed -i <directory> <file>
sudo reboot
cat <string>
sudo vim <directory>
exit
ufw allow <string>
ls
git status
cd ..
clear
sudo vi <directory>
cat <string>
python3 <file>
ssh-add <directory>
git status
git push
ls
exit
cd <string>
git commit -m <string>
ls
ssh dirlic@10.18.0.39 -p <number>
code <string>
vi <file>
docker stop <string>
git push
byobu-tmux
brew install <string>
sed -E -e <directory>
docker run -e <string> -v <directory>
ls
grep -i <string> >files
cd <directory>
sudo apt-key add -
git add .
ls
vi <file>
git add <string>
ssh <string>
git init
ls
apt-key adv --keyserver <file> --recv <string>
npm run test
ls
touch <file>
ls
man <string>
date <string>
cd <string>
ls -l
fg
vim <file>
ls
sudo chmod -R <string>
sudo vim <file>
git status
scp <string>
cd <directory>
sleep <number>
cd <string>
sudo rm -r <string>
cd ..
sudo gem install <string>
vim <file>
cd ..
ls
find . -depth -exec <string> <string>
curl <string>
fg
sudo ufw <string>
tmux
npm install -g <string>
npm i <string>
ls
git commit -m <string>
sudo apt-get upgrade
ls
sleep <number>
mkdir -p <string>
unzip <file>
vi <file>
ls
time <string>
sudo apt update
npm i <string>
git init\
cd <string>
sudo rm -rf <string>
cd <string>
cd <directory>
ls
git status
grep -i <string>
cd <string>
git checkout <string>
pkill <string>
wget -q -O <file>
rm -rf <string>
git reset
git reset HEAD^
export <string>
sudo apt-get install <string>
git status
ssh-keygen -m <string> -f <string>
vi <file>
curl -fLO <URL>
git add <string>
git clone --depth <number> <URL>
sudo -s -u <string> -H
fg
git checkout <string>
git init
git push heroku master
rmdir <string>
set
chmod <number> <string>
cd ..
sudo dpkg-reconfigure <string>
cd ..
git add .
ls
vim <file>
git config --global <file> <file>
git commit -m <string>
ls
clear
ls
tail -f <string>
ls
rm <string>
ls -l
ls
docker cp <string>
fg
uname -a
sudo python3 <file>
vi <file>
cd <string>
vim <file>
sudo apt install <string>
ls
cp <string>
date <string>
ls
grep <string>
mkdir -p <string>
cd ..
npm install <string>
htop
ls
pwd
git push
git commit -m <string>
exit <number>
cd ..
ls -l
exit
sudo nmcli con mod <string> <string>
bash <file>
rm <string>
git commit -m <string>
ls
chown -R <string>
wget -q -O <file>
vim <file>
exit
sed -E -e <directory>
clear
git commit -m <string>
rm -rf <string>
rm <string>
vi <file>
clear
git pull origin development
cd <string>
ls
cd <string>
cd
ls
vim <file>
git commit -m'Hot <string>
python3 <file>
clear
ls
git push
tar zxvf <file>
grep <string>
cd
sort
touch <string>
git stash
make clean
rm -rf <string>
ls
ls
ls
ls
sudo service nginx restart
git add <string>
grep -rP <string>
cd <directory>
git branch
cd <directory>
setg RHOSTS <file>
curl -s <string>
git push
vi <file>
rm <string>
grep <string>
ls
mv <string>
git status
cd <directory>
history
exit
unzip <file>
tar xvf <file>
fg
cd <string>
kubectl get <string>
sudo tune2fs -l <directory>
vi <file>
git add -A
sudo find <directory> -name <string>
rsync <directory>
cd <string>
tail <file> -n <number>
sudo apt -y <string>
python3 <file>
cd -
export <string>
rm -rf <string>
find . -empty -type <string> -print -delete
git push
bash
rmdir <string>
npm start
grep -vE <string>
python3 <file>
git pull origin master
clear
cd <string>
mv -f <string>
node <file>
ls -la
ls
sed -n <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
tmux set-window-option -g <string>
git push
cd <directory>
git remote add origin <URL>
cat <string>
grep <string>
ls
mv <string>
su root
cd <directory>
cd -
cd <string>
ls
clear
dir
git clone <URL>
git commit -am <string>
ls
ls
sudo apt-get upgrade
sudo nano <string>
clear
git push
sudo apt-get install <string>
cd <string>
exit
sudo dnf install -y <string>
cd <string>
ls -la
<directory> -c
read <string>
exit <number>
docker run --rm <string>
export <string>
ls
rm -f <string>
ls
clear
sudo apt update
cd <string>
chmod <string>
ls
pwd
npm run test
cp <string>
clear
chmod +x <string>
git pull origin master --allow-unrelated-histories
sudo apt-get update
git commit -m <string>
git pull
cp -v -t <directory>
chmod <number> <string>
sudo ifconfig en0 ether <string>
ls
uname -s
cd <string>
git push
ls
ls
clear
sudo apt-get update
git push -u <string> master
sudo
rm -rf <string>
chmod u+x <string>
top
ls
ls
git status
cd <string>
ls
ls
git commit -m <string>
vi <file>
cd ..
cd ..
exit
mkdir <string>
cd <directory>
patch <file>
fg
nano <file>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
sudo raspi-config
git pull
cat <string>
ls++ -a
git
git checkout <string>
exit <number>
open <string>
ls
chmod u+x <string>
ls
sudo dd <string>
ls
git status
cd <string>
ls
cd ..
su root
npm i <string>
sudo hostname <string>
exit
chmod <number> <string>
rm -f <string>
cd <string>
sudo apt-get install --no-install-recommends <string>
ftp <string>
ls
shutdown -h <string>
cd ..
ls
ls
sudo dpkg-reconfigure locales
rm <string>
cd <directory>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
vim <file>
git commit -m <string>
exit
cd <string>
git clone <URL>
cd ..
export <string>
ls
vim <file>
cd ..
ls
git add <string>
grep <string>
cd
sleep <number>
ls
mkdir <string>
sudo make install
chmod +x <string>
ls
curl -Lo <string>
ls
cd <string>
cd
curl -s <string>
then
cd <string>
wget -c -t <number> --retry-connrefused <URL>
ls
vim <file>
dpkg-reconfigure keyboard-configuration
cp -r <directory>
rm <string>
apt-get -f -y <string> <string>
sudo yum <string>
nano <string>
exit
pacman -Scc
git remote add origin <URL>
git status
sudo gpasswd -a <string>
ls
ls
vim <file>
ssh <string>
exit
ls
sudo dpkg -i <file>
docker logs <file>
git init
git remote add origin <URL>
ls
sudo start uwsgi
ssh -p <string> user@host # connects to host on specified port as user
sleep <string>
git remote add origin <URL>
vim <file>
git config --system --unset <file>
cd <string>
cd <directory>
fg
bash <file>
sudo pacman -S <string>
npm install
tail -f <string>
tail -f <directory>
git pull origin main
sudo addgroup --system <string>
git add -A
cd <string>
history
vi <file>
ssh -i <string> remote_user@remote_host
nc
cd ..
rm -f <string>
git init
git merge <string>
ls
git remote add origin <URL>
cd <directory>
cd <string>
exit <number>
npm install
cd <string>
scp -r <string>
sudo python <file>
sudo reboot
wget <URL>
rm <string>
exit
ls
cd <string>
ls
chmod <string>
cat <string>
vim <file>
ls
ls
ls
exit
ls
cut -d <string> -f <number>
git add -A
git push
git st
exit <number>
sudo service nginx reload
git clone <URL>
time <directory> -cpuprofile=<file>
cd <directory>
ls -al
vim <file>
sudo npm i prettier -g
ls -c
ls
done
sudo dpkg --configure -a
vim <file>
ls -l
git commit -m <string>
cd <string>
ls
git commit -m <string>
vi <file>
cp -r <directory>
vim <file>
fg
cd <directory>
brew install <string>
rm <string>
cd ..
vim <file>
cd ..
git add <string>
npm run test
cd <string>
ls -a
git
ls -a <string> <string>
tail -f <directory>
clear
git push -u <string> master
grep <string>
awk <string>
sh -c <string> -fLo <directory>
cd ..
ls
ls
git chekout -b <string>
git config
curl $URL -o <string>
ls
history
cd
ls
git status
sudo nano <directory>
exit
cd <string>
scp <string>
grep <string>
ps -auxwf
mkdir <string>
curl <string>
vim <file>
cp <string>
sudo loadkeys <string>
git clone <URL>
cd <string>
fg
ls
exit
vi <file>
ls -alrt
git pull
openssl req -x509 -new -key <file> -out <file> -days <number> -subj <directory>
git remote add origin <URL>
curl --fail -s <string>
read <string>
cd <string>
git cat-file -p <string>
ls
bash
vim <file>
read -p <string>
ls
git add <string>
git push -u <string> master
wget -qO - <URL>
ls
ls
cd <string>
git add <string>
cat <string>
git commit -m <string> --no-verify
clear
export <string>
curl <string>
cd <directory>
nano <file>
rm -rf <string>
rm <string>
df -H
ls
clear
su
cd <string>
git push
docker images
grep <string>
ls
nano <file>
git clone <URL>
docker ps
rm -r <string>
ls
cp -r <directory>
sudo tail -f <directory>
ls
sudo npm install -g <string>
printf <string>
vim <file>
cd <string>
cd <directory>
git diff-tree --no-commit-id --name-only <string> <string>
find -name <string> -type <string>
clear
rm -f <string>
done
cd <directory>
docker-compose up
ls
clear
git remote add origin <URL>
mkdir -p <string>
vim vim -S <file>
cd <directory>
ls
sudo apt install <string>
sudo docker kill corrade
cd <string>
wc
sudo apt --purge <string>
clear
ls
clear
sudo apt autoclean -y
git add .
mv <string>
rm <string>
ls -l
cp <string>
exit
ls
exit
cd <string>
git checkout <string>
pacman -S <string>
cd <string>
cd <string>
cd ..
ssh <string>
git clone <URL>
ls
cat <string>
sudo tee <directory>
man <string>
exit
git push -u <string> master
bash
git push
curl -fsSL <URL>
git checkout git checkout -b <string>
git status
unset color_prompt force_color_prompt
git remote add origin <URL>
systemctl status <string>
ls
read -rp <string> <string>
less <string>
cd <string>
sudo ls <directory>
read -p <string>
git rm --force <string>
cd <string>
cd
sudo db3_load -T -t <string> -f <file>
script/build.sh
ls
cd <string>
sudo cp <string>
cd <directory>
cd ..
done
python3 <file>
cd ..
ls
vim <file>
sudo ifup <string>
cd <string>
cd <string>
npm run start
ls
cd <string>
touch <string>
sudo pacman -Syyu <string>
grep <string>
exit
ls -all
cd <string>
cd <directory>
history
git config --local
more <file>
ls
sudo vi <directory>
cd <directory>
setg RHOSTS.*
rm <string>
git push origin master
ls
cd <string>
sudo su
git add .
read -r -p <string>
ls
grep -E <string>
exit
cd <string>
sudo docker rm corrade
ls -l
ls
ls
cd <directory>
export <string>
cd <string>
cd <directory>
tar -zxvf <file>
vim <file>
wget <URL> -O <file>
sed -n <string>
sudo apt-get install <string>
git branch
ls -l
cd ..
clear
cd <string>
git br
cd <string>
sudo sed -i <directory> <file>
ls
printf <string>
ls
grep -i <string>
sudo ifconfig en0 ether <string>
clear
git pull
chmod <number> <string>
else\
git commit -m <string>
clear
exit
ls
exit <number>
cd <string>
source <directory>
git st
cd <string>
git add <string>
top
ls
cd <directory>
ls -alrt
vi <file>
git add .
chmod <number> <string>
git pull
git status
vi <file>
exit
curl <string>
systemctl --help
git branch -d <string>
cat <string>
ls
lsof -i
usermod -a -G <string>
cd <string>
clear
git checkout <string>
cd ..
sudo nano <directory>
export <string>
find .
sudo apt update
npm audit fix -f
ls
ls -la
ls
ls
vi <file>
git checkout <string>
docker-compose logs --follow <string>
git pull
git status
touch <file>
git pull
source <directory>
cd ..
sudo stop uwsgi
ls
cd ..
mkdir <string>
service <string>
sudo groupadd -f -r <string>
cd ..
npm install <string>
su -s <string>
vim <file>
node <file>
grep <string>
ls
code
ls
ls++ -a
sort -u
sh
ls -l
git branch
top
cd ..
find . -empty -type <string> -print -delete
cd <string>
apt-cache policy <string>
wget -q -O <file>
ls
vim <file>
ls
history -a
vim <file>
wc -l <string>
ls
vim <file>
sudo pip install <string>
git fetch
ls -la
git remove <string>
git add .
ls
vim <file>
source <directory>
touch <file>
ls
git status
ls -altr
sudo apt-get install <string>
cd ..
vim <file>
ls
ls
git rm --cached <string>
exit
git branch
docker run -d -p <string> <string>
read -p <string>
docker login <file> -u <string> --password-stdin <string>
sudo apt update
git reset --hard
vi <file>
clear
wget <URL>
time go run <file>
cd ..
python3
wget download_url -O <string>
cat <string>
tmux kill-session -t <string>
cd <directory>
nano <file>
vi <file>
sudo nano <file>
git add .
cd <string>
sudo nano <directory>
cd
mkdir <string>
cd <string>
python3 <file>
git clone <URL>
ls
vi <file>
cd <directory>
ls
ls
vi <file>
ls
sudo apt install -y <string>
docker-compose logs --follow <string>
node <file>
sudo apt-get -y <string>
cd ..
grep <string>
sudo reboot
npm run dev
ls -la
man <string>
git add <string>
sudo apt install <string>
git diff
cd ..
chmod +x <string>
docker run -it --entrypoint <directory>
which <string>
ls
ssh-keygen
cd <string>
ls
vim <file>
rm -f <string>
ls
vi <file>
vi <file>
mkdir <string>
systemctl start <string>
ls
cd <directory>
clear
ls
vi <file>
git config --global <file> <string>
sudo apt-get install <string>
vi <file>
sudo docker kill corrade
cd <string>
cd ..
cd ..
git --version
curl -L <URL>
cd ..
grep <string>
ls
exit
ls
sort -n
wget -O <file>
mkdir <string>
exit
exit
cd <string>
sudo apt-get install -y <string>
mvn compile
sleep <string>
exit
chmod <string>
npm install <directory> -D
git status
docker-compose down
login root
git status
sudo apt update
curl <URL> -u <string> -d <string> -d <string> -d <string>
ls
touch <file>
mkdir <string>
vim <file>
cd <string>
git reset --hard
fg
vim <file>
tmux
sudo apt update
sleep <number>
clear
systemctl restart <string>
ls
source <string>
git commit -m <string>
rm -f <string>
ls
ssh -p <string>
cd <directory>
clear
git status
git add .
git commit --allow-empty -m <string>
ps -auxwf
cd ..
sudo iptables -L -n --line-numbers
ls
mkdir <string>
cd ..
ls
apt-get install <string>
ls
git push -u <string> master
wget <URL>
clear
cd <directory>
setg RHOSTS <file>
cd <directory>
git
cd
cd <string>
git commit -m <string>
git log
ls -l
cd ..
ls
ls
ls
ls
ls
sudo apt install
sudo apt-get update
chmod <number> <string>
done
nano <file>
ls
ls
git clone <URL>
git status
cd ..
git --version
sudo zip -r <file>
sudo gem install <string>
ls
ls
git add --all
cd ..
ls -R <string>
cd ..
ls
cd <string>
grep -vE <string>
ls
sh <file>
git clone <URL>
clear
git add <string>
reboot now
curl <URL> --silent
vim <file>
sudo apt-get update
ls
cat <string>
sudo apt-get install -y <string>
cat <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
fg
wget -nc <URL>
nano <file>
git add .
sudo xbps-install <string>
git push
cd <string>
then\
vim <file>
exit <number>
git reset --hard <string>
time curl --header <file>
python3 <file>
ls
rm -rf <string>
ls
cd <string>
ls
rmdir <string>
vi <file>
rm <string>
git add <string>
git config --global <file> <string>
ls
clear
exit
git commit -m <string>
mvn compile
cd <string>
git config <file> false
ls
sudo apt-get update
sudo sed -i <directory>
killall <string>
git pull
rm -rf <string>
sudo sed -i <directory> <file>
cd <directory>
pwd
git clone <URL>
find . -name <string> -exec <string> -c <string>
vi <file>
who
ls -a
find . -name <string> -type <string>
git add .
git push
git push
rm <string>
cd <string>
ls
git add .
sudo shutdown
cd <directory>
exit
awk <string>
ls
cd <string>
npm install
git commit -m <string>
<directory> <string>
fg
pwd
sudo systemctl restart nginx
wget --post-file=<string> --header=<directory> <string>
env
cp <string>
else\
cd <string>
ls -r <string>
ls
more <file>
git commit -m <string>
ls
ls
git push
vim <file>
exit <number>
cd <directory>
git status
sudo pacman -S <string>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
git diff <string>
sudo apt-get update
cd
git commit
git add -A
git stash
ls
cd
ls
clear
vi <file>
apt-get -y -qq <string> <string>
sed <directory>
git --version
docker exec -i -e <string>
mv <string>
curl -X <string> -d <string> OR SELECT <string>
fg
vim <file>
vim <file>
unset color_prompt force_color_prompt
rev
chmod -x <file>
jq <string>
clear
vi <file>
awk -f <file>
mv <string>
git remote -v
clear
ftp <string>
ls
cp <string>
ls
ssh-keygen -t <string> -C <file>
git clone <URL>
clear
exit <number>
rm -rf <string>
sudo install -Dm644 <file>
cp <string>
cd <directory>
rm -r <string>
sudo apt-get install <string>
apt-get install <string>
ls
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
clear
ls
cd <directory>
sleep <number>
cd <directory>
sudo lvextend -L <string>
git push origin main
ssh <string>
docker-compose up -d --build
curl -fsSL <URL>
cd <directory>
cd <directory>
ssh <string>
vim <file>
curl <URL> -u <string> -D <string> -X <string>
cd ..
systemctl start <string>
ls
find src
cd <string>
sudo rm -r <string>
ls -l
rm -f <string>
kubectl version --short
nano <file>
sudo du -h --max-depth=<number>
cd <string>
cd <string>
pwd
ls -l
local <string>
ps -aux
sudo python3 <file>
unset color_prompt force_color_prompt
exit <number>
vim <file>
cd ..
ls
rm <string>
npm ERR! <string>
sudo chown -R <string>
cd <string>
git add .
cd <string>
git clone <URL>
ls
docker exec -it <string> bash
vim <file>
cd <string>
journalctl -xeu <file>
cd ..
sudo systemctl restart <string>
grep <string>
git clone --depth <number> <URL>
clear
lsblk
git add <string>
ssh-keygen -t <string> -b <number> -C <file>
fg
git add .
sed -i <directory>
cd <directory>
python3
cd <string>
vim <file>
ls
git status
mv <string>
done
curl -H <directory> -X <string> -d <string>
git remote -v
cd ..
cd <string>
curl --header <string>
git status
cd <directory>
sed -e <directory>
npm install -g <string>
cd <directory>
ls
du -ach
vi <file>
ls
ls
cd ..
git remote add origin <URL>
git remote remove origin
ls -al
git push origin main
exit
cd <directory>
git push -o <string>
npm run dev
sudo sed -i <directory> <file>
ls
grep -wPrc <string>
cd <string>
find -name <string> -type <string>
exit
python3 <file>
head -y <file>
exit <number>
git push -u <string> master
sdiff -Wia <file>
cd ..
sudo systemctl disable <file>
vi <file>
reboot
cd
git clone
docker run -it --rm --volume <file> --volume <string>
ls
git status
cd ..
shutdown
ls
vi <file>
sudo npm install <string>
ls
npm i <string>
openssl rand -hex <number>
scp -P <number>
ls
git checkout master --force
ls
exit
sudo apt-get install <string>
cd <string>
ls -l
vi
cd <directory>
ls
ls
sudo netstat -plnt
git push
cd <string>
pwd
vim <file>
git remote add origin <URL>
cd ..
sed -e <string> -e <directory> -e <string> -n -e <string>
pwd
sudo sed -i <directory> <file>
sudo python3 <file>
cat <string>
ls
tail -$2 <directory>
cd <string>
sudo apt-get -y <string>
ls
yarn install
read -p <string>
cd <directory>
git commit -m <string>
ls
git status
python3 <file>
else\
clear
sudo vim <file>
git commit -m"update"
cd ..
wget <URL>
npm test
sudo make install
rm -r <string>
ls
nano <file>
git pull origin main --rebase
bash configure --with-freetype=<directory> --disable-ccache
git add .
ls
mkdir <string>
find . -empty -type <string> -print -delete
cat <string>
ls
ls
mv <string>
cd <string>
fg
perl <file>
vi <file>
cd ..
git remote add origin <URL>
systemctl status <string>
nano <file>
ls
apt-get update
ls
vi <file>
ls
ls
docker-compose up -d --build
sudo groupadd -f -r <string>
chmod <number> <string>
cd <string>
cd <string>
cp -v <string> <directory>
ls
ls
git push
git clone <URL>
rg <string>
git init
cd ..
ls
exit
vim <file>
export <string>
cd <string>
vim <file>
sudo jupyter-notebook --allow-root
sudo docker run -d -P --name <string>
ls
cd <string>
npm uninstall <string>
cd <string>
sudo apt-get -y -qq <string> vim
ls
kubectl <string>
exit <number>
exit
egrep <string>
vim <file>
ls
ls
ls
sudo apt install <string>
tr -d <string>
vi <file>
docker rmi <string>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
vi -t <string>
ls
ls
sudo apt-get install <string>
cd <string>
git remote add origin <URL>
rm -f <string>
clear
top
cd <string>
git commit -m <string>
apt-cache policy <string>
clear
source <file>
sed -i <directory>
screen -rd <string>
cd
sudo du -h --max-depth=<number>
rm <string>
cd ..
chmod <number> <string>
ps -auxw
ls
curl -sS <string>
sudo apt-get install <string>
git status
userdel ken2
git commit -am <string>
ls
git commit -m <string>
clear
sudo mv <string>
bash
clear
git add <string>
ps xjf -u <string>
cd <directory>
shutdown -h <string>
cd <string>
sudo rkhunter -c --enable <string> --disable <string> --rwo
ls -la <directory>
sudo systemctl daemon-reload
sed <directory>
fg
git push -u <string> master
mv <string>
cd ..
cd <string>
cd <string>
ls
git status
mkdir <string>
done
npm run
ls
sed -i <directory>
ls
python3 <file>
git pull
rm <string>
ls
ls -l
touch <file>
rm -r <string>
cd <string>
cd <string>
ls
sort
view <string>
pwd
ls
chmod <number> <string>
clear
ip a
clear
cd ..
git switch -c <string>
sudo rm -rf <string>
ls
cd ..
pwd
ls
tail -fn <number>
git commit
ls
set -e\
cd <string>
git checkout <string>
su
cd <string>
cd <string>
ls
cd <directory>
cd <string>
read <string>
ls
clear
exit
s/:/ <directory>
ls
sudo python <file>
git push -u <string> master
git pull -vvv <string>
ip addr
ls -la
mv <string>
npm install -f
vi <file>
npm i --legacy-peer-deps
git commit -m <string>
byobu-tmux
ls
nano <file>
git commit -m <string>
cat <string>
apt-get update
ls
composer install
kill -9 <number>
git status
fg
mv <string>
source <directory>
sudo usermod -aG <string>
clear
ls
python3 <file> -sI <string> -sM <string> -dM <string> -dI <string> -v
sudo visudo
cd -
docker ps
git clone <URL>
git remote set-url origin <string>
vim <file>
clear
which <string>
cd ..
ls
print <string>
ls
cd ..
git commit -m <string>
touch <file>
read -rp <string> <string>
git add .
python3 <file> -sI <string> -sM <string> -dM <string> -dI <string> -v
sudo nmcli con mod <string> <string>
fg
git pull
chmod <number> <string>
git commit -m <string>
git branch -M <string>
curl <string>
ls
grep -i <string> -A <number>
ls
cd ..
git stash
vim <file>
pwd
mkdir <string>
ls
grep <string>
ping <file>
sudo zypper install <string>
mkdir <string>
rm -f <string>
git branch -D <string>
cd <directory>
vim <file>
rm <string>
git pull
cd <string>
npm install <string>
sudo apt-get update
docker images
grep <string>
export <string>
cd <string>
git commit -m <string>
mv <string>
ls -la <directory>
rm <string>
cd ..
cat -n <file>
cd <string>
cd <string>
sudo apt update
read -r <string>
git push --set-upstream <string> master
ls
sudo apt install docker-ce -y
vim <file>
export <string>
touch dile-`date -I`.txt
ls
ls
npm run test
sudo chown -R <string>
cd <string>
cat <string>
git checkout <directory> -f
git add .
git pull origin main
cd
rmdir <string>
cd <string>
unset <string>
git add .
open <string>
exit
cp <string>
ls
cd <string>
python3 <file>
cp <string>
ps aux
cd <string>
ls
cd ..
cd <string>
sudo aptitude purge <string>
rm -rf <string>
sudo add-apt-repository <directory> -y
cd <directory>
ls
sudo chmod +x <string>
codedown javascript
ls
date <string>
ls
man <string>
cd <string>
ls
docker-compose up -d --build
clear
ls
ping <string>
ls
ls -al
grep -P <string>
find . -empty -type <string> -print -delete
rvm <string>
kubectl get <string>
ls -la <directory>
sudo lpoptions -d <string> -l
cd <directory>
cd ..
clear
git branch -M <string>
ls
ping <file> -D
ls
ls
rm -rf <string>
ls
env
fg
ls
cd <directory>
fg
git fetch -p
wget <URL>
clear
git pull
cd <string>
vim <file>
ls
git pull
curl -X <string> <URL> -d <string> -d <string> -d <string>
ls
npm audit fix -f
sudo sudo -i <string>
find . -size <string> -a -print -a -exec <string> -f <string> \
ls -la
git pull
sudo cp -r <string>
chmod <number> <string>
sh -c <string>
ls
ls
git restore <file>
ls
exit <number>
git pull
ls
perl <file>
cd
find . -name <file> -type <string> -print -delete
dpkg-divert
ls
ls
nano <file>
exit <number>
apt install tor -y
vi <file>
cp <string>
chmod <number> <string>
sudo apt-get -y <string> <string>
exit
sudo nano <directory>
ls
pwd
git status
node
mkdir <string>
vim <file>
ps -auxwf
clear
git commit -m <string>
mkdir <string>
history -w
sudo git add <string>
cd
git branch
git add .
sudo ntpdate <string>
<directory> -m <string>
grep <string>
systemctl status <string>
sed -n <string>
mkdir <string>
cd <string>
ls
find . -type <string> -name <string>
git status
cd <directory>
cd -
git push
cd
perl -v
ls
git fetch origin\
ls
git status
mkdir <string>
cd ..
sudo mkdir <string>
git filter-branch --index-filter <string>
cd <directory>
exit
ssh -Y <string>
ls
grep <string>
rev
ls
ls
sudo apt
ls
ls
cd <string>
sudo lsof -i -P -n
grep -o <string>
ls
ls
git commit -m <string>
sleep <string>
git checkout <string>
exit
rm -rf <string>
exit
cd <directory>
cat <string>
ls
nano <file>
cp <string>
vi <file>
docker -H <directory>
ls
exit
exit <number>
cd <directory>
wc -c <file>
ls
git commit -m <string>
git add .
grep <string>
git status
git remote add origin <URL>
cd ..
vim <file>
wget -qO - <URL>
cd
cp -r <directory>
cd <string>
find <directory> -type <string> -exec <string> {} -maxdepth <number> -type <string> -iregex <string>
file <string>
git status
git status
rm -rf <string>
ls
clear
ls
git commit -m <string>
man <string>
ls
clear
ps aux
rm -rf <string>
chmod +x <string>
git add .
ls -a
cd <string>
ls
exit
cd <string>
nano <file>
git push
less -RX
clear
cat <string>
read -r -p <string>
git pull
cd <directory>
ls
ls
cd <string>
ps -eal
git init
mv <string>
cd <directory>
read -rp <string> <string>
cp <string>
git push
docker commit <string>
cd ..
cd -
ls
sudo vim <file>
cd ..
ps -ef
done
npm run dev
cd <string>
npm install
git commit
eval <string>
cd ..
reboot
cd <string>
cd
git co HEAD .
cd ..
python3 <file>
open .
sudo ln -sf <directory>
ls
exit
sudo vim <file>
brew install <string>
find . -name <string> -type <string> -exec <string> -c <directory> -- <string>
git push
clear
git add .
ls -las
clear
cd <directory>
exit <number>
cp <string>
vi <file>
vi <file>
ls -l
head -n <string>
curl -O <URL>
git push origin main
cd <directory>
ls
cd
ls
rm -r <string>
source <string>
mv <string>
cd
else\
apt list --upgradable
ls
cp --no-preserve=<string> <directory>
chmod <number> <string>
done
cd ..
cd ..
exit
git clone <URL>
vi <file>
git pull
git status
git remote add origin <URL>
npm run test
sudo vi <file>
git init
env
cd
cd <string>
cd <string>
ls
exit <number>
sudo ufw status
cp <string>
git push -d <string>
chmod <number> <string>
cd <string>
pwd
ls
git commit -m <string>
cd <directory>
cd ..
ls -latr
exit
cd <string>
nano <file>
cd <directory>
cd <directory>
nano <file>
cp -R <string>
docker-compose build teh-germinator
git add .
cd ..
rm <string>
source <string>
sed -i <directory>
ls
git add <string>
ls
ps -C
ls
vi <file>
git push origin PTS-372_Remove_components_from_daily_tracker --force
vi <file>
ssh <string>
git status
ls
ls
pwd
exit
cd <string>
ls
cd <string>
git push -f
cd ..
sudo apt -y <string> <string>
ls
sudo apt install <string>
vim <file>
touch <string>
ls
tcpdump
cd <string>
node --trace-deprecation
exit
ls -alt
vi <file>
head -n1)
ls
rm <string>
cd <string>
cd ..
cd ..
git log
ls
git push origin PTS-720-fix_feature_flag_values_in_Germinator --force
clear
vi <file>
git status
tmux
uname -a
cd ..
cat <string>
vi <file>
git add .
ls -alrt
cd <string>
python3 <file>
ls
git add .
npm i react-native-swiper --force
ls
cd ..
vim <file>
systemctl is-active
sudo reboot
ls
ls
exit <number>
git remote add origin <URL>
git reset
cd <string>
cd <string>
sudo systemctl start <string>
ls
nano <string>
read -r -p <string>
touch <file>
ls
cd <string>
git branch
wget <URL>
git init
rm -rf <string>
vim <file>
ls
npx <string>
sudo apt-get install -y <string>
apt-get -y <string> <string>
cp <string>
ssh esther@10.18.0.41 -p <number>
ruby -ne <string>
git push --tags --force <string>
ls
sudo usermod -a -G <string> <string>
mv <string>
sudo certbot --nginx
git init
<directory> -m <file>
git branch -D <string>
mkdir <string>
vi <file>
cut -d, -f1,5,11,16
tmux kill-session -t <string>
bash <file>
ls
cd <string>
cd <string>
ls
sudo install <string>
git stash
ls
cat <string>
ls
ls
ls
cd <string>
git add .
cd <string>
egrep <string>
curl -fsSL <URL>
mv <string>
vim <file>
wget <URL>
export <string>
rm -rf <string>
sudo apt-get update
kill -s <number> <number>
file <string>
cut -f1 -d' <string>
git branch -M <string>
rm -r <string>
vim <file>
git add -A
lsblk
npm -v
python3 <file> --model-path <file> --conf <string> --img-size <number>
cd <string>
git commit -m <string>
sudo sed -i <directory>
clear
cp -r <directory>
git status
head -1 <file>
nano <file>
vi
sudo apt-get remove --purge <string>
git commit -m <string>
rm <string>
git clone <URL>
ls
ls
less <string>
ls
sudo curl <URL>
git clone <URL>
sudo less <directory>
git push origin master
sudo apt-get update
clear
git init
mv <string>
vim <file>
git init
exit
exit <number>
ls
wget <URL>
rm -rf <string>
systemctl status <string>
ls
sudo setxkbmap -layout <string> -variant <string> -option <string>
clear
cd
tar xvf <file>
fg
cd <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
cat <string>
exit <number>
sudo apt-get install <string>
cd <string>
rm <string>
ls
git commit -m <string>
git clone <URL>
git remote add origin <URL>
sudo apt upgrade
cd <directory>
sudo less <directory>
byobu-tmux
clear
touch <string>
kubectl <string>
git add <string>
cd <directory>
ls
cd <string>
git commit -m <string>
cd <string>
clear
git push
git branch
ls
clear
ls
exit <number>
ls
git commit -m <string>
exit
sudo systemctl status <string>
ip route <string>
sudo find <directory> -name <string>
rm <string>
sudo <directory> restart
cd ..
mkdir <string>
cat <string>
sudo xbps-install -Su
sudo su
vim
cd <string>
npm ERR! <string>
git inti -b <string>
ls
ls
git push
ls
python3 <file>
awk <string>
done
clear
clear
ls
cd <string>
git add .
cd
find . -type <string> -a <string> -name <file> -o -name <file>
fg
scp <string>
mv <string>
which <string>
git init
clear
git add <string>
systemctl status <string>
cd <directory>
npm ERR! <string>
brew uninstall <string>
python3 <file>
rm -r <string>
python3 <file>
fg
ls
git commit -m <string>
python3 <file>
clear
fg
npm -v
exit
less
sudo dnf install -y <string>
cp <string>
tmux
sudo dpkg --remove-architecture <string>
sh <file>
cat <string>
cd ..
docker-compose up
git clone <URL>
vim <file>
git commit -m <string>
git status
kill -9 <number>
git checkout -
bash
cd ..
git clone <URL>
ls
grep -i <string>
sudo rm -f <directory>
cd ..
rm <string>
docker rm -f <string>
ls -ltr
init <number>
cd ..
sudo ufw status
vim <file>
pwd
cd <string>
top
apt install -y <string>
git commit -m <string>
ls
ss -a
git lfs <string>
git commit -a
code <string>
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
cd <string>
ls
npm init -y
cd <string>
sudo xcodebuild -license
cd
git commit -m <string>
ls
vim <file>
top
curl <string>
git commit -m <string>
python3 <file>
tmux attach-session -d -t <string>
cd
read -rp <string> <string>
sudo passwd <string>
git clone --depth <number> <URL>
ls
git fetch origin\
apt-get -y <string> <string>
mv <string>
git status
npm install --save <string>
sudo nvim <directory>
git pull origin master
ls
head -n1\
ls
rm -rf <string>
ls
git push --set-upstream <string> main
clear
git add -A
history
git init
tmux new -s <string>
python3
git status
ls
git commit -m"update"
wget -r <URL>
ln -s <string>
fg
ssh-keygen -f <directory> -t <string> -C <file>
apt-get
docker stop boost
sudo service nginx restart
cd <directory>
ls
ls
ls -alt
exit
git remote -v
sudo kill <number>
npm ERR! <string>
cd <string>
cd <directory>
ls
vi <file>
chmod <string>
git log
cd <string>
cat <string>
sed -E -e <directory>
git push -u <string> master
ls
sudo apt-key add -
ls
git pull
sudo mkdir <directory>
ls
ls -al
rm <string>
egrep -v <string>
exit
ls -la
git status
go
cd <string>
bash --help
rm <string>
npm login
git add .
cd <string>
vi -t <string>
awk <string>
ls
read -n <number> -s -p <string>
chmod -R <string>
vi <file>
ls
sudo crontab -u <string> -e
git remote add origin <URL>
git status
export <string>
cat <string>
cat <string>
sudo apt-get autoremove <string>
cd
which <string>
ls
cd <string>
vim <file>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
npm run test
sudo unlink <string>
sudo apt update
ls
vi <file>
cd <directory>
cd <string>
clear
cd <directory>
git status
sudo apt-get install <string>
sed -i <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
sudo vim <file>
sudo systemctl restart nginx
cat <string>
sudo yum <string>
rm <string>
ls
ls
ls
export <string>
df # shows disk usage
cd <string>
git bisect bad
cd <string>
sudo chmod a+rx <directory>
nano <string>
ls
cd <string>
curl <string>
ls
exit
dmesg
ls
sudo make install
git stash pop
sort -g
ls
ls
npm install -g <string>
cd <string>
cd <string>
rm -f -- <string>
ls
mkdir <string>
clear
grep -Ev <string>
mkdir <string>
rm <string>
vi <file>
cat <string>
vim <file>
git status
sudo systemctl start <string>
read <string>
clear
gsettings set <file> <string>
ls
chmod <string> -- <string>
sudo python3 <file>
vi <file>
sudo reboot
brew tap <directory>
fg
python3 <file>
python3 -m <string>
cd <string>
ls
read -rp <string> <string>
git push -u <string> main
vi <file>
git add .
grep -v -e <string> <string>
cd <string>
ls
exit
cd <string>
cd <directory>
rm -r <string>
git add .
ls
sudo apt-get update
ls
git branch -m <string>
git commit -m <string>
npm run start
ls
git add -A
exit <number>
cat <string>
ls
ls
sudo -E <string> -y <directory>
eval <string>
ls -la
sudo apt-get -y <string>
ls
ls
docker-compose up -d --build
xargs grep <string>
sudo ls
cd ..
fg
ps
ls
awk -f <file>
pwd
sudo rsync -av --progress <directory>
ls
ls -l
cd ..
exit <number>
vim <file>
cd <string>
git clone <URL>
cat <string>
vim <file>
ls -l
pwd
vim <file>
wc
ls
ls
vim <file>
ping
ls
git push -u <string> master
cd <string>
clear
kill -9 <number>
cd ..
npm audit fix
man <string>
cat <string>
ls
cd <string>
git commit -"frankenstien's <string>
sudo apt-get dist-upgrade -y
sudo python <file> --cascade=<file> <number>
git push
sudo -u <string> psql
grep <string>
ls
vi <file>
cd ..
cd <directory>
vi <file>
docker network rm <string>
grep -E <string>
ls -la <directory>
git
curl -sSL <URL>
cat <string>
cd <string>
git clone <URL>
ls -l
chmod <number> <string>
cd <string>
python3 <file>
time <string>
ls
git remote add origin <URL>
rmdir <string>
docker images
curl -sSL <URL>
wget <URL>
chmod +x <string>
exit
ls
xargs -n1 <string> -h <file>
docker build <string> -t <string> --build-arg <string>
cd ..
sudo apt-get install <string>
cd <string>
sudo service nginx restart
apt-get install <string>
python3 <file>
ls
git pull
git pull origin master
cd
cd <string>
cd <directory>
git push
git add .
ps aux
ls
ps -auxwf
cd <string>
cd <directory>
cd <string>
grep -v <string>
cat <string>
docker build -t <string>
cd ..
byobu-tmux
grep <number> -w
vi <file>
sudo apt-get purge <string>
cd <string>
chmod u+x <string>
vim <file>
sudo easy_install
vim <file>
sudo npm install typescript -g
clear
git push
cat <string>
sudo apt-get install <string>
git status
git push
sudo apt upgrade
grep -r <string>
curl <string>
git pull
git add .
fg
fg
cd ..
cat <string>
git pull --rebase <string>
cd <directory>
ls
cd <string>
git config --global <file> <string>
mkdir <string>
pwd
tar -xvzf <file>
git status
cd <directory>
cd <string>
ls
cat <string>
docker exec -e <string>
rm -f <string>
ls
reset
sudo apt-key add -
sudo nvidia-settings -a <directory>
clear
ls
wget <URL>
cd <string>
cd <string>
brew install ${CASKS[@]} --cask
make clean
cd ..
git merge <string>
npm
cd ..
ls
ls
mkdir -pv <directory>
clear
cd <string>
sudo pip install <string>
git commit -m <string>
cd <string>
adduser test
chmod <string>
sudo apt-get install <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
sudo apk add <string>
cp <string>
vim <file>
vim <file>
tar xvf <file>
cd
git clone <URL>
clear
ls
cd ..
pkill <string>
rm -rf <string>
rmdir -r <string>
ls
git add <string>
find . -name <string> -type <string>
sudo less <directory>
cp <string>
cat <string>
grep <string>
ls
find <directory> -name <file>
rm <string>
ls
cd ..
find <directory> -maxdepth <number> -type <string> -exec <file>
php -- --install-dir=<directory> --filename=<string>
ls -xAh
cd ..
ls
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
cd <directory>
git checkout <string>
ls
cd <string>
pacman -S <string>
exit <number>
ls
install <string>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
sudo apt-get update
ls
nano <string>
cd <directory>
apt-key add -
sudo apt-get install -f
git reset --hard <string>
cd
git commit -m -n <string>
cd <string>
exit <number>
cd <string>
vi <file>
then
git checkout <string>
cat <string>
cd <string>
do\
git add <string>
git push origin master
ls
tmux a
npm run start
git push -u <string> master -f
clear
wget -r -A <URL>
ls
ls
cd <directory>
git push -u <string> main
sort
ls
cd <string>
exit
vim <file>
exit
git commit
sudo pkill <string>
sudo flatpak update
ls
find . -empty -type <string> -print -delete
mv <string>
curl -H <string>
tar -czf <file>
ls
cd <string>
git pull
ls
mv <string>
cd <directory>
cd <string>
cd <string>
git status
mkdir -p <string>
ls
sudo docker images
git remote add origin <URL>
code .
vi <file>
ls
git commit -m <string>
touch <file>
find . -name <file>
grep --exclude=<file> -rnw <directory> -e <string>
scp -r <string>
cd ..
cd
sudo python3 <file>
cd <string>
docker-compose
cd ..
cd <string>
cd <string>
clear
cd <string>
pwd
ls
cd <string>
sudo pip3 install <string>
docker run -d -p <string> --name <string>
vim <file>
git commit -m <string>
git switch <string>
history
dpkg-query -W -f=<string>
dotnet <string>
su -s <string>
ls -latr
git init
cd
npm i <string>
mysql -p <string>
cat <string>
cd <string>
sudo start uwsgi
docker build -t <string>
grep <string>
jq <string>
cd ..
docker push <directory>
git clone <URL>
node <file>
find . -name <file> -exec <string>
cd <string>
reboot
grep -ia <string>
python3 <file>
rm <string>
nano
code .
ls
read -p <string>
git stash
nano
cd <string>
ls
ls
ls
git commit -m <string>
rm -rd
git commit -m <string>
exit
ls
cd ..
ls
npm run dev
cd <directory>
clear
cat <string>
exit
clear
git restore --source=<string> --staged --worktree --recursive <string>
ssh-add
cd <string>
cp <string>
ls
git status
bash <file>
exit
cp <string>
sudo apt-get upgrade
ls
ls
exit <number>
sudo date -s <string> -sD - <file>
git commit
git tag <string>
ls
npm audit fix -f
ip link set <string>
systemctl --user <string>
clear
exit
ls
sed <directory>
sed -E -e <directory>
git commit -m <string>
ls
git commit -m <string>
cd <string>
grep -Ir <string>
bash
ls
touch <file>
sed -e <directory> -e <directory>
rm <string>
dir
git config --global <file> <string>
git stash PUSH -m <string>
sudo apt update --allow-unauthenticated
hostname
git status
ls
openssl x509 -req -days <number> -in <file> -signkey <file> -out <file>
cat <string>
cd <string>
git commit -m <string>
find . -type <string> -name <string> -exec <string>
ls
awk <string>
git add <string>
ls
env
cd <string>
mkdir <string>
ls
git commit -a -m <string>
ls
ls
sudo start uwsgi
rm <string>
clear
curl
mkdir <string>
docker ps -a
rm -rf <string>
vim <file>
git checkout -- <string>
vim <file>
head -n1
ls
curl <string>
docker run <string>
rm <string>
mv <string>
ls
ls
sudo rm -r <string>
sudo python <file>
mkdir <string>
git clone <URL>
cd <string>
<string> - <string>
sudo pacman -Ss <string>
ls
clear
ls
cd <string>
sudo sed -i <directory>
grep -v <string>
git init
ls
ls
vim <file>
mkdir <string>
exit
git push
ls
sed -i <directory>
ls -lR
vim <file>
ls
exit
exit <number>
git status
sudo nginx -t
cd <string>
ls
git remote remove
ln -s <string>
git remote add origin <URL>
git status
git status
ls
mv <string>
clear
git status
ls
docker
ls
git push origin main
ls -alrt <string>
exit <number>
git add <string>
cd <string>
git clone <URL>
sh <file>
sudo nano <file>
sudo rm -f <directory>
find . -name <file> -type <string> -print -delete
exit <number>
ls
ls
mkdir -p <string>
git add .
ls
cp <string>
git
cd <directory>
clear
cp <string>
sudo add-apt-repository <directory>
docker
alias <string>
cd <string>
python3 <file>
vim
exit
ls -1Rhs
cd ..
pwd
npm run devstart
ls
cd ..
clear
sudo make install
cd <string>
find . -name <file>
sudo wget -r --no-parent -A <string>
sudo apt install <string>
chmod <number> <string>
git status
vim <file>
cd
cd <directory>
ls
ls
sudo make install
cat <string>
ls
mkdir -p <string>
sed -i <string>
git commit -m
vim <file>
cd <directory>
git init
nano <string>
apt-get update
cut -d',' -f3 <file>
npm i
ls
ls
ls
telnet <string>
git log
git commit -m <string> --no-verify
ls
head -n <string>
su
grep -Fxn <string>
ps aux
git status
git push
ls
history
ls -F
ls
cd <string>
find $dir -type <string>
git push origin master
cd <string>
ls -la
ls
clear
source <file>
cd
vim <file>
ls
sudo nala <string>
ls
ssh-add <directory>
ls
apt-get install -y <string>
git add -A
cat <string>
openssl genrsa <number>
htop
cd ..
exit <number>
sudo ufw allow <string>
cd <string>
cd <string>
python3 <file>
ls
git commit -am <string>
pwd
sudo mv <file>
python3 <file>
curl -sfSL <URL>
mkdir -p <string>
ls
ls
vim <file>
sudo cd <directory>
kill -sigusr1 <number>
git rm <string>
clear
read -rp <string> <string>
cd <string>
ls
python3 <file> --model-path <file> --conf <string> --img-size <number>
cd ..
apt-get install <string>
sudo apt-get update
exit
unset color_prompt force_color_prompt
cd
exit
git push -u <string> main
sudo vim <file>
cd <directory>
git fetch origin\
vi <file>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
sudo powertop --calibrate
ls
git commit -m <string>
git adog
git commit -am <string>
kubectl --namespace <string>
vi <file>
sudo nano <directory>
rm -rf <string>
ls
cd <string>
read -rp <string> <string>
git commit -m <string>
ps -eal
ls
git diff
ls
sudo systemctl status <string>
cp <string>
stat <file>
ls
ls
git status
diff <file>
git reset --hard
clear
su -
ls -a
git add .
exit
mv <string>
vim
cd ..
git bisect good <string>
service apache2 reload
sudo pacman -S <string>
cd <string>
tail +n # Print nth line from file.
sed -Ei -e <directory>
cd
sudo rm -rf <directory> <directory>
pwd
git pull
git log
clear
cd ..
git pull
sudo apt-get update
sudo nano <file>
pwd
cd
nano <file>
cd <string>
cd <string>
npm install -g <string>
ls -lrt
touch <string>
cd <directory>
cd <string>
shutdown -h <string>
git add .
read -p <string>
read -r <string>
mkdir <string>
telnet --help
rm -f <string>
ls
vi <file>
mkdir <string>
sh
ls -alh
sudo apt autoremove -y
git status
npm install --save <string>
sudo mkdir -p <directory>
fg
ls
df -h
cd <string>
git pull
exit <number>
git push origin master
git add .
sudo python <file>
cd ..
cd
git add -A
ls
cd <directory>
cd <string>
clear
ls
cd <string>
vim <file>
ls -al
rm -rf <string>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
exit
ls
curl <string>
clear
vi
sudo systemctl enable <string>
pwd
sudo apt install <string>
sh <file>
ls
ls
export <string>
cd ..
git push
sed -e <directory> -e <directory>
exit
sudo sed -i <directory> <file>
ls
iptables
git add .
git commit -m <string>
nc <number> <number>
exit
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
mkdir <string>
ls <directory> -lA
cd <string>
pwd
cd <directory>
bash <file>
vi <file>
ls
cd <string>
wget -O <file>
cd <string>
ls
grep <string>
ls
ls
mkdir <string>
mkdir -p <string>
rm -rf <string>
codedown <string>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
ls
git commit -m <string>
curl <string>
git push origin main
cd ..
awk <string>
git status
clear
grep <string>
exit
find . -type <string> -exec <string> <directory> {} +
sudo apt install <string>
git init
multitail --no-repeat -c -s <number>
cd ..
curl -X <string> --data-binary <string>
sudo add-apt-repository <directory>
ls
grep -v <string>
cat <string>
sudo su -
su - <string>
ls
vi -t <string>
cp <string>
systemctl restart <string>
npm install -g <string>
sed -i <directory>
sed <directory>
vi <file>
cd
curl <string>
git clone <URL>
cd ..
git merge
npm create vite@latest <string>
uname -a
cd ..
chmod <number> <string>
xargs sed -i <directory>
exit
git rev-list --left-right --count <string>
ln -sfv <file>
find . -type <string> -exec <string> -i <directory>
git init
vim <file>
ls -ltr
sudo chattr -i <directory>
npm run dev
git add .
ls
ls -a
find . -empty -type <string> -print -delete
cd ..
cd <string>
npm run test
ls
time <string>
clear
exit
git commit
rm -rf <string>
ls
ls
cd <directory>
fg
which <string>
cd ..
sudo vi <directory>
sudo docker rm corrade
git init
cd <string>
sudo nmcli <string>
grep <string>
curl -LO <string>
systemctl start <string>
vim <file>
cut -d"/" -f <string>
sort -g
git push
cd ..
grep -i <string>
rm -rf <string>
more <file>
fg
vim <file>
sed <directory>
cd ..
ls --help
df
cd <string>
ls
top
python3 <file>
git push heroku main
git rm <string>
git push -u <string> master
pwd
grep <string>
touch <string>
git commit -m <string>
exit
yarn add <string>
cd <string>
ls
pwd
cd <directory>
git init
cd <string>
ping <file>
npm start
ls
cd <string>
cp <string>
chmod +x <string>
vim <file>
npm install -g <string>
tail -$2 <directory>
clear
sudo bash -c <string>
sudo mysql -u <string> -p
git push
sed <directory>
git pull
cd
git add .
cd ..
sudo git submodule update --init
ssh username@host --> <string>
sudo -s -u <string> -H
clear
cd <string>
ls
git remote add origin <URL>
ls
mv <string>
cd ..
clear
python3 <file>
ls
cd <directory>
cp <string>
ls
exit <number>
sudo sed -i <directory> <file>
git reset --hard
git status
cd <string>
exit <number>
ls -l
exit <number>
done
mkdir -p <string>
find . -size <string> -a -print -a -exec <string> -f <string> \
git commit -m <string>
cd <directory>
cd <string>
rm <string>
wget -r <URL>
cat <string>
vi <file>
ls
git remote add origin <URL>
mkdir <string>
git pull
xrandr
cd <string>
git add .
cd <directory>
node <file>
cd <string>
apt update --fix-missing
ls
install -Dm644 <file>
exit <number>
cd ..
sudo apt --fix-broken <string> gufw -y
touch <string>
npm run package
date
done
xargs -0 <string> <string>
cp -r <directory>
sudo vi <file>
done
cd <directory>
source <file>
ls
fg
dpkg-reconfigure <string>
python3.8 --version
find --version
ls
ls
ls -la
rm -rf <string>
sudo find <directory> -name <string>
pwd
rm <string>
cat <string>
ls
sed -i <directory>
sudo chown <string>
npm install <string>
vim
docker pull <string>
ls
chmod +x <string>
vim <file>
brew install ${FONTS[@]} --cask
cat <string>
cd <string>
cd <string>
cd <string>
vim <file>
ls
ls
cd <string>
sh
cd ..
sudo zip -r <file>
ls
cp -r <directory>
ls
cat <string>
git clean -df
git merge -v <string>
git push
git lfs install
ls -a
cd ..
npm start
ls -a
<directory> -m <file>
git diff
exit <number>
grep <string>
less <string>
git init
cd <string>
cat <string>
cat <string>
cd <string>
nano <file>
python3 <file> --snapshot
rm <string>
ls
ls
sudo apt-get update
cd ..
git describe --tags --exact-match <string>
ls
sudo snap install dotnet-sdk --channel <directory> --classic
cd..
ls
ls
sudo snap install node --classic
cd
cd <string>
vi <file>
cat <string>
cd ..
ssh <string>
mv <string>
ls
sudo apt update
read -p <string>
exit <number>
cd <string>
docker run -it --rm -v <string>
sudo dnf install -y <string>
help
ls
ls
curl -O <URL>
ls
cd <string>
ls
cd <string>
ls
xargs -n1 <string> -i -E <directory>
cd <string>
git co HEAD .
su root
sudo apt install python3-pip -y
cd <string>
ls
sudo scutil --set <string>
<directory> <string>
vim <file>
cat <string>
git br
ls
clear
cd <string>
cd ..
cd <string>
select(.status.containerStatuses[].name==<string> <string>
git push origin master
sudo mkdir -p <directory>
vi <file>
clear
cd
git status
git pull
npm publish
ls
eval <string>
ls
ls
mkdir <string>
python3 <file>
git config <file> <file>
ls
cd <string>
docker-compose logs
man <string>
cd ..
exit <number>
cd <string>
cd <directory>
fg
ls
git config --global
git commit -m <string>
cd
ls -l
npm run start
python3 <file>
clear
ls
sudo apk add <string>
fg
fg
screen -r <string>
find . -name <file>
find . -empty -type <string> -print -delete
ls
sudo python <file>
exit
ls -la
man <string>
exit <number>
else
cd <string>
ls
ssh -CqTnN -L <string>
git merge --no-commit --no-ff <string>
cd <string>
mvn install -Dskiptests
xargs -L1 -I'{}' <string> -rE <string>
cd <directory>
git commit -m <string>
ls
sed -i <string>
cd <string>
sed -i <string>
sort -r -h
cd <string>
ls
sed <directory>
ls
ls
git status
read -rp <string> <string>
ls
git checkout <string>
git add .
screen -S <string>
cat <string>
ls
git stash apply <string>
git status
sudo apt -y <string>
exit
git add
ls
rm -f -- <string>
cd ..
ls
sudo apt-get update
read -r -p <string>
ls
git status
read <string>
cd <string>
ls
mkdir <string>
vim <file>
mv <string>
tail -10)
git commit -m <string>
chmod +x <string>
sudo chmod -R <number> <string>
git bisect bad
npm run test
mkdir <string>
rm -rf <string>
git commit -m <string>
read -r -p <string>
mount
git branch -M <string>
cd <string>
unset color_prompt force_color_prompt
git push
grep <string>
export <string>
mv <string>
git fetch upstream
tail +n # Print nth line from file.
git commit -t <string>
rm <string>
sudo make uninstall
ls
pwd
ls -la
cd <string>
git add .
cp <string>
mkdir <string>
git push -u <string> main
cd <string>
ls
sudo snap install --classic <string>
ls
cd <string>
cd ..
ls
clear
ls
cat <string>
cat <string>
cd ..
pwd
ls
git branch 2> <directory>
apt search <string>
ls
sudo cp -r <string>
grep -q <string>
read -p <string>
cpio -p -d -v <string> <string>
git push
git commit -m <string>
ls
cd <directory>
python3 <file>
which <string>
pwd
cd <string>
sed <directory>
sudo apt-get upgrade
history
sudo mv <file>
scp <string>
setg RHOSTS <file>
sudo make clean install
sudo chmod u+x <file>
ls
grep <string>
ls
ps ax
cd <string>
cd <directory>
ls
pwd
pwd
ls
ls
sudo chmod +x <directory>
git clone <URL>
ls
vi <file>
sed <directory>
du -skh <string>
git config --global <file> <file>
exit <number>
vi <file>
cd <directory>
pwd
git clone <URL>
npm list
code <string>
sudo apt-cache show <string>
cd <directory>
ls
sudo apt-get install <string>
ls
grep <string>
cat <string>
ls
vim <file>
cd ..
docker images --filter <string> --filter=<string> -aq
ls
git push
git add <string>
docker ps
read -rp <string> <string>
ls -al
ls
grep <string>
cat <string>
git add <string>
top
LANG=<string> rpm -qp --queryformat <string>
tmux
true
cd <string>
cat <string>
source <string>
mkdir <string>
cd <string>
cd <string>
cd <directory>
cd <directory>
find . -type <string> \( -path <string> -o -path <string> -o -path <string> -o -path <string> -o -path <string> -o -path <string>
mv <string>
exit
tail -f <string>
ls
grep -v -f <string>
cd <string>
cd <string>
read -r <string>
cd <string>
open <string>
sleep <number>
git commit
history
ls -la
capsctrl <directory> & disown
npm run bench -- -c <file> -n <file>
python3.9 -m <string>
ls
rm -rvf <directory>
sudo python2 <file> --cascade=<file> <number>
cd ..
git commit -m <string>
ls
git push origin <string>
fg
strings <file>
ls
cd <directory>
npm i
cd <string>
ls
ls
cd <string>
cd <string>
fg
read <string>
ls
exit <number>
cd <string>
cat <string>
cd ..
vim <file>
cd <string>
more <file>
ls
git remote add origin <URL>
clear
su
nano <file>
vim <file>
docker-compose up -d --build
cd <string>
cd ..
which <string>
clear
git pull
done
git commit -m <string>
git add .
npm update
sudo reboot
git push
exit
git add .
cd
sed -E -e <directory>
cd <directory>
vim
cd ..
ls
git init
git pull
git config --global <file> <string>
sudo npm install -g <string>
exit
git add <string>
rsync <directory>
cd ..
sed -i <directory>
wget -q -O - <URL>
cd <string>
cd ..
git push
git checkout <string>
exit
git add .
git commit -m <string>
ls -a
git pull
git commit -m <string>
ls
cd <string>
git config --global <file>
rm <string>
git commit -am <string>
diff -e <string>
clear
python3 <file>
sudo apt update
service apache2 reload
ls
git pull
git clone <URL>
ls
git commit -m <string>
ls
mvn compile
cd <string>
sleep <number>
df # shows disk usage
ls
ls
cd ..
docker-compose up -d --build
cd ..
sudo yum <string>
grep -i <string> >files
docker run --name <string> --rm -p <string>
cd ..
ls
cd <directory>
mkdir <string>
sed -E -e <directory>
ssh <string>
sudo -i
cd <string>
cd ..
vim <file>
scp <string>
grep <string>
htop
cd
clear
vi <file>
cat <string>
cd <string>
cd ..
mkdir <string>
exit
git branch
git commit -m <string>
unset color_prompt force_color_prompt
npm start
xargs -L1 <string> clone
rm -r <string>
ls
git add.
sudo sed -i <directory> <file>
ls
sudo mount -t <string> -o <string>
clear
vi <file>
git pull origin master
grep -i -A <string>
ls
clear
cd <string>
git commit -m <string>
git remote add origin <URL>
mkdir <string>
ls
source <file>
fg
cd ..
vi <file>
perl <file>
git exit
npm install --only=<string>
history -a
rm -f <string>
git merge <string>
cd <directory>
tar -C <directory> -xzf -
sudo apt-get update
cp <string>
cd <directory>
man <string>
cd <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <string> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file>
git commit --amend --no-edit --no-verify
ls
python3 <file> --model <string> --batch_Size <number>
npm install bit-bin -g
cd <string>
vi <file>
git add .
git config --global <file> <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
mv -f <string>
ls -alSX
git commit -m <string>
ls
ls
git status
git status
git diff --staged
git clone <URL>
fg
vim <file>
cd <string>
vim <file>
sudo apt update
cd <string>
git commit -m <string>
cd <string>
read <string>
sudo apt-get install <string>
git push --set-upstream <string> <string>
git flow <string>
ls
cd <string>
ls
python3 <file>
git add .
git remote add origin <URL>
exit <number>
cat <string>
date
find . -xdev -type <string>
mv <string>
ls
pwd
alias <directory> -c <string>
ls
git commit -am <string>
ls
tail -n$KEEP <string>
su
python3 <file>
git pull
cd <directory>
grep <string>
git push -u <string> master
git log
vi <file>
git log -p <string>
vim <file>
less <string>
nano <file>
scp <string>
cd <directory>
exit <number>
git
git push
vim <file>
exit
cp -r <directory>
ls
cd ..
ls
git add -A
cd <directory>
cd <string>
git status
ls
cd <string>
rm <string>
cd <string>
cd <string>
clear
curl -fsSL <URL>
cd
sudo make install
sudo apt install <string>
python3 -m <string> list -o
ls
cd ..
rm -r <string>
sudo apt install <string>
exit <number>
unset color_prompt force_color_prompt
cd ..
npm i <string>
git commit -m <string>
printf <string>
fg
ps
du -kh
cd <directory>
cat <string>
sudo tee <directory>
cd <directory>
rm -rf <string>
cd <string>
rm <string>
cd <string>
cd <directory>
chmod -x <file>
cd <directory>
git co -b <string>
git status
sudo sed -i <directory> <file>
apt update
sudo service nginx reload
ls
yarn add <string>
npm install
git push
ls
sort -u <string>
git add <string>
grep <string>
jq
cd ..
cd ..
cd ..
cd <string>
sed <directory>
zip <file> -@
rm -rf <string>
ls
source <string>
chmod <number> <string>
cd ..
python3 <file>
mkdir <string>
cat <string>
ls
git submodule add <URL>
ls
sed -i <string>
ping <string>
cd
sudo apt --purge <string>
read -p <string>
clear
cd <string>
mvn -B <string> -DartifactId=<string> -DgroupId=<file> -DarchetypeArtifactId=<string> -DarchetypeVersion=<string>
sudo -u <string>
git init
man <string>
vi <file>
npm run test
pwd
rm <string>
cd
ls
ls -a
ls
cp <string>
git reset --hard <string>
python3 <file>
rm <string>
kubectl apply --filename <file>
stat -c <string>
ls
ls
cd <directory>
sudo systemctl start <string>
ls
yarn add -D <string>
vim <file>
cd <directory>
cd <string>
mv <string>
git reset
git
ls
sudo rm -rf <string>
read <string>
node <file>
sudo vim <directory>
xargs -L1 <string>
clear
sudo update
sudo tail -f <directory>
git status
fg
ls
ls
git commit -am <string>
git remote add origin <URL>
sudo systemctl status <string>
sudo dd <string>
cd ..
cd <string>
python3 <file>
cd <string>
sed <directory>
cd <string>
git status
alias r -"ranger"
apt install <string>
cp <string>
git push
ls -all <directory>
cd <string>
htop
cd <string>
cp
cp <string>
npm run coverage
wget <URL>
sudo cat <directory>
rm -rf <string>
exit <number>
python3 <file>
cd ..
wget -O <file>
sudo im-switch -s <string> -z <string>
sudo apt install <string>
git remote add origin <URL>
history -a
make clean
ls
cd <string>
done\
sudo apt-get update
export <string>
top
cd <directory>
clear
ls
cd <string>
git pull
git checkout <string>
git push
git add <string>
sudo apt-get update
clear
git pull origin main
ls
cd <string>
cd <directory>
ls
vim <file>
nano <file>
apt-get -y <string> <string>
ls
git remote add origin <URL>
sh <file>
exit <number>
vim <file>
git pull
vim <file>
cp -r <directory>
find . -empty -type <string> -print -delete
wget -q -O <file>
git push
ls
git commit -m <string>
mv <string>
clear
sudo service nginx restart
docker build -t <string>
cd <string>
ls
git remote add origin <URL>
reset
git branch -M <string>
time go run <file>
cd <string>
sed <directory>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
cd ..
ls
sudo -E <string> -
exit
nano <file>
apt-get update
npm audit fix -f
exit
sudo bash <file>
ls
cd ..
git status
touch <file>
cd ..
cd <string>
git add <string>
sudo lppasswd -a <string>
git push
setg RHOSTS.*
ls
ping <file>
sudo powertop --calibrate
apt-get install -y <string>
vi <file>
git add <string>
head -n1
cat <string>
cd <string>
cd ..
docker logs <string>
ls
ls
rsync <directory>
diff <file> <file>
git log
ls
vi <file>
ls
ls
ls -a
ls
sh -c <string>
git rebase --abort
clear
cat <string>
git clone <URL>
vi <file>
cd <directory>
git clone <URL>
history
ls
git -c <string>
ls
ls
cd <string>
clear
rm -r <string>
cd <string>
ps aux
git pull
wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=<string> --domains <file> --no-parent <URL>
done
ls
ln -s <string>
fg
ls
git push
cd <string>
ls
clear
awk <string>
git add .
clear
cd <directory>
ping <string>
git config --global <file>
npm run dev
git status
code .
cd <string>
cut -d <string> -f1 <string>
fg
ls
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
make
cat <string>
sudo apt install -f
wget --convert-links --adjust-extension --page-requisites --no-parent --trust-server-names <string>
export <string>
ls
cd <string>
dir
mkdir <string>
ls
git add <string>
rm -rf <string>
ls
grep -i <string>
cd <string>
source <string>
sudo dnf install <string>
apt-cache show <string>
ls -la <directory>
cat <string>
pwd
touch <string>
ls
git add <string>
source <string>
cd <string>
ls
git remote -v
which <string>
find . -name <file>
sudo systemctl start <string>
cd <string>
sudo systemctl start <string>
cd <directory>
find . -empty -type <string> -print -delete
chmod +x <string>
ls
cd <string>
cd
git init
python3 -m <string> install <string>
git status
cd <directory>
sudo pacman -S <string>
ls
ls
ls _build
grep -R <string>
git config --global <file> <string>
ls
exit
wc -c <file>
ls
git init
git checkout -b <string>
git remote set-url --add --push <string>
clear
vim <file>
sudo apt-key adv --keyserver <file> --recv <string>
vim <file>
cd <directory>
ls
ls
sudo apt-get install <string>
exit
mkdir <string>
cd <directory>
git diff <string>
vi <file>
ls
tail -f <string>
git clone <URL>
python3 <file>
sudo apt-get --assume-yes <string> <string>
cd ..
ls -al
cd..
cd ..
wget -q -O - <URL>
npm create vite@latest
git push -u <string> main
sudo su - <string>
sudo yum -y <string> <string>
cd <string>
git clone <URL>
git commit -m"update"
ls
ls -al
ssh <string>
sudo mv <file>
mv <string>
ls -las
sudo apt-get dist-upgrade
exit
fg
ls
git remote add origin <URL>
docker system prune -a -f
sudo chmod <number> <directory>
git commit
exit
cd ..
curl <string>
git commit -m <string>
sudo apt update
ls
git commit -m <string>
wget -O <file>
cd ..
sudo git pull
git pull origin master
npm install
cd ..
git co -b <string>
man <string>
cd <string>
vim <file>
rm <string>
cd <string>
git commit -m <string>
sudo certbot --nginx -d <file> -d <file> -v
sudo apt install <string>
npm run build
clear
sudo mysql --user=<string> --password=<string> <string>
git commit -m <string> --no-verify
vim
exit <number>
python3.11 <file>
git push
do\
fg
rm <string>
read <string>
git status
grep <string>
git checkout <string>
less <string>
ls
clear
ls -1 <directory>
rmdir <string>
mv <string>
ps ax
vim <file>
git remote set-url origin <string>
tail <file> -n20
exit
ls
htop
ls
ls
cd <string>
udevadm control --reload-rules
ls
install <string>
vim <file>
less <string>
exit
read -s -n <number>
pwd
cd ..
npm i
sudo curl -L <URL> -o <directory>
ls
vi <file>
ls
git clone <URL>
chmod +x <string>
ls
grep <string>
git branch -d <string>
find $dir -type <string>
vi <file>
sudo dnf swap <string>
find <directory> -type <string> -mtime <string> -exec <string> -f <string>
sudo nmcli con <string>
ls
exit
git remote add origin <URL>
git push -u <string> bryan-guner
git push
mkdir <string>
pwd
git status
rm -rf <string>
cut -d. -f1
git status
cd <string>
kill <number>
cd <directory>
clear
ls
exit
docker-compose up -d --build
curl -sS --fail <string>
git remote -v
screen -r <string>
fg
git commit -m <string>
cd
cp <string>
cd ..
exit
find <directory> -type <string> -name <string>
git push -u <string> main
ls
find . -name <string> -printf <string>
sudo apt install <string>
ls
ls
npm i <string>
rm <string>
npm run serve
kubectl get <string>
clear
ls
ls
cat <string>
curl -L <URL>
npm uninstall -g <string>
cd ..
cd <string>
git checkout <string>
npm run build
mv <string>
mkdir <string>
kill -9 <string>
sort -n
read -s -n <number>
sh
git remote add origin <URL>
ls
git remote -v
ls
cd <string>
rm -rf <string>
rm <string>
cd ..
cd <directory>
rm <string>
sudo ln -s <directory>
vi <file>
vi <file>
cd <directory>
cat <string>
ls -lrt
exit
find . -name <file>
rm <string>
code .
sudo kill <number>
scp <string>
ls
cd ..
hostname
vim <file>
ls
mvn compile
cp <string>
git fetch origin
npm install
rm <string>
git clone <URL>
fg
exit
git add .
ps -auxwf
pwd
cd <string>
cd ..
cd ..
git clone <URL>
vim <file>
clear
mv <string>
done
exit
sed <directory>
git add .
ls
touch <file>
vim <file>
sudo wget <URL>
more <file>
curl -O <URL>
git clone <URL>
ls
cat <string>
git commit -m <string>
sed -E -e <directory>
ls
cd <string>
less <string>
sudo chown -R <string>
sudo npm -v
mv <string>
ls -la <directory>
mkdir -p <string>
rm <string>
pwd
git switch main
ls
clear
source <directory>
cd <string>
tar -xvf <file>
ls
git add .
scp <string>
exit <number>
ls
cat <string>
cd <directory>
ls
sudo apt update -y
vim <file>
history
mv <string>
clear
cat <string>
read -r <string>
ls
vi
npm install compound -g
ssh <string>
sudo aptitude install <string>
ls
npm start
grep <string>
vi <file>
git pull origin master
touch <file>
cd <directory>
wget -nv -O- <URL>
ls
mkdir <string>
vim <file>
ls
service apache2 restart
mkdir <string>
grep -i <string> >files
vi <file>
git config --add <file>
docker-compose up -d --build
nano <string>
git add -u
ls
cd <directory>
cd <directory>
more <file>
clear
cd
ssh -p <string> user@host # connects to host on specified port as user
git commit -m <string>
sudo yum install git -y
rm <string>
cd <string>
git branch -M <string>
git remote -v
cd <string>
less
shutdown -h <string>
ls
cd <string>
sudo apt-get upgrade -y
ls
vim <file>
ls
pwd
tmux
sudo cat <directory>
exit <number>
cd ..
git pull
sudo apt-get install <string>
npm start
clear
npm i <string>
cd ..
ls
cd <directory>
ls
su - <string>
exit
ls
ls
ls
mv <string>
vim <file>
ls -ltr
ls
clear
rm -r <string>
exit
find . -empty -type <string> -print -delete
bash
cd <string>
sudo apt install <string>
rm -r <string>
ls
cd <directory>
ls
clear
ls
rm <string>
npm i <string>
ls
fg
mkdir <string>
cd ..
done
ls
vim <file>
cd
git remote add upstream <string>
ls
tail -15
git pull upstream <string>
cd ..
sudo yum update -y
mkdir <string>
rm -r <string>
cd
cd <string>
clear
aptitude -y <string>
cd <string>
python3 <file> --epochs <number>
cd <directory>
exit <number>
npm run test
ls
ls
find . -empty -type <string> -print -delete
sort -u <string>
sudo debconf-set-selections <string>
clear
sudo docker images
nc <string>
ls
git push origin master
git branch -v
ls -lrt
exit
cd <directory>
cd ..
exit <number>
cp <string>
exit
rm -r <string>
git log --oneline --all
sudo apt install -y <string>
clear
npm start
vim <file>
ssh <string>
vi <file>
cp -r <directory>
cd <string>
vim <file>
cd <string>
git remote add origin <URL>
ls
cd <string>
nano <file>
git status
sudo grub-install --root-directory=<directory> <directory>
sudo wget <URL> -O <directory>
docker container -ls
vim <file>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
history
ls++ -a
cd <string>
git clone <URL>
nano <file>
fg
ls
vim <file>
git config <file> <file>
cat <string>
ls
mv <string>
clear
ls
cd <directory>
gsettings set <file> <string>
git fetch origin
sudo rm -rf <string>
ls
mkdir -p <string>
npm run bench -- -c <file> -n <file>
git commit -m <string>
cd ..
nano <string>
clear
sudo apt install <string>
git add .
chmod <number> <string>
docker-compose build teh-germinator
fg
sudo docker rm corrade
node <file>
ls
ssh <string>
ls
fg
git clone <URL>
sed -i <string>
cat <string>
cd <string>
ps ux
ls
ls
ls
npm install -g <string>
cd <directory>
read -r -d <string> <string>
ssh <string>
cd <directory>
git push
ls
cd <string>
ls
sudo python <file>
clear
mkdir -p <string>
npm install
cd <directory>
pacman --noconfirm -S <string>
npm i
cd <string>
ls
ls
sudo usermod -a -G <string>
cd <string>
vim <file>
time <string>
cd
ls
ls
ls -R
ls
ls
ls -l
ls
git config --global <file>
sleep <number>
git init
ls
rm
pwd
npm run test
npm run test:watch
vim <file>
git checkout master
ssh-keygen -t <string> -C <file>
clear
wget -O <file>
npm i
ls
vim <file>
exit
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
top
cd <string>
cd <directory>
ls -la <directory>
rm -r <string>
ls
ls
clear
apt-get update
docker-compose logs
cd <string>
cd <directory>
git checkout <string>
exit
sudo shutdown
ls
cd <string>
ls
nano <string>
cd <directory>
npm audit fix
docker pull <string>
clear
sudo su -
read -r -p <string>
clear
ls
pacman -S <string>
vim <file>
ls
bash
grep <string>
sed -i -E -e <directory>
cd
git reset HEAD^
exit
yarn add <string>
npm install --save <string>
type <string>
ls
npm create vite@latest
vim <file>
git init
npm start
cd
ls
sudo shutdown now
cd <directory>
find . -maxdepth <number> -regextype <string> -regex <string> -type <string>
grep -Eho <string>
sed -i <directory>
docker ps # <string>
exit
git add <string>
rm -rf <string>
systemctl restart <string>
git commit -m <string>
chown -R <string>
mv <string>
cd ..
git clone <URL>
which <string>
sudo apt install yt-dlp -U
git init
ls
touch <file>
cd <string>
ls
sudo ufw allow <string>
time go run <file>
grep -C5
ls -la
docker-compose up -d --build
cd <string>
pkill <string>
cd <string>
wget -O <file>
git init
alias <string>
less -R
ls
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
cd ..
sed -i <string>
pwd
sudo rm -rf <string>
sed <directory>
cp -f <string>
cd ..
ls -ltr
git push -u <string> main
cd <string>
grep <string>
mkdir <string>
less <string>
cd ..
cd ..
ls
source <file>
shutdown
mkdir <string>
git pull
git diff
git commit -m <string>
git config --global <file>
npm run test
ls
vim <file>
ls
vim <file>
cd <string>
wc -l
ls
exit
read -r -p <string>
ls
git clone <URL>
ls -R
cat <string>
type <string>
exit <number>
touch <file>
vi <file>
ls
exit <number>
cd <string>
cd <string>
ls
code .
cd <directory>
ls
sleep <number>
wget -q -O <file>
python3 <file>
cat <string>
sudo dpkg -r <string>
vim <file>
clear
python3 <file>
cat <string>
vim <file>
sed -i <directory>
ls -la
nano <file>
exit
apt-cache policy <string>
sudo code <file>
vi <file>
curl -o <string>
sudo cat <directory>
cd <directory>
rm -rf <string>
sudo apt upgrade
ls
rm <string>
ruby
su
grep <string>
cp <string>
find src
npm init -y
ls
sudo sed -i <directory> <file>
git add <string>
ls
sudo systemctl enable <string>
git commit -a
ls
cd <directory>
sudo make install
rm -help
sudo python3 <file>
history
cd <string>
mv <string>
git push
rm <string>
touch <file>
mv <string>
cd <directory>
cd <string>
ls -l
more
cd
cd <string>
ls
exit <number>
git diff
git checkut -b <string>
ls
ls
rm --help
ruby -run -ehttpd <string> -p8000
sort
git clone <URL>
awk <string>
clear
ls
cd ..
ls
exit
ls
more
ls
sed -i -E <string>
sudo apt install -y <string>
rm -r <string>
clear
sudo chmod +x <string>
ps aux
sudo docker ps -aq
ls
df -h
npm install -f
sudo yum-config-manager --add-repo <URL>
vi <file>
exit
npm run prod
sudo dpkg --set-selections <string>
exit <number>
npm run frontend
git remote add origin <URL>
ls -l
ln -s <string>
cd ..
sudo -i
git clone <URL>
ls++ -a
sudo sed -i <directory>
sudo dpkg -i <file>
sudo curl <URL> -o <directory>
wget <URL>
clear
git status
ls
export <string>
chmod -x <file>
sudo git remote <string>
git fetch
sudo dnf install -y <string>
ls
ls
ls
more <file>
git config --global <file>
cd <string>
vi <file>
python3 <file>
sudo make install
sudo su -
read <string>
sed -i <string>
cd <directory>
git branch
cd ..
touch <file>
git init\
npm run dev
sed <directory>
fg
git commit -m <string>
cd ..
rm -f <string>
ps aux
ls
vim <file>
cd ..
cd
grep -rl <string>
cd <string>
stat -c <string>
python3 <file>
ls
cd ..
git status
brew install <string>
less
vi <file>
ls
<directory> -m <file>
cp <string>
mv <string>
git pull origin main
exit
sort -n -r
docker images
sudo python <file>
read -p <string> -r -s <string>
history -c
clear
git config <file> <string>
ls -ltr
clear
vi <file>
ls -a
find . -type <string> -mtime <string>
npm install <string>
ls -la
cat <string>
ls -al
ls
git push
cd <string>
ls
kill <number>
ls
docker-compose up -d
git commit -m <string>
ls
sudo rm -r <string>
ls
clear
ls
head -n <number>
vi <file>
sudo chsh -s <directory>
grep -E <string>
rm -rf <string>
vi <file>
cat <string>
install -g <directory>
curl <string>
cd <string>
git fetch upstream
git pull
python3 <file>
grep <string>
sudo git clone <URL>
cd <directory>
touch <string>
git commit -m <string>
mv <string>
cd <string>
vim
ssh <string>
curl <string>
python3.8 --version
vim
cd <string>
vim <file>
ls
ls
kubectl apply --filename <file>
chsh -s <directory>
clear
git commit --amend --reset-author
sftp <file>
ls
cd <directory>
git commit -m <string>
tmux ls
git commit -m <string>
git remote set-url <string>
git push origin master
vim <file>
ls
sudo poweroff
git log
npm i <string>
vim <file>
ls
dpkg-shlibdeps: erro: <string>
sudo apt-get update
sleep <number>
git pull
fg
git status
cd <directory>
ls
ls
git remote add origin <URL>
ls -R <string>
cd <string>
sudo nano <directory>
du
git pull
find . -type <string> -exec <string> -i <directory>
ls
sudo pacman-key --finger <string>
vim <file>
ps -a
exit
cd <string>
pwd
cd <string>
cd ..
ls
vim <file>
ls
clear
cd -
ls
cd <directory>
cd ..
vim <file>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
clear
curl <string>
ls
cd <string>
git log --all --pretty=<string>
vi <file>
pwd
git rebase <directory>
cd ..
cd <directory>
ls
ls
cd <string>
ls -lh <string>
git push -u -f <string>
exit
cd <string>
find . -name <string> -print
exit
python3 <file>
git diff
cd <directory>
git add .
cd ..
vim <file>
rm -f <string>
git add .
sudo ps aux
unzip <file> -d <directory>
git add .
git commit -m <string>
chmod +x <string>
grep <string>
sudo apt install <string>
ls
rm <string>
head -n20 <file>
cd <string>
source <file>
sudo mv <string>
wget -nd -m -nv <URL>
vim <file>
git init
history -w
cd <string>
ls
git status
ls
fg
nano <file>
sudo apt install <string>
rm <string>
ls
git status
sudo pip3 install <string>
rmdir <string>
history
ls -al
git clone <URL>
ls
exit <number>
sudo systemctl reload <string>
curl -o- <URL>
cd <string>
ls
cd <string>
cd <string>
sudo pacman -S <string>
ls
ls
rm -rf <string>
cd ..
exit
git pull
ls
cd <directory>
npm i prettier -g
open .
exit
sleep <number>
chsh -s <string>
ls
ls
cd <directory>
tar -xf <string>
exit
clear
cd <string>
more <file>
grep -nr --include=<string> <string>
select(.status.containerStatuses[].name==<string> <string>
git commit -m <string>
top
sudo apt install <string>
docker-compose up -d --build
python3 <file>
ls
find . ! -type <string> -exec <string> <string>
vim <file>
npm run dev
git pull -u <string>
ls
grep -r <string>
clear
vim
cd ..
cd <directory>
exit <number>
git reset <string>
vi <file>
cat <string>
git checkout <string>
sudo dnf remove tmux
git push
cd <string>
vim <file>
clear
cd ..
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
cd ..
cd ..
vi <file>
npm run dev
sed -r <directory> > <file>
pwd
ls
mkdir <string>
ls -latr <directory>
vim <file>
cd <string>
ls
vim <file>
ls
ls
cat <string>
ls
git rm --cached <string>
vim <file>
clear
exit
grep -rnw <directory> -e <string>
mkdir <string>
npm install -g <string>
vi <file>
git clone <URL>
sudo apt install build-essential gdb -y
cd <string>
cd <string>
chmod +x <string>
cd <string>
wget -O- <URL>
npm run coverage
ls
sudo ln -s <directory>
git status
vim <file>
cd <string>
curl <string>
python3 <file>
ls
fg
git co PTS-578_redirects_not_updating_automatically
git remote set-url origin <string>
cd <string>
ls
ls
exit
git reset <string>
ssh -t <file> tmux new -As0
sudo xbps-install <string>
git status
git status
wget <URL>
curl -o- <URL>
reboot
ls
clear
cd <string>
git branch
git status
ps -ef
vim <file>
docker-compose up -d --build
blaze-from-html -v <string>
ls
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
clear
ls
sudo mv <string>
cd ..
git push --set-upstream <string> master
exit
usermod -aG <string> <string>
find . -type <string> -name <string> -print0
nano <file>
ls
ls
ls
tar -xf <string>
ls
node <file>
grep -i <string> >files
python3 -m <string> install <string>
ps -auxwf
cd ..
clear
exit <number>
git commit -m <string>
git commit -m <string>
sudo apt-get update
mkdir <string>
ls
ls
sudo systemctl enable --now <string>
sudo pip3 install <string>
git add -A
sudo git push <string>
cp <string>
ls
chmod u+x <string>
ls # <string>
fg
systemctl start <string>
cd ..
mkdir <string>
unset -m <string>
cd
ls
git add <string>
cd <string>
dpkg --listfiles <string>
vim <file>
bash
python3 <file>
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
ls -la
git pull
read -rp <string> <string>
ssh <string>
vim <file>
wget <URL>
ls
clear
npm install -g <string>
clear
git branch 2> <directory>
cd <string>
ls -l
mkdir <string>
sudo ln -s <directory>
done
ls
git commit
vi <file>
sudo dnf install -y <string>
ls
ls
sudo apt-get install <string>
docker-compose down
ls
ls
clear
wget -r -l1 --no-parent -nH -nd -P/tmp -A".gif,.jpg" <URL>
ls
ls
ls
vim <file>
git push -u <string> detail
sed -r <directory> > <file>
exit
cd <string>
sudo apt-key add -
mkdir <string>
clear
sudo rm -rf <string>
git add .
cd ..
cd <directory>
ls -la
grep -Evf <file>
ls
ip a
sed -e <directory>
git remote add origin <URL>
sudo restart <string>
npm start
rm <string>
curl <directory> --header <string> --insecure
cd <directory>
do\
cd <string>
chmod <string>
python3 <file>
grep -v <string>
du -sh
cd
ls -la
xargs -L1 <string>
git add <string>
cd ..
cd ..
git add .
rm <string>
ls
sudo sed -i <directory>
ls
update-alternatives --list <string>
history
git commit -m <string>
ls
export <string>
ls
curl <string>
cd <string>
ip route <string>
cd <directory>
git add <string>
rm <string>
vim
docker-machine ssh <string>
docker run <string>
ls
ls
git commit -a
ls
ls
mv <string>
vi <file>
done
ls
ls
git pull
find . -name <file> -type <string> -print -delete
git commit -m <string>
cat <string>
cd <directory>
npm install --save <string>
sudo rm -rf <string>
cd <string>
git checkout
git commit -m <string>
apt update
ping <string>
ssh-keygen
sudo rm -r <string>
cd <directory>
cp <string>
cd <string>
git push origin
npm ERR! <string>
cd ..
cd <string>
nano <file>
git push
ls
cd <directory>
apt-get upgrade
sudo npm install -g <string>
git pull
cd ..
git remote add origin <URL>
sudo journalctl -u <file> -e
sudo ln -s <directory>
git add .
vi <file>
vim <file>
print <string>
cd <directory>
sudo python2 <file> --cascade=<file> <number>
fg
grep <string>
curl -sSL <URL>
sudo supervisorctl status
vim <file>
ls -a
find src
git init
unset <string>
git push origin master
vi <file>
grep <string>
ssh <string>
ls
cd <directory>
ls
git push
curl <URL> -o <string>
rm -r <string>
ls
wget -c <URL>
touch <file>
ls
date
help
exit
mkdir <string>
ls
cat <string>
cp <string>
ls
rsync -arv --exclude=<string> <directory>
more <file>
git push
sudo apk add <string>
cd <string>
cd <string>
awk <string>
sudo nvim <directory>
sudo -u <string>
sudo pacman -Runs <string>
mkdir <string>
ls
screen -ls
rm <string>
ls
fg
ls
rm <string>
sudo python3 <file>
git pull
git clone <URL>
pwd
clear
fg
wget <URL>
python2
apt-get update
npm i beautify -gnpm <string>
cd <string>
git add .
chmod +x <string>
cd ..
cat <string>
vi <file>
vim <file>
sudo make install
grep <string>
cd <string>
sort
<directory> <string>
tr -d <string>
screen -r <string>
ls
sudo vi <directory>
sudo python3 <file> install
sort -k <number> -nr
node -v
cd <string>
mkdir <string>
git add -A
sudo netstat -plnt
cd <string>
cd <string>
exit <number>
ls
git checkout <string>
docker ps
docker run -p <string> <string>
vim
git pull origin <string>
cd ..
cd <directory>
ls
cd
grep <string>
git co HEAD .
ps -ef
du -sh
find . -name <file>
npm -v
date <string>
cat <string>
cut -d <string> -f <number>
ls
ls
ls
ls
ls -alrt
sudo apt install <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cd <string>
capsctrl <string>
ls
systemctl enable <string>
export <string>
mkdir <string>
git commit -m <string>
touch <file>
git commit -m <string>
sudo apt autoremove
docker run -v <directory> -w=<directory> -p <string> --rm -it <directory>
git commit -m <string>
exit
less <string>
ls -l
cd <string> -s
docker logs <string>
touch <file>
ls -l
cat <string>
ls
sudo docker kill corrade
mkdir <string>
clear
sudo systemctl restart <string>
ls -l
vim <file>
setg RHOSTS <file>
git commit -m <string>
cd <string>
clear
git push --mirror <string>
exit <number>
sudo ufw allow <string>
less <string>
pwd
vi <file>
code .
git add <string>
ls
cd <directory>
exit
rm -rf <string>
cd
cd ..
git clone <URL>
vim <file>
npm start
fg
exit
cd <string>
cat <string>
mv 2001\ -\ <string>
sudo update-alternatives --config <string>
rm -fr <string>
cd <string>
ls
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
git commit -m <string>
grep -v <string>
git add <string>
pwd
git push
mkdir --parents <string>
ls
curl <string>
ls
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
git commit -m <string>
ls
git commit -m <string>
ls
sudo reboot
git init
cat <string>
sudo apt update
ls
ls
git commit -m <string>
ls
git commit -m <string>
sudo systemctl start <string>
git status
git checkout <string>
rm -r <string>
pwd
shutdown -h <string>
sudo pacman -S <string> --noconfirm
git add .
python3 <file>
git clone <URL>
cd ..
rm -rf <string>
cd <string>
ps aux
set
git init
git remote add origin <URL>
find . -name <string> -type <string>
find . -type <string>
cd <string>
git commit -m <string>
npm install
cd ..
ls
tail -f <directory>
wget <URL>
cd <string>
clear
tar xz
ls
env
python3.9 --version
xargs sed -i <directory>
cat <string>
sudo add-apt-repository <directory>
python3 <file>
exit
clear
sudo zypper
cd ..
grep -o <string>
wget $flutterLINK -O <file>
ls
rm <string>
ls
grep -i <string> >files
exit
ls
ls
sudo usermod -aG <string> $USER
git status
sudo pacman -U
sudo systemctl restart <string>
sudo apt-get install libapache2-mod-php7.1 -y
cp -r <directory>
docker compose up -d
cd ..
kill <number>
ls
cd ..
git reset HEAD^
npm run test
pwd
ls
exit
sudo ufw <string>
hg <string>
git add
df -h <string>
cd <string>
sudo apt install <string>
clear
tail -f <directory>
sudo apt remove <string>
git checkout <string>
sudo apt-get install <string>
git commit
cd <directory>
then\
clear
git submodule update --init --recursive
sudo systemctl status <string>
then\
fg
source <file>
ls
mkdir <string>
cd <string>
cd <string>
cd ..
git status
ls
git status
grep <string>
uniq
git push
git pull origin <string>
ps
cp -v <string> <directory>
git commit -m"update"
cd <directory>
sh
vim <file>
ls -alh
npm install -g <string>
cd <directory>
ls
ls
cd <string>
ls
cd <directory>
date
sleep <number>
ls
cd..
ps -ae
find <directory> -name <file>
kubectl apply --filename <file>
sudo apt-get install <string>
vi <file>
docker pull <string>
wget <URL>
vi <file>
git pull
cd <directory>
npm start
ls
mv <string>
read -n <number> -s -p <string>
cd <directory>
cat <string>
vi <file>
clear
python3.11 <file>
ls -l
rm <string>
sed -i <directory>
ls
cd <directory>
sed -E -e <directory>
rm <string>
bash <file>
git commit -m <string>
cd <string>
sh <file>
cat <string>
docker images
ls
sudo chmod +x <string>
sudo sed -i <directory> <file>
sed -i <string>
cd <directory>
git push -u
cd <string>
cd <directory>
sudo apt-get install <string>
cd <string>
sleep <number>
exit <number>
cd <string>
code .
ls
do\
ls -la
git commit -am <string>
npm init
cd <string>
git pull origin master
git add <string>
sed -i <directory>
rm -rf <string>
sudo sed -i <directory>
git commit -m <string>
ls
chmod +x <string>
ls
git checkout -b <string>
git pull origin master --allow-unrelated-histories
git commit -m <string>
mkdir -p <string>
chmod <number> <string>
git commit -m <string>
vim <file>
vim <file>
cd <string>
wget <URL>
git status
cd <string>
tail -f <string>
mkdir -p <string>
cd <directory>
tail -f <directory>
cat <string>
ls
cd ..
cd <string>
kill
rm -rf <string>
vim <file>
npm i
git push -u <string> master
ls -l
export <string>
ip a
cd <directory>
ls -a
cp <string>
cd <directory>
clear
vim
cd ..
exit
ls -altr <string>
cd
git status
xrandr --help
fg
git branch
sudo pip3 install <string>
nc <file> <string>
git status
history -c
npm run register
grep -vw <string>
chown -R <string>
fg
grep -n <string>
cat <string>
ls
grep <string>
cd
awk <string>
cd ..
cd <directory>
cd ..
docker-compose logs
cd <directory>
sudo apt-get --purge <string>
ls -latr <directory>
cd
npm install --save <string>
cd ..
cd <directory>
sed -E -e <directory>
cd <string>
ls
cd <directory>
git commit -m <string>
ls
ls
bash
fg
cd ..
git add .
ln -sv <string>
cd <string>
clear
cp -r <directory>
exit
curl <string>
ls
git pull
ls -altr
ls
ls -latr
clear
ls
git add <string>
ls
sudo chown -R <string>
sudo systemctl status <string>
sudo sed -i <directory> <file>
cp <string>
sudo docker run -d -p <string> --name <string>
rm -f <string>
ls
npm install -g <string>
cd <string>
cd <string>
df -s
cd <string>
cd <string>
read -s -n <number>
clear
rm <string>
read <string>
ls
vim <file>
exit
git commit -m <string>
sed -ri <string>
clear
go test
su
git commit -a --amend -m'Fix <string>
docker run -it --rm <string>
ls
cd <directory>
find . -name <file>
ls
cp <string>
cd <string>
rm <string>
vim <file>
git commit -m <string>
cd <directory>
git commit --amend --no-edit
more <file>
git commit -m <string>
git commit --dry-run
top
clear
git branch
ls
mkdir <string>
vim <file>
vi
git log
git config --global <file> <string>
clear
ls
awk <string>
cd <directory>
sudo sed -i <directory> <file>
python3 <file>
cd
chown -R <string>
exit
docker-compose logs
git add .
git checkout <string>
docker-compose up -d --build
npx tailwindcss -i <file> -o <file> --watch
ls
ls
sudo mount -t <string>
ls
clear
cp <string>
source <string>
ls -l
git push -u -f <string>
find . -empty -type <string> -print -delete
git stash list
reboot
clear
exit <number>
cd ..
sudo pip3 install <string>
grep <string>
npm run dev
source <file>
ping <file>
ps ax
sudo rm -rf <string>
vi <file>
cd <directory>
grep -V
pwd
nc <file> <string>
cd ..
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
curl -so- <URL>
ls
clear
ls -ltr
git push
clear
rm <string>
df -h
cd <string>
rm -r <string>
setg RHOSTS <file>
cd <string>
tr <string>
done
ls
cd ..
tr <string>
tar -cf <file>
vim <file>
vi <file>
git status
sudo mkdir <directory>
sudo vim <directory>
vim <file>
sudo sh -c <string>
ls
ls
ls
touch <file>
read <string>
git status
fg
git add <string>
yarn <string>
npm init -f -y
git commit -m <string> --author <string>
ls
exit
unset -f <string>
ls
cd ..
npm -v
sudo su
cd <string>
git push origin
rm -f <string>
ls
ls
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
exit
sudo systemctl enable <string>
ls
free -h
vi <file>
psql -U <string> nzdpu_wis -h <string>
clear
sudo update-alternatives --config <string>
ls
rm -rf <string>
ls
tail +n # Print nth line from file.
wc -l
npm i --save-dev <string>
ls
git branch
sudo supervisorctl update
less <string>
ls
git pull
ls -al
mv -f <string>
ls
git remote add origin <URL>
ls
env
clear
ls
cd <string>
exit <number>
npm install
exit <number>
vim <file>
cd <string>
cd <string>
sudo docker rm corrade
ls
sed -n <string>
git remote add origin <URL>
grep <string>
unset color_prompt force_color_prompt
read -p <string>
sed -r <directory>
cd ..
sudo rm -rf <directory> <directory>
curl <string>
tmux set-option -g <string>
ls
sed -e <directory> -e <directory>
apt-get clean
ls
mkdir <string>
sudo xbps-install -Su
git commit -m <string>
tar xvf <file>
python3 <file> --model-path <file> --conf <string> --img-size <number>
do\
git commit -m <string>
cd <string>
ls
ls -l
git branch
apt-get install <string>
curl <string>
sudo apt -y <string>
source <file>
grep <string>
ls
nano <file>
ls
ls
cd <directory>
fg
git init
cp <string>
ls
git add .
source <string>
clear
s/:/ <directory>
nano <file>
vim <file>
sudo npm install
clear
sudo rm -rf
sudo vim <file>
sleep
cd ..
grep <string>
ls
tail -f <string>
ls
htop
curl -L <URL>
ls
ls
ls
ls
vi <file>
kill -9 <number>
ping <string>
ls
vi <file>
clear
ls
sudo dpkg --get-selections <string>
sed -n -e <directory>
exit
vi <file>
export <string>
ps
mkdir -p <string>
cd <string>
rm -rf <string>
sed -e <directory> -e <directory>
python3 <file>
sudo apt-get install -y <string>
ls
ls
cat <string>
cd <string>
sudo snap install <string>
fg
cd <string>
cd
git commit -m <string>
vim <file>
mv <string>
sudo stop uwsgi
git commit -m <string>
git checkout <string>
clear
ls
ls
exec zsh
ls
chmod +x <string>
git status
git add -A
cd ..
sleep <string>
fg
git push
pwd
which <string>
git init
vim <file>
touch <file>
chmod <string>
sudo pip install <string>
ls
cd <string>
tmux kill-server
cd <directory>
ls
sleep <string>
sudo apt install <string>
sudo docker run -d -P --name <string>
chmod +x <string>
sed <directory>
cd <directory>
sed -i <directory>
cd <string>
screen -r <string>
ls -la
mkdir <string>
git commit -m <string>
ls -alrt <string>
ls
su - <string>
clear
exit <number>
git clone <URL>
cd <string>
exit <number>
git add .
vim <file>
ssh-add -l
code .
fg
cd ..
git log --graph
npm run test
git add .
ls
git status
clear
cd ..
rm <string>
sudo service <string>
cd <string>
rm <string>
ls
curl <URL> -u <string> -d <string> -d <directory> -d <directory> -d <string>
cd ..
ls
uname -a
wget -O <file>
sudo sed -i <directory>
cd <string>
cd <directory>
wget -r -np -R <string>
ls
git merge --abort
exit
ls
unset color_prompt force_color_prompt
sort
export <string>
npm run register
git add.
ls
sudo sed -i <directory>
sudo xbps-install -Su
ls
git push
cd ..
cat <string>
npm install -D <string>
vi <file>
ls
sudo apt-get -y <string>
npm init
vim <file>
clear
cd <directory>
cd
sudo usermod -a -G <string> <string>
cd
cd <string>
ls
curl -v -H <string>
git status
less <string>
cd ..
ls
cd <string>
git checkout <string>
vim
vi <file>
xrandr --listmonitors
python3
docker rmi -f <string>
git commit -m <string>
then\
python3 <file>
grep <string>
cd <string>
curl <URL> -sSf
cd ..
exit
vim <file>
pwd
nano <file>
sudo shutdown -r <string>
find <directory> -name <file> -print0
git add .
clear
ls
git commit -m <string>
systemctl show -p <string>
git log
which <string>
ls
cd <string>
apt list --upgradable
curl --silent --unix-socket <string> -X <string> --data-binary <string> --header <string>
docker-compose up -d --build
cd <string>
cd <string>
git init
history -a
npm login
ls
ls
git add .
cd <string>
cd
ls
clear
ls -alrt <string>
sudo sed -i <directory> <file>
ps -auxwf
clear
ls
fg
exit
ls
ls
mkdir <string>
shutdown -h <string>
cd <string>
mkdir <string>
git log
passwd
find . -empty -type <string> -print -delete
git add
sudo zypper se <string>
git help <string>
git push
sudo ln -s <directory>
htop
git push -u <string> main
git add -v --dry-run <string>
rm -fr <string>
pwd
sudo chmod <number> <directory>
cd ..
sudo apt install <string>
npm run start
cd <string>
python3 <file>
pico <file>
rm <string>
cd ..
ls
grep <string>
sudo make install
sudo apt-get autoremove
chmod +x <string>
sudo flatpak update
unset <string>
sudo -i
ls
cd <string>
cd <string>
cd ..
clear
bash
ls
docker ps -a
cd <directory>
git commit
ls
docker run --rm --entrypoint <string> $GL_IMG_REPO -c <string>
cd <string>
cd <directory>
git status
cd <string>
git add .
sudo apt-get update
npm uninstall <directory> --force
git remote set-url origin <string>
curl -X <string> -d <string>
vim <file>
git status
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
cd <string>
cd <directory>
git commit -a -m"file <string>
sudo make install
scp <string>
curl <string>
tail -f <string>
vim <file>
ls
ls
clear
cd
tail -1
cd <string>
time go run <file>
npm install --global <string>
man <string>
git push origin
clear
exit
wget <string> -O <string>
git st
cd <string>
vi <file>
vim <file>
grep <string>
git remote add origin <URL>
sudo make clean install
sudo nala install <string>
git help <string>
ls
ls
nano <file>
sudo make install
git remote add origin <URL>
pwd
ssh <string>
chmod <number> <string>
git pull
ping
sudo wget -q -O - <URL>
sudo vim <file>
which --h
npm i <string>
sudo apt upgrade
ls -lart
sudo apt-get install <string>
cd <string>
cd ..
ls
mkdir <string>
mv <string>
curl <string>
sudo sed -i <directory> <file>
cd ..
python3 <file>
less <string>
cd <string>
git push origin
git branch -M <string>
sudo touch <directory>
cd <string>
docker rmi <string>
docker ps
ls
cd <string>
git commit -m <string>
clear
git add .
sudo systemctl status <string>
sudo nano <directory>
less
cat <string>
npm run watch
ls
vim
git commit
git branch
find . -empty -type <string> -print -deletefind <string> -empty -type <string> -print -delete
csvlook -t
grep -i <string>
rm -fr <string>
pwd
ls
ls
rm -rf <string>
ls
ls
ssh -i <string>
sudo chmod <number> <string>
cd ..
sed <directory>
cd <directory>
cd ..
rsync -a <string>
ls
curl -# -u <string>
export <string>
sudo virsh -c <directory> <string>
vi <file>
sudo su
git log
git status
curl -s <string>
cd <string>
pwd
clear
ls
exit <number>
cd <directory>
mkdir <string>
git
clear
git status
git commit -m <string>
ls
clear
vim <file>
find . -name -type <string>
cd ..
sudo npm i prettier -g
sudo fsck -f <directory>
ls
git push
cd <string>
git init
ls
clear
nano <file>
tail +n # Print nth line from file.
ls -lh
cd ..
cd ..
sudo virsh -c <directory> <string>
rm -rf <string>
mvn compile
chmod <number> <string>
reboot
sh
vim <file>
mv <string>
git config --global <file> <file>
exit
clear
cd <string>
clear
cd ..
su -c <string>
sudo update-alternatives --set <string>
cd ..
ssh dirlic@10.18.0.39 -p <number>
ls
git add .
npm
source <string>
cat <string>
fg
rm -rf <string>
cd <string>
sudo systemctl start <string>
touch <file>
python3 <file>
man
cd <string>
cd <string>
bash
git push
sudo vi <file>
ls
ls
git pull
cat <string>
sed -i <string>
top
open .
xargs -0 <string> -i -pe's/$1/$2/g'
cd ..
vim <file>
nano <file>
git commit -m <string> --no-verify
git -c <string>
ls -l
git add
ls
apt-get install -y <string>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
find <directory> -maxdepth <number> -mindepth <number> -type <string>
tail -f <string>
fg
print -P <string>
sudo add-apt-repository <directory>
clear
git status
ssh <string>
git commit --no-edit --no-verify --message <directory>
git commit -m <string>
awk <string>
git stash pop
kill <number>
rm remote-git -rf
cd <string>
ls
git pull
less <string>
ls
ls
git commit -f
exit <number>
cd <string>
sudo apt install <string>
rm -rf <string>
history
cd <directory>
cd <string>
git commit -Am"ind"
grep <string>
cd ..
docker images
cd <string>
ls
less
cat <string>
ls
ls
git add .
ls
cd <string>
ls
exit
vi <file>
ls
chmod <number> -R <directory>
ls
git
script/build.sh
cd
rm <string>
git add.
man <string>
exit <number>
vim <file>
code .
yarn install
vim <file>
apt-get install <string>
cd <string>
code <string>
git status
ls
fzf <string>
journalctl
du -sh <directory>
tr <string> <string>
cd ..
cd <string>
clear
git add <string>
wget -qO - <URL>
sudo wget -r <URL>
npm run make
sudo apt-get install <string>
sudo sed -i <directory>
ls
git stash pop
grep <string>
vim <file>
code
curl -v -H <string> <URL>
cd <directory>
python3 <file>
git push --set-upstream <string> <string>
test <string>
find . -maxdepth <number> -regextype <string> -regex <string> -type <string>
curl -o- <URL>
exit
ls -l
ls
cd <string>
vim <file>
grep -i <string>
wc -l <string>
git commit -m <string>
git pull
clear
awk <string>
cat <string>
ls
ls
cat <string>
rm -f <string>
git clone --recursive <URL>
exit <number>
ls
vi <file>
sudo python <file> --cascade=<file> <number>
sudo apt dist-upgrade -y
pwd
curl -O <URL>
git push -u <string> master
apt search <string>
ls
rm -r <string>
git checkout <string>
rm <string>
vi <file>
reboot
cd <string>
byobu-tmux
rm <string>
xrandr -q
sudo pacman -S <string>
cd <string>
ls
git push
mv <string>
git push origin PTS-372_Remove_components_from_daily_tracker --force
git add .
fg
mv <string>
docker exec -it <string> bash
sudo systemctl restart <string>
sudo apt upgrade
grep <string>
curl -so- <URL>
sudo reboot
mkdir <string>
git remote add origin <URL>
git checkout -b <string>
ls -la
docker -v
find . -maxdepth <number> -regextype <string> -regex <string> -type <string>
vim <file>
ls
cd
ls -a
find . -name <file>
npm install
dir
docker ps -q
npm install <string>
cd <directory>
python3 <file>
ls -la
cp -r <directory>
htop
cd ..
ls
cd
ls -la
sed -E -e <directory>
xargs -I{} <string> show <string>
touch <file>
sudo chmod +x <string>
su - <string>
cd <string>
exit
clear
read -r -a <string>
reboot
git add <string>
exit
npm i
ls
ls -alF -n
touch
ls
wget <URL> -O <file>
git commit -m <string>
sleep <string>
source <file>
git clone <URL>
mv <string>
sudo bash <file>
cd <directory>
rm -r <string>
ls
cd <string>
sudo sed -i <directory> <file>
export <string>
mv <string>
git init
cpio -p -d -v <directory>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
vi <file>
clear
ls
git restore <file>
grep <string>
less
clear
sudo dhclient <string>
clear
git remote add origin <URL>
find . -empty -type <string> -print -delete
cd <directory>
ls
sudo -E <string> -
exit
git push
sudo reboot
git status
ls
sudo ufw allow <string>
sudo vim <file>
time <string>
snap --help
cd <string>
git checkout master
npm run dev
git --version
sudo apt -y <string>
hostname -f
grep -a -i -E --no-filename <string> */*.log*
cd <string>
ls
sudo pip3 <string>
git pull
read
git fetch origin\
sed -i <string>
clear
ls
npm install -g <string>
name=<string> -o <file>
git push
sudo pacman -S <string>
cd
git push
ls
ss
ls
sudo ifup <string>
sudo python <file>
cd <string>
grep -OE <string>
iptables -L
pwd
ls
sed -e <string> -e <directory> -e <string> \
wget -q -O <file>
find . -maxdepth <number> -regextype <string> -regex <string> -type <string>
git push
sudo rm -r <string>
cd <directory>
touch <string>
cd
ls
cd ..
python3 <file>
ls
exit
cd ..
wget
cd ..
clear
du -sh
sudo apt install <string>
fg
vim <file>
ls
cd <directory>
cd <string>
wget <URL>
ls
git pull
docker-compose up -d --build
cp -r <directory>
terraform <string>
code <string>
cd ..
git submodule add <URL>
git checkout <string>
ls
sudo sed -i <directory> <file>
vim <file>
sort -nr
ls -laSh
python3 <file>
ls
clear
htop
sudo mkdir <directory>
touch <string>
ls
cd <string>
sudo su
sudo awk -F\' <string>
pwd
git commit -m <string>
git add <string>
cd
kill -9 <number>
curl -v --data <string>
touch <string>
git filter-repo --path-glob
ls
cd <string>
ls -al
open <string>
curl <string>
git add <string>
sudo sed -i <directory> <file>
rm -r <string>
cd <directory>
find . -type <string> -size <string> -ls <directory>
git remote add origin <URL>
clear
cp <string>
cd <directory>
file <string>
ls help
curl -LSso <file>
cd ..
ls
git config --global <file> <file>
cd <string>
ls
sudo pacman -Suy
scp -h
sudo apt-get update
read <string>
npm unstall -g <string>
ls
exit
git add .
wc
clear
ls
ls
killall <string>
let <string>
grep <string>
sudo yum install <string>
clear
git add .
exit
man <string>
cd
read <string>
su
free -h
source <file>
cat <string>
rm -r <string>
openssl rand -hex <number>
ls
ls
<directory> <string>
git rm -rf <string>
ls
cd
byobu-tmux
git pull
ls
git checkout -b <string>
fg
rm -rf <string>
ls
python3 <file>
git clone <URL>
vim <file>
grep -rl <string>
git --help
rm <string>
ls
top
fg
sudo pkill <string>
sudo mysql -u <string> -p
sed <directory>
ls -alrt
vi <file>
git clone --depth <number> <URL>
exit <number>
git add .
cd <string>
sudo apt install floorp -y
ls
rm <string>
git push
sudo npx <string>
git checkout <string>
curl -s <string>
grep <string>
cd <string>
ls
ls
git init
chmod <string>
ls
exit
ls
git pull
grep -i <string>
find . -type <string> -cmin -30
curl <directory> -X <string> -H <string>
ls -la
chmod <number> <string>
ls -al
clear
dmesg
ls
sudo sed -i <directory> <file>
rails <string>
npm install
sudo add-apt-repository <directory>
df
cd <string>
python3
ls
curl -L <URL>
mkdir <string>
git reset HEAD -- <string>
chmod +x <string>
ls
exit
vim <file>
python3 <file>
ssh dirlic@10.18.0.39 -p <number>
docker-compose logs
git sync
ls
cd <string>
ls
ls
ls
mkdir <string>
cd <string>
vim <file>
exit
ls -lSrh
npm
mv <string>
sudo apt-get install <string>
chmod <number> <string>
cd <string>
ls
cd <string>
clear
jq -r <string>
vi <file>
ls
sudo sed -i <directory> <file>
ls
ls
clear
rsync <directory>
ls
<directory> <string>
sudo groupadd docker
ls
git br
apt update
cd ..
clear
clear
df # shows disk usage
ls
git commit -m <string>
sudo nano <string>
vi <file>
read -p <string>
cd <directory>
git status
find . -empty -type <string> -print -delete
mkdir -p <string>
export <string>
git add <string>
ls
docker build -t <string>
exit
grep -i <string> >files
cd <string>
git stash
cd <directory>
git push
exit
ls
exit <number>
yarn <string>
perl -nle
cd <string>
free -h
apt list --upgradable
cd <string>
read -r -n <number>
tail -f <directory>
vi <file>
git commit -m <string>
sudo ifconfig en0 ether <string>
ls
git remote -v
let <string>
ls
docker login -p <string>
ls
ls
vim
man <string>
git add .
setg RHOSTS <file>
git push
rm <string>
npm run dev
dpkg --list <string> - <string>
ls
sudo aptitude <string>
clear
systemctl start docker
sudo add-apt-repository <directory>
git reset <string>
cd <string>
ls
grep <string>
ls
sudo vim <file>
code .
ls
cd <directory>
egrep <string>
sudo sed -i <directory> <file>
rm -rf <string>
git status
ls
ls
npx shadcn-ui@latest add <string>
rm -rf <string>
cd <string>
cd <string>
xhost +
find . -name <file> -type <string> -print -delete
ls -alh
npm run watch
vi <file>
exit
grep -r <string>
cp -v <string> <directory>
cd <string>
cd <string>
sudo apt-get upgrade
done
awk <string>
rm -rf <string>
sudo apt upgrade
sed -e <directory>
git commit -m <string>
npm install
npm i --save-dev <string>
ls
rm <string>
kill <number>
exit <number>
cat <string>
docker volume ls
grep -n <string>
clear
npm config set prefix <string>
sed -e <directory>
sed -E -e <directory>
git push
docker exec -it <string>
cd <string>
git commit -m <string>
find . -name <file> -type <string> -print -delete
yarn install
git add <string>
ls
rm -rf <string>
done\
sudo npm install -g <string>
sudo pacman -Ss <string>
git remote -v
cd <string>
ls
clear
mkdir <string>
cp <string>
cd <string>
git clone <URL> --branch <string>
git remote
zcat <file>
ls -la
sleep <string>
more <file>
rm <string>
sudo -s -u <string> -H
chmod <number> <string>
cd <string>
vi <file>
reboot
cd <string>
vi <file>
git stauts
npm run register
git add <string>
cd <string>
exit <number>
ls
clear
clear
ls
cd <string>
bash
sudo mkswap <directory>
tail -n <string>
git commit -a -m <string>
exit
ls
ls
cd <string>
node <file>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
mkdir <string>
cd <string>
git status
kill -sigusr1 <number>
cd <string>
git status
git commit -am <string>
clear
cd <string>
grep <string>
cat <string>
ls
sudo apt-get upgrade
ls
vim <file>
sort
git pull
rm -r <string>
ls
exit
cd <string>
mkdir <string>
cd <directory>
cd ..
ls
git add .
ls
docker images
git merge
ls
grep <string>
git push
clear
cd <directory>
git commit -m <string>
python3 <file>
ls
git filter-branch --index-filter <string> HEAD
cd <string>
sudo virsh -c <directory> <string>
ls
fg
npm init -y
who
cd
ls -la
rm <string>
python3
vi <file>
cat <string>
ls
vim <file>
export <string>
npm-recursive-install
vi <file>
ls
ls
sudo mount -a
git rm -r --cached <directory>
source <string>
cd ..
sudo apt-get install <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
ls
git checkout <string>
cd <directory>
ls
sudo xbps-install -Su
cd <string>
git push -u <string> main -f
touch <file>
sudo sed -i <directory> <file>
ssh -t <string>
cd <string>
git commit -m <string>
ls
mv <string>
mkdir <string>
npm install
stat <file>
cd <directory>
touch <string>
cd <string>
vim <file>
cd <string>
git init
vi <file>
curl <string>
ls
git commit -m <string>
go build <file>
less <string>
cd <string>
grep <string>
cd <string>
exit
screen -x
cd ..
pwd # tells you where you currently are
env
vi <file>
cat <string>
npm run start
tail -f <directory>
cd <string>
cat <string>
vi <file>
git push
sudo sed <directory> -i <directory>
git status
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
cd <string>
grep -n <string> <directory>
clear
git remote -v
ls
sudo reboot
ls
cd ..
ps aux
sudo adduser <string>
sudo apt install htop -y
sudo apt-get install <string>
cd <string>
sudo sed -i <directory> <file>
npm install
rm <string>
cd ..
sed -E -e <directory>
vim <file>
ls
cd <string>
git status
vim
dir
ls
exit <number>
cd ..
rm <string>
dpkg -s <string>
cd <string>
tail -f <string>
git checkout <string>
wc -l
ls
git push
sudo nvidia-settings -a <directory>
git checkout <string>
find . -type <string> -name <string>
ls
tail -f <directory>
mkdir <string>
cd ..
sudo apt-get autoremove
cat <string>
tmux source-file <file>
sudo chmod <number> <string>
npm audit fix --force
git commit -m <string>
find <directory> -name <string>
git diff <string>
cd <directory>
cd <string>
read -rp <string> <string>
git clone <URL>
cd <string>
cd <string>
ls -d
ls
wget -qO- <URL>
ls
ps -e
bash <file>
sudo apt-get install <string>
git commit -m <string>
ls
ls
python3 <file>
mvn install:install-file -Dfile=<file> -DgroupId=<string> -DartifactId=<file> -Dversion=<string> -Dpackaging=<string> -DgeneratePom=<string> -Dspring.test.skip=<string> --spring.profiles.active=<string>
clear
vim <file>
cd ..
cd <string>
cat <string>
cd <directory>
sudo dpkg --set-selections <string>
sudo tail -f <directory>
cd -
pwd
cd <directory>
print <string>
vim <file>
npm start
printf <string>
top
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
clear
cd ..
ls
vi <file>
ls
rm -rf <string>
diff <file>
ls
cd <directory>
vim <file>
script/build.sh
git pull
ls
cd <string>
mkdir <string>
sudo docker build -t <string>
git add <string>
cd <string>
npm run start
git commit -m <string>
ls
ssh <string>
ssh -t <file> sh -c <string>
exit
vi <file>
ls
ps -aux
git branch -M <string>
tr <string> <string>
git checkout
sudo pip3 <string>
cd
grep -m <number>
git clone --depth <number> <URL>
sudo nmcli con <string>
clear
git status
ls
cp <string>
sudo apt-get --assume-yes <string> <string>
ls -ltr
ls
git status
apt-get install <string>
sudo mkdir <directory>
grep -r <string>
tail -f <string>
ls
git --version
git init
ls
git push
git status
su field
clear
ls -n1 <string>
npm start
clear
ls
git commit -m <string>
ls
grep -Eh <string>
print <string>
sudo apt install apache2 -y
ls
ls
python3 <file>
cd <directory>
nano <file>
sudo apt-get install <string>
touch <file>
git pull
touch <string>
cd <directory>
sed -i <directory>
ls
vi <file>
brew tap <directory>
python3 <file>
cd rm -rf <directory>
python3 <file>
docker images
cd <directory>
ls
chmod +x <string>
ls -al
cd <string>
dpkg-query -W -f=<string> <string>
npm run devstart
exit <number>
cd <directory>
sed -E -e <directory>
git
sudo apt upgrade
sudo vim <file>
pwd
cd <string>
exit
cd <directory>
vim
vi <file>
cd <string>
cd <directory>
sudo subl <string>
vim <file>
rm -rf <string>
history
curl -LO <string>
exit
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
git commit -am''
cd <string>
sudo lsof -i:15721
tail -f <string>
ls -all <directory>
umount <directory>
ls
gsettings set <file> <string>
vim
grep <string>
sudo chmod u+x <file>
ls
ps -ef
ls
make clean
mv <string>
ssh
exit
cd
ls
git status
ls
git clone <URL>
exit <number>
exit <number>
vim <file>
python3 <file>
rm -rf <string>
service apache2 restart
mkdir <string>
stat -c <string>
git pull origin
ls
find . -empty -type <string> -print -delete
sudo add-apt-repository <string> [arch=<string> <URL>
git commit -m <string>
ls
rm <string>
git add .
exit
git push origin main
git commit -m -n <string>
ls -la
then\
rm -rf <string>
git commit -m <string>
vim <file>
cat <string>
ls
ls -a
node <file>
ls
ls
cd ..
sudo gem update --system <string> --no-ri --no-rdoc
vim <file>
ls
cd ..
man <string>
git fetch origin
byobu-tmux
cp <string>
cd <string>
cd
vim <file>
git status
vim <file>
grep <string>
exit
ls
ls -l
git push --set-upstream <string> <string>
git merge develop
cut -d. -f1
grep -qF <string>
unset color_prompt force_color_prompt
npm install
git init
ssh <string>
read -rp <string> <string>
sort -hr
head -n <string>
ls
tmux
sudo chmod +x <directory>
exit
file <string>
gzip <string>
ssh-keygen -t <string> -C <file>
ls
curl -s <string>
ps -ae
ls
ls
python3 <file>
git pull
sort -h -r
cd ..
exit
sed -e <directory>
cd <directory>
docker login -u <string>
git add .
sudo cat <directory>
vi <file>
cd <directory>
npm install -g <string>
cut -d, -f1,9,10,14,15
sed -e <directory>
su - <string>
ls
git commit
mkdir -p <string>
npm install cookie-session --svae
ls
cd <string>
bash <file>
git config --add <file>
htop
curl <string>
mv <string>
xargs grep -sn <string>
cat <string>
sleep <number>
git add <string>
exit
curl <string>
ls
ls
fg
mkdir <string>
fg
then\
ls
clear
git status
cd <directory>
git init
clear
docker-compose
ls
sudo pacman -Ss <string>
cd <string>
ls
cd <string>
git add -A
ls -la
stat -c <string>
ls
cd <string>
else\
vi <file>
git config <file> <string>
npm run dev
rm <string>
git checkout master
chsh <string>
mkdir
exit <number>
vi <file>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
xargs -0 <string> --
code .
npm cache clean --force
tail -f <directory>
ls
ls
ls
cd <string>
exit
ls
ls
apt-get update
ln -s <string>
sudo ntpdate
exit
git status
mkdir <string>
vim <file>
vim <file>
openssl x509 -req -in <file> -out <file> -CAkey <file> -CA <file> -days <number> -CAcreateserial -CAserial <string>
ls
<directory> <string>
mkdir <string>
git pull origin
cat <string>
egrep <string>
clear
do\
git branch
npm start
df -T
git push
find . -type <string> -iname <string>
cd <string>
cat <string>
reboot
clear
less -r
exit
cd <string>
source <string>
git add .
cd ..
cd -
ls
vim <file>
ls
sudo cp <string>
git pull origin <string>
python3 <file>
ls
sudo pacman -S <string>
ps aux
ls
vi <file>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
ls
exit
git push origin master
cat <string>
cd <string>
sudo apt-get install <string>
git init
find -prune <directory>
git clone <URL>
curl -fsSL <URL>
python3 <file>
git cat-file -p <string>
git add <string>
git branch --delete <string>
cd ..
vi <file>
mkdir <string>
cd ..
git commit -m <string>
cd <directory>
cd ..
vim <file>
exit <number>
ls
python3 <file>
npm run
vim <file>
ls
clear
sudo apt-get install -y <string>
time
vi <file>
clear
ls
vim <file>
ls
xrandr --listmonitors
sleep <number>
git commit -m <string>
type <string>
git pull
clear
ls
sudo apt-get autoremove
ls
ssh <string>
sleep <number>
npm run
mkdir <string>
git commit
exit
cd
python3 -m <string> install <string>
grep <string>
git status
git push
tmux new -s <string>
git add .
ls
git config --global <file> <string>
ls -l
cp <string>
git status
cd <directory>
ls
exit <number>
rm -f <string>
sudo apt install <string>
git checkout <string>
git clone <URL>
bash
ls
python3 <file>
git commit
ls
ls
git config --get --global <file>
cd <string>
ls
ls
dir <string>
touch <string>
cd <string>
vim <file>
wget <URL>
grep <string>
git push
rm -R <string>
git add .
cat <string>
docker cp <string>
ls -alrt
git push -u <string> master
ln -s <string>
ls
sudo sed -i <directory> <file>
sudo systemctl status <string>
git add <string>
mv <string>
cd <string>
export <string>
cd <string>
sudo apk add <string>
grep -rEho <string>
git push origin master
cd <string>
sudo systemctl daemon-reload
sudo chmod -R --reference=<string> <string>
cd <directory>
ls
python3 <file>
git remote add origin <URL>
<file> <file>
chmod <number> <string>
npm i <string>
ls
cat <string>
cd ..
docker logs <file>
git clone <URL>
git commit -am <string>
ls -l
clear
clear
fg
grep <string>
ls -al
git add .
vi <file>
vi <file>
sudo nginx -t
ls
ls
git config --global <file> <file>
ls
cat <string>
clear
cd <directory>
cd <directory>
cd <string>
ls
ls
npm install
ls --full-time
pacman -Q
ls
clear
mv <string>
less <string>
cd <string>
ls -ltr
git pull
fg
cd ..
exit <number>
npm run register
git co master
npm run start
curl -s <string>
ssh <string>
read -r -a <string>
ls
ls
sh
aptitude -y <string> <string>
pwd
exit
ls
cd <string>
exec uwsgi --master --processes <number> --die-on-term --uid <string> --https <file> --module <file>
cd <string>
cd
cd <directory>
sudo apt-get upgrade -y
ln -s <string>
code .
git merge
cd <string>
git diff
git add <string>
ls=<string> -A -sh --color=<string>
sudo dbus-monitor --system
npm run start
exit <number>
killall -SIGUSR1 <string>
wget <URL>
nc <string>
git add .
exit
vim <file>
cp -v <string> <directory>
bash <file>
cat <string>
sudo wget <URL>
ls
type -a <string>
nano <file>
git status
sleep <number>
grep <string>
sudo apt install <string>
sudo npm install -g <string>
<directory> -m <string>
ls
cd <string>
sed -E -e <directory>
cd <string>
find . -name <string> -type <string> -print
git clone <URL>
git add -A
git commit -m <string>
chmod <number> <string>
curl <string>
ls
python3 <file>
ls
cp -v <string> <directory>
ls
mkdir <string>
ssh-add
sudo pacman -U <file>
cd <string>
cd <string>
cd <directory>
git pull
chmod <string>
eval <string>
apt-cache search <string>
exit
ls -la <directory>
exit <number>
npm start
clear
exit <number>
find . -name <string> -type <string>
cd ..
exit
docker-compose logs
ls
who <string>
cd <directory>
rm -rf <string>
clear
git fetch
wget -q -O <file>
npm run test
git init
cd ..
vim <file>
cd ..
sudo ls -latr <directory>
git status
sed -E -e <directory>
rm -rf <string>
sudo apt-get upgrade
exit <number>
dpkg -i <file>
git clone <URL>
grep <string>
cd ..
ls
sudo apt-get install <string>
tail -f <directory>
sudo apt-get install <string>
du -sh
df
npm install -g <string>
ls -a
ls
cd <directory>
git status
sudo ifconfig <string>
cd <directory>
export <string>
ls
git add .
docker commit <string>
git checkout <string>
cd ..
mv <string>
sudo bash -c <string>
git submodule update --init --recursive
curl <string>
git remote add origin <URL>
find . -empty -type <string> -print -delete
rm <string>
wc -l
sudo apt dist-upgrade
source <string>
git commit -m <string>
ls
mv <string>
git commit -m <string>
cd ..
exit
sudo apt-get update -y
sed -i <string>
git add .
grep <string>
rm <string>
git commit -m <string>
git checkout <string>
ls
git branch -M <string>
su
fg
ls
rm -rf <string>
sudo rm -r <string>
cd <string>
find . \( -iname <string> -o -iname <string>
curl <string>
chmod <string>
read <string>
exit
vim <file>
exit <number>
exit
cd ..
ls
ls
tail -f <directory>
ls
git checkout <string>
awk <string>
sudo apt -y <string>
service apache2 restart
grep -e <string> -e <string>
exit
cd <string>
cd <string>
ls
git checkout -b <string>
tmux ls
cd <string>
clear
git checkout -b <string>
cd <directory>
docker-compose up -d --build
clear
sudo zypper install <string>
git add .
df # shows disk usage
ls
cat <string>
grep <string>
docker
ls -la <directory>
cd ..
sudo python <file>
ls
ls -la
history
cd ..
ls
ls
sudo add-apt-repository <directory>
sudo apt-get remove <string>
ls
sudo apt-get update
ls
fg
diff <file> <file>
exit
pwd
exit
touch <file>
ls
cd <directory>
ls
ls
sudo ifconfig en0 ether <string>
rm -rf <string>
cd <string>
cd <string>
cd ..
sudo <directory> restart
git log --date=<string> --pretty=<string> <string>
ls
cd ..
cd <string>
ls
cd <string>
ls
vim <file>
clear
cd ..
git add .
sudo apt upgrade
sudo make clean install
docker stop <string>
s/:/ <directory>
xargs -i <string> -alh <string>
exit
rm <string>
kubectl apply -f <string>
docker exec -i -e <string>
cd <string>
read -d <string> <string>
git diff
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
rm <string>
exit
ls
find . -maxdepth <number> -mindepth <number> -not -name <string> -print0
apt-get update
mv <string>
source <file>
mkdir -p <string>
find . -size <string> -a -print -a -exec <string> -f <string> \
cat <string>
ls
sudo chmod +x <string>
ls
ip route <string>
ls
grep <string>
code <string>
cd <string>
cd <string>
mvn
clear
git push
cp -r <directory>
cp <string>
cd <string>
clear
mv <string>
vim
vim <file>
vi <file>
rm -r <string>
git commit
clear
rm -r <string>
tmux source-file <file>
rm -r <string>
ls
git add <string>
cd <string>
cd
vim <file>
then\
exit
ls
sort -n <string> <string>
ls
sudo apt autoremove
cd <directory>
code .
cp -v <string> <directory>
scp <string>
systemctl edit --full <string>
ls
ls
cd <string>
done
fg
cd <string>
sed -n <string>
clear
python3 <file>
ls
vim <file>
ping <string>
git status
cd <string>
cat <string>
git clone <URL>
git push origin2
git commit -m <string>
git remote add origin <URL>
exit
history
systemctl daemon-reload
git add <string>
sudo chmod <number> <string>
ls -la
ssh-keygen -t <string> -b <number> -C <file>
cd
grep <string>
ls
cat <string>
vi <file>
cp <string>
ls
git add <string>
cd
python3 -m <string>
git status
ls
git pull
docker-compose logs
grep -rP <string>
git add <string>
nano <file>
chmod <string>
vi <file>
cd ..
clear
vi <file>
git add .
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cd <directory>
cd <directory>
vim <file>
done
cd <string>
sudo sshfs --help
npm run coverage
git add <string>
cd <string>
cd <string>
git clone <URL>
ls
cd ..
cd <string>
cd <string>
bash
ls -a
cd ..
clear
mkdir <string>
ls -d <string>
tr -d <string>
sudo service <string>
git switch main
git add <string>
cd ..
cat <string>
git add <string>
cd <string>
cd
git clone <URL>
touch <string>
kubectl <string>
sudo apt-get install <string>
vim
git clone
vim <file>
sudo chmod -R <number> <string>
fg
git add --all
git status
git pull
ls
docker-compose up -d --build
su
cat <string>
exit <number>
cp <string>
sudo udevadm trigger
docker images
cd <string>
git pull origin <string>
cd <string>
git clone <URL>
cd ..
git commit -m <string>
read -rp <string> <string>
ls
grep -E <string>
git add <string>
sed
git status
ls
touch <string>
cd ..
sudo apt install <string>
ls -la
mv <string>
find . -name <string> -type <string> -print -delete
mkdir <string>
ls
git pull
rm <string>
ssh <string>
kill -9 <number>
docker-compose up -d --build
ls
git add .
grep -vE <string>
grep -v <string>
git add .
exit
vim
python3 <file> -w <file>
fg
git add .
chmod +x <string>
cd <string>
git commit -m <string>
clear
wget -t <number> --retry-connrefused -O <directory>
sudo apt install <string>
ls
vim <file>
netcat
git commit -m <string>
npm install <string>
ls
rm -rf <string>
ls
git config --global <file> <string>
git push origin main
git add .
git checkout
curl -fLO <URL>
cd <string>
history
cd <string>
git pull
git pull
sudo mkdir -p <directory>
cd ..
ls
vim <file>
git clone <URL>
cat -s <string>
exit
vi <file>
sudo sed -i <directory> <file>
cd <directory>
more <file>
git status
git add .
cd ..
cd <directory>
sudo reboot
clear
more <file>
npm run coverage
clear
npm i <string>
vim
git rebase -i <string>
ls
ls
ls
curl -O <URL>
vi <file>
ls
sudo pacman -S <string>
code .
cd
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
ls
cd <string>
ls
ls
clear
ls
git commit -m <string>
git checkout -b <string>
vi <file>
cd <directory>
git push heroku main
sudo nvim <directory>
grep <string>
clear
tail -f <string> --lines=<number>
docker run -p <string> -itd --name <string>
cat <string>
ls
chmod -R <string>
cd <string>
vim <file>
sleep <number>
git push
clear
docker-compose up -d --build
cd <string>
ls -lh
ls
vim <file>
cd <string>
cd <string>
git add .
cd <directory>
git add -A
ls
scp <string>
curl
ls
exit
clear
cd <string>
nohup <string>
ls -lAF
nano <file>
cd <string>
vim <file>
ls
sudo apt-get update
cd <string>
vim <file>
grep <string>
rm <string>
grep <string>
unset color_prompt force_color_prompt
cat <string>
man <string>
ls
sudo tar -cvpzf <directory> -C <directory>
cat <string>
npm install <string>
git add .
git add .
ls
sleep <number>
sudo apt-get update
exit
ls
git commit -m <string>
git clone <URL>
history -d <string>
cd <string>
cp <string>
git commit -m <string>
cd <directory>
cd
rm -rf <string>
ln -s <string>
sudo install -Dm644 <file>
cd
sleep <number>
cd <string>
clear
docker build -t <string>
rm <string>
mv <string>
ls
ls -la
cd <string>
ls
ls
clear
ln -s <string>
cd <directory>
git checkout <string>
cd <directory>
export <string>
git status
clear
cd <string>
kubectl
ls
git push origin main
cd ..
ls
cd <string>
brew cask install <string>
vi <file>
ls
done\
mv <string>
cd <string>
rm -rf <string>
git status --short
ls
ls
ls
cd ..
curl <string>
open <string>
ls
cd <directory>
clear
clear
sudo apt-get remove --purge <string>
git log --pretty=<string> <string>
ls
cd <string>
grep <string>
unset <string>
ls
cd ..
ls -lah
exit <number>
git commit -m <string>
dpkg --get-selections <string> <file>
tar -h
vim <file>
pico <file>
sleep <string>
git pull
ls
ls
nano <file>
ls
ls -la
npm run dev
cd <directory>
cat <string>
git add .
sed <directory>
ls -l
ls
brew install <string>
ls
history
python3 <file>
code .
rm -rf <string>
cd <directory>
find src
shutdown -h <string>
ls
apt-get -y <string>
exit
git clone <URL>
ls -la
vim <file>
sudo chmod -R <number> <string>
exit
ls
bash <file>
export <string>
clear
git init
sudo pacman -sS <string>
rm -rf <string>
docker run -d -p <string> --name <string>
cd <string>
git clone <URL>
git commit -m <string>
rm -rf <string>
vim <file>
cd <string>
chmod <string>
git pull
git config --global <file> <string>
ag -v <string>
vim <file>
rm <string>
ls
curl -X <string> <URL> -H <string> -H <string> -H <string>
rm -rf <string>
cat <string>
sudo systemctl status <string>
cd <directory>
cd <directory>
sudo sed -i <directory> <file>
cd <string>
cd <directory>
ls
cd ..
git add .
mkdir <string>
cd <string>
ls
ls
history
git pull
ls
cd ..
git add .
sort file <string>
sudo -i
vi <file>
else\
cd ..
vi <file>
cd
sudo apt install <string>
git clone <URL>
find <directory> -mindepth <number> -type <string> -exec <string> -t <directory> --backup=<string> <string>
git pull
git checkout -b <string>
exit
ls
clear
git init
vim <file>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
sudo apt-get install -y <string>
sudo nano <directory>
ls
git log --oneline --topo-order --graph <string>
cd <directory>
sudo apt-get update
cd <string>
cd <string>
sudo snap install <string>
cd <directory>
curl -X <string> -d <string>
git fetch origin\
source <directory>
vim -R -
git commit -m <string>
cat <string>
cd ..
ls
ls
ls
su deployer -c <string>
git clone <URL>
ls
git commit -am <string>
then
grep <string>
git push
python3 <file>
ls
exit
cd
exit
cd
read -s -n <number>
ls
ls
cd <string>
cd <directory>
cd <directory>
cat <string>
git pull origin development
ls -a
git commit -m <string>
pwd
git pull origin master
git init
git push origin main
ls
ls
python3 <file>
vi <file>
ls
sudo apt-get update
rsync <directory>
exit
cd <directory>
clear
read -p <string>
cd <string>
clear
find <directory> -iname <file> -type <string> -exec <string> -c <string>
ls
git push --all <string>
sudo apt update
git commit -v -a -m <string>
ls
git commit -m <string>
pwd
ls -la
ls
sudo apt install <string>
find . -empty -type <string> -print -delete
chsh -s <directory>
cat <string>
ls
ls
ls
cd <string>
su
git status
ls
git config --global <file>
code .
git push origin
rm -rf <string>
git commit
kill -9 <number>
cd <directory>
cd ..
exit
ls
cd ..
cd <directory>
lsblk
git status
read -p <string>
mvn compile
git add.
man <string>
ls
history
ls
ls
sudo sed -i <directory> <file>
read <string>
ls
git add .
mkdir <string>
mkdir -p <string>
cd <string>
python3 <file>
python3 <file>
sleep <string>
chmod <number> <string>
vi <file>
vi <file>
ls -ls
ls
ls
ls -l
ls
cd <string>
find . -empty -type <string> -print -delete
sudo apt install <string>
cd <directory>
git init
cd <string>
bash <file>
ls
rm -f <string>
cat <string>
cd <directory>
cd <directory>
git commit -m <string>
file <string>
sudo nano <string>
ls
vi <file>
vi <file>
then\
vim <file>
exit
paste -d <string>
find . -type <string> -exec <string> -i <directory>
git init
git status
sudo pacman -U <file>
git remote -v
ls
sudo apt upgrade
iptables
cd <directory>
clear
gsettings set <file> <string>
find . -size <string> -a -print -a -exec <string> -f <string> \
chmod <number> <string>
cd <string>
sudo su
ls
cd <string>
git commit -m <string>
git push
brew install <string>
clear
sed <directory>
cd <string>
git remote add origin <URL>
sudo poweroff
git init
cat <string>
exit <number>
nano <string>
sudo pacman -S <string>
git clone <URL>
clear
ssh dirlic@10.18.0.39 -p <number>
clear
sleep <number>
cd <string>
ls
vi <file>
rm <string>
cd <directory>
rm -rf <string>
mkdir <string>
source <file>
ls
cp -v <string> <directory>
npm run dev
ls
sed -i -- <directory>
su
git pull
cd <string>
ls -la
cat <string>
cd <directory>
sudo shutdown -h
ssh -t <file> tmux new -As0
docker rmi <string>
cd <directory>
cat <string>
git status
cd <string>
killall -9 <string>
grep -v <string>
git status
ls
cd <directory>
vi <file>
ls -la <directory>
cd ..
git commit -m <string>
git config --global <file> <string>
cp <string>
sudo dnf install -y <string>
cd <directory>
rm -r <string>
sudo find . ! -user <string> -exec <string> <string>
tar -cf <string> -T -
ping <string>
sed <directory>
mkdir <string>
ls
ls
cd <string>
touch <string>
git reset <string>
git commit -m <string>
sudo sed -i <directory> <file>
docker-compose up -d --build
wget <URL>
cd ..
ls
git pull
ls
wget -qO- <URL>
cat <string>
du -h
ls
let <string>
git push
git add .
sudo nginx -t
tr <string>
cp <string>
cp -r <directory>
ls
cd <directory>
ls -lh
git pull origin master
pwd
find . -empty -type <string> -print -delete
ls -l
rm -r <string>
ls
vim <file>
ls
cd <directory>
ls
vim <file>
cat <string>
cp <string>
cp <string>
docker ps
ls
ls
sudo su
cat <string>
sed -r <directory>
sudo stop uwsgi
date <string>
cd <directory>
npm run dev
sudo apt install <string>
git add
cd ..
git clone --depth <number> <URL>
git push
grep <string>
ls
ls -l
clear
ps -e
file <string>
diff <file> <file>
git init
find . -name <file>
ls
mkdir -p <string>
touch <string>
cd <string>
git add <string>
df -h <string>
ls
git push origin master
ls
sudo apt install nala -y
fg
exit <number>
curl <string>
cut -d <string> -f <string>
git status
grep <string>
ls -l
git pull
grep <string>
git checkout <string>
ls
git pull origin master
awk <string>
pkill <string>
sleep <number>
update-alternatives --config <string>
git push -u <string> master -f
ls
read -p <string>
git commit -m <string>
ls
exit <number>
cp -R <string>
time <directory> -cpuprofile=<file>
cd ..
egrep <string>
cd <directory>
vi <file>
clear
ls
python3 <file>
cd <string>
ls
gawk --version
git commit -m <string>
mv <string>
cd <string>
diff <file>
xrandr --listmonitors
mv <string>
ls
ls
sudo xbps-install <string>
cd <string>
ssh -v
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
sudo -i
ls
pwd
ps -axuwf
cd ..
cd ..
git init
clear
head -1 <file>
grep -v <string>
more <file>
cat <string>
rm -rf <string>
npm i <string>
vi <file>
sudo easy_install <string>
git status
git add .
cd <string>
ip
sudo <directory> -d <file>
cd <directory>
docker kill <string>
mkdir -m <number>
git push
git add .
ls
sudo tcpdump -i <string> -w <file>
npm start
apt-get install <string>
sudo passwd <string>
top
read -p <string>
git init
docker rmi <string>
ls -la
cd <string>
sudo apt-get install gufw -y
pacman -S <string>
cd <string>
ls -lh
setg RHOSTS.*
git push -u <string> master
grep <string>
git status
<directory> <string>
git status
vim <file>
sudo ufw allow <string>
ls
git commit --amend --reset-author
cd ..
exit
cd <string>
sudo mount <directory>
sudo docker rm corrade
fg
git push
sudo sed -i <directory> <file>
exit <number>
sudo apt-get upgrade
grep -r <string>
pygmentize -O <string> -f <string> -g
git checkout
sudo wget -O <directory>
sudo systemctl status <string>
rm -rf <string>
ls
du
time <string>
cd <string>
bash <file>
sudo lvremove --help
vi <file>
exit
sudo nano <directory>
ls
pwd
clear
mv <string>
git init\
cd <string>
exit <number>
rm -rf <string>
ls
cat <string>
sed -E -e <directory>
ls
exit <number>
git filter-branch --index-filter <string> HEAD
systemctl status <string>
cd <directory>
cd
cd <string>
clear
git bisect good <string>
npm-recursive-install
grep <string>
rm -d <string>
vi <file>
fg
cd <directory>
g++ -std=<string> <file> -o <string>
ls
ls
cat -b <file>
sudo add-apt-repository <directory>
cd ..
ls
exit
git checkout master
reset
clear
read -rp <string> <string>
cd ..
exit
clear
ls
touch <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
git init
cd ..
git push -u <string> master
sleep <number>
git status
git merge develop
rm <string>
sudo gpg --yes --dearmor --output <directory>
git branch -M <string>
npm install
pwd
cd <string>
ls -l
ls
less <string>
exit
vim <file>
ls
git checkout -b <string>
dotnet
clear
cd <string>
ls
cd <string>
sudo make modules_install -j3
git push heroku main
vim <file>
git fetch
cat <string>
git pull --rebase
clear
ls
git remove <string>
grep <string>
ls
ls
git add <string>
<directory> install --from-paths <string> --ignore-src -r -y --simulate
ls
sudo -E <string> -y <directory>
exit <number>
source <directory>
clear
docker stop <string>
systemctl enable <string>
sort -nr
exit
cd <string>
sort -u <string>
htop
ls
clear
ls
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
cd
cd ..
git clone <URL>
ls
read <string>
cat <string>
sudo apt install <string>
cd <string>
sudo chmod <number> <string>
exit <number>
git pull
docker rm <string>
grep <string>
curl -LsO <file>
git add <string>
find . -type <string> -exec <string> <directory> {} +
ls
npm install
then
ls -la
help
alias <string>
cd <string>
vim <file>
git rev-parse --show-toplevel
git push -u <string> master
sleep <number>
then\
ls
git commit
git clone <URL>
mkdir <string>
bash <file>
cd <string>
ls -la
cd <string>
localectl set-x11-keymap <string>
ls
pwd
git push -u <string> master
ls
find . -name <file> -type <string> -print -delete
sudo pacman -S <string>
clear
sed <directory>
ls
ls
cd ..
ls
git pull
mkdir <string>
exit
sudo prime-select nvidia
cd <directory>
fg
apt-get install -y <string>
cd <string>
ls -a
git merge -i <directory>
docker-compose logs --follow <string>
cd <string>
grep -rP <string>
git commit -m <string>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
cd <directory>
cd..
git branch -a
ls
setg RHOSTS <file>
ls
vim
cd <string>
git merge <string>
ls
ls
ls
ls
vim <file>
mkdir <string>
sudo apt-get install <string>
git push -u <string> main
cat <string>
ls
cd
docker-compose up -d --build
bash <file>
awk <string>
done
sed <directory>
ls -la
git fetch
git remote add origin <URL>
git push
npm run frontend
ps
mv <string>
cd ..
ls
sudo firewall-cmd --reload
cd
cd <directory>
done
git stash pop
python
clear
sudo apt-get -y <string>
sudo pacman -Sy
vim <file>
git init
rm -rf <string>
cd <directory>
cat <string>
ls
cd ..
fg
exit
cat <string>
cd ..
nano <string>
grep <string>
git commit
sudo ufw allow <string>
npm i <string>
export <string>
rm <string>
sudo a2enmod -q <string>
du
sudo add-apt-repository <directory>
sudo add-apt-repository <string>
curl -I <URL>
df -lh
mv <string>
exit\
git push
git add
lsblk
ls
vim <file>
mount
cd -
git status
git log
sudo service nginx restart
ps -ef
ls
ls -la <directory>
git clone <URL>
git commit -m <string>
ssh <string>
cat
byobu-tmux
ls
systemctl start <string>
pwd
grep <string>
git pull
source <file>
cd <string>
cd <directory>
git add .
ls
git pull
wget -q -O - <URL>
git -innit
cd
clear
cp <string>
ls
git push origin
ls
git add <string>
exit
grep <string>
cd <string>
ls --help
clear
ls -ltr
git commit -m <string>
ls
git status
cp -r <directory>
export <string>
python3 <file> -sI <string> -sM <string> -dM <string> -dI <string> -v
chmod <string>
sudo adduser <string>
cd ..
sudo apt update
ls
wget <URL>
npx <directory> --input_format <string> --output_format <string>
cd <directory>
rm <string>
cd <string>
ls
vim <file>
git init
ls
sudo pip install -U <string>
git pull
git add <string>
cd <string>
git branch -d <string>
apt list --installed
git commit -m <string>
cd <string>
ls
git checkout master
vi <file>
cd <directory>
git push origin master
vim <file>
exit <number>
git status
code .
curl -s <string>
vi <file>
sudo rm -rf <string>
cd ..
git fetch
npm run coverage
mkdir <string>
sudo udevadm control --reload-rules
sudo reboot
ls
git add <string>
sudo apt dist-upgrade
sudo apt-get -y <string>
docker-compose up -d --build
git add .
vim <file>
cd <directory>
tar -xvzf <file>
git commit -m"update"
cp <string>
ls
ls -l
vim <file>
tar -cvf <string>
ls
cd <string>
sudo pip install --upgrade <string>
git add <string>
git push origin main
cd <string>
sudo apt-get clean
ls
make install
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
clear
vi <file>
vim <file>
cd -
cd <string>
git add .
source <directory>
exit
cd <string>
cp <string>
rm -f <string>
mv <string>
vi <file>
git add .
make clean
cd ..
clear
node <file>
clear
curl -O <URL>
vim <file>
ls
pwd
sudo apt update\
git init
git status
vi <file>
ls
sudo apt install -y <string>
capsctrl <directory> & disown
cd <string>
<directory> <directory>
less <string>
mkdir -p <string>
cd ..
git push
git init
git status
sudo dnf install -y <string>
exit <number>
sudo vim <file>
fg
rm -f <string>
ls
sudo apt install <string>
touch <file>
cd <string>
cat <string>
sudo apt-get update
clear
ls
npm run devstart
tmux a -t'training'
fg
wget -O <file>
fg
cd
history -w
ls
git checkout -b <string>
journalctl
vim
sudo tee <directory>
cd <string>
ls
git pull origin development
git status
git add.
exit
git checkout master
ls -la
chmod <number> <string>
curl -fsSL <URL>
read -rsn1 -p"Choice <string>
ls
ls
ls
scp <string>
read -r <string>
ls
git push
cd <directory>
sudo yum install git -y
cd <string>
sudo apt remove <string>
git init
clear
source <file>
env
cd ..
git diff --name-only <string>
sudo -H <string> install <string>
cd <string>
python3 <file>
clear
vim <file>
python3 <file>
git add .
clear
sudo fdisk -l
npm i <string>
sudo su -
sudo apt-get update
cd ..
git commit -m <string>
rm <string>
mv <string>
cd
ls
sudo su
git push origin
exit <number>
vi <file>
fg
cd <string>
npm install -g <string>
npm start
git init
ls
sudo powerstat -d <number> -z
git clone <URL>
kubectl get <string>
chown -R <string>
git clone <URL>
ssh <string>
sudo rm -r <string>
ls
ls
cat <string>
python3 <file>
git clone <URL>
ls
git commit-tree <string>
sudo service <string>
cd <directory>
ls
pwd
git add .
cd <string>
ping <string>
sudo sed -i <directory> <file>
env
ssh <string>
sudo yum install -y <string>
read -p <string>
sudo docker images
mkdir <string>
git commit -m <string>
sudo dpkg-reconfigure tzdata
cd <directory>
sudo snap install --classic <string>
rm
git add --all
cd ..
cd <string>
ls
man <string>
ls
ls
history
cd <string>
cd
sudo apt install <string>
cd <directory>
exit <number>
history
vim <file>
history
ls
done
git commit -m <string>
cat <string>
cat <string>
ls
cd <directory>
cat <string>
git push -u <string> bryan-guner
htop
sudo gpasswd -a <string>
systemctl status <string>
tail <file> -n <number>
git push
chmod <string>
screen -r <string>
sudo apt-get install -y <string>
which <string>
git init
ssh -oStrictHostKeyChecking=<string> -oBatchMode=<string> -oConnectTimeout=<number> -i <string>
sudo apt-get -y <string>
git branch
brew install <string>
git commit -m <string>
apt dist-upgrade -y
git config --gloal <file>
mkdir <string>
ls
sudo touch <directory>
ls
cd <string>
git status
ls
npm test
sudo mv <string>
sudo zypper se <string>
cat <string>
ls
cd <string>
clear
rm -R <string>
ls
git add <string>
git commit -m <string>
cd <directory>
cp -r <directory>
rm -rf <string>
sort
ssh dirlic@10.18.0.39 -p <number>
export <string>
ls
ls
rm <string>
ls -ltr
cd ..
grep -i <string>
git config --global <file> <file>
clear
ls -altr
ls
sudo apt-get install -y <string>
git init -b <string>
sudo apt install <string>
sudo apt update
cd <string>
git add <string>
cat <string>
wget -q <URL> -O-
cd <string>
ls -la
ls
npm http <number> <URL>
ls
git push
pwd
service <string>
git commit
chmod <number> <string>
vim <file>
cd <directory>
ls
vim <file>
docker logs <string>
rm <string>
ls
git commit -m <string>
cd ..
npm ERR! <string>
ls
cp <string>
cp <string>
cat <string>
ls data* -l
sed -r <directory>
curl <string>
ls
sudo nano <directory>
ssh <string>
cd <directory>
code .
sudo -s
rm -rf <string>
ls
diff -u <string>
read -p <directory> -n <number>
du -a -h <directory>
sudo pacman -Syu
sudo apt install <string>
sudo pip install <string>
vi <file>
exit
curl -G <directory>
exec --no-startup-id <string>
ls
su
cd <string>
su root
cd <string>
clear
npx run-android --active-arch-only
sudo service <string>
read
cd <directory>
ls -ltr
ls
git add .
sudo dpkg-reconfigure <string>
vi <file>
npm run watch
git add .
git add
cd <string>
clear
ls -ltr
cd <string>
git commit
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
ls -lah <string>
git push
clear
more <file>
sudo supervisorctl status
LANG=<string> rpm -qp --queryformat <string>
npm i -g <string>
ls
which <string>
bash
clear
cd ..
ls
ls
ssh dirlic@10.18.0.39 -p <number>
git push
openssl rand -hex <number>
git commit -m <string>
vim <file>
cd <string>
cd <directory>
exit
ls
npm audit fix
sudo updatedb
exit
git add .
ls
mkdir <string>
find . -name <file> -type <string> -print -delete
source <string>
vim <file>
git clone <URL>
gpg --verify <file> <string>
clear
cd <directory>
ls
export
vim <file>
ls
ls
cd <string>
exit
sleep <number>
code .
clear
ls
find -name <string>
git commit -m <string>
cd <directory>
cd ..
cd <string>
sudo lvremove <directory>
exit
ls
cd <string>
git co master
sudo sh
mv <string>
cd ..
curl -O <URL>
open .
cd ..
cd ..
sudo ufw status
cd <string>
cd <string>
cd
vi <file>
ls
ln -sf <directory>
sudo systemctl status <string>
setg RHOSTS.*
sudo kill -9 <number>
cd <string>
ping <string>
git co -b <string>
git commit
ls
ls
grep -Ev <string>
vim <file>
ls
subl <string>
ssh dirlic@10.18.0.39 -p <number>
ls
vim <file>
git add .
git commit -m <string>
awk <string>
cd <directory>
sudo pip install <string>
npm install firebase --save
mv <string>
cd
fg
cd <string>
git add .
cd <string>
git add <string>
node <file>
git config --global <file> <file>
sudo apt-get autoclean
touch <file>
exit
git add .
apt-get install <string>
git remote add origin <URL>
cd <string>
sed -i <string>
git commit -m <string>
ls -la
exit
ssh-add --apple-use-keychain <directory>
clear
tmux source <file>
rm -rf <string>
ls
git status
ls
find . -name <file> -type <string> -print -delete
history -a
git commit -am <string>
xargs -i <string> <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
sudo curl -sL <URL>
mv <string>
exit
kill <number>
tail -f <string>
ls
chmod +x <string>
bash <file>
vim
sudo rm -rf <string>
sudo usermod -aG <string> <string>
ls
exit <number>
cd <string>
do\
wget -q -O <file>
vim <file>
docker system prune -af --volumes
ls
code <string>
exit
sudo stop uwsgi
touch <string>
ls
ls
ls
exit
ls
yarn add <string>
cd ..
bash <file>
alias <string>
git push
ls
cd ..
pwd
gpg --list-keys
ls -a
sudo apt upgrade
sed <directory>
cd <string>
ls
sudo apt -y <string>
git commit -m <string>
sudo rm -R <string>
nc <number> <number>
vim <file>
exit
git add <string>
wget <URL> -O <file>
ls
git remote add origin <URL>
ls
git clone <URL>
git remote add upstream <string>
cd <string>
history -c
git clone
npm i <string>
ls -al
ls
cd -
wget <URL>
sudo xargs sed -i <directory>
sudo apt update
ps ax
ls
man <string>
cd <string>
cd <string>
cd <directory>
ls
ls
git log
git init
git push
print <string>
sleep <string>
curl --fail --compressed -q <string>
fg
exit
clear
cd <directory>
cd <directory>
git checkout -b <string>
cat <string>
exit
uname -a
cd <string>
git init
cd <string>
git pull
git commit -m <string>
git status
unset <string>
cd <directory>
cd <string>
sudo apt-get install <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
npm i --legacy-peer-deps
git pull
ls
docker ps -a
git add .
ls -la
dir
sudo ip route add <string>
sudo apt-get -f <string>
git stash
cd <string>
mount --types
cd <string>
sudo npx <string>
rm -f <string>
git submodule add <URL>
ls
npm i -g <string>
mv <string>
curl <string>
ls
apt-key add -
ls
ls
vi <file>
mv <string>
bash <(curl -s <URL> -y
sudo systemctl reload <string>
git add .
git push --set-upstream <string> master
clear
fg
rm -rf <string>
git add .
docker rmi <string>
vim
python3 <file>
find . -size <string> -a -print -a -exec <string> -f <string> \
ls
sudo lvextend -L <string>
mkdir -p <string>
git commit --amend --no-edit --no-verify
ls
cd <string>
git stash
apt-get -y <string> <string>
vim <file>
git config --global --get <file>
sudo yum <string>
sudo git push -u <string>
ls
sudo chmod a+w <string>
git clone <URL>
sudo certbot --nginx -d <file>
ls
cp <string>
exit
git push origin main
mv <string>
nano <file>
ls
rake <string>
python3 <file>
exit <number>
cd ..
apt upgrade
ls
sudo chmod <number> <directory>
sudo apt install <string>
ls
ssh <string>
sudo chmod a+rwx <directory>
cd <string>
base64
git status
git init
ls
cd <string>
tail -f <string>
git commit
rm -rf <string>
vim <file>
ls -la
ssh -T <file>
sudo cat <directory>
sed -e <directory> -e <directory>
read -rp <string> <string>
php artisan vendor:publish --all
cd <directory>
git reset <string>
cd ..
sudo -i
git remote rm <string>
git status
sudo apt-get update
exit
cd <directory>
git clone
npm start
mkdir --help
ls -lih <directory>
systemctl start kubelet
cd ..
clear
cd <string>
sudo groupadd <string>
grep -v <string>
git remote add origin <URL>
ls
wget -r <URL>
clear
clear
sed -i <directory>
docker volume ls
tmux
rm -rf <string>
mv <string>
git commit -m <string>
do\
exit <number>
git config --global <file>
ls++ -a
git commit -m <string>
grep <string>
npm run test --force
mkdir -p <string>
cd ..
git add .
ls
find <directory> -name <file>
cd <directory>
cd <string>
git config <file> <file>
git status
cd ..
exit
git status
exit
ls
git add <string>
mkdir -p <string>
sudo apt update
find . -name <file>
cd <string>
git remote add origin <URL>
awk <string>
unset color_prompt force_color_prompt
ls
sudo apt install <string>
git reflog expire --all
vi <file>
clear
sudo python3 <file> install
git
git add --all
git push -u <string> master
cd <string>
git status
find <directory> -iname <file> -type <string> -exec <string> -c <string> --wrap=<string> --from <string> --to <string> <string> -o <file> <string> {} \
ls
ls
cd <directory>
cd
cd ..
git status
cd ..
reset
grep <string>
cd <string>
git add <string>
vim <file>
clear
cd <string>
clear
bash <file>
python3 <file>
vim <file>
ssh <string>
touch <file>
clear
cd <directory>
git push
clear
grep -i <string> >files
curl -sL <URL> -o <file>
cat <string>
ls
sudo apt-get install <string>
ls
rm -rf <string>
ls
ls++ -a
sudo rm -rf <string>
pwd
npm install <string>
rm -f <string>
php artisan <string>
ls
grep -i <string>
cd <string>
pwd
exit
ls -la <directory>
git push origin <string>
chmod +x <string>
clear
cd <directory>
sudo apt update
git push origin <string>
free
find . -type <string> -name <string>
git add .
ls
ls
git config --global
cd ..
cd <directory>
nano <string>
git commit -m <string>
ls
git branch
sudo apt update -y
tail -f <directory>
git clone <URL>
git add .
cd ..
mv <string>
clear
vi <file>
git reset --soft <string>
vim <file>
vim <file>
cd ..
sudo apt install -y <string>
sudo apt-get -y <string>
cut -d <string> -f1
vim <file>
ls
vi <file>
cd <string>
exit
vim <file>
mkdir -p <string>
ls
ls
git add <string>
git status
python3 <file>
ls
exit <number>
python3 <file>
sudo systemctl restart <string>
sudo apt install <string>
cd ..
history -a
cd
apt install $PACKAGES -y
cd
rm --help
git clone <URL>
rm <string>
sudo apt-get purge --auto-remove <string>
ls
sudo ufw allow app --help
ls
cd
su root
cd <directory>
cat <string>
sudo ls <directory>
nano <string>
mkdir <string>
git commit -m <string>
cd <directory>
cd <string>
git add <string>
sed --version
journalctl -b
git filter-branch --index-filter <string> HEAD
git commit -am <string>
exit <number>
git checkout -b <string>
ls
vim <file>
ls
npm run build
git add <string>
cd -
python3 -m <string>
git remote add origin <URL>
git add <string>
npm run coverage
vim <file>
ls
git remote -v
git push -u <string> main
ls
git add .
grep -i <string>
mkdir -p <string>
ls
systemctl --user <string> <file>
ls -d <string>
cd <string>
ls
grep <string>
sudo udevadm trigger
exit <number>
git remote add origin <URL>
curl -fLo <file> --create-dirs <string>
grep -Em1 <directory>
ls -a
cd <string>
mv <string>
df -h
exit <number>
cd ..
sed -E -e <directory>
ls -lh
npm run dev
sed <directory>
ls
wget -r <URL>
cat <string>
git config --global <file> <file>
cd <directory>
ls
sudo apt install <string>
ls
cd <string>
cd <string>
cd <string>
docker exec -it <string>
cd <string>
sudo sed -i <directory> <file>
sudo ln -s <directory>
cd ..
cd ..
sudo npm install -v <string>
ftp 198.19.255.136
unset color_prompt force_color_prompt
pacman -S <string>
cd <string>
cd <string>
git status
cd <directory>
sudo apt-get update
mv -f <string>
cd <directory>
cd <directory>
ls
ls
cd
npm run
docker-compose logs
ls
rm <string>
history -w
rm -rf <string>
git checkout SHA -- <string> <string>
cd <string>
npm i
docker push <directory>
sudo apt autoremove
vim <file>
ls
read -p <string>
curl -sL <URL>
script/build.sh
kill <number>
npm -v
rm <string>
ls
cd <string>
vim <file>
exit <number>
ls
pwd
git add .
cd <string>
cd <string>
cd <string>
exit
vim <file>
file <string>
ls
cat <string>
ls
clear
then\
git pull
cd <string>
help
tail -f <directory> --lines=<number>
python3 --version
sudo sed -i <directory> <file>
exit
git clone <URL>
ls
ls
cd <string>
mount --types <string> overlay --options=<string> <directory>
ls
uniq -c
cd <directory>
vi <file>
exit
sudo setcap <string>
sudo sed -i <directory> <file>
ls -al --colour
ssh <string>
git push
cd <string>
git commit -m <string>
ls
git push
exit
cd <string>
ls
ls
ls
byobu-tmux
git init
ls
ls
cd <string>
rm <string>
mkdir <string>
ps -u <string> # lists your processes
nc -l <number>
rm <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
openssl req -new -x509 -nodes -sha256 -days <number> -key <file>
git add .
ls
git add .
export <string>
git init
git add .
ls
git add -A
ls
git branch 2> <directory>
ls
cd <string>
sed -i <string>
ls
tail -f <string>
rm <string>
ls
ls
cd <string>
ls -la
wget <URL>
sed -i <directory>
chmod <string>
exit
curl <string>
git config --global <file> <file>
cd <string>
exit
mkdir <string>
cd <string>
git clone <URL>
exit <number>
git init
ls
clear
git commit
cd <string>
find . -name <file>
fg
cd ..
cd -
ls
vim <file>
cd ..
systemctl status <string>
read -r
du -sh <directory>
cd ..
ls
git branch
cd ..
cd <string>
ssh <string>
git add <string>
cd <string>
cd <string>
git -C <string>
ls
npm run start
sudo nala install <string>
LANG=<string> rpm -qp --queryformat <string>
read -rp <string> <string>
cd <string>
cd <string>
git pull origin development
git config --global <file>
git commit
mv <string>
ls
then
ls -al
pwd
vi <file>
rm -rf <string>
docker push <directory>
vim <file>
mkdir <string>
nano <file>
df -h
git branch
cd <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
setg RHOSTS.*
vim <file>
cd <directory>
diff <file>
python3 <file>
exit
vi <file>
vi <file>
docker --version
cd <string>
sudo npm start
journalctl -b -1 -e
python3 <file>
rsync <directory>
code .
exit
sudo apt-get upgrade -y
ls
git clone <URL>
sudo apt-get update
vi <file>
ls -l
ls
exit
chown -R <string>
cd <string>
vi <file>
codedown javascript > <file>
git init\
wget <URL>
cd ..
npm run build
cd <directory>
xargs -L1 -I'{}' <string> -rE <string>
rm <string>
sudo chown <string>
git push -u <string> master
nano <file>
git checkout <string>
ls
pwd
apt search <string>
chmod <string>
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
exit
git commit -m <string>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
make clean
wget -O <file>
ls
sudo groupadd docker
mv <string>
npm run dev
ls
sudo apt-mark <string>
tail -f <string>
sudo rm -r <string>
clear
sudo ls <directory>
rm -rf <string>
ls
vi <file>
sudo apt-get install <string>
ls
clear
cd ..
sudo chmod u+x <file>
fg
git add .
read -rp <string> <string>
exit
uniq
git status
unset color_prompt force_color_prompt
git commit -a -m <string>
rm -r <string>
cd ..
vim <file>
helm install --name <string>
git pull
ls
ls -ltr
more <file>
ls
python3 <file>
ls
rm -rf <string>
ls
clear
git config --global <file>
find . -name <file> -type <string> -print -delete
cd <string>
cd ..
exit
git status
find . -empty -type <string> -print -delete
ls
exit
cd <string>
read -p <string>
rm -f <string>
read -p"选择将系统更新地切到国内哪个镜:1. <string>
git checkout master
sudo start uwsgi
cat <string>
touch <file>
cd <string>
vim <file>
which <string>
rm <string>
grep -i <string> >files
sudo apt update
vim <file>
mv <string>
cp -R -n <directory>
git status
sh -s\
man
top
git branch -M <string>
curl -sL <URL>
git pull
env
git push origin main
grep -vE <string>
exit
df -m
sudo -i
ruby -rubygems -e <string>
cd
cd <directory>
git --git-dir=<string> <string> --format=<string> <string>
npm run dev
cd
rm <string>
vim <file>
sudo apt update
ls
which <string>
ls
ls -l
exit
vim <file>
clear
code <string>
clear
sed -i <string>
cat <string>
ping <string>
mv <string>
exit
git init
curl <string>
fg
cd <directory>
htop
cd <string>
which <string>
git switch <string>
ls
ls
find . -empty -type <string> -print -delete\
code .
export <string>
wget -O <file>
ls
cp <string>
git add .
git clone <URL>
vi <file>
vim <file>
cp -r <directory>
ls -l
mkdir <string>
vim <file>
git fetch
sudo ntpdate -q <string>
history
cat <string>
ls
sudo apt-get update
ls data* -l
ls
ls
sudo ln -s <directory>
cd <directory>
cd <directory>
vi <file>
cat <string>
cp <string>
screen -rd <string>
chmod <number> <string>
git push
git add .
git add <string>
top
git config
git fetch origin\
cd <string>
docker-compose up -d --build
cd <string>
sudo apt-get install <string>
exit
sudo rpm --import <URL>
git push
cat <string>
sed <directory>
find . -maxdepth <number> -type <string> -exec <file>
git add .
docker images -a <string>
git checkout -b <string>
grep <string>
ps aux
python3 <file>
unset <string>
ls
sudo vi <file>
wget -N <URL>
cd <string>
mkdir -p <string>
git filter-branch -f --commit-filter <string>
man <string>
chmod u+x <string>
dmd-bootstrap -run <file>
sudo apt-get upgrade
vim <file>
clear
git push -u <string> master
wget -SO <directory>
unset <string>
cd <string>
tar -xvf <file>
exit <number>
ls
git pull
npm http GET <URL>
git pull
git status
ssh stephen@10.87.111.148 -p <number>
cd <directory>
cd ..
cd <string>
cd <string>
rm --help
cd
ls
cd <string>
sudo apt-get update
cd <string>
ls
git add .
git commit -m <string>
ls -s
vim <file>
npm -v
git config --global <file> <file>
clear
git clone <URL>
sort
clear
cd <string>
npm i -g <string>
cd <string>
su -
sudo curl <URL>
ls
yarn <string>
sudo docker rm <string>
aptitude update
vi <file>
git push origin master
brew services <string>
ls
cd <string>
sed -i <directory>
git add .
sudo su -l <string>
sudo apt install <string>
sudo gem install <string>
cd ..
sudo poweroff
npm install
ls
ls -la
rm <string>
ls
ls
git log
git log
ls
git reset -hard
git branch 2> <directory>
grep <string>
chmod
sudo systemctl stop <string>
top
fg
ls
cd ..
ls -la
chmod +x <string>
man <string>
nano <string>
ls
cd <string>
time <directory> -cpuprofile=<file>
setg RHOSTS <file>
fg
curl -LO <string>
clear
git add .
cd <string>
ls
ls
cp <string>
tee -a <string>
git push origin PTS-578_redirects_not_updating_automatically --force
nano <file>
cat <string>
ls
vi <file>
sh <file>
sudo apt update
cd <string>
touch <string>
<file> <file>
cd ..
git remote add origin <URL>
ls
vim <file>
docker-compose up -d --build
cd
ls
ls
clear
bash
git add .
git push
cd ..
vim <file>
git init
git push
cd <string>
exit
rm -rf <string>
ssh -X -o <directory>
ls
cd -
else\
ls
nano <file>
sudo systemctl enable <string>
ls
sudo cat <directory>
reboot
ls
sudo vim <directory>
sed <directory>
curl <string>
cd ..
codedown javascript > <file>
cp -v <string> <directory>
kill <number>
git commit -m <string>
cd <string>
wget <URL>
nice
journalctl
rm <string>
cd <directory>
podman ps -a
rm <string>
ls
mkdir <string>
git status
cd <string>
git status
git commit -m <string>
cd <string>
awk <string>
fg
ls
sudo aptitude purge <string>
ls
vim <file>
rm -rf <string>
tar -zxvf <file>
exit <number>
vim <file>
history
source <file>
wget <URL>
sudo update-rc.d <string>
sudo apt install <string>
sudo sed -i <directory> <file>
du -sh <directory>
python3 <file>
vim <file>
git pull
vi <file>
vi <file>
done
rm -rf <string>
vi <file>
ls
cd <directory>
git add .
ps # prints a line of information about the current running login shell and any processes running under it
ls
reboot
sudo -v
cp <string>
cd <directory>
reboot
git remote add origin <URL>
cd <string>
cd <string>
sudo flatpak override --reset
ls
chmod <number> <string>
ls
tar -zxf <file>
cp <string>
clear
apt-get install <string>
sudo apt install <string>
sudo systemctl status <string>
sh <(curl -L <URL> --no-daemon
history -a
cd..
wget <URL>
ls
cp -r <directory>
ls
exit
cat <string>
fg
git --bare <string>
ls
yarn install
cp <string>
mv <string>
git add <string>
ls
rm -rf <string>
ls
<file> --bg=<string> --palette=<string> <string>
ls
pwd
vim <file>
vi <file>
find . -name'*pk*' -print
vim <file>
nano <file>
ls
xargs sed -i <directory>
ps -eal
ls
ls
vi <file>
exit
<directory> <string>
kill <number>
htop
sudo pacman -Ss <string>
mv <string>
ls -la <directory>
git add <string>
rm <string>
git status
rm -f <string>
vi <file>
clear
ps
ls
ls
vim <file>
ls
git commit -m <string>
git clone <URL>
ls
npm install grunt --save-dev
git status
git please
docker-compose logs --follow <string>
sudo apt-get --assume-yes <string> <string>
npm run dev
git push -u <string> master
cat <string>
cd <directory>
vi <file>
cd <string>
hexdump <file>
cd <string>
curl <string>
find . -iname <string> -print0 <string>
mvn compile
who
vi <file>
mv <string>
tail +x # want to display all the lines from x to y. This includes the xth and yth lines.
git config --list
sudo sed -i <directory> <file>
cd <string>
ls
sudo rm -r <string>
ls
ls
sudo setxkbmap -layout <string> -variant <string> -option <string>
then
sudo apt-get install --install-recommends <string>
chmod -v <string>
rm <string>
sudo usermod -aG <string> <string>
sudo vim <directory>
vim <file>
clear
sudo git pull origin master
git add .
ls
grep -i <string> >files
cd ..
which <string>
mv <string>
sudo lvremove <directory>
ls
sed -i.bak -e <string>
git status
npm install -g <string>
history
vim <file>
cut -d':' -f5 <string>
cd <string>
cd ..
read -rp <string> <string>
sed -i <directory>
sudo sed -i <directory> <file>
cd ..
git commit -m <string>
cd
sed -i <directory>
ls
cat <string>
npm run dev
git add .
npm i <string>
cd <string>
cat <string>
sudo shutdown -h
fg
python3.9 -m <string>
git add .
cp <string>
ls
git commit -m <string>
touch <file>
cd <string>
pwd
mkdir <string>
mkdir -p <string>
cd <string>
cd <string>
cp -r <directory>
cd ..
sudo sed -i <directory> <file>
cd <directory>
sudo snap install --classic <string>
cd <string>
ls
ls
apt install <string>
pwd
cd ..
ls
cd <directory>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
ls
cd ..
npm run register
clear
sudo apt-get clean
exit
killall -s <number>
cd <string>
sudo apt-get install <string>
cp <string>
reboot
cd <directory>
cd <string>
cd <string>
ls
brew install <string>
vim <file>
fg
vim
npm install typescript -g
wget -P <directory>
more <file>
npm install
nano <file>
ln -sf <directory>
python3 <file>
cd <string>
git add <string>
python3 <file>
ls -la
time <directory> -cpuprofile=<file>
npm run dev
git checkout <string>
rm -rf <string>
gpg --dearmor --yes -o <directory>
ls
sudo nano -c <string>
npx shadcn-ui@latest add <string>
chmod u+x <string>
cd -
printf <string>
exit <number>
cd ..
git reflog expire --all
git push origin
<directory> <string>
nano <file>
sh
clear
cd <string>
chmod +x <string>
ls
ls
sudo python <file> --cascade=<file> <number>
ls
cd <string>
cd ..
cd <string>
sed -i <string>
df
chmod +x <string>
rm <string>
npm run start
git push
cd <directory>
sudo nvim <directory>
git clone --branch <string>
cd <string>
git rebase -i <string>
du -ah
npm install <string>
sleep <number>
ls
git push origin master
exit
clear
cd
fg
vim <file>
ls
cat <string>
sudo apt-get install <string>
ls
touch <file>
git push
ls
mkdir <string>
git add <string>
ls
ls -l
ls
cd <string>
npm run serve
clear
cd <string>
ls
cp -R <string>
cp <string>
cd <string>
less <string>
clear
cat <string>
git clone <URL>
cd ..
git commit
cd <directory>
cd <string>
clear
git config --unset-all <file> --global
git clone <URL>
ls
grep <string>
cd ..
htop
byobu-tmux
history
cd ..
git add <string>
docker build -t <string>
cd <string>
cd <string>
cp <string>
man <string>
cd <string>
rmdir <string>
sudo stop uwsgi
sudo pip3 install <string>
unset <string>
ls
vi <file>
cd <directory>
cd <directory>
source <string>
curl -fLo <file> --create-dirs <string>
git remote add origin <URL>
sudo xcodebuild -license
cd <string>
ls
ls
ls -la <directory>
git add <string>
exit
git merge <string>
sleep <number>
vim <file>
curl -s <string>
kill -9 <number>
tar -xvf <file>
rm <string>
cd
cd <string>
ls
rm <string>
git commit -m <string>
sudo chmod a+wr <directory> -R
python3 <file> -- <string> @CAMERA=<string> <string>
cd ..
git pull origin master
ls
clear
cd <string>
git add .
cd ..
ls -alrt
ls
shutdown -r <string>
cp -i <string>
fg
ping <string>
sudo apt -y <string>
clear
touch <string>
git status
vim
ssh -X <string>
vi <file>
cat <string>
sudo apt-get install <string>
top
ls -alh --group-directories-first
vim <file>
git commit -a -m <string>
ls
less <string>
cd <directory>
cd..
grep -i <string> >files
git push
cat <string>
cd ..
sudo xbps-install -S
exit
docker run --rm -itd --init <string>
rm -f <string>
ls
rm -rf <string>
cd <directory>
ls
cp <string>
cd ..
ls
rm <string>
ls
ls
bash <file>
journalctl -xeu <file>
cp <string>
git branch
ls -alF
df -U
ps -a
curl -v -H <string>
npm init -y
nano <file>
git pull origin master
cd ..
bash <file>
git pull
rm -rf <string>
ls++ -a
ls
pkill <string>
cd ..
ls
cd <string>
pwd # <string>
git ls-files
ls
ls
cat <string>
find . -name <file>
cd ..
sudo nano <directory>
ls
sudo pip install <string>
docker-compose up -d --build
man <string>
vi <file>
tmux
mkdir <string>
mkdir <string>
apt-get
rm <string>
sudo ufw <string>
vi <file>
python3 <file>
git push -f <string> <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
git checkout -b <string>
sudo docker rmi <string>
sudo apt-get install <string>
cd <string>
git add .
cp <string>
cd ..
clear
vim
git commit
find <directory> -name <string>
cp -r <directory>
sudo snap install <string>
ls
curl -Lo <directory> --create-dirs <URL>
cd <string>
ls
ls
sudo sed -i <directory> <file>
sh
clear
cd <string>
npm start
git push origin PTS-372_Remove_components_from_daily_tracker --force
ls
git push
git add <string>
grep <string>
df -h <string>
ls
cd
cd ..
cp -r <directory>
find -mindepth=<number> <file>
sudo
ls -lrt
ssh <string>
ls
mkdir -p <string>
ls
git clone --depth=<number> --branch=<string> <URL>
clear
curl -o- <URL>
sudo apt install <string>
git init
du -h <directory>
sudo udevadm trigger
clear
git pull
ls -ltr
cd <directory>
sudo apt-get install <string>
cd <string>
ls
finger <user> # displays information about user
sudo apt install git -y
cd
git status
docker-compose up -d --build
chmod -x <file>
sudo rm -r <string>
git add .
git hist
ls
clear
sudo yum install tree -y
cat -b <file>
ufw status
git checkout <string>
clear
clear
cp -r <directory>
xargs git log --merges --no-walk --grep=<string>
chsh
cd <string>
alias <string>
ls
cd -{N} <string>
cd
git
cat <string>
ls
rm -rf <string>
git checkout <string>
tail -n <string>
exit <number>
ls
bash <file>
mkdir <string>
cd <directory>
ls
sudo su -
sudo zip -r <file>
git stash
kill <number>
ls
vim <file>
rm -r <string>
exit
ls
cd ..
ls
sed -i <directory>
cd <string>
ls
vim <file>
cd
ls
clear
fg
vim <file>
rev
clear
<directory> -m <string>
cd <string>
npm run start
cat <string>
apt-get update
git bisect good
brew install <string>
sudo apt install <string>
fg
cat <string>
ls
exit
su root
rm <string>
python3 -m <string> install <string>
cd <directory>
cd <directory>
git status
ls
npm run test
cd <string>
npx tailwindcss -i <file> -o <file> --watch
cd ..
cp -v <string> <directory>
ls
git tag <string>
npm run start
ls
ls
rm --cached <string>
exit
vim <file>
ls
env
git co HEAD .
cd ..
git reset --hard <string>
ls
mv <string>
ls
yarn add <string>
cd <string>
exit
sleep <number>
docker inspect --format <string>
git remote add origin <URL>
apt-cache search <string>
clear
ls
cd <string>
grep -w <string>
history -c
sudo lshw -short
cd <string>
curl -L <URL>
sudo apt-get update
sudo vi <directory>
sudo sed -i <directory> <file>
ls
git status
git add <string>
ls
code <string>
vi <file>
sudo apt-get install -y <string>
ssh <string>
git branch
rm -f <string>
sudo ls <directory>
cp -v <string> <directory>
cd
cat <string>
vim <file>
sudo dnf install <string>
du -sm <string>
sudo service <string>
mkdir -p <string>
cd
sudo rsync -av --progress <directory>
ls -ltr
clear
local <string>
ls
grep <string>
ls
cd <string>
mv <string>
git branch
npm -v
git init
sudo pacman -s <string>
cd ..
cd <directory>
ls
vi <file>
ls
cd ..
rm <string>
cd <string>
ls
find <directory> -name <string>
ls -ah
npm i <string>
git add .
npm i -g <string>
rm -r <string>
clear
exit
vi <file>
cp -R <string>
sudo python3 <file>
git push -u --force <string>
exit <number>
find .
git commit -m <string>
cd <directory>
git rev-parse --is-inside-work-tree <directory>
cp <string>
ping
tail -f <string>
ls
cd <string>
vim <file>
git pull upstream <string>
chmod u+x <string>
unset color_prompt force_color_prompt
ls
vi <file>
pwd
export <string>
ls -la <directory>
mv <string>
python3 -m <string> install <string>
ls
ls
ls
git clone <URL>
cd ..
gpg --keyserver <file> --recv-keys <string>
ls
uniq
sudo git clone <URL>
cd <string>
cd <string>
git add <string>
ls -la
clear
git commit -m <string>
git add .
more <file>
exit <number>
cd ..
ls
cd <string>
cp <string>
history -c
ls
ls
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
rm -f <string>
mv <string>
git status
export <string>
git help
git pull
sudo sed -i <directory> <file>
rm -rf <string>
grep <string>
npm install --save <string>
sudo userdel -r <string>
exit <number>
cd <string>
npm i prettier -g
git push -u <string> main
ls
git add -A
sudo virsh -c <directory> <string>
clear
history -r <string>
cd <string>
git pull
cp -R <string>
clear
curl -fsSL <URL>
chmod +x <string>
ls
git push -u <string> main
git push
cd <string>
git status
done
git push
cd ..
pwd
git init
ls
mkdir <string>
exit
cd <string>
chmod -x <file>
find <directory> -name <string>
mkdir <string>
ls -l
git remote add origin <URL>
clear
ls
exit
ls
git remote add origin <URL>
sh -i <string>
clear
vi <file>
cd <directory>
git branch -D <string>
git checkout --theirs <file>
apt --fix-broken <string>
python3 <file>
npm i -g <string>
man <string>
git push -u <string> master -f
cat <string>
touch <file>
sudo apt --fix-broken <string>
ls
cd <string>
cd ..
git remote add origin
wget <URL>
ls
mv <string>
cd <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
npm list
ls
cat <string>
git clone -q <string>
cd <directory>
git rebase <directory>
git log --author=<string> --after=<string>
ls -al
ls
ls
exit
git clone <URL>
mv <string>
ls
clear
git status
reboot
ls
systemctl restart <string>
cd <directory>
ls
ls
ls
read -p <string>
ls
tail -f <directory>
clear
rm <string>
vim --version
bash <file>
ls
exit <number>
tmux
rm -rf <string>
mv <string>
ls
mkdir <string>
git status
cd ..
cd ..
nano <file>
exit
read <string>
cd <string>
cut -d <string> -f <number>
setg RHOSTS.*
vi <file>
cd <string>
unset <string>
tail -f <directory>
cd <string>
which <string>
cd <string>
ls
cat <string>
git commit --amend --reset-author
ls
cd <string>
clear
git add <string>
vim <file>
cd ..
find -name <string>
exit <number>
exit <number>
tail -f <string>
cd
exit
docker push <directory>
chmod <number> <string>
cd
source <file>
sh
ls
sudo sed -i <directory> <file>
find . -empty -type <string> -print -delete
top
ls
vim <file>
free -h
git init
npm install express-generator -g
git clone <URL>
ls
sudo apt-key add -
<file> program
cd ..
<file> program
npx tailwindcss init -p
cd ..
sudo chroot <string>
sed -i <directory>
code .
exit
sudo ln -s <directory>
clear
cd <directory>
ls
ls
exit
cat <string>
tar -czf <file>
ls
ls -l
docker-compose up -d --build
git checkout <string>
vim <file>
git add <string>
git commit -m <string>
git add <string>
git config --global <file> <string>
cd ..
git pull -p
rm <string>
sudo wget -O - <string>
cd <directory>
git push
cd <string>
clear
xargs find
ls
sudo systemctl status <string>
done
docker ps
cd <string>
cat <string>
chmod <string>
git diff
ls
ls
git push -u <string> main
git add .
npm run serve
cd <directory>
top
docker stop <string>
mkdir <string>
sudo git checkout <string>
grep <string>
cd ..
sudo curl <URL>
git remote add origin <URL>
docker-compose
git commit -m <string>
clear
cd
git pull origin master
ls
git commit -m <string>
source <file>
ls
cd <string>
ssh dirlic@10.18.0.39 -p <number>
ls
cd <string>
sudo gpg --dearmor -o <directory>
ls
sudo certbot --nginx -d <file>
cd <string>
git stash push -m <string>
ls
pkill <string>
python3 <file>
mkdir -p <string>
sudo cp <string>
sudo alternatives --set <string> <directory>
git clone -b <string>
cd <directory>
vim <file>
ps -ef
ls
vi <file>
cd <directory>
exit
grep <string>
cd <string>
git clone <URL>
<directory> install --from-paths <string> --ignore-src -r -y
find . -empty -type <string> -print -delete
git rm -f --cached <string>
bash <file>
npm run build
cd <string>
rmdir <string>
exit
apt list --installed
find . -empty -type <string> -print -delete
ps -U <string> -u <string>
cd
python3 <file>
sudo apt-get update
man <string>
cd <directory>
git fetch
tar -xf <string>
cd
history
python3 <file>
alias <string>
cd <string>
clear
cd <string>
tmux new-session -d <string>
git add <string>
git status
cd <string>
cd <string>
cd <string>
ls=<string> -G
npm install
ls
npm start
ls -la
ls
find <directory> -type <string> -ls
sudo apt dist-upgrade
docker ps -a
npm init
git pull
ls
sudo sed -i <directory> <file>
git push
cd <string>
rm <string>
ls
ls
mkdir
git branch -D <string>
cd <directory>
sudo nano <string>
sed <directory>
git add .
scp <string>
cd <string>
exit
mkdir <string>
git push
git tag -d <string>
pulseaudio -k
yarn install
sudo rm -R <string>
ls
sudo -u
cd <directory>
ls
open .
mvn exec:java -Dexec.mainClass=<file>
cd <directory>
grep <string>
mkdir <string>
npm install <string>
ls
sudo rm -rf <directory> <directory>
ls
cd <string>
cd <string>
cd <string>
ls
git push origin main
sudo docker kill corrade
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
rm -r <string>
clear
ls
ps
cd <directory>
rm -f <string>
done
cd <string>
gzip --best <file>
nano <string>
git commit
grep -o <string>
cd <directory>
code <string>
git pull
rm <string>
sudo apt-get update -y
grep -vc <directory>
git status
git commit -m <string>
cd ..
cd <string>
cp <string>
sudo rm -rf <string>
cd <directory>
sudo python3 <file>
cd ..
ls
vi <file>
git log --pretty=<string> <string>
git clone --depth=<number> <URL>
cd ..
git remote set-url origin <string>
git add .
grep <string>
clear
wget <URL>
ls
git commit -m <string>
git status
wget -q -O - <URL>
vim <file>
top
top
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
cd <string>
ls
git remote add origin <URL>
open .
git add .
git push
rm -rf <string>
cd <directory>
npm install
gpg --list-keys
cd <string>
cd <directory>
print <string>
git pull
source <file>
docker-compose up -d --build
sort -hr
tar -xf <string>
git status
rm -- -la
npm install -g <string>
clear
ls
npm run dev
vi <file>
cd <string>
sudo mkdir <string>
git status
ftp <string>
ls
git checkout <string>
sudo wine --help
git stash
ls
ls
git checkout <string>
cd ..
read -p <string>
exit
ls
sudo apt-get install <string>
ls
python3 <file>
git branch 2> <directory>
wget <URL>
git push -u <string> main
ls
cd
sudo -s
ls
vi <file>
ls
read <string>
sed -i <string>
head -3) <directory>
ls
git push
npm run frontend
ls
grep -vw <string>
ls
sudo systemctl start <string>
vi <file>
ls > <file>
cd <string>
vi <file>
find . -empty -type <string> -print -delete
sudo apt update
docker stop <string>
export <string>
chmod <string>
git branch --no-color <string> <directory>
more <file>
cd <string>
ls -alrt
sleep <number>
sudo rm hello
cd ..
ls
sudo pip3 install <string>
vi <file>
xargs -0 <string> -- <string>
clear
vim <file>
cd <directory>
npm create vite@latest
sudo pacman -Syy
git rm --cached -r <string>
vim <file>
exit
cd <directory>
source <string>
rm <string>
cd <string>
git init
cd <string>
nano <string>
ls -l
cd ..
source <string>
sudo systemctl enable <string>
sed -i <string>
git rev-parse --abbrev-ref <string>
ping <string>
git clone <URL>
mv <string>
clear
rm <string>
apt-get update
mkdir -p <string>
cat <string>
sudo apt-get install <string>
code
cd <directory>
kill <number>
npm start
cat <string>
exit
read <string>
git add .
cd <string>
ls -la
ls
sed -i <directory>
npm run test
ls
rm <string>
more
git add -v <string>
rm -rf <string>
cd <directory>
ls
wc -c
grep <string>
ls
chmod u+x <string>
ls -alrt
done
git add <string>
git remote add origin <URL>
ssh -T <file>
sudo nano <directory>
mv <string>
ls
ls
cd <directory>
npm i <string>
cd <string>
fg
cd <directory>
git
clear
git remote add origin <URL>
git add .
git push origin master
ls
git remote add origin <URL>
mkdir <string>
sudo apt update -y
sudo sed -i <directory>
cd <directory>
vim <file>
ls
git stash
sudo apt-get install <string>
cd <directory>
vim <file>
ls
ls
cd <string>
git push
curl -v --data <string>
nano <file>
git remote add origin <URL>
ls
mkdir -p <string>
cd
exit
cd
vi <file>
git add .
sudo sed -i <directory> <file>
apt list --upgradable
cd ..
exit
cd ..
sudo apt-get update
ls
cd ..
cd <directory>
clear
git clone <URL>
less <string>
uniq
cd <string>
git rebase <directory>
cd <directory>
git stauts
sed <directory>
git pull origin master
exit <number>
sudo pacman -S <string>
apt-get install -y <string>
tail +x # want to display all the lines from x to y. This includes the xth and yth lines.
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
mkdir <string>
git push
ls -l
ls
cd <string>
exit
systemctl start <string>
vim <file>
sleep <string>
chmod <string>
ls
vim <file>
rm -f <string>
rm -f -- <string>
wget <URL>
sudo pkill -u <string>
ls
exit <number>
cd <string>
grep <string>
sleep <number>
git rev-parse --git-dir <string>
ps -A
ls
source <directory>
ls
ls
source <file>
ls
ls
cd <directory>
sudo rm -r <string>
git config --global <file> <string>
grep -i <string>
tail <file> <number>
git push -u <string> master
vim
sudo pacman -S <string>
ls
ls
wget -q -O <file>
mv <string>
git add <string>
vim <file>
clear
python3 <file>
sudo npm i
mv <string>
git commit -m <string>
ls
git add <string>
ls
clear
grep <string>
git clean -fd
touch <string>
sudo bash <string>
cd <string>
clear
sudo apt-get update
git pull
rm -r <string>
cd ..
vim <file>
cd <string>
rm <string>
mkdir <string>
history -a
ls
sudo yum install git -y
ls
find . -empty -type <string> -print -delete
exit <number>
git status
cd <string>
cd <directory>
sudo apt update\
git init
git add .
LANG=<string> rpm -qp --queryformat <string>
go
read <string>
cd <directory>
cd ..
rm -rf <string>
touch <file>
ls
vim <file>
git add .
rm <string>
tar -xzvf <file>
git status
clear
journalctl -xeu <file>
git push -u <string> master
clear
git add <string>
cp <string>
ls
ss
htop
curl <string>
git clone <URL>
sudo mount <directory>
ls
sudo nala install <string>
ls
git config --global <file> <string>
git merge <string>
sudo pip install -H <string>
sudo rm -rf <string>
ps auxww
ls
update-alternatives <string>
git push
ls
git status
cd
clear
<directory> <string>
ls
clear
exit <number>
read -a <string>
brew install <string>
then\
ls
fg
git push
cd ..
grep -r <string>
git pull origin master
git remote add origin <URL>
cd ..
ls
curl <string>
ssh-keygen -t <string> -C <file>
sudo apt install <string>
ls
tail -f <directory>
which <string>
npm cache <string>
ls
cd
git checkout <string>
grep <string>
rm <string>
git add .
vim <file>
git push origin
sed -i -- <directory>
git add <string>
npm start
ssh -i <string>
exit <number>
git add .
clear
sudo git add -A
cd ..
rm -rf <string>
cd ..
ls
git status
wc -l
ls
cat <string>
git fetch
git config --global <file>
python3 <file>
sudo apt install <string>
cd <string>
ls
ls
sudo <directory> restart
exit
clear
sudo snap remove <string>
clear
cd ..
cd <string>
ls
python3 -m <string>
grep -a <string>
ls
ls
cp <string>
cd <string>
git add .
fg
cd -
cd <directory>
ls
ls
ls -l
npm start
cd <string>
mkdir <string>
git push origin master
cd <directory>
ls
sleep <number>
hostname
git fetch
git commit -m <string>
git push --set-upstream <string> main
cd <string>
chmod -x <file>
cut -f <string> -d <string>
rmdir <string>
sh
ssh -i <string> remote_user@remote_host
vi <file>
sudo apt-get update
cd <string>
npm run pretty <string>
mkdir <string>
ls
ls
rmdir <string>
ls
ls > <file>
ssh dirlic@10.18.0.39 -p <number>
ls
ls
ls
vim <file>
npm start
git commit
cat <string>
cd <string>
scp <string>
ls
grep <string>
git push -u <string> master -f
ls
git add <string>
ls
ls
docker ps
cd ..
git push
ls
sudo python3 <file>
sed -i <directory>
cd ..
ls -lah
clear
cd <string>
chmod <number> <string>
python3 -m <string>
sudo adduser <string>
touch <string>
ls
ls
exit
grep <string>
pwd
<directory> <string>
kubectl apply -f <string>
git config --global <file> <string>
git filter-branch -f --commit-filter <string>
mount <directory> <directory>
git clone <URL>
git clone --depth <number> <URL>
sudo -i
mkdir -p <string>
cd <string>
rm -rf <string>
ls
less <string>
cd <string>
git status
ls
git pull
sudo git add -A
sudo chmod <number> <directory>
git show <string>
cd <string>
ls
sh <file>
chmod +x <string>
find . -type <string> -exec <string> -i <directory>
top
python3 <file>
git push origin PTS-578_redirects_not_updating_automatically --force
npm run prod
ls
ls
ls
cd ..
grep -r <string>
tail -f <string>
git pull
cd <directory>
sudo curl <URL> -o <directory>
git commit --amend
npm run start
ls
yarn <string>
history
cd <string>
cd
cd <string>
cd ..
cat <string>
pwd
git push -u <string> master
cd
tail -n <string>
vim <file>
clear
cd ..
sudo apt-get update
cat <string>
vim <file>
ls
sudo -i
sed -i <string>
mkdir <string>
sudo apt list --upgradable
ls
killall -9 <string>
mv <string>
cd <string>
ls
ls
git commit -m <string>
curl -o- <URL>
sudo apt-get update
sudo sed -i <directory> <file>
cp -r <directory>
ls
cp <string>
fg
bash
exit
git checkout -b <string>
rm <string>
cd ..
find . -name <file>
git init
mount
cd <directory>
cat <string>
vi <file>
curl <URL> -u <string> -d <string>
cd <string>
git commit --allow-empty -m <string>
df -B <string>
sudo apt-get install <string>
ls
exit <number>
sudo vim <file>
mv <string>
cat <string>
sudo apt-get install <string>
ls
rm -rf <string>
cat <string>
cd <string>
cd <directory>
ls
exit <number>
git add .
git add .
ls
sudo rm -rf <directory> <directory>
ls
find <directory> -type <string> -execdir <string>
vim <file>
ls
mkdir <string>
ls -lR <string>
ls
vi <file>
clear
git commit -m <string>
cd <string>
fg
ls
mkdir <string>
sudo apt-get update
vi
git init
sudo chmod <number> <string>
git commit -m <string>
killall <string>
groups
less <string>
git status
source <string>
ls
cd <string>
source <directory>
git add .
npm config <string>
cat <string>
vim <file>
pwd
cd <string>
grep <string>
git commit -m <string>
git pull origin main
cp <string>
ls
ls
wget <URL>
grep -E <string>
vi <file>
git status
sudo pacman -S <string>
uname -a
vi <file>
rm -rf <string>
cd <directory>
chmod <number> <string>
ls
cd <string>
tee -a <string>
npm i -g <string>
clear
printf <string>
exit
git status
cd <string>
fg
cd <directory>
ping <file>
exit
git status
cd ..
sudo systemctl daemon-reload
touch <file>
ls
cd <string>
ls
git commit -m <string>
sudo -s -u <string> -H
vi <file>
less <string>
grep <string>
exit
sudo ldconfig
sed -i <string>
ls
ls
cd <directory>
clear
cd <string>
find . -type <string> -name <string>
vim <file>
kubectl get pods -o <string>
git checkout <string>
exit
clear
clear
cd ..
cp -R <string>
git push heroku master
ls
cd <string>
cd <directory>
git pull origin master
less <string>
read -rp <string> <string>
npm install --save <string>
ls
systemctl stop kubelet
ls
vi <file>
sudo apt -y <string>
sudo raspi-config
sudo sed -i <directory> <file>
ls
clear
rm <string>
git push -d <string>
sudo zypper install <string>
ls
ls
git config --global <file> <string>
clear
mkdir -p <string>
ls --h
ls -laSh
git push
chmod +x <string>
cd ..
clear
ls
install <string>
vi <file>
then
ls
vi <file>
git commit -m <string>
find . -name <file> -type <string> -exec <string> -rf <string>
cat <string>
sudo service nginx reload
mkdir <string>
cd <directory>
curl -X <string> -d <string>
cp -r <directory>
git add .
ls
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
ls
clear
curl -sS <string>
cd <string>
git checkout -b <string>
git branch
grep <string>
grep -i <string>
scp <string>
python3 <file>
git commit -m <string>
fg
ls
mkdir -p <string>
export <string>
ls -ltr
chmod u+x <string>
cd ..
wget <URL>
sudo -E <string> -
ls
ls
su - <string>
clear
cd <string>
ls
ls
ls
nano <file>
usermod -aG <string>
cd ..
fg
git --help
ls
npm init -y
cd ..
docker pull <string>
ls
cd <string>
cd <string>
git branch -M <string>
chmod <number> <string>
ls
curl -sS <string>
git status
ls
cd ..
sudo mv <string>
rm -rf <string>
ls
sudo nano <directory>
service <string>
grep -x <string>
clear
cd <string>
sudo apt update\
curl -sI <string>
find . -name <string> -type <string>
clear
mv <string>
vi <file>
ls
which <string>
tail -f <directory>
unzip <file>
ssh dirlic@10.18.0.39 -p <number>
ls
cd ..
docker exec -it <string>
ls
git add <string>
clear
open .
git remote remove origin
exit
git pull
clear
vim <file>
ls
vim <file>
less
git remote add origin <URL>
tail -f <string>
ls
shutdown -h <string>
python3 <file>
python3 -m <string>
cd
cd ..
sed -i <directory>
cat <string>
git fetch origin\
ls
chmod <number> <string>
rm -f <string>
ls
ls
git status
clear
clear
exit
vi <file>
clear
cd ..
git reset <string>
byobu-tmux
git push
pwd
git add <string>
git fetch
history
git commit -m <string>
git clone <URL>
cd <string>
ls
git push
git status
cd <string>
fg
ssh-keyscan
cd <string>
rm -rf <string>
sudo mv <string>
ssh -p <string> user@host # connects to host on specified port as user
yarn install
ls -a
tmux kill-session
code .
sh
touch <string>
sed -i <directory>
ls
find -name <string>
sudo ufw enable
sudo cat <directory>
grep <string>
cd <string>
ls
git rebase --skip
brew update
git co HEAD .
cd <string>
ls
clear
cd <directory>
cd <string>
git push -u <string> main
mvn exec:java -Dexec.mainClass=<file>
cd <string>
ls -ltr
vim <file>
vim <file>
ls
ls
nano <file>
sudo apt install --only-upgrade <string>
git commit -am'm'
read -s -n <number>
fg
cut -c <string>
sudo nmap -sn <string>
ls
ls
ls
nano <file>
fsck
sudo sed -i <directory> <file>
sudo apt install <string>
git add <string>
cd ..
bash
curl -sS <string>
git status
cd <string>
git add .
ls
vi <file>
ls
ls
rm <string>
git push
cd <directory>
ls
vim <file>
sudo apt-get update
ls
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
awk <string>
git pull
git remote add origin <URL>
cd ..
git add <string>
npm install querystring --save
date
git commit -m <string>
ls
exit <number>
cd <string>
tr <string> <string>
rm <string>
docker volume rm <string>
find . -name <file>
curl <string>
touch <file>
ssh-agent -s
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
ls
ping
sudo vim <file>
clear
git branch -0a
python3 <file>
git status
ping <string>
<file> <file>
git commit
git clone <URL>
sed -E -e <directory>
cat <string>
sudo mv <file>
done
ls
vi <file>
git commit -m <string>
sudo mv -v <directory>
cd <string>
cd <string>
kill -9 <number>
vim <file>
screen -r
ls
vi <file>
git branch
ls
sed <directory>
ls
sudo nano <directory>
ls
vi <file>
ls
ls
grep --color=<string> <string>
ls -ltr
ls
exit <number>
ls
exit
sudo systemctl status <string>
git commit -m <string>
grep -i <string> >files
<directory> -m <file>
ls
ls
sed -n -e <string> -e <string>
cat <string>
ls
git clone <URL>
find . -regextype <string> -regex <string>
exit <number>
vi <file>
view <string>
git commit
git commit -m <string>
sudo python <file>
chmod <number> <string>
cd ..
mv <string>
fg
mkdir -p <string>
git commit -m <string>
exit
rm <string>
ls
less <string>
cd
pwd
tmux set-option -g <string>
find . -name <file>
sudo apt-get install <string>
exit <number>
cp -v <string> <directory>
grep <string>
source <string>
cut --help
ls
sudo update
curl <URL> -o <string>
done
cd <directory>
mkdir <string>
cd
docker exec -it <string> bash
vim <file>
git checkout --orphan <string>
cd ..
git branch -M <string>
sudo systemctl enable <string>
sudo add-apt-repository <directory>
less
vim -v <file>
chsh
cd ..
sudo apt-get install -y <string>
mkdir <string>
git remote -v
cd
chmod <number> <string>
mkdir <string>
cd <string>
mkdir <string>
curl <string>
git please
ls
cd ..
docker-compose up -d --build
git push -u <string> master -f
ls
sudo apt-get install -y <string>
git commit -m <string> --no-verify
git remote add origin <URL>
ls
sudo aptitude purge <string>
man -k <string>
cd <string>
clear
cd ..
git commit -m"updating <string>
cd
read
cd <string>
cd <directory>
sudo apt-get install <string>
unset color_prompt force_color_prompt
git commit -m <string>
npm install -g <string>
sudo apt install <string>
mkdir --help
ls tmux
exit
sudo do-release-upgrade
sudo dd <string>
cd <directory>
sed -E -e <directory>
fg
git add <string>
which <string>
sudo fsck <directory>
sed <directory>
ls
git checkout <string>
ls
cd <directory>
cd <string>
exit
git init
lsblk
then\
ls
code <string>
ls
python3 <file>
git remote add origin <URL>
sudo nano <directory>
ls
cd
grep -rni <string>
rm -r <string>
ls
chmod <number> <string>
cd <string>
sudo apt-get install <string>
cd
exit <number>
ruby -e <string>
pico <file>
npm update
tail -f <string>
ls
git remote add origin <URL>
cat <string>
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
mv -v <string>
git push --set-upstream <string> <string>
ls
ls
git push
wget -O <file>
fg
cd <string>
ls
cd <string>
chmod <string>
vim <file>
fg
wget -q -O <file>
ls
ls
git rm --cached <directory> -f
git please
set <string>
git status
rm -f <string>
cd <directory>
cd <string>
cd <directory>
git add <string>
vim <file>
ls
find . -empty -type <string> -print -delete
killall <processname> # kill all processes with the name
cat <string>
rm -fr <string>
cd ..
git remote add origin <URL>
git add -A
cd <string>
exit
ls
cd <string>
exit
wget <URL>
python3 <file>
git
touch <string>
git branch -M <string>
cd <string>
exit <number>
cd <directory>
ls
git
top
clear
git add <string>
ls
mkdir -p <string>
cd ..
sh
cp -av <directory>
sleep <string>
ssh
exit
cd ..
cd
clear
git stash pop
git push origin master
ls
cd <string>
df -lh
sudo tar -xvf <string> -C <directory>
bash
rm -r <string>
cd <directory>
clear
vim <file>
xargs
ls
git clone <URL>
vim <file>
clear
scp <string>
sudo swapoff -a
mkdir <directory> -p
cd <directory>
git diff <string>
exit
npm install express -D
cat <string>
systemctl help
ls
ls
git clone <URL>
sudo ufw status
cd <string>
cat <string>
git status
htop
clear
cd <string>
ls
clear
cd <string>
cd ..
sudo apt-get -y <string>
cd ..
clear
cd <string>
vim <file>
source <directory>
cp <string>
chmod +x <string>
cd <string>
grep <string>
vi <file>
git merge <string>
rm -r <string>
npm install <string>
exit
vi <file>
more <file>
cd <string>
cd <string>
exit
grep <string>
rm -f <string>
mkdir <string>
docker-compose up -d --build
cd <string>
cd ..
xrandr
ls
ls -ltr
cd <string>
ls
vi <file>
git push
apt-key
man <string>
ls -l
rsync <directory>
clear
ls
sudo chkconfig <string>
touch <string>
cd <directory>
mv <string>
cd <string>
ls
python3.11 <file>
ls
cd <string>
rm <string>
cd <directory>
ls -la
top
sed -E -e <directory>
npm uninstall <string>
cd <directory>
fg
git diff
cd ..
pwd
docker-compose up -d --build
ls
cd <directory>
cd <string>
sudo less <directory>
ls
ls
service <string>
sudo apt install -y <string>
sudo shutdown now
free
sudo apt-get install -y <string>
docker-compose -f <string>
vim <file>
cd <string>
ls
cd <directory>
ls
clear
cd <string>
service apache2 reload
cd <string>
ls
cd <string>
git commit -m <string>
git add .
sudo make install
cat <string>
vi <file>
sudo pip3 install -U <string>
clear
git checkout master
git status
cd <string>
git commit
sudo docker exec <string>
rm -rf <string>
git fetch
cd <string>
pwd
ls
sudo mkdir -p <directory>
git commit --amend
cd
clear
cd <string>
sudo pacman -S <string>
sudo make clean install
su root
fg
cd ..
ls -ltr
mkdir <string>
ls -all <directory>
ls
git clone <URL>
mkdir <string>
vi <file>
cd <string>
cd <string>
sed -E -e <directory>
ls
cd <string>
chmod -R <number> <directory>
rm -f <string>
sudo pip3 install --extra-index-url <URL>
sudo apt -y <string> <string>
kubectl port-forward <directory> -n <string>
sudo vi <file>
sudo apt update
mv <string>
kubectl get <string>
ls
git add .
vim <file>
cat <string>
fg
cd <string>
git branch -D <string>
ls
ls
sudo sed -i <directory> <file>
cd <string>
man <string>
grep <string>
less <string>
ls
mkdir <string>
git status
cat <string>
tail -n20
git status
ls
sudo su
cd
ls
rm -r <string>
cd <directory>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
sed -n <string>
git push -u <string> master
git checkout <string>
npm start
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git commit -m <string>
cd ..
bash <(curl --proto <string> --tlsv1.2 -sSf <URL>
wget <URL> -O <directory>
sudo shutdown now
npm start
vim <file>
hostnamectl set-hostname <string>
ls
chmod +x <string>
sed -ri <string>
ls -ltrd <string>
du --max-depth=<number> -h <string>
ls
python3 <file>
ls
ls
ls
touch <string>
ls
grep <string>
cd <string>
python3 <file>
git push -f
cd <string>
sed <directory>
git push
pwd
cd <directory>
git status
sudo touch <directory>
ls
ls -la <directory>
less <string>
git init
cp <string>
ls
less
ls
ls
sudo xrandr -d <string> --output <string> --auto
vim <file>
git status
ls
sudo reboot
apt install <string>
curl <string>
ls
read -p <string>
git checkout <string>
tmux a
git branch
wget -q --show-progress <URL>
sudo pacman -S <string>
ls
sudo sed -i <directory>
cd ..
vi <file>
clear
mv <string>
git add .
cd <directory>
git add <string>
clear
sync
tail -f <string>
ls
ls
git pull origin master
more <file>
ls
top
cd
docker-compose up
git commit -m <string> --no-verify
sudo apt install <string>
git status
ls
gpg --list-secret-keys
else\
cd <string>
ls
git add <string>
git status
ssh dirlic@10.18.0.39 -p <number>
git submodule add <URL>
find . -empty -type <string> -print -delete
npm install file-loader --save-dev
apt-get clean
npm i <string>
lsblk -O
sudo apt-get update
export <string>
mv <string>
code
ls
sudo -E <string> -
git status
git remote update <string>
exit <number>
cd <string>
rsync -a <string>
cd <string>
vim <file>
apt-get install git -y
rm -Rf <string>
htop
git status
mv <string>
xargs -n1 <string>
wget <URL> --no-check-certificate <string>
source <string>
git remote add origin <URL>
vim <file>
cd ..
sudo nmcli con mod <string> <string>
rm -rf <string>
touch <file>
ls
git clone <URL>
exit
cd ..
ls
ls -lah
cp -r <directory>
vim <file>
npx create-react-app <string>
history -c
cd <directory>
cd <string>
curl <directory> --data <string>
ls -al
ls
systemctl --user <string> <file>
ls -l
cd ..
cd <directory>
vim <file>
sudo apt-get update
sudo rm -r <string>
cd <directory>
sudo su
vi <file>
git checkout <string>
sudo sed -i <directory> <file>
ls
sudo reboot
cd <string>
cat <string>
cd ..
ls
git status
rm -rf <string>
cd <string>
cd <directory>
less
source <string>
docker run --network <string> --rm <directory> -s <string>
ls -la
sudo systemctl start <string>
ls
git commit
cd ..
brew install <string>
sudo rm -rf <string>
ls
cd <string>
sed <directory>
cd <string>
chmod -R <string>
ls
cat <string>
ls
git add <string>
git filter-branch --force --index-filter <string> --prune-empty --tag-name-filter <string> -- --all <string> push --all --force
ls
cd <directory>
sudo kill <number>
cd <string>
cd <string>
cd <directory>
docker rmi <string>
time <string>
sudo su
git rebase --continue
code .
git status
ping <string>
fg
cd <directory>
clear
cd <string>
curl <string>
history
python3
cd <string>
tail -f <string>
ls
cd ..
curl -i -u <string>
cd <directory>
ls
grep -rE <string>
git add -A
kubectl get <string>
touch <file>
cd <string>
exit
clear
git init
git add .
sh <file>
sudo git commit
cd
git push
cd ..
git commit -m <string>
su
cd
ls
cd <string>
cd ..
ls
cd ..
<file> program
ls
sudo cmake --install <string>
fg
LANG=<string> rpm -qp --queryformat <string>
ls
ssh dirlic@10.18.0.39 -p <number>
apt-get -y <string> <string>
fg
nano <file>
sudo apt -y <string> <string>
rm -rf <string>
git add .
git commit -m <string>
htop
sleep <number>
dpkg-reconfigure
git push -u <string> main
cd -- <string>
chgrp -R <string>
man -k <string>
sudo chmod +x <string>
ls
vim <file>
docker-compose stop <string>
npm i beautify -gnpm <string>
ls
ps aux
vim <file>
git add <string>
ls
nano <file>
cat <string>
ls
pwd
rm -r <string>
man <string>
ls <directory> -al
ls
cut -f2
sudo apt-get install <string>
clear
cat <string>
cut -d=<string> <string>
git status
sudo sed -i <directory> <file>
python3 <file>
git add .
exit <number>
git push -u <string> bryan-guner
fg
git co HEAD
su
mkdir <string>
cp -r <directory>
cd ..
vim <file>
sudo rm -rf <string>
git pull
sudo yay <string>
perl <file>
wget <URL>
sudo sed -i <directory>
git push
ls -al
rm <string>
git status
sudo xcode-select --install
cp -a <string>
npm install
perl -v
cd <string>
cd ..
rm `find -name <file>
sudo apt-key add -
grep -r <string>
ls
bash <file>
cd <string>
git submodule add <URL>
cd <directory>
tr <string>
clear
tail -f <directory>
ls
ls -la
mv <string>
git clone <URL>
sudo pacman -S <string>
cd <string>
ls
npm config <string>
python3 -V
grep <string>
ls
cp <string>
rm -rf <string>
cd <string>
git checkout -b <string>
exit <number>
npm start
vim <file>
sudo make
git config <file> <file>
sudo -s -u <string> -H
xargs git add <string>
cd <string>
sudo rm -r <string>
git commit -m <string>
rm -rf <string>
chmod <string>
git push --force
cd <string>
cd <directory>
cat <string>
ls
cd ..
git diff
cd ..
git init
mkdir <string>
exit
git status
sudo apt purge nala --no-fix-broken
git status
python3 <file>
ls
cd <string>
ls
sed -i <string>
ls -l
apt-get update
node <file>
ls -l
ls
ssh-keygen -t <string> -b <number> -C <file>
grep <string>
git checkout
clear
vim <file>
cd <string>
git push -u <string> main
sh <file>
cd <directory>
cd <string>
cat <string>
tmux
grep -v <string>
cd -
find . -name <string> -exec <string> -c <string>
sudo rm -rf <directory> <directory>
grep -vE <string>
ls
ps -e
ls
cd
ls
cd <string>
git add <string>
git commit --amend
ls
grep <string>
ls
ls
cd <string>
ls
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
cd <string>
docker-compose up -d --build
ls
sudo pacman -S <string>
fg
sudo pacman -h
cd <directory>
done
clear
clear
cd <directory>
vi <file>
cd <directory>
sudo apt update
cd <string>
sudo vi <file>
bash <file>
ls
vi <file>
git pull origin
sudo pip install <string>
ls
vi <file>
ls
sudo tree -d <string>
git checkout <string>
git clone <URL>
cd
ls -la
source <file>
cd <string>
cd <string>
clear
git init
clear
xrandr --output <string> --left-of <string>
ls
curl -L <URL> -o <file>
sudo pacman -Se <string>
ls
git remote add origin <URL>
clear
git push -u <string> master
rm <string>
cd ..
rsync <directory>
sudo stop uwsgi
git checkout <string>
cat <string>
sudo luarocks install <string>
docker-compose up -d --build
ls
sudo systemctl status <string>
cat <string>
else\
cd ..
sudo systemctl start <string>
git remote rm <string>
ssh <string>
cd ..
wget <URL>
ls
sudo apt-get -y <string>
git stash --include-untracked
diff <file> <file>
cd <string>
cd -
docker-compose stop <string>
mkdir <string>
clear
clear
ls
brew install <string>
pwd
open <string>
git push origin main --force
git add <string>
xargs --no-run-if-empty <string> inspect
ls
clear
cd <string>
rm -rf <string>
cd <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cp <string>
ls
exit <number>
git remote add origin <URL>
rm -rf <string>
git add <string>
git commit -m <string>
ls
exit
ls
pwd
ls
sudo tee <directory>
grep -rl <string>
tail -f <directory>
true
ls
history
sed -i <directory>
git switch <string>
ls
sudo apt install <string>
fg
git commit -m <string>
ls
ls
ls
ls
shutdown
less <string>
sudo systemctl restart <file>
cd ..
git co master
cd <string>
wget <URL>
<directory> <string>
mkdir -p <string>
sudo swapon <directory>
git checkout master
sudo apt install <string>
cd <directory>
ls
python3 <file>
git push -u <string> main
sudo wgnord -h
cd..
export <string>
alias <string>
git commit -m <string>
npm audit fix -f
ls
ls
grep <string>
cd..
mkdir <string>
ls
cd <string>
code <string>
find -L <directory>
find <directory> -name <file> -type <string> -exec <string> -i <directory>
sudo service <string>
then\
git commit <file> -m <string>
git branch
rm <string>
git init
cd <directory>
rm -rf <string>
cat <string>
exit <number>
cd <string>
chmod +x <string>
ls
ls
exit
ls
rm <string>
cp <string>
ls
sudo python3 <file>
cd <string>
git pull
ls
cd <string>
git reflog expire --expire=<string> --all
mkdir -p <string>
more
git checkout -b <string>
pwd
cat <string>
head -n1
git commit -a
find . -empty -type <string> -print -delete
cd <string>
sudo raspi-config
sudo <directory> restart
cd <string>
mkdir -p <string>
rm <string>
ls
clear
cd <directory>
mv <string>
curl -L <URL>
exit
ls
cd <directory>
ls
killall -v -i <string>
ls
ls -l
npm run test
git clone <URL>
htop
cd
cp -v <string>
git pull
git log
exit
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git commit -m <string>
ls
vim <file>
ls
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
clear
sort
unzip <file>
exit <number>
ls++ -a
code .
git push -u <string> master -f
git branch --delete <string>
curl -G <directory>
clear
systemctl daemon-reload
ls
wget <URL>
rm -rf <string>
git status
docker images
exit <number>
sudo tail -f <directory>
grep <string>
ls projects
git clone --single-branch <URL>
git config --global <file> <string>
apt-get install -y <string>
git pull
cp <string>
ls
git status
vim <file>
wc -l
exit
docker cp <string>
ls
cd <string>
sudo mount <directory>
sudo pip install <string>
git commit -m <string>
curl <string>
vim <file>
ls
gpg --dearmor
grep <string>
mkdir <string>
mkdir <string>
cd <directory>
exit
source <file>
cd <string>
git init
ls
sudo pacman -S <string>
vim <file>
cp -f <string>
git config --global <file>
mkdir <string>
head <filename> # outputs the first lines of file (default: <number> lines)
git stash
vim <file>
sudo apt-get update
sudo apt update -y
ls
cd ..
rm <string>
ip a l
cd
ls -a
git remote add origin <URL>
ls
find . -name <string> -type <string> -prune -exec <string> -rf <string>
ls
reboot
sudo zypper install <string>
cd <string>
npm start
vim <file>
sudo -u <string> psql
rm -r <string>
cd <string>
git config --global --list
sudo nano <directory>
rm -r <string>
npm install -g <string>
cd
vi <file>
ls
<directory> <string>
cd ..
cd <string>
ls
git commit -m <string>
ls
ls
ls
pwd
grep -oE <string>
cd <string>
ls
rm -f <string>
ls
cd ..
git add <string>
curl -sSL <URL>
ls
git init
ls
sudo adduser <string>
ls
cd ..
cd ..
vim <file>
ls
sudo chmod +x <string>
git co PTS-578_redirects_not_updating_automatically
ls
history -c
cd <directory>
sudo usermod -a -G <string> <string>
helm <string>
scp <string>
git clone <URL>
ls
zgrep -i -E -o --no-filename <string>
ssh <string>
cd <string>
tail -n <string>
ls
mkdir <string>
docker ps
sudo sed -i <directory> <file>
export <string>
git commit
ping <string>
fg
cd
clear
cd
exit <number>
cat <string>
exit
sudo service nginx reload
curl -fsSL <URL>
vi <file>
grep -f <string>
docker-machine <string>
fg
exit
exit <number>
git add <string>
vim <file>
sudo sed -i <directory> <file>
git init
cd <string>
exit
sed
code .
cd <directory>
git clone <URL>
npm run coverage
sudo chmod +x <string>
wget <URL>
ls
bash <file>
cd ..
git stash
sudo mv <string>
alias
ls -lart
git pull origin master
ls
cd -
bash
sudo <directory> <string>
clear
curl -o- <URL>
git pull
npm run coverage
ls
cd <directory>
ls
apt search <string>
source <string>
git branch -M <string>
vim <file>
git branch -a
cd <string>
grep <string>
docker-compose logs
vim <file>
tr -d <string>
rm -r <string>
git remote set-url --add <string>
cd ..
vim <file>
chmod +x <string>
cd ..
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
cd <string>
make clean
sudo sed -i <directory> <file>
sort -k <number> -n
git commit
git pull
read -rp <string> <string>
vim <file>
ls -a
sudo -u <string> psql
ls
sudo sed -i <directory> <file>
cd <string>
fg
mkdir <string>
sudo docker kill corrade
ls
vim <file>
sudo apt update
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ssh <string>
ls
less <string>
git push -u <string> master
cd <directory>
git commit -m <string>
sudo node -v
rm -f <string>
git clone <URL>
cd <string>
cd <string>
sudo apt -y <string>
chsh -s <directory>
exit <number>
git commit -v -a -m <string>
cd <directory>
cd <string>
rm <string>
ps -aux
python3 <file>
git --version
ls
su root
cat <string>
shutdown
cd <string>
git stash pop
ls
sudo apt install <string>
npm i <string>
cd ..
vi <file>
systemctl status <string>
ls
clear
rm -rf <string>
apt-get -f -y <string> <string>
clear
git push -u <string> master
npm run test
sed -i <directory>
ls
cd <string>
ls
sudo apt-get remove <string>
git commit -m <string>
cd <string>
nano <file>
ls
tmux kill-session
exit <number>
cd ..
help <string>
grep <string>
ls
wget <URL>
sudo <file> -v -w <string> -o <string>
git add -A
ls -l
ls
print <string>
then
exit
git add .
ls
git push
git commit -m <string>
git add .
ls
wget -O <file>
git status
cd ..
ls
php -v
sudo nano <string>
git push -f <string> <string>
sed <directory>
rm -f <string>
git status
cd ..
clear
git push origin master
git stash pop
git push
find . -type <string> -exec <string> -i <directory>
git config --global <file> <file>
cd
more <file>
cd <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
vim <file>
fg
git branch
grep <string>
uniq -f1
git commit -m <string>
git add <string>
exit
ls
ssh <string>
git pull origin master
ls
rm -r <string>
cd ..
curl -sH <string> <directory>
git branch
cd <string>
cd <string>
vim <file>
cd ..
done
vi <file>
sudo apt upgrade
sed <directory>
git status
cd <string>
cd ..
ls -lh
sudo sed -i <directory>
ls
cd ..
git commit
grep <string>
read -p <string>
code <string>
ls
find . -type <string> -exec <string> <directory> {} +
git commit -m <string>
ls
ls
git add .
grep -i <string>
sudo sed -i <directory> <file>
git clone <URL>
ls
cd <string>
grep <string>
clear
vim <file>
python3 <file>
git pull origin main --allow-unrelated-histories
git add .
git add <string>
read -p <string>
awk -F[\
fg
ls
nano <file>
cd <directory>
mkdir <string>
ls
pwd
ls
fg
free -h
ls
cp <string>
git push origin master
wget -O <file>
grep -r <string>
node <file>
git commit --amend --reset-author
git commit -m <string> --author <string>
git push
git commit -m <string>
git push
git status
git pull
update-alternatives --list
clear
vim <file>
do\
ssh dirlic@10.18.0.39 -p <number>
git log
sudo add-apt-repository <string>
mv <string>
ls
ls
ls
open <string>
curl --fail -s <string>
wc -l
rm <string>
cd
read -r <string>
curl <string>
ls
ls
fg
pwd
done
clear
clear
cd ..
cd <string>
git add .
ls -la
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
ls
rm -rf <string>
vim <file>
npm start
fg
exit
git stash pop
ls
sudo apt update
docker images
exit
tmux send-keys -t <string>
finger <user> # displays information about user
ls
git status
cd <string>
git commit -m <string>
ls -ls
ls
python3 --version
ssh <string>
read -p <string>
git push
ls
killall -SIGUSR1 <string>
cat --color=<string> <file>
sleep <number>
read -r <string>
nano
cd
cd <directory>
vi <file>
ls -l
sudo rsync -av --progress <directory>
vi <file>
clear
ls
cd ..
python3 <file>
cd ..
sudo make clean install
ls
ls
mv <string>
ls
cat <string>
cd <directory>
ls
ls
git init
sudo rm -r <string>
npx tsc --noEmit
touch <string>
ls
vim <file>
mv <string>
cut -d <directory> -f <number>
cd <directory>
ls -la
cd ..
cd <string>
ls
git push
ls -al
cd <string>
ls
ssh <string>
python3 <file>
docker rmi -f <string>
vi <file>
sudo su -
sudo xbps-instalL -s
dpkg --get-selections
strings <file>
git clone <URL>
git add <string>
grep <string>
cd <string>
clear
ls
cd <string>
sudo apt-get -y <string> <string>
sudo git remote <string>
cd <string>
git status
vi <file>
sudo stop uwsgi
git fetch
ls
ls
npm install --global <string>
ls
sudo aptitude <string>
grep <string>
git push -u <string> master -f
git status
git pull
ls
cat <string>
ls
ls
vi <file>
grep <string>
time go run <file>
tail -f <string>
git init
grep <string>
cat <string>
rm -rf <string>
cd ..
cd <directory>
pulseaudio
sudo mkdir <string>
grep -H -R -o -n <string>
ls
git status
fg
code .
cd -
cd <directory>
cd <string>
cd ..
pwd
mkdir <string>
ls -l
systemctl restart <string>
git gc --aggressive
read -r -p <string>
git clone <URL>
vim <file>
git status
cd ..
ls -a
vim <file>
cd <directory>
vim <file>
clear
chmod +x <string>
sudo sed -i <directory> <file>
curl -sL <URL>
npm run dev
cd <string>
cd <string>
exit
ls
cd ..
pwd
clear
exit <number>
ls
rmdir <string>
clear
vim <file>
git remote add origin <URL>
sudo apt-get install <string>
find . -name <file>
cd <directory>
sudo sed -i <directory>
ls
git commit -m <string>
git merge <string>
fg
ls
sudo install <string>
cd <directory>
git config --global <file> <string>
mkdir <string>
sh <file>
systemctl list-units
sed <directory>
cat <string>
cp <string>
git init
ls
find <directory> \( -iname <string> -or -iname <string>
sudo docker run hello-world
ls
exit
curl -LO <string>
sudo apt install <string>
sudo apt-get install -y <string>
ls -ltr
ssh <string>
ls
git checkout <string>
ls
cd <string>
ls
cd <string>
git push -u <string> master
ls ..
git commit -m <string>
git fetch
npm list
grep -v <string>
vi <file>
git checkout <directory> -f
ls
git push
chmod <number> <string>
sudo sed -i <directory> <file>
cat
git add <string>
git commit -m <string>
mv <string>
exit
grep <string>
cd <string>
cd <directory>
python3 <file>
git clone <URL>
ls -alF
fg
cd ..
vim
ls
ls -lah
ls
npm install -g <string>
alias <string>
vi <file>
ls
git branch
cd ..
cd <string>
su
brew services <string>
ls
npm run register
cd
find . -empty -type <string> -print -delete
ls
read -r <string>
fg
git add -A
top
sudo sgdisk -d <number>
unset <string>
ls
ls
clear
clear
ls
ps -aux
ls
htop
ls
vim <file>
git branch
exit
cd ..
grep -i <string> >files
git checkout master
exit <number>
chmod +x <string>
cd ..
sudo wgnord <string>
cd ..
systemctl enable <string>
ls
git fetch
npm run develop
cd
cd <string>
npm audit fix -f
find <directory> -type <string> -execdir <string>
tar xvzf <file>
grep -i <string>
ls
cd ..
rm -rf <string>
ls
clear
cd <string>
sudo iptables -L <string> -n --line-numbers -t <string>
clear
git
git remote add origin <URL>
npm install <string>
cd <string>
cd <directory>
mv <string>
ls
git pull
bash
time <string>
ls
ls
ls
npm install -g <string>
cd <directory>
ps -a <string> selects all processes with a tty except session leaders
cd <string>
docker pull <string>
cd ..
git clone <URL>
time
scp <string>
ls
ls
ls++ -a
clear
ls
git status
ls
git commit -m <string>
cd <directory>
mkdir <string>
ls
sudo pip install <string>
more <file>
sleep <number>
rm -rf <string>
cd <string>
curl -L <URL>
ls
cd <string>
man <string>
cd ..
cd ..
ls
ls
nano <string>
sudo poweroff
sudo service <string>
git add .
wget <URL> -O <file>
find <directory> -type <string> -name <string>
pwd
git status
ls -latr <directory>
git add .
sort
eval <string>
ls
git fetch
git rebase <directory>
cd <string>
rm <string>
ls -la
python3 <file>
sudo apt update\
vim <file>
cd <string>
ls
ssh-keygen -t <string>
patch -p1 <string> <file>
pwd
python3 <file>
ls
podman build -t <string>
ls
git branch
python3 <file>
git adog
exit
git commit
sudo <directory> restart
read -rp <string> <string>
ls
ls -alrt <string>
ssh <string>
git push
rm -r <string>
git commit -m <string>
git pull
source <file>
ps -a <string> selects all processes with a tty except session leaders
git add <string>
cd <directory>
git commit -m <string>
cd <directory>
ls
clear
cd <string>
less <string>
cd <directory>
cat <string>
git commit -m <string>
exit
fg
grep <string>
git add <string>
cd <string>
sudo apt-get update
chmod <string>
cd <string>
cut
ls
ls
vi <file>
grep -v <string>
sudo make install
cd <string>
sudo nano <string>
source <directory>
find . -size <string> -a -print -a -exec <string> -f <string> \
grep -o <string>
ls
ls
exit <number>
sudo chroot <string>
rm <string>
cd <string>
aptitude install <string>
date
git add .
clear
ls
man <string>
else\
sudo rpm -qpR <file>
ls
chmod
ls
sleep <string>
ls -lAF
ls
clear
sed <directory>
cd
vim <file>
source <directory>
grep <string>
dpkg --search <directory>
ls
pwd
clear
cd <string>
git push
ssh -T <file>
ls
docker --version
cd..
ls
docker-compose logs
wc
pwd
sudo apt install -y <string>
curl -fsSL <URL>
git branch -a
cd <directory>
fg
rm <string>
grep <string>
npm -v
git clone <URL>
clear
git pull origin main
sudo cat <string>
cd -
sudo rm -f <directory>
bash <file>
sudo make install
cd <directory>
ls
git config --global <file> <file>
grep <string>
vi <file>
git add .
git restore <file>
source <directory>
source <directory>
ls
cd <string>
git push -u <string> master
fg
cd <string>
ls
cd <directory>
git add .
cd <directory>
sudo uftrace --force <file>
git add <string>
fg
wget -q -O - <URL>
cd
ls
sudo aptitude --fix-broken <string>
ls -la <directory>
ls
kill -9 <number>
ls
ls
touch <string>
df
git init
sudo sed -i <directory>
vim <file>
ls
git add <string>
git status
rm -r <string>
mv <string>
find <directory> -name <file> -type <string> -exec <string> <number> <string>
cd ..
cd <string>
cd <string>
cat <string>
sudo apt-get update
docker push
ls
kill -9 <number>
cd <directory>
exit <number>
git add -A
git pull
npm run bench -- -c <file> -n <file>
head -n <string>
sudo nano <directory>
rm -rf <string>
ls
exit <number>
mv <string>
wc -l
cd <directory>
ssh -i <string> remote_user@remote_host
sudo rm -rf <string>
ls
git clone <URL>
cd <string>
clear
cd <directory>
git push origin main
git add <string>
cd <string>
sudo reboot
clear
ps -u <string> # lists your processes
cd..
ls -la <directory>
sudo useradd kafka -m
ls
sudo apt install <string>
fg
ls
ls
cd <string>
rm -r <string>
kubectl --namespace <string> <string>
sudo chown -r <string>
cd ..
git push origin
cd <directory>
cd <directory>
vi <file>
git pull
cd <string>
git config --all
sh
wc -l
ls
pwd
set -ex
ls -la
cd <string>
sed -Ei <directory>
vi <file>
ls
ls
sudo apt-cache search <string>
cd <string>
fg
less
cd <directory>
sudo passwd -S <string>
ls
sudo supervisorctl <string>
fg
cd <string>
ls
exit <number>
export <string>
head -n20 <file>
ls
cd <string>
killall <processname> # kill all processes with the name
mkdir -p <string>
cd <string>
grep <string>
read -r -p <string>
apt-get install <string>
cd ..
clear
cd <string>
ls
ls
git checkout joshua_buchsbaum --force
code .
git merge <string>
vi <file>
sudo apt-get install <string>
sudo service nginx reload
mv <string>
ls _build
rm -f <string>
cd <string>
cd <directory>
cd <string>
sudo modprobe -a <string>
bazel build -c <string> --config=<string> --genrule_strategy=<string> --spawn_strategy=<string> <directory>
mount -t <string> overlay -o <string>
grep <string>
sudo apt-get install -y <string>
sudo dpkg -l
cat <string>
sudo sh -c <string>
apt-get autoremove -y
grep <string>
cd ..
git status
npm start
python3 <file>
git config --globel <file>
git add .
mv <string>
rm <string>
curl <string>
git push -u <string> main
git stash -h
git commit -m <string>
sudo swapoff
git add .
find <directory> -type <string> -name <string>
cd <string>
man <string>
cd <string>
cd <string>
git push
ls
cd <string>
sudo rm -rf <string>
ls -latr
sudo sed -i <directory> <file>
ls
open .
git rebase -i <string>
rm -f <string>
mkdir -p <string>
clear
sleep <string>
sudo python3 <file>
git commit -m <string>
rm -rf <string>
sudo apt install -y <string>
kubectl apply -f <string>
helm <string>
ls
cd
npm run pretty <string>
git pull
sudo npm install -g <string>
ls
cd <string>
ls
git push
ls
ls
find . -empty -type <string> -print -delete
curl -L <URL> --output <string>
cd <string>
sleep <string>
curl -H <string>
git status
ls
cp -r <directory>
cd <directory>
clear
su
ls
ss
clear
sudo usermod -aG <string> <string>
cd ..
ls
cd <string>
python3
ssh <string>
ls
git add .
cd <string>
source <directory>
ls
cd <directory>
killall <string>
docker rm <string>
cd <directory>
find <directory> -name <file> -type <string> -a -xtype <string> -printf <string>
npm install
git push origin <string>
ls
sudo ufw allow <string>
tmux set-option -g <string>
git commit -m <string>
cp <string>
cd <string>
exit
clear
rm -r <string>
fg
git branch main
ls
cp <string>
git init
npm start
sed <directory>
reset
sudo chown <string>
mkdir <string>
su mv <file> <directory>
node <file>
apt list --upgradable
clear
npm run start
git status
rm <string>
ls
hg churn --diffstat -r <string> --aliases <file>
vi <file>
sed <directory>
cd <string>
mv <string>
rm -f <string>
git add <string>
sh <file>
cp <string>
source <directory>
code .
read -s -p <string>
mkdir <string>
exit <number>
exit
ls
git commit -a -m <string>
cd <string>
clear
cd <string>
top
exit
npm cache clean -f
sudo reboot
ls
ls
git add <string>
sudo add-apt-repository <directory>
cd <string>
cd <string>
sudo rm -rf <string>
sudo poweroff
cd <string>
ls
git push
ssh <string>
git checkout -- <string>
git clone <URL>
sudo npm i -g <string>
sudo xbps-install <string>
git commit -m <string>
git add -v --dry-run <string>
rm -fr -- <string>
grep -n <string>
mv <string>
clear
cd <directory>
rm -f <string>
cp <string>
rm -r <string>
git reset <string>
cd
brew install <string>
read -r <string>
cd <string>
vi <file>
ls
clear
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git push
clear
vim <file>
ls -lah
apt
sudo apt --fix-broken <string>
ls
sudo sed -i <directory> <file>
sort -g
ls
cd <string>
source <file>
nano <file>
shutdown
ls
reboot
sudo apt update
chmod -x <file>
git add <string>
ls
rsync <directory>
ls
mv --help
docker build --tag <string> -f <string>
git init
git reset HEAD^
git checkout -b <string>
cd <string>
clear
sed <directory>
sudo rm -R <string>
cd <string>
rm <string>
ls -la
date
sudo chmod -x <file>
cd <directory>
git init
sudo pip install <string>
ls
nano <file>
ls
vim <file>
vim <file>
sudo sed -i <directory> <file>
git clone <URL>
git push origin master
ls -ltr
ls
sudo fail2ban-client <string>
history -a
git diff <string>
cd ..
cat <string>
ls
hexdump -b <file>
ls
ls
git status
git checkout <string>
ls
grep -E <string>
cd <directory>
ls -lht
ls++ -a
vi <file>
ls
cd ..
<directory> <string>
pwd
rm -rf <string>
vi <file>
cd ..
nano <file>
ls
cp -r <directory>
grep -i <string>
cd
exit
wget <URL> -O <file>
exit
git fetch
code <string>
cp -r <directory>
vi <file>
git push
xrandr
ls -lAF
vim <file>
<directory> -m <file>
sudo apt-get install -y <string>
sudo aptitude purge <string>
ssh -p <string>
vim <file>
rm -rf <string>
vim <file>
npm install
ls
clear
cat <string>
cd <string>
cd ..
clear
git config --global <file> <file>
ls
ls
bash
ls
ls
grep -i <string> >files
ls
ls
find <directory> -name <string>
clear
npm -v
read <string>
ls
ls
cd <string>
yarn <string>
docker compose <string>
reboot
exit <number>
cd <directory>
ln -s <string>
git remote update <string>
clear
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
cat <string>
reboot
sudo apt show <string>
sudo apt install <string>
curl -G <directory>
cd ..
ls
cd <directory>
git push -u <string> master
rm <string>
git remote add origin <URL>
ssh dirlic@10.18.0.39 -p <number>
ls
git fetch
cd ..
more <file>
ls
cd <string>
vi <file>
clear
cd <string>
curl <string>
git add .
sudo vi <directory>
ls
sudo apt install <string>
pwd
vim <file>
sudo rm -rf <string>
sed -i <directory>
clear
sudo apt update
read -s -n <number>
vi <file>
read -s -n <number>
ls
ls
rm -rf <string>
pkill <string>
vi <file>
<directory> <directory>
ls
yarn <string>
ls -lahR
exit
cd <string>
sudo apt update
grep -e <string>
clear
vim <file>
ls
cd <string>
git add -A
vim <file>
cd <string>
ls
sudo mv <string>
clear
vim <file>
bash <file>
pwd
cd <string>
cd <string>
sed -i <string>
ping <string>
clear
sleep <number>
ls
clear
ls
exit
git tag <string>
vi <file>
ls
sudo add-apt-repository --remove <directory>
sudo pacman -S <string>
sudo pacman -S <string>
cd <directory>
wget <URL> -O <file>
git init
git pull origin main
python3 <file>
exit
wget <URL>
sudo apt -y <string>
unset color_prompt force_color_prompt
ls
ls
sudo chmod -R <number> <string>
mkdir <string>
npm run test
git co master
ls
trap <string>
vi <file>
cd <string>
ls
ls
git push
ls
cd <string>
fg
nano <file>
git status
grep <string>
mkdir <string>
find <directory> -type <string> -execdir <string>
cd <directory>
ls
grep -x <string>
cd ..
ls
vi <file>
ssh dirlic@10.18.0.39 -p <number>
npm install <string>
exit
ls
cat <string>
mkdir
source <directory>
vim <file>
npm start
cd <string>
cd <directory>
cat <string>
exit
python3 <file>
sh <file>
git add .
tail -f <directory>
ls
ls
ls
fg
uniq -f1
grep <string>
ls
cd ..
ls
fg
sudo dpkg --remove -force --force-remove-reinstreq <string>
clear
bazel <string>
cd ..
exit <number>
tail -f <string>
git status
cd <directory>
cd <directory>
open <string>
git clone <URL>
sudo systemctl restart <string>
git add .
chmod +x <string>
fg
chmod <number> <string>
mv <string>
vim <file>
cat <string>
cd <string>
ls
cd <string>
vi <file>
cd <directory>
grep <string>
npm start
git commit
sudo pip install <string>
ls
sudo apt-get upgrade --fix-missing
wc passwd
ls
screen -r <string>
cd ..
sed -r <directory>
git status
mv <string>
cd
git log
git branch -m <string>
jq <string>
sudo ufw status
wget <URL> -O <file>
ls
git init
xargs grep <string>
ls
cp <string>
git commit -m <string>
mv <string>
sudo apt-get install <string>
git add <string>
which <string>
mkdir -p <string>
git remote remove origin
ls -l
git config --list
ls
cat <string>
set <string>
git add .
git pull
git commit -m <string>
clear
cd ..
tmux
ip a
cd <string>
exit
vim <file>
cd <string>
git remote add origin <URL>
source <string>
cd <string>
vi <file>
cd <directory>
rm -rf <string>
ls
ls
cd <string>
ls
cd <directory>
cd <directory>
ls -l -a
sudo apt -y <string>
bash
ls -l
ls
cd <string>
cd ..
grep -v <string>
ls
grep -wr <string>
ls -l
sudo node <file>
git add .
cd <directory>
cd
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
sudo dnf install -y <string> --setopt <string>
clear
cat <string>
ls
git init
ls
then\
cd ..
vim <file>
python3 <file>
top
ls
git status
git status
git commit -m <string>
jq <string>
nano <file>
sed -i <string>
ls
ls
ls
vi <file>
read -r -p <string>
vim
mv <string>
ls
exit <number>
cd ..
cd <directory>
sudo zypper install <string>
<directory> <string>
xargs -I{} <string> -sh <string>
git status
git add <string>
cd <string>
vim <file>
systemctl status <string>
clear
rm -rf <string>
read -p <string>
ls
sudo apt-get install -y <string>
ls
cd <string>
cd <directory>
ls
ls
export <string>
sudo apt install <string>
grep -r <string>
python3 <file> --model-path <file> --conf <string> --img-size <number>
ping <file>
npx shadcn-ui@latest add <string>
exit
cd <string>
mkdir <string>
ls
cd <string>
sudo apt-get remove <string>
git checkout master
mkdir <string>
cd <string>
chmod <number> <string>
sudo curl -L <URL> -o <directory>
diff <file> <file>
git status
cd <string>
cd ..
chmod +x <string>
clear
cd ..
cd
git init
cd ..
cd <directory>
cd
git clone <URL>
df -h
git init
npm install -g <string>
fg
ls -a
rm <string>
ls
history -r
docker pull
vi <file>
sudo su -
cd <string>
open <string>
git remote
git add .
npm install
sudo apt-get update
ls
ln -s <string>
cat <string>
wget <URL>
systemctl status <string>
sudo systemctl disable <file>
clear
git clone <URL>
git status
htop
scp <string>
ls
ssh <string>
rm <string>
cd <string>
git submodule add <URL>
ls
ls
vim <file>
git add .
cd ..
export <string>
wget <URL>
cat <string>
exit <number>
vim <file>
systemctl status <string>
git describe --long --tags
cp <string>
fg
cd ..
sudo pacman -Rsn <string>
rm -rf <string>
cd ..
vim <file>
git add .
cd <string>
mkdir <string>
export <string>
ls
git add .
vi <file>
vi <file>
sleep <number>
cd <string>
vi <file>
read -r -p <string>
ls
sudo groupadd <string>
cp <string>
mkdir -p <string>
sudo do-release-upgrade
docker logs <string>
mv <string>
exit
git status
ls
ls
git add .
ls
bash <file>
cd ..
cd ..
grep <string>
tail -f <string>
cd <directory>
git log --format=<string> --date=<string> <string>
less <string>
top
tmux set-option -g <string>
find . -empty -type <string> -print -delete
su - <string>
ls
which <string>
cd <directory>
rm <string>
sudo sysctl -w <string>
update-alternatives <string>
cd <string>
ls
grep -ir --color=<string> <string>
mv <string>
git pull
cd <string>
cd <string>
read -p <string>
git commit -m <string> --no-verify
vim <file>
cd <string>
ls
ls
sort -r -h
find <directory> -exec <string> -m <string>
exit
cp <string>
ps aux
mv <string>
cd <string>
cd <string>
<file> <file>
git pull
history
sudo virsh -c <directory> <string>
ls
pwd
docker ps
apt install <string>
git stash apply <number>
mkdir -p <string>
rm <string>
fg
vim
code
ls -h
chmod <string>
clear
rm <string>
mv <string>
git commit -m <string>
ls
sudo yum install -y <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
rm <string>
ls
git commit -m <string>
ls
ls
killall <string>
fg
source <string>
unset color_prompt force_color_prompt
npm run test
ls
clear
chmod <number> <string>
clear
sleep <string>
tar xzf <string>
exit
vim <file>
vim <file>
sudo apt-get remove -y <string>
cat <string>
wget <URL>
clear
cat <string>
vim
cd ..
ls
ls
grep <string>
cd <string>
ls
docker exec -it <string> bash
sudo systemctl start <string>
git commit -m <string>
cd <string>
ip a l
clear
vi <file>
sudo apt-get install <string>
touch <file>
cd <string>
git add <string>
rm -rf <string>
unzip <file>
ls
then\
git filter-repo --force --commit-callback <string>
cd ..
find . -name <string> -delete <string>
fg
vim <file>
read -p <string>
git commit -m <string>
vi <file>
grep -v <string>
ls
cd <string>
git grep -n --break -I --color=<string> -E <string>
clear
ls
git revert <string>
sudo apt update
open <string>
cd <string>
git init
sleep <number>
cd <string>
cd <string>
curl -s <string>
ls -lah
sudo docker rm corrade
cd <string>
npm uninstall -g <string>
npm run dev
sudo make install
cd <string>
reboot
git push origin master
ls
cd ..
sudo nvim <directory>
ps -eal
cd ..
vim <file>
cd <string>
sudo ifconfig --help <string>
cd <string>
cd ..
source <string>
less
ls
git commit -m <string>
git status
sudo apt-get update
sudo chmod a+wr <directory> -R
cd
sed <directory>
ls
ls
ls
cp <string>
git remote add origin <URL>
clear
sudo udevadm trigger
chmod -v <string>
clear
clear
ls
ls
git
ls
cp <string>
ls
exit <number>
screen -r
rm <string>
python3 -m <string>
vim <file>
cd <string>
touch <file>
cd <string>
ls
sudo apt update
print <string>
cd
gzip --best --force <file>
scp <string>
sudo ldconfig
cd ..
ls
service apache2 reload
sudo ln -s <directory>
cp <string>
capsctrl <directory> & disown
sudo -E <string> <string>
ls
mv -f <string>
wget -q <URL> -O -
sudo bash
read <string>
sudo apt-get update
sudo ln -s <directory>
find . -empty -type <string> -print -delete
done
git add <string>
scp <string>
git push
cd <string>
git status
ls -al
cd ..
less
type <string>
ls
done
git log
cd ..
git pull
ls -la
rm <string>
fg
read -r <string>
ls -F
ls
tail -n <string>
ls -l
git config --global <file>
chmod +x <string>
python3 <file>
history -a
cd ..
git push origin main
ls
ls
cd <directory>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd <directory>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE <string>
cp -v <string> <directory>
cd <string>
cd <directory>
cd
git add <string>
sudo nano <directory>
ls -lrt
sudo yum install <string>
cd <directory>
tail
cd ..
mkdir <string>
docker stop boost
ps auxf
tail -f <string>
rm -rf -- <string>
rm <string>
sudo cp -v <directory>
vim <file>
sudo apt install <string>
ls
mv <string>
mvn clean install -Dmaven.compiler.showDeprecation -DskipTests
git config --global <file> <file>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
npm i -g <string>
git st
sudo curl <URL> -o <directory>
sudo firewall-cmd --zone=<string> --add-port=<directory> --permanent
git status
docker-compose logs
cd ..
rm -f <string>
vi <file>
node <file>
cp <string>
clear
git push heroku master
tac
git add .
mkdir <string>
vi <file>
sudo python <file> -cascade==<file> <number>
read -r <string>
git add <string>
grep <string>
exit <number>
python3 <file>
clear
ls
sort -t: -k <string>
cd <string>
clear
mkdir -p <string>
cd ..
ip
mv <string>
ls
cd ..
exit
ls
find . -empty -type <string> -print -deletefind <string> -empty -type <string> -print -delete
ls -l
cd <directory>
git config <file> <file>
git fetch origin\
vim <file>
sudo git add -A
ls -l
cd ..
cd <directory>
sudo sed -i <directory>
vi <file>
cd <project_folder> ------- <string>
vim <file>
apt list --upgradable
kill -9 <number>
git revert <string>
service apache2 restart
python3 <file>
sudo apt update
NF
git clone <URL>
ls
cd <directory>
then\
python3 <file>
sort -nr
ls
cd <string>
git status
cd <string>
ls
ls
git add .
exit
git status
curl -sL <URL>
sudo chgrp <string>
cut -f <string> -d <string>
cd <string>
uname -a
cd <string>
sudo sed -i <directory> <file>
exit
vi <file>
sudo dpkg -l
cd <directory>
wc -l
docker exec -it <string> bash
sudo make clean install
ls
ls
sudo apt-get update
curl <URL> -o <file>
unzip <file>
docker-compose
wget <URL> -O <directory>
git push
npm install <directory> --force
python3 <file>
docker-compose up -d --build
git pull
wget <URL> -O <directory>
cat <string>
sudo nano <file>
service apache2 restart
grep -r <string>
exit
else <string>
cd ..
cd <string>
ls
vi <file>
find . -name <file>
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
history
clear
ls
exit <number>
git checkout <string>
cd <string>
ls -lh
cd <string>
ls
clear
cd <string>
git status
history
cd <string>
curl -fsSL <URL>
vim
du -h
rake <string>
ls
ls
sudo systemctl daemon-reload
git init
cd <string>
git clone <URL>
cd <directory>
sleep <number>
cd <string>
ls
cut -d <string> -f <number>
vim
cd
cd
sudo apt install <string>
grep -o <string>
vim <file>
vim <file>
git stauts
cd <string>
mv <string>
git init
python <file> runserver 0.0.0.0:2016
du -sh
git add --all
uname -r
vi <file>
vim
time <string>
git config --global <file> <string>
tar -cf <file>
cp -r <directory>
sudo rm -rf <string>
git status
ls
cd
vim <file>
xargs docker rm
ls
cd ..
ls
tmux ls
<directory> --version
cp <string>
ls -l
ls -l
cd <string>
cp <string>
rm <string>
git flow <string>
python3 <file>
git config --global <file> <string>
clear
cd <string>
sudo systemctl restart <string>
ls -lrt
mv <string>
vim <file>
ls
sudo sed -i <directory>
wc -l
sudo ln -s <directory>
cd <string>
ls -al
bash
sudo apt-get update
clear
cd <string>
ls
sort -u <string>
git remote -v
cd <directory>
ls
sudo apt-get install <string>
git adog
rm -fr -- <string>
ls
cp -r <directory>
cd <string>
cd <string>
ls
cd <string>
git remote add origin <URL>
cp -v -t <directory>
ls -la
source <string>
clear
git add .
fg
ls
git clone <URL>
unset color_prompt force_color_prompt
vim <file>
git clone <URL>
mkdir <string>
git rebase <directory>
cd <directory>
ls
sudo apt install <string>
sudo nano <string>
cd ..
sed -i <string>
chmod -x
cd <string>
cd <string>
history
cd <string>
npm start
ls
ls
fg
git push
ls
sudo apt install <string>
ls
cd <directory>
cd
cd <directory>
git add .
vim <file>
find . -empty -type <string> -print -delete
screen -r <string>
rm <string>
sh
exit <number>
git clone
cd <directory>
cp <string>
cd <string>
find . -name <file> -type <string> -print -delete
git pull
du -shc <directory>
vim <file>
git reset HEAD^
vim <file>
cd <string>
sudo apt install ubuntu-restricted-extras -y
git clone <URL>
sudo vi <directory>
cp <string>
cd
clear
git merge <string>
python3 <file>
export <string>
ls
ls
head -10
sudo vim <file>
ls
netcat <string>
ls
find . -empty -type <string> -print -delete
grep <string>
export -f <string>
ls
exit
ls
tmux kill-session -t <string>
cp -r <directory>
unset <string>
vi <file>
cd <directory>
cd ..
git add .
cd <string>
git status
rm <string>
sudo apt-get install <string>
fg
export <string>
cd -
cd
sed -n <string>
git checkout <string>
python3 <file>
ls -lah
open <string>
ls
nano <file>
npx tailwindcss init --full
grep <string>
sudo su
cd ..
ssh <string>
ls
git status
ls
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
curl <URL> -o <file>
find . -name <file> -exec <string>
grep -iE <string>
sudo nmcli con mod <string> <string>
ls -la
fg
cd <string>
rmdir <string>
git add --all
sed <directory>
ls
cd <directory>
git commit -m <string>
cd <directory>
sudo nvim
git config --global <file>
git push
source <string>
ls -latr
git add <string>
systemctl status <string>
git bisect bad
sudo apt install -y <string>
git remote add upstream <string>
cd <string>
awk <string>
ln -s <string>
sudo nvpmodel -q
cd <string>
cd <string>
scp <string>
cd <directory>
mv <string>
eval <string>
fg
vim <file>
ls
clear
git add -A
sudo apt install flatpak plasma-discover-backend-flatpak -y
ps
git clone <URL> -b <string>
sudo ln -s <directory>
sudo sed -i <directory> <file>
git checkout <string>
find . -type <string> -exec <string> -i <directory>
clear
ls
snap
sudo mv <file>
rm <string>
git add <string>
ls
sudo wget <URL>
sudo sed -i <directory> <file>
ls
npm create <string>
ls
cd <string>
clear
git revert <string>
exit
find . -type <string> -name <string>
mkdir <string>
less
git push
cd <string>
ls
ls
npm start
ls -l
curl <string>
vim <file>
shutdown -h <string>
cat <string>
nano <string>
exit
node <file>
chmod u+x <string>
cd <string>
ls
ls
tail -n <string>
find . -type <string> -name <string>
git status
history
cd ..
ls
cd <string>
git add .
npm install <string>
docker-compose up -d --build
git add .
clear
sudo shutdown -r
grep -E <string>
ls
rm <string>
docker tag <string>
ls
sudo sed -i <directory> <file>
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd <string>
clear
vim <file>
exit <number>
df -k
git push origin master
git add <string>
ls
ls
clear
git status
npm audit fix
vim <file>
cd <string>
ls
history
ls
exit
git config --list
git remote add origin <URL>
ls
rm <string>
git commit
cd <directory>
git status
bash
ls -l
rm -rf <string>
docker run <string>
ls -l
ls
git branch
python3 <file>
git add .
exit
ls
sh
vim <file>
git commit -am <string>
ls
read <string>
rm -Rf <string>
exit
ls
xargs grep <string>
ls
clear
exit
cd <string>
sudo ufw <string>
npm run bench -- -c <file> -n <file>
cd <directory>
grep -i <string> >files
ln -sv <string>
ls -ltr
sudo chmod +x <string>
sudo timedatectl set-timezone <directory>
npm install --save <string>
cd <string>
sudo docker ps -a
clear
cd ..
ls
grep <string>
git commit -m <string>
cd <string>
sudo nano <string>
cd
ls
ls
cd <string>
cat <string>
sudo flatpak update -y
sudo zypper ve -r
wc -l
git status
fg
docker exec -it <string>
npx <string>
ls
ls
cd ..
sudo systemctl start <string>
ls -ls
exit
git commit -m <string>
wget <URL>
git add <string>
cd <directory>
cd <directory>
ls
ssh-keygen -b <number> -t <string>
vi <file>
tar xvzf <file>
mkdir <string>
clear
git status
git add <string>
ls
cp <string>
vi <file>
cd..
cd
exit
git add <string>
cd ..
uname -a
ls
cd <string>
ls
tmux send-keys -t <string>
ls
npm install -g <string>
sudo ufw allow <string>
history -a
then
docker push <directory>
ls
cd ..
sudo cat <directory>
php
cd <string>
vi <file>
sed -i <string>
cd <directory>
rm -rf <string>
mv <string>
grep <string>
git checkout <string>
pwd # tells you where you currently are
git branch -a
rm <string>
git push origin <string>
ls
git push -u <string> master -f
cd <directory>
sudo nala purge <string>
exit
cd <string>
vi <file>
ls
read -p <string>
sudo yum install <string>
ls -ltr
apt-key add <file>
exit
git status
less <string>
rm <string>
ls
vim <file>
adduser <string>
fg
ls
ls
curl -X <string> <URL> -d <string> -d <string> -d <string>
ls -a
git commit -m <string>
vim <file>
cd
ls
sed -i <string>
userdel demouser
sudo ln -s <directory>
ls
ls
cd ..
vi <file>
python3 <file> --epochs <number>
docker run <string>
sudo -H <string> install -r <file>
git add <string>
ls
ls
git add .
sort -k <number> -n
python <file> runserver 0.0.0.0:2016
ls
rm -f <string>
sudo dpkg -i <file>
sort -g
chmod <number> <string>
git clone <URL>
ls
sudo python3 <file>
python3 <file> --epochs <number>
ls
cd ..
cp -r <directory>
ls
git status
cd <string>
cd ..
ls
sudo iptables -A <string> -p <string> --dport <number> -j <string>
git pull
sudo dnf config-manager --set-enabled <string>
ls
git config --global <file> <file>
cd ..
sudo apt-get -y <string>
vi -t <string>
cd <string>
sudo reboot
docker kill <string>
sudo install -m <number> -d <directory>
git checkout <string>
ls
exit
git init
ls
pwd
else\
<directory> <string>
git commit -m <string>
vi <file>
sleep <string>
chsh -s <string>
cd <directory>
cd <directory>
read -p <string>
git init
git clone <URL>
less <string>
cd ..
git init
ls
cd <directory>
ls
clear
git status
git commit -m <string>
clear
ping <file>
sudo apt install tmux -y
ls
grep -E <string>
ls
ls
cd <string>
git init
<directory> <directory>
ls
npm run dev
git push
brew install <string>
git pull
mkdir <string>
man <string>
date
git status
ls
rm -r <string>
touch <file>
xargs grep <string>
git clone <URL>
exit
git add .
ls
ls
sudo pip install -U <string>
kill <number>
sudo mkdir <directory>
ls
vim <file>
git status
git clone --depth=<number> <URL>
docker ps -a
mkdir <string>
ls
cd ..
mv <string>
git status
cd <string>
clear
cd <directory>
ls
read <string>
sudo service nginx restart
ls -a
ls
git push origin master
sh <file>
exit
grep <string>
rm <string>
cd <string>
ls
rsync <directory>
ls
sudo lsof -ti:8888
git commit -m <string>
ls
ls -a
sudo xcodebuild -license\
ls
exit
npm start
git remote add origin <URL>
git icommit -m <string>
find . -name <file> -type <string> -print -delete
sudo apt-get -y <string>
ls
git commit
cat <string>
ls
cd <string>
sudo npm i prettier -g
vim
clear
nohup java -Xmx${xmxMb}m -jar <directory> -flatfile <directory>
service apache2 reload
docker-compose up -d --build
ls
ls -lh
cat <string>
git push -u <string> master
rmdir <string>
git remote add origin <URL>
ls
cd <string>
cd <directory>
cd <string>
cp -a <string>
npm install
ls
git status
git add
tmux kill-session -t <string>
set
ls
ls
cd <string>
cd ..
git push origin main
git clone <URL>
eval <string>
cd <directory>
vim <file>
ps -ef
cd ..
less
sh
grep <string>
mkdir <string>
cd <directory>
sudo sed -i <directory> <file>
clear
docker images
ls
cd <string>
sudo apt-get upgrade
cd <string>
cd <string>
exit
ps -ef
cp -r <directory>
git hist
mkdir <string>
ls
git commit
kill -9 <number>
find imgs -type <string>
cd <string>
npm install -f
read -s -p <string>
git log
sudo apk add <string>
ls
git add <string>
sudo apt-get update
vim <file>
git log --oneline --graph
cd ..
npm install -g <string>
cd <string>
bash
less <string>
ssh -X <string>
mkdir <string>
npm install react-native-keyboard-aware-scroll-view@latest --force
wget -q -O <file>
ls -ltr
git commit -m <string>
chmod -R <number> <directory>
cd <string>
git status
man <string>
rm -r <string>
exit
ls
git push --all <string>
git commit -m <string>
cd ..
docker-compose logs --follow <string>
ls
clear
ping <string>
vim <file>
git status
node --version
ps aux
ls
mv <string>
ls
ls -al
sudo apt-get install <string>
less
clear
git config --global <file> <string>
clear
ls
python3 <file> -sI <string> -sM <string> -dM <string> -dI <string>
git commit -m <string>
git push
cp -r <directory>
sleep <number>
npm start
sudo tail -f <directory>
tr -d <string>
php artisan <string>
ls -i
ls
clear
sed <directory>
rm <string>
cd <string>
ls
cd <string>
ls
ls
mkdir <string>
clear
cp <string>
sed -E -e <directory>
cd <directory>
read -t <number> -n <number>
ls -la
ls
ls
git add .
ls -al
cd <string>
ls
git push
sudo poweroff
ls -l
npm run start
brew install <string>
g++ -std=<string> <file> -o <string>
sudo apt -y <string>
cd <directory>
ls
git add -u
npm run coverage
export <string>
apt-key adv --keyserver <string> --recv <string>
sudo apt install <string>
vi <file>
cat <string>
cut -f <string> -d <string>
exit
git pull
ls
dpkg --get-selections <string> <file>
npm install
clear
cd <directory>
python3 <file>
cd
cd <directory>
ls
git add .
cd <directory>
ssh <string>
read -rp <string> <string>
vi <file>
scp <string>
sudo apt update
cat <string>
man <string>
mv <string>
cd <string>
code <string>
git commit -m <string>
pwd
source <directory>
sudo apt-get update
yarn add <string>
python3.11 <file>
cp <string>
systemctl start <string>
fg
sudo adduser <string>
cd <directory>
clear
git add <string>
git commit
sudo start uwsgi
ls
ls
ls
cd <string>
sh
sudo npm run build --legacy-peer-deps
done
npm install react-native-permissions --force
git commit -m <string>
ls
node -v
git checkout -b <string>
git push
ls
clear
cd <string>
git clone <URL>
source <string>
sudo apt -y <string>
ls
bash
tmux source <file>
cd <string>
find . -type <string> -name <string>
clear
ls
cd ..
<file> <file>
ls
git add .
mount --types <string> overlay --options=<string> <directory>
cd ..
npm run test
ls
git pull
sort -nr
ls
cd ..
su
vi <file>
git diff <string>
fg
exit
sudo sed -i <directory> <file>
ssh dirlic@10.18.0.39 -p <number>
fg
git commit -m <string>
exit
nano <string>
git status
cd <string>
clear
chmod u+x <string>
git rev-parse --abbrev-ref <string>
sleep <string>
grep <string>
vim <file>
git checkout <string>
cd <string>
sudo docker kill corrade
clear
sudo apt -y <string>
cd <string>
ls
mv <string>
cd <string>
git remote add origin <URL>
cat <string>
vi <file>
ls
exit <number>
shutdown
mkdir <string>
unzip <file>
cd <string>
cd <string>
ls
yarn <string>
docker ps
git commit -m <string>
man <string>
kubectl apply -f <string>
cp <string>
diff -dB <file>
clear
vim <file>
killall <string>
grep <string>
ls
git push
cd ..
docker ps -a
vi <file>
wget <URL>
source <file>
cd <directory>
git push
diff <file>
cd <string>
ls
cp -r <directory>
sudo tee <directory>
cd <directory>
git remote add origin <URL>
ls
ls
grep -R <string>
vim
npx create-react-app <string>
ls -lx
source <directory>
mv <string>
ls
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
cd <string>
cd <string>
python3 <file>
sudo docker exec <string>
cat <string>
git stash pop
git init
python3 <file>
ls
cd -
tr <string> <string>
exit
python3 <file>
ls
ls
clear
sudo rm -r <string>
history -a
sudo mv <string>
find . -depth
git add <string>
cp <string>
curl <string>
clear
cd <directory>
ls
git commit -m <string>
git pull
read -p <string>
sudo usermod -aG <string> <string>
ls
ls
cd ..
ls
ls
sudo start uwsgi
git commit -a
cd <string>
ls
curl -sS <URL> -o <file>
vi <file>
cut -f <string>
sudo wget <URL>
vim <file>
git config --global <file> <string>
ftp 198.19.255.136
sudo
sed -i -- <directory>
git add <string>
sleep <number>
python3 <file>
ls
git status
chmod +x <string>
ls
git push -u <string> detail
sudo apt-key add -
sudo pacman -S <string>
git push
vi <file>
ls
npm install -g <string>
nano <string>
cd <directory>
clear
cat <string>
git status
vim <file>
kill <number>
git remote add origin <URL>
clear
git log
ls
nano <file>
docker build -t <string>
systemd-resolve --status
git add .
ls -a
git clone <URL>
vim <file>
mkdir <string>
cd <string>
wget <URL>
vim <file>
rm -rf <string>
docker-compose up --build
cat <string>
ls
sed -e <string> -e <directory> -e <string> \
ls
cd <string>
cd <directory>
tmux
ls
brew install <string>
git config --global <file> <file>
sudo nano <file>
cat <string>
vim <file>
cd ..
grep <string>
apt update
npm i <string>
sudo sed -i <directory> <file>
python3 <file>
top
git add -A
wc -l
xargs grep <string>
ls
sudo nano <directory>
cd <string>
chmod -f <string> -- <directory>
npm create vite@latest <string>
sudo <directory> -v -w <string> -o <string>
sed -i <string>
nano <file>
ls
numfmt --to=<string> --suffix=<string>
git checkout <string>
cd <string>
fg
find <directory> -iname <file> -type <string> -exec <string> -c <string>
du -h --max-depth=<number> <string>
date
cd <string>
cd..
sed -i <directory>
git push
cd ..
vi <file>
ls
sudo apt-get install <string>
sudo systemctl restart <string>
cd <string>
ls
kill <number>
read -p <directory> -n <number> -r <string>
cat <string>
npm http <number> <URL>
mv <string>
cd <string>
git status
npm install -g <string>
clear
git clone <URL>
sudo sysctl -p <directory>
sudo sed -i <directory>
cd <string>
sed -i <string>
git st
ps -ef
git commit -m <string>
ls
xhost
ls
rm <string>
wget <URL>
git push --set-upstream <string>
cd ..
cat <string>
kill <number>
top
rm -rf <string>
exec <string>
which <string>
done
find . -name <string> -type <string> -delete
grep <string>
vi <file>
git status
git push
ls
cd <string>
git commit --amend
rm -f <string>
npm run bench -- -c <file> -n <file>
fg
sudo sed -i <directory> <file>
cat <string>
git add .
kubectl --namespace <string>
export <string>
vi <file>
python3 <file>
vi <file>
git submodule update --init --remote --recursive --force
cd <string>
ls
sudo apt purge <string>
cd <string>
rm -d <string>
ssh <string>
sudo apt install <string>
nano <file>
mkdir <string>
ls
cd <directory>
git remote -v
ls
chmod <number> <string>
ls
git status
git push origin main
npm i <string>
git add .
git commit -m <string>
fg
cd <string>
git add .
ls
vi <file>
nano <file>
sudo su
git pull
nano <file>
rm -r <string>
ls
sudo gem install <string>
rm -f <string>
git status
sudo gem install <string>
chmod <string>
ls
cd ..
chmod <string>
ls
git push
exit <number>
cd <string>
history
npm start
exit <number>
exit
git restore
sudo virsh -c <directory> <string>
cd <directory>
fg
ls
git add .
cp -R <string>
git commit -am <string>
ls
git log --oneline --all --graph
cd <directory>
wget -t <number> --retry-connrefused <URL>
git status
ls
rm <string>
mkdir <string>
ps
brew install --cask <string>
git commit -m <string>
git diff <string>
clear
apt install
code <string>
git status
ls
git clone <URL>
exit
ls
npx <string>
python3 <file>
make clean
ls -lt
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
clear
ls
printf <string>
mv <string>
exit <number>
cd ..
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cd <string>
sed -i -- <directory>
docker-compose down
apt-mark <string>
npm audit fix --force
cp -r <directory>
wget --recursive <URL>
sudo service nginx reload
clear
export <string>
exit
ls
git clone <URL>
ls
cd <string>
nano
sudo pacman -S <string>
cd <string>
clear
sudo nginx -t
sed -i <string>
vim <file>
cd
sleep <number>
git commit -m <string>
curl -L <URL>
mv <string>
ls
tr <string>
ls
npm run make
ps axfu
git commit -m <string>
clear
top
clear
sudo wget -qO- <URL>
clear
git status
ls
git status
cd ..
cd <directory>
exit
git clone <URL>
reboot
vim <file>
service apache2 restart
sudo add-apt-repository -y <directory>
git init
cd <string>
git fetch
clear
cd <string>
sudo apt-key adv --keyserver <string> --recv <string>
tee <file>
git init
ls
exit
ls
vim <file>
ls
ls
sudo sed -i <directory>
cd <directory>
sudo apt-get install <string>
npm run dev
cd <directory>
ls
test <string>
cat <string>
sudo add-apt-repository <directory>
cd ..
git pull
cat <string>
git commit -m <string>
npm start
python3 <file>
cd <directory>
ls
npm run coverage
grep -i <string> >files
ls
ls
rm <string>
git cm -m <string>
git pull
git pull
ssh <string>
curl -X <string> -d <string> -d <string>
sudo poweroff
ls
read -e -p <string>
ls -arlt
cd <string>
git commit -m <string>
code .
rm <string>
sudo sed -i <directory> <file>
git commit -a -m <string>
git pull origin master
grep <string>
ls
python3
git push
code <string>
git push
clear
sudo emacs <string>
cd <directory>
git status
cd <directory>
source <directory>
git push origin master
sudo -u <string>
git add .
ls
wget -qO- <URL>
npm update
sudo tar xzf <file>
sudo ntpdate -B -u -d <string>
exit <number>
cd <directory>
ssh-keygen -o -a <number> -t <string> -f <directory> -C <file>
exit
cp -r <directory>
vim <file>
pwd
git status
vim <file>
sudo git checkout <string>
npm install
sudo service nginx reload
python3 <file>
ls -lh
git commit -m <string>
sleep <number>
cd <string>
vim <file>
cd ..
cd ..
git status
exit
du -sh
git commit -m <string>
git status
docker image <string>
read -e <string>
git commit -m <string>
git push
cd <string>
vi <file>
ls
vi <file>
cd ..
sudo add-apt-repository <directory> -y
ln -s <string>
ps aux
python3 <file>
sudo systemctl enable <string>
cd ..
ls
sudo apt remove <string>
ls
read -p <string>
ls
fg
ls
cd
rmdir <string>
touch <string>
ls
git add .
vi <file>
cd <directory>
time <string>
sudo pcmanfm
sudo apt-get -y <string>
git clone --single-branch -b <string>
cat <string>
rm <string>
nano <file>
iptables
git commit -m <string>
cd <string>
less <string>
vim <file>
git add <string>
pwd
vim <file>
rm -rf <string>
ssh esther@10.18.0.41 -p <number>
git commit -m <string>
find . -empty -type <string> -print -delete
exit <number>
ls
ls
cd <string>
npm config set prefix <string>
cd <string>
cd <string>
ls
git diff <string>
git init
kill -9 <number>
clear
cd <string>
sudo sed -i <directory> <file>
sudo nano <directory>
vim <file>
git push -u <string> master
ls
ls
ls
su root
ls -la <directory>
git bisect <string>
ls
cd <string>
rm -rf <string>
clear
chmod +x <string>
cd <string>
chmod +x <string>
rm -rf <string>
exit
python3 <file>
python3 <file>
sleep <string>
wc -l <string>
ls
ls -l
pwd # <string>
sudo mkarchiso -v -w <string> -o <string> slim-iso
ls
read -s -n <number>
python3 <file>
git checkout <string>
cd <string>
ls
ls
read -p <string>
kill <number>
git commit -m <string>
bash
git push -u <string> bryan-guner
cd <string>
grep -E <string>
ls -lt
curl <URL> -u <string> -H <string>
sh <file>
git status
rm <string>
cd <string>
git commit -m <string>
git remote set-url origin <string>
ls -lah
touch <file>
cp
git push
cd <string>
ps ax
git commit
ls
read -s -n <number>
cd <string>
find . -name <file> -type <string> -print -delete
source <directory>
sudo mkdir -p <directory>
fg
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
fg
ls
vim <file>
cp <string>
git stash
top
ls
sed -n <string>
sudo apt-get install <string>
mkdir <string>
sudo ufw <string>
cd <directory>
exit <number>
ls
cd <string>
ls -al
python3
grep <string>
ls -l
pwd
git status
ls
sudo su - <string>
sudo apt install <string>
ln -s <string>
sudo apt update -y
git push --force-with-lease
cd <string>
pwd # tells you where you currently are
ls
chmod -R <string>
vi <file>
git merge <directory> --squash
find <directory> -name <string>
clear
ls
npm run coverage
ls
cd <string>
exit <number>
ls
ls
cat <string>
clear
git commit -am <string>
ls
open <string>
apt-get update
touch <string>
docker run -v <directory> -v <directory> <directory> --rm -it <string>
cd <string>
zip -FS -q -r <file>
tar xvf <file>
npm install -g <string>
sudo apt install <string>
exit
cd <string>
cd <string>
git describe --tags <string>
git commit -m <string>
hexdump -c <file>
sudo apt-key add -
sudo nano <string>
sudo deepstream-app -c <file>
git pull origin master
sudo apt-get update
cd <directory>
rm -rf <string>
read -Ac <string>
cd ..
pwd
cat <string>
cat <string>
clear
pwd
exit
git push -u <string> main
cd
ls
git commit
git commit -m <string>
git status
mvn compile
sudo dpkg -i <file>
npm run coverage
ssh -i <string>
cd
clear
vim
sudo apt-get update
ls -la
clear
rm -rf <string>
git clone <URL>
git remote add origin <URL>
kill -9 <number>
cat <string>
vim
clear
cd ..
touch <file>
cut -f <number> -d <string>
ls
<directory> <string>
ls
npm install react-native-exception-handler --force
type -P <string>
fg
git status
python3 <file>
git commit -m <string>
wget -O - <URL>
npm install -g <string>
ls
exit
git push -u <string> bryan-guner
vi <file>
git push
sudo su -
cd ..
git add <string>
docker image ls
clear
find <directory> -name <file> -o -name <file>
ls -l
npm install
vi <file>
sudo
git status
touch <string>
sudo stop uwsgi
ls
git add .
cd <string>
sudo ufw allow <string>
grep <string>
vim <file>
git push origin main
ls
git add <string>
wc
find . -name <file> -type <string> -print -delete
rm <string>
nano <file>
rm -rf <string>
npm i
cd <string>
exit
vim <file>
ls -l
cat <string>
cat <string>
git push -u <string> main
git commit -m <string>
git remote add origin <URL>
cd <string>
cd ..
ssh -L <string> -N -f -l <string>
git clone <URL>
source <string>
vi <file>
sed -e <directory> -e <directory>
ls
rm -rf <string>
git push -u <string> detail
git status
git remote add origin <URL>
clear
git push
cd <string>
git status
egrep -m <number>
sed <directory>
vim <file>
vim
cd <string>
git config
ls
npm install <string>
cd <string>
cd <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git init
clear
sudo sed -i <directory>
npm install -g <string>
ls -l
sudo apt-get install <string>
systemctl --user <string> <file>
ls
ls
hexdump <file>
sudo stop uwsgi
sudo nginx -h
cd ..
source <directory>
ls
git pull
sleep <number>
cat <string>
apt -yqq <string>
git push
cd <string>
sudo kill -2 <number>
cd <string>
git -C <string>
<directory> <directory>
ls
ls
cp -r <directory>
ls
cd <string>
cp <string>
rm <string>
cd ..
fg
cd <string>
cd <string>
cd <directory>
git push
sudo systemctl restart <string>
sudo apt-get install <string>
ps aux
cd <directory>
ls
cd ..
git pull
cd <string>
npm install
cd <string>
sudo certbot --nginx -d <file> -d <file>
date
ls
ls
git status
read -rp <string> <string>
cd <directory>
python3 <file>
sudo xbps-install <string>
find . -empty -type <string> -print -delete
cd <directory>
exit <number>
git commit
clear
git add <string>
ls
ls
vi <file>
ls
cd <string>
wget <URL>
sort > <file>
npm install <string>
mv <string>
mvn --version
cd
tail +x # want to display all the lines from x to y. This includes the xth and yth lines.
ls
git config --global --unset <file>
sudo add-apt-repository --remove <directory>
ls
docker run -v <directory> -i -p <string>
python3 <file>
vim <file>
ls
npm install <directory> --force
read -r
ls
nano <file>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
docker-compose up -d --build
clear
service apache2 restart
ls
read -r <string>
xclip
git checkout <string>
ls
ls
ls
touch <file>
git status
mkdir <string>
clear
git add .
git restore <file>
du -h --max-depth=<number>
cd <string>
git status
sudo apt install <string>
vim <file>
grep=<string> --color=<string> --exclude-dir=<string>
chmod +x <string>
git clone <URL>
git clone <URL>
sudo perl install-tl
git status
mv <string>
read -s -n <number>
git remote
pwd
cd <string>
rm -rf <string>
nano <file>
pwd
ls
ls
su
mv <string>
cd <directory>
mv <string>
ls
cd
git remote set-url <string>
cd ..
mv <string>
ls
sed <directory>
ls
grep -Eio <string> <string>
sudo apt-key add -
ls
clear
ls
git commit -m <string>
sudo python <file>
git status
unset <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
cd <string>
ls
git status
ls
sed -i <directory>
ls
curl -fsSL <URL>
vim <file>
sudo -i
rm -r <string>
cd <directory>
clear
cd ..
docker run <string>
cd <string>
exit <number>
cd <directory>
rm -rf <string>
ls
cd <string>
curl -T <directory> <string>
ping <string>
git status
git branch
unset color_prompt force_color_prompt
git rm -rf <string>
history -r
cd ..
cd ..
clear
cd ..
source <string>
git push
ps
sudo nvidia-xconfig -a --cool-bits=<number> --allow-empty-initial-configuration
cd <string>
ls
ls
git commit -m <string>
sudo systemctl restart <string>
mv <string>
ls
open <string>
cat <string>
git add <string>
cat <string>
cd ..
sudo chmod a+rwx <directory>
cd ..
git init
rm -r <string>
sudo kill -9 <number>
vim <file>
sudo docker pull <string>
pwd
git push -u <string> main
cd ..
cd <directory>
ls
git stash
done
cat <string>
cd <string>
vim <file>
cd <string>
unset <string>
source <file>
ls
cd ..
cd <string>
git commit
ls
vim <file>
touch <file>
ls
ls
ls
exit
git checkout -- <string>
tmux
git commit -m <string>
sudo curl -o- <URL>
exit <number>
clear
vim <file>
docker run -d <string>
exit <number>
touch <file>
sudo airport --disassociate
cd <string>
cd ..
rm -rvf <directory>
cd <string>
curl -fsSL -o <file>
git config --get <file>
cd ..
vim <file>
cp <string>
vim <file>
ls
exit
cd <directory>
source <directory>
cd <directory>
npm install
cd <string>
cp -r <directory>
rm -rf <string>
cd <directory>
rm -f <string>
mv <string>
mkdir <string>
rm -rf <string>
ls
ls -l
fg
ls # lists your files in current directory, ls <dir> to print files in a specific directory
grep <string> -rc <string>
cd ..
git commit --amend --reset-author
ls
cp <string>
fg
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
sudo apt-get install -y <string>
wget -O - <URL>
ls -xl
vim <file>
git status
git status
ls
ps
cd ..
ls -la
ls
cd ..
ls
rm -rf <string>
git st
git
dpkg -l
git push --set -upstream <string>
tar xf <file>
ls
awk <string>
ls
ps ax
sudo apt install -y <string>
git remote add origin <URL>
fg
curl <string>
clear
cat <string>
sh -c <string>
ssh-keygen -t <string> -C <file>
nc <string>
ls
git commit -am <string>
ls
setg RHOSTS.*
cp <string>
vi <file>
ls
lsof -i <string>
cat
git commit -m <string>
ls
killall -q <string>
mkdir <string>
touch <string>
exit <number>
sort -u
cp -av <directory>
git clone <URL>
ls
clear
chmod <number> <string>
ls
vim <file>
clear
sudo start uwsgi
npm start
clear
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
exit <number>
rm -rf <string>
git commit -m <string>
ls
git push
chsh -l
clear
cd
rm -rf <string>
source <file>
rm -rf <string>
ssh -T <string>
source <directory>
sudo umount <directory>
git rebase <string>
git fetch --prune <string>
clear
ls -la <directory>
git push
git add <string>
sudo bash -c <string>
sudo adduser <string>
curl -sSL --fail <directory>
cd <directory>
ls
sudo su
exit
cd ..
git init
docker-compose up
sudo start uwsgi
git push -u
docker run <string>
open <string>
sudo ntpdate -B -u <string>
tmux kill-server
git commit -m <string>
ls
rm -rf <string>
ls
ssh <string>
git config --global <file> <string>
ls
cd <directory>
nano <file>
cd <directory>
cd <string>
git add <string>
ls
pwd
docker volume ls
pwd
rm <string>
sudo dnf install -y <string>
sudo sed -i <directory> <file>
clear
cat <string>
sudo certbot --nginx -d <file> -d <file> -v
git add <string>
sed -i -e <directory> -e <directory>
ln -s <string>
pwd
git commit -m <string>
git add .
vim <file>
ls
clear
ls++ -a
ps -ef
ls
git remote add origin <URL>
ls
curl -sS <string>
ln
exit <number>
exit
sudo -E <string> <string>
git add .
grep <string>
sed -n <string>
sed -i -e <string>
exit <number>
cd <directory>
ls -l
ls
ls
mkdir <string>
chmod <number> <string>
cd <string>
ls
ls
cd <string>
more
ls
npm http GET <URL>
cd <string>
vi <file>
rm -rf <string>
git status
cd <string>
w
cd ..
vi <file>
less <string>
chmod +x <string>
sudo apt -y <string>
wget -qO- <URL>
apt-get install <string>
mkdir <string>
docker-compose --version <string>
ls
ip
curl <string>
mkdir -h
man <string>
git pull
cd <directory>
vi <file>
sudo pacman -Rns <string>
grep <string>
vi <file>
docker ps -a
ls
git pull
chmod u+x <string>
cd <string>
rm <string>
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
curl <string>
git status
cd ..
sed <directory>
npm run dev
wget -O - <URL>
docker ps
cd <string>
git add <string>
read -r -p <string>
cd <string>
rm -rf <string>
exit <number>
clear
git add <string>
sudo apt -y <string>
sudo npm install -g <string>
ls
exit
cd <string>
git init
apt-get install <string>
find <directory> -type <string> -name <string>
git add .
npm install tailwindcss-rtl --save-dev
read -p <string>
cd
cd <string>
ls
ls
top
which <string>
ls
sudo vi <directory>
clear
ls
ls -altr
ps ax
git commit -m <string>
vim <file>
git add -A
cd <directory>
ls
git commit -m <string>
ls
git add .
rm <string>
git status
ls
ssh-add
git pull
exit
sudo sh <file> --dry-run
mkdir <string>
git branch -m <string>
sleep <string>
sudo apt-get install <string>
xargs sed -i <directory>
vim <file>
xargs -L1 <string>
rm -r <string>
cd <string>
script/build.sh
ls
cd
git remote add origin <URL>
rm -rf <string>
unzip <file> -d <directory>
exit
vi <file>
chmod <string>
grep <string>
cd <string>
git commit -m <string>
sed -i <string>
nano <string>
clear
git init
apt-get -y <string> --no-install-recommends <string> <string>
git remote add origin <URL>
sudo udevadm control --reload-rules
curl -fsSL <URL>
mkdir <string>
rm -rf <string>
pwd
rm -rf <string>
read -p <directory> -n <number> -r
cd <string>
cd <directory>
head -n <string>
ps -auxwf
git checkout <string>
ls
cd <string>
cd..
npm run build
ls
open <string>
vim <file>
sudo ldconfig
git status
npm start
find . -name <string> -exec <string> -wc <string>
git fetch
nano <file>
bash -v
git push
chmod <number> <string>
git push
tail -f <string>
cd <directory>
cd <string>
ls -a
fg
git add <string>
rm <string>
ls
cd <string>
sudo useradd <string>
git rebase --onto <string>
git pull
exit <number>
git branch -a
ls
grep <directory> -winr <string>
clear
ls
cd <directory>
cd <string>
rm -f <string>
done\
docker stop <string>
docker images
find . -name <file>
cp <string>
history -a
mv <string>
ls
git init
sleep <string>
setg RHOSTS.*
sudo apt install <string>
ls
vi <file>
docker stop bigballers
print <string>
read -rp <string> <string>
cd <string>
grep <string>
git clone <URL>
clear
git pull origin master
cd <string>
systemctl enable <string>
clear
sudo ufw enable
sudo npm i prettier -g
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
exit
git stash list
git commit -m <string>
cd <directory>
update-alternatives --list <string>
git add .
git touch
git init
tar -zxvf <file>
init
cat <string>
cd <string>
ls
fg
npm install
ls
docker run --name <string> --tty -i <directory>
mv <string>
sudo chmod -R --reference=<string> <string>
sudo reboot
ls
ls
sudo certbot --nginx -d <file>
sudo find <directory> -type <string> -exec <string> <number> <string>
ls
source <string>
sudo apt install <string>
vi <file>
git commit -m <string>
rm -rf <string>
cd <string>
<directory> <string>
ls
ls
ls
git commit
git commit --soft <string>
ls
sed <directory>
git pull --no-edit
vi <file>
vi <file>
sudo apt-get purge <string>
ls
wget -q -O - <URL>
ls
git add .
sudo systemctl status <string>
mkdir <string>
ls
cd <string>
npm install -g <string>
ls
rm <string>
git pull
sudo su
fg
cat <string>
sudo apt-get update
sudo apt-key adv --keyserver <string> --recv <string>
exit
read -p <string>
curl -X <string> -d <string> OR SELECT <string>
ls
npm install -g <string>
git clone <URL>
git commit -m <string>
cd <string>
ls
ls
sudo supervisorctl <string>
exit
cd <directory>
ls
npm run prod
git push origin
cd <string>
sudo udevadm control --reload-rules
fg
npm config set prefix <string>
code .
mv <string>
cd <directory>
ls
ls
sleep <number>
ls
rm <string>
mv <string>
git config --global <file> <string>
ls
ls
ls -R <string>
cd <string>
ls
git remote -v
bash <file>
npm install
unset color_prompt force_color_prompt
sudo npm i -g <string>
git clone <URL>
su
sudo dd <string>
git pull
cd <directory>
exit
git push origin
sudo chmod a+rwx <directory>
cat <string>
sudo apt install <string>
clear
rm <string>
git clone --depth=<number> <URL>
ls
ls
cd <string>
cd <string>
ls
uniq -u <file>
sudo ip route <string>
cd <string>
ls
cd ..
cd <string>
curl -LO <string>
python3 <file>
cd <directory>
git branch -M <string>
sudo npm start
vim <file>
ps -auxwf
cat <string>
git status
ls
sudo sed -i <directory> <file>
git push origin main
ls
less <string>
ls
cd <string>
exit
cd ..
git checkout -b <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
curl -sSL <URL>
mkdir <string>
git status
cd ..
mkdir <string>
cd <string>
cp <string>
clear
exit <number>
cd <string>
bash
ls
docker ps -a
ls
cat <string>
git init
ls
codedown javascript > <file>
rm <string>
grep -E <string>
ls
ls -latr
cd <string>
exit
ls
bash
npm install <string>
git add <string>
apt-get install <string>
sleep <number>
pwd
git push -u <string> master
ls
docker build -t <string>
exit
clear
ls
ls
python3 <file>
rm <string>
sudo nano <directory>
ls
git init
sudo apt update
grep -E <string>
ping <string>
git add <string>
cat <string>
cd <string>
source <string>
exit
ls
sh <file>
cd <directory>
vim <file>
clear
ps aux
fg
ls
exit
git stash
bash -c <string>
ls -a
git add <string>
ls
cd ..
cd <string>
git add <string>
ls
git remote add origin <URL>
git adog
sudo apt install <string>
git push -u <string> bryan-guner
mkdir <string>
cd ..
cd <string>
cd <directory>
touch <file>
sudo sed -i <directory>
clear
git commit -m <string>
git remote add origin <URL>
git status
git pull
python3 <file>
tail -f <string>
git push -u <string> main
git init
bash
vim
cp <string>
ping <string>
true
ls
ls
clear
sleep <string>
ls
sudo gsutil cp <file>
code --install-extension <file>
clear
ls
ls
sudo rm <directory> -r
npm run start
sudo apt install ruby -y
npm start
screen -r <string>
grep <string>
vi <file>
cd <string>
cat <string>
cd
ls -t
npm run test
wget --user-agent=<string> <string> -O <string>
sudo apt-get install <string>
ls
cd <string>
npm i --save <string>
python3 <file>
cd <directory>
ls
sudo lighty-enable-mod <string>
ls
clear
sudo vim <file>
mkdir <string>
sudo ufw <string>
grep <string>
apt update -y
rm <string>
cd ..
curl -L <URL>
git push origin <string>
vi <file>
rm -rf <string>
ln -s <string>
vi <file>
ls
sudo apt install --fix-broken -o <string>
cd <string>
awk <string>
ls -latr <directory>
ls
telnet <string>
git status
git push
sudo <directory> restart
git checkout <string>
sudo chmod -R <number> <string>
sudo mount <directory>
exit
git grep -l <string>
sed -ri <string>
time <directory> -cpuprofile=<file>
tee <file>
grep -v <string>
vim <file>
git pull
ls
fg
which <string>
mkdir <string>
cd <string>
grep -wPrn <string>
ls
sudo sed -i <directory>
wget <URL> -O <file>
sudo sed -i <directory> <file>
cp <string>
git status
sysctl <string>
git pull
sudo apt install <string>
vim <file>
ssh <string>
npm i
a ! href <string>
ls
cd
xargs perl -pi -e's/Windows/Linux/ig' <file>
ls -la
vi <file>
sh <file>
pacman -Syu
open <string>
sudo apt-get install -y <string>
ls
bash
xargs -L1 -I'{}' <string> -rE <string>
ls
cp -a <string>
ls
df -h
git add <string>
vi <file>
ls -l
ls
cd <directory>
then\
ls
clear
mv <string>
npm i
cd <directory>
cd <string>
git status
npm run bench -- -c <file> -n <file>
ls
curl -sS <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string>
git add <string>
rm -rf <string>
ls
clear
rm -rf <string>
cd <directory>
cut -c <string>
cd <string>
rm -rf <string>
rm <string>
usermod -G
vi <file>
sudo apt-get install <string>
exit
diff <file>
cd <string>
vi <file>
git clone <URL>
git add .
mv <string>
sudo apt install <string>
cd <string>
cd <string>
cd <string>
cat <string>
git commit
ls -l
npm install
git status
code .
docker-compose up -d --build
sudo tail -f <directory>
curl --silent <string>
npm i glob -f
mv <string>
clear
ls
sudo apt-get remove <string>
perl <file>
clear
openssl rand -hex <number>
cd <string>
cd ..
exit
ls
cd <directory>
cat <string>
ssh <string>
cd <string>
sudo vim <file>
cd <string>
ls
git commit -m <string>
exit <number>
nano <file>
ls -la
cd ..
cat <string>
clear
awk --help
sudo apt install xautolock --reinstall
sudo kill -9 <number>
cd ..
cd <string>
cd <string>
cd <string>
sudo apt-get remove --purge <string>
apt-get update
cd <string>
cd <directory>
ls
git add <string>
git branch -all
code <string>
ls
clear
sudo apt autoremove
touch <string>
git remote add origin <URL>
top
mv <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
sudo dpkg-reconfigure -pmedium <string>
sudo chmod -R <number> <string>
sed -e <directory>
git commit
docker commit <string>
git push origin master
cd <string>
npm run bench -- -c <file> -n <file>
cd <directory>
cd ..
ls
sudo apt update
done
cp -r <directory>
ls
cd <string>
dotnet <string>
git commit -m <string>
grep -x <string>
cd <directory>
python3 -m <string> install --user --name=<string>
python3 <file>
ls -la
git checkout <string>
source <file>
sudo su
clear
git checkout <string>
git init
sudo docker rm corrade
cd <string>
git stash
ls -la <directory>
vim <file>
date
cd <directory>
cd <string>
ssh -A <string>
fg
cd
wget -c <URL> -O <file>
ls -a
docker exec -e <string>
docker login
sudo apt-get update
sort --unique
cd <directory>
ping <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git log
cd <string>
git clone <URL>
sudo apt-get remove
sudo docker images
git push
git config --global <file> <file>
clear
mkdir <string>
dir
ls
cd <string>
ls
vi <file>
nano <string>
bash <file>
ls
mkdir <string>
git add .
code <string>
git commit -m <string>
sudo mv <string>
apt remove <string>
cd <string>
which <string>
xargs kill -9
git commit -m <string>
mkdir <string>
vi <file>
cd <string>
cd <string>
cd ..
cd <directory>
ls -l
export <string>
docker exec -it <string>
sudo emacs <string>
ls
git push
mvn compile
git add <string>
clear
curl -v -H <string>
vim <file>
cd -
ssh <string>
rm <string>
sed -i <directory>
ls
ls
cd <directory>
git add .
ls
cat <string>
cd <directory>
rm -f <string>
vi <file>
docker run -v <directory> -v <file> --workdir <directory>
git remote add origin <URL>
ls
cd <string>
less <string>
cd
exit <number>
ls
sudo lpoptions -d <string> -l
mkdir <string>
ls
ls
vim <file>
ls
clear
vim
sudo wget <URL>
sed <directory>
type <string>
htop
git ls-remote <string>
git mv <string>
ls
git status
clear
git status --porcelain
apt-get install -f <string>
ls
git -v
cd <directory>
ls
cat <string>
clear
fg
ls
grep <string>
cd <string>
cp -v <string> <directory>
apt-get -f <string>
sudo rm -rf <string>
find <directory> -type <string>
npm run make
ls
git pull
vim <file>
ls
sudo apt show <string>
git push -u <string> master
rm -rf <string>
exit
rm -rf <string>
chmod +x <string>
clear
sudo ntpdate <string>
cd <string>
zcat <file>
touch <string>
fg
ls
cd <string>
touch <string>
curl -sH <string> <directory>
sudo curl -fsSL <URL> -o <directory>
git log --oneline
screen
sed -i <string>
mv <string>
git status
npm install
git push -u <string> master
ls
git push
sudo systemctl reload <string>
xrandr
pkill <string>
docker ps -a
cd <directory>
ls
ls
curl -sH <string> -G --data-urlencode <string>
yarn add <string>
ls
git add <string>
sudo snap install <string>
vi <file>
fg
cd <string>
vi <file>
man <string>
ls
cd <directory>
cd <string>
cd <string>
ls
cd ..
git reset --hard <string>
vim
ls
ls -a
ls
ls
rm -rf <string>
sudo vi <directory>
sudo apk add <string>
ls
cd <directory>
code <string>
docker rmi <string>
read <string>
apt-get install <string>
read -r <string>
git commit -am <string>
sudo sed -i <directory> <file>
ls
cd <string>
mkdir <string>
git push
vi <file>
sudo systemctl start <string>
cd ..
udevadm monitor -p
npm i -g <string>
code .
git push origin
vi <file>
ls
ls
exit
git add .
sudo firewall-cmd --permanent --zone=<string> --add-port=<directory>
tail -f <directory>
git clone <URL>
vim <file>
npm i <string>
fg
cat <string>
ls
sudo groupadd docker
cd
exit <number>
read -p <string>
mkdir <string>
curl <string>
sudo ln -s <directory>
ls
find . -empty -type <string> -print -delete
find . -empty -type <string> -print -delete
cd ..
npm run start
rm <string>
sed -i <string>
vi <file>
rm -rf <string>
ls
cd
ls
cd <string>
cd <string>
ls -a
curl -T <directory> <string>
vim <file>
ls
git clone <URL>
git add <string>
cd <string>
grep -Eio <string>
cd <string>
git push
head -n <number>
ls
cd <string>
cd <string>
wget <URL> -O -
ls
vim <file>
ls
git pull
cd <directory>
git commit -m <string>
find . -name <file> -type <string> -delete
git pull origin <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
done
unset <string>
git add .
less <string>
cd <directory>
clear
exit
cd <directory>
vim
cd <string>
cd ..
cd ..
rm -rf <string>
clear
cp <string>
mkdir <string>
apt-get install <string>
npm start
ls
ls
ftp 198.19.255.136
git init
clear
cd <string>
git config --global <file> <string>
cd <directory>
git commit -m <string>
cd <directory>
docker-compose up -d --build
cat <string>
cd <directory>
vim <file>
fg
which <string>
cat <string>
cd <string>
git status
vi <file>
cd
ls -la
clear
wget -r --no-parent <string>
ls
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
rm -rf <string>
git add .
ls -lh
vi <file>
make clean
cd ..
ls
ls
ls -l
sh <file>
git status
git -global
grep <string>
sudo dpkg -i --force-architecture <string>
python3 <file>
python3 <file>
ls
sudo systemctl start <string>
cd <directory>
git commit -m <string>
code .
ls
ls
exit
ls
sudo curl <URL>
wc -l <string>
date
sudo vi <directory>
cd <string>
git stauts
rm <string>
scp <string>
git rev-list --reverse --topo-order --parents --full-history --sparse <string>
ls
cd <string>
clear
sudo dpkg -i <file>
git init
ps -u <string> # lists your processes
sudo service nginx reload
vim <file>
tail -f <string>
find $dir -type <string>
ls
ls
git pull origin master
git status
sudo shutdown -h <string>
ls
ls
service <string>
clear
clear
mkdir <string>
git push
tail -f <string>
apt-get install <string>
cd
docker-compose up -d --build
cd
mv -f <string>
docker pull <string>
sudo apt-get install build-essential gdb -y -qq
composer install
ls
python3 <file>
ls
mv <string>
npm i <string>
cd <string>
git remote add origin <URL>
sudo mv <string>
cd <string>
npx <string>
env
cd..
bazel <string>
cd <string>
ls
cd <directory>
git commit -m <string>
ls
git add .
sudo gem install <string>
cat <string>
chmod <number> <string>
cd <string>
git commit
cp <string>
clear
ls
ls
ls
sudo lsof -ti:8889
git clone <URL>
git clone <URL>
cd <directory>
rm -rf <string>
sudo apt update
fg
sudo apt-get install <string>
ls
cd <directory>
ls
nano <file>
git merge <string> --no-edit
npm init -y
rm <string>
npm install <string>
sudo pip3 install <string>
sudo virsh -c <directory> <string>
nano <string>
ls
sleep <number>
git clone --depth=<number> <URL> <directory>
cd <directory>
clear
vi <file>
apt-transport-https \
sudo apt install <string>
git add <string>
ls
cd ..
git status
cd ..
git rm --cached <string>
vi <file>
sudo update-alternatives --config <string>
cd <directory>
git pull
rm <string>
vim <file>
npm install -S <directory>
pwd
ls
grep <string>
ls
cd <string>
cd <string>
npm install
wc
npm start
ls
mv <string>
ls
cd <string>
dir
ls
sudo apt-get -y <string>
sleep <number>
sed -i <string>
git rebase --abort
vim <file>
read -r <string>
sudo sed -i <directory> <file>
ls
cd <directory>
ls
cd <string>
git remote add origin <URL>
cp <string>
sudo wgnord <string>
cat
git add <string>
git remote -vv
git add -u
ls -ltr
read -r <string>
service <string>
docker exec -it <string>
curl -L <URL> -o <file>
chmod -R <string>
git diff
read -r <string>
cd <string>
ls
ls
exit
ls
vim <file>
cd <string>
fg
ls
<file> program
cd <directory>
sudo apt-get upgrade
ls
git pull
git commit
sudo nix-collect-garbage --delete-older-than <string>
exit
git tag <string>
vim <file>
cp -r <directory>
git commit -m <string>
git add <string>
vi <file>
ls
sudo rm -rf <directory> <directory>
cat <string>
vim <file>
chown -R <string>
sudo reboot
ls
git push
then\
tar -zcvf <file>
npm start
git commit
cd <string>
cd ..
git commit -m <string>
git commit -m <string>
clear
cd <string>
ls
vim <file>
python3 <file>
git pull
git status
find . -name <file>
cd <directory>
done
cd <directory>
cd ..
adduser <string>
git add
LANG=<string> rpm -qp --queryformat <string>
exit
clear
cd <string>
ls
less <string>
ls
mv <string>
git add .
git remote -v
ls
cd <string>
htop
ls -al
git config
sort -n -r
npm run serve
cd <directory>
rm <string>
unset <string>
cd <string>
ls
ls -a
grep <string>
cd <string>
exit
read -p <string>
sudo flatpak override --reset
mv <string>
vim <file>
python3 <file>
vim <file>
read
ps aux
sudo yum install -y <string>
vim
ls
git push origin master
git commit -am' <string>
vim <file>
tar xz
more <file>
git cm -m <string>
python3 <file>
sudo apt install <string>
cd <directory>
nano <file>
grep <string>
sudo service <string>
vim <file>
git clone <URL>
cp <string>
ssh <string>
cd <string>
fg
cd <string>
docker commit <string>
cd <string>
cd ..
git clone <URL>
clear
touch <file>
npm audit fix
git clone <URL>
apt-get install <string>
cd <string>
head -1 <file>
cd ..
mvn compile
history -d <string>
git init
vim <file>
cd <directory>
mkdir <string>
npm run dev
find . -type <string> -exec <string> -i <directory>
ls
git config --global <file> <file>
ls
clear
ls
helm <string>
sudo docker rm corrade
clear
ls
sudo --no-fix-broken
git add <string>
nano <file>
sudo chmod --reference=<file> <directory>
ls
clear
dpkg -L <string>
ls
nano <file>
ln -s <string>
cd <string>
cd ..
sudo <directory> -R <string>
ls
vi
cd ..
python3
ls
sed <directory>
git init
ls
cd <string>
git config <file> <file>
cd <string>
cd <string>
ls
sudo systemctl disable <file>
sudo docker rm <string>
vim <file>
nano <file>
git init
ls
clear
rm -r <string>
sudo pacman -Rsn <string>
npm install <directory> -D
vim <file>
vi <file>
touch <file>
git status
cd ..
git status
curl -s --header <file> --referer <URL> --user-agent <string>
cd <string>
cat -n <string>
git status
sudo udevadm control --reload-rules
tail -1)..HEAD --no-merges --pretty=<string>
ls
ls
cd <string>
egrep <string>
which <string>
git push
python3 <file>
rm -rvf <directory>
source <directory>
cd <string>
ls -all <directory>
cd <string>
pwd
cd ..
exit <number>
cd ..
ls
ls
code .
print <string>
cd <string>
ls
ls -t
ls
patch -p1 <string> <file>
vim <file>
git clone <URL>
clear
systemctl restart <string>
cd <string>
chmod +x <string>
cd ..
bash
grep -i <string>
ls
cd ..
git add -A
date
exit <number>
sudo apt install <string>
find . -perm <number>
unset <string>
chmod u+x <string>
exit
sudo a2enmod <string>
git init
git add <string>
ls
cp <string>
ls
xclip
rm -rf <string>
clear
vim
ls
ls
git co -b <string>
ls
ls
git restore <file>
type <string>
git add <string>
ls
git commit -m <string>
sudo apt purge <string>
sudo stop uwsgi
date
then\
vim <file>
cd ..
ls
npm install <string>
sleep <string>
vim <file>
python <file> runserver 0.0.0.0:2016
python3 <file>
exit
vim <file>
npm run develop
git fetch
ssh <string>
ls
git init -b <string>
cd <string>
cd <directory>
cd
cd
npm create <string>
ls
cd <string>
vim <file>
sudo chown <string>
wget --continue <URL> -P <string>
kubectl create serviceaccount --namespace <string>
ls
ls
npx shadcn-ui@latest add <string>
cd -
su - <string>
fg
git status
ls
ls -lh <string>
exit
vim <file>
git checkout -
cd <directory>
scp <string>
vim <file>
clear
ls
nano <file>
ls -la
sudo apt-get install -y <string>
ls
mkdir <string>
source <file>
fg
touch <string>
git commit -m <string>
sudo dpkg-reconfigure <string>
sudo mount <directory>
clear
ls
git checkout -
clear
wc -l
sudo apt upgrade
ping <string>
cd ..
ls
htop
git pull origin
source <string>
ls
chmod --help
vi <file>
wc -l
vim
cd <string>
vim <file>
rm <string>
clear
nano <string>
dotnet <string>
ls
cd <string>
vi <file>
git init
cd <string>
sudo service <string>
cd <string>
git status
npx shadcn-ui@latest add <string>
sudo firewall-cmd --zone=<string> --add-port=<directory> --permanent
ls
ruby <string>
vim <file>
git log --pretty=<string> <string> --name-status <string>
ls -ltr
git pull
rsync <directory>
ls
clear
ls -l
read -r -p <string>
cd <directory>
exit
apt-get install <string>
grep -vFx -f <string>
git add <string>
git pull origin development --no-ff
ls
cd <directory>
cd <string>
ls
find . -name <file> -type <string> -print -delete
cd <string>
vim <file>
chmod +x <string>
ls
mv <string>
ls
sudo apt-get update
git add <string>
rm -r <string>
vi <file>
ls
find <string> -name <string> -type <string> -print0
ls
sudo sed -i <directory> <file>
find . -empty -type <string> -print -delete
find <directory> -name <string> --rm <string>
ls
cd <directory>
ls
find -name <string>
npm run test
ls -al
read -p <string>
git add .
cd <string>
python3 --version
git remote add origin <URL>
git commit --amend -reset-author
eval <string>
mv <string>
git status
cd
pkill <string>
cat <string>
chown -R <string>
ls
sudo apt-get install <string>
ls
cd <string>
ls -la
ls
cat -n <file>
cd <string>
clear
sed -i <directory>
sed -i <string>
bash
ls
git pull
ls
ls
cut -d=<string> <string>
git merge <string>
less
ping -c <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
journalctl -b -1 -e
systemctl start kubelet
sleep <string>
git pull
git clone <URL>
sudo apt update
ls
ls
ls
cd <string>
ls
vim <file>
chmod +x <string>
sudo reboot
sudo apt-get install <string>
exit <number>
apt search <string>
touch <file>
find <directory> -name <string> -type <string>
fg
cd <string>
clear
cd <string>
vim <file>
git add .
git git remote -v
docker-compose up -d --build
cp -v <string> <directory>
which <string>
ls
git status -v
systemctl disable <string>
cd <string>
cd ..
clear
cd <directory>
exit
wget <URL>
cd <string>
ls
vim <file>
mkdir <string>
fg
curl -sLo <file> --create-dirs <URL>
time go run <file>
tmux source <file>
ls
grep -Ev -e <string>
cd <directory>
sed -i -e <string>
ls
ls
ls -la
sudo apt install -f <file>
sudo apt-get upgrade
cd <directory>
grep <string>
sudo apt show <string>
git stash pop
cd <string>
clear
nano <file>
sudo sed -i <directory> <file>
ls
cd
sudo ufw enable
vim <file>
git clone <URL>
git pull
cp <string>
cd <string>
sudo apt-key adv --keyserver <string> --recv-keys <string>
ls
grep <string>
git commit -m <string>
sudo pacman -s <string>
git status
git merge <string>
man <string>
git commit
cd <string>
ls
git commit -m <string>
cd <directory>
cd <string>
cd ..
git -C <string>
sudo su
git checkout master
pwd
sudo socat -d -d <string>
tr <string>
cd
cd
ls
cd <string>
cd <string>
ls
exit
npm run test
ls
wget -q -O - <URL>
chmod +x <string>
git add -A
ls
reboot
cd <string>
cd <directory>
grep -i <string> >files
cat <string>
fg
sudo make
cd <string>
ls
docker run -it --rm <string>
sudo pacman -Su <string>
exit
cp -f <string>
cd ..
git add .
cd <string>
top
ls
ls
ls
ls
wget <URL>
ls
ls
vi <file>
gsettings set <file>
npm run register
ls
clear
date
sudo chmod <number> <string>
ls
git commit
git gc
cd ..
git branch -M <string>
cd ..
rm -f <string>
cd <string>
cd <string>
source <string>
ls
service apache2 restart
cd <directory>
ls
cd
clear
cp -r <directory>
git add .
wget <URL>
cd <string>
git add .
code .
clear
cd ..
git push origin <string>
chsh <string>
bash -v
git config --global <file> <string>
screen
vi <file>
python3 <file>
chmod <number> <string>
less
sudo install <string>
ls
chmod +x <string>
less <string>
cd <string>
ls
sudo su
find . -name <file>
git commit -m <string>
rm -v -- <string>
vi <file>
cd ..
git branch -M <string>
clear
ls
cd <string>
awk -F <string>
cd <string>
git status .
ls++ -a
clear
rm <string>
clear
ls
cd ..
more <file>
bazel <string>
ls
ps -ef
npm run start
vi <file>
npm run watch
vi <file>
sudo sed -i <directory> <file>
git push -u <string> main
git status
ls
git commit -m <string>
cd <string>
exit
ls -a
cp <string>
history -a
vim <file>
docker-compose down
sudo chmod +x <directory>
ssh <string>
ls
git clone <URL>
mv <string>
git init
read -p <string>
git pull
ls
git clone <URL>
cd ..
docker-compose up -d
sudo sed -i <directory>
chmod <number> <string>
cd
cd ..
ls
wc -c <file>
ls
clear
cd <string>
cd <string>
fg
ls
cd <string>
sudo chmod -R <number> <string>
mv <string>
ls
docker-compose up
ls
git commit -m <string>
go build <file>
git status
cd ..
ls
ip a l
clear
cd <string>
apt-get update
git init
ls
ls
git log
sudo chmod +x <string>
cd ..
git reset --hard <string>
cd <string>
grep -i <string> >files
cd
cd <string>
vim <file>
ssh <string>
code .
docker-compose up -d --build
sed -i <directory>
ls
git remote -v
cd <string>
ps aux
cd ..
docker run --rm --volume <directory>
fg
cd <string>
ls
git reset --hard
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
git init
git st --porcelain
sudo gem install <string>
sed <directory>
<directory> <directory>
git commit -m <string>
ls
ps auxf
ls
source <directory>
git fetch origin
tr <string> <string>
git init
sudo cp <file> <file>
git commit
npm start
cd
ls -la
git commit
which <string>
git st
systemctl status <string>
git reset
cd <directory>
ls wc -l <directory>
ls
systemctl status <string>
git add .
kubectl get pods -n <string>
git pull
git push
fg
git add <string>
git status
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
cd <directory>
cd <directory>
sed -E -e <directory>
vim <file>
vim
cd <string>
bash <file>
ls
git add .
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
cd <string>
awk -F <string>
ls
git commit -m <string>
ls
git co master
cd
rm <string>
ls -ltr
sudo nano <string>
grep <string>
exit <number>
ls
sudo sed -i <directory>
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git gc --aggressive --prune=<string>
ls
find . -name <string> -type <string>
ls
cd
ls -la
yarn install
ls
mv <string>
ls -lrt
curl <URL> -k
sudo sed -i <directory> <file>
npm run dev
ln -s <string>
docker exec -it <string> bash
mkdir <string>
ls
mv <string>
wc -l
ls
git log
ls
git clone <URL>
git add -A
git add .
sudo lvcreate -L <string>
ls
vim <file>
ls ..
git push
chmod <string>
python3 <file> -- <string> @CAMERA=<string> <string>
git add .
sed <directory>
mkdir -p <string>
ls
python3 <file>
ls
cd ..
git pull
git pull origin master
ls
git push origin master
find . -empty -type <string> -print -delete
git status
df -h
git push origin master
grep -i <string> >files
cd <string>
man
exit
ls
clear
service <string>
cd <string>
code <string>
ps -ef
dpkg-reconfigure keyboard-configuration
cat <string>
top
less <string>
pkill <string>
vim <file>
sudo yum install -y <string>
git clone <URL>
yarn add <string>
ls
sudo sed -i <directory> <file>
cd ..
docker logs
ssh <string>
ls
apt-get upgrade
more <file>
ls
cd <string>
ls
sudo make uninstall
dmesg
cd <directory>
ls
cd <directory>
clear
clear
du -sh <directory>
git config --global <file> <string>
done
git pull upstream
git commit
ls
cd <string>
ls
cp <string>
mv <string>
apt-key adv --keyserver <string> --recv <string>
nano <string>
ufw status
tr -d <string>
ls
tail -f -n200 <directory>
git add
git pull origin master
ssh -T <string>
awk <string>
cd <string>
clear
ls
then\
sudo apt-get upgrade
cd <string>
top
git fetch
done
cd ..
git commit -m <string>
sudo vi <directory>
git pull origin <string>
ls
cd <string>
mkdir <string>
ls
npm i --save <string>
rm <string>
ls
vim <file>
touch <string>
cat <string>
sudo install <string>
done
exit <number>
cd
git pull origin master
cp <string>
git clone <URL>
sudo ln -s <directory>
bazel test --runs_per_test <string>
git pull -all
ls
ls
ls -l
exit
cd ..
clear
clear
vi <file>
ls
ps aux
ssh dirlic@10.18.0.39 -p <number>
which <string>
git clone <URL>
ls
read -r -p <string>
chmod
ls++ -a
git pull origin main
vim <file>
cd <string>
exit
ls
ufw allow app --help
cd <string>
cd <directory>
docker run --name <string> -p <string> -v <string> -d <string>
chmod <string>
git remote add origin <URL>
cd ..
apt-get remove -y <string>
clear
find . -name <file>
source <file>
exit
cd <string>
ls
printf <string>
cat <string>
git add .
exit <number>
cd <directory>
cd ..
cp -r <directory>
reboot
pwd
apt search <string>
which <string>
journalctl -b -3 -e <string>
ls
ls
sudo apt-get install <string>
cut -f1 -d,
clear
chmod <number> <string>
git add -A
ls
ls -lh
fg
git checkout <string>
curl <string>
local <string>
pwd
rm <string>
sudo su
sed <directory>
git clone <URL>
sudo docker kill corrade
vim <file>
su - <string>
sudo rm resolv.conf.*
git commit -m <string>
find . -type <string>
sudo sed -i <directory> <file>
git remote
git commit -m <string>
ls
clear
vi <file>
find . -type <string> -print0
ls -alrt <string>
ls
clear
grep <string>
clear
mkdir -p <string>
git commit -m <string>
vim
vi <file>
xargs rm
ls
cd <directory>
cat <string>
sudo poweroff
cd ..
sh
sudo systemctl restart nginx
git commit
cd ..
ls
git add .
nl
tail +x # want to display all the lines from x to y. This includes the xth and yth lines.
sudo apt update
cd <string>
sed <directory>
git init
ls -l
find . -type <string> -name <file> -print0
npm run test:watch
help
npm i <string>
git remote add origin <URL>
git status
git add .
git push
ls -l
touch <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
vi <file>
grep -r <string>
git push origin master
cd <string>
cd ..
ls
cat <string>
history
pkill <string>
find <directory> -o <string>
git clone <URL>
vi <file>
vim <file>
sed <directory>
git reset
sudo python <file>
ls
nano <file>
cd <string>
git push
cd ..
vim <file>
sudo curl <URL>
cp -r <directory>
sudo apt-get update\
nano <file>
git config --add --global <file>
cat <string>
git clone <URL>
ls -a
cd
ls -a
ls
cd <string>
rm <string>
sudo sed -i <directory>
cd
ls
cp <string>
ls
git pull
sleep <number>
git commit -m <string>
sudo systemctl reload <string>
git commit -m <string>
cd ..
ls -lAf
npm run start
sudo usermod -aG <string> <string>
git add <string>
git reflog expire --expire=<string> --all
ps axfu
cd <string>
ls -l
sudo pacman -Ss <string>
ssh dirlic@10.18.0.39 -p <number>
history
sh <file>
vi <file>
vi <file>
cd <string>
git commit -m <string>
ls
vim <file>
fg
grep <string>
npm
sudo yum <string>
ls
ftp <string>
exit
ls
ls
git push
npm run coverage
git init
ls
wget -qO- <URL>
cd ..
ls
service apache2 reload
sudo dnf install -y <string>
git status
cat <string>
sudo less <directory>
python3 <file>
clear
git config -f <directory> --remove-section <string>
cat <string>
sh <file>
export <string>
ls
npm i
cd <string>
ls
exit
cp <string>
cd <string>
git init
docker build --build-arg <string> -t <directory>
cat <string>
less
ls -al
cd <string>
ps ax
rm <string>
vim
ls
head -n <string>
cd <string>
cd <string>
cd <string>
git commit -m <string>
exit
ls --help
sort
git commit -m <string>
curl <string>
ls
ls
su root
vi <file>
git clone <URL>
git add .
rmdir <string>
ls
git clone <URL>
rm -r <string>
git commit -m <string>
ls
ls
ls
ps aux
rm <string>
ls -la
sudo service nginx reload
cut -c <string>
cd <string>
git checkout master
exit
tail <file> -n <number>
git add .
gpg --help
cd <string>
git add <string>
ls
git fetch
sed -i <directory>
cd <directory>
cat <string>
cd
code .
ls
sudo chmod <number> <string>
cd <string>
vim <file>
read -p"> <string>
git clone <URL>
git pull origin development --force
shutdown -h <string>
cd ..
cd ..
tmux new-session -d <string>
ls
clear
git add <string>
sudo find . -empty -type <string> -print -delete
git status
ls
vim <file>
git rm -r --cached
cd <string>
sudo mkarchiso -v -w <string> -o <string> slim-iso
clear
git push -u <string> main
ls
git branch -M <string>
systemctl restart <file>
cd <directory>
cd <string>
python3 -m <string> install --no-cache <string>
ls
git branch --no-color <string> <directory>
chmod <number> -R <directory>
fg
ls -lt
sudo rm qbittorrent-cli.repo
grep <string>
ls
ls
vim <file>
history
git branch --no-color <string> <directory>
ls
ls
vim <file>
fg
git push -u <string> master
ls
read
sudo pacman -Q <string>
sudo su - <string>
touch <string>
docker tag <string>
ls
sudo apt-get install -y <string>
vi <file>
clear
bash <file> --clean
ls
cd ..
apt-get autoremove -y
git merge develop
git commit -m"commit <string>
ls
fg
vim
git status
ls
sudo code <file>
read -p <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> --wrap=<string> --from <string> --to <string> <string> -o <file> <string> {} \
clear
tmux set-window-option -g <string>
sudo apt -t <string>
sudo nano <file>
ls
ls
fg
ls
clear
cd <string>
git push -u <string> master
chsh -s <directory>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
mkdir <string>
npm install react-audio-recorder --save
git clean -fxd
su - <string>
exit
sudo make
ps # prints a line of information about the current running login shell and any processes running under it
cat <string>
ps aux
sudo chmod +x <string>
sudo -s
ls
ls
sudo apt-get update
ls
clear
git clone <URL>
npm install
vim <file>
<directory> <string>
cd <directory>
ls
git remote
grep <string>
cd ..
ls
vim <file>
exit
docker-compose
git push origin
read -r -p <string>
cd <directory>
ls
ls
wget <URL>
docker rm <string>
pwd
cd <string>
ls
cd <string>
git tag -a <number> -m <string>
find . -empty -type <string> -print -delete
sudo nmcli con <string>
ls
git init
exit
sort -n <string> <string>
sudo netstat -nlpt
git status
ls -l
sudo usermod -aG <string> <string>
docker-compose up -d --build
rm <string>
git push
cd <directory>
ls
clear
ls
ls
history
mvn archetype:generate <string>
ls
ls
ls
ls -altr
vim <file>
ls -l
git status
sudo groupadd -f -r <string>
cd
docker-compose
git add .
sudo apt upgrade
uname -a
ls
exit <number>
sudo apt-get install <string>
vim <file>
sudo nginx -s <string>
clear
ls
pulseaudio -v
vim <file>
mkdir <string>
git init
ssh dirlic@10.18.0.39 -p <number>
cd <directory>
cd <directory>
touch <file>
ls
rm -rf <string>
grep <string>
ls
vim <file>
sudo ansible-playbook <file>
ls
capsctrl <directory> & disown
cd ..
git branch
git status
cd ..
git clone <URL>
git checkout <string>
vim <file>
git add <string>
cd <string>
cd <string>
ls
cd <string>
rm <string>
sudo pacman -Syu
ls
man -k <string>
ls
sudo apt install -y <string>
npm run start
cd <string>
git add .
clear
docker run <string>
git please
git add <string>
git pull --all <string>
ls
clear
git status
find . -mindepth <number> -type <string> -name <string> -exec <string> -c <string>
ls
git push
vim <file>
cd <string>
cp -R <string>
sh <file>
ls
git pull
npm install play-sound --save
sudo service nginx restart
sudo dnf install <string>
git push origin master
ls
git config --global <file> <string>
mkdir -p <string>
cd <string>
sudo rm -rf <string>
man <string>
which <string>
mkdir <string>
rm -rf <string>
git add .
ls
git push
grep <string>
grep <string>
cd ..
ls
vi <file>
git status
sudo apt install --fix-broken -o <string>
cp -r <directory>
docker ps
git pull -v <string>
cd <string>
git add .
sudo ifconfig
cd
cd <directory>
cd ..
ls <directory> -a
cd ..
cd <directory>
cd ..
cd <string>
exit <number>
grep <string>
hostname -i
git add .
who
git clone <URL>
sudo <directory> restart
strings hidden_variable -n <string>
grep <string>
git add .
cd <string>
git push origin --force --all
mv <string>
cd <string>
ls
ls
clear
fg
git commit -m <string>
ls
git push origin main
cd <directory>
sudo sed -i <directory> <file>
cd ..
wc -l
git commit -m <string>
date
ls
ls
python3 <file>
sudo apt-get install -y <string>
git stash
chmod +x <string>
ls
sudo gem install <string>
git reset --hard
ls
python3 <file>
grep <number> -wr
cd ..
rm -rf <string>
sudo groupdel docker
read -s -p <string>
ls
less <string>
cd <directory>
cd <string>
git remote -v
ls
cd <string>
cd ..
rm -r <string> -v
git checkout -b <string>
rm <string>
exit
git add .
cp <string>
export <string>
mkdir <string>
ls
shutdown
cd <string>
ls
sudo ln -s <directory>
ls
npm i <string>
docker login
apt install sudo -y
clear
cp -r <directory>
git commit -m <string>
git status
grep <string>
git init
vi <file>
pacman -S <string>
cd <directory>
git add <string>
vi <file>
sudo nano <directory>
sudo apt-get install <string>
cd <string>
git push
cd <directory>
chmod +x <string>
ls
find . -type <string> -exec <string> <number> -- <string>
git clone <URL>
git stash
history
sudo su
cd <string>
exit
git commit
rm -vf <directory>
dpkg -i <file>
ls
capsctrl <string>
git pull
ls
ls
code --in-process-gpu\
npm run coverage
ls -lh
sudo apt-get -y <string>
tail -f <directory>
mv <string>
pkill <string>
git filter-branch --force --index-filter <string>
g++ -std=<string> <file> -o <string>
ls
ls
mkdir -p <string>
cd <string>
ls
ls
python3 <file>
ls
fg
cd <directory>
more <file>
ssh -T <file>
ls
cd <directory>
reboot
git push
ssh-add
sudo tail -f <directory>
rm -r <string>
ip
ls
ls
systemctl enable <string>
python3 <file> runsslserver 192.168.0.53:10006 --certificate <file> --key <file>
curl <string>
capsctrl <directory> & disown
sudo apt install <string>
cd
cd <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
ls
grep $1 -C <number>
read -rp <string> <string>
python2
ls
git status
sudo cd -s <string>
cd <directory>
cd ..
ls -alF
ls -l
sudo git fetch <string>
nano <string>
cd <string>
bash
cd <string>
clear
sudo sed -i <directory> <file>
cd <directory>
grep -Eh <string>
mv <string>
ls
git status
git add .
cd <string>
git init .
cd <string>
zgrep --h
fg
cd <string>
ls
su -s <string>
ps
ls > <file>
exit
ls
find . -size <string> -a -print -a -exec <string> -f <string> \
find . -name <string> -print0
sudo chmod +x <string>
zgrep -i -E -o --no-filename <string>
npm i <string>
ls
make clean
ls
find . -size <string> -a -print -a -exec <string> -f <string> \
grep <string>
git remote -v
sed -i <directory>
clear
code .
cat <file> -n
cd <string>
exit <number>
git checkout -b <string>
cd <string>
vim <file>
git add <string>
<directory> <string>
ls
sudo apt-get remove <string>
wget <URL>
find . -iname <string> -type <string>
man <string>
vi <file>
exit <number>
nano <file>
ls
mkdir <string>
code <string>
sudo apt install <string>
cd <directory>
sudo apt-get update
sh <file>
history -c
sudo apt-get upgrade -y
grep -E <string>
git push
clear
ls
git commit -am <string>
cd <string>
git status
sudo apt-get -y <string>
ls test
git log
exit
cd <directory>
cd ..
ls
cat <string>
cd
sudo su
ls -la <directory>
git config --global --unset <file>
cd <string>
nano <file>
exit
wget <URL>
git add .
setg RHOSTS <file>
git add .
python3 <file>
git status
cd <directory>
npm run build
cd <directory>
ls
vim <file>
cat <string>
ls
sudo apt-key add -
exit
cat <string>
cd
git remote -v
vim <file>
ls
rm -rf <string>
read -s -n <number>
sed -i.bak <directory>
git push
sudo iptables -L
cd <string>
vi <file>
nohup <string>
git add .
rm -rf <string>
ls
exit
cd ..
sudo sed -i <directory>
mkdir <string>
ls
sudo mkarchiso -v -w <string> -o <string> slim-iso -r
cat <string>
cd <string>
ls
sudo apt-get install <string>
ls
ls
fg
ls
curl <string>
sudo snap install node --classic --channel=<number>
git add .
sudo pacman -Q
find
sed <directory>
cd <string>
ls
sudo apt-get --assume-yes <string> <string>
ls -la
git mv <string>
exit <number>
wget --header <string>
kill -9 <number>
docker rmi <string>
git commit -m <string>
git config --global <file> <file>
vi <file>
ssh-keyscan
ls -latr <directory>
ls
mkdir <string>
cd <string>
cd ..
ls
brew cask install <string>
source <file>
ls
grep <string>
sudo nmcli con mod <string> <string>
cd <string>
ls
cd <directory>
ls
sudo kill <number>
git commit -m <string>
nano <string>
git push -u <string> master
ls
codedown javascript > <file>
git add .
vim <file>
cd ..
cat <string>
tar -cvf <string>
open .
git status
git add .
vi <file>
curl --silent <string>
clear
ls
ls
cd <directory>
sudo apt-get update
cd
mkdir <string>
cd <string>
ls
ls
cd <string>
fg
sudo chown -R <string>
unzip <file>
export <string>
ls
rm -Rnewforgit.txt
cd <directory>
git commit -am <string>
rm -rf <string>
wget <URL>
npm install <string>
sed -i <directory>
python3 <file>
sudo apt-get update
rm <string>
cd <directory>
ls
git status
vim <file>
vim <file>
git pull
git push --set-upstream <string>
grep <string>
sleep <number>
git remote rm <string>
sleep <number>
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
vi <file>
ls
sudo apt upgrade
sed <directory>
cd <string>
git push
cd <directory>
sudo docker rm corrade
grep <string>
chmod +x <string>
ls
cd <string>
clear
ls
grep <string>
ls
sudo apt -o <string> -o <string>
git clone <URL>
ls -la
npm i react-native-reanimated-carousel --force
xargs -0 <string> -rf
cd <string>
cd <string>
ls
cd <directory>
curl <string>
grep <string>
sudo xbps-install <string>
git clone <URL>
vi <file>
ls
chmod +x <string>
clear
clear
ls
sudo systemctl daemon-reload
nano <file>
chmod u+x <string>
cd <string>
cd <string>
read -p <string>
docker-compose up -d
ls -l
bash <file>
nl
ls
ls
ls
cd <directory>
ls
source <string>
touch <file>
sudo tee <directory>
exit
ls
ls -la
ls
cd <string>
ls -ltr
sudo apt install <string>
npm run dev
cd <string>
cd <string>
cd <string>
mail -v -s <string>
cd <string>
ls
ls
clear
git commit -m <string>
less <string>
chmod <number> <string>
make clean
cd <directory>
vim <file>
wget -q <string> -O <file>
ls
ls -lAF
cd <string>
ls
git add .
cd <string>
ls -lh <string>
docker-compose -f <string>
git log
sudo apt-get autoclean
source <string>
sudo apt update
sudo apt-get install <string>
nano <file>
cd ..
done
nano <string>
sudo wget <URL> -O <file>
ls
sed -i <directory>
sudo chmod -R <number> <string>
git log
egrep -v <string>
xargs sed -i <directory>
cd <string>
clear
podman run -p <string>
cd
cd <directory>
ls -alrt
sudo touch <directory>
ls
awk <string>
rm -r <string>
ls
git status
sleep <number>
ls
git update-ref -d <string>
history -d <string>
ls
ls
ls
git add
ls
tail -f <directory>
cd <string>
cd <directory>
docker
apt-get remove --purge <string>
git add <string>
apt-get update
sudo reboot
ls
ls
ls
docker ps
cd <string>
ls
vim <file>
vim <file>
ping <string>
git config <file> <string>
node <file>
clear
source <string>
cd ..
fg
mkdir <string>
vim <file>
ls
cd ..
wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=<string> --domains <file> --no-parent <URL>
cd <string>
ls
ls
cd <string>
clear
read <string>
cd ..
cd <string>
cd <string>
cd <directory>
git clone <URL>
git status
git push -u <string> master
git add .
npm i <string>
exit <number>
cd <string>
mkdir -p <string>
ls
ls
ls
sudo apt --fix-broken <string>
cd <string>
pwd
sudo rm -r <string>
head -y <file>
vim <file>
cd <string>
df
cat <string>
<directory> <string>
ls
git status
rm <string>
read -rp <string> <string>
cd <directory>
tr <string>
ls
npm install
vim
xargs grep <string>
npm install
gsettings set <file> <string>
ls
ls
cp -v <string> <directory>
ls
rm <string>
sudo make uninstall
ls
apt-get install <string>
cd ..
cd <string>
ps -elf
time <string>
git push
vim <file>
ls
git add <string>
vim <file>
which <string>
vi <file>
rmdir <string>
vim <file>
git remote -v
cat <string>
cd <string>
cd <string>
git remote remove origin
ps
read -a <string>
cd <string>
git status
source <directory>
cd ..
cd
cd <string>
npm-recursive-install
clear
cp <string>
git pull
screen
ls
python3 <file>
sudo reboot
mkdir <string>
cd ..
clear
git rm -r --cached <string> -f
ls
git add -A
sudo vim <directory>
mv <string>
sed -i <string>
git push -u <string> master
python3 <file>
xargs -L1 <string>
ls
cd <string>
pwd
vi <file>
find . -name <file> -type <string> -print -delete
wget <URL>
git --version
ls
find -x <string> -type <string> -name <file>
ls
source <directory>
apt-get install <string>
cd ..
cd <string>
grep <string>
npm start
cat <string>
history
ls
git commit -m <string>
ssh -X <string>
cd <string>
ls
cd
ls
npx <string>
ls -la
git add .
clear
git checkout <string>
ls -la <directory>
vim <file>
exit
sudo crontab -e
find . -name <file>
sed -i <string>
vim <file>
cd
vim <file>
cd ..
docker -v
sudo ufw allow <string>
sudo curl <URL> -o <directory>
sudo apt-get upgrade
mkdir <string>
clear
vim <file>
exit <number>
git push origin <string>
ls
git commit -m <string>
git push
bash <file>
grep <string>
source <directory>
git commit -m <string>
git status
sudo nano <directory>
file <string>
sudo yum install <string>
git status
exit
du -sh
ps -fC <string>
cd <string>
mkdir <string>
git add .
ls
view <string>
vim <file>
find . -name <file>
docker-compose up -d --build
vi <file>
cd <string>
sudo systemctl restart <string>
find . -name <file> -type <string> -print0
cd <string>
which <string>
git push
ls
wget $flutterLINK -O <file>
git add <string>
cd <string>
hostname
sudo apt-key add -
git commit -m <string>
clear
sudo sed -i <directory> <file>
openssl -v
systemctl status
ls
ls -al
python3 <file>
sudo sed -i <directory> <file>
docker-compose -f <string>
xcode-select --install
rm -rf -- <string>
docker login
ls
cd <string>
git push
vi <file>
find . -iname <file>
cd ..
ls
history
read -s -n <number>
which <string>
ls
ls
ls
docker-compose up -d --build
less <string>
ls
rm -rf <string>
grep <string>
sudo systemctl enable <string>
dmidecode
cd <directory>
codium -n --profile <string>
ps -la
ls
ls
ls
git restore <file>
exit
mkdir <string>
cd <string>
ls
git log
ls
htop
source <file>
sort -k2,2n
ps -a
ls -la
npm i <string>
clear
ls
cd <directory>
fg
git add <string>
sudo <file> -v -r -w <string> -o <string>
cd <string>
curl -v -H <string>
git diff
sudo apt-get -y <string> <string>
sudo nano <string>
ls
cd <string>
help
cat <string>
cd ..
git log
npx create-react-app <string>
cd ..
cd ..
ls
mkdir -p <string>
grep -i <string>
docker images
head -c <string>
git commit
curl --silent <string>
sleep <number>
grep <string>
kill -SIGUSR1 <number>
npm install <string>
git clone <URL>
fg
mkdir -p <string>
ls
git log --pretty=<string>
ls
cd <string>
mkdir <string>
cd <directory>
git add .
sudo chmod -R <string>
pwd
vim <file>
ls -lAF <string>
sudo certboat --nginx -d <file>
<directory> <directory>
tmux
vi <file>
git pull
pwd
man -k <string>
ls
cd <string>
rm -r <string>
cd <string>
chmod <number> <string>
more <file>
npm run dev
bash
sudo service <string>
cd <string>
exit
ls
find . ! -type <string> -exec <string> <string>
<file> program
git commit -a -m <string>
ls
python3 <file>
ls
cd ..
tmux a
vim <file>
sudo apt-get install <string>
source <string>
ls
ls
cd <directory>
cat <string>
git add <string>
sudo apt-get install nodejs -y -qq
cd <string>
git clone <URL>
cd <string>
cd <string>
cd <string>
grep <string>
ls
npm run test
ls
cd <directory>
git clone <URL>
chmod -options <string> # lets you change the read, write, and execute permissions on your files
ls -l
find <directory> -type <string> -print0
git commit -m <string>
git diff <string>
vim <file>
sort -u
find . -empty -type <string> -print -delete
clear
cd <string>
sudo bash --rcfile <file> -ci <string>
cd ..
cd
git stash
sudo apt-cache search <string>
vim <file>
cd ..
cut -f <string> -d <string>
man <string>
sudo apt remove --purge <string>
sudo pacman -R <string>
sudo systemctl stop <file>
ls
cat <string>
cd <string>
sudo apt-get install <string>
ip addr
sleep <number>
sed -E -e <directory>
git init
tail -f <string>
cut -f1 -d, <file>
rm <string>
cd <string>
vim <file>
rm -rf <string>
grep <string>
cd <string>
ls
read <string>
cd <string>
ls
rm -r <string>
sleep <string>
rm <string>
sudo sh <file>
rake
cd <string>
sudo python <file>
ls
ls
git status
ls -al
cd <string>
exit
ls
vim <file>
ls
yarn <string>
cd ..
cd <string>
ls
ls -C
mkdir --help
sudo nano <directory>
ls -lt
cd <string>
ls -l
cd
cd ..
cd <string>
git rm --cached <string>
ls
sudo apt install -y <string>
vim <file>
mkdir <string>
vim <file>
rm -rf <string>
ls
sudo chmod <number> <directory>
grep <string>
export <string>
ls
cp <string>
vim <file>
ssh
xargs -L1 <string>
clear
exit
sudo emacs <string>
cd ..
clear
git clone --branch <string>
kill <number>
npm run test
ls
ls
fg
ls
cp
exit
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
git clone --bare <string>
mv <string>
cd <directory>
vim <file>
done
chmod <number> <string>
cd <directory>
npm install
vim <file>
ls
git branch -M <string>
git add
cp <string>
cd <string>
cd <string>
ls
find . -iname <string> -exec <string> -rf <string>
export <string>
tar --help
sudo sed -i <directory>
wget --output-document=<file> <URL>
grep <string>
ls
git config --list
rm -rf <string>
clear
fg
cd <directory>
npm install <string>
git status
git status
git commit -m <string>
git add .
cd <directory>
ls
exit
cat <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
sudo sed -i <directory> <file>
rm <string>
cd <string>
docker ps
git push -u <string> master
ls
git push -u <string> main
python3 -V
git commit -m <string>
cat <string>
ls
ls
cd <string>
cd ..
chmod -x <file>
git add -A
mv <string>
ls
cd <string>
local -a <string>
npx <string>
ls
clear
touch <file>
ls
cp -r <directory>
cd <string>
done
ls
cd <directory>
git stash
sudo apt install
cat -n <string>
cd <directory>
ls
mkdir -p <string>
git tag -d <string>
ls
touch <string>
cd ..
vi <file>
git push origin master
done\
rm -f <string>
vi <file>
cat <string>
vi <file>
npm run test
cd -
grep -r <string>
yarn install
git status
cd <directory>
source <directory>
ls
sudo mkarchiso -v -w <string> -o <string> slim-iso
time <string>
chmod +x <string>
ps ax
ls
grep <string>
git init
sudo touch <file>
<directory> <directory>
git status
ls
man <string>
cat <string>
ls
ls
git add -
cp <string>
kill <number>
git status
ls
curl --version
git status
npm run test
npm run dev
vi <file>
ls
man <string>
cd <string>
sudo kill <number>
curl -s <string>
hexdump -C
ls
ls
sed <directory>
source <directory>
git rev-list -n <number>
sudo apt update -y
sudo vi <directory>
cat <string>
docker exec -it <string>
wc -l <string>
sudo su
ping <file>
yarn <string>
git branch -r
mv <string>
git add -A
git status
git clone -b <string>
systemctl start docker
ls
cd <string>
fg
git status
npm i --save-dev <string>
ls -l
pwd
cd <string>
exit
rm <string>
vi <file>
df -h
cp <string>
ls
cd ..
read -rp <string> <string>
shutdown -h <string>
npm run bench -- -c <file> -n <file>
mkdir <string>
sudo sed -i <directory> <file>
git add <string>
unzip -o -d <string>
source <string>
fg
ls
npm
git bisect <string>
cd <string>
git commit -m <string>
sudo node <file>
man <string>
grep <string>
clear
sudo rm -r <string>
vim
ls
ls
cd <directory>
ls
sort
npm audit fix
<directory> <directory>
ls
find . -name <file>
sudo start uwsgi
cd <string>
ls
sudo ldconfig
awk <string>
sudo wget --quiet <URL>
clear
sudo apt-get install -y <string>
cp <string>
ls
sudo sysctl -w <string>
npm install --legacy-peer-deps
pkill <string>
sudo npm start
unset <string>
shutdown now
ls
read -r <string>
git checkout --their <file>
cd ..
cd <string>
screen -r
vim <file>
ls -la
top
ls
cd
ls
exit
ls -la
rm -rf <string>
sed <directory>
fg
ls
clear
npm i gulp-cli -g
git status --porcelain -s --untracked-files=<string> <string>
cd
git merge --abort
clear
rm <string>
ls
curl -sL <directory> -o <file>
awk <string>
vim <file>
vi <file>
read -p <string>
cd ..
ls
set <string>
vi <file>
nano <file>
cd ..
cd <string>
git status
git cat-file -p <string>
cd <string>
ls
sh -s -- -y
cd <directory>
sudo systemctl status <string>
scp <string>
sudo reboot
ls -la
mount -t <string> -o <string>
export <string>
mkdir <string>
ls
git pull
sh <file>
mkdir <string>
cd
git clone <URL>
git pull
kubectl apply -f <string>
ls
ls
clear
cd <string>
ls
grep -A <number> -n <string>
sudo chown <string>
cd <string>
sed -i <string>
wc -l
nano <string>
git checkout <string>
ls -ltr
man <string>
cd
cp <string>
git log --date=<string> --pretty=<string> <string>
sudo apt-get update
su -apach2
ls
ssh -L <string> -N -f -l <string> <string>
git remote add origin <URL>
find . -iname <file>
rm -rf <string>
ssh dirlic@10.18.0.39 -p <number>
chmod +x <string>
ls
groups
sort > <file>
python3 <file> -- <string> @CAMERA=<string> <string>
sudo apk add <string>
vi <file>
git commit -m <string>
cd..
clear
git add .
curl <string>
fg
cat <string>
nc <number> <number>
curl -T <directory> <string>
ls
fg
git commit -m <string>
ls
git add <string>
cat <string>
docker exec -it <string>
rm <string>
exit
git add <string>
vim <file>
sudo cp <string>
git fetch
ls
vim <file>
ls -shS <string>
ls
git commit -m <string>
python3 -m <string> venv
sudo mkdir <string>
git status -v
cd ..
screen -S <string>
tmux source <file>
ls
cd ..
screen -r <string>
git commit -m <string>
shutdown
clear
sudo sed -i <directory>
ls
ping <file>
sh <file>
read <string>
cd <string>
cd <directory>
sudo systemctl restart <string>
exit
cd <string>
ls
mkdir -p <string>
cd ..
ls
vim <file>
cat <string>
npm run dev
rm <string>
git remote set-url origin <string>
ls
ls
cd <directory>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
cd ..
ruby -e <string>
sudo debootstrap --include=<string> --components=<string> <string>
git init
cd <directory>
exit
ls
screen -r <string>
ln -s <string>
rm -rf <string>
sudo apt-get -y <string>
sudo apt update
rm -r <string>
cd <string>
cat <string>
cd ..
sudo ufw status
cd <directory>
cd
git add <string>
read <string>
mv <string>
cd ..
cd <string>
df -h
vim <file>
find . -name <file>
npm ERR! <string>
clear
vim <file>
ls
brew services <string>
ls
git add -A
time go run <file>
curl -sL <URL>
fg
sh <file>
cd ..
git push
chmod -x <file>
git push
sudo setxkbmap -layout <string> -variant <string>
ls
ls
clear
ls
ls
cd ..
cd ..
git init
apt-get install <string>
grep <string>
cd ..
done
cd
sudo apt-get update
ls
ls
exit
grep -i <string> >files
ls
git pull
sudo rm -rf <string>
sudo apt install <string>
git update-ref -d <string>
ip route restore --help
ls
npm install
vim <file>
ls
sudo chown -R <string>
git status
sudo npm install <string>
git commit -m <string>
ls -lrt
ls
git push
clear
pwd
ls
git remote -v
vim <file>
cd <string>
ls -r <string>
vi <file>
git init
git add .
git log --full-history <file>
git checkout <string>
cd <string>
cd <string>
grep <string>
git remote add origin <URL>
git checkout <string>
cd ..
sleep <number>
git commit -m <string>
git commit -m <string>
ls
sudo apt-get update
wget <URL>
cd <string>
fg
scp <string>
git add <string>
mv <string>
docker run -d <string>
git commit -m <string>
ls
cd <string>
cd ..
clear
find . -type <string> -name <string>
vim
find . -name <file> -type <string> -print -delete
touch <file>
ls
sudo apk add <string>
screen -r <string>
sudo systemctl start <string>
cd <directory>
ls
cd <string>
ls
ls
exit
ls
cd <string>
cd <directory>
cd <directory>
git commit -m <string>
ls
vim <file>
sudo apt-key adv --keyserver <string> --recv <string>
sudo kill -9 <number>
ls -latr
sudo pacman -Syu
rm -r <string>
git symbolic-ref --short <string> <string>
fg
cd <string>
git init
ls
exit
ls
else
cd <string>
cd <string>
cd <directory>
npm run test
sudo install -b <file>
npm i
apt install -y <string>
cd ..
clear
cp -v <string> <directory>
ls
yarn install
exit
gzip -d <file>
nano <string>
rm <string>
git commit -m <string>
cat <string>
sudo <directory> -m <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
which <string>
sudo apt-get install <string>
cd ..
vi <file>
sudo nvim
sudo apt-get install <string>
python3 <file>
ls
sudo mv <string>
sudo add-apt-repository <string> [arch=<string> <URL>
cd
grep <string>
git status
git commit -m <string>
git branch
clear
cat <string>
cd <string>
ls
ls
htop
sudo rm -rf <string>
git commit -m <string>
cd <string>
vi <file>
sudo apt-get clean
mv <string>
ls
cd ..
ln -s <string>
python3 <file>
ls
npm start
exit <number>
sudo pip install -U <string>
python3 <file>
git co HEAD .
export <string>
cd <string>
git status
ls
sudo dnf install -y <string>
clear
git add -A
git add .
sudo docker run -it --rm --name <string> --entrypoint <string> -u <string> --privileged -v <directory>
cd <string>
clear
npm install
cd ..
docker run <string>
xargs jq -r <string>
top
cd ..
cd <string>
git add.
export <string>
cd <string>
git add <string>
dir
ls
script --help
git config --global <file> <file>
sleep <number>
systemctl status <string>
exit
cd
cd <directory>
cd <directory>
sudo rm -r <string>
ls
history
npm run dev
cd
ping -c <string>
git push
python3 <file>
tail -n10 -f <file>
sudo docker exec -t <string>
source <file>
docker ps
cd <directory>
vim <file>
vi <file>
ls
iptables -L
git status
python3 -m <string> venv
cat <file> -n <number>
<directory> <string>
ls -lh
sudo vi <directory>
done
dir
sudo apt-get install <string>
exit
git commit --amend --reset-author
vi <file>
sudo vim <directory>
sudo mv -f <string>
git remote add origin <URL>
cd <directory>
mv <string>
sudo chmod -R <number> <string>
sudo make install
cd <directory>
git status
ls <directory> -l
exit
sed <directory>
ssh -i <string> remote_user@remote_host
vim <file>
git clone <URL>
yarn add <string>
cd <directory>
yarn <string>
ls -lh
sudo rm -r <string>
ls
ls
ls
sudo nano <directory>
reset
cd <string>
git push
ls
sudo chmod -R <number> <string>
git clone <URL>
wc -l <string>
sudo -E <string> -
mkdir <string>
python3
exit
exit
ls
sudo find . -name <string>
cd <string>
nano <string>
cd ..
git add .
docker run --help
sudo -l
sort -u
fg
rm -rf <string>
git add .
cd <string>
rmdir <string>
mv <string>
clear
done
cd ..
mkdir -p <string>
date
tail -f <directory>
nano <string>
clear
git init
git add <string>
find src
ls
read -rp <string> <string>
bash <file>
vim <file>
vim <file>
sudo pip install <string>
grep <string>
vi <file>
clear
sudo apt-get install <string>
git rebase <string>
cd <string>
clear
ls
unset color_prompt force_color_prompt
ls
curl <string>
ls ..
mkdir <string>
fg
sudo zypper -h
grep --color <string>
curl -sL <URL>
vi <file>
find . -empty -type <string> -print -delete
cd <directory>
cd <string>
sudo rm -r <string>
apt-get install -y <string>
sudo dnf install -y <string>
mkdir <string>
cd ..
sudo yum install <string>
cd <string>
cd ..
ls
docker exec -it <string> -- <string>
cd <string>
read <string>
docker exec -it <string>
ls
cd ..
vim <file>
git push
git commit -m <string>
vi <file>
mkdir <string>
mkdir <string>
nano <file>
ls
ls
ls
ls
ls
ls -lt
sudo apt autoremove
kill <number>
<directory> <string>
tcpdump -D
sudo npm install -g <string>
git remote remove origin
fg
cd
python3 <file>
cd <string>
touch <file>
sudo dpkg --configure -a
exit
cd <string>
ls
ssh <string>
git push -f <string> <string>
sudo sed -i <directory> <file>
cd <directory>
cp <string>
ls
sudo apt-key adv --keyserver <string> --recv-keys <string>
cd <string>
dpkg-shlibdeps: erro: <string>
npm run test
wget -r <URL>
cd <string>
man <string>
exit
time <string>
git checkout <string>
sudo curl -SL <URL> -o <directory>
git push --set-upstream <string> master --force
ls
ssh dirlic@10.18.0.39 -p <number>
reboot
ls
ls
ls
exit <number>
fg
git push origin <string>
grep -r <string>
cd <string>
find <directory> -type <string>
cd <directory>
wget <URL>
vi <file>
cd <string>
docker run --name <string> --restart=<string> -d -p <string> -v <file> -v <directory>
cd ..
apt-get -f <string>
ls
chmod <number> <string>
cd ..
cat <string>
vi <file>
df
sleep <string>
ls
ls
ls
ls
grep <string>
sudo sed -i <directory>
yarn install
mount -B <directory>
cd <string>
source <string>
ls
cd <string>
git status
git pull
ssh <string>
ls
cd ..
ls
grep -Eio <string> <string>
sudo du -h --max-depth=<number>
cd
sudo ip route <string>
cd <string>
vim
cp <string>
dpkg -L <string>
clear
ls
find <directory> -name <string>
find . -name <string> -exec <string> <string>
grep -i <string> >files
git checkout <string>
kill <number>
cd <string>
git push -u <string> master
cd
cd
git status
sudo ln -s <directory>
git log
wget <URL>
docker-compose up -d --build
npm install --location=<string> <string>
clear
git push
ls -alrt
git add .
git add <string>
git commit -m <string>
mv <string>
clear
docker exec -it <string> bash
npm run test
curl -k <URL>
find . -empty -type <string> -print -delete
npm install
grep -Ev <string>
vi <file>
ls
cd <string>
clear
git branch
time <string>
sudo apt install <string>
ls
git push
ls
cd <string>
git init
sudo apt-get install -y <string>
du -h <directory>
ls
hostname
grep -i <string> >files
su
git rebase <string>
cd <string>
cd <string>
git merge <string>
sudo apt-get install <string>
ls
scp <string>
git reset --hard
ls -la
docker exec -it <string> bash
cd <string>
code .
mv <string>
sudo ports -u
cd <string>
cd ..
git add <string>
cd <directory>
ls
sudo add-apt-repository <directory>
sudo apt-get install <string>
vi <file>
cd <directory>
ls
git add -A
exit <number>
bash
fg
rm -r <string>
true
rm <string>
ls
clear
top
rm -rf <string>
cd ..
cd <directory>
journalctl -xe
docker-machine rm -y <string>
git add .
cd <string>
ls
cd ..
git add <string>
git rm <string>
vim
read -r <string>
git commit --allow-empty --message <string>
sort
cd <directory>
cd <string>
ls
rm -r <string>
cd <string>
cd ..
vi <file>
read <string>
apt-get install <string>
git push origin <string>
curl -H <string>
exit
sed <directory>
systemctl enable --now --user <file>
git config <file> <string>
git add <string>
git pull
ls
curl -fLo <file> --create-dirs <string>
clear
git commit
vim <file>
ls
cd ..
ls
cd <string>
ls
sleep --help
cd <string>
cp -i <string>
apt-get install <string>
bazel <string>
clear
ls
vim <file>
git pull
cd <string>
cd <string>
ls
cd <directory>
vim <file>
cat <string>
docker ps
xrandr -q
cd ..
grep -E <string>
sudo docker kill corrade
chmod u+x <string>
exit <number>
exit
ls
dpkg -l
ls
mv --help
ls -l
ls
sudo make install
cp <string>
ls
sudo ifconfig <string>
tail -f <string>
ls
git status
exit <number>
cd <string>
curl -sSL <URL>
ip addr <string>
ls
git push -u <string> master
rm <string>
ls
sort -n -r
vim <file>
chmod u+x <string>
git clone <URL>
cd <string>
ps
unzip <file>
clear
ls
cd <string>
git stash
git add .
python3.9 --version
curl <string>
exit
cd
sudo vi <file>
rm -f <string>
exit
apt-get install <string>
mv <string>
cd <string>
grep -irl <string>
docker exec -it <string> bash
rm -rf <string>
nano <file>
sudo systemctl status <string>
cd <string>
vi <file>
ssh <string>
apt-get -y <string> <string>
git reset --soft <string>
fg
python3 <file>
cp <string>
mv <string>
read -rp <string> <string>
sudo vim <directory>
git remote add origin <URL>
rm -r <string>
ls
mv <string>
awk <string>
sudo xbps-install -Sui
su root
ls
sudo kill -9 <number>
ssh -t <string>
cd <directory>
clear
cd ..
cd <string>
ls
kubectl --namespace <string>
cd <string>
ls
sudo dpkg -i <file>
pwd # tells you where you currently are
sed <directory>
vi <file>
tail +n # Print nth line from file.
sudo sysctl <string>
git commit -m <string>
cd ..
npm install react-native-snap-carousel --force
export <string>
less
clear
git pull
exit <number>
cd <directory>
ls
git push origin <string>
vi <file>
sudo reboot now
cp <string>
clear
git remote set-url origin <string>
cat <string>
vi <file>
npm install
curl -sL <URL>
sudo nginx -t
cd
rm -r <string>
cmake --build <string>
cd <directory>
ls
aptitude install <string>
cd <string>
source <string>
ls
clear
vi <file>
ls -a
exit <number>
sysctl <string>
ls
vi <file>
mkdir <string>
read -r <string>
git add -f -vv <file>
git clone <URL>
cd <string>
perl -ne <string>
git push origin master
ls -l
grep <string>
ls
git status
git push
vi <file>
cd <string>
cd <string>
vim <file>
exit
xargs sed -i <directory>
sudo apt install <string>
ls
exit <number>
sudo start uwsgi
mkdir <string>
mkdir <string>
ls
docker-compose -f <string>
vi <file>
scp <string>
vi <file>
cd ..
ls
cd <string>
ls
tmux set-window-option -g <string>
rm -rf <string>
ls
git add <string>
exit
find . -empty -type <string> -print -delete
ls
ssh dirlic@10.18.0.39 -p <number>
touch <file>
git pull
cat <string>
tar -zxvf <file>
chmod -R <string>
cd <directory>
vi <file>
exit
ls
ls
sort -r
cd <directory>
npm i sass -D
read -s -n <number>
cd <string>
ls
cd <string>
ls
sort -u <string>
git init
git add .
kubectl apply -k <string> -n <string>
reboot
read -r -a <string>
sudo mkfs.ext4 <string>
git commit -m <string>
cd <string>
sed -e <directory> -e <directory>
git add <string>
ls -la
code <string>
chmod <string> -- <string>
htop
curl -T <directory> <string>
git push
ls
cd ..
read <string>
cd ..
sudo update-alternatives --config <string>
sudo chsh -s <directory>
git clone <URL>
cd <directory>
git add .
rm <string>
mkdir <string>
ls
dpkg-shlibdeps: erro: <string>
cd <string>
sed <directory> -i.bak <string> -F <string>
sudo mv <string>
cd <string>
ls
ls
exit <number>
sudo su
ls
clear
git pull origin branchname --allow-unrelated-histories
git commit -m <string>
ls -a
unzip <file>
git push
cd ..
sudo <directory> restart
git pull
mkdir <string>
python3 <file>
exit\
ls
mkdir -p <string>
clear
ssh <string>
python3 <file>
mkdir <string>
ls
history
sudo -s
cd <directory>
git commit-tree <string>
ls
cd <string>
vim
pwd
cd <string>
ls
cat <string>
find . -type <string> -name <string>
git push origin main
git diff
ls
fg
ls
find . -empty -type <string> -print -delete
vim <file>
ps aux
curl -o- <URL>
cd <string>
vim
sudo vim <file>
sudo update-rc.d <string>
fg
sleep <number>
git --help
ls
ls
cd <directory>
cd <directory>
tcpdump -i <string> -v <string>
rm -rf <string>
kill -9 <number>
git status
vim <file>
git clone <URL>
npm install <string>
cd <string>
ps -a
ls
clear
clear
cd ..
cd ..
ls
clear
ls
git pull origin main
mkdir <string>
chmod <number> <string>
git add <string>
git commit --allow-empty -m <string>
sudo iptables -A <string> -i <string> -o <string> -j <string>
grep <string>
cd ..
vim <file>
git push origin master
sed <directory>
sudo add-apt-repository <string>
grep <string>
perl
mv <string>
nano <file>
rm -rf <string>
git clone <URL> --branch <string>
cd
npm run build
git config <file> <string>
git commit
tmux -f <directory>
ls -altr
ls
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
sudo cp <string>
ls
git branch
git stash pop
ls
git push -u <string> master
sudo prometheus --config.file=<file>
cd <string>
ls
chmod +x <string>
git status
ls -l
cd <directory>
ls
cd <string>
apt-get update
vi <file>
reboot
ls
ls
sudo apt-get install <string>
python3 <file> -sI <string> -sM <string> -dM <string> -dI <string>
sudo apt install <string>
cd <string>
mkdir <string>
git clone <URL>
clear
history -a
sudo chmod +x <string>
git push
git push
cat <string>
code .
exit
exit
kill <number>
cd <directory>
cd <directory>
ls
sudo service nginx restart
git reset HEAD^
ls -d <string>
ls
ls
rm <string>
npm i <string>
sleep <number>
brew cask install <string>
cd <string>
cd ..
clear
history
ls
git status
pwd
cd
clear
cd ..
vim <file>
git commit -m <string>
vim
ls
ls
clear
ls
vi <file>
clear
cd <string>
git --version
sudo vi <directory>
sed -E -e <directory>
exit
vim <file>
exit
git add .
npm install
npm run test
rm <string>
fg
ls
mv <string>
git pull
vi <file>
python3 <file>
git add .
exit <number>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
diff <file>
cat <string>
git init
clear
find . -type <string>
python3 <file>
git add .
npm run watch
rm -r <string>
alias -p
cd ..
unset <string>
exit
sudo sed -i <directory> <file>
docker build -t <string>
clear
cd
exit
sudo chown -R <string>
find . -name <string> -type <string> -print -prune -exec <string> -rf <string>
top
git init
mkdir <string>
cat=<string> -c <string>
cd <string>
sudo mkarchiso -v -w <string> -o <string> slim-iso -r
git remote add origin <URL>
ls
ls
cd <string>
clear
git add .
git push -u <string> bryan-guner
sed -i <directory>
git status
git add --all
sudo apt-get install <string>
cd <string>
git commit -allow-empty -m <string>
cat <string>
git clone <URL>
cd <directory>
npm run test
sudo wgnord -c <string>
git add <string>
exit
awk -F'/' <string>
fg
ls
ls
vi <file>
cd <string>
cd <directory>
sudo nano <file>
sort -u
clear
find . -type <string> -exec <string> -i <directory>
cd <string>
cat <string>
tmux new-session -d <string>
clear
git add .
git checkout -b <string>
exit <number>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
grep -Eo <string>
git status
ls -l
clear
pwd
ls
ls
ls
cd <string>
git add.
ls
sudo docker rm corrade
ls
npm http GET <URL>
git config --global <file> <file>
systemctl restart <string>
exit
cd <string>
sudo fdisk <directory>
ls -lt
reset
clear
sudo aptitude purge <string>
git push origin PTS-372_Remove_components_from_daily_tracker --force
npx <string>
cd ..
cd <directory>
ls
rm -rf <string>
cd ..
cd <directory>
vim <file>
sudo apk add <string>
ls -R <string>
cd <directory>
uname -a
sort
git status
curl -o- <URL>
ls
cd <string>
ls
fg
cd <directory>
cat <string>
ls -alF
cd <directory>
git push -u <string> detail
git add <string>
fg
ls -a
wget <URL> -O <directory>
sudo yum-config-manager <string>
git add .
cd ..
rm -rf <string>
ls
systemctl status <string>
source <directory>
mv <string>
vi <file>
git add <string>
systemctl stop <string>
rm -rf <string>
ls
ls
ls -la
exit
apt update
vim <file>
clear
exit
exit <number>
ls
ls
rm -rf <string>
rm -r <string>
git add <string>
clear
script/build.sh
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
uname
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
ls
clear
npm start
vim <file>
rm -r <string>
cd ..
sed <directory>
ls -alf
find <directory> -name <string> -print0
chmod <number> <string>
cd <directory>
done
sudo rm -rf <string>
sudo apt upgrade
exit
date
clear
clear
ls
tar -xvf <file>
ls
ls
git add <string>
diff <file> <file>
sudo npm i prettier -g
cd <string>
top
npm run coverage
bash
cd <directory>
git -version
cd <string>
sudo nano <directory>
fg
cd <string>
vim <file>
tail -n7
cd <string>
htop
ls
vi <file>
docker-compose up
ls
history -w
htop
curl <string>
ls
cd <directory>
done
ls
npm install
cd <directory>
npm install --save <string>
git status
cd <string>
npm start
ls
exit <number>
clear
exit
git pull
cd ..
yarn add <string>
read -r <string>
git status
cd <directory>
clear
sudo git clone <URL>
cd <string>
git commit
ls -a
cd <string>
git co master
ls
npm-recursive-install
vi <file>
ls
git log --foo-bar
xhost +
fg
cd <string>
chmod <number> <string>
curl -L <URL> -o <file>
git config --global <file>
ls -latr <directory>
read -rp <string> <string>
grep -w <string>
clear
ls
ps ax
sudo ip route <string>
source <directory>
git add .
ls
tmux attach
clear
rm <string>
ls
vi <file>
git status
ls
cp <string>
cd <string>
ssh <string>
vi <file>
docker build --no-cache --force-rm -t <string>
cd <directory>
npm start
git commit -m <string>
git add .
sudo sed -i <directory>
ls
history
ls
cd <directory>
code --disable-accelerated-video-decode
ls
unset color_prompt force_color_prompt
trap - <string>
exit
git commit
ls
grep <string>
ls
ls
git add <string>
cd <string>
cd <string>
exit
bash <file>
ls
cd <directory>
cd <string>
grep <string>
df -BG
ls -ltr
fg
chmod <number> <string>
ls
cd <string>
ls
clear
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
gsettings set <file> <string>
ls
wget <URL>
mkdir <string>
git branch -M <string>
gsettings set <file> <string>
wget <URL>
git co -b <string>
git status
cd ..
exit
docker images
ftp <string>
git rm <string>
git clone <URL>
vi <file>
exit
ls
sudo apt-get install linux-headers-$(uname -r)
sudo sed -i <directory> <file>
git commit -m <string>
sudo sed -i <directory>
ls
sudo apt install <string>
cd <string>
npm install
git --version
pwd
ls
LANG=<string> rpm -qpl <string>
ls
find <directory> -mindepth <number> -type <string>
sudo -E <string> -
cd <directory>
sudo su mv <directory> <directory>
vi <file>
cp <string>
ls
ls
htop
clear
ls
sudo ln -s <directory>
vim <file>
ls
gpg --keyid-format <string> --keyserver <file> --recv-keys <string>
clear
cd ..
grep <string>
clear
sudo systemctl restart <string>
git remote
sleep <string>
python3 <file>
cd <string>
less <string>
lsblk
ls
ls
mv -f <string>
cd ..
sudo vi <file>
rsync <directory>
cd <directory>
git commit -m <string>
sudo mv <string>
ls
cd <string>
xargs -0 <string> -i <string> -e <directory>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
read -r -a <string>
cd
vi <file>
rm -r <string>
npm install -D <string> postcss autoprefixer
python3 <file>
sudo apt-get install nodejs -y
cp -v <string> <directory>
cd ..
git commit -m <string>
python3 <file>
git pull
cd <string>
npm run setup -- --spaceId <string> --deliveryToken <string> --managementToken <string>
git commit -m"styling <string>
ls
git submodule add <URL>
cd <directory>
du
cd <string>
sudo ufw allow <string>
cd <string>
git add .
ls
fg
git clone <URL>
cd <string>
git init
cd <string>
git init
sudo apt-get install -y <string>
npm i <string>
fg
rm -rf <string>
go <string>
ls
ls
ls
ls
git pull
find . -print
docker run --name <string>
sed -e <directory>
sudo lvcreate -L <string> -s -n <string>
tail -f <directory>
ls
npm install strapi@latest -g
export <string>
cd <directory>
docker ps -a
xrandr
sed -E -e <directory>
cd <string>
sudo source <file>
ls
git commit
sudo bash -c <string>
sudo yum install -y <string>
systemctl restart <string>
cd ..
sudo apt install <string>
sudo rm -rf <string>
git pull origin development
pwd
cd ..
npm
wget -q -O - <URL>
pbcopy
vim
clear
curl <string>
git fetch
man
git commit
git commit -m <string>
cd <string>
git push
read -rp <string> <string>
grep <string>
git push
sed -n -e <string> -e <string>
clear
ls
cd <string>
ls
cd <directory>
free
git commit -m <string>
xrandr --output <string> --off
vim <file>
docker image rm -f <string>
ls
ls
rm -rf <string>
ps -aix
sudo apt-get install <string>
rm <string>
git push
ls
docker-compose logs --follow <string>
vi <file>
npm install
sed -i <directory>
bash <file>
sleep <string>
npm install
git clone <URL>
git commit -m <string>
cd ..
vim <file>
grep <string>
cd ..
ls
docker stop boost
sudo pacman -S <string>
git add <string>
curl <string>
git add <string>
ls
cd ..
cd <directory>
git add .
sudo aptitude install <string>
ls
pwd
touch <file>
vi <file>
cat <string>
exit
node --version
git config --global <file>
read -r <string>
codedown javascript
git rm <string>
clear
ls
ls
git push origin PTS-372_Remove_components_from_daily_tracker --force
sudo pip3 install <string>
sudo chown <string>
git remote add origin <URL>
npm run build
curl <string>
cd ..
git status
history -c" - <string>
npm run coverage
cd <directory>
wget <URL>
mv <string>
ls
git restore <file>
ls
sed -i <directory>
ls
python3 <file>
screen -r <string>
sudo shutdown -h <string>
sudo docker kill corrade
mv -rf <directory>
<directory> <string>
cd <string>
git clone <URL>
ssh <string>
cd
cd <string>
mkdir <string>
find . -type <string> -name <string>
cat <string>
cd <string>
ls
git branch -M <string>
pwd
node <file>
cd ..
vim <file>
ls
ls -S <string>
cd <directory>
ls
git clone <URL>
cd ..
fg
git push
git commit -m <string>
man <string>
python3 <file> -sI <string> -sM <string> -dM <string> -dI <string>
git clone <URL>
ls
git commit -m <string>
cd <directory>
clear
wget <URL>
bash
git push
fg
python3 <file>
git remote add origin <URL>
exit <number>
cd <string>
sudo apt update\
git status
vim <file>
git add .
ls
sudo pacman -S <string>
cd ..
ls
cat -n <string>
ls
cd ..
git push origin main
ls
sudo apt update
git stage <string>
cat <string>
docker run <string>
cd <string>
mv <string>
sudo pacman -S <string>
sudo apt-key add -
su root
sudo apt-get install <string>
date <string>
mkdir -p <string>
man <string>
rm testing -rf
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cd <directory>
cp -r <directory>
ls -al
clear
ls -lt
head -n <string>
cd <string>
git diff-index --cached --quiet <string> --
xhost +
sudo python <file>
ls
git push -u <string> master -f
git checkout $1 -- <string>
ls
exit
sudo zypper se <string>
mv <string>
ls
npm start
cd <string>
code .
sh <file>
cat <string>
cd <string>
fg
git add <string>
sudo ifconfig en0 ether <string>
cd <string>
sudo dpkg -i <file>
ls -l
npm run test
vim <file>
sudo -u <string> psql
sudo sed -i <directory>
clear
ls
clear
tmux
cd ..
git status
fg
vi <file>
vim <file>
ln -s <string>
done
head -n <string>
rm -rf <string>
docker swarm --force
ls
nano <string>
tail -$2 <directory>
cd <string>
cd <string>
clear
rm <string>
git
ls
vim <file>
ls
more <file>
cd ..
docker rmi <string>
clear
chmod +x <string>
cd <string>
ls
git clone <URL>
top
git checkout <string>
sudo apt-get install <string>
git checkout -b <string>
cd ..
vi <file>
wget -q -O - <URL>
cd <string>
ping <file>
print <string>
cd ..
grep <string>
sudo nano <directory>
ls
clear
ssh dirlic@10.18.0.39 -p <number>
kubectl <string>
ls -la
history -a
npm init
yarn install
ls
git config --global <file>
git status
ls
npm run dev
ls
sudo apt-get -y <string>
python3 <file> runsslserver 192.168.0.53:10006 --certificate <file> --key <file>
sudo apt-get install <string>
cd <string>
rm <string>
curl <string>
tail -f <string>
clear
ls
cat <string>
code .
ls
git commit -m <string>
cd <string>
ls -la <directory>
ls
ls
zeus.polsl.gliwice.pl - <number>
find . -type <string> -exec <string> -n -e <directory>
ls
history
ls
ls
vim <file>
python3 <file>
sudo sed -i <directory> <file>
ps -ef
git add <string>
clear
nano <file>
ping <file>
ls
vim <file>
grep --help
git add .
vi <file>
read -rp <string> <string>
mkdir <string>
sudo sed -i <directory> <file>
cat <string>
sudo rm -r <string>
cd <directory>
git status
git clone <URL>
ls
git add <string>
git config --global --add <file>
ls
sudo apt-get purge nodejs npm
ls
ls
vim <file>
cat <string>
cd <string>
mv <string>
ls -la <directory>
cd <directory>
chmod <number> <string>
source <string>
sudo bash -c <string>
cd <directory>
grep -i <string> >files
read -rp <string> <string>
git push
curl <string>
sort -gr
sudo apt install <string>
chmod +x <string>
cd <string>
sudo dnf install <string>
git push -u <string> master
sh
cd <string>
sudo vim <directory>
npm start
cd <directory>
cd <string>
ps -auxwf
du -sh
open <string>
ls
source <directory>
docker-compose log --follow <string>
ssh-keygen -t <string> -C <file>
git status
curl -v -H <string> <URL>
wget <URL>
ls
git checkout <directory> -f
sleep <number>
git add <string>
mvn compile
sed <directory>
ls
clear
sudo -H <string> install -U <string>
sudo rm -r <string>
docker swarm <string>
git submodule update --init --recursive
sudo rm -rf <string>
cd <directory>
sudo python <file>
vi <file>
git pull origin master
sudo sysctl --system
cd ..
sudo git remote <string>
tmux
ls
brew install <string>
ls
git status
git filter-branch --index-filter <string> HEAD
cut -c5-8
sudo apt-get install typora --fix-missing
git pull origin
sudo apt-get upgrade
curl -X <string> -d <string>
npm i
bash
find -name <string>
docker-compose logs
grep -w
bash <file>
ls
vim <file>
man <string>
ls n?d* -d
cd <string>
cp <string>
cat <string>
ls
tmux
git add <string>
cd ..
cd <directory>
cd ..
more <file>
clear
vi <file>
cd ..
cd ..
cd ..
git add <string>
clear
apt-get install <string>
git push
ls -la
man <string>
ls
ls
ls
cd ..
su root
cat <string>
clear
ls
ls
sudo python <file>
tail
vim <file>
ls
git add .
ls
git push
finger <user> # displays information about user
l=<string> -1t
alias --help
htop
chmod -R <string>
pwd
cat <string>
less <string>
ls
ls -ls <file>
ls
clear
cd <string>
sudo service nginx restart
git status
cd
mkdir <string>
scp <string>
git describe HEAD
cat <string>
git push origin
git add <string>
cd <string>
sudo dnf install <string>
sed -i <directory>
less <string>
cd <string>
exit
clear
sudo pacman -S <string>
rm <string>
exit
git add .
git remote add origin <URL>
sudo apt-key add -
ls
rmdir <string>
ls
cd <string>
sudo docker run -it --name <string> --entrypoint <string> -u <string> --privileged -v <directory>
exit
unzip <file>
git add .
cat <string>
git add
vim <file>
ls
cd <string>
python3 <file>
python3 <file>
cd <string>
cd ..
cd <string>
ls
sed -i <directory>
grep -v <string>
sudo systemctl enable <string>
git add <string>
sudo apt-get update
ls
less <string>
cd ..
rm -f <string>
cd <string>
cd ..
git remove <string>
reset
sudo apt install <string>
ls
ls
git remote add origin <URL>
unset color_prompt force_color_prompt
rvm <string>
ls
vi <file>
docker-compose up -d --build
read -r <string>
fg
ls
cd <directory>
cd ..
find <directory> -type <string> -empty
ls
clear
touch <file>
ls
chmod +x <string>
export <string>
grep <string>
sudo <file> -v -w <string> -o <string>
cd ..
ls
sudo mv <string>
clear
docker stop <string>
sudo fsck
cd <string>
ls
ls
ls
ls
cd -
exit <number>
kubectl apply --filename <file>
git fetch
grep -iha <string>
npm i
git add --all
sed -i <directory>
ls
ls -l
git commit -m <string>
cd <string>
apt-get update
sleep <number>
cd <string>
ls
grep -Fxn <string>
exit <number>
ls
ls
mkdir <string>
git add <string>
sudo find <directory>
git commit -m <string>
cd <string>
cd <string>
nohup <string>
ping <string>
rm <string>
git add .
cd <directory>
git add <string>
done
ls
cat <string>
setg RHOSTS.*
python3 <file>
ls
ls -al
cd <directory>
ls
python3 <file>
ls
du -ak <directory>
sudo python3 <file>
pwd
rm <string>
sudo apt install <string>
exit <number>
mv <string>
ls
vi <file>
npm run bench -- -c <file> -n <file>
wc -l <string>
ssh -N -R <string>
grep <string>
mkdir <string>
ls
cd <string>
ssh dirlic@10.18.0.39 -p <number>
ls
npm install
ls <directory> -al
mkdir <string>
sed <directory>
exit
vi <file>
git remote add origin
cat <string>
zgrep -i -E -o --no-filename <string>
cat <string>
ls
git clone <URL>
git add -A
rm <string>
cat
cd <string>
exit
mkdir <string>
rm -rf <string>
clear
ls
mkdir <string>
sudo make clean install
cat <string>
python3
sudo su
git commit -m <string>
code <string>
git push
sed -n <string>
chmod <string>
find . -type <string> -exec <string> <directory> {} +
cd <string>
cd <string>
ls
git commit -m <string>
curl -X <string> <URL> -H <directory> -d <string>
cp -r <directory>
fg
vim <file>
ls
npm run coverage
cd <string>
ls
ls
shutdown -h <string>
cd <directory>
git push
cd <string>
cd <directory>
git push origin <string>
clear
ls
cd <string>
vi <file>
sudo yum install git -y
cd <string>
ls
ls
ls -d <string>
ls
ls
git status
ls
ls -lrt
exit <number>
ls
sudo systemctl enable <string>
wget -O <file>
sudo add-apt-repository <directory>
docker history --human --no-trunc --format <string>
pacman -S <string>
sudo apt install git -y
cd <string>
git push origin main
git branch
dpkg -i <file>
git remote add origin <URL>
rmdir <string>
killall <string>
sudo chgrp <string>
make clean
cat -
git status
git status
cd <string>
ls
ls
ls
git push
ls
systemctl status <string>
exit
git pull
ls
git push origin main
git push
apt-get install <string>
sudo halt
chmod <string>
rm -f <string>
curl -i <string>
man <string>
sudo apt-get update
ls
sudo apt install <string>
git push
cat <string>
less
read -sn <number> -p <string>
rg <string>
source <string>
sudo ls -a <directory>
cp <string>
cd ..
git pull
sudo apt install <string>
source <directory>
git push
ls
rm -r <string>
git add .
grep <string>
mkdir <string>
npx shadcn-ui@latest add <string>
sudo vim <file>
vim <file>
git --version
cd <string>
exit
docker-compose up
ls
rm -rf <string>
wget -r -A <URL>
git config --global <file> <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
vim <file>
ip addr <string>
cd -
git diff
cp <string>
cd
unzip <file>
git init
sudo ip route add <string>
killall <string>
fg
clear
ls
exit
git status
reboot
ls
mkdir -p <string>
ls
sed <directory>
sudo dpkg -i <file>
git add <string>
git log --no-merges --pretty=<string> <string>
sudo apt install <string>
docker cp <string>
sudo apt-get update
vi <file>
vi <file>
git commit -m <string>
sudo mkdir <directory>
git gc --aggressive
cat <string>
cat <string>
cd <string>
ls
rm <string>
find . -name <file> -type <string> -print -delete
grep <string>
ls
cd <string>
git commit
ls
test
clear
tail -f -n200 <directory>
ps auxww
sudo reboot
set
npm run coverage
ls
vim <file>
chmod u+x <string>
sudo apt-get update
sudo apt upgrade -y
cut -d" <string> -f1,6-\
git status
exit
mkdir <string>
npm run coverage
sudo -s -u <string> -H
apt-get install <string>
ls
git stash apply <number>
vi <file>
unzip <file>
git co --theirs <string>
man <string>
ag -v <string>
git
cat <string>
ssh dirlic@10.18.0.39 -p <number>
git commit -m"update"
exit <number>
sudo mv <string>
cp <string>
chmod +x <string>
uname -p
git push
git pull
vi <file>
vim <file>
cd ..
git commit -m <string>
pwd
rm -f <string>
vi <file>
git checkout <string>
find . -empty -type <string> -print -delete
sed <directory>
git init
sudo sed -i <directory> <file>
git commit
cd <string>
head <filename> # outputs the first lines of file (default: <number> lines)
vim <file>
cd <string>
vim <file>
rm -rf <string>
screen -dr
mv <string>
cd <string>
rm <string>
ps aux
rm -r <string>
git push -u <string> master
fg
git commit -m <string>
npm i docsify-cli -g
clear
curl -v -X <string> --anyauth -u <string>
cat <string>
dpkg -i <file>
python3 <file>
rm <string>
find . -size <string> -a -print -a -exec <string> -f <string> \
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
cd <string>
cp <string>
ls
cd <string>
git branch -a
vim
rm -f <string>
cd ..
cd <directory>
cd <directory>
apt-get -y <string> <string>
mv <string>
git checkout <string>
ls
ls
git clone <URL>
history
clear
ufw allow <string>
<file> - <number>
vi <file>
cd <string>
more <file>
cp -r <directory>
python3 <file> --model-path <file> --conf <string> --img-size <number>
cd <string>
cd <string>
ls
git pull
sudo -s -u <string> -H
grep <string>
mkdir <string>
grep -r <string>
rm -r <string>
cd <string>
git status
git rm -r <string>
grep -v <string>
vi <file>
rm <string>
ls
find . -type <string>
sudo ntpdate -d <string>
ls
which <string>
clear
cd <string>
cd ..
cd <directory>
install
nano <file>
ls
rm -fr <string>
source <string>
cd
top
lsblk
ls
exit <number>
git remote -v
cd <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
cd ..
sed -e <directory>
ls
git init
cd <string>
chmod -R <string>
npm init -f -y
npm init
ps axfu
sed -e <directory> -e <directory>
clear
apt list --upgradable
cd <string>
vi <file>
git status
sed -r <directory>
python3.11 <file>
ls
bash
ls
cat <string>
cd <string>
man <string>
git config <file> <file>
ftp
cat <string>
find . -inum <number>
touch <file>
head -1 <file>
rm -rf <string>
cd <directory>
git branch -M <string>
grep <string>
ls
ssh dirlic@10.18.0.39 -p <number>
python3.11 <file>
chmod +x <string>
export <string>
vi
sudo vi <file>
cd ..
cd ..
git branch --help
cd <directory>
ls
sudo python3 <file>
sudo aptitude purge <string>
git
clear
git push -u <string> master
sudo npm install <string>
cd <string>
zcat <file>
exit
vi <file>
vim <file>
sudo ls -l <directory>
service apache2 reload
read -r -d <string> <string>
sudo pacman -S <string>
git init
git status
code <string>
git status
print <string>
cd ..
diff -y <string>
ls
ls
git push -u <string> main
clear
npm install
pwd
ls
fg
ls
sudo cp <string>
sudo apt install <string>
sed -i -e <string>
cd <string>
cd ..
exit
rm -rf <string>
vi <file>
ls
code .
systemctl stop <string>
cd <string>
ls
cd <string>
sudo apt update
cd <string>
git commit -m <string>
python3 <file>
ls
cd <string>
ls -a
kill -9 <number>
docker-compose top
mount
bash
cp -v <string> <directory>
export <string>
touch <string>
ps -auxwf
tail -f <directory>
cd ..
pwd
exit
ls
sudo apt-add-repository <directory>
git init
cd <directory>
ls
ls
ls
head -n20 <file>
npm run test
cat <string>
ls
ls
history
which <string>
cd <string>
cp -f <string>
git push
git init
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
tar -xf <string>
ls
clear
cd <directory>
ls
clear
git
vim <file>
rm -rf <string>
git remote remove origin
ls
cd
ls
cd <directory>
sudo bash -c <string>
python3
git add .
git reflog expire --all
sudo lvcreate -n <string> -L <string>
cd <directory>
clear
git commit -m <string>
rm -f <string>
ls -la
cp -r <directory>
ls
fg
exit
ls
mkdir <string>
tail -f <string>
cd ..
ls -d
git clone <URL>
cd <string>
ls
ls
find . -name <file> -type <string> -size -30k -delete
make clean
cd <directory>
mv <string>
sudo nano <directory>
rm <string>
ls
git push
sudo -i
ls
head -n -1
tar -cvf <string>
ls
pwd
read -p <string>
cat <string>
grep -i <string>
codedown <string>
ls
docker build --build-arg <string> --build-arg <string> -t <string>
pwd
ls
cd <string>
clear
tail -f <directory>
sed -i <directory>
node <file>
cd <directory>
ls
npm install <string>
bash <file>
git status
cd <directory>
rsync -rt --port=<number> <string>
tmux source <file>
touch <file>
git status
sudo dnf remove <string>
vim <file>
sudo sed -i <directory> <file>
cd ..
vi <file>
vim <file>
cd <directory>
cd <string>
npm run test
git fetch
ls
source <directory>
ls
cd ..
pwd
ls
cd <directory>
sed <directory>
git add .
sudo umount <directory>
cd
grep -i <string> >files
mkdir <string>
git clone <URL>
grep <string>
git commit -m <string>
mkdir -p <string>
which <string>
reset
npm start
git push heroku main
fuser -k <directory>
cd ..
vi <file>
exit
git stash
cd <directory>
rm -rf <string>
rm -rf <string>
ls
git commit -m <string>
git add .
sudo apt-get install <string>
cd ..
clear
vi <file>
git pull
cat <string>
rmdir <string>
cd
vim <file>
tail -100 <file>
sleep <string>
ls -d
which <string>
sudo sed -i <directory>
find . -name <file> -type <string> -exec <string> -rf <string>
exit <number>
ls ..
cd ..
git push
cd <string>
clear
ls
git status
tmux source <file>
ls
cd <string>
sudo mysql -u <string> -p
exit
git init
ls
ls
git branch
cd <string>
cd ..
ls
git status
git push
git status
git remote add origin <URL>
sudo zypper se <string>
cd <string>
mv <string>
cd <string>
git commit -m <string>
npm install <string>
git commit -m <string>
git push origin
python3 <file>
ls
cd <string>
ls
tmux
cd
cd <string>
su -
ls
killall <string>
rm <string>
ls
ps -u <string> # lists your processes
sudo apt-get install <string>
git reset --soft <string>
ls
ls
ls
ls
env
sudo rpm -i <string>
vim
kill -9 <number>
sudo apt list --upgradable
npm init -f -y
npm install
less <string>
ls
ls
sudo snap install <string>
sudo apt update
exit <number>
clear
rm <string>
ls
vim <file>
cd <directory>
find . -iname <string> -exec <string> <string>
rake <string>
clear
ls > <file>
exit <number>
sudo python3 <file>
cat <string>
ls
cd ..
less <string>
sed <directory>
module --version
find *V$1* -type <string> -exec <string>
ls
cd ..
ps screen
ls -al
git clone --depth <number> <URL>
cd <string>
sudo apt install <string>
git add -A
source <directory>
git log <string> --pretty=<string> <string>
grep -r <string>
docker-compose down
ls
cp <string>
ls
node <file>
git push
git init
sudo make clean install
exit
systemctl status <string>
vim <file>
vi <file>
ls
ls
rm -r <string>
apt-get install <string>
<directory> <string>
read -rp <string> <string>
ls -l
cd <string>
vim <file>
cd <directory>
mv <string>
docker ps
sudo apt purge <string>
docker exec -it <string>
sudo sed -i <directory> <file>
git status
bash <file>
vim <file>
rm -f <string>
rm -rf <string>
git status
ls
npm run bench -- -c <file> -n <file>
cd ..
sudo systemctl status <string>
git rm --cached <string>
exit <number>
sudo add-apt-repository <string> [arch=<string> <URL>
ls
cd <string>
rm -r <string>
ls
python3 -m <string>
cd <string>
npm run start
ls
mv <string>
apt-key add <file>
ls -A
clear
vim <file>
cd ..
sudo dpkg --configure -a
exit
alias <string>
vi <file>
grep <string>
rm <string>
ls
cd <string>
cat <string>
sudo apt-get update
ls
sudo mv <file>
ls
find . -name <file> -type <string> -print -delete
open .
npm ls
sudo systemctl start <string>
cd <directory>
rm <string>
git add <string>
clear
git commit -m <string>
git push
which <string>
kubectl get <string>
git checkout <string>
cd <string>
killall <processname> # kill all processes with the name
cd <string>
ls
tar -xvf <file>
sudo apt-get update
rm -fr <string>
rm -f <string>
source <directory>
sudo systemctl status <string>
cd ..
git status
npm install <string>
git init
vim <file>
ls
ls
sudo systemctl status <string>
cd <string>
xargs sed -i <directory>
docker --help
exit
ps -auxwf
grep <string>
git clone --bare <string>
git push -u <string> master
git push -u <string> master
sudo chmod og-rwx <directory>
git add <string>
rm -rf <string>
git commit -m <string>
node <file>
chmod <string>
sudo mv <string>
git commit -m <string>
clear
rm -f <string>
code <string>
halt
vi <file>
ls
git rebase -i <string>
git show <string>
read -p <string>
cd
ls
rm -rf <string>
sudo service <string>
bash
ls
clear
alias <string>
ls
cd <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
mv <string>
sudo pacman -S <string>
git pull origin main --allow-unrelated-histories
cd ..
cd ..
fg
sudo add-apt-repository -y <directory>
vim <file>
ls
rm -r <string>
mv <string>
ls
git add
git push
cd
git add .
kill <number>
ls
mv <string>
cat <string>
apt update
ls
vim <file>
exit
git push origin main
sed -E -e <directory>
git push -u <string> main
ls -lh
git log
npm init -y
top
git status
cd ..
wget -r -np -k <URL>
cd <directory>
git status
vim <file>
ls
cd <string>
sudo apt-get install <string>
ls
cd <directory>
sleep <string>
pwd
awk <string>
exit
exit
curl <directory> -qO- <URL>
cd ..
sudo apt-get update
curl <string>
vim <file>
exit <number>
cd <directory>
git log
docker ps
ls
apt-get -y <string>
exit
exit <number>
git status
bash <file>
set -x
ls
cd ..
egrep -c <string>
cd ..
rm <string>
clear
read -rp <string> <string>
sudo vim <file>
sudo ln -s <directory>
git init
git pull
git clone <URL>
fg
git commit -m <string>
cd <string>
vim <file>
ls
ls -a
npm init -y
git add <string>
mkdir <string>
ls -al
cd <directory>
sed -i <string>
cd <directory>
ls
git commit
ls
cd <string>
pwd
ls
<file> - <number>
less
ls
ls
sudo udevadm control --reload-rules
docker push <directory>
cd <string>
cd <string>
sed -E -e <directory>
git commit -m <string>
python3 <file>
sudo chmod <number> <directory>
ls
sudo systemctl restart <string>
sudo npm install
vim <file>
git push
ls
ls
sudo apt-get upgrade
service apache2 reload
vi <file>
ls
ls
cd ..
exit <number>
ls
mv <string>
sudo npm u -g <string>
npm i <string>
mkdir -p <string>
cat <string>
cd <string>
find . -type <string> -name <string>
cd <directory>
git init
mkdir <string>
python3 <file>
pkill <string>
ls
ls
ping <file>
sudo certmgr -ssl -m <URL>
ls
vim
sudo apt-get -y <string>
read -r <string>
ls
ls
git checkout -b <string>
bash <file>
tail -f <directory>
git add .
ls
vi <file>
kill <number>
cd ..
cd <directory>
python3.11 <file>
ls
exit
sudo certbot certonly -a <string> -w <directory> -d <file>
sudo make install
cp -r <directory>
chmod <number> <string>
history
npm install -g <string>
tr -s <string>
source <string>
clear
cp <string>
man <string>
sudo python <file>
chmod <number> <string>
git config <file> <file>
ps # prints a line of information about the current running login shell and any processes running under it
ls
git status
git status
cd <string>
then\
du -h <directory>
cd ..
<directory> <string>
cut -f <string>
docker ps -a
git status
vi <file>
git clone <URL>
tail -n <string>
top
ls -ltr
auto-apt -y <string>
vim <file>
vim
nano <file>
ssh dirlic@10.18.0.39 -p <number>
git push origin master
rm <string>
cd <string>
exit
ping <file>
git pull origin master
git add .
sudo chmod a+r <directory>
tar --version
sudo shutdown
apt list --installed
git pull
nano <string>
bash
cd <string>
npm i <string>
clear
ls
git init
cd <directory>
exit
git init
mkdir -p <string>
npm install typescript --save-dev
ls
git
clear
time <string>
ls
ls -la
vim <file>
git clone <URL> --branch <string>
ls <directory> -la
git add <string>
sudo ntpdate -qd <file>
bash
free -h
git init
rm -r <string>
docker --help
npm install <string>
ls -R
rm <string>
sudo sed -i <directory> <file>
ls -l
rm <string>
git push
cd <string>
ls -la <directory>
clear
cd <string>
mv <string>
vim <file>
find . -name <string> -type <string>
mv <string>
clear
clear
wget <URL> -O <file>
cd <string>
ls
cd <string>
cd <string>
sudo <directory> <string>
ls -l
cd <directory>
exit <number>
clear
umask
service apache2 restart
git checkout -b <string>
fg
rm -rf <string>
sudo systemctl start <string>
sudo <directory> restart
cd ..
cat <string>
ls
ls
git rev-parse --show-toplevel
clear
systemctl status <string>
ps -q
npm install <string>
ls
git commit -m <string>
sudo apt-get -y <string>
git remote add origin <URL>
cd ..
ps aux
npm i
ls
jq <string>
ls
git commit -v -a -m <string>
more <file>
cd <string>
npm install sharp --save
sudo sed -i <directory>
ls
read -p <string>
git clone <URL>
vi <file>
read -p <string>
git add <string>
chmod u+x <string>
git push -u <string> master
env
rm <string>
grep -oP <string>
git push -u <string> master
vim <file>
find . -name <string> -type <string> -prune -exec <string> -rf <string>
git add <string>
read -rp <string> <string>
cd <directory>
git status
vi <file>
ping <string>
cd ..
docker-compose logs --follow <string>
cp <string>
git pull
cp -r <directory>
cd <string>
clear
rev
cp <string>
vi <file>
grep <string>
wget -q -O <file>
cd <string>
git pull origin development
cd <string>
ls
cd <directory>
exit
ls
git push
exit
sudo python <file> --cascade=<file> <number>
ln -s <string>
vim <file>
cd <string>
ls
git add .
git commit -m <string>
cd
ls
git status
clear
ls <directory> -l
sudo rm -rf <string>
git status
cat <string>
pwd
sudo apt-key add -
apt-get -y <string> <string>
clear
cd <string>
cd ..
ls
cd <string>
tail -f <string>
rm -rf <string>
ls
cp <string>
sudo pacman -Syyu
git rm <string>
ls
vim <file>
git
git diff
cd <string>
clear
git add <string>
git add <string>
read <string>
sudo nmcli con mod <string> <string>
cd <directory>
mkdir <string>
wget <URL>
ls
git add <string>
fg
sudo dnf install <string>
tail -100 <file>
ls
sudo apt show <string>
vim <file>
git pull
ls
git init
rsync -a <string>
git config --global <file> <string>
clear
export <string>
vi <file>
ls
ls
git add <string>
git add .
vim <file>
ls
exit
cp <string>
cd <directory>
cd ..
rm -rf <string>
exit <number>
ls
clear
clear
systemctl daemon-reload
cd <string>
vim <file>
sudo apt install -y <string>
cd <string>
git commit -m <string>
ls
g++ -std=<string> <file> -o <string>
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
cd <string>
git status
npm install -g <string>
git commit -m <string>
sudo apt purge <string>
ls
git branch -a
sed -n <string>
ls
sudo apt update
clear
grep <string>
git push -u <string> master
cat <string>
npm config set <string>
env <string>
exit <number>
exit
curl <string>
vi <file>
sudo npm i sass -g
xargs -L1 <string> clone
du
sudo dnf install -y <string>
rm -r <string>
cp <string>
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
cat <string>
xrandr
git push
brew update
cp <string>
git hist -h
vi <file>
cd <directory>
git init
git pull
cd <string>
LANG=<string> rpm -qpl <string>
git commit -m <string>
cd <string>
cd
sed -ri <string>
git commit -m <string>
mkdir <string>
cd <string>
ls -a
sudo apt-get install -y <string>
vim
grep <string>
ssh dirlic@10.18.0.39 -p <number>
git add <string>
vi <file>
git add <string>
exit
sudo python3 <file>
git clone <URL> --force
git add .
sudo systemctl status prometheus
ls
cd ..
ls <directory> -l
ls
cd ..
sudo apt-get update
sudo apt install <string>
ls
grep <string>
find . -name <file> -type <string> -print -delete
sudo apt-get update
ls -l
sudo systemctl enable <string>
fg
curl --version <string>
sudo apt upgrade -y
exit
clear
systemctl status <string>
git tag <string>
cd ..
cd <string>
sudo su -
ls
sudo add-apt-repository -y <directory>
mv <string>
ls
mount
git clone <URL>
grep <string>
git push
sudo systemctl status <string>
more <file>
clear
ls
git help <string>
git remote add origin <URL>
ssh dirlic@10.18.0.39 -p <number>
ssh-keyscan -H <file>
vi <file>
clear
git status
vim <file>
sudo systemctl start <string>
ls
mkdir <string>
docker-compose up
cd <string>
sudo apt update
python3.9 <file> --isolated
systemctl start <string>
chmod +x <string>
vi <file>
git add .
clear
rm -rf <string>
cp -v <string> <directory>
cd ..
ls
exit
ls
sudo zypper se <string>
sudo apt-get clean
rm -rf <string>
git checkout -b
cd <string>
sudo vim <directory>
ls
cd <string>
vim <file>
sudo apt-get install <string>
mv <string>
ls
ls
clear
git commit -m <string>
git add <string>
pwd
git status
cd <string>
ls
cd ..
ls
ls
ls
git push
cd <directory>
grep <string>
mv <string>
kubectl <string>
git log
cd ..
sudo make uninstall
ls
cd
ls -C
python3 <file>
cd <string>
vim <file>
rm <string>
curl -L -o <string>
wget <URL> -O -
ls
pwd
git commit
sudo poweroff
ls -l
npm i <string>
cat <string>
ls
ls
sed -e <directory>
ssh esther@10.18.0.41 -p <number>
sh <file>
curl -L <URL> -o <file>
cd
git status
exit <number>
ls
git branch
ls
make install
sudo reboot
sudo systemctl start <string>
ls
curl <string>
cd <directory>
cd ..
fg
ps -eal
git checkout <string>
clear
clear
apt-get install iptables --fix-missing
cd <directory>
ls
docker rmi -f <string>
cd <string>
rm -f <string>
sudo make install
cd <string>
clear
git commit -m <string>
ls
git checkout -b <string>
ls
cd <string>
ls
cd <string>
cd <string>
vi <file>
clear
sudo emacs <string>
rm -rf <string>
cd <string>
cd <string>
rm -rf <string>
cd <directory>
grep <string>
git checkout master
git commit -m <string>
sudo python <file>
ls
rm -rf <string>
ls
git status
python3 <file>
cd <string>
vim <file>
fg
docker-compose logs --follow <string>
su
git checkout <string>
exit
git push origin master
git rebase <directory>
vi <file>
sudo python <file>
awk <string>
cp <string>
cp -v <string> <directory>
sed -e <string> -e <string> -e <directory>
grep -i <string> >files
code --version
nano <string>
set <string>
ls
nano <string>
exit
ls
sudo vi <directory>
awk <string>
sudo dpkg -i --force-overwrite <string>
vi <file>
cat <string>
php
cd
curl -L <URL> -o <directory>
sudo nano <directory>
vi <file>
npm install --save-dev <string>
sudo -i
ls
git commit -m <string>
find . -iname <string>
clear
cd <directory>
cd <string>
grep -v <string>
cd <string>
ssh-keygen -t <string> -b <number> -C <file>
sudo apt update
git pull
dmesg
git clone <URL>
git checkout -b <string>
git add <string>
ls
clear
ls
nano <file>
sudo apt-get upgrade
journalctl -f
ls
ls
sudo bash
docker ps
ls
ls
mv <string>
cd <string>
sudo mv <file>
git add .
cd <string>
cd <string>
ls
git clone <URL>
ls
git status
sudo docker rm corrade
git push origin master
ls # lists your files in current directory, ls <dir> to print files in a specific directory
ls
git add <string>
sudo docker ps
ls -a
git checkout <string>
cp <string>
curl -fLo <file> --create-dirs <string>
cd <string>
git pull
ls
cd <string>
vim <file>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
sudo wget -O - <string>
cp <string>
touch <string>
mkdir <string>
cd <string>
git status
ls
docker ps
sudo usermod -aG <string> $USER
sudo <file> -a
git remote remove origin
ls
ls
nano <file>
rm -r <string>
ls
docker push <directory>
vim <file>
git add .
git merge
open .
npm i <string>
history
git rebase -i <string>
vi <file>
docker ps -a
ls
git commit -a -m <string>
npm run serve
hg <string>
cd <string>
git add <string>
sudo -i
rm <string>
mkdir <string>
ls
cd ..
cd ..
wget <URL>
fg
history -r <string>
rm -rf <string>
cp <string>
git commit-tree <string>
cd ..
sed <directory>
cat <string>
vim <file>
ls
ls
cd ..
git push -u <string> master
sudo apt-key add -`
exit <number>
git status
exit
cd <string>
node <file>
git commit -m <string>
date
touch <file>
sed <directory>
sudo apt install <string>
du -h <directory>
cd <string>
git push
python3 <file> --epochs <number>
wget <URL>
cd ..
cd <directory>
ls
cd ..
vim <file>
curl -X <string> -d <string> -d <string>
ls
vim <file>
man <string>
sleep <number>
vi <file>
ls
vim <file>
cd <string>
ls
sudo vim <directory>
git branch rm view
htop
cd <string>
vim <file>
ls
ls
yarn install
docker images
wget -q <URL> -O <file>
vi <file>
python3 <file>
cd <string>
git stash
vim <file>
ls
sudo apt purge <string>
python3 <file>
ls
grep -vE <string>
exit
sudo chmod <number> * -R
cd <string>
ls
ls
npm run bench -- -c <file> -n <file>
fg
vi <file>
git clone <URL>
ls
npm i <string>
mkdir <string>
git rebase <string>
git checkout -b <string>
git push
man <string>
npm run coverage
cat <string>
git commit -m <string>
git add .
cd <string>
fg
ls
dmidecode
fg
npm run test
cd <string>
ls -la
xrandr --listmonitors
curl <string>
sudo sysctl <string>
vim <file>
ls -a
bash
pwd
sudo iptables -L
rmdir <string>
sudo vim <directory>
less
cd <string>
cd <string>
rm <string>
clear
cd <string>
git cm -m <string>
ls
git push origin master
cp <string>
cd <directory>
sudo chmod <number> <string>
git commit -m <string>
cd <string>
cd ..
cd <string>
exit
sh <file>
scp -r <string>
ls
git branch -a
git push -u <string> main
wc
cd <string>
cd <string>
chmod +x <string>
file <string>
ls
cd <string>
cd <directory>
head -n1\
git add .
tmux attach
git commit -m <string>
git clone <URL>
grep <string>
locate <string>
ps -ef
git push
ping <string>
clear
perl <file>
chmod +x <string>
rm <string>
awk <string>
ls
find . -empty -type <string> -print -delete
cd <directory>
clear
cd <directory>
ls -la <directory>
touch <string>
code .
apt install -y <string>
sudo apt-get install <string>
rm <string>
cut -d <string> -f <string>
ssh-keygen -t <string> -b <number> -C <file>
sudo pacman -Syu --noconfirm
curl -LO <string>
chsh -s <directory>
ls
cd
mkdir --parents -- <string>
cd <string>
then\
cat <string>
git init
exit
rm <string>
vi <file>
git hist
grep -vE <string>
cd <string>
ls -a
sudo vim <file>
git config --global <file>
ls
clear
cd ..
git remote add origin <URL>
cd <string>
clear
docker-compose logs --follow <string>
clear
ls
npm ERR!
grep -E <string>
sudo apt-get -y <string> <string>
cd ..
cp <string>
cat <string>
python3.11 <file>
sudo chown -R <string>
ls
cd <directory>
cd ..
diff -b <file>
wget <URL>
git add <string>
rm -r <string>
git status
cd <string>
hg <string>
vim <file>
git commit -m <string>
ls -al
curl -o- <URL>
exit <number>
cd <string>
ls
cd <string>
sudo sed -i <directory> <file>
cd <string>
git commit -m <string>
grep -E <string>
cat <string>
history
git add .
vi <file>
cd <string>
print <string>
cd <string>
npm start
chmod <number> <string>
clear
git please
find . -depth -exec <string> <string>
ls
git rebase <directory>
git push -u <string> master
mv <string>
ls
ls -a
git commit
git pull
ls -lR <string>
git clone --shallow <number>
npm install
find . -type <string> -mindepth <number>
grep <string>
cd <string>
exec <string>
git add .
git push
cd <directory>
clear
git pull origin main
do-release-upgrade
git add <string>
cd ..
clear
sudo rm -d <directory>
ssh -T <string>
chmod +x <string>
man <string>
git commit -m <string>
cd
ls
clear
docker exec -it <string>
sudo apt-get install <string>
sudo ln -s <directory>
sudo adduser <string>
ls
cd <directory>
git init
npm install
grep -r -oP <string>
grep -E <string>
unzip <file>
git pull origin main
cd <string>
ls
cd <string>
cat <string>
source <string>
clear
cd <string>
git config --add <file>
clear
exit
wget <URL>
exit <number>
find <scope-to-search> -name <string>
ls
ls
sudo mkdir <directory>
rm <string>
sudo apt-get install <string>
ls
npm install -g <string>
vim <file>
cp -r <directory>
cd ..
exit <number>
ls
yarn install
cat <string>
git commit -m <string>
ls
ls
git init .
git commit -am <string>
vim <file>
clear
vi <file>
vim <file>
cd <string>
ls
clear
sudo vim <file>
vi <file>
exit
ls
docker-compose logs --follow <string>
open .
sudo docker ps -a
cd <string>
vim
sudo nvim <directory>
ls
script/build.sh
ls -al
exit
ls
ls
less <string>
ls
git status
grep -rl <string>
clear
clear
clear
capsctrl <directory> & disown
ls
npm install
sleep <number>
fg
history -r <string>
sed -i <string>
pwd
cd ..
reset
read <string>
clear
cd <directory>
ls
unzip <file>
cat <string>
cd
fg
ls
sudo pacman -Syyu
ls++ -a
git commit -am <string>
tar -czvf <file>
cat <string>
ssh dirlic@10.18.0.39 -p <number>
ls
sudo chown <string>
git commit -m <string>
<file> <file>
sudo localectl set-x11-keymap <string>
ls
sudo su
vi <file>
sudo pacman -Q
fg
ls
cd <string>
ls
head -n <string>
git branch -M <string>
base64 -w <number>
ls
docker run -d -p <string>
source <file>
git commit -m <string>
ls
sudo systemctl restart <file>
ls
ls -l
ls
cd <string>
exit
ls
sudo mkdir <directory>
vim <file>
systemctl status <string>
sudo curl $ZULU_URL -o <string>
git add .
ls -lt
ls
cd <string>
git status
git add <string>
vim <file>
unset <string>
chmod +x <string>
perl -e
ls
sed <directory>
cd ..
chmod -R <number> <directory>
cd
git add <string>
bash <file>
ls -la <directory>
cp -r <directory>
curl -sSf <string>
cd
cd <string>
sudo raspi-config
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
rm <string>
cd
ls
cd ..
cd
ls
cd <directory>
python3 <file>
git add <string>
cd <directory>
git commit -a -m <string>
cd <directory>
grep -v <string>
git status
git add .
cd <string>
rm <string>
git pull -f
ls
ls
ssh-copy-id <string>
docker ps
<directory> install --from-paths <string> --ignore-src -r -y --simulate
cd <string>
clear
cut -d <string> -f <string>
fg
git add -A
rm <string>
ls
ls
sudo reboot now
docker stop boost
cd <string>
git pull -u <string>
cd <string>
reboot now
grep <string>
vim <file>
ls
yarn add <string>
grep -Eho <string>
vim <file>
rm -rf <string>
pwd
cd <string>
vim <file>
vi <file>
cat <string>
vim <file>
file <string>
sudo find <directory> -name <string>
make clean
cd <directory>
xrandr -q
grep -v <string>
sudo apt install <string>
cat <string>
cd <directory>
sudo sed -i <directory> <file>
mv <string>
ls
ps # prints a line of information about the current running login shell and any processes running under it
su
ls
rm <string>
exit
sudo chattr -i <directory>
python3 <file>
ls
git co
kill -9 <number>
rm -rf <string>
tail -10)
ls
cd
cd
git push -u <string> master
cd
sudo reboot -h <string>
read -p <string> -r <string>
read -r -p <string>
ls
git add .
clear
ls
cd <string>
vim <file>
ls
exit <number>
sudo apt update
rm -rf <string>
ls
sudo zypper <string>
cd ..
git add <string>
npm audit fix
vi <file>
sudo make install
git fetch
sudo apt-get update
cd <string>
grep <string>
sed <directory>
cd <string>
git checkout <string>
git add .
ls
ls
git status
ls
sudo apt install -y <string>
git switch main
vi <file>
cd <string>
grep <string>
ls++ -a
ls -la
ls
ls
cat <string>
rm -f <string>
vim <file>
cd
ip a
sh <file>
rm -rf <string>
ls
git commit -m <string>
ls
chsh <string>
sudo reboot
vi <file>
git remote -v
chmod u+x <string>
vim <file>
nano <file>
git clone <URL>
find . -name <file> -exec <string> -ld <string>
sudo apt-get install <string>
cd <string>
git push
byobu-tmux
cd <directory>
cd <string>
cd <directory>
sudo docker exec <string>
ls
ls
sudo npm uninstall -g <string>
setg RHOSTS.*
docker ps -a
git push -d <string>
cd <string>
ps aux
git branch
git commit
git config --global <file> <file>
exit
ls
clear
git status
cut -f1 -d" <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
clear
npm http GET <URL>
cat <string>
git push -f
ls -l
yarn install
cd
cp <string>
exit
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
read -r <string>
git add .
python3.11 <file>
ls
ls
read -r -p <string>
git commit -m <string>
git init
sudo virsh -c <directory> <string>
git commit --amend --reset-author
ls
git push
vim <file>
sudo usermod -aG <string> <string>
clear
sleep <number>
python <file> runserver 0.0.0.0:2016
fg
ls
clear
cd <directory>
git clone <URL>
done
exit
curl -sH <string> <directory>
python3 <file>
cd <directory>
cd <string>
less <string>
exit
git status
cat <string>
vi <file>
cd <string>
git add .
read <string>
export <string>
ls
python3 <file>
cd
cd ..
ls
ls
ls
more <file>
git commit --allow-empty -m <string>
git
npm install
ls
sudo dpkg-reconfigure console-setup
ls
mkdir <string>
init
ls
tar -xvzf <file>
ls
exit
ls
sudo iptables -t <string> -I <string> -o <string> -j <string>
cut -d\" -f12
sudo curl <URL>
mv <string>
clear
ls
ls
ls
head -1
sudo nala install <string>
awk <string>
pwd
cd <string>
ls
pwd
stat <file>
vim <file>
ls
make clean
codedown javascript > <file>
git remote -v
ls
chmod -x <file>
cd <string>
sudo chmod -o+r <directory>
clear
wget <URL> -O <file>
curl -H <string>
git push
vi <file>
sudo chown www-data:www-data -hR <directory>
awk <string>
npm start
pwd
cd -
sudo lsof -i <string>
ls
sudo add-apt-repository <directory>
perl <file>
cd <string>
cd <string>
git commit -m <string>
sudo pacman -Sy
git add .
ls
rm <string>
exit
grep <string>
cat <string>
rm <string>
ls
git commit -m <string>
clear
cd <directory>
vim <file>
ls
ls
cd <string>
vim <file>
ls
rm -rf <string>
vi <file>
docker rm -f -- <string>
git remote add origin <URL>
git remote -v
ls
ls
ssh -X <string>
chmod +x <string>
ls
vim <file>
clear
git pull
clear
find -iname <string>
git status
git add .
rm -rf <string>
sudo snap install <string>
git rebase <string>
cd <directory>
sudo nvidia-xconfig --enable-all-gpus
npm test
printf <string>
cd <string>
cat <string>
cd <string>
cd
sed -e <directory> -e <directory>
git add -A
cd <string>
ls
unset color_prompt force_color_prompt
sudo yum -y <string> <string>
ls
git init
ls
ls
sudo apt update
exit <number>
sudo chmod +x <string>
ls
git push
ls
ls
find <directory> -type <string> -regex <string> -delete
less
ls
sudo apt-get install <string>
ls
git push heroku master
<file> <file>
clear
clear
sudo apt update
git commit -m <string>
sudo cp <string>
ls
mv <string>
sudo sed -i <directory> <file>
ls
ls
git add <string>
find <directory> -o <string>
npm install --force
git init
sudo pip install <string>
cd ..
git status
cd ..
git init
nano <file>
pwd
npm install
git remote -v
cat <string>
perl <file>
ls
xargs -L1 <string>
tail -n2000
sudo systemctl start <string>
vi <file>
git restore <file>
docker run --name <string> --rm -p <string> -p <string>
ls
bash <file>
ls
vi <file>
cd <string>
ls
more <file>
ls
npm uninstall react-native-snap-carousel --force
cd ..
exit
systemctl daemon-reload
sudo apt upgrade -y
clear
clear
cd <string>
mkdir <string>
sudo chmod a+rwx <directory>
rm <string>
clear
git pull
vim <file>
ls
pwd
exit
ls
htop
local <string>
mkdir <string>
cd <string>
grep <string>
cd <directory>
vim
ls
git status
date
grep -v <string>
cp <string>
chmod +x <string>
uniq
ls
ls
cd <string>
rmdir <string>
docker exec -it <string> bash
tar -xzf <string>
tail -f <directory>
docker push <directory>
local <string>
git commit -m <string>
vim <file>
mkdir <string>
git clone <URL>
git push -u <string> master
git add <string>
composer <string>
cd <directory>
sudo npm i -g <string>
cd <string>
sudo pacman -S <string>
ls -R
cd <string>
find . -name <file> -type <string> -print -delete
ls
cd <string>
vi <file>
grep -a -i -E --no-filename <string> */*.log*
git status
vi <file>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec -print
fg
ls
ls
sudo systemctl disable <file>
cd ..
cd ..
git branch -a
ls
sudo mkdir -p <directory>
npm start
ls
git add <string>
open <string>
clear
find . -name <file>
wget -nd -m -nv <URL>
tar xvzf <file>
exit
git commit --allow-empty -m <string>
grep -Fxq <string>
sudo yum -y <string> <string>
ls
sudo apt-get update
cd
mkdir <string>
unset color_prompt force_color_prompt
cd <string>
cd ..
git commit -m <string>
cd <string>
cat <string>
cd ..
clear
su - <string>
ls
rm -rf <string>
cd <string>
chmod +x <string>
mv <string>
cd <string>
done
exit
rm <string>
cd <string>
cd <directory>
cd
code <string>
clear
exit <number>
ls
fg
cd ..
uname -a
ls
cp -r <directory>
cd ..
cd <string>
cp -v <string> <directory>
cd <string>
apt install --fix-missing
git push -u <string> main
find . -type <string> -name <string> -exec <string> <string>
ln -s <string>
chmod +x <string>
cd <string>
ls
git clone <URL>
git status
cd ..
ls
grep <string>
ls -la
mkdir <string>
npm run watch
git branch
npm install
sed -i <directory>
git commit -m <string>
mv -v <string>
cd <string>
python3 <file>
apt install <string>
docker-compose logs
exit
cat <string>
git rm <string>
docker rmi <string>
git push -u <string> main
nano <file>
git add <string>
history
exit
ls
<directory> <string>
git push
git push origin <string>
ls
docker container <string>
git checkout -b <string>
curl -F"file=<string> <URL>
code .
git add .
git pull origin master
sed -E -e <directory>
sudo chmod <number> <string>
cat <string>
vim <file>
mv <string>
ls
git add .
grep -Eio <string> <string>
ls
chmod +x <string>
sudo systemctl restart nginx
cd <string>
ping <file>
cd <string>
git rev-list -n <number>
npm install -g <string>
git checkout <string>
sudo make clean install
sudo rm -rf <string>
git commit -m <string>
sudo chkconfig <string>
vi <file>
curl <string>
vim <file>
ls
git add -A
cd ..
mkdir --parents <string>
ls
cd <string>
npm-recursive-install
fg
cd <string>
ls
git add <string>
sudo apt-key add -
sudo modprobe <string>
git commit -m <string>
python3 <file>
shift
sudo apt-get update
git status
cd ..
find . -name <string> -type <string>
script/build.sh
nano <string>
ping <string>
git status
uname -a
sudo apt-get install <string>
git status
cd ..
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
vi <file>
git status
bash <file>
sort -nr
cd <string>
sudo docker stop <string>
ls
vim <file>
wget <URL>
sudo git clone <URL>
sudo apt-get install <string>
ls
sudo cp <string>
git commit -am <string>
sudo -s -u <string> -H
sudo make install
vim <file>
touch <file>
ls
ls
mkdir <string>
git checkout <string>
screen -x
tail -f <directory>
ls
ls
exit <number>
vim <file>
cd <string>
wget <URL>
unzip <file> -d <directory>
ls
ls
cd <string>
fg
git add .
vim <file>
sed -i <string>
cd ..
git push -u <string> main
sort -u
find . -name <directory> -type <string> -prune -exec <string> -rf <string>
ls
df -H
ls
git push -u <string> main
ls -la <directory>
service apache2 restart
python3 <file>
cd <directory>
grep collectd * -Ir
ls
rm -rf <string>
clear
less
git commit
sudo kill -9 <number>
chmod <number> <string>
ls -la
exit
ls
cd <string>
git status
ls
npm run develop
cd
git push origin PTS-578_redirects_not_updating_automatically --force
git add .
top
git push
sudo apt-get clean
sudo cp <string>
tail
sudo chmod <number> <string>
mkdir <string>
exit
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
python3 <file>
git branch -M <string>
ls
vi <file>
vi <file>
<file> program
sudo du -h --max-depth=<number> <string>
exit
ls
cat <string>
nano <file>
ls
vi <file>
cd ..
ls
cd <string>
cp -R <string>
ls
cd <string>
git status
ls
git push
node --version
rm -f <string>
docker commit <string>
source <directory>
awk <string>
git branch
sudo ifconfig <string>
rm -f <string>
ls -la
git commit -m <string>
vim <file>
clear
clear
cd <string>
git commit -m <string>
sudo service <string>
vim <file>
ls
touch <string>
mkdir <string>
ls
sudo vim <directory>
cd ..
ls
cd ..
exit <number>
head -1 <file>
ls
git status
python3 <file>
cd
apt-get install screen apt-utils -y
openssl req -x509 -newkey <string> -keyout <file> -out <file> -days <number> -nodes
sudo yarn install
cd
cd <directory>
vim <file>
ps
sudo apt update
chmod <number> <string>
npm run devstart
cd <directory>
exit
ls
rm -rf <string>
rm -r <string>
ls
vim <file>
less <string>
git add -A
ls -a
cd ..
sudo apt autoremove
sudo apt install <string>
less <string>
ls
npm install -g <string>
cp -r <directory>
sudo xbps-remove <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
chmod +x <string>
cd <directory>
npm install -g <string>
ls
sudo kill <number>
cd
cd ..
sudo apt-get autoremove
ls
sudo apt-get -y <string>
fg
clear
mv <string>
git fetch --all
shutdown -h <string>
npm i <string>
sudo systemctl start <string>
su mount <directory> -o <string>
cd <directory>
rm <string>
cd
clear
sudo sed -i <directory> <file>
sed -E -e <directory>
setg RHOSTS <file>
ls
git checkout master
cd <directory>
cut -c4- <string>
cd ..
ps
ls
rm <string>
cd ..
git pull
cd
grep <string>
cd <string>
reboot
ssh-keygen -t <string> -C <file>
exit <number>
sed <directory>
ls -Sr
cd <string>
vim <file>
grep -i <string> >files
cd <string>
cd <string>
cp <string>
git status
rm -rf <string>
ls -la
ls
fg
sudo passwd <string>
ssh dirlic@10.18.0.39 -p <number>
vim <file>
cd <directory>
find . -mtime -7 -type <string>
wget <URL>
git add <string>
cat <string>
apt update
ls
python3 <file>
sudo ls
vim <file>
rm <string>
clear
sudo apt install <string>
vim <file>
sudo apt-get install -y <string>
sudo apt-get install <string>
vim <file>
cd ..
ls
node <file>
ls
cat <string>
ls
exit <number>
cd <string>
tail -n <string>
grep <string>
sudo apt-get upgrade --fix-missing
git commit -m <string>
rm -f <string>
zeus.polsl.gliwice.pl - <number>
less
cd <string>
sudo sed -i <directory>
clear
cd ..
grep <string>
ls
sudo sed -i <directory> <file>
fg
ufw
clear
ls -l
patch -p1 <string> <file>
git log
ps -ef
<file> program
clear
git config --global <file>
mkdir <string>
ls -l
cd <directory>
ls
curl -s <string>
ls
sudo cp -r <string>
sudo sed -i <directory> <file>
ls
cd <string>
ls
ls
cd <string>
ls
git commit
git init
cd <directory>
cd <string>
git branch -M <string>
clear
cd <string>
ls
ls
time <string>
cat <string>
vim <file>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cd <string>
ls
history
tail +x # want to display all the lines from x to y. This includes the xth and yth lines.
ls
sed -e <directory>
ls
cp <string>
cd
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
git pull
clear
docker ps
cp -r <directory>
git init
python3 -m <string> venv
exit <number>
git push
exit <number>
vi <file>
vi <file>
cd <string>
ls
rm -rf <string>
ls
cd <string>
ps aux
ps -e -orss=<string>
git init
clear
chmod <number> <string>
npm run build
cat <string>
git status
cd -
ls
cd <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
ls
apt-get autoremove
cat <string>
chmod +x <string>
curl -k -s <URL>
fg
vim <file>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
vim <file>
exit
source <string>
cd
git remote add origin <URL>
git branch
cd <directory>
ssh -t <file> tmux new -As0
lsof
cd <string>
rsync --verbose --progress --recursive --links --times --delete <string>
git pull origin master
cd <string>
exit
git init
cd ..
ls
fg
cd <directory>
ls
git checkout <string>
ls
mkdir <string>
vim <file>
git commit -m <string>
clear
git
mkdir <string>
service <string>
ls
cd <directory>
docker-compose logs --follow <string>
git init
touch <file>
exit
cd
scp <string>
git branch
uniq -c
find . -type <string> -name <string> -exec <string> -H <string>
find . -name <file>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
vim <file>
cd <directory>
ls
git pull
ls
git clone <URL>
vim <file>
ls
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
rm <string>
sudo chmod <number> <string>
find . -name <file> -exec <string> <string>
sudo apt-get update
ls -la <directory>
df -g
cd <string>
clear
sudo grub-mkconfig -o <directory>
python3 --version
find ~ -type <string> -name <string>
sudo add-apt-repository <directory>
python3 -m <string> install <string>
cd ..
ls
sudo apt update
tmux a -t'attributes'
git branch
top
hostname
vim
sudo make install
unzip -r <string>
cat << -EOF-
git add .
ls
cd <string>
ls
git clone <URL>
rmdir <string>
ls
ls
sudo apt-get update
cd <string>
ls
node <file>
clear
mv <string>
mkdir <string>
npm init
sudo grep --color=<string> -rn <string>
ls
npm i puppeteer -g
cd ..
grep <string>
pkill <string>
su root
cd <string>
man <string>
cd <directory>
git bisect good <string>
cd <string>
time <directory> -cpuprofile=<file>
vi <file>
rm -rf <string>
git push
sed -i <directory>
cd <string>
curl <string>
cat <string>
sudo su
ls
export <string>
ls
pwd
git status
git add .
cd ..
top
ls -la
service apache2 reload
vi <file>
vi <file>
sudo stop uwsgi
dpkg --set-selections <string>
git commit -m <string>
cd ..
sudo apt install <string>
cd <string>
npm run dev
done
sleep <string>
clear
rm -rf <string>
ls
bash <file>
curl -fsSL <URL>
ls
clear
sudo chmod +x <string>
cd <string>
ls
cd ..
cat <string>
vi <file>
ls
npm i -g <string>
npm start
sudo start uwsgi
git commit -m <string>
git pull
sudo apt-get --assume-yes <string> <string>
git commit -m <string>
pwd
cd ..
git status
sudo nginx -t
git add <string>
cat <string>
npm run coverage
touch <file>
sudo swapon <directory>
cd <string>
rm <string>
sed <directory>
xargs -n1 <string>
ls
git push --set-upstream <string> master
mkdir <string>
wget <URL> --output-document=<file>
git push
clear
cd <string>
vim
ls
fg
cd ..
bash <file>
ls
fg
sudo tar -xvzf <file> --strip=<number>
clear
git commit -m <string>
ssh -L <string>
git init
ping <file>
sed <directory>
xrandr --listmonitors
git remote add origin <URL>
cd ..
ls
git add <string>
cd ..
unset color_prompt force_color_prompt
sudo apt-get upgrade
sudo rm -rf <directory> <directory>
yarn add -D <string>
capsctrl <directory> & disown
cd <string>
npm run start
git push -u
cd <string>
exit
ls
sudo sshfs -o <directory> -p <string>
ls
python3 --versionInstall <string>
sudo systemctl restart <string>
cd <string>
sudo flatpak override --filesystem=<directory>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cd ..
sudo -H <string> install -U <string>
cat <string>
cd <directory>
cd <directory>
gpg --recv-keys <string>
sudo aptitude <string>
ls
sh <file>
xargs -0 <string> -lad --
git push
ls
vi <file>
npm run coverage
vim <file>
git commit -am <string>
clear
sudo less <directory>
git init
ls
ps auxww
sudo apt upgrade
wget <URL>
ls
clear
git push origin master
git stash --include-untracked
curl -sLo <string>
sudo apt install <string>
cd
sudo git pull
ls
apt-cache
git add .
cd <string>
sudo git commit -m <string> --amend
docker-compose up -d --build
git push -u <string> master
grep <string>
cd
systemctl status <string>
ls
ls
cd
vi <file>
ls
sudo git status
curl -fsSL <URL>
cd
git remote set-url origin <string>
ls -all
git add <string>
rm <string>
cd <directory>
npm sass -D
cd ..
sudo service nginx restart
clear
ls
killall <string>
sudo ls
pwd
sudo apt upgrade -y
cd <string>
sudo pacman-key --populate <string>
sudo -i
sudo apt-get -y <string> <string>
cd <string>
git status
git commit -m <string>
cd <string>
git remote add origin <URL>
git add .
cd <string>
nano <string>
git status
cd
git add .
cd <directory>
git commit -m <string>
git init
sudo nano <directory>
cp -r <directory>
ls
cd <directory>
git push -u
ls
clear
ls
clear
git branch -M <string>
find . -type <string> -exec <string> <directory> {} +
cd <string>
<file> - <number>
pwd
python3 <file> -- <string> @CAMERA=<string> <string>
find . -mtime -2
kubectl get <string>
sudo ls <directory>
sudo chmod <number> -R <directory>
git commit -m <string>
apt-get update
read -rp <string> <string>
python3 <file>
vi <file>
sudo python <file>
swapon --show
cd ..
sed <directory>
git remote add origin <URL>
git add <string>
cd <string>
cd ..
cd <string>
exit
git status
head -10
npm install --save-dev --save-exact <string>
chmod +x <string>
ls
git add <string>
git branch 2> <directory>
touch <file>
cd ..
script/build.sh
cd <string>
ps aux
cd <string>
git commit -m <string>
rm -rf <string>
ls
ls
sudo add-apt-repository <directory>
read -e -p <string>
apt-get -y <string> <string>
ls
clear
ls
exit
sudo -H <string> install <string>
git pull
clear
nano <file>
sudo docker kill corrade
git commit -am <string>
ls
cd <string>
find $dir -type <string>
cp <string>
git init
mv <string>
cd <string>
curl -fLso <file>
sudo sed -i <directory> <file>
ls -l
find <directory> -name <string>
git branch
sudo nano <file>
clear
clear
clear
sleep <string>
cd ..
cd <string>
ls
clear
git commit -m <string>
ls
ls
cd <string>
mv <string>
ls
cd <string>
sudo stop uwsgi
git commit
ls
wget <URL>
git push
sudo vim <file>
exit
vi <file>
git clone <URL>
history -cw
git pull
history
docker-compose logs
sudo ln -s <directory>
vim <file>
fg
else\
git pull
ls -ltr
clear
grep <string>
npm install <string>
unset <string>
sudo timeshift --list
clear
git pull
ssh <string>
wget <URL>
ls
ls
cd <directory>
mv <string>
git clone <URL>
git push
ls
tmux
git clone <URL>
chmod <string>
mv <string>
cd <string>
more <file>
docker push <directory>
grep -r <string>
sudo kill -9 <number>
vim <file>
sudo apt-get update
git clone <URL>
ls
source <file>
sudo apt-get update
nano <file>
fg
git pull
git grep -lE <string>
sudo tee <directory>
sudo -u <string> psql
sudo timeshift --list
cd ..
find . -type <string>
exit
cd <directory>
ls
vim <file>
fg
ls -alF
npm install --save <string> --force
ls
ls
ls
cat <string>
env
git push origin
sudo systemctl enable <string>
halt
cd <directory>
cd <string>
git pull
ls
rm -rf <string>
git push
sed -i <directory> -e <directory>
ls -la
cd <string>
grep --help
npm i
git reset HEAD^
docker-compose
rmdir <string>
git
ls
vim <file>
docker-compose logs --follow <string>
sudo su
wget <URL>
ls ls
mkdir <string>
cd
ls
service apache2 restart
sudo make clean install
vim
npm start
shift
cd -
sudo chmod <number> <directory>
read
python3 <file>
git status
nano <string>
kubectl apply --validate=<string> -f <URL>
npm install -g <string>
vim <file>
git stash
ls
cd <string>
mkdir <string>
sudo apt-get -y <string> <string>
cp -r <directory>
history
git add .
cd <string>
vim <file>
clear
vim <file>
grep <string>
cd <string>
cd ..
clear
jq <string>
ls
ls -altr
open .
brew tap <directory>
cd <string>
nc <number> <number>
docker-compose logs
git init
clear
clear
vim <file>
git init
cat <string>
ls
sudo chown <string>
exit
cat <string>
fg
vim <file>
pwd
rsync <directory>
ls
vi <file>
cp -r <directory>
ls
sudo snap install android-studio --classic
rm -rf <string>
sudo ufw status
ls
ls
sudo vim <directory>
find -name <string> -type <string>
python3 <file>
ls
cd <string>
ps aux
cd..
rm <string>
cat <string>
node <file>
source <directory>
date
ls -lat
clear
curl -L <URL>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
git push
exit
clear
cd <string>
more <file>
ls
cd <string>
npm i <string>
vim <file>
cd ..
git pull
free
git pull
cat <string>
cat <string>
docker-compose logs
git login <URL>
sudo sh -c
cd ..
exec <string>
docker push <directory>
chmod <number> <string>
sudo userdel <string>
cd <string>
python3 <file>
git add <string>
git flow <string>
grep -win -C <number>
sudo ln -sw <directory>
grep -i <string>
cd <string>
bash <file>
vim <file>
bzip2 --version <string>
curl -sS --fail --compressed -L <directory> -o <string>
sed -e <string> -e <directory> -e <string> \
sudo wget -O - <string>
git add <string>
cd <directory>
mkdir <string>
git clone <URL>
dpkg -L <string>
ls -l
python3 -m <string> install --upgrade <string>
clear
git commit -m <string>
ls
cut -d <string> -f <string>
npm install -g <string>
git commit -m <string>
grep <string>
curl <URL> -u <string> -D <string> -X <string>
ls
ls
ls
cat <string>
sudo add-apt-repository <directory>
apt-cache search <string>
ls
git add .
git commit -m <string>
sudo docker rm corrade
ls
find . -name <file> -type <string> -exec <string> -rf <string>
rm <string>
cd <string>
git commit
ls
ls
find . -size <string> -a -print -a -exec <string> -f <string> \
cp <string>
git config --global <file> <file>
git push -u <string> master
git fetch origin
mv <string>
sudo raspi-config
ls
ssh-keygen -t <string> -b <number> -C <file>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
ls
ls
ls
mv <string>
git config --global <file>
git status
git init
git diff
sudo aptitude <string>
sudo apt-get -y <string>
cd ..
unset color_prompt force_color_prompt
cd ..
cat <string>
wget -q -O - <URL>
clear
grep <string>
cd
mv <string>
ls
git commit -m <string>
cd <string>
wget <URL>
sudo wget <URL>
vim <file>
rm <string>
git
sudo apt update -y
git add .
chmod <string>
git rebase -i <string>
sudo apt update
cp <string>
python3 <file>
ls ..
sudo poweroff
screen -r <string>
npm i <string>
cd <string>
git checkout <string>
sudo apt-get upgrade
ls
sudo do-release-upgrade
mv <string>
ln -f <string>
cd ..
ls
exit
ls
git status
cp -r <directory>
ls
scp <string>
sudo apt install <string>
ls
<directory> -m <file>
ls
sed -i <directory>
chmod u+x <string>
exit <number>
pwd
git commit -m <string>
cd <directory>
cd -
ls
sudo service nginx reload
sudo cp <string>
ls
cd <string>
git add .
cd ..
more <file>
cd <directory>
more <file>
git pull
sudo apt-key add -
ls
exit
mv <string>
ls
ls
bash
mv <string>
ln -s <string>
sudo systemctl enable <string>
git init
git switch main
du -sh
git clone --depth <number> <URL>
git clone <URL>
ls
git checkout <string>
pwd
cd <string>
cd <string>
grep <string>
cd <string>
vim <file>
cd <string>
less
git commit -m <string>
sed <directory>
sudo subl <string>
ls
ls
curl -i -s <URL>
grep -qE <string>
code <string>
grep -i <string> >files
git commit -m <string>
ls
ls
exit <number>
cd <directory>
sudo rm -r <string>
git pull origin master
cd <string>
ls
sudo apt install <string>
cut -f2-4
cd <string>
cd <directory>
ls
git add <string>
vi <file>
rm -rf <string>
ls
wget -O <file>
ls
php -S <string>
python3 <file>
sort -u
git stash apply <string>
git init
ls
awk <string>
git add .
git add .
git clone <URL>
cd <string>
ls
ls
exit
ls
ls -l
cp -av <directory>
cd <string>
python3 <file>
ls
read -r -p <string>
sudo npm install -g <string>
pulseaudio -v
tail -f <directory>
sudo make
git add <string>
sudo sed -i <directory>
exit
sudo apt update
history
rm <string>
git stash
cd
less <string>
sudo docker pull <string>
git init
git add <string>
grep -r <string>
sudo <directory> -w <string> -o <string>
ls
grep <string>
docker build -t <string>
git commit -m <string>
git config --global <file>
sudo python <file>
cd <string>
git init
cd <string>
ln -s <string>
sed <directory>
git gc --aggressive --prune
sudo sed -i <directory> <file>
ls
touch <file>
ls
cd <directory>
cp
mkdir <string>
man <string>
ls
mkdir <string>
git branch main
curl -sSf <string>
apt-mark
then
git describe --contains <string>
cd <string>
ls
vim <file>
xargs tar <string>
ls
local <string>
cd ..
mv <string>
git diff
git push -u <string> master
ls
ls
git pull
ls
else power_discharge=<string> -v <directory> -v <string>
update-alternatives --list <string>
cd ..
perl <file>
git diff
rm <string>
ls
git branch -M <string>
vi <file>
ssh <string>
tmux source <file>
tmux a
git status
vim <file>
git add <string>
ls
do\
exit
ls -a
sudo python3 <file>
ls
npm install
sudo usermod -aG <string> $USER
sudo npm install -f
ls
sudo snap install -classic <string>
ls
vim <file>
vim
cd
ls
nano <file>
sudo systemctl start <string>
then
ls
python3 <file>
docker-compose logs
ls
vi <file>
cd <string>
ls
vi <file>
git commit -m <string>
ls
clear
fg
ls
sudo kill <number>
git remote add origin <URL>
exit
ls -lht
ls
su - <string>
ls
ls
cd <string>
sudo apt-get remove <string>
vim <file>
git init
rm <string>
apt-transport-https \
clear
git commit -m <string>
clear
git log
sudo python <file>
python3
ls
git checkout --orphan <string>
git commit -am <string>
sudo apt-get install -y <string>
cd <string>
do\
sudo su
sudo apt-get update
mv <string>
cd <string>
sleep <number>
find . -name <string> -printf <string>
mv <string>
git commit -m <string>
cd <directory>
cd <string>
cd <string>
ls
vi <file>
apt install <string>
sudo make install
exit
grep -r <string>
cd <string>
sudo ln -s <directory>
git add <string>
npm test
cd <string>
git add .
su
snap install chromium-browser --no-check-certificate
git config --global <file>
git push -u <string> master
ls -l
cd..
ls -l
grep <string>
paste -sd+ -
ls
git commit
ls
terraform <string>
ls
ls -ltr
git remote add origin <URL>
exit
chmod <number> <string>
cd ..
sudo sed -i <directory> <file>
ps -ef
npm i crypto-browserify --save-dev
sudo ln -s <directory>
git clone <URL>
ls
vi <file>
git push origin master
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
ls
ls
cd <string>
cat <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
vim <file>
exit <number>
bash <file>
git push --set-upstream <string> <string>
ls
git add <string>
sudo reboot now
find . -name <file>
exit
sudo rfkill <string>
git clone <URL>
git switch <string>
git add <string>
cd ..
wget <URL>
awk <string>
sudo rm public_data
read <string>
cd <string>
nc -l <number>
ls
vim <file>
git -h
wc -l
ls
nano <string>
grep -v <string>
cd <string>
ls
cd <string>
sort
chmod <string> -- <string>
clear
git commit -m <string>
history
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
LANG=<string> rpm -qp --queryformat <string>
find . -name <string> -exec <string> --parents <string>
helm
tar xvzf <file>
ls
npm start
mv <string>
fg
ls
apt-get -y -qq <string> <string>
cat <string>
exit <number>
sudo sed -i <directory> <file>
sudo passwd
git push
ls
cat <string>
git stash
git add .
git status
ls
git pull
cd <string>
awk -F\" <string>
ls
git push -u <string> main
pwd
git add .
ls
git commit -v -a -m <string>
yarn add <string>
cd
git clone <URL>
git add .
sudo chown -R <string>
rm -r <string>
ls
git add .
dir
ls
vi <file>
sudo reboot now
find . -path <string> -prune -o <string> -name <string> -a -type <string>
clear
cd <string>
exit
git branch
mkdir <string>
clear
git commit -m <string>
ls
cd <string>
git pull
rm -f <string>
grep <string>
ls
npm run dev
ls -la
cd ..
sudo ls <directory>
sudo rm <directory> -r
unzip -o -d <string>
rm -f <string>
sudo apt-get install texstudio -y
vim -v
ls
cd ..
cd <directory>
cd <string>
clear
vim <file>
sudo apt install <string>
pavucontrol
sudo mv <string>
find <directory> -type <string> -size <string>
cd <string>
sudo pacman -A <file>
git init --bare <file>
node <file>
ls
sudo apt update
sudo mount -a
tmux a
git add .
find --help
git init
grep --include=<file> --exclude-dir=<string> -rnw <string> -e <string>
reboot
sudo apt-get dselect-upgrade
ls -lrt
cd
npm install <string>
cd <string>
git checkout <string>
ls
sudo ifconfig en0 ether <string>
cd <string>
du -skh <string>
grep -v <string>
ls
cat <string>
cd <directory>
head -c <string>
git clone <URL>
ls
ls
git push
cd <string>
ls
sudo update-rc.d <string>
sort --human-numeric-sort --reverse
git push
git branch 2> <directory>
grep <string>
awk <string>
tail -f <string>
npm publish
cat <string>
df
sudo pacman -Rns <string>
npm i <string>
python3 <file>
ls -alrt <string>
sudo stop uwsgi
exit
tar zxvf -
clear
ls
git config --global <file> <file>
vi
sudo su
docker stop <string>
ls
rm <string>
sudo cat <directory>
git commit -m <string>
cd <directory>
ls
git push --set-upstream <string> <string>
sudo apt-get -y <string> <string>
exit
ls
ls -
git checkout master
git checkout -b <string>
cd ..
cd <directory>
find <directory> -inum <number>
git commit --allow-empty -m <string>
touch <string>
rm <string>
mkdir <string>
ls -la
sudo apt-get update -y
cd
cd <string>
chmod +x <string>
ls
sudo poweroff
shutdown
chmod u+x <string>
find $dir -type <string>
sudo docker run -it --name <string> --entrypoint <string> -u <string> --privileged --rm <directory>
ls
git add <string>
git commit -m <string>
vim <file>
grep --invert-match --extended-regexp <string>
sudo apt remove <string>
ls
sudo pacman -S <string>
read -s -n <number>
sudo -E <string> -
grep <string>
cd <string>
pacman -S <string>
sed -i <string> -e <string>
fg
ls -a
sudo adduser <string>
cd <string>
vim <file>
vim <file>
pkill
ls -la <directory>
source <file>
cat <string>
mv <string>
cd ..
then\
git branch -a
sudo vim <directory>
fg
cd
rm <string>
git add <string>
cd <string>
exit
ls
mkdir <string>
wc
clear
rm -rf <string>
git rm --cached <directory>
sudo systemctl reload <string>
tmux source-file <file>
cat <string>
python3 <file>
sudo sed -i <directory> <file>
code .
sudo apt install npm -y
git commit -a -m <string>
vi <file>
sudo apt-get install <string>
git branch
ps aux
git hist
python3 <file>
ls
cd <string>
ls
git init
ls
fg
grep <string>
sudo ufw enable
bash <file>
sudo systemctl status <string>
find . -name <file> -type <string> -exec <string> -rf <string>
tmux -u
git rebase -i <string>
ls
fg
git clone <URL>
open <string>
find . -name <file>
exit
git config --global <file> <string>
tee -a <string>
tr <string>
shutdown -r <string>
<directory> -e <string>
ls -a
find . -type <string> -name <string>
ls
sudo bash <file>
cd ..
source <string>
git checkout <string>
git add <string>
cp <string>
cd
vi <file>
git ci -am <string>
vim <file>
sudo sed -i <directory> <file>
sudo apt install pidgin -y
vim <file>
cd <directory>
sort > <file>
rm -f <string>
clear
cp <string>
exit
curl <string>
ls
git checkout <string>
sleep <number>
fg
ls -ltra
cd <string>
sudo dpkg -i <file>
ls
rm <string>
rm -fv -- <string>
pwd
cd <string>
exit <number>
vim
cat <string>
sudo start uwsgi
git config --local <file>
ls
npm install
rm -f <string>
git config --global <file> <file>
ls
tail -f <string>
cd <string>
curl -sS <string>
cat <string>
chsh
ls
curl -k <URL>
cd ..
sudo systemctl mask <string>
ls
<directory> <string>
reboot
git push
cd <string>
ls
cd <string>
npm install
sudo apt upgrade -y
sudo make install
grep <string>
cd <directory>
git pull
cd
cat <string>
mv <string>
git pull
telnet <string>
date
ls
chmod -R <string>
cd <directory>
cd <string>
ls
git config --global <file> <file>
read -r -p <string>
npm run bench -- -c <file> -n <file>
ls
ls
cd <string>
clear
sudo systemctl restart nginx
find . -name <file>
unset <string>
chmod <number> <string>
ls
history
who
vim <file>
mv <string>
git status
vim <file>
git commit -m <string>
git commit -m <string>
git remote -v
git push -u <string> master
sudo apt update
clear
ls
git commit -m <string>
docker-compose up -d --build
curl -vvvvv -i -X <string> $userURL --data <file> -H <directory> -H <directory> -H <string>
vim <file>
cd ..
npm start
chmod <string> -- <directory>
ls
ls
mv <string>
sudo service nginx reload
ls
clear
ls
git clone <URL>
git status
vim <file>
df -h
ls
chmod +x <string>
git status
git add -A
service apache2 reload
git add <string>
cd <string>
ls
cd ..
sudo nano <directory>
ps -h
rm <string>
vim <file>
wget -O <file>
df -lh
vim <file>
git branch -M <string>
npm start
cp <string>
git status
find `pwd` -name <string> -exec <string> -inHP -A <number>
cd ..
cd <string>
cd <string>
cd <directory>
cd ..
mkdir <string>
export <string>
ls -a
npm update -g <string>
scp <string>
ls
clear
ls
python3 <file>
cd <string>
ping <file>
yarn add file-loader --dev
exit
ls
jq <string>
docker cp <string>
sudo apt update
git reset
killall -9 <string>
git push -u <string> main
python3.7 -m <string> -V
<directory> <string>
cd <string>
git rebase --continue
git commit -m <string>
ssh <file> -p <number> -i <string>
cd <string>
vi <file>
node <file>
pkill <string>
more <file>
cd <string>
curl -sL <URL>
ls -lAF
git reset --hard <string>
read -r <string>
sudo apt-get update
sudo systemctl status <string>
cd ..
cd
rm <string>
ls
ssh -t <file> tmux new -As0
exit
strings <file>
sudo
touch <file>
rm -r <string>
cd <directory>
ls
git merge --abort
clear
cd <string>
clear
vim <file>
git clone <URL>
fg
vi <file>
fg
fg
print <string>
ls
touch <file>
cd <string>
find <string> -type <string> -not <string> -wholename <file> -prune <string> -exec <string> -pi -e <string>
ls
ls
git merge <string>
sudo systemctl disable <file>
cd ..
sed -i <directory>
git init
cpio -p -d -v <string>
vim <file>
curl <string>
ls
clear
git commit -m <string>
git pull origin main
wget -q -O <file>
git status
git add <string>
sudo reboot
mkdir -v <string>
cd <string>
cd <string>
chmod -R <string>
vi <file>
nano <file>
clear
ls
bash
cat <string>
npm run start
vim <file>
sudo apt-get -y <string> <string>
git add -A
export <string>
git
cd <string>
ls -latr <directory>
sed -i <string>
ls
vi <file>
cd
cd <directory>
grep -E <string>
ls
find . -empty -type <string> -print -delete
git add <string>
sudo nginx -t
sudo mv <file>
less <string>
ls
sudo apt install <string>
clear
ssh <string>
ls
git clone --depth=<number> <URL> <directory>
npm start
cd
cd
nano <file>
git status
sleep <string>
mv <string>
cd ..
service apache2 restart
clear
vim <file>
sleep <number>
vim <file>
git add .
mvn compile
git clone --depth=<number> <URL> <directory>
git push
docker exec -i -t <string>
mkdir -p <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
sudo rm -r <string>
git add .
touch <file>
sudo wget <URL>
wget -O <file>
npm init
ls
clear
ls
git grep -l <string>
git clone <URL>
git add .
vim <file>
su root
sudo pacman -S <string>
touch <file>
ls
git commit --no-verify
ls
cd <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
sudo xbps-install <string>
npm run test
cd
service <string>
sudo apt-get purge <string>
tail -f <string>
ls
sudo apk add <string>
cd <string>
sed -n -e <directory>
rm <string>
read -n <number> -p <string>
cat <string>
sudo apt remove <string>
cd <string>
git log -p -- <file>
exit
cd <string>
sudo su
cd <directory>
git init
ls
git config --global <file> <file>
exit
apt-get update
halt
ls
cd <string>
script/build.sh
exit
cd ..
mkdir -p <string>
ls
curl -fsSL <URL>
nano <file>
rm -r <string>
sed -i <directory>
cd ..
cat <string>
ls -all
git commit -m <string>
git checkout -b <string>
less
cd <string>
ls
clear
grep <string>
git remote set-url <string>
read -r -p <string>
git status
sudo sed -i <directory>
cd ..
kill <number>
vim <file>
touch <file>
git commit -m <string>
clear
exit
cat <string>
uname -a
exit <number>
code .
ls
cd <directory>
cd ..
apt update
ls -la
cd <directory>
ls
ls
vim <file>
ls
ln -sf <directory>
git commit -m <string>
cd <string>
git checkout master
cd ..
git push origin master
git push
fg
docker-compose up -d --build
ls
curl -T <directory> <string>
cd <directory>
git push -u <string> master
docker run -v <directory> -v <directory> -v <directory> --rm -it <string>
curl -L -O <URL>
ls
cd <directory>
ls
git add .
ls
ls
cd <string>
ping <file>
sudo apk add <string>
tar -zxvf <file>
sudo apt-get update
npm install
exit
cd <string>
ls -lh <string>
wget <URL>
alias <string>
git clone <URL>
sudo pacman -S <string>
git status
kill <number>
du -skh <string>
rm -rf <string>
ls
ls
sudo add-apt-repository <directory>
reboot
clear
source <string>
cd ..
<directory> <string>
git config --global <file> <string> --timeout=<string>
vim <file>
clear
cd ..
cut -f1,3 <file>
ls
vi <file>
ls
sudo nano <directory>
cd ..
sudo -u <string>
ls
python3 <file>
docker swarm <string>
ls
cd <directory>
ls
perl
mkdir <string>
ls
wget <URL>
vi <file>
vi <file>
sudo apt-get -y <string> <string>
git branch --no-color <string> <directory>
vim <file>
chmod <number> -R <directory>
cp <string>
ls
clear
xargs -0 <string> -- <string>
vim
cd ..
cd <string>
ls
git push
git push -f
ls
cd -
wget -q -O <file>
cd <directory>
ls
cd <string>
python3
man <string>
rm -rf <string>
exit
sudo xbps-install -Su
python <file> runserver 0.0.0.0:2016
sudo systemctl restart <string>
git clone <URL>
clear
<directory> <directory>
ls
git checkout -B <string>
git add <string>
ls
clear
cd <directory>
gpg --version
exit
sudo apt update
cd <directory>
cp <string>
vim <file>
git checkout <string>
git commit -m <string>
git push -u <string> main
sudo apt autoremove
cd <string>
cd <string>
ls -a
diff <file>
mv <string>
git init
git pull origin development
vim
ls
vim <file>
clear
grep
cd <directory>
ls
cd <directory>
ls
history
sed <directory>
host
fg
vi <file>
git push -u <string> main
done
cd <string>
ls
ps -auxwf
ls
ls
git commit -m <string>
ls
docker pull <string>
curl -s <string>
cd <string>
cat <string>
ls
ls -la
cd ..
ls -la
vi <file>
printf <string>
file <string>
uname -a
ls
mv <string>
rm <string>
vim <file>
docker-compose up -d --build
npm audit
rm <string>
ls -l
vim <file>
history
ls
git rm -cached <string>
git clone <URL>
ls
ls
apt search <string>
find . -type <string> -exec <string> <directory> {} +
git commit -m <string>
python3 <file>
rm -r <string>
sort
ls
git branch
ls
sudo dpkg --add-architecture <string>
apt update
git push origin master
ls
ls
git commit -m <string>
openssl genrsa <number>
clear
cd ..
cat <string>
ls
read -p <string>
ls -alrt
read -s -n <number>
git diff
ls -ltr
sudo chmod -x <file>
exit
node -v
bunzip2 <string>
chmod <number> <string>
sudo ln -s <directory>
cd <directory>
env
time <directory> -cpuprofile=<file>
cd
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
git commit -am <string>
ls
rm -r <string>
ls
ssh-copy-id
ls
git clone <URL>
pwd
git push
clear
docker-compose up -d --build
sudo ln -s <directory>
sudo apt update
mv <string>
clear
pwd
vim <file>
vi <file>
exit
git add <string>
date --help
vim
cd <string>
ls
exit
sudo apt install <string>
vi <file>
clear
git push
vi <file>
rm -r <string>
sudo chown -R <string>
git checkout
npm run start
mkdir -p <string>
rm -rf <string>
ls
cd ..
git commit -m <string>
git clone <URL>
killall
npm run test
cd <string>
sudo apt-get install <string>
mkdir <string>
cat <string>
df -h
sudo stop uwsgi
vi <file>
clear
hostname -I
chmod <string>
cd <string>
vim <file>
cp -i <string>
git commit -m <string>
ping <string>
tail -f <string>
ls
git clone <URL>
ls
clear
git add <string>
exit
ls
git branch --set-upstream-to=<directory> <string>
sudo su
unzip <file>
rm <string>
sudo nohup mongod --fork --logpath <directory>
cd <string>
ls
rm -r <string>
date <string>
cd <directory>
cd <string>
sudo vi <file>
cd <string>
git remote add origin <URL>
vim <file>
cd -
ls
clear
ls
cd <string>
find . -type <string> -exec <string> <directory> {} +
find . -size <string> -a -print -a -exec <string> -f <string> \
ls
rmdir <string>
ls
fg
cd ..
clear
ls -la
ls
git push -u <string> master
git fetch
vim <file>
fg
ls
cd ..
clear
cd -
which <string>
cd ..
git status
sudo ufw allow <string>
fg
fg
vi <file>
ps aux
vi <file>
apt-get update
vim <file>
clear
cp -iv <string>
ls -a
sudo su
cd <string>
sort -rh
cd ..
mvn archetype:generate <string>
ls
clear
service apache2 restart
cd <string>
cd <string>
ls
grep <string>
clear
sudo start uwsgi
ls
git add <string>
cat <string>
wc -l
sed -E -e <directory>
sudo apt-get autoremove
clear
ls
cd ..
ls
cd <string>
less <string>
cd
clear
ls
vi <file>
git commit -m <string>
exit
docker-compose logs
nano <file>
cd <string>
ls
ln -s <string>
sed <directory>
ls
sudo apt upgrade -y
tail -f <directory>
git add <string>
cat <string>
ls
sudo nano <directory>
cd ..
wget <URL>
git push
git commit -m <string>
git checkout -
git push -u <string> master
ls
cat <string>
ls
clear
wget
sudo mv <file>
mkdir -p <string>
mv <string>
python3 <file>
ls
sudo sed -i <directory> <file>
ls
sudo python <file>
sudo make install
fg
mv <string>
cd <directory>
ls -alrt
cd <string>
find . -type <string> -print0
fg
git cm -m <string>
ssh-copy-id <string>
cd <string>
ls
exit
clear
vim <file>
git diff <string>
docker rmi <string>
python3
vi <file>
nc -l <number>
docker-compose up -d --build
npm i lebab -g
cd <string>
ls
ls -lAF <string>
git status
pwd
npm start
docker-compose logs --follow <string>
git push origin master
rm -f <string>
git stash pop
python3 <file>
git status
cd
else <string>
mkdir <string>
cd <directory>
ls
npm install -g <string>
ls -lrtd <string>
ls
sudo apt update
cd -
git add .
git push
ls -lht
mkdir <string>
apt-get install <string>
vi <file>
sudo pacman -Rdd <string>
grep <string>
git branch -D <string>
git commit -m <string>
git status
code <string>
top
env
cat <string>
vi <file>
apt install <string>
apt-get purge <string>
done
git commit --amend
apt list --upgradable
sed -e <directory> -e <directory>
cd <directory>
grep --color=<string> -o -- <string>
touch <string>
ls
ps -f -u <string>
git commit -m <string>
ls
ls -l
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
npm run test
vim <file>
ls
fg
ls
ls
exit
find . -empty -type <string> -print -deletefind <string> -empty -type <string> -print -delete
vi <file>
git push -u <string> master
clear
vi <file>
rm <string>
cd
git commit --allow-empty -m <string>
git commit -m <string>
ls
git branch
cd <string>
git remote add origin <URL>
git switch <string>
cd <string>
ls
ls
git pull origin <string>
cd ..
clear
sh
git branch -M <string>
docker run -d -p <string>
grep -i <string>
cd <directory>
ssh <string>
ls
git init
git clone <URL>
vi <file>
ls
git push
exit
git status
cat <string>
curl -sSfL <URL>
vi <file>
ls
ls
tmux -V
cp <string>
cd ..
ls
ls
sudo apt-add-repository <directory>
sudo python3 <file>
sudo vim <directory>
fg
ls
scp -r <string>
grep <string>
grep <string>
git clone <URL>
git commit
grep -n <string> <directory>
clear
sudo docker build --tag <string>
sed -e <directory>
vi <file>
vi <file>
ls
cd <string>
cd <string>
du -sh
cd ..
git remote add origin <URL>
ls
fg
ls
git add -A
sudo add-apt-repository <string>
install
git rebase <string>
vim <file>
exit
pwd
grep <string>
ssh -L <string> -N -f -l <string> <string>
ls
git submodule add <URL>
git push origin main
git add <string>
cd <string>
exit
apt-get install <string>
clear
curl <string>
source <directory>
sudo su
git add .
docker build -t <string>
vim <file>
ls
cd <string>
sudo fdisk -l
sudo sed -i <directory>
vi <file>
then\
chmod <string>
sudo sed -i <directory>
ls
cat <string>
ls
vim <file>
cd ..
vim <file>
cd ..
cd ..
true
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
git status
ls
sudo apt upgrade
git branch
git status
sudo yum install -y <string>
pwd
ls
git add .
vi <file>
cd <directory>
ls
git clone <URL>
git push
cd <string>
clear
top
git remote remove origin
ls
awk -F'*' <directory>
sudo apk add <string>
cd
git init
ln -sf <directory>
exit <number>
cd <string>
podman <string>
source <string>
mkdir <string>
ls
head -$var <string>
yarn add -D <string>
cd ..
ls
ls
vim <file>
setg RHOSTS <file>
cd <directory>
clear
npm run test
vim <file>
cd <string>
npm install
ping <string>
mount
shutdown
docker run -itd --name <string> -p <string>
code .
apt-get update
git remote add origin <URL>
python3 <file>
rm -fr <string>
scp <string>
rm -rf: <string>
cd <string>
service apache2 restart
sudo python <file>
git push
cd <string>
cat <string>
ls
cd <directory>
wget -O <file>
cp <string>
python3 <file>
docker push <directory>
git add <string>
git add <string>
sed <directory>
cd <directory>
git checkout <string>
sudo virsh -c <directory> <string>
vim <file>
rm -f <string>
ls
cd <string>
env
sudo apt-get update
git rebase --abort
ls
rm -rf <string>
cd
vim <file>
vim <file>
which <string>
cd <string>
cat <string>
cd
npm install --only=<string>
ssh dirlic@10.18.0.39 -p <number>
exit
ls
wget -qO- <URL>
fg
cd <string>
git commit -m <string>
git clone <URL>
nano <file>
fg
ls
vim <file>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
cat <string>
journalctl -xeu <file>
git push
ls -
clear
sudo sed -i <directory>
cd <string>
cd <string>
cd <directory>
vi <file>
scp <string>
git status
shutdown now
sudo apt autoremove
git push origin -- <string>
ls -a
wc -l
git clone <URL>
cp <string>
cd <string>
cd <string>
docker run -d -p <string>
chmod u+x <string>
<directory> <string>
rm -rf <string>
grep <string>
ls -l
exit
rm -rf <string>
cd <directory>
journalctl -xe -b <number>
sh
ssh <string>
code .
git diff
npm --help
chown <string>
sudo apt install <string>
systemctl status <string>
cd <string>
mkdir <string>
clear
git add <string>
rm <string>
ls
ls
ls
ls
chown <string>
ls
ls
cat <string>
mv <string>
git branch -M <string>
else\
find $path -type <string> -name <string>
cd <string>
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ls
sudo rmdir public_html
sudo apt upgrade
ls
cd <directory>
vim <file>
cat <string>
ls
nano <file>
sudo apt-get install <string>
rm -rf <string>
ls
<directory> <string>
fg
<file> program
exit
sudo lsof -i <string>
git push
git push
ls
cp <string>
chmod u+x <string>
cd ..
date
vim <file>
bash
scp <string>
cp <string>
git status
pkill <string>
docker run -p <string> --name <string> -e <string> -e <string> -d <string>
cat <string>
helm init --tiller-namespace <string>
sudo cat <file> <string>
git pull
find -mindepth <number> -name <string>
cd <string>
cd ..
fg
ls
python3 <file>
export <string>
docker ps -a
git pull
clear
sudo sed -i <directory>
more <file>
git push
cat <string>
fg
mv <string>
sudo apt install -y <string>
npm install
git commit -m <string>
uname -n
ls
df -lh
git status
ls
exit
npm run watch
touch <file>
mkdir <string>
exit
git commit -m <string>
sudo apt update
<directory> <string>
grep -n <string> <directory>
cd ..
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
grep <string>
setg RHOSTS.*
nano <file>
sudo docker compose <string>
ls
ls
cd <string>
chmod +x <string>
cat <string>
npm i <string>
ls
top
perl -ne <string>
cd <string>
df
sed -i <string>
ls
cd <directory>
su field
cd <string>
ls -altr
exit <number>
ls
git push
ls
clear
sudo vim <directory>
sed -E -e <directory>
sudo apt install <string>
node <file>
git add .
cd ..
vim <file>
git add --all
ls
rm -rf <string>
tmux attach
sudo ls -a <directory>
sudo pacman -S <string>
sudo chown -R <string>
clear
git status
cd ..
sudo systemctl status <string>
cd <string>
cd <string>
ls
ls
ls
git status
ls
ls
git add <string>
find . -type <string> -print0
git commit
ls
ls -l
ls
top
nano -c <string>
rm <string>
cd <string>
rmdir <string>
docker build -t <string>
ls -lh <string>
ls
ln -sf <directory>
npm run dev
git add .
ls
sudo apt-get install -y --force-yes <string>
vi <file>
ls
sudo apt install <string>
history
sed -E -e <directory>
git commit -m <string>
git pull
cd <directory>
du -h --maxdepth <number>
clear
git status
ls
print <string>
git co HEAD .
cd <string>
ls
git log
ps aux
sudo pip3 install <string>
which <string>
cd <directory>
cd ..
git diff <string>
who
python3 <file>
ls
chmod u+x <string>
exit
sudo docker run -it --name <string> --entrypoint <string> -u <string> --privileged -v <directory>
mv <string>
sudo apt install <string>
pwd
ls -ltr
awk <string>
mkdir <string>
ssh <string>
curl --proto <string> --tlsv1.2 -sSf <URL>
tr -d <string>
ls
ls
ls
cd <string>
done
pwd
ls
sudo sysctl -w <string>
ls
clear
vi <file>
mkdir <string>
sudo apt-get install <string>
cd <string>
sudo git pull origin master
rm -fr <string>
cd <string>
cd <directory>
exit
ls
pico <file>
git status
rm <string>
git add <string>
rm <string>
fg
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git status
bazel test --test_output=<string> <string>
vim <file>
git config --global <file> <string>
sleep <number>
sudo apt-get update
sudo dpkg -i <file>
apt-get -f -y <string> <string>
time
clear
vim <file>
cd <string>
ls
history
git status
chmod -x <file>
sudo su
git add --all
ls
sudo sed -i <directory> <file>
vi <file>
fg
git config --global <file> <string>
brew install <string>
ls
ls
sudo systemctl enable <string>
cd ..
git
git clone <URL>
sudo emacs <string>
done
git add .
vim <file>
apt search <string>
fallocate -l <string>
git fetch
sudo apt-key adv --keyserver <string> --recv-keys <string>
cd <string>
git checkout master
rm <string>
cat <string>
sudo sed -i <directory> <file>
history -a
mv <string>
ls
git push
docker tag <string>
mkdir <string>
ls
cd <string>
git pull
docker rm <string>
exit <number>
sed <directory>
sudo sed -i -e <string>
df -h <string>
git init
rm <string>
unset <string>
mkdir <string>
vim <file>
cd <string>
git add <string>
ls
ssh-copy-id <string>
clear
docker push <directory>
ln -s <string>
cd <directory>
ps -ef
cd <string>
ls
ls
sed -i <directory>
cd <string>
sudo pgrep <string>
fg
ls
cd
npm install
source <directory>
ls
ls
cd <string>
vim <file>
mv <string>
git clone <URL>
mv <string>
kubectl --kubeconfig <file> --context=<string> <string> -f <directory>
curl -sL <URL>
cd <string>
pwd
less
git restore <file>
npm start
apt-get install <string>
sleep <number>
sudo apt update
cd <string>
fg
exit <number>
curl <URL> -k
git commit -m <string>
exit
git branch
mkdir <string>
ls
sh
sed -i <directory>
ls -la
git status
python3 <file>
rm -f <string>
git add .
mv <string>
sudo vi <directory>
git diff <string>
exit <number>
sudo sed -i <directory> <file>
cat <string>
git commit -m <string>
clear
sudo pip3 install <string>
cd ..
git init
cd <string>
cd ..
read <string>
dir <string>
rm <string>
source <directory>
exit <number>
vim <file>
ls
source <directory>
cd ..
mkdir <string>
git init
git commit -m <string>
systemctl start kubelet
git status
clear
tail -n7
git push
cat <string>
npm i <string>
git status
ssh-copy-id <string>
git add <string>
docker-compose stop -d <string>
apt-get update
ls
git status
sudo udevadm trigger
git add <string>
git brach <string>
sudo pacman -S <string>
ls
cd <directory>
rm <string>
cd <directory>
cd <string>
cd ..
cd <string>
df -h
git fetch
git commit
exit <number>
ls
ls
clear
vim <file>
git add .
nano <file>
docker-compose logs
ls
ln -s <string>
mkdir <string>
cd
cd <string>
sudo pacman -S <string>
vim
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
ls
sleep <number>
rm -r <string>
sudo zypper <string>
sudo start uwsgi
git status
service apache2 reload
ls
ls
vim <file>
cp <string>
ls -la
ls
ls data -ld
read <string>
ls
ls
ls
<file> <file>
vim <file>
cd ..
docker login <string>
go <string>
npx <string>
git status
sudo apt-mark <string>
sed <directory>
git commit
cd <string>
ls
rm -i <string>
code .
clear
exit
cd <string>
ls
cd <directory>
git push
awk <string>
cd
php --ini
git pull origin master
vi <file>
cd <directory>
mkdir <directory> -p
dpkg-reconfigure locales
vim <file>
top
read -s -n <number>
git merge
ls
cd <string>
df
curl -X <string> -H <directory> -d <directory>
vi <file>
exit
python3 <file>
sudo mount <directory>
git remote -v
ls
grep <string>
sudo apt-get install <string>
ls
git push
cd ..
wget <URL>
systemctl status <string>
cd <string>
cd <directory>
cd <string>
ls ..
git stash push -m <string>
sed -r <directory>
cp -v <string> <directory>
git pull
ls
find . -iname <file> -delete <string>
exit <number>
grep <string>
ls
ls
vim <file>
sudo poweroff
git add .
dpkg --print-foreign-architectures
git commit -m <string>
ls
mkdir <string>
npm test
kubectl apply --filename <file>
npx <string>
read -ln <string>
ls
sudo reboot
vi <file>
cd ..
history
vim <file>
ls
cd ..
git push
ls
sudo nmap -T4 -A -v -Pn -O <string>
git remote add origin <URL>
sudo ufw <string>
fg
ls
sudo swapon <directory>
cd <directory>
less <string>
sh
mkdir -p <string>
scp <string>
cat <string>
rm -rf <string>
ls
touch <string>
dpkg-query -l
ls
npm-recursive-install
ls
sudo apt upgrade
rm <string>
node <file>
npm start
done
sed -i <directory>
sed -i <string>
ls
clear
sudo -E <string> -y <directory>
sudo halt
ls
clear
git checkout <string>
exit
yarn add <string>
cd <string>
git add .
wget <directory> -O <directory>
grep <string>
git push
sudo reboot
ls
fg
sudo vim <file>
clear
pwd
git commit -m <string>
vi <file>
cd <string>
chmod <string>
git push -u <string> main
ls -l
ls -la <directory>
apt-get autoremove
clear
ls
clear
git commit -m <string>
ls
git push
git push
python3 <file>
cd <string>
ls
python3 <file>
ls
mv <string>
chmod <number> <string>
ls -l
sed -i <directory>
ls
git checkout <string>
vim <file>
update -yy
clear
bash
exit
vi <file>
sudo apt install <string>
cd <directory>
git commit -m <string>
cd <string>
cd <string>
cd <string>
ls
git remote add origin <URL>
sudo node <file>
sudo apt install <string>
sudo crontab <file>
sh
cp <string>
rmdir <string>
git clone <URL>
vi <file>
git add -A
ls
hostname
vim <file>
ls
vim
time <string>
reboot
sudo apt-get install <string>
rm -r <string>
mkdir <string>
byobu-tmux
sudo rm -r <string>
ls
ls
cd <string>
ls -l
git add <string>
cd
clear
cd <string>
clear
less <string>
source <file>
exit
ls
cd ..
rm <string>
npm run dev
cd <string>
ls -alrt
cd <string>
sh <file> -u
git commit -m <string>
ls
clear
cp -r <directory>
cat <string>
clear
cut -csh <directory>
done
git pull
curl <string>
sudo apt upgrade
git log
sudo ifconfig
vim <file>
sudo sed <directory> -o <directory>
docker-compose up -d --build
pwd
cd <string>
npm install
exit
find -L <string> -type <string> -printf <string> -delete
cut -f2
cat <string>
git pull
sudo chmod <number> <directory>
npm start
sudo <file> -L <string>
ping <string>
pwd
rm <string>
cp -ip <string>
npm install pokedex-promise-v2 --save
ls
ls
cut -d <string> -f <string>
sudo ansible-playbook -i <directory>
git checkout -b <string>
cd <string>
sudo apt-get install <string>
pkill <string>
git push origin master
clear
clear
sudo dnf install -y <string>
exit
pwd
free
ls
ls
rm -r <string>
cd
cd <directory>
git pull
xargs -L1 --no-run-if-empty <string>
cd ..
ls -l
touch <string>
npm install
jq <string>
git add <string>
mkdir <string>
git checkout <string>
awk -v <string>
npm run test
ls -la
vi <file>
sudo vi <directory>
journalctl -xr
tail -f <directory>
git diff
history
cd <string>
python3 <file>
g++ -std=<string> <file> -o <string>
read -s -p <string>
git status
sudo python3 <file>
docker logs -f <string>
ls
git push -u <string> master
export <string>
git add <string>
cd <string>
sort -uk2
sleep <number>
sh
git pull
ls
mkdir <string>
ls
git commit
cd <string>
source <string>
find . -size <string> -a -print -a -exec <string> -f <string> \
cd ..
ls
cd <string>
cp <string>
ssh -T <file>
git add <string>
vi <file>
mkdir <string>
cd <string>
git add .
ls
ls
type <string>
ls
clear
<directory> <string>
df -h
ps -auxwf
git add .
uniq -c
unset <string>
sudo certbot renew --dry-run
clear
sudo vim <file>
nano <file>
ls -al
find <directory> -iname <file> -type <string> -exec <string> -c <string>
fg
git remote add origin <URL>
rm <string>
git commit -m <string>
git commit -m <string>
ls
git add .
ls
git bisect
git rm --cached <directory> -f
ls
git clone <URL>
ps axfu
cd <directory>
git add .
ls -la
export <string>
head -n50 <file>
clear
sudo sed -i <directory> <file>
cd <string>
mv <string>
sed -i <string>
ls
mkdir <string>
systemctl stop <string>
sudo <directory> <string>
cd <string>
npm start
xargs ls -gG --color)
git remote add origin <URL>
ls
cd <string>
sudo nano <string>
cd <string>
uniq
tr <string>
git checkout master
ls
history
ls
npm install -D <string> postcss autoprefixer
ls -l
cd ..
touch <file>
cd <directory>
sudo systemctl status prometheus
git status
grep -rE <string>
cd <string>
vi <file>
cd <directory>
sudo pacman -Syyu <string>
vim <file>
git add .
touch <string>
clear
git push
grep --help
docker-compose up -d --build
touch <string>
rm -rf <string>
exit
vi <file>
npm start
sort -n
vi <file>
vim <file>
more <file>
cd <directory>
rm -rf <string>
exit
man <string>
ls g++ -l
cd ..
clear
mkdir <string>
sudo cp -fr <string>
ls
cd <string>
python3 <file>
vim <file>
git push origin
ls
rm <string>
sudo dpkg -i <file>
ssh -p <string> user@host # connects to host on specified port as user
curl <string>
python3 <file>
fg
tmux new-session -d
ls -l
vim <file>
ls -al
sudo gpg --dearmor -o <directory>
cd <directory>
cd <directory>
ps aux
git commit -m <string>
cd <string>
sudo su -
rm <string>
git merge -X <string>
sed <directory>
sudo apt install <string>
top
ls
cd <directory>
npm run dev
clear
git commit -m <string>
chmod -R <string>
sudo service nginx restart
screen -ls
local <string>
ls
git add .
grep <string>
sudo sed -i <directory> <file>
sort -u
pwd
sudo adduser <string>
clear
git add .
cd <string>
vim <file>
vi <file>
python3 -m <string> install --user --upgrade <string>
sudo apt-get purge nodejs --auto-remove
git rm -r --cached <directory>
ls
cd
sed -i <string>
mv <string>
touch <file>
sudo sed -i <directory> <file>
python3
git br -t <string>
cd <string>
set <string>
ls -l
vi <file>
git init
cd ..
vi <file>
git restore <file>
ls
git ls-files -v
sudo dd <string>
mv <string>
mv <string>
top
docker push <directory>
cd <string>
sudo su -
ls
cd
ls -alh
mkdir <string>
sudo pacman -S <string>
cd <string>
source <file>
git add <string>
clear
git checkout <string>
git add <string>
git pull
git branch
cd <directory>
ls
cd <directory>
rm <string>
sudo docker kill corrade
git status
ls
find . -type <string> -name <string>
cd <string>
sudo apt-cache show <string>
git push --force
git add .
vim <file>
reboot
git add <string>
ls
git commit -m <string>
exit <number>
su root
read -rp <string> <string>
git push
git add .
git checkout <string>
npm run watch
exit
sudo mv <file>
ls
sudo apt-get purge npm --auto-remove
exit <number>
sed <directory>
mkdir -pv <directory>
find . -name <file>
cd
npm i -g <string>
ping <string>
ls
cd <string>
sudo yum <string>
ls
git co master
cd <directory>
ls -la <directory>
git commit -am <string>
apt-get
exit
sudo systemctl start <string>
wget -O <file>
python3 -m <string> install <string>
ls
sudo ifconfig en0 ether <string>
cd <directory>
cd <string>
clear
ls
git branch
gunzip <file>
ls
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec -print
cd <string>
git checkout $ORIG_HEAD_COMMIT~$(($LEFT - <string> - <string>
sudo passwd <string>
git push -u <string> main
vim <file>
find . -type <string> -name <string>
unset color_prompt force_color_prompt
git push
pwd
git status
ls
vim
ls
ls
git commit --amen
wget --no-cookies --no-check-certificate --header <string>
git remote add origin <URL>
unset -f <string>
byobu-tmux
sudo apt install <string>
sudo tar xvzf <file>
env
grep <string>
vi <file>
git branch -M <string>
git rev-list --all
rm <string>
sudo npm install -g <string>
sudo git pull
python3 <file>
ls
sudo pacman -S <string>
mv <string>
cd <string>
then\
ls
sed -e <directory> -e <directory>
ls
git commit -m <string>
ls
sudo vim <file>
ls -a
cat <string>
git commit -m <string>
git push
du -sh <directory>
vim <file>
curl -T <directory> <string>
python3 -m <string> install --no-cache <string>
service apache2 reload
vim <file>
ls
select(.status.containerStatuses[].name==<string> <string>
ls
vi <file>
ls
apt-get install -y <string>
setg RHOSTS.*
cd <directory>
sudo su
sort -u
clear
vim <file>
clear
cd <directory>
cd <string>
type <string>
rmdir <string>
cat <string>
apt-get install <string>
cd <string>
ls
ls
ls -al
tmux set-option -g <string>
pwd
ls
cd <string>
python3 odoo-bin --no-database-list
egrep <string>
grep <string>
clear
git commit -m <string>
git fetch
ls
clear
ls
sudo sed -i <directory> <file>
sudo apt-get -y <string> <string>
openssl rand -hex <number>
ls
ls
cd <string>
export <string>
grep <string>
cd
docker-compose up -d --build
pwd
exit
cd ..
cd <string>
ls
cd <directory>
sudo apt-get -y <string>
ps aux
cd <directory>
cd <directory>
ls
mkdir <string>
nano <file>
exit
sudo tcpdump <string>
cat <string>
ls
top
tail -f <directory>
npm run test
cd <string>
cd ..
rm -rf <string>
git push -u <string> master
ls
cd <directory>
ls
git init
sudo sed -i <directory> <file>
unset <string>
exit
tar --version
git push -u <string> main
top
clear
python3 -m <string> install <string>
cd <string>
git pull
sudo dd <string>
rm -r <string>
ls
exit
ls -la
ls
git push main --set-upstream <string>
sudo sed -i <directory> <file>
git commit -m <string>
sudo vim <file>
ls
ps ax
clear
sudo apt-get update
ls
cp -v <string>
git clone --depth <number> <URL>
vim <file>
rm -rf <string>
grep -a -i -E --no-filename <string>
cd <directory>
fg
rm <string>
sudo su
pwd
cd
sudo sed -i <directory> <file>
cd <string>
vi <file>
git commit -m <string>
exit <number>
git status
exit
git add <file> -f
cd <string>
cd <string>
npm -i <string>
cp <string>
history
git remote -v
npm config <string>
ls
vi <file>
git commit -m <string>
cd <string>
find . -empty -type <string> -print -delete
ls
cd <string>
cd <directory>
cat <string>
git add -A
npm install <string>
git diff-tree -r --no-commit-id --name-only --diff-filter=<string> <string>
sudo apt update
vim
cd <directory>
sudo chown -R <string>
cd ..
sed -i <directory>
ls
true
ag -v <string>
clear
cd
mkdir <string>
ls
nano <file>
rmdir <string>
tmux new-session -d -s <string> -n <string>
ls
cd <directory>
ls
git add <string>
exit <number>
wget <URL>
rm -f <string>
sudo grep dkim -i <directory>
cd <string>
rm <string>
cd <string>
sudo nano <file>
cd <string>
cd <string>
cd <string>
cd <directory>
npm install -f
ps axfu
git add <string>
git reset HEAD^
cat <string>
cd ..
git status
sudo sed -i <directory> <file>
source <file>
sort -k <number> -n
git add <string>
ls
git push -u <string> main
sudo shutdown -r <string>
git add .
cp <string>
apt install <string>
bash
git branch -M <string>
cd <directory>
ls
ls
cd <string>
nano <string>
ls -la
sudo mv <string>
cat <string>
touch <string>
clear
mkdir -p <string>
git pull
mkdir <string>
sleep <number>
cd <directory>
clear
sudo mdir -p <directory>
ls
screen -ls
npm-recursive-install
free -m
cd <directory>
rm <string>
vi <file>
ls -l
ls
exit
sudo virsh -c <directory> <string>
date
git status
pwd
clear
man <string>
rm <string>
git merge <string>
git status
git commit -a
cat <string>
git status
find .
git init\
git stash apply
cd <string>
vi <file>
git commit -m <string>
code <string>
sed -i -e"s/index <file>
ls
sudo dnf install <string>
sudo firewall-cmd --reload
vi <file>
cd <directory>
curl <string>
cd <directory>
sudo apt-get install <string>
git pull origin master
chmod +x <string>
ls
cd ..
sort -g
mv <string>
cut -d <string> -f <string>
mkdir -p <string>
sudo apt-get install -y <string>
history -w
ls -alf
npm start
clear
cd <string>
ls
clear
sudo gem install <string>
find . -size -5K
rm <string>
rm <string>
cd <string>
exit
git remote add origin <URL>
exit
ssh -oStrictHostKeyChecking=<string> -oBatchMode=<string> -oConnectTimeout=<number> -i <string>
curl <string>
mv <string>
exit <number>
ls -alht <string>
cd ..
clear
vi <file>
ip a
xargs grep <string>
sudo git pull origin master
free -h
cd <string>
rm <string>
cd <string>
clear
cd <string>
vim <file>
git status
mkdir -p <string>
sudo ln -s <directory>
systemctl status <string>
cd <string>
clear
sh
ls
npm install <string>
wget -qO - <URL>
sudo python3 <file>
python3 <file> --image_dir <directory>
clear
rm <string>
git push --mirror <string>
ls
head
ls
clear
scp <string>
ls
git status
ls
ls -lah
npm install <string>
cd ..
cd <string>
git clone <URL>
wget <URL>
pacman -Fs <string>
cp -r <directory>
read -p <string>
sudo systemctl status <string>
ls
git init
git clone <URL>
exit
vim <file>
git push
ls
exit
cd ..
mkdir <string>
cd <directory>
ls
git commit -m <string>
cd <string>
ls
ls
curl -fs -X <string> <directory>
docker exec -it <string>
cd ..
cd
ls
apt-get install screen apt-utils -y
htop
ls
ps aux
sed -i -E <string>
vim <file>
ls -F <string>
vim <file>
nano <string>
exit
git commit -m <string>
cd <string>
clear
nohup nice sudo -E <directory>
ls
ls
sudo apt-get upgrade
git log --graph --pretty=<string> -%C(yellow)%d%Creset <string>
git commit -m <string>
bash <file>
ls -al
sudo apt-get install -y <string>
clear
sudo apt install <string>
ls -lah
git pull
cd
cd <string>
ls -ltr
git push
uname -a
vim <file>
npm install
rm -rf <string>
ls
dpkg -i <file>
ls
git status
sudo docker kill corrade
helm <string>
ls
reset
docker images
vim <file>
python3 <file>
cd <string>
vi <file>
git ci -a --amend --no-edit
ps -auxwf
openssl rand -hex <number>
ls
ls
ls
ls
docker run -d <string>
sudo apt-get update
sudo systemctl stop <string>
git rm -rf <string>
rm -fv <string>
cd <string>
ls
ls -alF
ls
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
curl -s <string>
git push
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
ls
ls
exit
chsh -s <directory>
ls
git status
ssh <string>
git add <string>
git add <string>
cd <string>
ls
print <string>
cd <string>
xargs
git add <string>
tmux kill-server
ls
pwd
ls
git commit -m <string>
ls -latr <directory>
cd <string>
find . -name <file> -type <string> -print -delete
ls
grep <string>
git -f <string>
export <string>
cd <directory>
sudo rm -r <string>
sudo shutdown -r <string>
git status
git push -u <string> master
ls
sudo -u <string>
nano <string>
git push
ls
ls
curl -fLo <file> --create-dirs <string>
cd <string>
xargs -L1 <string>
ls
cd <directory>
git add .
man <string>
cp <string>
git clone <URL>
npm run start
git reset --soft <string>
clear
ssh <string>
sudo resize2fs <directory>
git clone <URL>
rm <string>
rm -r <string>
ls
htop
mv <string>
sudo tail -f <directory>
find *V$1* -type <string> -exec <string>
git push -u <string> master
mkdir <string>
sudo reboot
ls
docker ps
git remote add origin <URL>
cd ..
cd ..
cd <string>
exit <number>
print <string>
ls
tmux kill-server
find . -empty -type <string> -print -delete
touch <file>
ls
chmod <string>
git status
git clone <URL>
ls
npm install
git remote add origin <URL>
sudo snap install <string>
mkdir <string>
less
grep -i <string> >files
exit
find . -maxdepth <number> -regextype <string> -regex <string> -type <string>
git pull
su - <string>
exit
ps -ef
git show <string>
rm <string>
exit
cd <string>
sudo apt-get install <string>
touch <string>
ls
alias <string>
ls
ls
vim <file>
vi <file>
cd <string>
vi <file>
cp -t <directory> -a <directory>
ls
sudo mkarchiso -v -w <string> -o <string> slim-iso
sh <file>
source <string>
vim <file>
git clone -b <string>
git st
nano <file>
done
cd <string>
vi <file>
cd <string>
ls
reset
ls
git add .
ls
git reset <string>
git clone <URL>
curl -fLo <file> --create-dirs <URL>
fg
systemctl status <string>
docker ps
ls
sudo sed -i <directory>
ls
clear
cp -v -t <directory>
git commit -m <string>
fg
exit <number>
head -y <file>
vi <file>
cd <directory>
ls -al
vim <file>
git pull
ls
mkdir <string>
git log
ls
then
done
cd <string>
curl -so- <URL>
sudo apk add <string>
git init
init <number>
cat <string>
exit
vim <file>
sudo wget <URL>
mv <string>
vim <file>
ls
ssh <string>
fg
cd <string>
npm install <string>
clear
git init
ls
python3 <file>
export <string>
vim <file>
cd <directory>
git add .
exit <number>
env
cd <string>
sudo pico <string>
exit
grep -Ir <string>
exit <number>
python3 <file>
sudo kill <number>
ls
git remote set-url --push <string>
git diff
sudo kill -9 <number>
ls
ls
cat <string>
sudo zypper install <string>
python3 <file>
eval <string>
rmdir <string>
rm <string>
sudo nano <file>
sudo apt-get update
ls
fg
find .
mv <string>
cat <string>
ls
git fetch
sudo apt autoremove
git clone <URL>
more <file>
git clone <URL>
ls
cd <directory>
ls
ls
sudo python3 <file>
ps
cd ..
sudo service <string>
xargs -L1 -I'{}' <string> -rE <string>
ls -ltr
grep <string>
wget <URL>
sudo ifconfig en0 ether <string>
exit
git pull origin master
rm <string>
code .
ls -$ <directory>
vim <file>
vi <file>
cd
ls
history -a
clear
git status
docker-compose down
read <string>
cd <string>
ls -al
cd ..
git fetch
ls
ls
cd <string>
node <file>
sudo cp -rf <string>
git status
pkill <string>
vim <file>
cd ..
git config --global <file> <string>
shutdown -h <string>
export <string>
cd <string>
exit
vim <file>
exit
ls
git push
chmod <number> <string>
scp <string>
sudo rfkill <string>
ls
git commit -m <string>
cd <string>
read -s -n <number>
clear
grep <string>
ls
dpkg -l
vim <file>
ls
ls
git checkout <string>
vi <file>
cd <string>
ls
cd <directory>
cd ..
ls
sudo apt-get update
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
screen -X -S <string>
grep <string>
grep --line-buffered -i <string>
git commit -m"update"
ls
rm -rf <string>
wget -q -O <file>
grep -v <string>
clear
vi <file>
sudo python3 <file>
ls
git push -u <string> main
ls
ls
git pull
rm -fr -- <string>
npm i -g <string>
exit <number>
ls
cd <string>
vim <file>
wget -O <file>
ls
cat <string>
git pull
cd <string>
ls
cd ..
git merge --no-edit --allow-unrelated-histories --message <string>
git push
ls
npx <string>
egrep <string>
curl -fsSL <URL>
source <string>
clear
pwd
git status
git branch
clear
cd <directory>
git checkout master
ssh <string>
sudo sed -i <directory> <file>
git commit -m <string>
ls
cd <string>
cp -r <directory>
cd ..
ls
ls
rm <string>
git init
tmux
mkdir -pv <directory>
read -rp <string> <string>
nano <file>
sudo rm -r <string>
cd <directory>
git status
docker kill <string>
git branch 2> <directory>
git branch
git add <string>
cd <string>
sudo reboot
ls
grep <string>
ls -ld <string>
ls -la
sudo vi <directory>
grep -v <string>
git commit
awk <string>
bash <file>
cd <string>
sort -V
ls
git pull
sudo git pull
ls
reboot
node -v
git add <string>
sudo apt-get install -y <string>
nano <string>
ls
nano <file>
clear
cd <string>
ls
ls
curl -I <URL>
ls
vim
ls
git ls-files
ls -l
ls
vim <file>
vim <file>
cd <string>
fg
git commit
git push --set-upstream <string> master
ssh-keygen
mv <string>
rm -rf <string>
git commit -m <string>
vim <file>
sleep <number>
npm install --save-dev <string>
git add .
ls
rm -f <string>
git fetch origin\
cd <directory>
git init
git show
htop
cd ..
tr -s <string>
git init
sudo stop uwsgi
sudo sed -i <directory>
git push
git init
ls
fg
mv <string>
exit <number>
cd
git commit -m <string>
ls
ls
pkill <string>
sudo vim <file>
sudo deluser <string>
sed -i <directory>
ls
xargs -0 <string> -o7 -preserve
grep <string>
grep <string>
docker commit <string>
env
npm install <string>
vim <file>
clear
cat <string>
cd <string>
ls -l
ls
done\
rm -r <string>
du -h -x -s -- <string>
vi <file>
rm <string>
vi <file>
cd ..
git pull origin master
ssh-keygen -t <string> -b <number> -C <file>
cp <string>
git rev-list -n <number>
vim <file>
cd <directory>
ls
git add .
rm -rf <string>
ip a
ls
sudo apt-get install filezilla -y
npm install
ls -l
apt install -y <string>
ssh-add <directory>
more <file>
cd ..
tmux a
ls
awk <string>
sudo apt-get install <string>
git remote add origin <URL>
grep <string>
sed <directory>
vi <file>
cat <string>
tcpdump -i <string> <string>
sudo systemctl enable <string>
clear
git add .
vim <file>
cd
ls -a
sudo apt-get install <string>
vi <file>
sudo rm -r <string>
tail -f <string>
sudo du -sh <string>
ls
git config --global <file> <string>
git status
mkdir <string>
su
rm -rf <string>
xargs -d'\n' <string> -x
cd <string>
vi <file>
ls -ltr
fg
ls
vim <file>
ls
ls
ls
git add .
vim
clear
vi <file>
ls
chmod +x <string>
cd <string>
grep <string>
vim <file>
git branch -M <string>
ls
git config --global <file>
touch <string>
sort -rn
git status
fg
ls
cp <string>
vi <file>
wget <URL>
cd <directory>
ls
cd <string>
find -mindepth <number> -name <string>
docker rm <string>
python3 -m <string> venv
sed -i <string>
vim
ls
git checkout <string>
git switch <string>
grep <string>
sudo -i
find . -size <string> -a -print -a -exec <string> -f <string> \
git push
fg
sed
git commit -m <string>
exit <number>
ls
exit
ls
git status
exit
ls
sudo apt remove --purge <string>
ls
git commit -m <string>
git commit -m <string>
sleep <number>
ls
git init
mv <string>
ls -a
vim <file>
git status
sudo cat <file>
fg
ls
ls
ip a
ls
ls
cd
git pull origin development
git status
cd <string>
git add .
man <string>
cut -c47-80 <file>
ls # lists your files in current directory, ls <dir> to print files in a specific directory
history -a
nl -n <string> -w <number>
cd <string>
ls
git commit -m <string>
git pull
vim <file>
exit
xargs docker rmi
ls
sudo git clone <URL>
cd <string>
brew install <string>
cd <string>
cd <string>
cd ..
vi <file>
rm <string>
cat <string>
npm run dev
git add <string>
git add <string>
vim <file>
docker stop bigballers
cp <string>
ls
sudo -E <string> <string>
cd <string>
vi <file>
rm <string>
exit
ls
sudo npm i -g <string>
git checkout master
git push -u <string> master
ruby -e <string>
clear
chmod +x <string>
docker-compose up -d --build
git status
read
sudo dnf update -y <string> --setopt=<string> --exclude=<string>
ps -eal
cd <string>
vi -t <string>
passwd
apt-get install <string>
mv <string>
su
ls
git pull
read -p <string>
cd <string>
gsettings set <file>
git commit -m <string>
vim <file>
ls
ls
clear
clear
unset -v <string>
clear
read -p <string>
ls
git clone <URL>
vim <file>
cd <directory>
sudo apt -y <string>
clear
git add .
git commit -m <string>
git fetch
kill -9 <number>
read <string>
cd <string>
read -s -n <number>
git push -u <string> main
sed -i <directory>
perl <file>
find . -name <file> -type <string> -exec <string> -rf <string>
ls
cd ..
clear
git checkout <string>
kubectl apply --filename <file>
chmod +x <string>
clear
cp <string>
clear
wget -P <directory>
python3 <file>
git status
sudo systemctl status <string>
source <directory>
cd <string>
sudo apt-get update
ls
cd ..
ls
clear
vim <file>
vim <file>
sudo start uwsgi
mv <string>
cp -v <string>
ls
ls
cd <string>
find . -type <string> -name <file> -print0
sudo vim <file>
git clone --depth <number> <URL>
cd <directory>
reboot
git init
cd <directory>
ls
git pull origin master
nano <file>
cd ..
clear
docker-compose up -d --build
ps -auxwf
grep -v <string>
rm <string>
sudo npm install -g <string>
npm install -g <string>
cd ..
cat <string>
cp <string>
exit <number>
sed -i <directory>
cd <string>
sudo yum install httpd -y
find . -name <file> -type <string> -print -delete
then
apt-get upgrade
cat <string>
mkdir -p <string>
git commit -m <string>
git push -u <string> main
vi <file>
file <string>
cd
ls ls
brew cask install <string>
sed <directory>
ls
dpkg --get-selections
mkdir <string>
git commit -m <string>
vim <file>
ls
cd <directory>
vim -d <string>
ls
find $dir -type <string>
cd <string>
ls
vim <file>
fg
pwd
sudo pacman -S <string> --noconfirm
cp <string>
cat <string>
ls
git push origin main
git add .
ls
sleep <number>
git remote add origin <URL>
find . -type <string> -exec <string> <directory> {} +
git add .
apt-get
ls
sudo docker kill corrade
ps -AZf
git push origin <string>
man <string>
mvn compile
nano <file>
sudo apt update -y
cd <directory>
sudo reboot
cd <directory>
ls
vi <file>
tr <string> <string>
cd ..
find <directory> -type <string> -execdir <string>
ls
vim <file>
sed -i <directory>
git pull
ls
git commit -m <string>
which <string>
python3
ls
nano <file>
cd <string>
head -n1\
sudo sed -i <directory> <file>
ls
ls
fg
cat <string>
ls -l
cd <directory>
ls
npm i <string>
cd <string>
cd <string>
ls
ls
git clone <URL>
xargs -L1 -I'{}' <string> -rE <string>
fg
sudo apt-get install -y -q <string>
cd
ls
rm <string>
cd ..
git add <string>
git pull
exec <string>
mv <string>
sudo kill -9 <number>
vi <file>
ls
cd ..
ls
mkdir -p <string>
git status
docker run <string>
date <string>
service apache2 restart
ls
ls
git clone -b <string>
vim <file>
sudo sed -i <directory> <file>
sed <directory>
git fetch origin\
rm <string>
sudo apt-get install <string>
vi <file>
cd <directory>
git add <string>
git push --tags
cd <string>
rm <string>
ls
git status
ls
ls
ls
ls
cd ..
read -rp <string> <string>
git log
fg
mv <string>
exit
ip a
ls
cd <string>
apt-get -y <string> <string>
man <string>
sed -i <string>
cd ..
vim <file>
read -p <string>
vi <file>
cd <string>
lsblk
ls
chmod u+x <string>
cd
cd ..
sed -i <string> -e <string>
sudo chmod +x <string>
fg
ls
cp <string>
tail -f <directory>
git checkout -b <string>
cd <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string>
htop
git branch 2> <directory>
git init
su -
ping <string>
git add .
sleep <number>
git add <string>
ls
cd <directory>
mkdir <string>
npm i
<directory> <string>
clear
sed -n <string>
cd <string>
cd <directory>
fg
ls
curl -o <string>
brew update
cat <string>
df -lh
sudo apt install <string>
vi <file>
ls
set <string>
exit
git commit -m <string>
touch <file>
git commit --all -m <string>
find . -empty -type <string> -print -delete
cd <directory>
git clone <URL>
sudo apt install <string>
clear
fg
ls
ls
npm run test
npm i -g <string>
ruby -v
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
grep <string>
git add <string>
docker rmi <string>
rmdir <string>
git pull origin <string>
git status
git merge <string>
git status
apt install <string>
sudo nano <string>
git status
cd ..
fg
apt-get install <string>
sudo vim <directory>
sudo systemctl reload <string>
git status
find . -name <file>
vim <file>
git commit -v -a -m <string>
git config --global <file> <file>
git stash apply <string>
cd <directory>
cd <string>
clear
openssl --version
ls
ls
git push
ls
unset <string>
git add .
vi <file>
find -type <string> -exec <string> <number> <string>
sudo docker run -it -d -p <string> -v <directory>
sudo systemctl enable <string>
exit
ls
ls
sudo su
sudo apt update
sudo c_rehash <directory>
cd ..
git push -f <string> <string>
sed <directory>
sudo apt-get install <string>
git remote add origin <URL>
read <string>
curl <string>
exit
rm -rf <string>
vim <file>
sudo pacman -S <string>
openssl x509 -req -days <number> -in <file> -signkey <file> -out <file>
mkdir <string>
git checkout <string>
sudo reboot
sed -i <directory>
git push -u <string> main
git clone <URL>
sudo start uwsgi
sudo sed -i <directory> <file>
sudo systemctl status prometheus
ls
read -p <string>
cd <string>
sudo apt install <string>
sudo apt-get update
git push
sudo snap install <string>
ls
find
nano <file>
sudo sed -i <directory> <file>
git pull origin master
cd <directory>
git push
ls
cd <string>
ls --help
ls
npm install
cd <directory>
git config --unset <file>
find . -empty -type <string> -print -delete
cd <string>
vim <file>
cd..
ls
cat <string>
cd ..
yarn <string>
sudo python <file> --cascade=<file> <number>
mv <string>
cd <string>
mv <string>
cd ..
npm i <string>
cd <string>
nano <file>
cd <directory>
curl <string>
ls
ls
cp <string>
find . -maxdepth <number> -mindepth <number> -not -name <string> -print0
more <file>
cd
git checkout <string>
clear
chmod +x <string>
cd <string>
git add <string>
exit
read -rp <string> <string>
apt install <string>
wget <URL>
sudo sed -i <directory> <file>
cd <string>
git add .
read -r <string>
cd <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
tail -f <directory>
ls
git branch
vi <file>
mkdir <string>
kill -9 <number>
ls
mv <string>
cd -
done
git commit -m <string>
su root
pwd
awk <string>
ls
ls -al
cd <string>
sudo docker rm corrade
exit <number>
sudo apt upgrade
sudo -i
awk <string>
read -r -p <string>
cd ..
cd <string>
brew install ${CASKS[@]} --cask
docker-compose up -d --build
git add <string>
rake <string>
git clone <URL>
vi <file>
grep <string>
clear
cd ..
chmod <string>
cd <string>
ls
ls
git push -u <string> bryan-guner
cd
exit <number>
ls
touch <string>
clear
sudo git push
cd
docker-compose up -d --build
ls
git checkout <string>
docker
mvn exec:java -Dexec.mainClass=<file>
clear
exit
cd <string>
cd <string>
ls
cd ..
find <directory> -name <string>
ls
cd ..
nano <file>
cd ..
git init
shutdown -h <string>
git commit -m <string>
ls
cd
ls
cd <string>
cd ..
systemctl start <string>
cd ..
cd <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
cd ..
fg
rmdir <string>
ls
<directory> <string>
cd <directory>
clear
sudo ufw status
cd <directory>
cd <string>
print <string>
ls
userdel bob
cd <string>
nano <file>
cat <string>
cp <string>
ls
apt-get install <string>
ls -la
cd <string>
git status
cd ..
sudo sed -i <directory> <file>
vim <file>
ls
find . -print -exec <string>
cd <string>
man <string>
ls -a
cd <string>
sed -i <directory>
cd <directory>
sed -i <string>
cd -
clear
git
python3 <file>
sudo sed -i <directory> <file>
vim <file>
clear
cat <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
git pull origin master
ssh <string>
ls
exit
clear
curl -G <directory>
reboot
ls
less
sudo dpkg --clear-selections
sleep <number>
cd <string>
vim <file>
mkdir <string>
git init
ls
mkdir <string>
wc -h
ls
byobu-tmux
cd
kill -9 <string>
mv <string>
cd ..
fg
mkdir <string>
sudo sysctl -w <string>
sudo certbot --nginx -d <file> -v
sudo rm -rf <string>
rm -rf <string>
git push
more <file>
cd
cd <string>
git branch history <string>
cd <string>
cat <string>
git checkout <string>
rmdir <string>
find . -iname <file>
git push
git add <string>
cd <directory>
reboot
pwd
npm i <string>
docker image <string>
ls
exit
exit
curl <string>
rm <string>
cd <directory>
vim <file>
git push -u <string> main
exit <number>
vi <file>
find <directory> -iname <file> -type <string> -exec <string> -c <string>
code
git push -u <string> master -f
ls -lrt
cat <string>
ls
rm <string>
cd <directory>
ls
cd <string>
cp -v <string>
sort -u
ls -la <directory>
ls
cat <string>
cd ..
npm install file-loader --save-dev
ls
git stash
git clone <URL>
ps -auxwf
ls -la
git init
cd ..
cd ..
cd <string>
cd <string>
screen
cd <string>
git add <string>
ls
exit
mkdir <string>
exit
sudo vim <file>
ls
vi <file>
cd <directory>
git pull -f
cd ..
git fetch --no-tags <string>
ls
docker exec -it <string> bash
git push -u <string> main
rm <string>
find <directory> -type <string> -exec <string> <number> <string>
cat <string>
cp <string>
chmod <string>
vim <file>
sudo a2enmod <string>
vi <file>
rm -f <string>
clear
vim <file>
git push
exit
sudo python <file>
cd <directory>
git init
cp -r <directory>
grep -r <string> --include=<string> <string>
ls
vi <file>
git add .
fg
ls
ls
read <string>
time <string>
git commit -m"update"
git status
cd
cd <string>
udevadm info <directory>
git pull
git push
ls
grep <string>
ls
ls
find . -name <file>
git status
vim <file>
cat <string>
ls
git pull
git push
npm i <string>
ls
git clone <URL>
sudo apt install <string>
git pull
less
docker-compose up
git status
su -l <string>
git submodule update
ls
python3 -m <string> install --upgrade <string>
mv <string>
ls
rm -rf <string>
git status
cd <string>
fzf <string>
ls
code <string>
clear
cd <directory>
clear
cd <string>
ls
sudo apt-get install <string>
git diff --color-words
mv <string>
ps auxf
cat <string>
cat <string>
sudo systemctl enable <string>
tr <string>
cd <directory>
ls
git push
unzip <file>
ls
git init
exit <number>
sudo apt-get autoremove <string>
ping <string>
clear
mount -B <directory>
ls
rm <string>
rm <string>
rm -rf <string>
ls
rm -rf <string>
cd <string>
git status
clear
bash <file>
cd ..
git checkout <string>
cd <string>
sudo apt-get install <string>
cd <string>
ls
npx npm-check-updates -u
vim <file>
cd <directory>
ls
git commit -m <string>
curl -sL <URL>
sudo rm -rf <string>
git remote add origin <URL>
ls
ls
find -name <string>
sort -k2rn
cd <string>
sudo nano <directory>
curl -v -H <string> <URL>
ls
npm run start
read <string>
vi <file>
npm run
ls
ls
git commit
sudo chmod a+wr <directory> -R
code <string>
vim <file>
cd <string>
git push
rake <string>
cat <string>
git pull origin main
ls
ls
sudo tar xvzf <file>
git commit -am <string>
view <string>
mkdir <string>
chmod +x <string>
grep <string>
tmux
ls -la
vim <file>
vi <file>
apt -y <string> build-essential <string>
ls
cat <string>
grep -v <string>
rm -f <string>
python3 <file>
sudo apt update
git add .
git add .
which <string>
ls
nano <file>
npm install -g <string>
vi <file>
sudo apk add <string>
ls
docker-compose up -d --build
git clone <URL>
which <string>
history
git add .
git config --global <file> <file>
npm run test
clear
ls
bash
git pull origin master
make clean
telnet <string>
cd <string>
cd <string>
cd <string>
git commit -m <string>
vim <file>
vi <file>
cp <string>
cd <string>
ls
cat <string>
ls
mkdir <string>
vi <file>
ls
chmod +x <string>
ls
cd ..
local -a <string>
ls
apt-get update
git branch 2> <directory>
clear
exit
git config --list
xargs -L1 <string>
sudo cp <file> <file>
ls -S
ls
ls
npm start
sudo apk add <string>
git init
mv <string>
git branch -M <string>
ls
ls
git status
fg
sudo service <string>
git commit -m <string>
mkdir -p <string>
npm run start
grep -r -C <number>
then\
git commit -m <string>
cd <string>
sudo apk add <string>
less <string>
ls
cd <string>
cd <string>
ls
git config --global <file> <file>
ls
cd ..
git status
mv <string>
ls
ls
vim <file>
exit <number>
vim <file>
sudo apt install <string>
git add -v -f <string>
git branch
source <file>
git push
sudo apt-get -y <string>
node <file>
sudo docker rm corrade
vi <file>
sudo sed -i <directory> <file>
clear
ls
cd <string>
rm -rf <string>
grep <string>
sudo su
ls
pacman -S <string>
git config --bool <file>
git gc --aggressive --prune=<string>
cd <string>
npm install <string>
sudo add-apt-repository <directory>
ls
python3 <file>
clear
git push -u <string> main
git status
cd <string>
cd <directory>
ufw allow <string>
cd <string>
ls
git init
cd <string>
sudo apt-get update
vim <file>
code
ls
find . -name <file>
cd <directory>
cd <string>
mkdir -p <string>
export <string>
sudo service <string>
cd <string>
sed <directory>
cd <string>
git clone <URL>
pwd
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
python3 <file>
curl <string>
docker rm <string>
sort -u -t, -k1,1 <string>
clear
scp <string>
git merge <string>
ls
history -c
ls
ls
curl -s --data <string>
cd <directory>
vim <file>
ls
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
clear
vim <file>
exit
ls
cd
sudo apt-get install -y <string>
git filter-branch -f --msg-filter <string>
git add .
vim <file>
grep
git branch -u <directory>
sort
cd <string>
ls
sudo systemctl start <string>
sudo systemctl daemon-reload
df -lh
clear
cd <string>
dpkg --get-selections
sudo vim <file>
ls
git add <string>
cd ..
cd <string>
pwd
ls -a
htop
cd <string>
ls
mkdir <string>
cd
exit
docker image <string>
clear
ls
git pull
sudo apk add <string>
clear
cd
docker rm --force <string>
ls
ls
npx tailwindcss init -p
docker exec -it <string> bash
rm <string>
git clone <URL>
git add .
git push -u <string> master -f
ls
git add .
uname -a
npm i --save-dev <string>
chmod +x <string>
man <string>
cd <string>
go test
vi <file>
sudo add-apt-repository <directory>
vi <file>
cd <string>
clear
clear
git commit help
ls
cd <directory>
wget --quiet -O- <URL>
sudo usermod -a -G <string>
brew install <string>
tee <file>
clear
exit <number>
cd <string>
mkdir <string>
cd <string>
git add <string>
sudo ln -s <directory>
cd <directory>
exit
sed -i <string>
cd <string>
ls
diff -u <string>
ls
git push
read -rp <string> <string>
git status
reboot
cd <string>
cd -
vi <file>
ls
yarn add <string>
clear
cd <directory>
npm list -g --depth=<number>
mv <string>
ls
ls <directory> -S
git commit -m <string>
clear
do\
cd ..
rm -rf <string>
cd <directory>
git merge <string>
sed <directory>
cd
sudo lsof -ti:8888
python3 <file> -sI <string> -sM <string> -dM <string> -dI <string>
ls
cd <directory>
nano <file>
cd <string>
sudo dnf install <string>
cd
vim <file>
npm install -g <string>
cat <string>
git add <string>
rm -rf <string>
bash <file>
sudo apt -y <string>
screen
find . -name <string> -type <string>
clear
ps -ef
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cat <string>
vim <file>
exit
kill <number>
cd <string>
vi <file>
nano <file>
git checkout -b <string>
dialog --begin <number>
ls -la
cd ..
sudo sudo lvremove <directory>
unset color_prompt force_color_prompt
apt update
nano <file>
ls
wget -O <file>
npm i <string>
tail -n <string>
ls
cd <directory>
vim <file>
sudo apt-get install -y <string>
git init
exit
ln -s <string>
cd <string>
exit
apt install <string>
cd <string>
cd <string>
vim <file>
rm -f -r <string>
python3 <file>
fg
grep -H <string>
vi <file>
git branch -M <string>
mkdir <string>
ls
cat <string>
sudo sed -i <directory>
ps aux
ls
git clone <URL>
sudo make clean install
sudo ln -s <directory>
clear
docker commit <string>
cd <string>
systemctl daemon-reload
git remote -v
df
git merge -s <string> <string>
clear
apt-cache policy <string>
ls
git add .
git add <string>
ls
clear
unset color_prompt force_color_prompt
sudo rm -rif <string>
sudo apt install <string>
ls
npm -v
ls -la
cd <string>
scp <string>
apt-get update
sudo apt-key add -
sudo apt-get update -y
ls
ls
cd <string>
rm -rf <string>
sh
cd
npm start
sudo apt-get update
git checkout -- <string>
wget <URL>
ls
ls
git status
sudo do-release-upgrade
vi <file>
cd <string>
npm run dev
ls
ls
git
wc -l
rsync <directory>
git branch
journalctl --help
npm start
rm <string>
pacman -S <string>
cd <string>
exit
vim <file>
cd <string>
fg
cd ..
npm -v
sudo vim <file>
vi <file>
curl -sS <string>
git config --global --edit
ls
bash
vi <file>
ls
mkdir <string>
wget <URL>
vi <file>
ls
php <file> -profile=<string> -mode=<string>
git push -u <string> master
apt update
mv <string>
cd <string>
git push
vim <file>
git checkout -
ls
done
sudo add-apt-repository <directory>
gpg --keyserver <string>
git status
fg
su root
cat <string>
cd
git pull origin main
ls
sudo sed -i <directory> <file>
rm -r <string>
sudo dpkg --configure -a
cd ..
fg
git checkout -b <string>
htop
git status
cd <string>
top
cd <string>
cd <string>
sudo ansible db -m <string>
exit
sudo gem install <string>
vi <file>
python3 <file>
docker ps --size
git push origin master
ls
sudo service nginx reload
cd ..
ls -la
git init
git push origin
cut -d - -f1 <file>
less <string>
apt-add-repository <file>
cd <string>
npx <string>
ls
docker-compose up
git tag -d <string>
cd <directory>
pacman -S <string>
help
cd <string>
ls -l
git commit -m <string>
sleep <string>
git pull origin master
sudo apt-get install <string>
wget <URL>
cd <string>
git pull
cd ..
cd <directory>
dpkg -i <file>
sudo pacman -D <string>
git status
git rm --cached -r <string>
node <file>
ls
sort -n -r
cd <string>
sort -g
ls
sudo sed -i <directory>
let <string>
clear
vim <file>
ls
python3 <file>
sudo pacman -Syu <string>
cd <string>
clear
ls
screen -r
touch <string>
vim <file>
cd <string>
git push -u <string> bryan-guner
ping <string>
git init
cd ..
ls -la
man <string>
sed -i <string>
rmdir <string>
grep -v -e <string> -e <string>
cat <string>
git remote rm <string>
ls
ls
print <string>
cd <directory>
ls
cd <string>
cd <directory>
ls
vim <file>
sudo chmod u+x <file>
git clone <URL>
fg
git status
npm update
unset <string>
touch <file>
apt clear
sed -i <directory>
exit
cd <directory>
ls
git pull
ls
cd
less <string>
ls -la
ls
pwd
cd <string>
tail -n200
git filter-branch --env-filter <string>
LANG=<string> rpm -qp --queryformat <string>
cd <directory>
sudo xrandr --addmode <string>
ls
more <file>
ls
vim <file>
cd <string>
git pull
cd
git diff
git push -u <string> main
vim <file>
git rebase --abort
ls
git pull origin <string>
dir <string>
git clone <URL>
cd <directory>
wget <URL>
find . -name <file>
git add .
rm -rf <string>
git push -u <string> main
cp -r <directory>
npm install -g <string>
cd ..
sudo rm -rf <directory> <directory>
ln -s <string>
ls -la
git clone <URL>
cd ..
python3 <file>
cd <string>
pwd
mvn -version
git config --global <file>
cd <string>
sudo nano <file>
read <string>
curl <string>
rm -r <string>
cd ..
exit <number>
apt install <string>
mkdir <string>
nano <file>
clear
cd ..
cd <string>
git commit -m <string>
git pull --allow-unrelated-histories <string>
git clone <URL>
vi <file>
sudo chown -R <string>
sudo shutdown
cd <string>
gsettings set <file> <string>
cat <string>
cd <string>
exit
ssh isl-env <string> -p <file>
cp -r <directory>
chmod <string>
sudo nano <file>
git reset --hard <string>
sudo sed -i <directory>
cd <string>
git push -u <string> master
git config --global --add <file>
git status
git push
python3 <file>
docker run --name <string> --restart=<string> -d -p <string>
ls
grep <string>
pkill <string>
cd <directory>
ls
exit <number>
ls
ls
find . -empty -type <string> -print -delete
exit <number>
sudo pacman -S <string>
cd ..
byobu --version
vim <file>
exit
ls
git checkout <string>
git config
ls
local -a <string>
cd <string>
git status
date <string>
vi <file>
cd <directory>
cat <string>
tmux
git init
done\
which <string>
clear
cat
sudo apt-get install <string>
cd
type <string>
git init
git remote add origin <URL>
ls
sudo apt-get -y <string>
clear
su - <string>
git commit -m <string>
cd ..
sudo apt-get install -y <string>
git commit -m <string>
sed -r -e <string>
cd <directory>
clear
git pull
vim
cd <string>
git push -u <string> master
docker
cd
sudo localectl <string>
sed -i <string>
git co -b <string>
exit <number>
cd ..
export <string>
chmod +x <string>
cd <directory>
cd <string>
ls
ls
unset color_prompt force_color_prompt
ls
git config --global <file>
history
git status
ls
LANG=<string> rpm -qp --queryformat <string>
ping <file>
git add .
cd <string>
fg
git branch
ls -la <directory>
ls
cd ..
cd <directory>
clear
git stash --help
cd
fg
git status
ls -lh <string>
ln -s <string>
git init
exit
fg
sudo apt install <string>
git commit -m <string>
vim <file>
vi <file>
grep <string>
sudo gem install <string>
ls -l
cd <directory>
git remote add origin <URL>
exit
vim <file>
ls
find src
cat
ls
find . -type <string>
sleep <number>
sudo docker rmi <string>
git remote add origin <URL>
nano <file>
cd <directory>
sudo bash -
npm install -g <string>
su
sudo nginx -s <string>
tail -f <string>
exit
git status
docker images
sudo yum install -y <string>
grep -vE <string>
touch <file>
ls
mv <string>
sudo apt-get install <string>
cd <directory>
rm <string>
git pull
cd ..
<file> <file>
cut -f1 -d <string>
git push -u <string> master
clear
ls
git config --local <file>
ls -al
unset <string>
ls
chmod -R <string>
python3 <file>
cd <string>
docker stop <string>
ls
ls
vim <file>
ls
grep <string>
ls -l
git push
rm -rf <string>
ls
cd <string>
sed -i <directory>
mkdir <string>
touch <string>
export <string>
git init
history -c
vim <file>
ls
sudo systemctl start <string>
read -r <string>
sudo make install
cd
exit
rm -rf <string>
mv <string>
ls
python3 <file>
reboot
nano <file>
ls
cd ..
curl -sSH <directory>
git push -u <string> bryan-guner
ls
sudo apt-get upgrade -y
ls
stat <file>
git clone <URL>
clear
cd <directory>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git log --oneline
cd ..
ls
git add .
git init
git commit -m <string>
cd <directory>
ls
sync
cd <string>
exit
git st
chmod <number> <string>
git remote add origin <URL>
git commit -m <string>
sudo rm -rf <string>
cd <string>
sudo vim <directory>
sudo chown -R <string>
ls
docker stop bigballers
do\
source <file>
git pull
sudo apt-get update
cd ..
git commit -m <string>
vim <file>
clear
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
git clone <URL>
git config --global <file>
ls
grep <string>
git add .
chown <string>
sudo vim <directory>
vim
ssh-keygen -t <string> -C <file>
sudo nmcli <string>
cd ..
cd <string>
git log
ls
cd <string>
sudo apt -get <string>
ls
cd <string>
apt-get install <string>
ls
ls -la <directory>
ls
cd <string>
git status
clear
cd ..
sudo apt-get install <string>
docker
curl --silent -L <file>
git add <string>
ls
ls
ls
npm install <string>
cd <string>
ls ls -la
wget <URL>
git push --set-upstream <string> master
cd <string>
cd ..
git init\
git pull
sudo vi <directory>
git push -u <string> master
clear
ls
git config --system <file>
exit <number>
ls
tmux
clear
rm -rf <string>
git commit -m <string>
userdel
cd <string>
read -rp <string> <string>
sudo apt-get install <string>
git commit -m <string>
mkdir <string>
cd <directory>
ls
pwd
git fetch
ls
git push -u <string> detail
git push
python3 <file>
cd <string>
type <string>
cd <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
npm install
docker login
ls
git reset HEAD -- <string>
ls
df
pwd
ls
top
history -c
docker-compose up -d --build
more <file>
ls
ls
find . -iname <string>
rm -f <string>
sudo yum install -y <string>
rm <string>
cp <string>
find <string> -type <string> -exec <string> -l <string>
cd ..
read -p <string>
git add .
ls
ls
kubectl apply -f <string>
npm install
exit
ls
git commit
code .
cat <string>
vi <file>
git add <string>
clear
git diff
cd <string>
git checkout <string>
cd ..
ls
rsync <directory>
fg
cp <string>
rm -r <string>
git clone <URL> --depth <number> --branch <string> --single-branch
git commit -v -a -m <string>
cd
clear
cd <directory>
ls
ls
cat <string>
ls
git commit -m <string>
pwd
ls
cd <string>
ls
mkdir -p <string>
git log --oneline
git status
ls
sudo tail -f <directory>
grep <string>
sudo nvidia-xconfig --enable-all-gpus
ls
export <string>
git commit -m <string>
xargs grep <string>
clear
cat <string>
ping <string>
clear
man <string>
cd <string>
systemctl -is-active
ls -alrt <string>
curl -q <URL>
cd ..
cd <directory>
vi <file>
cd <directory>
clear
cat <string>
gpg --verify <file>
ls
diff <file>
done
clear
ls
man <string>
curl -sL <URL>
git clone <URL>
cp <string>
tail -f <directory>
sed <directory>
npm install
cd <string>
git push origin main
cat <string>
export <string>
vi <file>
cd <string>
git add <string>
chmod +x <string>
env
cd ..
grep <string>
git add .
git add <string>
sudo pacman -Syu <string>
sudo apt-get update
sudo service nginx reload
gsettings set <file> <string>
mv <string>
git push
sudo npm install <string>
rm -rf <string>
git add .
exit
ls
scp <string>
wc -l
ls
cd
htop
exit <number>
cd <string>
done
rm -rf <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
cd ..
rm -f <string>
g++ <file> -o <number>
clear
ls -alrt
git add .
cd
git status
export <string>
ls
npm install --force
rm -f <string>
read <string>
docker-compose up -d --build
vim <file>
ls
rm -R <string>
cat <string>
npm run
sudo swapon -s
sudo ufw status
unset <string>
ls
cat <string>
cd <string>
exit
ls
npm start
git status
git add <string>
git remote add origin <URL>
vim
vi <file>
git pull
ls
git commit -m <string>
rm -rf <string>
cd ..
ls
fg
cd <directory>
git config --global <file> <string>
fg
ls
cut -d' <string> -f1
git commit -m <string>
sudo apt install <string>
cd <string>
cd <string>
docker run -name <string> -d -p <string> -v <directory> -u <string>
cd <string>
cp -r <directory>
vi <file>
fg
mkdir -p <string>
git commit -m <string>
cd <string>
cd <string>
cd ..
sudo snap uninstall <string>
git pull
git add <string>
nano <file>
fg
sudo python3 <file>
git clone <URL>
cd <string>
vim <file>
ls
git commit
cd ..
git log
tail history
ls
cd <string>
ls
nano <file>
curl <URL> -o <file>
mkdir <string>
ls
git clone <URL>
cat <string>
apt-cache show <string>
ls
sudo apt-get install <string>
cd <directory>
ls
ls
ls
cd <string>
exit <number>
cd
rm <string>
apt-get install vim -y
ps -aux
rails <string>
vi <file>
brew install <string>
git submodule add <URL>
sudo -i
ssh-add -K <directory>
curl -sL <URL>
docker stop <string>
ls
sudo apt-get install -y <string>
cd <string>
ls
git branch -a
read -p <string>
uname -a
cd <string>
cd <string>
sort > <file>
nano <file>
touch <string>
cd <string>
sudo dnf install -y <string>
git remote add origin <URL>
mkdir <string>
cd <directory>
clear
git commit -m <string>
sudo mount <directory>
ls
sed -n -e <directory> -e <directory>
cd <string>
cd <string>
sudo apt update
sudo cp <string>
reboot
pwd # tells you where you currently are
clear
git pull
cat -n <file>
sudo apt dist-upgrade -y
ls
rmdir <string>
open <string>
git status
rm -rm <directory>
git pull
tail -f <directory>
cat <string>
grep -rE <string>
fg
git clone <URL>
sudo systemctl restart <string>
vi <file>
mv <string>
systemctl edit --full <string>
sudo yum install <string>
git add .
git add .
sleep <number>
vim <file>
clear
vim <file>
vim <file>
ls
vi <file>
exit
vim <file>
git clone <URL>
clear
ls
cd..
vi <file>
clear
git add .
cd <string>
git push
git status
ls
git submodule add <URL>
touch <file>
clear
npm start
sudo apt install <string>
exit
chmod <number> <string>
rm go -rf
ls
git status
mkdir -p <string>
ls -l
git stash
less
sort -u
git push
ufw allow <string>
read -p <string>
sudo chmod +x <string>
exit <number>
ls
ls --all
git pull
find . -type <string> -print0
python3 -m <string> install <string>
less <string>
cd <string>
git add .
git checkout <string>
clear
exit
cat <string>
reboot
rm -f <string>
sudo pacman -S <string>
cd <string>
docker ps -a
ls
exit
grep -rP <string>
sudo apt install <string>
mkdir <string>
sudo gem install <string>
clear
rm -rf <string>
rm <string>
ls
source <directory>
mkdir -p <string>
cd <string>
eval <string>
sudo apt-get remove libapache2-mod-php5 -y
mkdir <string>
sudo
sudo yum install <string>
docker-compose up -d --build
apt install -y <string>
ls
sed -E -e <directory>
ls
find . -name <file> -type <string> -print -delete
chgrp <string>
nano <file>
sudo sed -i <directory> <file>
sh <file>
wget -O <file>
ls
cd <string>
git add <string>
mv <string>
git status
clear
sudo apt-get install <string>
curl -sS <string>
git pull
nano <file>
npm start
rm -f <string>
rm -rf <string>
exit <number>
sudo mkswap <directory>
ls -alrt <string>
vim <file>
sudo ln -s <directory>
ls
exit
sudo python3 <file>
cd ..
exit
git init
ls
sudo install <string>
fg
cd <string>
sudo useradd --home <directory> --group <string> --shell <directory>
vi <file>
clear
sudo sed -i <directory> <file>
sudo sed -i <directory>
git remote -v
git clone <URL>
source <file>
git commit -m <string>
ls -lh
cd
clear
ls
ls
cd <string>
sudo pacman -S <string>
docker tag <string>
ls
git fetch
clear
time go run <file>
man
exit
cd <directory>
ls
git init
sed -i <directory>
ls
ls
ls
cat <string>
nohup node <file>
fg
tmux source-file <file>
git remote add origin <URL>
git commit
cat <string>
ssh-add -L
git merge
sudo cp <string>
exit
ls -la
ls
cd ..
cp <string>
git push -u <string> master
curl <URL> -k
xargs -0 <string>
ls
sudo rm -rf <string>
cd <string>
tr <string>
git commit -m <string>
<directory> <string>
curl -s -X <string> <directory> -H <string> -H <directory> --data-urlencode <string>
export <string>
type <string>
ls
git init
git commit -m <string>
ls
vi <file>
clear
cp <string>
pwd
sudo nano <directory>
vi <file>
chmod +x <string>
cd ..
ls -la <directory>
git push
ls
ls
ls
git commit -m <string>
vim <file>
jq <string>
ls
rm -f <string>
cd <directory>
cd <string>
pwd
git add <string>
cd <directory>
ls -l
git commit -m <string>
git checkout master
cd ..
chmod u+x <string>
cd <string>
cd ..
vim <file>
fg
git branch -d <string>
ls
cd ..
exit
source <file>
cd ..
ls
git branch
cd <string>
grep -v <string>
wc
curl -L -o <string>
ls
git status
git clone <URL>
diff <file>
cd <string>
sudo nginx -t
cd <string>
sudo apt-get update
ls
sudo -s -u <file> -H
npm audit fix
clear
cd <string>
cat <string>
done
fg
gpg --allow-secret-key-import --import <directory>
sudo systemctl status <string>
ls
git clone <URL>
ls
sed -i <directory>
mv <string>
git commit -m <string>
ssh-keygen -f <string> -t <string> -C <string>
cd <string>
npm install querystring --save
ls
ls
fg
find . -name <file> -exec <string> <string>
cd <string>
git please
ls
pwd
chown -R <string>
git config --global <file> <file>
vim <file>
git pull
git log
pwd
sudo xbps-install <string>
tmux
sudo apt-get install <string>
sudo killall <string>
sudo sysctl -p
cd <string>
ls
sudo git add <string>
cd <string>
exit <number>
ls -R <string>
python3 <file>
clear
ls
ls -la
lsblk -N
sudo apt-get install -y <string>
git branch
exit <number>
cd <string>
clear
cut -d <string> -f <string>
ls
git stash pop
ls
pwd
sudo apt-get install <string>
nano <string>
grep -Eq <string>
sudo vim <directory>
sudo apt-get update -y
ls
sudo chmod a+rwx <directory>
reboot
nano <file>
git add .
touch
git remote rm <string>
ls
cd <directory>
ls
cd ..
exit
git --version
ls -l
git commit
ls
mvn compile
diff -b <file>
ls
awk <string>
cd <directory>
cd <directory>
sudo useradd -M -d <directory> -s <directory> -G <string>
xargs -L1 -I'{}' <string> -rE <string>
docker kill <string>
ls -ltr
git push -u
vi <file>
rm <string>
ls -al
cd
find . -name <string> -type <string>
git push -u <string> master -f
cat <string>
rm -rf <string>
ls
chmod <number> <string>
cp <string>
cd <string>
git push
bash <file>
git pull origin master
git add <string>
git commit -m <string>
sort
clear
cp -r <directory>
git push -u <string> master
sudo chmod -O+W <directory>
ls
cd <string>
git remote add origin <URL>
sudo apt install
ls
sudo apt-get -y <string>
sudo apt-get remove <string>
git remote add origin <URL>
free -m
ls
git commit -m <string>
git stash
ls
git init
fg
sudo apt-get update
cd <string>
ls
clear
cd <directory>
vi <file>
clear
ls
vim <file>
killall
cat <string>
cd <directory>
ls
ping <string>
clear
git commit -m <string>
cd <string>
read -rp <string> <string>
ls -lah
sed -i <string>
npx create-react-app <string>
git init\
git init
cd <directory>
ls -la
ls
sudo rm -R <string>
clear
npm audit fix -f
ls
docker images
done
cd <string>
git log
cd <directory>
cd <directory>
read -p <string>
cd <directory>
clear
tail -n$KEEP <string>
cd
yarn add <directory> --dev
npm run watch
sudo service <string>
sudo pacman -Syyu
cat <string>
ls
rm <string>
ls
cd <string>
grep -wx <string>
wget -O- <URL>
which <string>
ls
cd <string>
ip a l
ls
cd <string>
top
date
nano <string>
cp <string>
ls
ls
cd <directory>
ls
sudo reboot
npm install
mkdir -p <string>
git commit -m <string>
cd ..
git checkout -b <string>
ls -lAF
git status
ls
cd <directory>
git remote remove origin
npm list -h
find . -empty -type <string> -print -delete
git push
ls
touch <string>
fg
exit <number>
cd <string>
cd <string>
git add .
ls
ls
vi <file>
sudo wget -qO- <URL>
sudo apt-get update
git commit
cd <string>
ls -alrt <string>
cd <string>
ls
cd <string>
rm -r <string>
git commit -m <string>
cat <string>
ls
sed -i <string>
curl -o <string>
sudo apt-get --assume-yes <string> <string>
ls
read -r <string>
vim --version
curl <string>
cd <string>
cp <string>
ls
sudo mv <string>
ls
exit
clear
git pull
find . -name <file>
ls
sudo make
cd ..
less <string>
vim <file>
mkdir <string>
wget -O <file>
cd ..
sudo umount <directory>
sudo vim <directory>
git add .
ls
cd <string>
nano <file>
sudo <directory> restart
sudo git config --global <file>
ssh <string>
ssh <string>
cat <string>
rm -rf <string>
cd ..
vi <file>
vi <file>
docker build -t <string>
git init
sudo mv <file>
ls++ -a
cd <string>
cd <directory>
sudo apk add <string>
ls
rmdir <string>
fg
git add <string>
date <string>
vi <file>
journalctl -u <string> -f
ls
cd <directory>
ls -a
cd <string>
exit
ls
ls
ls -a
ls -l
ls -al
cd <string>
cat <string>
pwd
curl <URL> -u <string> -d <string> -d <string> -d <string>
vim <file>
grep -i <string>
vi <file>
rmdir <string>
docker-compose stop <string>
git commit -m <string>
ps -ef
ss -nlpt
clear
ls
sort -g
git add .
sudo apt-get update
cd <string>
sort file <string>
python3 <file>
cd ..
sed -i <string>
clear
ps axfu
cd <string>
clear
cd <string>
rm -r <string>
nano <file>
sudo rm -R <string>
clear
sudo pacman -Syyu <string>
ls
sudo dpkg -i <file>
journalctl
git commit -m <string>
python3 <file>
sudo systemctl status <string>
git commit -m <string>
git diff --stat --color <string>
grep -Ei <string>
cp <string>
ls
fg
npx create-react-app <string>
sudo apt-get update
git clone <URL>
ls
curl -sS <string>
ls
git status
cd ..
docker-compose logs
pwd
chsh -s <directory>
curl <string>
node --version
npm i
docker image ls
egrep <string>
git update-ref -m <string>
git rm --cached <directory>
ls
cd <string>
clear
cd ..
clear
cd <string>
cd ..
history
git branch
rm -rf <string>
sudo yum update -y
git status
ls
npm run pretty
ssh-keygen
git add .
docker image ls
node <file>
screen -r <string>
history
tar -cvpf <file>
git commit -m <string>
perl -ne <string>
git config --global <file>
cd <directory>
sudo pacman -S -Rcns <string>
cd <string>
cat <string>
fg
vim <file>
rm -r <string>
git commit -m <string>
cp <string>
git status
ls
cd <string>
ls
sudo apt-get update
sed <directory>
sudo ls
ls -l
cd <string>
ls
cd ..
git commit
ls -l
tr
clear
clear
cd <directory>
df -h
mv <string>
sh <file>
ls
git pull
bash <file>
sudo make clean install
cd <string>
mkdir -p <string>
mv <string>
dpkg -l <string>
rm -rf <string>
ls
find . -type <string> -exec <string> -i <directory>
cd ..
ls
ls
git add .
tail -n <string>
cd <string>
clear
sudo su
head -n <number>
clear
cd <directory>
wget <URL>
ls -la <directory>
mkdir <string>
cd ..
systemctl --type=<string>
zip -FS -q -r <file>
vi <file>
ls
cd <string>
python3
vi <file>
cd <directory>
ls -laSh
cd <string>
git remote add origin <URL>
tail -n10 -f <file>
ls
su
sudo service <string>
git reset --hard
rm -f <string> --date=<string> <string>
cp <string>
rm <string>
cd <string>
clear
pwd
cd <string>
python3 <file>
vim <file>
ls -la
exit
rm -rf <string>
sudo apt-get upgrade -y
sudo vi <directory>
ls
ls
ssh dirlic@10.18.0.39 -p <number>
rm -r <string>
cd <directory>
cd <directory>
cd <string>
git commit -m <string>
cd <string>
sleep <string>
git add <string>
ls
ls
ls
vi <file>
ls
sh <file>
ls
ls
sudo cat <string>
fg
cat <string>
cd -
cd <string>
git st
git add <string>
git branch -M <string>
git bisect good <string>
git clone <URL>
ls
find . -name <file>
clear
rm -rf <string>
mkdir <string>
mkdir <string>
git pull
ls
git commit
vim <file>
cp -r <directory>
cd <directory>
ls
sleep <number>
docker rm <string>
cd <string>
fg
tmux
find . -name <string> -type <string>
time <string>
apt-get update
sudo rm -R <string>
git add <string>
curl -v -X <string> <directory> -H <directory> -H <string> -H <string> -H <string> -H <string> -H <string> -H <string> -H <string>
git push -u <string> bryan-guner
npm install
git add .
ls
curl -o <string>
sudo rm -rf <directory> <directory>
history -a
npm i <string>
ls -la
grep <string>
ls
git
curl <string>
cd <string>
git push --set-upstream <string> master
vim <file>
mv <string>
cd <string>
git commit -m <string>
open <string>
sudo docker logs -f <string>
service <string>
sort > <file>
sudo sed -i <directory> <file>
git status
su -root
ls
vi <file>
hostname -d
ls
ls
wget -q <URL> -O -
cd <string>
fg
then\
cd <directory>
vi <file>
git commit -m <string>
vim <file>
ssh <string>
ls
ls
vim <file>
systemctl status <string>
cd <string>
ls
npm run dev
ls -l
cd <directory>
sudo apt docker pull <directory>
git status
cd
ssh <string>
ls
vi <file>
cut -d":" -f2) <string> -d" <string> -f12 <directory>
ls
git status
grep <string>
ls
vi <file>
sudo dpkg -i <file>
python3 <file>
ls
cat <string>
exit <number>
git commit -m <string>
ls
clear
clear
grep -rnw <string> -e <string>
vim <file>
ls
cp -r <directory>
cd <string>
grep -w <string>
code .
vi <file>
cd ..
rm -f <string>
sudo mkdir --parents -- <string>
npm run serve
rm -r <string>
ls -LR
cd <string>
sudo halt <string>
ls -la
bash <file>
ssh -i <string> remote_user@remote_host
cd
cd ..
git config --global <file> <file>
ls
cd
source <file>
sudo xbps-install <string>
sudo apt-key add -
ping <file>
sudo vi <directory>
git commit -m <string>
lsblk
cd <string>
git add .
ls
cd <string>
cd ..
tail -n200
cd ..
vim <file>
vim <file>
clear
ls
git commit -m <string>
vim <file>
ls
git add .
mkdir <string>
wget <URL> -O <file>
source <file>
clear
systemctl list-units
sudo pacman -Syyu
rm <string>
vim
ls
cd <string>
vim <file>
ls
ls
ls
python3
find . -empty -type <string> -print -delete
cp <string>
cd <directory>
cat <string>
git init
python3 <file> -sI <string> -sM <string> -dM <string> -dI <string> -v
stat <file>
sudo nano <directory>
exit <number>
ls
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git status
cd <directory>
ls -alrt <string>
tail -1000 <string>
docker push <directory>
cd ..
exit <number>
git cm -m <string>
cd ..
git clone <URL>
sleep <number>
wget <URL> -O <file>
wget --user=<file> -password=<string> -r <URL>
vim <file>
ls
sudo ifconfig en0 ether <string>
exit
nano <file>
git add -A
sh <file>
top
vim <file>
sudo mount -t <string> -o <string> -u <string> -g <string>
export <string>
cd <directory>
git pull origin master
git remote add origin <URL>
sudo nmcli con mod <string> <string>
sort -n
sudo reboot
cd <string>
killall -q -9 <string>
ls
git commit -m <string>
cp <string>
sudo rm -rf <string>
git commit -m <string>
grep <string>
sudo setcap <string>
clear
cat <string>
reboot
rm -rf <string>
clear
ls
nano <file>
git status
git commit -m <string>
docker run --privileged --rm -itd --init <string>
git remote --v
ls
cd <directory>
find . -type <string> -print0
cd <string>
touch <file>
ls
cd <string>
ls
tar -tvf <file>
ls
sudo light -U <number>
cd <string>
git add .
ls
ls -alrt <string>
git merge develop
rm -rf <string>
npm config set prefix <string>
sudo sed -i <directory>
python3 <file> -- <string> @CAMERA=<string> <string>
ls
cd <string>
cd <string>
clear
python3 <file>
git add .
clear
ping <string>
ls -l
sudo mkdir -p <directory>
sudo gedit <string>
sleep <number>
cd <directory>
vim <file>
done
node <file>
clear
ls
grep -q <string>
sudo luarocks --lua-version <string>
npm i prettier -g
sudo -E <string> -y <directory>
rm <string>
fg
less <string>
vim <file>
git bisect <string>
npm i prettier -g
git branch -a
npm install mocha --save-dev
sudo xbps-install -Su
clear
service apache2 restart
nano <file>
find . -name <file>
cd
grep <string>
git init
ls -al
git push
yarn <string>
npm config set <string>
ls
git status
ls
ping <string>
sudo apt-get install <string>
bazel <string>
scp -r <string>
vi <file>
touch <string>
nano <file>
git push --force-with-lease <string>
ls
cd ..
ls
git status
touch <string>
clear
sudo angular-cli-ghpages --repo <file> --message <string> --dir <directory> -S
git add <string>
date
clear
ls
git format-patch -1 <string>
docker network ls
exit
df -lh
cd <directory>
cd <directory>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
xrandr --listproviders
find <directory> -size <string>
find . -name <string> -type <string> -print -delete
apt-get --purge --yes <string>
vim <file>
nano <file>
sudo apt install <string>
reset
cp -r <directory>
pwd
ps aux
vim <file>
cat <string>
sudo ifconfig en0 ether <string>
sudo apt upgrade
touch <string>
cd <directory>
python <file> runserver 0.0.0.0:2016
fg
git remote add origin <URL>
sudo apt show <string>
cd <string>
source <string>
cd <directory>
fg
git add .
curl --silent <string>
vim <file>
npm install --save-dev <string>
<directory> install --from-paths <string> --ignore-src -r -y --simulate
ls
apt-get source <string>
mkdir <string>
ls
cd <string>
docker-compose up -d --build
git reset --soft <string>
vim <file>
ls
ls
find . -empty -type <string> -print -delete
cd <string>
sudo make install
ls
git commit -m <string>
cd <string>
pkill <string>
ls -l
tr <string> <string>
ls
cp <string>
grep -Em1 <directory>
git pull origin master
ls
cd <directory>
sudo passwd <string>
cd <string>
su - <string>
ls
cd <string>
cd ..
vi <file>
cd <string>
sudo service nginx restart
mkdir <string>
npm i --save <string>
git add .
clear
npm install -g <string>
su - <string>
export <string>
cd <directory>
tmux set-option -g <string>
cd <string>
git add .
vim <file>
ls
git fetch
rm -rf <string>
ls
ls
sudo rm -r <string>
vi <file>
cp <string>
ls
curl -sL <URL>
sudo apt-get purge npm --auto-remove
python3 -m <string> install <string>
vi <file>
ls
wget -O - <URL>
tail -n5 <string>
cat <string>
git add <string>
unset <string>
chmod +x <string>
ls
ls -l
ls
then\
ls
ls
sudo umount <directory>
rm <string>
ls
ls
nano <file>
cd <string>
ls
ls
ls
cat <string>
read -p <string>
vim <file>
git remote add origin <URL>
cd ..
fg
vi <file>
pwd
git stash
git commit -m <string>
cd <string>
cat <string>
top
ls
apt-get -y <string> <string>
mkdir -p <string>
git tag -f -a <string>
clear
sudo sed -i <directory> <file>
mount -l
cd <string>
cat <string>
clear
cd
git push
docker history <string>
rm -rf <string>
wget <URL>
cd <directory>
vim <file>
find
ls
ls
cd
cd <directory>
unset <string>
clear
ls
git status
grep -rni <string>
cd <string>
cd <string>
ls
clear
exit
sudo apt install <string>
sudo -i
ls
cd <string>
ls -a
ls
git commit -m <string>
find <directory> -name <string>
ps ax
find . -type <string> -exec <string> <directory>
git commit
<file> program
curl <directory> -qO- <URL>
git stash apply <string>
grep -w <string>
git add <string>
apt-get remove wide-dhcpv6-client -y
systemctl status <string>
tee -a <string>
pwd
git commit
git commit -m <string>
python3
cd <string>
git push
cd <string>
git add .
clear
clear
git commit -m <string>
git add <string>
clear
cd ..
bash
ls
cd <string>
cd ..
rm -rf <string>
sudo ifconfig en0 ether <string>
git push
setg RHOSTS <file>
systemctl
vi <file>
ls
ls
sudo certbot --nginx -d <file> -d <file>
chmod -x <file>
ls
pwd
cd <string>
python3
wget <URL>
git remote add origin <URL>
ls
find . -maxdepth <number> -name <string> -exec <string> <string>
npm run start
vim <file>
exit <number>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
source <string>
rmdir <string>
clear
ls
python3 <file>
exit <number>
docker-compose up -d --build
rm -rf <string>
ls
git add -A
ls++ -a
sudo vi <directory>
cd <string>
ls
ls
ls -la
exit
git push origin master
mkdir -p <string>
vi <file>
ls
mv <string>
unzip -o -d <string>
sudo apt install <string>
git add
tail -f <string>
vim <file>
ls
service <string>
ls
git pull
pwd
rm -fr <string>
cd
sed -nE <string>
rm -rf <string>
ls
sudo systemctl stop <string>
cd <string>
cd
locate <string>
git push
cd <string>
vim <file>
cd ..
sudo apt-get upgrade
ls
cd <string>
exit
sudo npm install -g <string>
bash -l
git status
git status
python3 <file>
git status
du -skh <string>
then
vi <file>
vi <file>
clear
read <string>
cd
fg
source <string>
finger <user> # displays information about user
cd <directory>
set -e
grep -H -R <string>
vi <file>
cd <string>
cd ..
cd
sudo unlink <string>
cd <directory>
cd ..
sudo npm test
clear
wc -l
git commit
ls -lAF <string>
git log
clear
git add .
rm -fr -- <string>
vi <file>
git branch
sudo apt update
find . -empty -type <string> -print -delete
ls -ltr
yay -S <string>
cat <string>
cd <string>
pwd
git reset --hard <string>
cd <string>
cd ..
cd <directory>
git add .
sudo dnf install <string>
mkdir <string>
ls
git remote add origin <URL>
ls
mkdir -p <string>
python3 <file>
sudo ls <directory>
git init
cd <directory>
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
ls -l
clear
ls
history
exit <number>
python3 <file>
cat <string>
sudo su
rm -rf <string>
ssh-copy-id <string>
fg
ln -s <string>
ls
pwd
git commit -m <string>
clear
vim <file>
git init
cd <directory>
rm -rf <string>
clear
git push
git add <string>
find $dir -type <string>
ls
ls
exit
sudo apt-get --assume-yes <string> <string>
mv <string>
sh <file>
cd ..
cd <string>
cd <string>
pwd
ls
ls
git init
cd ..
git status
open .
ls
ls
pico <file>
exit <number>
man -i
vim <file>
rm <string>
chown -R <string>
ls
cd <string>
sudo nvim <directory>
npm install yarn -G
cd <string>
exit
cd <string>
sudo apt install -y <string>
ls
ls
cd <string>
cut -f <string> -d <string>
cd <string>
cd
sudo apt-get install --no-install-recommends <string>
ls
git fetch upstream
ls
ps -A
rm -rvf <directory>
ls
git checkout <string>
vim <file>
cd <string>
ps ax
grep <string>
rm -rf <string>
exit <number>
git clone <URL>
mv <string>
cd <string>
cd ..
grep -r <string>
git remote add origin <URL>
cd <string>
ls
history -n <string>
git add .
sed -i <directory>
mkdir <string>
clear
exit <number>
chmod --reference <string>
git status
find
npm install -g <string>
expand -t <number>
cd ..
git status
grep -v <string>
nano <string>
find . -type <string> -print0
ls
cd <string>
locate <string>
sudo service nginx restart
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
fg
ls
go test
ls -a
vim <file>
find . -empty -type <string> -print -delete
ls
cd <directory>
less <string>
kubectl apply --filename <file>
git commit -m <string>
ls
ls
wget -r -A <URL>
ls
openssl s_client -connect <string>
fg
exit
git commit -m <string>
sudo gem install <string>
grep -rli --color <string>
ls
chmod <string>
git pull
rm -rf <string>
ls -latr
ls
ls
ls -la
vi <file>
git status
nano <file>
ping <file>
ls
wget <URL>
code .
curl --silent <string>
sort
ls
git push
wget -N <URL>
git status
ls
git status
hexdump -c <file>
clear
cd <string>
cat <string>
sudo poweroff
vi <file>
ls
git commit -m <string>
sudo kill -9 <number>
exit
cd <string>
cd
vim <file>
mv <string>
git pull
history -a
vim <file>
ls
nc <number> <number>
python3 <file>
mkdir <string>
vim <file>
kill -9 <number>
podman <string>
python3 <file>
vim <file>
nc -l <number>
grep -Eqi <string>
cd ..
npm run start
top
less <string>
cat <string>
ln -s <string>
cd <directory>
sudo npm test
apt-get install <string>
git status
cd ..
ls -h
kill -9 <number>
curl -s -L -o <directory>
cd
ls
clear
npm publish --access <string> --scope=<string>
exit
cd <string>
python3 <file>
fc-cache -f
top
htop
sudo dnf install <string>
finger <user> # displays information about user
cd ..
git add <string>
cd ..
sudo tar xfvz <file> --directory <directory>
source <string>
touch <string>
git clone <URL>
mv <string>
cd ..
sudo sed -i <directory> <file>
unset color_prompt force_color_prompt
cd <string>
git co HEAD .
docker-compose logs --follow <string>
ls
cd
top
date <string>
git clone <URL>
mv <string>
ping <file>
git init
ls -l
exit
vim <file>
nano <file>
mv <string>
cd ..
cd <directory>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
cd <directory>
ls
fg
ls
mkdir <string>
ls
exit <number>
ls
exit
cd <string>
pacman -S <string>
ls
git push -u <string> main
git status
ls
exit
ls
git pull
cd <string>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
mv <string>
sudo vi <file>
cd <string>
git clone <URL>
cd <directory>
sed -n <string>
cd ..
sudo docker ps -a
git add .
cd <string>
cd <string>
cpio -p -d -v <string>
cat <string>
ls
git init
git clone <URL>
du -sh <directory>
curl <string>
pwd
sudo mv -f -v <string>
git push
git add -A
git push -u <string> main
grep -Ev <string>
apt upgrade
git add <string>
tar xvf <file>
sudo systemctl start <string>
sudo apt list --upgradable
cd <string>
cat <string>
vim <file>
pwd
exit
ls
git status
chmod +x <string>
git commit -m <string>
vi <file>
cd <string>
awk <string>
nano <file>
npm install remark-cli -g
clear
wget -q -O <file>
cd <string>
cd <directory>
exit
ping <string>
sudo python <file>
nano <file>
git config --
source <file>
ls
git commit -m <string>
service <string>
ls
sudo dnf install -y <string>
cd ..
npx <string>
ps -u <string> # lists your processes
git add -A
docker-compose up -d
ssh <string>
vi <file>
cd <directory>
git branch
git add -A
source <string>
sed <directory>
apt-get -y -qq <string> <string>
npm install --global <string>
vi <file>
cd <directory>
cd <string>
ls
clear
history -a
fg
mv <string>
head -n <number>
git commit -am <string>
mkdir <string>
ls
git config --global <file>
cd <string>
ls
service apache2 restart
ls
git merge <string>
exit
git grep <string>
vim <file>
clear
fg
ls
git checkout <string>
cd ..
mv <string>
git push
git config --global <file> <string>
ls
cp <string>
sudo apt get install <string>
man <string>
source <string>
ls
git add <file> -f
sudo crontab -l
curl -o <string>
sudo reboot
rm -Rf <string>
brew install ${FONTS[@]} --cask
git commit -m <string>
git remote add origin <URL>
clear
sudo apk add <string>
grep -v <string>
ls
clear
git push origin master
vim <file>
sudo git pull origin master
dd --h
ls++ -a
git clone <URL>
touch <string>
git status
service apache2 reload
git status
git push -u <string> master
ls
sudo apt-get install <string>
ls
docker-compose logs
cd <string>
git remote add origin <URL>
vi <file>
docker-compose up -d --build
ls
ls
npm install
cat
ls
ls
tail -$2 <directory>
pkill <string>
ls
cd <string>
git add .
exit
sed -i <string>
git pull
gpg --verify <file> <string>
ls
rm -r <string>
cd <string>
cat <string>
cd <string>
cp -r <directory>
su - <string>
ls
sudo lsof -i -P
clear
ls -lT
sudo npm install
bash <file>
cp -r <directory>
ls
cd <string>
sudo pacman -S <string>
find . -name <string> -delete
git push -u <string> main
cat <string>
ls
ls
pwd
ftp <string>
sudo -H <string> install keras_preprocessing --no-deps
history
sudo git config --global <file>
cat <string>
rm -f <string>
fg
cd <string>
git log
umount -R <directory>
source <string>
sudo apt install <string>
sed <directory>
grep <string>
chmod +x <string>
cd <string>
git clone <URL>
sudo apt install
cd <string>
cd ..
clear
ls
cd ..
curl <string>
cd <string>
sleep <number>
wget <URL>
git add .
git checkout -b <string>
git branch
exit
ls -alrt
curl <string>
killall <string>
git config --local <file>
cut -c[s,h] <string>
cd <directory>
sudo yum install <string>
npm start
fg
su
ls
sed -e <directory>
rm <string>
cd <directory>
ls
cd <directory>
rm -rf <string>
ls
ls
cd <string>
npm -v
touch <file>
wget -r <URL>
cd <string>
ls
clear
git checkout master
htop
docker ps
ls
read -r -d <string> <string>
ls
ls
git push -u <string> master
vim <file>
sudo chmod <number> <directory>
cd <directory>
git commit -m <string>
man <string>
ls
reset
rm -rf
git log
vim
ls
clear
sleep <number>
git init
ssh -p <string> user@host # connects to host on specified port as user
cp <string>
fg
git remote add origin <URL>
git add <string>
mkdir <string>
docker exec -it <string>
kubectl get <string>
git push -u <string> master
more <file>
git push
sudo pacman -Ss <string>
mkdir -p <string>
ls
sudo su
ls
cp <string>
ls
cd ..
ls
cd <string>
ls
sudo systemctl enable <string>
ls
sudo service nginx restart
rmdir <string>
exit
mkdir <string>
ls
cd <directory>
vim
ls
find . -name <file> -type <string> -print -delete
ls
python3 <file>
ls
git add <string>
ls
code <string>
ls
fg
cd <directory>
sudo apt-get upgrade
sudo dpkg -i <file>
sudo start uwsgi
ls
git status
exit
git add <string>
ls
ls
git --version
ssh <string>
mv <string>
sudo git add <string>
cd
kill -9 <string>
vim <file>
set
git add <string>
chmod +x <string>
ls
rm -rf <string>
git status
cd <directory>
clear
ls
vim <file>
sudo su
cat <string>
sudo apt-cache search <string>
ls
git fetch
file <string>
ls
source <string>
docker images
ls
git push
git status
mkdir -p <string>
vim <file>
wget -q -O <file>
rm -r <string>
grep <string>
npm http <number>
cd
git pull
git diff <string>
rm -rf <string>
sudo npm install -g <string>
sh <file>
vim <file>
git status
ls
git clone <URL>
ls
cd <string>
ls
which
sudo apt update
source <file>
cd ..
cd ..
git pull
ls
ls
ls -la <directory>
git push origin
vim <file>
git diff
npm create vite@latest my-react-app --template <string>
grep <string>
ls
grep <string>
docker ps # <string>
cd <directory>
cd <string>
ls
git rebase <directory>
cat <string>
ls
ls
read <string>
git pull
git config <file> <file>
ls
cd <directory>
vi <file>
python3 <file> --cuda-root=<directory>
git status
pwd
exit
vi <file>
vim <file>
curl <string>
git pull
ps -o <string> -p <number>
ls
ls
source <string>
awk <string>
ls
ls
wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=<string> --domains <file> --no-parent <URL>
vim <file>
ps aux
sudo pacman -S <string>
grep -i <string>
fg
vim <file>
ls -l
cd <string>
sudo apt install <string>
clear
cat <string>
sudo vim <file>
git pull
unset <string>
vi <file>
read -r <string>
git status
ls
mount
git init
sudo shutdown
ls
grep -q <string>
cp
sudo chmod -R <string>
ls
cd ..
vim <file>
cd <directory>
apt-get -y <string>
docker build -t <string>
ps aux
git status
ls
cd <directory>
python3.11
cp -fp <string>
git status
git status
ls
cd <string>
vim <file>
tee -a <string>
sleep <number>
ping
source <string>
docker push <directory>
git please
cd <string>
source <directory>
sudo sed -i <directory>
vi <file>
mv <string>
sudo apt install <string>
cd <string>
ls
ls
userdel -R <string>
git commit -m <string>
cd <string>
cd ..
ls -la <directory>
cd <string>
LANG=<string> rpm -qp --queryformat <string>
ls
cd ..
sudo make clean install
ls
else\
openssl req -x509 -nodes -days <number> -newkey <string> -keyout <file> -out <file>
clear
ls
ls
cd ..
ls
sudo apt-get clean
sudo apt-key adv --keyserver <string> --recv <string>
sudo dnf sudo dnf <string>
git status
mv <string>
cd ..
grep -B <number>
tail -n1
sudo dpkg -i <file>
hostname
sudo deluser --remove-home <string>
python3.11 --version
grep -i <string>
grep <string>
<directory> <string>
ls
npm i <string>
ls -la <directory>
exit
python3.11 <file>
git add <string>
ps --no-headers -p <string> -o <string>
mkdir <string>
ssh -i <string>
cat <string>
git add .
exit
git add .
find . -type <string> -exec <string> -c <string>
cd
clear
rm <string>
ls
sudo sed -i <directory> <file>
git status
grep <string>
ls
ls
sudo stop uwsgi
ls
cd ..
grep -w <string>
else <string>
cd <string>
ls
apt-get install -y <string>
ls -l
ls
source <directory>
rm <string>
find . -name <file> -type <string> -print -delete
rvm install <string>
cd <string>
cat <string>
ls
npm run dev
chmod <string>
rm -rf <string>
git fetch
ls
python3 <file>
vi <file>
read -p <string>
history
ls
ls
kill <number>
sudo find <directory> -name <string>
sudo reboot
cd <string>
ls
npm start
cat <string>
clear
clear
cd <string>
git add .
fg
cd ..
charset=<string> -H <string> -H <string> -H <string> -H <string> -H <string> -H <string>
git status
chown -R <string>
sudo yum -y <string>
rm <string>
chmod <number> <string>
type <string>
clear
cd <string>
cd ..
apt-get -y <string> <string>
rmdir
touch <string>
cd <string>
docker ps -a
cd <directory>
python3 <file>
sudo adduser --system --group <string>
grep -i <string>
cd
sudo vi <directory>
wget <URL> -O <file>
sudo sysctl <string>
ls
clear
sudo systemctl start <string>
git config --list
sed <directory>
git push origin -u <string>
npm i
git fetch origin\
wget <URL>
ls -la
else <string>
mkdir -p <string>
ls
cd <string>
ls
rm -fr <string>
ls
cd <string>
wget <URL>
ls
<directory> <string>
git commit -m <string>
read <string>
cd <string>
source <string>
git commit -m <string>
npm start
fg
git init --initial-branch <string>
tmux
git commit -am <string>
ls
vi <file>
npm http GET <URL>
cd <string>
cd <string>
python3 -m <string>
cd <string>
npm install -g <string>
git commit -m <string>
more <file>
sudo -i
sudo sed -i <directory>
find . -empty -type <string> -print -delete
docker ps
ls
exit
rm -f <string>
ls
git checkout <string> -- <string>
cd <string>
mv <string>
ls
ip a
sort -g
cd <string>
chmod <number> <string>
read -r -d <string> <string>
find . -perm <number> -exec <string> <number>
ls
vi <file>
sudo ufw <string>
wc -l
export <string>
cd ..
read -r -p <string>
ls
read -d <string> <string>
ls
git clone <URL>
git clone <URL>
ls
bash <file>
git add <string>
ls
docker run <string>
git status
find <directory> -iname <file> -type <string> -exec <string> -c <string>
ls
git remote add origin <URL>
cd <string>
wget <URL> --no-check-certificate
git push
history -a
vi <file>
sudo yum -y <string> <string>
git commit -m <string>
vim <file>
cd <string>
sudo sed -i <directory> <file>
chmod -x <file>
vi <file>
git remote -v
find . -path <directory> -prune -o -name <file> -print -exec <string> -Hni <string>
rm -r <string>
clear
ls
git rm --cached <string>
git status
pwd
git push
clear
sudo apt-get upgrade
git push -u <string> master
cd <string>
print <string>
ls
apt upgrade
ls
git clone <URL>
vim <file>
git restore -A
exit <number>
git diff <string>
git pull
ls
cd <string>
ls -l
ls
ls
less <string>
git remote remove origin
python3.7 -m <string> -V
git status
ls
vim <file>
df
curl -sOL <URL>
sudo npm install -g <string>
nano <file>
dpkg-reconfigure
cd
python3 <file>
sudo ls -lha <directory>
sudo apt install wireshark -y
ls -la
fg
ls
rm -f -- <string>
vim <file>
sudo wget -NP <directory>
git status
vi <file>
ls
ls
ls
python3 <file>
apt-cache show <string>
cd ..
rmdir <string>
docker-compose up -d --build
tail -f <directory>
source <string>
cd <string>
rm <string>
ls
head -n <string>
vi <file>
exit
export <string>
cd <directory>
mv <string>
cat <string>
fg
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
npm run prod
cd <string>
git commit -m <string>
rm -r <string>
history -d <string>
vi <file>
sudo -i
vim <file>
ls
ls
ls
git init
ls
sudo umount <directory>
chmod +x <string>
top
cd <string>
ls
git push
du <directory> -h
rm -rf <string>
curl <URL> -u <string> -d <string> -d <file> -G
sudo chmod <number> <directory>
read <string>
exit
ls
ls
ls
cut -d <string> -f <string>
clear
exit <number>
cd <string>
sudo add-apt-repository <string> [arch=<string> <URL>
cd <string>
cd <string>
ls
less -r
ls
ls
ls -la
exit
ssh dirlic@10.18.0.39 -p <number>
pkill <string>
clear
vi <file>
cd <string>
ls
git log master..${CURRENT} --pretty=<string> -%C(yellow)%d%Creset <string>
sudo -i
git commit -m <string>
python3 <file>
ls
git commit --amend
ls
sudo apt install --fix-broken -o <string>
sudo -i
sudo docker exec -it <string>
curl -sL <URL>
ls
git clone <URL>
git init
cd <directory>
cp -r <directory>
ls
vi <file>
du -ak <directory>
git log --all --pretty=<string>
kubectl rollout status deploy mt-broker-filter -n <string>
ls
git commit -m <string>
ip addr
chmod <number> <string>
vi <file>
wget -O - <URL>
rm -rf <string>
cd <string>
grep <string>
git pull
exit <number>
sudo apt-get upgrade
sudo pacman -S <string>
git init
ls
sudo -i
pwd
grep <string> -n --exclude=<string> <file>
cd <string>
ls
rm <string>
sudo apt install <string>
vim <file>
sudo rm -rf <directory> <directory>
mkdir <string>
ls
git add <string>
fg
exit <number>
git init
vim <file>
head -n <number>
vim <file>
npm create vite@latest
cd ..
awk <string>
cd <directory>
grep <string>
clear
cd
cd <directory>
sudo sh
git add .
git status
ls
ls -ltrd <string>
cp <string>
sudo su
cd <string>
exit
exit
ls
npm install
sed -n <string>
sudo apt install <string>
clear
ls
vim <file>
ps -u <string> # lists your processes
ls
git remote add origin <URL>
sudo mv <file>
git push -u <string> master
ls -la
git add <string>
apt-get install vim curl git htop screen aptitude -y
ls
git add .
mvn clean deploy -Dmaven.compiler.showDeprecation -DskipTests
du -sh <directory>
nano <file>
sysctl -n <file>
cd <string>
cd
unset <string>
read -r <string>
cd <string>
sudo apt-get install <string>
cd <directory>
ls
tmux new-session -d <string>
cd <string>
docker network ls
git pull
clear
nano <file>
fg
exit
nano <file>
git pull
sudo dnf config-manager --add-repo <URL>
git push -u <string> master
cd <string>
git add <string>
git add <string>
ls
git commit -m'WIP: <string>
cd <directory>
vi
docker logs -f <string>
cd ..
ls -l
git remote -a
grep <string>
clear
cat <string>
npm run test
exit <number>
docker exec -it <string> bash
npm run bench -- -c <file> -n <file>
dmesg
sed -i <string>
git checkout
git push origin master
ls
history
vim
exit <number>
git status
sudo mv <string>
curl -Lv <URL>
shutdown -h <string>
sudo apt install <string>
ls -al
mkdir <string>
cd <string>
git fetch
git init
ls
unzip <file>
mkdir <string>
cd <directory>
git push origin master
grep <string>
npm install pushstate-server --save
head -n50 <file>
cd ..
mkdir -r <directory>
ls
ls
cd <directory>
apt list --upgradable
python3 <file>
cd <string>
vi <file>
ls
npm run test
ls
fg
ps ux
git branch -M <string>
cd <string>
vim <file>
cd ..
cd ..
rm -rf <string>
vim <file>
ls
ls
ls
cp -r <directory>
cd <directory>
sudo systemctl enable <string>
sudo iptables -t <string> -D <string>
ls
vim <file>
df -lh
sed -n -e <directory> -e <string>
ls
exit <number>
gsettings set <file> <string>
sudo ifup <string>
sudo pip install <string>
ls
clear
curl -fsSL <URL> -o <file>
ssh dirlic@10.18.0.39 -p <number>
sudo apt-get install -y -f
jq <string>
LANG=<string> rpm -qcp <string>
sudo ldconfig
find . -maxdepth <number> -name <string> -exec <string> <string>
ls
ls
cd <string>
ls
rm -rf <string>
clear
clear
docker start <string>
cd <string>
git remote add origin <URL>
vim <file>
sudo lsblk -f
df -P <directory>
top
cd <string>
vim <file>
ls
grep -Pr <string>
clear
cd ..
npm init -y
clear
git clone <URL>
rm -rf <string>
grep <string>
git commit -m <string>
ssh <string>
cat <string>
nano <file>
git --git-dir=<file> --work-tree=<string> <string>
vim <file>
mv <string>
ps $@ -u <string> -o <string>
grep -r <string>
git status
bash
cd <string>
ls
ls
ls
cd <string>
cd <directory>
cd <string>
cat <string>
git status
ls
chmod +x <string>
ls
cat <string>
clear
clear
ssh <string>
sudo apt-get update
cd ..
git fetch origin\
mv <string>
ssh-copy-id <string>
cd <directory>
ls
cd <directory>
git fetch
npm install express --save
xrandr --output <string> --same-as <string>
tr -cd <string>
git log
git status
sudo halt
vim <file>
ls
docker logs <string>
wget <URL> -O <file>
git clone <URL>
git push -u <string> master
sort
sed -E -e <directory>
git status
sudo updatedb
tar -xzf <string>
sudo sed -i <directory> <file>
ls
mv <string>
find . -empty -type <string> -print -delete
sudo apt-get install <string>
grep <string>
rm <string>
curl -o- <URL>
vi <file>
git status
nano <file>
git stash apply
npm test
systemctl status <string>
git add .
reboot
code .
clear
cd <string>
cd <directory>
cd ..
lsblk
ls -l
cd ..
dir
sudo systemctl start <string>
sudo rm -f <directory>
ls
ls
git checkout -
sudo apt install <string>
git push -u <string> master
cat <string>
cd <string>
git status
grep -i <string> >files
telnet <string>
git pull
cd <directory>
wget <URL>
git commit -m <string>
cd <string>
apt install -y <string>
pwd
rmdir <string>
cat <string>
vim <file>
curl -sS <string>
git status
cd ..
alias <string>
ls
ls
cat <string>
ls
git init
clear
git gc --aggressive --prune
git add .
vim <file>
vi <file>
clear
exit <number>
git push -u <string> master
ls
pwd
sudo git push -u <string>
rm -rf <string>
ls -a
screen exit
sudo chmod <number> <string>
find . -name <file> -type <string> -exec <string> -rf <string>
mkdir <string>
ls
ls
sudo xbps-install <string>
wget <URL>
cd ..
npm i <string>
git add .
cd <directory>
mkdir <string>
cp <string>
git commit -m <string> --no-verify
rm -rf <string>
source <directory>
ls
cd
ls
cd
ls
ip -o -4 <string>
npm i
git add <string>
source <directory>
tar -zcvf <file>
ls
cd <directory>
vi <file>
sudo apt-get -y <string>
cd <string>
ps -df
ls
ls
cd <string>
tmux
git push
cd
history
curl -sSL <URL>
git init
clear
screen -r
bash <file>
exit <number>
git log --format=<string> <string>
git config --global <file> <file>
mv <string>
vim <file>
git add -p
ls -altr
ls
cd ..
vim <file>
sudo apt-get install <string>
git push
git add <string>
wget -q -O <file>
sudo apt install <string>
cd ..
awk <string>
more <file>
cd ..
mkdir -p <string>
sudo rm -f <directory>
cd <string>
ls
ls++ -a
curl -s <string>
let <string>
git submodule deinit -f <string>
git pull
scp <string>
sudo apt-get install <string>
rm -r <string>
git status
ln -s <string>
cd <directory>
cd <string>
git push
killall -SIGUSR1 <string>
ls
git add .
pwd
cd <string>
ls
audit2allow -m <string>
git branch -M <string>
vim <file>
env
git commit -m <string>
ls
ls
ssh dirlic@10.18.0.39 -p <number>
cd <string>
ls
ls
ls
docker ps
grep <string>
sed -e <directory> -e <directory>
grep -v' <string>
vim <file>
tmux
ls
git rm --cached <string>
npm audit fix
nano -c <string>
exit <number>
git add <string>
mv <string>
git remote add origin <URL>
sed -i <string>
cd <string>
source <file>
mv <string>
git switch main
mv <string>
cut -d" <string> -f <string>
sudo lsof -i
cd <string>
rm -rf <string>
sudo useradd <string>
git rebase -i <string>
mv <string>
ls
chmod <number> <string>
screen -r <string>
ls
npm install
grep -P <string>
npm run dev
ping
ls -ls
ls
npm ls
mkdir <string>
vim <file>
git commit -a
pacman -Scc
sudo apt-get update
source <file>
cd <string>
python3 <file>
rm -i <string>
cat <string>
chsh -s <directory>
cat <string>
exit
sudo sgdisk -d <number>
apt-get -y <string> <string>
mv <string>
kubectl <string>
sudo sed -i <directory> <file>
git checkout master
cd ..
env <string>
tmux a
clear
more <file>
printf <string>
grep <string>
ls
exit
cd <string>
eval <string>
systemctl start <string>
sudo mkdir <string>
cd <string>
vi <file>
jq <string>
docker exec -it <string> bash
curl -sSLO <file>
rm -f <string>
more <file>
ls
chmod <number> <string>
<directory> <string>
cp <string>
su - <string>
sudo <file> -v -r -w <string> -o <string>
rm -rf <string>
exit
ip a
cd <string>
sudo systemctl restart <string>
git status
ls
vi <file>
cd <string>
ls
fg
git status
rm <string>
cd <string>
git status
cd <string>
cd <directory>
git pull
sudo sed -i <directory> <file>
cd <string>
ls
cd <string>
clear
xargs -0 <string> --max=<number> --strip-all --preserve --totals --all-progressive
git add <string>
ssh dirlic@10.18.0.39 -p <number>
grep -Eq <string>
cd <string>
ls
git commit -m <string>
git status
docker run -d -p <string>
git add <string>
cat <string>
npm run start
htop
cd <string>
sudo apt-get dist-upgrade
git rm <string>
clear
ls
xargs grep <string>
ls
sudo groupadd docker
sudo apt-get update
sed -e <directory>
cd ..
ls -a
cd <string>
code .
ls
ls
kill <number>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
mkdir <string>
vim
ps -ef
bash <file>
pushd <directory>
ls
cd <directory>
cd ..
sudo usermod -a -G <string>
sudo apt-get update
find . -name <string> -type <string>
source <string>
git co master
ls Downloads -al
sudo apt-get -y <string>
cd ..
cd ..
else\
date
sed -i <string> -e <string>
tail -f <directory>
read -p <string>
vim <file>
sudo install <string>
cd
python3
cd <string>
sudo vi <directory>
ls
cp <string>
ls
cp <string>
exit <number>
cd <string>
cat <string>
git clone <URL>
sudo sed -i <directory>
cd ..
env
git clone --depth <number> <URL>
cd <string>
ls
mkdir <string>
ls
clear
read -r <string>
cd <string>
chmod <number> <string>
npm run coverage
tar zxf <file>
env <string>
sed <directory>
git clone <URL>
sudo -i
ls
git add <string>
ls
ls
ls
ls ..
ls
ls
vi <file>
clear
sudo mount <directory>
ls
ls
wget <URL>
clear
cd <directory>
exit <number>
ls
git add <string>
fg
ls
git commit
fg
ls
sudo swapon <directory>
ls
df -lh
sudo rm -r <string>
cd ..
vim <file>
find . -type <string> -iname <string>
brew update
ssh -v
sudo sed -i <directory>
clear
find . -empty -type <string> -print -delete
python3 <file>
ls
ls
mv <string>
cd <string>
chmod +x <string>
mkdir -p <string>
cd <directory>
python3 <file>
cd <directory>
ls -l
ls
cd <string>
sudo deluser <string>
nano <file>
git rebase -i <string>
clear
vim <file>
cd <directory>
sudo xbps-install <string>
ls
sleep <number>
cd <string>
cd <string>
python3 <file>
mv <string>
rm -rf <string>
sudo dnf install -y <string>
sudo make uninstall
vim <file>
ls
script/build.sh
cd <directory>
tr <string>
apt search <string>
ls
ln -sf <directory>
git add .
done
htop
git commit -m <string>
cd
git commit -m <string>
ls
ls
ls
sudo tee -a <directory>
ls
touch <file>
mkdir <string>
npm install <string>
fg
vi <file>
vi <file>
vi <file>
fg
npm run dev
fg
cd <string>
docker-compose up -d --build
sudo apt update
vi <file>
ls
npm run test
unzip <file>
vim <file>
chmod <string>
pwd
exit <number>
vi <file>
sudo shutdown -now
python3 <file>
clear
ls
vim <file>
cd <string>
cd <string>
ls
sudo rm -r <string>
sudo apt update
ls
git diff --no-ext-diff --quiet
go <string>
npm i <string>
ls
git add .
source <file>
cd <string>
cd
nano <string>
cd <string>
rsync <directory>
done
exit
vi <file>
sudo apt install <string>
ls
git branch -d <string>
vim <file>
ls
ls
clear
exit
docker ps
mv <string>
mv <string>
df
git init
git commit -m -n <string>
cd <directory>
exit
cd <directory>
sudo nohup mongod --port <number> --dbpath <directory> --replSet <string> --smallfiles --oplogSize <number>
ls -la
cd
sed -i <string>
sudo pacman -S <string> --needed
head -10
curl <string>
vi <file>
git remove <string>
grep -vw <string>
ls
git revert -m <string>
ls
vim <file>
exit
git stash list
wc -l
ssh -i <string> remote_user@remote_host
ln -s <string>
sudo git log
clear
ls
npm start
cp <string>
cd <string>
ls
rm <string>
git pull
head
ls
sudo lpadmin -p <string> -E -v <directory> -m <file>
cd
read -r -p <string>
exit <number>
sudo npm i
git status
ls
ls
mv --help
curl <URL> -u <string> -H <string>
curl -s -O
git status
chmod <number> <string>
sed -i -e <string>
cd <directory>
python3 <file>
exit
git push -u <string> master
git remote
cd <string>
ls
ls
sed -E -e <directory>
ls
git rebase <directory>
grep <string>
find --info
cp <string>
sudo reboot
apt-get install <string>
clear
git commit -m <string>
open .
vi <file>
xargs du -h
cd <string>
ls
ls -al
npm i <string>
ls
cd
history -a
git add <string>
open <string>
cd <directory>
ls
git commit -m <string>
fg
docker kill <string>
sudo sed -i <directory> <file>
docker logs <string>
cd ..
cd <directory>
cd <string>
ls
git pull
mv <string>
cd <directory>
cd <string>
man <string>
sed -E -e <directory>
npx tailwindcss -i <file> -o <file> --watch
git stash
cd ..
cd <string>
sudo npm start
sudo make install
cd <string>
vim <file>
mkdir
git init
grep <string>
cd <directory>
cd <string>
cp <string>
wget -q -O - <URL>
ls
sudo apt-get install <string>
cat <string>
git remote add origin <URL>
code <string>
ls
scp <string>
rm <string>
mkdir <string>
git status
vim <file>
rm <string>
clear
exit
cd ..
clear
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
less <string>
sudo ln -s <directory>
ls
git add <string>
sed <directory>
cd <string>
touch <file>
bash --version
ls
exit
vi <file>
time <string>
cd <string>
docker rmi <string>
sudo systemctl stop <string>
find . -name <file> -type <string> -print -delete
cd
git stash apply <number>
ls
clear
clear
man -P <string>
ls
git remote add origin <URL>
rm -rf <string>
find . -empty -type <string> -print -delete
cd <string>
sudo apt install gcc -y
clear
ls
rm -rf <string>
bash configure --with-freetype=<directory> --disable-ccache
sudo apt-get -y <string>
ls
git commit
code .
git push
wget -q --show-progress -N <URL> -P <directory>
sudo sed -i <directory> <file>
sync
sudo aptitude purge <string>
git rm --cached <string>
git push
ls
git remote -v
sed <directory>
cp <string>
python3 <file>
clear
perl -pi -e <directory>
git rebase -i <string>
mkdir -p <string>
unset <string>
tr <string>
sudo snap install --classic <string>
ls
exit
clear
rm <string>
git status .
cd ..
sudo apt install <string>
clear
pacman -Scc
exit
nano <file>
nano <file>
vim <file>
git add .
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ps -p <number> -o <string>
ls
cd <directory>
find . -name
docker images
vi <file>
kill <number>
cd <string>
ls
rm redis-stable -Rf
history
ls
source <file>
mkdir -p <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <string> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file>
git config <file> false
git init
wget <URL> -O <directory>
ls
vi <file>
cd
ls
ls -l
ls -la
ssh-keygen -t <string> -b <number>
cd <directory>
git pull
cd <string>
git push
docker rm <string>
git add .
code <string>
bash
sudo tar -xf <file>
vi <file>
git fetch
git clone <URL>
sed -e <directory>
yarn add -D <string>
ls
cd <string>
ls
ls
ls
clear
exit
cd ..
killall <string>
cd <string>
systemctl start kubelet
ls
cd ..
chmod -R <string>
cd <directory>
ls
cd <directory>
pkill <string>
clear
sleep <number>
cd <directory>
vim <file>
git log --skip <number> -n <number> --pretty=<string> <string>
more <file>
ls -la
cd <directory>
git log
sudo umount <directory>
git clone <URL>
git add .
ps -au
cd <directory>
git add <string>
git pull
cd ..
mv <string>
ls
vi <file>
mkdir -p <string>
npm start
cd <string>
git init
ls
clear
cd
ls -la
npm install -f
ls
git remote -v
ping <string>
mv <string>
ls
cd <string>
git init
sudo mkdir <directory>
mkdir -p <string>
sudo systemctl restart nginx
xargs rm -rf
perl -e <string>
git clone <URL>
cd <string>
fg
ls
git commit -m <string>
git status
sudo service nginx restart
ls
exit <number>
reset
mkdir <string>
git add <string>
npm
cd -
xargs -L1 <string>
python3 <file>
ls
ls
npm audit fix
cp <string>
git co HEAD
ls -h
sudo pacman -S <string>
ls -l
head -n1\
cd <string>
du -shc <directory>
sudo apt upate -y
cp -v <string> <directory>
git add <string>
docker start <string>
vim <file>
cd <string>
cd -
mkdir <directory> -p
cd <string>
source <string>
git add .
git add <string>
cat <string>
cd <string>
ls -alrt
ls
code .
git push origin master
ls
vim <file>
fg
ls
cd <directory>
git clone <URL>
vim <file>
vi
exit <number>
ls
cd <string>
npm install <string>
kubectl get <string>
clear
cp <string>
sudo docker kill corrade
cd ..
ls
docker-compose up -d --build
ps # prints a line of information about the current running login shell and any processes running under it
ls
vim <file>
sudo npm install -g <string>
ls
curl -v -H <string>
sudo bash -
git push
docker-compose logs --follow <string>
read -r <string>
npm install strapi@latest -g
sed <directory>
sudo ufw allow <string>
ls
cd <string>
pacman -Syu
vim
awk <string>
python3 <file>
less <string>
mv <string>
find . -type <string> -iname <string>
ls
mkdir -p <string>
cp <string>
cd <string>
less <string>
ls _build
ls
exit <number>
dpkg-reconfigure keyboard-configuration
ls
sudo apt autoremove
vim <file>
git status
then\
ls
ls
cat <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
cd ..
vim <file>
sudo code .
npm start --stacktrace --active-arch-only -- --resetCache
df -ah
wget <URL>
grep --color <string>
ls
git add .
tar -xvf <file>
top
ls
git commit -m <string>
sudo service nginx reload
ls
cd <string>
cd <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
then
rm -rf <string>
ls
npm create vite@latest <directory> -- --template <string>
npm run dev
ls -al
find . -type <string> -name <string>
apt-get install -y <string>
docker-compose -f <string>
rm -r <string>
find <directory> -type <string> -name <string>
exit
sudo du -h --max-depth=<number> <string>
find <directory> -name <string> -delete <string>
exit <number>
tmux kill-server
ls
ls
git remote add origin <URL>
docker
cd ..
git add .
cd <string>
tmux
curl -G <directory>
chmod +x <string>
vim <file>
npm i <string>
ls -al
man <string>
exit
exit
cat <string>
sed -i <directory>
sudo mv <string>
rm <string>
sed -n <string>
exit
nano <file>
mkdir <string>
cd ..
git pull --depth=<number> <string>
cd <string>
ruby
clear
sudo tee <directory>
sudo mkarchiso -v -w <string> -o <string> slim-iso
grep <string>
sudo docker kill corrade
git status
git merge <string>
grep <string>
cd ..
git co HEAD .
chmod <string>
ls
less
cp -pr <string>
cd ..
cd <string>
grep -v <string>
ls
git push
docker-compose up
exit <number>
cd <string>
sudo curl <URL>
git pull origin master
sudo dpkg -i <file>
nano <file>
vi <file>
git pull origin development
vi <file>
exit <number>
curl --location <directory>
ls
ls
cd <directory>
paste -d <string>
sudo ls -a <directory>
ls
git add .
ls
systemctl enable <string>
login
sh -s --
ls
byobu-tmux
ls
kill -9 <number>
rm -rf <string>
sudo mv <string>
grep -i <string> >files
docker rm -f -- <string>
cd <directory>
git commit -m <string>
sed -i <string>
ls
cd <directory>
ls
git add -A
git clone <URL>
git config --system --unset <file>
sudo apt update
git remote add origin <URL>
clear
git status
vim <file>
vi <file>
grep -v <string>
ls
exit
less
wget -r <URL>
rm <string>
sudo apt upgrade
sudo systemctl stop <string>
fg
vim <file>
cd <string>
rm -rf <string>
clear
ls
vim <file>
git checkout <string>
npm i <string>
sed -rn <directory> -O <file>
docker-compose up -d --build
cd ..
cp -r <directory>
htop
vi -t <string>
ls -l
sudo apt update
cd ..
git init
sudo sed -i <directory>
ls
ls
wget -q <URL> -O <file>
ls
vim <file>
cd <string>
git push
chmod <string>
git commit -m <string>
ls
vi <file>
git filter-branch --index-filter <string> --prune-empty --tag-name-filter <string> -- --all
tail -f <directory>
wget -O <file>
ls
git branch
cd
cd ..
ls
git push
sudo nano <directory>
sudo apt install <string>
sudo sed -i <directory>
git commit -m <string>
ls
sudo pacman -Syyuu
git clone <URL>
cd <directory>
git commit -m <string>
cut -d <string> -f <string>
sudo apt install <string>
cd <directory>
cd <string>
docker-compose logs
cat <string>
clear
ls -a
ls
git
git rm <string>
top
awk <string>
docker-compose
git add -p
cd <string>
sudo apt install <string>
rm -rf <string>
df -lh
vim <file>
sed -r <directory> > <file>
ls
sudo apt-get install -y <string>
git checkout master
cd <string>
git remote rm <string>
clear
python3 -m <string> install <string>
grep <string>
git add .
sudo apt install ufw network-manager -y
mkdir -p <string>
cd <directory>
npm i <string>
git commit -m <string>
ps aux
nano <file>
git status
sudo python <file>
clear
find . -type <string> \( -path <string> -path <string> -o -path <string> -o -path <string> -o -path <string> -o -path <string> -o -path <string>
ls -rs
history
cd <directory>
cd <string>
ls
ls
clear
systemctl status <string>
read -p <string>
ls
sudo useradd -m -d <string>
sudo systemctl reload <string>
git stash
mkdir <string>
vi <file>
docker compose <string>
sudo apt-get install <string>
sudo apt install <string>
sudo pacman -Rs <string> --noconfirm
git add .
python3 <file>
git remote add origin <URL>
vi <file>
cd <string>
cd <string>
docker-compose up
git commit -m <string>
clear
fg
wget -O <file>
sudo start uwsgi
grep <string>
ls
more <file>
ls -ltr
cd <string>
exit
systemctl status <string>
tail -f <directory>
read -r -p <string>
git add .
git push
sudo nano <directory>
ls
vim <file>
cd <string>
ps -elf
sudo wgnord <string>
clear
cd <string>
npm install
git push
cd <string>
cd <string>
ssh <string>
rm <string>
git clone --depth=<number> <URL> <directory>
cp -v <string> <directory>
ls
cd ..
ls
sudo apt-get update
clear
docker rmi -F <string>
npm start
vim
cd <string>
cd ..
open <string>
npm -g <string> <string>
which <string>
mkdir <string>
sudo apt-get update
dpkg-query
make clean
clear
cd <string>
cd
ls
awk <string>
ls
cd <string>
vim <file>
cd <string>
exit
read -rp <string> <string>
mkdir <string>
clear
git commit -m <string>
git push origin master
ls
ls
clear
ls
ls
cd
scp <directory> -i <file>
git init
cat <string>
ls
git status
wget <URL>
ls
source <directory>
curl -o- <URL>
git clone <URL>
cd <string>
ls
ls
vim <file>
ls
ls -la
sudo yum --enablerepo=<string> <string> <string>
cd <directory>
sed <directory>
cd
git add <string>
python3 <file>
find . -name <file>
git push origin master
git push
cd <string>
nano <file>
mv <string>
<directory> <string>
ls
git add <string>
wget -c <URL> -O <file>
git diff
grep <string>
touch <file>
sh
ls
cut -f2-
exit
code <string>
sudo cp -rf <string>
cd <directory>
ls -la
rmdir <string>
cd <string>
cd <directory>
nano <file>
rm -rf <string>
exit <number>
cd <directory>
ps -ef
sudo apt-get update
mv <string>
sudo apt-get install <string>
cd <string>
cd <string>
ls
clear
ls
touch <string>
grep -v <string>
ls -l
rm -f <string>
find -name <string>
git status
vi <file>
ls
vim <file>
ssh -i <string> remote_user@remote_host
git push origin <string>
cat <string>
<file> program
wget -q -O <file>
rm -f <string>
cat <string>
mv <string>
clear
curl -s -L <URL>
find <string> -name <file>
ls
cd <string>
git gc --prune=<string>
cd <string>
sudo apt update
pkill <string>
ssh-copy-id <string>
vim <file>
ls
git push -u <string> main
sudo apt-get update
ls
sudo dpkg -i <file>
telnet
less <string>
git add -A
sudo ifconfig en0 ether <string>
sudo add-apt-repository <directory>
nano <file>
find <directory> -type <string> -execdir <string>
ls -la
git clone <URL>
sudo apt-get install <string>
git add <string>
ls -la <directory>
ssh dirlic@10.18.0.39 -p <number>
cd <directory>
docker-compose up -d --build
docker images
ls
ls
mv -f <string>
git push
read -r <string>
exit
git add .
ls
cd <string>
python3 <file> --model-path <file> --conf <string> --img-size <number>
pwd
paste <(cut -d" <string>
ls
ls
nano <file>
cp <string>
python3 <file>
mkdir <string>
sudo apt install <string>
cd ..
nano
man <string>
vi <file>
ssh
exit
ls
git branch --contains <string>
git pull
git status
apt-get update
python3 <file>
vi <file>
sudo pacman -Ss <string>
git pull
python3 <file>
cd ..
sudo poweroff
cp -v <string> <directory>
ls
sudo apt --fix-broken <string>
python3 <file> --model-path <file> --conf <string> --img-size <number>
scp <string>
vi <file>
ls
cat <string>
fg
grep -i <string> >files
scp <string>
git pull
ssh-keygen -f <directory> -R <string>
ls
vim -O <file>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
sudo git init
cd <directory>
vi <file>
ls
bash
exit <number>
xargs rm <string>
awk <string>
git clean --force <string>
sudo curl -Lo <directory>
cd <string>
cp <string>
fg
git status
sed -i <string> -e <string>
sudo ntpdate <string>
ls
vim <file>
exit <number>
chmod +x <string>
cd <string>
ls -alh
cd <string>
git clone <URL>
nano <file>
rm <string>
history
chmod +x <string>
sudo ip route add <string>
ls
uniq
ls
exit
history
vim <file>
ls
vim <file>
cat <string>
nano <string>
git remote remove origin
git push origin master
head -n1
git log --date=<string> --decorate --graph <string>
ps aux
ls
ls
jq <string>
git submodule update -f --init
ls -R
ls
cat <string>
sed -E -e <directory>
cd ..
ls -a
ls
cd <string>
diff <file> <file>
chmod +x <string>
grep -i <string>
cd <string>
cd <string>
more <file>
tar xvzf <file>
git push
git stage <string>
rm -rf <string>
su root
clear
git rm --cached <string>
vim <file>
sudo apt-get update
ls
cd <string>
ls
rm -rf <string>
clear
cd <directory>
vim <file>
sudo debconf-set-selections <string>
git status
docker stop bigballers
npm audit fix
git commit -am <string>
cd ..
vim <file>
ls
vim <file>
mkdir <string>
ls
ls -lhrt
cd ..
ls -lah <string>
ls <file> -l
clear
nano <file>
ls --version
sudo service <string>
sudo rm -r <string>
git add .
git pull
cd <string>
ls
sudo apt-get remove <string>
ls -l
vim <file>
sudo modprobe <string>
vim <file>
exit
vi <file>
git branch 2> <directory>
mv <string>
clear
sleep <string>
sudo pacman -S <string>
cd <string>
cd <string>
sudo apt-get update
sudo vim <directory>
git add .
chsh -s <directory>
cd <directory>
do\
sudo rm -rf <string>
git commit -m <string>
git pull
exit <number>
git clone <URL>
cd <string>
nano <string>
vim <file>
ls -ltr
vim <file>
find <directory> -xdev -type <string> -size <string>
cd <string>
rm -rf <string>
sudo ip link set <string>
cd <string>
rm <string>
clear
cd <directory>
ls
grep <string>
cd <string>
clear
ls
git grep -l <string>
pico <file>
vim <file>
rm -f <string>
cd <directory>
ls
python <file> runserver 0.0.0.0:2016
rm -r <string>
ls
ls
git merge develop
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
vi <file>
git commit -a -m <string>
curl -s <string>
clear
ls
ls
ls
mkdir -p <string>
git remote add origin <URL>
done
q=<string> -H <string> -H <directory> -H <string>
ls
cd ..
apt install figlet -y
ls
ls
ls
git remote add origin <URL>
docker exec -it <string>
clear
cd <directory>
git config --global <file> <string>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
curl -fsSL <URL>
ls
sudo chmod <number> <string>
cd <directory>
git add -A
byobu-tmux
ls
jq <string>
sudo update-alternatives --config <string>
sudo cat <directory>
more <file>
git pull -u -a
ls
cd <string>
ls
git push
ls
docker images
cd <string>
git init
git push
ls
awk <string>
cd <string>
cd ..
cd <string>
rm <string>
vim <file>
git status
sudo npm start
cd <string>
touch <string>
bash
cd ..
cd <string>
rmdir <string>
clear
cd <string>
<file> program
npm --version
sudo -u <string> bash -c <string>
which <string>
sudo -i
npm install -g <string>
ls
cd <string>
sed -n <string>
vim <file>
systemctl --user <string>
mkdir -p <string>
find . -type <string>
sudo sed -i <directory>
clear
sleep <number>
ls
sudo udevadm trigger
sed -n <string>
docker exec -it --user <string>
cd <string>
ssh-keygen -t <string>
vim <file>
vi <file>
ls
cd ..
vim <file>
git add.
vim <file>
done
ls
cd <string>
read -r -p <string>
ls
sed -i <directory>
exit
git init
ssh-keygen -b <number> -N <string> -f <directory>
git status
ssh-add <directory>
clear
ls
exit <number>
ls
cat <string>
npm run build
ls
ls
ls
docker stop <string>
cd <string>
ls -R <string>
xargs perl -pi -e <directory>
sudo nvim <directory>
sudo sysctl <string>
ls
ls
apt-get install <string>
cd ..
git commit -m <string>
ls
sed -e <directory> -e <directory>
less <string>
sh -c <string>
cd <directory>
nano <file>
vim <file>
git commit -m <string>
sudo chmod <number> -R <string>
clear
vim <file>
git tag <string>
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git co HEAD .
ls
clear
clear
clear
bazel <string>
pwd
df -h
clear
exit
ls
vi <file>
vim <file>
ls
curl <string>
curl <string>
grep
rm ir --help
fg
clear
cd <string>
ls
rm -rf <string>
su - <string>
kubectl get pods -n <string>
ls
ls
sudo apt -y <string>
ls _build
python3 <file>
sudo git fetch <string>
ls
ls
hostname
git commit -m <string>
ps -p <number> -o <string>
sudo sed -i <directory> <file>
sudo shutdown -now
cd ..
rm <string>
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
git diff
rm <string>
ls
sudo python <file>
ls
man <string>
ls
ls -a
head -n6 <file>
git add .
vi <file>
cd ..
vim <file>
fg
<directory> <string>
cd ..
cd
tee -a <string>
printf <string>
clear
mkdir <string>
fg
ls
sudo rm -rf <string>
sudo docker kill corrade
g++ -std=<string> <file> -o <string>
rm -f <string>
git checkout -b <string>
fg
git push
ls
systemctl status <string>
sudo mv <string>
python3 <file>
curl -k <URL>
yarn <string>
cd ..
npm install
else\
cat <string>
apt-get install <string>
cp <string>
help
mkdir <string>
ls
clear
chmod <number> <string>
git commit -m <string>
git commit -m <string>
dpkg -l
ls
git add <string>
ls
git init\
ls
sudo apt update
git pull
git log
git log
git add <string>
cd <string>
cd <directory>
pwd
curl <string>
ls
ls
ls
npm i
ps -t
ls
sudo apt-get -y <string>
ls
git fetch origin\
date <string>
git add <string>
apt-get install <string>
cd <string>
systemctl --user <string>
clear
ls
vim
find . -empty -type <string> -print -delete
sudo sshfs -o <string>
cd <string>
ls
git restore <file>
sudo ln -s <directory>
tail -f <string>
vi <file>
ls
ls
service apache2 restart
grep -i <string> >files
cd <string>
git commit -am <string>
sudo apt-get install <string>
ls
ls
git push
git fetch
sed
ping <string>
code .
cd <string>
git status
cd <string>
ls
cd <string>
cd <directory>
cd <string>
vim <file>
cd
exit <number>
cd <directory>
npm run devstart
clear
sudo apt show <string>
clear
git status
ls
apt-get -f -y <string> <string>
ls
touch <string>
tail +x # want to display all the lines from x to y. This includes the xth and yth lines.
nano <string>
ls
apt-get autoremove
cut -f <number> -d <string>
vim <file>
python3 <file>
mkdir -p <string>
ls
clear
vi <file>
git add .
cd
git rm --cached <string>
killall <string>
mv <string>
pwd
which <string>
xargs sed -i <string> -e <directory>
cd <string>
ls
exit <number>
ls
ls
git commit -m <string>
python3 <file>
chmod +x <string>
mv <string>
clear
docker exec -it <string> bash
git commit -m <string>
tr <string>
grep -i <string> >files
pwd
mv <string>
egrep <string>
apt-get install <string>
ls
sudo vi <directory>
ls
ls projects
cd <string>
ls
dpkg-reconfigure locales
ls
ls
cd ..
cd ..
fg
exit
ls
ls
cd <string>
git push -u <string> master
git stash pop
jq <string>
ls
ls -ald <string>
python3
ftp <string>
docker-compose up -d --build
rmdir <string>
unset color_prompt force_color_prompt
codedown javascript > <file>
rm -r <string>
git diff
clear
npm run dev
python3 <file>
git status
ls
wget <URL>
sudo apt get install <string>
git branch
cat <string>
yarn install
ls
sed -i -r <directory>
cd <directory>
mv <string>
rm -rf <string>
rm <directory> -fr
ls -a
sed -i -e <string>
ls
touch <string>
docker-compose up -d --build
mkdir <string>
git add .
man <string>
vi <file>
ls
cd <string>
cd <string>
du -sh
mv <string>
kill -9 <number>
ls -l
git add <string>
ls
sudo airport --channel=<string>
ls
fg
ls
top
npm install <string>
sudo git pull origin master
find <directory> -ctime <string>
cat <string>
cut -f <number> -d <string>
cd ..
git status
vim <file>
xargs -l1 <string>
pwd
cd <directory>
ls
sleep <string>
git add <string>
git push -u <string> bryan-guner
fg
cd <string>
docker exec -it <string> bash
ls
cd <string>
cd <directory>
cd <string>
ls
npm run coverage
ls
ls -l
ls -alf
cd
find . -empty -type <string> -print -delete
clear
cp <string>
fg
ls
grep -a -i -E -o --no-filename <string>
clear
touch
sudo cp <string>
cd <string>
ls
ps ux
git add .
su
git commit -m <string>
cd ..
git push origin main
sudo start uwsgi
git commit
ls
sudo light -A <number>
sudo -i
cp -pr <string>
touch <file>
kubectl <string>
python3 --version
exit <number>
vim <file>
python3 <file>
vim <file>
else\
vim <file>
cd <directory>
source <file>
cd -
git fetch upstream
clear
git add <string>
ls
ls
chmod +x <string>
sudo killall -9 <string>
mkdir <string>
vim <file>
sudo git add -a
sudo mv <string>
ls
gsettings set <file> <string>
cd
python3 <file>
clear
ls
git add .
git status
ls
then\
sudo chmod a+wr <directory> -R
fg
cd <string>
ls -ltr
cd <string>
vim <file>
ls -1G
time <string>
apt-key
vi <file>
git push -u <string> main
setg RHOSTS.*
ls
grep <string>
vi <file>
cd ..
ls
source <string>
read -p <string>
ls
exit
exit
git pull -f
cat <string>
curl -o- <URL>
git commit -a
git add .
vi <file>
sudo apt upgrade
ls
ls
git remote add origin <URL>
apt-get update
ls
git remove
fg
git commit -m <string>
ln -sf <directory>
git checkout -b <string>
npm run build
python3 <file> --epochs <number>
cd <string>
sudo apt-get install <string>
ls
set <string>
ls
git clone <URL>
git push
vi <file>
exit
cd <string>
ls
python3 -m <string> install --user
vi <file>
cd ..
sudo apt-key adv --keyserver <string> --recv-key <string>
sudo pcmanfm
ps
ls
apt-get autoremove --purge
git diff <string>
git add .
git push -u <string> master
else\
cd <string>
bash
cd ..
find <directory> -type <string> -execdir <string>
byobu-tmux
sudo sed -i <directory> <file>
git commit -m <string>
git reset --soft <string>
git add .
ln -s <string>
mkdir <string>
find ~ -type <string> -name <string>
ls
sudo python <file>
sudo chmod a+w <string>
cp -v <string> <directory>
finger <user> # displays information about user
touch <string>
apt-get install <string>
npm install
vim <file>
sudo apt-get remove <string>
cd <string>
ls -lA <directory>
sudo usermod -aG <string>
cd ..
node --version
vim <file>
ls -r <string>
cat <string>
ls
rm <string>
rm -rf <string>
date
cd <string>
grep -r <string>
git --version
rm <string>
ls
cd
nano <file>
cd <string>
ls -R <string>
sudo -i
cd ..
ls
ssh <string>
clear
sudo npm uninstall -g <string>
curl -O <URL>
cd <string>
git log --oneline
pwd
grep -iE <string>
cd <directory>
cut -d <string> -f <string>
npm run test
git push -u <string> main
grep -E <string>
cd ..
git init
git add .
git push -u <string> master -f
grep --ignore-case <string>
ls
cd
sudo pip install -r <file>
cd <string>
mkdir <string>
rm -r <string>
docker run -it --name <string>
grep -r <string>
vim <file>
vim <file>
ls
sleep <number>
cd - <string> <string>
git commit -m <string>
eval <string>
more <file>
chmod <number> <string>
git stash
git add <string>
clear
grep <string>
sudo pip install <string>
chmod +x <string>
grep <string>
fg
cd <string>
sudo adduser --system --gid <string>
clear
rm -r <string>
npm install -D <string> postcss autoprefixer
service <string>
cd ..
git init --bare
ls
pacman -S <string>
git push
grep --color=<string> -v <string>
sudo apt-get update
ls
vi <file>
vi <file>
command <string>
exit
cd ..
cd <directory>
ls -alht <string>
mv <string>
vim <file>
git status
cd <directory>
git add .
python3 <file>
git status
clear
find <directory> -type <string> -exec <string> <number> <string>
cd <string>
ls -l
git status
git clone <URL>
cat <string>
nano <file>
set -o <string>
sleep <string>
cd <directory>
nohup python3 <file> <string>
sudo npm i prettier -g
ls
history
sudo apt install <string>
cd <directory>
ls
ls
sudo vi <directory>
code .
ls
fg
node <file>
ls
git init
git remote -v
source <directory>
mkdir <string>
fg
clear
touch <string>
mvn exec:java -Dexec.mainClass=<file>
git init
sudo <directory> -f
ls
cd ..
sudo reboot
vi <file>
read <string>
nano <file>
cd <string>
git clone <URL>
sudo apt-get dist-upgrade
cd <string>
cd <directory>
exit
sudo tee -a <directory>
vim <file>
git commit
cd <string>
ls
sudo apt-key add -
ls
sudo apt install <string>
exit
vi <file>
telnet <string>
git checkout -
head -n1\
cd <directory>
git pull
find . -type <string> -empty
git init\
ls
rm -r -f
git commit
ls
kill <number>
ls
sudo sed -i <directory>
cd ..
ls
read -sn <number> -p <string>
htop
rm <string>
sudo systemctl status <string>
ls -l
ls
vi <file>
time <string>
npm install -g <string>
sudo start uwsgi
git grep <string>
ls
cat <string>
sudo find $dir -type <string>
ls
source <directory>
ls
ls
git status
cd <string>
alias <string>
sudo mv <file>
touch <string>
sudo rm -rf <directory> <directory>
sudo ldconfig
wget <URL>
cd ..
git status
exit <number>
git add .
ls -ltr
git pull
cd ..
ls
npm install
ls
sudo python <file>
curl -fLso <file>
git status
ls
less <string>
ls
set <string>
cd <string>
cp <string>
cat <string>
ls -la
wget <URL>
cd <directory>
sudo mount -t <string> -o <string>
cp -v <string> <directory>
read -p <string>
git add <string>
git config --global <file> <string>
cd <string>
git push -u <string> master
git push origin PTS-372_Remove_components_from_daily_tracker --force
find . -maxdepth <number> -regextype <string> -regex <string> -type <string>
vim <file>
ls
sudo apt-get install <string>
sudo apt-get install <string>
ssh -X <string>
ls
git status
git status
pwd
cd <string>
ls
sudo ln -s <directory>
git branch
ls
ssh
clear
tail -f <directory>
ls
df
git add <string>
git push -u <string> master
clear
git clone <URL>
ls
git init
su - <string>
ls
fg
su
ls
git replace --graft <string>
apt-get install <string>
sudo groupadd <string>
cd <string>
sudo chmod +x <string>
git status
exit <number>
clear
sed -i <directory>
clear
cd <directory>
git add <string>
cd ..
python3 <file>
git remote add origin <URL>
git push origin master
git fetch origin\
clear
wget -q -O <file>
grep -F --color=<string> <string>
git clone <URL>
export <string>
exit
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git remote add origin <URL>
cd <string>
ls
sudo chmod <number> <string>
rm <string>
apt-get update
ls
rsync -rt <string> -port=<number> <directory>
ls
ruby -e <string>
cp <string>
git init
ls
vim <file>
docker-compose up -d --build
ls
fg
read -s -p <string>
ssh <string>
rm <string>
cp -r <directory>
cd ..
ls
rm <string>
git commit -a
git config
exit
tmux kill-server
find . -type <string> -newermt <string> -exec <string> -cb <string>
ls
vim <file>
sudo sed -i <directory>
apt install <string>
unset <string>
sudo nvim <directory>
ls
cd <string>
ls
ls
vim <file>
ls -all
git commit -m <string>
mkdir <string>
cd <string>
alias <string>
clear
git pull
cd ..
ls
ls
wget <URL>
ls -r
chown <string>
ls
sudo sed -i <directory> <file>
cd <directory>
exit
open <string>
cd ..
curl -v -X <string> <directory> -H <string> -H <directory> -d <string>
pkill <string>
find . -type <string> -exec <string> <directory> {} +
ls
df -h <string>
cd <string>
mv <string>
who
chmod <number> <string>
sudo nano <string>
ls
cd <directory>
cd <directory>
vi <file>
ls
git stash apply <string>
cd
exit
docker exec -it <string> bash
sed -i <directory>
ls -la
ls -la
cd <string>
cat <string>
find . -name <string> -not -path <directory>
vim
git stash
sudo stop uwsgi
clear
cd <directory>
source <string>
git clone <URL>
exit
npm run develop
clear
clear
npm init -y
git add <string>
sed -i <string>
cd
git add .
ls
clear
vim <file>
npm start
cd
git status --porcelain
git push
wget -nd -m -nv <URL>
sudo apt install vim -y -qq
docker tag <string>
git add .
fg
sudo mkdir <directory>
sudo rm -rf <string>
printf <string>
sudo systemctl enable <string>
git push
docker ps
git add <string>
sudo apt-get update -y
find . -type <string> -a <string> -name <file> -o -name <file>
date
sudo ls <directory>
less <string>
cd -
chmod +x <string>
docker swarm init --advertise-addr <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ls
man <string>
ls -alrt
find . -name <file> -type <string> -print -delete
ls
grep -v <string>
vi <file>
npm run test
rm -rf <string>
dpkg -i <file>
vim <file>
git rm
exit
git push
ls
sudo wgnord <string>
clear
pwd
pwd
ls
cd <directory>
ls
git commit
clear
ls
cd <string>
wc -l
git commit -m <string>
git pull
git branch --delete <string>
exit
date
cd <string>
apt-get install -y <string>
git remote add origin <URL>
sudo apt-get install <string>
eval <string>
clear
rm -rf <string>
ls
exit
fg
git add <string>
clear
git commit -m <string>
ls
git add .
cut -d <string> -f <string>
git add <string>
cd ..
tail -n <string>
git init
ls
clear
sudo apt install <string>
sleep <number>
nano <file>
cd <directory>
git pull
cd
xrandr --output <string> --auto
ls
sudo -i
code .
mv <string>
exit
sudo visudo
ls
ls
ps
init
cat <string>
then\
login
sudo apk add <string>
ls
git pull
docker-compose up -d --build
docker cp <string>
cd
git push
clear
git remote add upstream <string>
view <string>
done
ls
man <string>
git push origin2
sudo systemctl restart <string>
rg <string>
head -n1\
more <file>
ls
vim <file>
git commit -m <string>
ls
docker-compose up -d --build
npm install -g <string>
sudo sed -i <directory> <file>
git push
cd <directory>
ping <file>
cd ..
cp -r <directory>
killall <processname> # kill all processes with the name
exit <number>
git commit -m <string>
git commit -m <string>
then
sudo apt-get install -y <string>
npm run test
git add .
cd <string>
apt-get remove packagename --purge <string>
cd <string>
ls
g++ -std=<string> <file> -o <string>
git commit -m <string>
sudo apt-get upgrade
git branch
rm <string>
cd
exit <number>
cd ..
cp -r <directory>
grep -R <string>
python3
ls
git commit
sudo apt-get update
cp <string>
cd ..
mkdir --parents <string>
python3 <file>
vim <file>
cd <string>
cd <string>
ls -l
ls -help
sudo sed -i <directory> <file>
ping <string>
done
git rebase <directory>
cd <string>
git rev-parse --short <string> <string>
clear
mv <string>
kubectl <string>
cd <string>
sudo apt-get install <string>
git add .
sudo sed -i <directory> <file>
cp -r <directory>
sudo apt-get update
docker stop <string>
mvn test
ls
cat <string>
cd <directory>
cd ..
git commit -am <string>
exit
chmod +x <string>
clear
cat <string>
grep -i <string> >files
source <string>
mv <string>
cd..
ansible-playbook <file> -t <string>
cd ..
cd <string>
tr <string>
cd <directory>
rm -f <string>
ls
git fetch origin
ls
git pull
vi <file>
python3 <file> <directory> --network2=<string>
ls
cat <string>
git clone <URL>
ls -l
exit
cd <string>
sudo ls <directory> --color
codedown javascript
git remote -v
su
sed -i <string>
git diff --cached
git clone <URL>
ls -la <directory>
find . -name <file>
cd <string>
ls
cd ..
git add .
clear
git commit
find -Es <string> -type <string> -regex <file>
rm -r <string>
ls
ls
ps -ef
sleep <string>
fg
cd ..
done
cd <string>
git push
cd ..
git checkout --keep-ours <file>
ls
git restore <file>
ls
ls
git pull
git commit -m <string>
exit
cat <string>
vi <file>
ls
cd <directory>
sudo nmcli <string>
sudo pip3 <string>
cd <string>
bazel build -c <string> --config=<string> --genrule_strategy=<string> --spawn_strategy=<string> <directory>
ls
find <directory> -mmin -60
npm run start
ls
vim
vim <file>
exit <number>
git checkout master
fg
git commit -am <string>
find -L <string> -type <string>
grep <string>
reboot
ps aux
npm test
then\
cat <string>
sudo chmod +x <string>
git commit -m <string>
git reset --hard
rm <string>
ls
sudo apt upgrade -y
ls
sudo apt install -y <string>
ls
cd ..
sudo ntpdate -d <string>
cd <string>
vi <file>
mv <string>
mv <string>
mkdir <string>
vi <file>
sudo apt install <string>
ls
git init
git remote add origin <URL>
man <string>
vim <file>
ls
sudo ln -s <directory>
done\
cd ..
rm -rf <string>
make clean
vim
fg
git remote add origin <URL>
find . -empty -type <string> -print -delete
mkdir <string>
ls -a
git init
systemctl stop docker
cd <string>
cd <string>
exit
wget
vim <file>
ls
cd ..
mkdir <string>
ls
apt-get install -y <string>
npm init -y
git status
ls
curl <string>
exit <number>
less <string>
ls
cat <string>
python3 <file>
ls
curl <string>
cd <directory>
git pull
rm -rf <string>
git fetch origin <string>
sudo pacman -S --noconfirm <string>
mkdir <string>
ls
vim <file>
bash <file>
clear
sudo xbps-install -Su
xargs -0 -I <string>
exit <number>
done
sudo sed -i <directory> <file>
source <directory>
exit
exit
cd <directory>
sudo apt update
cd <string>
ls
touch <string>
ls
ls
ls
tmux
git init
ls
git status
cd <string>
clear
sudo cp <file> <file>
git clone <URL>
sudo apt update
git commit -m <string>
rm -rf <string>
cd <directory>
done
npx shadcn-ui@latest add <string>
cd <string>
ls
ls
ls -all <directory>
sudo apt purge -y <string>
exit <number>
ls
cd -
git status
wget <URL>
git pull origin master
exit
wget <URL>
exit
journalctl
ls
clear
clear
cd <string>
git push --force
ls
cd <string>
touch <string>
g++ -std=<string> <file> -o <string>
sudo apt-key adv --keyserver <string> --recv <string>
vi <file>
git remote add origin <URL>
cd <string>
ls
clear
clear
git commit -am <string>
cd <string>
ls
cd <string>
git add <string>
cd <string>
wget -O <file>
cd <string>
git pull
ls
mkdir <string>
ls
git push -u <string> main
vi <file>
ls
npm start
open <string>
vim <file>
mkdir <string>
git add .
vi <file>
vim <file>
tail -100 <file>
git merge <string>
find . -type <string> -mtime <string>
chown -R <string>
cd
git status
sudo gem install <string>
su field
ls
ls
htop
sudo reboot
history
python3 <file>
git commit
read -s -n <number>
ls
vi <file>
ls
git add <string>
vim <file>
grep <string>
export <string>
git add <string>
sudo apt upgrade
docker ps -a
git filter-branch --force --index-filter <string>
mv <string>
ls
cd ..
docker run -d --name <string>
exit
sudo apt-get update
cd <string>
bash <file>
ls -al
ls
cd ..
source <string>
sudo ps
sudo touch <file>
chsh <string>
git commit -m <string>
git checkout master
sudo apt -y <string>
cd <string>
cd <string>
cd <string>
clear
cd ..
ps aux
exit <number>
git push -u <string> master
git commit -m <string>
git add <string>
rm -r <string>
clear
ls
vi <file>
nano <file>
ls
git add -A
cd ..
ls -rl <directory>
sudo apt-get update
git log
git status
vi <file>
ls
rm <string>
git init
cd <directory>
cat <string>
ls
cd
which <string>
<directory> <string>
top
ls
kill <number>
cd <string>
setg RHOSTS.*
sudo docker ps -a
cd <string>
ls
tr <string> <string>
vim <file>
ls
clear
ls
ls
ls
cd <string>
cd <directory>
sudo nvim <directory>
ls
ping <file>
ls
cd <string>
pwd
cd <string>
cd <string>
grep -a -i -E --no-filename <string>
cd <string>
exit
ls
cd
cd <string>
ls
cd <string>
cd ..
git checkout
clear
clear
sudo dpkg -i <file>
rm -rf <string>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
ls
clear
sudo stop uwsgi
more <file>
cd <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
mv <string>
git config --global <file> <string>
wget -r -A.html <URL>
awk -F\" <string>
git diff
rm <string>
mkdir <string>
fg
ls
docker-compose up -d --build
sudo visudo
sudo rm -rf <directory> <directory>
ls
cd <string>
done
rm -rf <string>
top
git push origin master
cp -r <directory>
sudo unzip <file> -d <directory>
wget -q -O <file>
sleep <string>
clear
done\
sleep <number>
su root
ls
find .
history
python3 <file>
wc -l <string>
ls
mkdir <string>
cd <string>
vim <file>
git config --list
source <string>
find . -empty -type <string> -print -delete
file <string>
cd <string>
exit
git push origin master
set
man <string>
cd <string>
ls
cd <string>
sudo vim <directory>
cd ..
cd <string>
git commit -m <string>
sort -r <string>
ls
grep -v <string>
git commit -m <string>
git checkout <string>
vim <file>
git clone <URL>
cd <string>
mv <string>
python3 <file>
docker volume ls
git status
ls
w
sudo sed -i <directory> <file>
ls
ssh-keygen -t <string> -b <number> -C <file>
nano <string>
du
head -y <file>
find . -depth -mtime <string> -execdir <string> -rf <string>
git commit -m <string>
sudo python <file>
cd <string>
cd
cat <string>
ls
rm <string>
ls
git branch
cd <string>
touch <file>
ls
exit
git add --all
git push -u
git rebase --abort
history
ls
ls -la
cd ..
cd
ls
cd <string>
sleep <number>
rm -f <string>
cd <string>
sudo pacman -S <string> --noconfirm
cd <string>
git status
git status
python3 <file>
ls
vim <file>
cd ..
mkdir <string>
sudo nohup mongod --port <number> --dbpath <directory> --replSet <string> --smallfiles --oplogSize <number>
git branch --set-upstream-to=<directory> <string>
ls --version
git status
cd <string>
rm <string>
git clone <URL>
vim <file>
git push origin
cd ..
git push origin master
mkdir <string>
ls
vim
python3 <file>
ln -s <string>
ls
git push origin main
git adog
git fetch
ls
rm -r <string>
ls
docker build --help
cd <string>
git remote add origin <URL>
cd ..
cd ..
ls
git remote add origin <URL>
exit
ls
ls
ps ax
git add .
ls --help
find . -size <string> -a -print -a -exec <string> -f <string> \
docker-compose kill <string>
cd <string>
git add .
kubectl --namespace <string>
sort -uf <string>
mkdir <string>
ls
clear
then\
sudo vim <file>
git push
git commit -v -a -m <string>
exit
ls
cd <string>
clear
ls -la
pwd
cd ..
dpkg -l
ls
cp <string>
make clean
apt-get install <string>
passwd
sudo service nginx reload
git clone <URL>
exit <number>
sed -i <directory>
cd <string>
rm -f <string>
systemctl --user <string> <file>
ls
git clone <URL>
cd <string>
sudo apt-get install --only-upgrade <string>
cd <string>
history
git commit -m <string>
git add <string>
cd <string>
sudo apt-get remove --purge <string>
find . -name <string> -type <string>
set --help
git commit -m <string>
cd <string>
git add <string>
git stash
ls
docker image ls
sudo apt-get install <string>
exit
read -r -p <string>
rm <string>
cd <string>
ls
git checkout <string>
cd <string>
git remote add origin <URL>
cd <directory>
sudo apt-get update\
cat <string>
ps ax -f
sudo vi <file>
sudo apt-get upgrade -y --force-yes
mv <string>
vi <file>
ls
git commit -m <string>
fg
cd <string>
ls
sudo cp <string>
ls
ls -a
ls
ls
touch <file>
ls
sudo vim <directory>
mkdir <string>
git merge <string>
ls
ls -la
grep -v <string>
rm -rf <string>
mkdir <string>
wget <URL>
date
clear
apt-get install <string>
find . -empty -type <string> -print -delete
sudo ifconfig en0 ether <string>
vi <file>
mv <string>
cd <string>
ls
git push -u <string> bryan-guner
ls -a
yarn add -D <string>
cd <string>
wget <URL>
mv <string>
ls
cd
ssh-add
sh <file>
git add .
mkdir <string>
grep <string>
cd <directory>
grep -E <string>
cd <string>
cd ..
code .
cd ..
exit
cd <directory>
grep <string>
ls -la
cd <string>
git remote add origin <URL>
cd ..
chmod +x <string>
cd <string>
history
exit
ls
exit
cd <directory>
alias <string>
vi <file>
ls
mv <string>
cd <string>
head
exit
git log
vim <file>
cd <string>
vi <file>
ls -lrt
ls
cd <directory>
yarn add <string>
ip addr
cd ..
git add -A -- <string>
cd <string>
rm -rf <string>
cd <string>
cd <string>
chmod +x <string>
wc -l
xargs kill -9
pwd
ls
git commit -m <string>
ls
npm i <string>
git remote -v
stat
fg
kubectl --namespace <string>
rmdir <string>
cd <string>
rm -rf <string>
rm <string>
ls
ls
ls
ls
ls -alhs
clear
sudo apt-get install gufw -y
ls
cd <directory>
vim <file>
apt-get install <string>
ls
sed -i <directory>
fg
ls
cp <string>
tmux
cd
kubectl apply --filename <file>
clear
git remote add origin <URL>
git init
history
rm -rf <string>
docker build -t <string>
nc <string>
top
git branch -a
git init
ls projects
then\
cd <directory>
sed -i <directory>
grep <string> -B10000000
git commit -m <string>
find <directory> -type <string> -execdir <string>
ls
cd <directory>
sudo -s
git add .
ls
find --name=<file>
vi <file>
git clean -fd
git clone --depth <number> <URL>
docker-compose logs
git fetch origin <string>
printf <string>
cd <directory>
git add <string>
vi <file>
byobu-tmux
docker -l
git status
cd ..
cd ..
vi <file>
git commit -C <string> --no-verify
cd ..
zgrep -i -E -o --no-filename <string>
ls
git checkout
source <string>
python3 <file>
python3 <file>
egrep <string>
cat <string>
wc -l
git checkout joshua_buchsbaum -f
git pull -s <string> -X <string> <string>
ls
exit
ln -sf <directory>
sudo stop uwsgi
ls
then\
cd
ls <directory> -l
ls
ls
git pull
git add <string>
git init
npm run coverage
cd <string>
sudo systemctl enable <string>
ls
git fetch upstream
cd <string>
exit
done
grep -vE <string>
git init
cd <string>
cat <string>
ls
cp <string>
cd <directory>
vim <file>
<file> program
apt-get -o <string>
cd ..
git status
vim <file>
cd <directory>
ls -ltr
cd <string>
git push -u <string> master
ls
cd <string>
cd <directory>
cd <directory>
ls
git pull
vi <file>
ls
ls
done
cd <directory>
sudo mount <directory>
mv <string>
ssh <string>
git init
sudo bash --rcfile <file> -ci <string>
rm <string>
git checkout -b <string>
sudo vim <file>
nano <file>
cd
cd <directory>
cd <directory>
cd ..
cd <string>
cd <string>
git checkout <string>
ls
git add .
sudo apt-get upgrade -y
clear
reboot
ls
vi <file>
ls
vim <file>
sed -i <string>
cd ..
ls
ls
vi <file>
git commit -m <string>
ls -ln
ls
ls
cd <string>
git push --all
cd <directory>
kubectl <string>
sudo su chmod -r--r--r-- <directory>
clear
cd <directory>
mv <string>
git commit -m <string>
clear
cd <string>
git commit -m <string>
bash -
ls
cd <string>
sudo <directory> -s <file>
cd <string>
diff -u <string>
clear
ls
curl -H <directory> -X <string> -d <string>
git commit -m <string>
git commit -m <string>
cd <string>
git add .
ls
cd <string>
ls
git init
sudo reboot
vi <file>
cd ..
setg RHOSTS.*
sudo -H <string> install <string>
git status
cd <string>
cd <string>
git add <string>
vi <file>
cd -
node <file>
git pull
sudo vim <directory>
cd <string>
npm run develop
ssh -T <string> -T <file>
tmux -u <string>
read -rp <string> <string>
cd <string>
ls
mkdir <string>
apt-get clean
<directory> -e <string>
man -k <string>
rm -r <string>
cd <directory>
sudo npm install
cd
php
git add .
clear
read <string>
python3 <file>
systemctl disable <string>
ls
cd <directory>
ls
python3 <file>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
cd <directory>
cd <directory>
ls
curl <string>
sudo groupadd <string>
ls
ls
ls
tar -zxvf <file>
sudo apt-get install <string>
sudo sed -i <directory>
ln -sf <directory>
wget -r <URL>
rm -f -- <string>
which <string>
cd ..
cd <string>
ls
vi <file>
ls
cd <string>
cd <string>
code .
cd <directory>
cd <string>
w
cd ..
npm i -g <string>
cd <string>
sudo docker exec <string>
source <directory>
sudo virsh -c <directory> <string>
ls
cd <directory>
vim <file>
cd <string>
sudo rm -r <string>
git add <string>
ls -a
cd <string>
ls
nano <string>
tail -f <directory>
git status
git add .
ls
ls
vim <file>
cp <string>
ls
cd <string>
chmod +x <string>
cd <directory>
ls
git push
git branch
exit <number>
code .
cd <string>
read -r <string>
sudo sysctl -w <string>
vim <file>
more <file>
cd
rm <string>
clear
sleep <string>
ls -la
pacman -S <string>
sudo apt-get update
clear
yarn add <string>
npm start
cd ..
sudo python <file>
vi <file>
cd <directory>
reset
sudo apt-get install <string>
sudo apt update
cd <string>
sudo apt-get update
clear
ls
fg
su - <string>
vim <file>
ssh <string>
tail -f <directory>
ls
sudo apt remove <string>
ssh
wget -q <URL> -O-
done
npm install <string>
clear
git status
vi <file>
git status
git status
sed -i <directory> -- <file>
ls -la <directory>
wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=<string> --domains <file> --no-parent <URL>
shutdown -h <string>
cd <string>
docker push <directory>
rm <string>
cd <string>
ls
sudo apt-get upgrade -y
npm run bench
cd <string>
cd <string>
ls
tail -f <directory>
touch <string>
npm i <string>
pkill
ls
cat <string>
git add .
clear
ls
ls
ls
cp -r <directory>
ls
nano <file>
mkdir -p <string>
cd <string>
ls
git pull
scp <string>
ls
git st
exit
sed <directory>
ls
git commit -m <string>
cd ..
git commit -a -m <string>
cd ..
ls
git gc --aggressive --prune
ls
ls
sudo rm -rf <string>
sudo dnf install <string>
python <file> runserver 0.0.0.0:2016
curl <string>
grep -i <string> >files
ls
ls
bash <file>
cd ..
ls
vim <file>
cd <string>
export <string>
git add .
git status
fg
git commit -m <string>
cd <string>
cd <string>
npm http <number> <URL>
git push origin <string>
ps
ls
cd <string>
git add
cd
git status
cd <directory>
sleep <number>
vi <file>
vi <file>
cd <string>
sudo dd <string>
git add .
ls
uname -a
npm install -g <string>
sudo udevadm control --reload-rules
sudo apt-key adv --keyserver <string> --recv-keys <string>
grep <string>
diff -b <file>
sudo modprobe <string>
ls
cd <string>
du -skh <string>
clear
ls
vi <file>
wget -t <number> --retry-connrefused <URL>
ssh <string>
vi <file>
find . -name <file> -type <string> -print -delete
command tar -zcf <file>
git push origin <string>
sudo chsh -s <directory>
vi <file>
docker-compose stop <string>
ls
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
ping -c3 <string>
rm <string>
ls
cd <directory>
sed -i <directory>
ls
sed -i <directory>
cd <string>
ls
chmod <string>
cd <string>
find . -depth
cd ..
git filter-branch --subdirectory-filter <string> -- --all
git reset --hard <string>
git rev-parse --verify --quiet <directory>
sed -i <directory>
git push -u <string> master -f
tr <string>
awk --help
ls
ls
sudo loadkeys <string>
cd <string>
exit
vim <file>
sudo make install
vi <file>
sudo halt
tar -xvzf <file>
fg
sudo apt install <string>
cd <string>
grep -e <string>
rm -rf <string>
docker run --name <string>
clear
git checkout -b <string>
git push --force <string>
source <file>
cd <string>
git branch -d <string>
ls
npm install <string>
vi <file>
cd <string>
git init
journalctl -xe
cp <string>
ls
git clone <URL>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE <string>
sudo vim <file>
ls
wget <URL>
setg RHOSTS <file>
cd <string>
cd <string>
ls -la
git remote remove origin
ls -i <file>
exit
cd <directory>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
node -v
ls
git remote -v
sudo nohup mongod --fork --logpath <directory>
cd <directory>
docker stop <string>
sudo chmod <number> <directory>
ls
ls
openssl req -new -out <file> -key <file> -subj <directory>
git pull origin master
grep -Eho <string>
ls -al
scp <string>
dir
pavucontrol
ls
ls
chmod -f <string> -- <directory>
sudo nano <file>
vi <file>
cd ..
cd -- <string>
ls
cd <string>
sed <directory>
fg
sudo service nginx reload
ssh -i <string>
pwd
sudo apt-get update
clear
git pull
docker ps
ls -la
git status
cd <string>
cd <string>
git add .
exit
ls
cat <string>
cd ..
grep <string>
sudo apt-get install -y <string>
make -C <string>
file <string>
cd <string>
sh -s -- -y
clear
go tool pprof <file>
git push --tags <string>
mv <string>
tr <string> <string>
mkdir -p <string>
git checkout <string>
clear
git diff <directory> -- <file>
cd <directory>
print -P <string>
git clone <URL>
cd ..
git push origin main
ls
cd <string>
exit <number>
git add .
unzip <file>
clear
git add <string>
git add <string>
ls
vim <file>
vi <file>
git push --help
userdel jyotika
apt-get -y -qq <string> <string>
yarn add <string>
which <string>
ls
git pull
sudo apt install <string>
ls
sudo -u <string>
cd ..
cd ..
rm -r <string>
cat <string>
pwd
ls
sudo apt install git -y
ls
vim <file>
ls
cat
sudo su mv <directory> <directory>
ls
sudo apt install gitg -y
find . -mtime <string>
cd <string>
git branch -M <string>
groups
cd <string>
vim <file>
ls
ls
ls
cd
git commit -m <string>
grep <string>
vi <file>
curl -O -J -L -H <directory>
cd <string>
rm -r <string>
exit <number>
git commit -m <string>
sudo setxkbmap -layout <string> -variant <string>
set
git pull
cat <string>
git add <string>
git pull
sudo sed -i <directory> <file>
ls
sudo apt-get install <string>
rm <string>
vim <file>
python3 <file>
vim <file>
clear
ls
git push
jq -M <string>
cd <string>
ls
mkdir <string>
vi <file>
sudo sed -i <directory> <file>
<directory> <string>
cd <string>
vi <file>
else
bunzip2 <string>
git push
rm <string>
cat <string>
exit <number>
mkdir <string>
sudo apt-get install <string>
git status
fg
curl -sL <URL>
sudo gedit <string>
exit
docker-compose rm <string>
pavucontrol
cat <string>
ls
ls -l
grep <string>
curl
sed <directory>
ls
exit
cd <directory>
cd <string>
cd <string>
rm -r <string>
pwd
rsync -avzr <directory>
vim <file>
clear
vi <file>
ls
docker ps
touch <file>
vim <file>
cd <string>
sudo sed -i <directory> <file>
cd <string>
journalctl
find . -empty -type <string> -print -delete
ls
tmux -V
git clean -fd
git status
cd ..
cd <directory>
nano <string>
ls
bash
cp <string>
sudo -H <string> install -U <string>
ls
ip a
sudo kill -9 <number>
clear
more <file>
ls -la
cd <directory>
man -k <string>
sudo rm -r*
sudo yum install <string>
grep <string>
cd <string>
sudo python <file>
git status
clear
mkdir <string>
docker-compose up
git commit -m <string>
ls
ls
cd <string>
ls
ls
cd <string>
git config --global <file> <file>
git add .
git add .
git flow <string>
cd <string>
ls
fg
cat <string>
git adog
ls
mv <string>
wget <URL>
ls
git add .
git add .
nano -c <string>
touch <string>
cd <string>
ls
cd <string>
git diff
ls
ls
docker-compose up -d --build
git add .
clear
ls
sudo systemctl status <string>
sudo ufw enable
clear
rm <string>
cd <directory>
wget <URL>
wget <URL>
ls
vim <file>
ls -l
nano <file>
git status
clear
tee <file>
cd ..
git branch
git pull
sudo aptitude <string>
vi <file>
ls
cd <string>
yarn install
mkdir <string>
ls
mkdir -p <string>
mkdir <string>
find . -type <string>
grep <string>
cd ..
vi <file>
git commit
rm -rf <string>
mv <string>
clear
ssh <string>
ls
curl -sL <URL>
ls
cd <string>
sleep <number>
npm audit fix
find . -type <string> -name <string> -exec <string>
cd <directory>
rm <string>
sed -i <string>
ls
wget <URL>
rm -rf <string>
cd
git clone <URL>
ls
git pull origin master
then\
cd <directory>
git add .
git add <string>
grep -i <string>
git add <string>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
mkdir <string>
ls
git add .
setg RHOSTS <file>
cd ..
git push origin master
ls
docker tag <string>
cd ..
cd <string>
mkdir -p <string>
fg
mkdir <string>
vim <file>
cd <string>
find . -empty -type <string> -print -delete
exit <number>
git add <string>
git restore --staged <string>
ls
clear
vim <file>
exit <number>
vi <file>
clear
sudo cp -a <directory>
sudo vim <directory>
mkdir <string>
cd ..
cd
npm test
exit
ls
exit
pwd
export <string>
git commit -m <string>
rsync --help
tar xvzf <file>
git push
sudo x11vnc -xkb -noxrecord -noxfixes -noxdamage -display <string> -auth <directory> -usepw
sudo apt-get update
python3
git remote add origin <URL>
clear
cat <string>
cd <directory>
git pull
ls
sed -i <string>
sudo <directory> restart
git clone <URL>
ls -a
ps aux
ls
ls
docker logs <string>
ping <string>
sudo vim <directory>
sudo apt-get -y <string> <string>
ls
git cm -m <string>
git push
mkdir <string>
python3 <file>
git merge --abort
clear
exit <number>
cd <string>
sed -i <directory>
git clone <URL>
ls
ls
sudo -E <string> <string>
sudo crontab -l
ping <file>
git branch
sed -i <directory>
git stauts
nano <file>
docker-compose down
ls
python3 <file>
curl <string>
sudo sed -i <directory>
top
ps ax
cd ..
sed <directory>
cd <string>
mv -r <directory>
git commit -m <string>
ls
chmod +x <string>
exit <number>
git remote add origin <URL>
nano -w <directory>
rm -rf <string>
cd
git add .
cd <string>
exit
clear
clear
ls
python3 <file>
ls
npm i <string>
trap <string>
ls
perl -pe <string>
git fetch origin <string>
clear
sudo apt-get -y <string>
sudo nano <string>
git remote add origin <URL>
ls
pwd
git status
cd <string>
sudo rfkill <string>
git push
git add .
git push
then\
git st
chmod +x <string>
history
vi <file>
tr
ls
ls
ls
git add .
git push
exit
mkdir <string>
cd
rm -rf <string>
ping <file>
ls
ls
ls
perl -ne <string>
history -r
vim <file>
python3 <file>
git push
vim <file>
ls
free
fg
ls -la <directory>
npm run test
sudo apt update
clear
sudo service nginx reload
grep <string>
sudo apt-get -f <string>
npm i -g <string>
sudo pacman -S <string> --asdeps
cp <string>
ls
python3 <file>
cd ..
git commit -m <string>
ls
git push
export <string>
ls
mkdir <string>
grep -i <string> >files
mv <string>
capsctrl <directory> & disown
git pull
git branch
code .
ls
git init
rm -R <string>
sudo rm -rf <string>
sudo vim <directory>
git push origin master
git tag <string>
ssh <string>
ls
sleep <string>
npm uninstall -g <string>
npx <string>
git init
vi <file>
vim <file>
ls
git init .
history --help
cd ..
ls
ls
git submodule update --init --recursive
less <string>
cd <string>
git commit -m <string>
git status
vi <file>
pwd
cd <string>
git clone <URL>
cd <string>
cd <directory>
read
rm plugins -rf
alias <string>
read -rp <string> <string>
ls -la
sed -i <string>
git status
rm -d <string>
cd <string>
sudo apt install <string>
sudo apt-get update
sudo add-apt-repository <string>
apt-get update
vi <file>
grep <string>
tail -f <directory>
exit
ls
ls
mkdir <string>
ls
ls
git commit -m <string>
git push
cd <directory>
clear
git push
git add .
vim <file>
touch <string>
service <string>
git clone <URL>
find . -type <string> -name <string> -exec <string> <string>
rm -rf <string>
sed <directory>
sudo ntpdate -B -u -d <string>
cd <string>
git clone <URL>
sudo reboot now
exit <number>
ls
cd <directory>
sudo apt update
ping <string>
git checkout -b <string>
clear
df
clear
gunzip <file>
find . -name <file> -type <string> -print -delete
vi <file>
ls --help
setg RHOSTS.*
done
git log
ls
exit <number>
ls
vim <file>
systemctl daemon-reload
git push -f
sudo phpenmod -v <string>
touch <string>
man <string>
chmod <number> <string>
cp -r <directory>
rm -rf <string>
ls <directory> -l
cd <string>
ls
ls
read -rp <string> <string>
ls
cd <directory>
exit
ps
cp <string>
cd <directory>
vi <file>
read -p <string>
ls
sudo sed -i <directory> <file>
sudo sed -i <directory>
ls -lrt
cat <string>
sh -c <string>
git clone <URL>
cp <string>
sed -i <directory>
cd <string>
git status
tmux a
sudo ls
sudo nvidia-settings -a <directory>
ls
read -rp <string> <string>
aptitude install <string>
awk <string>
cd <string>
cat <string>
git config --global <file>
rm -r <string>
vi <file>
ps -ef
ls
ls
sudo sed -i <directory>
sudo systemctl start <string>
git pull
apt-get install <string>
cd ..
ls
cd <string>
ls
docker logs <string>
cd <string>
less <string>
ls
vim
sudo ntpdate -B -u -d <string>
kubectl --namespace <string>
git log --oneline
git add .
git push -u <string> master
sudo yum install <string>
sudo pip3 install --default-timeout=<number> <string>
cp <string>
rm -rf <string>
sudo make clean install
cd <string>
git pull origin main
cd <string>
git bash
cd <string>
clear
read <string>
ls
exit
find . -name <file> -type <string> -print -delete
sudo systemctl disable <file>
cd <string>
cp -r <directory>
clear
cd
git push
git clone <URL>
vim <file>
curl -sSL <URL>
docker stop <string>
sudo xbps-install -Su
vi <file>
ls
exit <number>
docker-compose up -d
ls
git push
sudo npm install <string>
rg -v <string>
clear
find . -empty -type <string> -print -delete
source <string>
git status
find . -name <string> -type <string>
git ps -u <string>
cp <string>
ls
cd <string>
ls
sudo apt-get autoremove
kubectl get pods --namespace <string>
ls
ls -al
sudo apt install <string>
sort -n -k <number> -r
sudo systemctl status <string>
curl -fsSL <URL>
rm -rf <string>
git fetch
ls -al
cd <string>
more <file>
docker build -t <string>
git commit -m <string>
ls
sed -e <directory> -e <directory>
apt-get upgrade -y
vim <file>
rm -rf <string>
cd <directory>
ls
cd <directory>
cd <string>
cd <directory>
ls
sudo mkdir -p <directory>
git config --global <file> <string>
rm -rf <string>
clear
cd <string>
vim <file>
ls
clear
cd
cd <string>
exit
git checkout <string>
cd <string>
python3 <file>
git add <string>
find -mindepth <number> -name <string>
sudo apt install --fix-broken -o <string> <string>
cd ..
sudo pacman -S <string> --asdeps
cd <string>
cat -n <string>
<directory> <string>
cd <string>
git push origin master
ls
ls
clear
read -r <string>
sudo dnf repolist -v
clear
fg
cd ..
git branch
git remote -v
shutdown -h <string>
sudo apt update
systemctl restart <string>
cd <string>
cd <string>
npm audit fix -f
sudo pacman -S <string>
docker rm -f -- <string>
cd
ls -l
exit <number>
git rebase -i <string>
git pull
rm <string>
ls
ls
ls -l
clear
clear
diff <file> <file>
ls
chmod +x <string>
ftp <string>
git branch -M <string>
cd <string>
git commit
touch <file>
cd <string>
git pull
cd <string>
ls
sudo apt upgrade
cd <directory>
sed -e <directory>
ls
git clone <URL>
grep -vE <string>
exit <number>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
clear
vim <file>
ls
sudo gedit <string>
sudo add-apt-repository --remove <directory>
code .
cd <string>
tmux new-window -t <string> -n <string>
ls
git status
rm -rf <string>
nano <file>
sudo su
cd <directory>
ls
ls
cd ..
git pull
less
ip route <string>
git add .
cd <directory>
cd <directory>
sudo mv <string>
sudo rpm --import <URL>
git commit -m <string>
cd ..
pushd <directory>
dpkg-shlibdeps: erro: <string>
reboot
git init
clear
man <string>
ls
exit
touch <string>
ls
vim <file>
cd ..
ls
docker rmi -f <string>
rsync <directory>
cd ..
git commit -m <string>
git commit -m <string>
npm help
pwd
grep <string>
rm -f <string>
head -n <number>
ls
sudo apt install <string>
source <file>
git status
vim <file>
vim <file>
ls
systemctl enable <string>
apt update
git pull
cd..
grep <string>
ssh -o <string>
cat <string>
gzip <string>
kill -9 <number>
sudo apt install <string>
service apache2 reload
git status
shutdown -h <string>
git clone <URL>
ls
nano <file>
ls
git cat-file -p <string>
mvn eclipse:eclipse -DdownloadSources -DdownloadJavadocs
git checkout -b <string>
cat <string>
vi <file>
git fetch
vi <file>
vi <file>
cd ..
ls
grep <string>
sudo cp -r <string>
cat <string>
code .
docker run -itd <string>
cd
export <string>
ls
print <string>
npm init -y
wget -r -A <URL>
sudo cat <file> <string>
git init
git checkout <string>
cd <directory>
git add -A
npm start
mkdir <string>
cd <string>
cd
vim
ls
sudo chown -R <string>
chmod <number> <string>
python3
exit
cd <string>
vim
cd <string>
sudo yt-dlp -U
rm <string>
mv <string>
tmux
ls
ls
ls
cd <string>
cd <string>
clear
git add
fg
clear
ls
script/build.sh
git commit -m <string>
sed -e <directory> -e <directory> -e <directory>
apt-get install -y <string>
cd <string>
cp <string>
git commit
cd ..
cd <string>
cd <string>
clear
clear
docker images
ls -la
unset color_prompt force_color_prompt
ls
ls
sudo python3 <file>
cd <string>
git init
git push
git stash
less
clear
ls
apt-get install -y <string>
vim <file>
git status
exit
less
exit
npm run test
htop
cd ..
killall <string>
ls
rm -r <string>
cd <string>
git add .
apt-get -f -qq <string>
ls
sudo git pull
git branch --no-color <string> <directory>
ls
cd -
wget <URL>
read <string>
python3 <file>
vi <file>
sudo apt install <string>
sudo pacman -S <string>
git init
cd <string>
cd <string>
unzip <file>
unzip <file>
cd <string>
git push -u <string> master -f
docker-compose up -d --build
git merge <string>
sort
exit
vi <file>
curl <URL> -u <string> -d <string> -d <file> -G
fg
sudo apt-get update
vim <file>
cd <string>
ls
git push -u <string> main
cd <string>
git add .
sudo apt-get install <string>
vim <file>
ls
ls
git add <string>
find . -print
sudo systemctl restart nginx
rm <string>
git add .
cd <directory>
cd <directory>
curl -k -s <URL>
git init
vim <file>
python3 <file>
git commit -m <string>
exit
npm init -y
cd <string>
ls
service apache2 reload
ls
sudo timeshift --
apt-get -o <string>
ls -als
grep <string>
clear
tee <file>
history
ls
cd <directory>
vim <file>
bunzip2 <string>
git add .
sudo npm i -g <string>
unzip <file>
cd <string>
exit
cd ..
ls
git status
tar --help
ls
sudo update-alternatives --quiet --set <string>
service apache2 reload
python3 <file>
cd ..
mkdir <string>
apt-get update
code <string>
ls
nano <string>
exit <number>
sudo -H <string> --version
grep <string>
du -sh <directory>
clear
sudo apt upgrade
git status
docker volume create <string>
vi <file>
sudo
cd <string>
ls
cd
cd <string>
cd <string>
git pull upstream
sudo python <file>
pico <file>
ls
ls
cd
ls
exit
ls
ls
npm install -g <string>
git checkout -b <string>
ls
git status
read <string>
ls
ls
cd <string>
cat <string>
cd ..
ls
git checkout <string>
sudo su
ls -l
read -u <number> -t <number>
ls
sed -i <directory>
cd <directory>
apt install <string>
ls
cd <string>
cd
mkdir <string>
sudo chmod -R <string>
sed -i <string>
cd <string>
npm i <directory> -f
ls
less <string>
cd ..
cd <directory>
vim <file>
fg
exit <number>
cd <string>
git add <string>
cd ..
vi <file>
ssh dirlic@10.18.0.39 -p <number>
ls -l
sudo apt install <string>
vim <file>
mkdir <string>
npm init -y
psql -h <string> -U <string> -d <string> -L <file> -a <string>
mv <string>
wget <URL>
ls -a
vim
git status
ls
vim <file>
sudo apt-get install <string>
git clean -f
python3.11 <file>
ls
ls
npm install
clear
git status
cd <directory>
ls
read -s -n <number>
git status
sudo apt-key add -
ls
chmod u+x <string>
ls
ls -la <directory>
ls
grep <string>
ls
git clone <URL>
nano <file>
cat <string>
clear
apt list --upgradable
wget <URL>
cd <string>
cd <string>
git add <string>
pwd
ls
ls
cd <string>
cd <string>
npm run develop
cd
vim <file>
openssl pkcs12 -export -out <file> -in <file> -name <string>
sudo kill <number>
touch <string>
git push
rm -r <string>
cd <directory>
sudo rm -rf <string>
sed -i <string>
wget <URL>
git status
cd <string>
cp -r <directory>
ls
npm run dev
mv <string>
cat <string>
vim <file>
cd <directory>
cd
sudo mount <directory>
bash
sudo apt update
git remote set-url origin <string>
git status
sudo systemctl start <string>
cd <string>
exit <number>
sudo mv <string>
git rm <string>
npm start
mv <string>
chmod <number> <string>
code .
sudo -i
sort -hr
wget <string> -O <string>
ls
sudo apt install -y <string>
source <file>
sudo apt-get install <string>
sudo sed -i <directory> <file>
ls
sudo a2enconf <string>
git commit -m <string>
sed -rn -e <directory>
ls
ls
ls
exit
tail -1)"\
cd ..
grep -rP <string>
docker exec -it <string> bash
sudo rm -r <string>
ping <file>
ls
git status
ls
ls
sudo systemctl --user <string> pulseaudio
git fetch origin\
shred -uz <directory>
git add -A
clear
npm i
tail -n <string>
chmod <number> <string>
unset color_prompt force_color_prompt
ls
git add .
grep -v <string>
sudo cat <directory>
curl <string>
uniq -c
cd <string>
git status
cd <string>
rm -rf <string>
git log
rm <string>
ls
sudo rm -rf <directory> <directory>
ls
git add
clear
nc <string>
git clone <URL>
sudo apt-get install <string>
git -v
du -h -d <number>
node <file>
export <string>
cd <string>
sudo nano <directory>
git commit -m <string>
vim <file>
exit
man <string>
sudo systemctl start <string>
rm <string>
ls -l
du $arg <string>
git status
rm -rf <string>
vim <file>
git init
chmod <string>
sudo shutdown -h <string>
grep -i <string>
git push
ls
grep <string>
ls
mkdir <string>
ls
rm <string>
cd <string>
cd -
docker compose <string>
cd <string>
apt list -i <string>
openssl req -subj <directory>
npm -v
ping <string>
ls++ -a
grep -e <string> -e <string>
mkdir -p <string>
find . -size <string> -a -print -a -exec <string> -f <string> \
cd <string>
ls
ls -l
history
ls
docker rmi -f <string>
cd <string>
git push
git push
git status
cd ..
ls
ls
sudo su
ls
ls
cat <string>
wc -l
git add -A
vim <file>
cat <string>
wc -l
sudo npm install <string>
ls
nano <string>
git commit -m <string>
find $dir -type <string>
rm -rf <string>
ls -la
sudo halt
git pull origin master
git commit -m <string>
ls
git merge <string>
exit
rm -r <string>
ls
vim
clear
git commit -am <string>
curl <directory> -o <directory>
vim <file>
find . -empty -type <string> -print -delete
vim <file>
git remote -v
find ~ -name <string>
ps -a <string> selects all processes with a tty except session leaders
cd ..
cd <string>
nginx -s <string>
sudo update-alternatives --install <directory>
clear
ls
apt install -y <string>
cd <directory>
sudo cp <file> <file>
vim <file>
sudo apt install <string>
git push origin master
npm publish
helm init --service-account <string> --upgrade
cd <directory>
ls
mkdir <string>
rm <string>
apt-get update
cd <directory>
exit <number>
git pull
sudo apt-get remove <string>
sed -i -e <string>
cd <string>
brew install <string>
git co master
vim <file>
cd <string>
read -rp <string> <string>
clear
git commit -m"update"
git config --list
exit
cd <string>
cd <string>
touch <string>
git add <string>
sudo apt-get -y <string>
cd
vim <file>
vi <file>
sudo apt update
git pull origin <string>
which <string>
uname -r
clear
exit
ls
git co PTS-578_redirects_not_updating_automatically
python3 <file>
rm <string>
clear
sudo vi <directory>
vi <file>
man <string>
ls
ls
sudo journalctl -u <file> -f
cd <directory>
sudo -E <string> -
vim <file>
ls
cd ..
git pull origin <string>
clear
cd ..
cd <directory>
ls
vim <file>
clear
rmdir <string>
vim <file>
grep -R <string>
git clone --depth=<number> <URL>
vim <file>
ls
git status -s
sudo yum <string>
apt list --upgradable
vi <file>
cd <string>
cd
cd <string>
sudo git push <string>
history
cd <directory>
cd <string>
sudo virsh -c <directory> <string>
man <string>
git pull
ls
pwd
yarn -v
cd <string>
rm <string>
sort -rn
sudo vim <file>
git push
cd ..
git config --global <file> <string>
rmdir <string>
ps
ls
cat <string>
ls -l
rm -rf <string>
read
ls
ls
vi <file>
fg
git push -u <string> master
cd ..
git commit -m <string>
cd <string>
cd <directory>
sudo sysctl <string>
exit <number>
wget <URL>
cd ..
find . -size <string> -a -exec <string> -f <string>
fg
sed -ri <string>
fg
rm <string>
cd <directory>
python3 <file>
touch <file>
ls
rm -f <string>
ls
cd <string>
cd <directory>
ls
curl -o- <URL>
ls
docker images
find . -type <string> -name <string>
exit
ls
uname --help
find . -name <file> -exec <string> -i <directory>
ls
ls
sudo sysctl -w <string>
ls
git branch
nano <string>
ssh -t <string>
wget -q -O <file>
npm install
ip a
git add <string>
git filter-repo --path-glob <string> --invert-paths --force
php -r <string>
ls -la
git push origin2
nano <file>
exit
rm <string>
cd <string>
git checkout -b <string>
vi <file>
cd <directory>
vim
sudo apt-get update
cd <directory>
git clone <URL>
sudo apt update
rm <string>
cat <string>
cd
rm -rf <string>
journalctl
sudo npm test
type <string>
find . -name <file> -type <string> -exec <string> -rf <string>
cd ..
cd <string>
git push
sudo dnf install <string>
ls
ls
ls
git pull origin
ssh <string>
then\
vim <file>
cd <string>
ls
sudo mount -t <string> -o <string>
type <string>
git push
tr <string> <string>
ls
clear
history
tmux set-option -g <string>
git diff --summary
python3.11 <file>
ls
df -h
mkdir -p <string>
ls
nano <file>
cd ..
df
ps -auxwf
git clone <URL>
cd
sort -rn
git pull
mkdir -p <string>
ls
python3 --version
chmod u+x <string>
find . -name <string> -delete
ls
dpkg -l
git add -A
ls
grep <string>
mv <string>
cat <string>
grep <string>
ls
npm ERR! <string>
rm <string>
ls
exit
cd <string>
cd <string>
kill -9 <number>
cd <string>
wget -q -O <file>
cd ..
ls -lr
diff <file> <file>
read -p <string>
alias <string>
sudo pacman -Syyuu
vi <file>
cp -r <directory>
sudo ufw allow <string>
exit
cd <string>
cd ..
git push
lsblk
ls
cd <string>
cd <directory>
history
ls
ps -a
unset color_prompt force_color_prompt
sudo poweroff
git add <string>
ls
pwd # <string>
docker container <string>
git commit -m <string>
cat <string>
vim <file>
sleep <string>
done
cd
ssh-keygen -t <string>
cd ..
git add <string>
git ls-tree -r <string> --name-only
wget <URL>
vi <file>
tail -f <directory>
ls
date
source <file>
code <string>
ls
ls
docker login <file> -u <string> --password-stdin <string>
source <directory>
ls
npm install <string>
git push
cd ..
cd <string>
cd ..
ls
cd <string>
docker compose up
cd <string>
ssh-add -L
exit
exit
vim <file>
git push
clear
sudo apt install <string>
ls
rm <string>
docker-compose up -d --build
top
cd <string>
docker network <string>
git push origin master
cd <directory>
sudo apt-get install <string>
cd <string>
docker-compose up -d --build
git config -l
npm i -g <string>
code <string>
cd ..
rm -r <string>
ls -lh <string>
cd <directory>
exit
mv <string>
ls
node <file>
sudo apt-get update
sudo vi <directory>
chmod <number> <string>
mv <string>
clear
ls
cd <string>
cd <string>
vim <file>
rm <string>
mkdir -p <string>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
sudo vim <directory>
ls
sudo rm -rf <string>
sh <file>
rm -r <string>
ls
git diff
xargs -L1 <string>
pwd
sudo sed -i <directory> <file>
git clone <URL>
mkdir <string>
git push origin main
cd <string>
vi <file>
git commit -m <string>
git add .
git status
cd <string>
ls
ls
cd <directory>
git status
ls
sudo docker rm corrade
git add <string>
sudo pcmanfm
ls
dpkg-reconfigure <string>
chmod -R <string>
ls -la
git clone <URL>
mkdir <string>
sudo zypper se <string>
ls
grep -iE <string>
git status
ls -l
ls
exit
su root
cd ..
git commit -m <string>
ls
git init
tail --help
ls
cd <string>
ssh <string>
clear
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
cut -c <string>
cd ..
cd ..
fg
git rebase -i <string>
cat <string>
vi <file>
ls
git checkout <string>
sudo apt-get clean
git log
cd <string>
vim <file>
ls
cd <string>
ls
ls -la
mvn compile
sort
exit
codedown javascript > <file>
clear
git checkout <string>
git commit -am <string>
head -1 <file>
ls
clear
ls
git stash
head -1 <file>
git branch
ls
cd <directory>
touch <string>
cd <string>
git init
docker exec -it <string>
exit
ls
ls
g++ -std=<string> <file> -o <string>
vim <file>
ls
cd ..
git commit -m <string>
ls
grep <string>
git branch -M <string>
ls
curl -sSL <URL>
ls
git add <string>
git add .
ls
cd <string>
rm tokyo-night-sddm -rf
npm install
cd <string>
wget <URL>
ps --no-headers -o <string>
sudo yum <string>
ls
git config --global <file>
ls
sed -i <string>
cd <directory>
cd ..
npm run frontend
make clean
git commit -m <string>
bash
vi <file>
docker tag <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
sudo cp <string>
git config --list
ls
exit
exit
cd <directory>
touch <string>
cd <string>
awk <string>
git reflog expire --expire=<string> --all
git
docker pull <string>
ls
curl -sS <string>
vi <file>
sudo apt update
rm <string>
cd <string>
else
head -n <string>
clear
ls
git status
cd ..
cd <directory>
touch <string>
npm
ls
cd <string>
ls
ps ux
ls
git init
sudo service <string>
clear
env
vi <file>
ls
chown <string>
git --version
git commit -m <string>
docker rm <string>
git commit -m <string>
find . -empty -type <string> -print -delete
git fetch -q
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
vi <file>
bash
ls
git merge
ls
ls -altr
ls
source <directory>
git filter-branch --index-filter <string> HEAD
sudo apt install <string>
vi <file>
git push origin
bash <file>
vi <file>
more <file>
git config --global <file>
sed -i <string>
done
cd <string>
git add <string>
read -rp <string> <string>
ls
vim <file>
sort -t -k <string> # sorts the contents on specific sort key field starting from 1, using the field separator t.
ls
ping <string>
ls
sudo npm install
mv <string>
cd ..
cd ..
clear
bash
cd <string>
exit
make clean
exit <number>
cd <string>
git push --mirror <string>
sudo mount -t <string> -o <string>
sudo apt-get install -y <string>
sudo add-apt-repository <string> [arch=<string> <URL>
cd ..
ls -la
git init
mkdir <string>
openssl genrsa -out <file>
sh <file>
screen -r <string>
find . -empty -type <string> -print -delete
sudo journalctl -u <file>
sudo apt install <string>
vi <file>
ls
cp -r <directory>
ls
git config --global <file>
sudo shutdown now
nano <string>
mv <string>
cd ..
jq <string>
git push -f <string> <string>
python3
ls
ls
npm create <string>
vim <file>
ls
python3 <file> --epochs <number>
source <directory>
cd ..
top
cd <directory>
exit
cat <string>
rm -r <string>
clear
gunzip -d <file>
cd ..
python3 <file>
ls
type <string>
npm express -V
ls
ls
ls++ -a
ls
cd <string>
xargs -0 -r <string> -- <string>
yarn add <string>
ls
touch <string>
ls
git clone <URL>
git pull
ls
exit
git status
cd ..
git push -u <string> master -f
rm -r <string>
ssh <string>
g++ -std=<string> <file> -o <string>
cd <string>
sudo ufw enable
curl -sL <URL>
sudo start uwsgi
tail -f <string>
rm <string>
git clone <URL>
cd ..
cd <string>
ls
ps ax
ls
cp -r <directory>
ls -1
clear
sudo python3 <file>
ls
ls
grep -i <string> >files
script/build.sh
uname -r
ls
cd -
cd <string>
cd <directory>
git branch -M <string>
git commit -m <string>
sudo service nginx reload
git add <string>
git add <string>
ls
git status
ps aux
git commit
cd <string>
git add .
clear
sudo apt install --fix-broken -o <string> <string>
find <directory> -name <string>
cd <string>
npm install
ls
sudo systemctl restart <string>
tmux kill-session -t <string>
git add <string>
cd <directory>
vi <file>
wget --no-check-certificate <string>
sudo shutdown
vim <file>
shutdown -now
ls
ls
ps axfu
cd
ps -a
sed -e <directory> -e <directory>
clear
ps
then
unset <string>
cd <string>
read -ra <string>
sudo python <file>
npm i <string>
ln -s <string>
sudo npm install -g <string>
cd <string>
cd <string>
ls -ltr
cd <directory>
cd <directory>
ls
perl
rm -r <string>
cd <string>
rm <string>
rm -r <string>
ls
reboot
find . -name <file>
cp <string>
mkdir <string>
fg
wget -q --show-progress <URL> -P <directory>
ls
curl -L <directory> -o <directory>
vim <file>
cd <directory>
sudo adduser <string>
sudo python2 <file> --cascade=<file> <number>
npm i <string>
ls
clear
done
chmod -x <file>
cd ..
cd <directory>
nc <string>
ls
touch <string>
vim <file>
cd <string>
cat <string>
git remote -v
git clone <URL>
docker ps
sudo sed -i <directory> <file>
tail -f <directory>
ls
clear
cd <string>
ps aux
mv <string>
cd
ls
mv <string>
git add <string>
node <file>
vim <file>
git config --global <file> <string>
ls
cd <directory>
ls
done
git add <string>
npm i sass -D
cp <string>
cd ..
git add <string>
ls
cd ..
docker logs <string>
ls
vim <file>
sudo rm -rf <string>
vim <file>
git commit -m <string>
less <string>
git status
git pull
ls -alrt
ls
sh
fg
cd <string>
cd <string>
rm -im <string>
ls++ -a
git status
tmux
cd ..
rm -rf <string>
git commit -m <string>
ls
ls
sudo python <file>
sudo mv <string>
git config --list
fg
ls
grep <string>
git add <string>
cd
ls -las
wget -q -O - <URL>
wget <URL>
cd <string>
cd ..
exit
npm init
exit
find . -type <string> -perm <number>
find . -empty -type <string> -print -delete
python3 <file>
clear
git branch
fg
sudo make clean install
df
git config --global <file> <file>
sudo serve -s <string>
cd <directory>
cd <directory>
cd ..
cd <string>
cd ..
yarn add <string>
ls
clear
ls
git config --global <file>
sudo rm -R <string>
sudo yum update -y
code <string>
sudo restart
exit <number>
<file> -r <string> -t <string>
ls
sudo sysctl -w <string>
cd <string>
python3 <file>
ls
npm
ls
grep -Ev <string>
cd <string>
grep -E <string>
git commit -m <string>
exit\
touch <file>
git stage <string>
git push
ls
clear
ls
cd <string>
sed <directory>
git remote add origin <URL>
cd <directory>
mv <string>
rm <string>
cd ..
git remote add origin
ls
cat <string>
time <string>
sudo systemctl restart <string>
pico <file>
git diff <string>
cd
git clone <URL>
git commit
cd <string>
rm -rf <string>
cd ..
vi <file>
done
sudo pip3 <string>
chmod u+x <string>
vi <file>
ls -l
mkdir <string>
npm run dev
git push -u <string> bryan-guner
ls
git init --bare
git checkout <string>
vim
vi <file>
cd <string>
clear
cd <string>
git remote
cd <string>
ls
cd <string>
git add
touch <string>
print <string>
install <string>
cp -R <string>
xargs tar cvf <file>
rm <string>
vi <file>
ls
less <string>
vi <file>
git pull
cd ..
codedown javascript
tar xf <file>
cd ..
ls
which <string>
sudo python3 <file> install
sudo dpkg --remove -force --force-remove-reinstreq <string>
ssh dirlic@10.18.0.39 -p <number>
npm install -g <string>
ls
ls
clear
ls
sudo -i
cd <directory>
ls
cd
sudo python <file> --cascade=<file> <number>
pwd
cd <string>
git remote add origin <URL>
cp -r <directory>
sudo apt-get install -f
tail -f <directory>
done
ls
sh
git push -u <string> master
ls
sudo apt-get install <string>
unzip -R
ls
vim <file>
vi <file>
grep <string>
cp -r <directory>
sudo nala <string>
chmod <string>
git reset --hard <string>
du <filename> # shows the disk usage of the files and directories in filename (du -s <string> only a total)
git add <string>
git init
ls -l
ls
python3 <file>
cd <string>
cd ..
git status
python3 <file>
git init
ls
cd <directory>
ls
fg
git init --bare
gzip -d <file>
vim <file>
python3 <file>
cp -r <directory>
perl6 -e <string>
git push
cd ..
mvn compile
curl -o- <URL>
cd <directory>
cd
ls
clear
chmod +x <string>
sudo vim <directory>
exit
git status
cd <string>
ls
rm -rf <string>
grep -rl <string>
ls
mkdir <string>
apt-get install <string>
sudo vi <directory>
vim <file>
npm install -g <string>
cd <string>
git config --global <file> <string>
cd <string>
cd -
git commit -m <string>
git pull
git init
cd <string>
reboot
more <file>
git commit -m"update"
cd <string>
sudo pacman -S <string>
python3.11 <file>
git push origin master
ls
cd ..
grep <string>
clear
cd ..
bash <file>
rm <string>
exit <number>
git commit -m <string>
cat <string>
perl -ne <string>
cd <string>
ls
kill -9 <number>
xargs -n2
git commit -m <string>
cd ..
cd <string>
git status
cd ..
exit
docker exec -t -u <string>
exit
scp <string>
do\
clear
git init
chown -R <string>
cd <directory>
cd ..
ls
cd ..
chmod +x <string>
sudo apt purge <string>
sudo sed -i <directory> <file>
sudo stop uwsgi
mkdir <string>
cd ..
git add <string>
vim <file>
cd <directory>
cd ..
ls
ls
vim <file>
docker exec -it <string> bash
clear
git status
sudo apt update
ls
code <string>
sed <directory>
<directory> <string>
git config --global <file> <file>
ls
cd
git st
cd <string>
ls
cd ..
git commit -m <string>
git commit -m <string>
ls
cd <string>
ls -a
ls++ -a
cd <directory>
ls
grep <string>
git push --set-upstream <string> master
chmod <number> <string>
dpkg -L <string>
git commit -m <string>
ls
git clone <URL>
exit
cd <string>
git pull --no-edit
cd <string>
awk <string>
git commit -m <string>
ls
git pull origin development
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
ls
git pull origin <string>
mvn clean
du -skh <string>
git diff
ls
git push
git log $1 --all --author=<string> --pretty=<string> - <string>
curl -fsSL <URL> -o <file>
local <string>
script/build.sh
git commit --allow-empty -m <string>
wget <URL>
ls
rm <string>
git add .
git clone <URL>
ls
cd <directory>
cd <string>
cd <string>
vim <file>
git clone <URL>
export <string>
git pull
nc -l <number>
git remote -v
cd
sudo apt update
man -f
ls
mkdir -p <string>
export <string>
vim <file>
vi <file>
source <file>
ls
cat <string>
diff <file>
ps aux
git branch
diff <file> <file>
vi <file>
ls -ltr
vi <file>
telnet <string>
clear
mvn exec:java -Dexec.mainClass=<file>
docker build . --progress <string> -t <string>
ls -l
ls
read -r -p <string>
ls
rm <string>
npm run test
sudo ln -sf <directory>
read
cd <string>
sudo dpkg-reconfigure console-setup
ls
source <string>
uniq -c
cd <string>
mkdir <string>
cd <string>
sudo docker container rm -f <string>
ssh <string>
sudo chmod <number> <directory>
sort -n
exit <number>
ls
cd <directory>
ls
cd <string>
sudo nvidia-xconfig --cool-bits=<number>
nano <string>
git status
vim
git checkout <string>
cp -r <directory>
grep -E <string>
git clone <URL>
git push origin main
vi <file>
cd ..
vi <file>
unzip <file>
xargs -0 <string> <string>
vi <file>
bash <file>
cd ..
ls
nano <string>
npm i
cd <string>
sed <directory>
git -version
git status
sudo apt-get update
git reset <string>
clear
ls
sudo apt-get autoremove
git status
ls
sudo reboot now
cd ..
mv <string>
grep -q <string>
git pull
git push
cd <directory>
ls
cp <string>
sudo stop uwsgi
git push
git clone <URL>
su
git checkout <string>
date
sudo bash
git push
vim <file>
cd
ls
ls
cd <string>
clear
git push
cd <string>
ln -s <string>
rm <string>
vi <file>
rsync <directory>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
read -s -n <number>
cd ..
cd <string>
touch <file>
exit
clear
ls
ls
git commit -m <string>
ls
ls -a
cd ..
git commit
cd ..
mkdir <string>
npm install -f
git status
cd <string>
ls
ls
curl <string>
cd <string>
gzip
ls <directory> -al
tee <file>
ls
git commit -a -m -m <string>
grep -v <string>
git status
ls
cat <string>
sudo apt-get install -y <string>
grep <string>
vim <file>
vi <file>
ls -lh
rmdir <string>
docker-compose up -d --build
cd <string>
alias
ls -l
git status
man <string>
git checkout <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
cat <string>
git config --global <file> <string>
curl -L <URL>
clear
sudo apt-get update
cd <string>
chmod <number> <string>
npm install <string>
sudo systemctl status <string>
ls
tail -f <string>
git add .
vim <file>
tail -f <directory>
git stash pop
brew update
rm -rf <string>
date
nano <file>
sudo make install
node <file>
sudo apt update
exit
sudo chown <string>
ls
vim <file>
sudo ip route <string>
mvn exec:java -Dexec.mainClass=<file>
exit
ls
exit
ls
read -r -p <string>
read -rp <string> <string>
vi <file>
bash <file>
chmod u+x <string>
pwd
mkdir <string>
cat <string>
cd ..
cat <string>
git push -u <string> bryan-guner
ps aux
ls -al
cd <string>
cd ..
dpkg --search <directory>
git commit -m <string>
apt-get update
ls
top
git restore <file>
source <file>
ls
grep -v <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
man <string>
docker ps
sudo apt-get update
sudo modprobe <string>
docker exec -it <string> bash
grep -E <string>
ls
which <string>
ls
exit
sudo pip install <string>
sed -r <directory>
git commit
git commit -m <string>
rm -f <string>
ls
ls
sudo -s -u <string> -H
cd <string>
git status
ls
sudo sed -i <directory> <file>
vim <file>
ls
cd ..
mkdir <string>
sudo vim <directory>
git checkout <string>
done
cat <string>
ls
cd <string>
chmod +x <string>
git push pay --all
curl -k <URL>
cd <string>
cd ..
ls
python3 <file>
cat <string>
rm -rf <string>
ls
sync
sudo apt-mark <string>
ls
cd ..
git init
cp -r <directory>
git commit -m <string>
git commit
vi <file>
sudo touch <directory>
cd <directory>
sudo docker rm corrade
ls
cd <string>
ls
git config --global <file>
ls -la
ls
reboot
sudo rm -r -f <string>
sudo usermod -G <string>
ls
grep <string>
git config --local <file>
vi <file>
ls
git fetch upstream
wget <URL> -O <file>
ls
sort -nk <string>
source <file>
cd ..
exit
cd <string>
ls
cd ..
ls
sed <directory>
diff <file> <file>
rm <string>
git
clear
sort
touch --version
ls
exit <number>
sudo service <string>
curl -s <string>
cd <string>
git push origin master
mv -r <directory>
df
python3 <file>
exit
git diff --cached
sort -t: -k <string>
git commit -m <string>
cd <directory>
sudo xbps-remove <string>
sed <directory>
mkdir <string>
wget -r -A <URL>
fg
ls
cat <string>
rm -r <string>
unzip <file>
sudo dpkg -i <file>
git push origin
clear
cd <directory>
less
npm i
printf <string>
sudo getcap <directory>
cd <string>
sudo python <file>
cd <directory>
mkdir -p <string>
find . -name <string> -type <string>
git pull origin master
ls
cd <string>
cp <string>
git init
code <string>
sudo apt install <string>
npm run dev
ps -ef
xargs bat --diff <string>
ls
ls
ls
clear
curl -sSL <URL>
grep -i <string>
git commit -m <string>
cat <string>
git add .
git push
vim <file>
git add .
nano <file>
ls
ls
grep -r <string>
cd <string>
vim <file>
vim <file>
rm -rf <string>
ls
cd <directory>
uniq -c
git status
cd <string>
exit
rm <string>
git grep <string>
cd <directory>
clear
exit
npm run test
git switch main
clear
exit <number>
cd <directory>
exit
clear
ls -lah
clear
ls
cat <string>
ls
cd <string>
curl -o <string>
ls
cd <directory>
git add .
npm i
npm cache clean --force
mkdir <string>
ls
git status
cd <string>
grep <string>
php -v
du -skh <string>
cd <directory>
ls
wget <URL>
sudo systemctl start <string>
sudo pacman -Syu
rm -rf <string>
cd <directory>
read -r <string>
vim <file>
nano <file>
wget
git clone <URL>
cp -f <string>
fg
rm -rf <string>
cd <directory>
clear
cd <string>
sudo chown -R <string>
git commit -m <string>
sed -n -e <string> -e <string>
git add <string>
git reset
su -
cd <string>
ls
fg
mkdir -p <string>
setg RHOSTS <file>
cd
mv <string>
cp -r <directory>
git commit -m <string>
source <string>
git init
grep <string>
cd ..
sudo pip3 install <string>
time
top
ls
pwd
tail -10 <string>
ls
tar -tf <string>
docker events --since=<string> --filter <string> --format <string>
cd <directory>
clear
git clone <URL>
ls
awk <string>
wget <URL>
vim <file>
cp <string>
git status
vi <file>
cd <directory>
git status
find src
ls
ls
sudo curl -L <directory> -o <directory>
perl -pi -e <directory>
cd
python3 <file>
ls
git add .
sudo systemctl restart <string>
sudo systemctl enable <string>
rm <string>
ls
cd ..
cd <string>
sudo pacman -S <string>
cat <string>
git log --02_code1
grep <string>
ls
git add .
git pull
time <string>
curl -LJO <URL>
mkdir <string>
fg
git branch -m <string>
npm start
mount -t <string> -o <string>
exit
python <file> runserver 0.0.0.0:2016
git add <string>
sed -e <directory> -e <directory>
ls
git status
git add <string>
cp <string>
git commit -am <string>
sudo docker kill corrade
fg
sleep <number>
rm <string>
git status
git remote add origin <URL>
ls
ls
ls
git init
mv <string>
sudo xbps-install -Su
docker stop <string>
git config --global <file>
git commit -m <string>
cd <directory>
cd ..
chmod +x <string>
git add .
git push -u <string> main
cd <directory>
ls
sudo python3 <file> install
npm i
cd <string>
sudo pip3 install <string>
ls
git init
sudo npm install -g <string>
ls
telnet
git push origin main
ls
ls -l
curl -SL <URL> -o <directory>
python3 <file>
ps axfu
git checkout master
cat <string>
sudo -E <string> -
true
ls -ls
git push
cd ..
git init
git clone <URL>
psql -h <string> -U <string> -d <string> -L <file> -a <string>
exit
git pull --all -u <string>
cd ..
cd <directory>
npm test
sudo apt-get install <string>
cd ..
ls -lia
ls
ls
sudo lvremove <directory> --force
cd <directory>
history
find
grep <string>
cd <directory>
npx tslint --help
xargs sed -i <directory>
cd <directory>
ls -lh
journalctl
apt-get upgrade -y
ls
cd
less <string>
openssl
cd ..
rm -f <string>
sudo sed -i <directory>
cd <string>
ls
sudo shutdown
chmod +x <string>
cd ..
sudo python3 <file>
cd ..
ssh-agent <string>
git remote add origin <URL>
git init
sudo pip3 -h
git commit -m <string>
wget <URL>
ls
ssh-keygen
mkdir <string>
ls -lShra
ls -l
git remote add origin <URL>
ls
sudo apt install <string>
tail -f <directory>
ls
npm run start
git clone <URL>
npm install <string>
cd <directory>
cd ..
sudo make install
git commit -m <string>
ls -l
sed <directory>
uname -a
read -r -p <string>
curl <string>
git commit -m <string>
ls
xargs -I <string> git -C <string>
ls -l
ls
vim <file>
cd ..
code
sleep <number>
rm <string>
git add.
ls
sudo systemctl start <string>
cd
ls
cd ..
ls
cd ..
cd <string>
bash <file>
ping <file>
less <string>
clear
done
ls=<string> -ld <string>
ls
ping <string>
vim <file>
curl <string>
sudo sed -i <directory> <file>
ls
ls
gpasswd -a <string>
code <string>
cd ..
find . -iname <file>
git pull origin development
less
git add .
cd
clear
git push --all
clear
ps
cat <string>
cd <directory>
chmod u+x <string>
rm -r <string>
sudo chown <string>
read -rp <string> <string>
git add <string>
git push origin master
ls
vim <file>
git merge <string>
sudo apt-key add -
vim <file>
mkdir <string>
bash <file>
cd <string>
ps -auxwf
git add .
exit <number>
git checkout -B <string>
vi <file>
cd ..
cd <string>
yarn <string>
mkdir <string>
grep <string>
cd <string>
sudo reboot
man <string>
grep -i <string>
ls
cd <directory>
vim <file>
source <string>
ls
cd <string>
cd <directory>
rm -rf <string>
git commit
git clone <URL>
cat <string>
python3 <file>
git add <string>
sudo mv <file>
git remote add origin <URL>
git pull
ls
ls
cd <string>
git push -u <string> master
cd ..
ls
docker run -v <directory> --rm -it <string>
sudo vim <directory>
cd <string>
ls
vim <file>
cd <string>
sed -i <directory>
git commit -m"yyy"
mv <string>
systemctl status <string>
chmod +x <string>
wget -r -A <string> -nd <URL>
cd
git push origin master
ls
sudo vim <directory>
clear
cd ..
curl <URL> -u <string>
ls
apt-get update
ls
git difftool -y -x <string> <string>
ls
rm -rf <string>
sudo ntpdate -q <string>
date
cd <directory>
man <string>
ls
exit
git merge <string>
cd <string>
cd
ssh dirlic@10.18.0.39 -p <number>
find <directory> -name <string>
git push origin master
tcpdump -i <string> -v <string>
apt-get -y <string> <string>
vim <file>
ls
telnet <string>
sed <directory>
ls
npm start
fg
ls
ls
ls
ls
cd ..
ls
vi <file>
cp <string>
mkdir -p <string>
ls
read -r -p <string>
ls
ls
git add <string>
history
git add <string>
clear
node <file>
git push
grep <string>
curl <string>
git fetch --prune --tags
ls
cd <string>
git fetch
sudo dpkg-reconfigure console-setup
git status
cd <directory>
cd <string>
git init
chmod +x <string>
find . -name <string> -exec <string> <string>
ls
rm -rf <string>
git commit -m <string>
sudo vim <directory>
git add .
man <string>
rm <string>
cd <directory>
npm run start
ls
git commit -m <string>
xargs -0 <string> -i -e <directory> <string>
ls
vim <file>
xargs -0 <string> <string>
vi <file>
else\
git add .
cd <string>
git submodule add <URL>
git --version
ls
ls
vim <file>
mv <string>
python3 <file>
git commit -am"first"
curl -v -H <string>
cd <directory>
bash <file>
vi <file>
git commit -m <string>
ls
cd <string>
git clone <URL>
cd <string>
cd <string>
git status
git commit -m <string>
ls
ls -la
then\
apt-get install <string>
cd <directory>
git add .
exit
cd <directory>
top
cd
clear
man <string>
sudo vi <directory>
git remote add origin <URL>
cd <string>
cd ..
cd <string>
sudo vi <file>
grep <string>
clear
top
git add .
sudo dpkg --configure -a
cd
cd ..
git commit
rev
fg
git remote -v
ls
git commit
git commit -m <string>
less <string>
sudo systemctl status <string>
pwd
git init
wget -P <directory>
systemctl status <string>
npm i -D <string>
ls
rm -r <string>
ls
vim <file>
sudo chmod +rwx <string>
vi <file>
chmod u+x <string>
exit <number>
git fetch upstream
cd <string>
ls
git -v
ls
vi <file>
cd <string>
cd <directory>
cat <string>
cd ..
ls
touch <file>
git push
sudo find <directory>
cd <string>
tail -f <string>
cd <directory>
ls
cp <string>
sudo pacman -Syu
rm <string>
vim <file>
cd <string>
kubectl apply -f <string>
cd <directory>
apt-get install <string>
ls
cd <string>
git status
ls
ls
ls
vi <file>
git add <string>
ls -la <directory>
cd <directory>
docker cp <string>
ls
cut -c <string>
clear
docker-machine ssh <string>
git commit -m <string>
sudo pacman -S <string>
history
apt-get -y <string> --no-install-recommends
cd <string>
cd <string>
python3 <file>
git merge develop
vim <file>
sudo apt-get update
ls
git clone <URL>
cp <string>
cd <string>
cat <string>
ps aux
cd <directory>
nano <file>
more
nohup java -jar <string>
npx tslint --config
dpkg -i <file>
ls
unset <string>
htop
fg
cd ..
sudo python -m <string>
git add .
ls
diff <file> <file>
ls
ls
rm <directory> -rf
git push
sed -i <directory>
ls
rm -rf <string>
ls
mkdir <string>
exit
git config --global <file> <file>
git add <string>
cd <directory>
ps ax
vi <file>
git commit -m -a <string>
ls
exit
rm -rf <string>
clear
rsync <directory>
sudo modprobe <string>
git add <string>
cd
git remote -v
ls
rm -r <string>
curl -O --retry <number> --retry-max-time <number> -C - <string>
ls
sudo start uwsgi
ls
ls
git commit -m <string>
ls -latr
git restore <file>
ls
cd <string>
rm -rf <string>
cd <directory>
ls
sudo apt update
git push
git push heroku main
rm -rf <string>
git clone <URL>
git commit -m <string>
ls
touch <file>
cat <string>
sudo su
sudo apt-get purge -y <string>
clear
clear
git push
dpkg --get-selections
cd <string>
vim <file>
git commit
cd <string>
bash <file>
exit
cd <directory>
git status
git push
sudo apt-get install -y <string> -r`
ls
ls
wget -q -c <string> -O <file>
chmod <number> <string>
sed -n <string>
cd ..
git pull
ls
sudo chmod <number> <directory>
cd <string>
ls
sed <directory>
rm -f <string>
vim <file>
find . -name <file> -type <string> -exec <string> -rf <string>
grep <string>
cd <string>
git init
cd <string>
mv <string>
sudo npm install
cp <string>
pwd
curl -fLSs <URL>
git status
cd ..
clear
ls
ls -al
git add .
git commit -m <string>
sudo update-rc.d <string>
git commit -a
cd <string>
cd <string>
git commit -m <string>
clear
git add <string>
cd <string>
vi <file>
npm i
exit <number>
cd <directory>
ls
cd
pwd
python3 <file>
vi <file>
sudo groupdel <string>
git add <string>
cd <string>
podman run <string>
git push -u <string> main
sed -E -e <directory>
cd ..
apt upgrade
ls
git commit -m <string>
cd
cd <string>
ls
mv <string>
ls
docker commit <string>
fg
git pull origin development
git describe --long
grep -E <string>
pwd
curl -sL <URL>
ls
git init
ls
cd <directory>
cd
ls
exit <number>
vi -t <string>
ls
ls > <file>
xargs --null <string> -nHP <string>
sudo python3 <file>
ln -L <string>
vim <file>
sudo apt-get update
nano <string>
ssh -tt -L <string>
ls -al
ls
ls
docker pull <string>
vi <file>
ls
rm -rf <string>
sudo sed -i <directory>
ls
service <string>
ls -a
git -C <string>
grep <string>
cd ..
ps -ef
mv <string>
ls
ls
vim <file>
cd <directory>
ls
ls
git init
cd <directory>
git hist
clear
ls
clear
rm -rf <string>
wget <URL>
rm -rf <string>
pwd
curl -L <URL>
pwd
git add .
git commit -m <string>
git commit -m <string>
rm -r <string>
sudo python <file> --cascade=<file> <number>
ln -s <string>
ls -a
docker pull <string>
git push origin main
sudo sed -i <directory>
rm -f <string>
git push -u <string> master
git add <string>
uname -a
code <string>
ls
cd <directory>
git status
timedatectl set-timezone <directory>
ls
rm <string>
vi <file>
git commit --allow-empty -m <string>
cd <string>
git push
ls
touch <file>
ls
sudo rm -rf <directory> <directory>
ls
ls
cd
vi <file>
docker-compose up -d
top
rm -rf <string>
git push origin master
git branch -M <string>
<directory> <string>
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ls
do-release-upgrade -m <string> -f <string>
git log
curl --silent <string>
cd ..
ls
git status
ls
sudo mv <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
npm -v
vim <file>
apt-get update
cd <directory>
ls
git add .
npm install
cat <string>
cd ..
mkdir -p <string>
ls
git remote add origin <URL>
fg
ssh <string>
tmux a
git checkout <string>
sudo apt-get purge <string>
git commit -m <string>
cd <directory>
cd <string>
ls
export
cat <string>
cd
cd <string>
awk <string>
fg
npm install react-player -f
curl <directory> -qO- <URL>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
vim <file>
exit <number>
clear
cd <directory>
cd <string>
curl -L <URL>
git status
kubectl delete --filename <file>
vi <file>
vi -t <string>
vim
cd <string>
git init
ls
cd <string>
git init
git add <string>
ls
git fetch upstream
ls
npm run test
git commit -m <string>
ls
clear
npm run coverage
git add -A
curl -o- <URL>
find src
npm run frontend
ls
rm <string>
rm <string>
clear
mv <string>
git commit -m <string>
curl <string>
find . -type <string> -name <string>
mkdir -p <string>
ls
git config --global <file> <string>
ps ax
clear
rm -r <string>
exit
sudo apt install <string>
nano <string>
ls
ls
pwd
pwd
sudo chmod a+rwx <directory>
clear
mkdir <string>
sed -i <directory>
python3 <file>
ls -la
ls
git status
ls
cd <string>
ls
sort -nr
cd <string>
cd <string>
lsblk
git add .
python3 <file>
clear
git remote add origin <URL>
ls
sudo apt update
ls
sudo xbps-install -Su
apt-get install <string>
dir
sudo ip route add <string>
read <string>
exit
curl -sSL -o <string>
cd <string>
git remote add origin <URL>
git add --all
mv <string>
clear
cd <string>
ls
cat <string>
exit <number>
ls -d
ls
cd <directory>
sudo ifconfig en0 ether <string>
done
ls
cd <string>
rm -rf <string>
git config --global <file> <string>
fg
clear
ls
git commit
ls
pacman -S <string>
clear
cd <string>
cp -source -destination
ls
cd ..
git merge develop
cd <directory>
docker compose up -d
ls
cd
tmux source <file>
dpkg-reconfigure <string>
git commit -m <string>
cd <string>
ls
cd <directory>
ls -l
sudo apt install <string>
cd <string>
sed -i -e <string>
cd <directory>
less
git commit -m <string>
ls
ssh <string>
sudo rm -rf <directory> <directory>
cd <string>
ls
ls
wget <URL>
curl -fLo <file> --create-dirs <string>
ip a
cd <string>
ls
sort -nr
git add .
cd <directory>
cd
ls
apt-get update
cd <directory>
ls
df -GB
fg
docker network ls
wget -nd -m -nv <URL>
ls
git branch -M <string>
cd
sudo rm -rf <string>
ls
pwd
sort -nr
git push
grep <string>
vi <file>
ls
rm -rf <string>
ls
cd <string>
python3 <file>
sudo update
cd <string>
ls
cd <directory>
cd
sudo rm *
clear
git push origin master
find <directory> -type <string>
mkdir <string>
brew cask <string>
git rebase <directory>
terraform <string>
systemctl restart <string>
docker image ls
read -p <string>
git branch -M <string>
exit <number>
sudo -u <string>
clear
dmesg
cd <directory>
nc <string>
git remote update <string>
kill <number>
ls -la <directory>
exit
git clone <URL>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
alias <string>
ls
fg
cd <string>
cd ..
git status .
find `pwd` -name <string>
ls
cp -r <directory>
git push --set-upstream <string>
cd <string>
bash
history -a
curl -s <string>
git status
cd ..
apt-get update
ls
sudo ln -s <directory>
nano <file>
sudo nginx -t
sudo sed -i <directory> <file>
su -s <string>
git add .
scp <string>
curl -LO <string>
ls
npm run frontend
git clone <URL>
git init
git status
cd ..
chmod <string>
git add .
rm -rf <string>
mkdir <string>
sed -E -e <directory>
rm <string>
head -n <string>
vim <file>
sudo apt install <string>
ls
mkdir -p <string>
su deployer -c <string>
cat <string>
ls
mkdir -p <string>
set -e
cd <string>
git
pushd <directory>
ps
ls
rm -r <string>
clear
cd <string>
cd <string>
git status
ls
ls
find . -perm <number>
ls
vi <file>
ls
rm <string>
cd <directory>
mv <string>
killall <string>
mkdir <string>
su root
grep <string>
ls
sudo rsync -rltgoDvzhP --exclude <string> --exclude <string> --exclude <string> --exclude <string> --exclude <directory> --exclude <directory> --exclude <string>
ls
ls
ls
find <directory> -name <file>
cd
ls -lh
ls
git push -u <string> main
chmod <number> <string>
less <string>
ls
sudo pacman -S <string>
git stash pop
sudo systemctl start <string>
ls -lt
fg
fg
cp <string>
ls
ls
vim <file>
sleep <number>
ls
ls
vim <file>
ls
less
do\
<directory> <string>
done\
ls
sudo reboot -h <string>
ls
cd <string>
curl -X <string> -H <directory> -d <string>
cat <string>
git commit -am <string>
sudo bash -c <string>
read -rp <string> <string>
ls
git commit -m <string>
tail -f <directory>
read -r -p <string>
cd ..
docker ps -a
ps aux
ls -la
git checkout <string>
git pull origin master
pwd
vim <file>
ls
ping <string>
fg
rm -rf <string>
rm <string>
<string> - <string>
python3 <file>
exit <number>
ls
vim <file>
clear
fzf +s --tac
sed <directory>
sudo chmod a+wr <directory> -R
rm <string>
ls
done
cd
clear
ls
docker rmi <string>
ls
sudo pacman -S <string>
npm install -g <string>
lsblk
ls
sudo journalctl -u <file>
ls
git remote add origin <URL>
ls
ls
git init
git status
sudo flatpak <string>
sudo apt install <string>
ls
rm <string>
ls
brew install <string>
exit <number>
chmod <number> <string>
head
ls
git push -u <string> master
ping
awk <string>
fg
df -lh
vi <file>
git pull
vim <file>
exit
git init
cd <directory>
cd <string>
groups <string>
systemctl status <string>
python3 --version
history
clear
ls
curl -fLo <file> --create-dirs <string>
curl -L -o <string>
git status
ls
git add .
cd <string>
cd..
cd <string>
local <string>
vim <file>
sudo subl <string>
git commit
date
sudo make clean install
ls -R
sudo apt install <string>
git push --force <string>
clear
ls -al
cd <directory>
exit
npm install -f
cat <string>
grep --binary <string>
bash
ssh <string>
git pull
vi <file>
su
docker image ls
git add <string>
mkdir <string>
ls
git push
cd <string>
yarn <string>
sudo apt install <string>
cd <directory>
cd <directory>
git push -u <string> master
touch <string>
sudo ls <directory>
clear
npm run dev
bash <file>
sort -rn
sudo sgdisk -d <number>
sudo apt-get install <string>
sudo curl <URL>
export <string>
ls
grep -r -H -B1 <string>
top
brew services info <string>
cat <string>
cd <string>
cd <string>
npm run test
git init
git add .
npm install <string>
man <string>
sudo ufw allow <string>
cd <directory>
git add .
sudo apt-get purge <string>
sudo airport <string>
ls
more <file>
sudo zypper se <string>
exit
cd <string>
git commit
mkdir <string>
chmod <string>
docker ps
git stash
rm -f <string>
git add -A
git reflog
rm <string>
sudo python <file> --cascade=<file> <number>
ping
git init
sudo reboot now
chmod <string>
rm -rf <string>
ls
sudo apt-get update
git stash
shutdown -h <string>
git init
sudo docker exec -it <string>
cd <directory>
vi <file>
grep --help
vi <file>
ls
vim <file>
exit
git add .
clear
source <directory>
cd <string>
cd <string>
scp <string>
cd ..
vim
git status
ls
ln -T <directory>
rm <string>
grep
ln -s <string>
sort -h
ls
mv <string>
ls
ls
rm <string>
git push origin <string>
chmod +x <string>
git add <string>
clear
sudo sed -i <directory> <file>
ls
git status
clear
pwd
sudo cp <string>
sudo stop uwsgi
git log $* --name-status --color
git push origin master
ls -la <directory>
git status
cd <string>
clear
clear
find . -name <string> -type <string>
sed -i <string>
exit
sudo <directory> restart
source <directory>
ls
chmod +x <string>
mv <string>
sudo apt upgrade
subl <string>
ls
sudo make
ls
sudo cp <string>
chmod u+x <string>
cd <string>
mv <string>
npm run start
npx create-react-app <string>
git commit -m <string>
ls
unset color_prompt force_color_prompt
ls
ls
cd ..
sudo flatpak override --reset --env=<string>
unset <string>
exit <number>
unzip <file>
cp -r <directory>
git commit -am <string>
cd ..
git push
wget <URL>
sudo fail2ban-client set <string>
sudo aptitude install <string>
sudo sed -i <directory> <file>
ls
kubectl rollout status deploy controller -n <string>
git add .
ls
chmod <string>
docker compose up -d
ls
ls
systemctl restart <string>
sudo rsync -aXS <directory>
chmod <number> <string>
sudo apt update
ls
history
grep -P <string>
date
<directory> <directory>
cd <directory>
ls
sudo apt list --upgradable
exit
ls -l
ls
cd <directory>
ls
git push
ls
ls
ls
sudo apt-get remove <string>
apt-get update
shutdown -h <string>
cd <string>
ls
git branch
vim <file>
cd <string>
curl <string>
cd
mvn compile
apt list --upgradable
ping <file> -A
ls -l
rm <string>
git add <string>
source <string>
cd <string>
git status
cd <string>
find . -empty -type <string> -print -delete
git clone <URL>
cd <string>
exit
ls
vim
curl --fail -s <string>
git add .
exit
sudo nano <string>
sudo vi <directory>
git commit -m
git add .
sudo apt-get remove --purge <string>
git add <string>
fg
cd <directory>
ls
git pull
exit
ls
sudo rsync -av --progress <directory>
ls
ls
ps aux
git commit
ls
cd ..
npm start
vim
git checkout <string>
vi <file>
cd <directory>
git filter-branch --index-filter <string> HEAD
clear
git checkout <string>
git add <string>
ls
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd ..
ls
rm -f <string>
apt install <string>
sudo pacman -S <string>
rm <string>
git clone <URL>
rake <string>
ls
ls -a
cd <string>
pwd
rm <string>
awk -F/ <string> -1
npm install
ls
apt-get update
clear
git commit --amend --no-edit --no-verify
git init
ls -l
cd <directory>
ls
cut -d <string> -f <number>
killall <string>
vim <file>
cd <directory>
rm <string>
vi <file>
sudo apt install <string>
ssh <string>
ls
tail -f <string>
vim <file>
mvn compile
rm -f <string>
sudo systemctl start <string>
npm run dev
rm -rf <string>
rm -r <string>
ls
mkdir <string>
dpkg --no-force-overwrite -i <file>
cd <string>
ls
ls
ls
vi <file>
sudo pip install --upgrade <string>
vi <file>
cp <string>
cd <directory>
find $dir -type <string>
ls
curl -fsSL <URL>
xclip
mkdir <string>
git add <string>
cd
cd <string>
cd <directory>
cd <string>
cd <string>
mkdir <string>
ls
ps -aux
cd <string>
npm i <string>
awk <string>
git status
ls
sudo apt update
view <string>
sudo firewall-cmd --zone=<string> --add-service=<string> --permanent
ls
vim <file>
ls -a
man <string>
cd <string>
grep -n <string> <directory>
npm audit fix -f
vi -t <string>
sed -r <directory> > <file>
cd
chmod <number> <string>
sudo start uwsgi
clear
sleep <number>
pwd
vim <file>
git checkout -
ls
cp <string>
vim <file>
systemctl status <string>
pwd
exit <number>
read -s -n <number>
tmux attach
ls -ltr
vi <file>
du -sh
cd -
grep <string>
ls
brew install <string>
ls
git commit -m <string>
ls
fg
ls -l
git push origin master
service apache2 restart
cut -d <string> -f <number>
cd
grep -i <string> >files
ps aux
grep <string>
ls
vim <file>
git rebase --continue
cd <string>
ls
mv <string>
ls
vim <file>
cat <string>
cd <string>
ruby -run -e <string>
git branch -m <string>
git commit -m <string>
cd ..
vim <file>
tail -f <string>
cd ..
ls
ls
sudo ls
chmod <string>
sudo apt-get update
cd <string>
fg
cd <string>
sudo timeshift --create --comments <string> --tags <string>
ls -a
git pull
ls
cd <directory>
git push
yarn <string>
sudo add-apt-repository -y <directory>
git status
find
ls
git push -u <string> master
vim <file>
docker service create --mount <string>
git status
service <string>
wget --version
su
ls
cd <string>
chmod <number> <string>
rm -rf <string>
cd <string>
npm run test
git reset
ls
cat <string>
git branch
cat <string>
exit
git fetch
git status
vim <file>
sudo chmod +x <string>
sudo systemctl status prometheus
date
ps aux
ssh-copy-id <string>
cd <directory>
cd ..
cd ..
cd ..
rm <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
history
ls -la
sed <directory>
node --version
npm run coverage
git push -u <string> master
git push --set-upstream <string>
git remote -v
git push -u <string> master
git remote add origin <URL>
git commit -n <string>
cp -r <directory>
code .
git status
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
capsctrl <directory> & disown
ls
rm -f <string>
sudo sed -i <directory> <file>
ls
git commit -m <string>
git status
man <string>
cd <string>
git commit -a -m <string>
cd <string>
cd <directory>
cp <string>
sudo zypper install <string>
ls
git pull
reboot
cd <directory>
cd <string>
ls
cd
cd <string>
git add .
exit
clear
cd ..
ls
ftp <string>
read -r <string>
rm -r <string>
sed -i <string>
sudo apt-get update
cd ..
history
ls
cd <string>
git remote add origin <URL>
sudo dpkg-reconfigure <string>
git add .
npm run test
git add <string>
git stash pop
npm install
ls -la
cd <string>
ls
npm audit fix -f
ps aux
ls
rm -f <string>
mv <string>
ls
cd <string>
ls
sudo usermod -a -G <string>
cd <directory>
sudo apt-get install -y <string>
sudo chmod a+rwx <directory>
git push
fg
ls
fg
ls
ls
exit
head -n <string>
ls
git commit -m <string>
vi <file>
unset <string>
read -r -p <string>
ls
ls
ls -l
lsof -u <string>
touch <file>
ls
sudo apt install <string>
vim <file>
ls
open .
grep <string>
cd <directory>
cd <directory>
git commit -m <string>
cd <string>
sudo reboot
fg
git status
ssh-copy-id <string>
git add .
grep <string>
sudo apt install <string>
ls
ls
fg
ls
git co
cd -
cd <string>
nano <string>
clear
chmod +x <string>
sudo chmod <number> <string>
top
git add <string>
mv <string>
git push origin main
sudo apt-get install <string>
sed <directory>
sudo apt-get purge nodejs --auto-remove
cd <string>
cd <string>
git push --set-upstream <string> main
chmod <string>
mkdir -p <string>
wget -qO- <URL>
ls++ -a
cd ..
git pull
chmod <number> <string>
grep <string>
git diff --no-ext-diff --quiet
rm -f <string>
cd <string>
ls
git status
ls
cd ..
ls
vim <file>
ls
mkdir <string>
ls -l
cd <string>
vim <file>
ls
ls
pacman -S <string>
cd <string>
sudo mount -t <string>
git commit -m <string>
vim <file>
cd <string>
cd <directory>
ls -lh
sudo pacman -S <string>
git push origin master
ls
ls
sudo npm
ls
sudo grep <string>
chmod +x <string>
git push origin main
sudo apt install <string>
sudo pcmanfm
ln -sf <directory>
vim <file>
systemctl restart <string>
sudo halt
touch <string>
git fetch
ls
pwd
env
read -p <string>
nano <file>
nano <file>
man <string>
git add <string>
ls
ls
grep <string>
sudo usermod -a -G <string>
vim <file>
service apache2 reload
ls
git status
git add <string>
ps xjf -u <string>
git add <string>
ls
wc -l
vim <file>
ls
git checkout <string>
exit
ls
cp <string>
scp <string>
ls
ls
git commit --amend
ls
sudo rm -rf <string>
cd <directory>
cd ..
cd ..
ls
ssh <string>
git remote add origin <URL>
sudo npm install -g <string>
exit
cd ..
git branch
exit
cd <directory>
cat <string>
done
fg
exit
ls
sudo apt-get install <string>
source <directory>
python3 <file>
git status
chmod +x <string>
sudo find <directory> -name <string>
cd ..
clear
ls -l
ls
sudo apt-get clean
grep <string>
man <string>
git clone <URL>
vi <file>
cd <string>
touch <file>
clear
ls
ls
rm -f <string>
sed -i <directory>
cd <string>
clear
mkdir <string>
clear
grep <string>
ls
cd <string>
ls
sudo apt install <string>
cd <string>
npm i -D <string>
sudo docker rm corrade
clear
fzf -m
exit
git add .
exit
sudo apt purge <string>
nano <file>
clear
cd <string>
ls -a
sudo service <string>
ls -ltr
systemctl stop kubelet
cd
git add <string>
sudo docker kill corrade
sed <directory>
git branch -v
sudo apt-get -y <string>
nohup
rm -f <string>
docker run -d
grep <string>
ln -s <string>
ls
clear
cd <string>
ssh-keygen -t <string> -C <file>
kubectl --namespace <string> <string>
ls
sed <directory>
mkdir <string>
exit
ls -a
cd <string>
find <directory> \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <string> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file>
git --version
cd ..
ls -la
git checkout <string>
cp -r <directory>
npm install <string>
clear
python3 <file>
cd <directory>
cd <string>
ls
git branch
git status
stat <file>
ls
git add --all
cd <string>
pacman-key --populate <string>
open .
done
apt-get upgrade
git push -u <string> master
unset color_prompt force_color_prompt
ls
sudo rsync -av --progress <directory>
git branch
sudo systemd-nspawn -D <directory> --bind=<string> --bind=<string> <string> -c <string>
git status
ls
sudo systemctl status <string>
git pull
grep -i <string> >files
clear
mkdir <string>
wget -P <directory>
ls
chmod <number> <string>
sudo systemctl status <string>
exit
vim <file>
ls
git push origin master
ls
code <string>
cd <string>
cd <string>
git --version
ls
rm <string>
find <directory> -iname <file> -mtime <string> -exec <string> -f <string>
read -rp <string> <string>
git commit
ls
ls -a
ls -lah
ls
git push -u <string> main
sudo git reset <string>
git clone <URL>
man <string>
cd <string>
sudo apt install -y <string>
sudo aura -A <string>
sudo systemctl start <string>
npm install
ls
ls
clear
sudo systemctl enable <string>
<directory> <string>
sudo apt-get install -y <string>
sudo rm -rf <directory> <directory>
exit <number>
git status
vim
ls -a
sudo rm -rf <directory> <directory>
git commit -am <string>
cd <directory>
curl -T <directory> <string>
git commit -m <string>
cd <string>
git remote add origin <URL>
find . -iname <file> -exec <string> <string>
git push origin main
docker-compose down -rmi <string>
sudo apt autoclean -y
mv <string>
python3 <file>
git push -u <string> main
df -h
clear
git push -u <string> main
ls
ls
cd ..
sudo docker ps -a
vim <file>
cd <string>
ls
ls
ls
ls
sudo apt-get -y <string>
git push -u <string> main -f
mv <string>
cd ..
npm run devstart
git pull
clear
ls
ls
sudo systemctl status <string>
sudo umask <number>
cd ..
ls
sudo ntpdate
fg
vi <file>
vim
docker compose -f <file>
ssh-agent
mv <string>
exit
mkdir -p <string>
rm -r <string>
ls -la
mkdir <string>
clear
cd <string>
tail -f <string>
tmux kill-session -t <string>
npm run dev
df -h
sudo apt upgrade
rm passwords -rf
npm run
cd ..
cd ..
cat <string>
mvn compile
docker stop <string>
ls
git commit -m <string>
cd ..
cd <string>
ls
rm <string>
clear
ls
git fetch
exit
cd
find . -empty -type <string> -print -delete
cd <string>
vim <file>
tail -f <directory>
sudo python <file> --cascade=<file> <number>
cd <string>
git clone <URL> --force
cd <string>
git stash
sudo systemctl enable --now <string>
ls
rmdir <string>
docker-compose build <string>
pwd
vim
exit <number>
git status
npm start
git status
git status
ls
mv <string>
git status
sudo apt-get install <string>
grep <string>
clear
ls
fg
vim <file>
ls
source <file>
python3 <file>
ls
cp -r <directory>
ls
ssh-copy-id
chmod +x <string>
rm -r <string>
ls
ls
sudo sed -i <directory> <file>
mkdir <string>
sudo python <file>
npm install --save <string>
cd <string>
cd <string>
ls
vim <file>
git commit -m <string>
cut -d <string> -f <number>
git add .
python3 <file>
grep --help
sudo sed -i <directory> <file>
cut -c <string>
cd <directory>
grep <string>
ls
locate -i <string>
ls
ls -la
sudo pacman -Ss <string>
cat <string>
done
python3 --version
pwd
mv <string>
sudo gpg --dearmor -o <directory>
sudo apt update
docker-machine <string>
ls
sed -i <directory>
git pull --all
ls
vim <file>
ps auxf
cat <string>
ls
tr <string> <string>
code .
git log
vi <file>
cd <string>
ls
git add .
ls
sudo apt-get clean -y
ls
ls
exit
sudo chfn <string>
mkdir <string>
cd <string>
vim <file>
clear
cd
exit <number>
cd <string>
sed -i <directory>
ls
exit <number>
rm -f <string>
ls
git push -u <string> master
ls
cd <string>
rm <string>
sudo dnf install <string>
kill -9 <number>
sudo apt update
ls
clear
exit
fg
git commit -m <string>
cd <string>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
ls
git remote add origin <URL>
git add .
cat <string>
dir
git clone <URL>
git co HEAD .
cd <directory>
exit
sudo apt update
git add .
git push -u <string> main
git add .
cd ..
ls
grep -E <string>
vim <file>
git push
cat <string>
mv <string>
ls
ls -al
exit
alias <string>
vi <file>
ls -l
fg
git pull
python3 <file>
vim <file>
rm -r <string>
npm-recursive-install
mv <string>
git pull
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
cd <directory>
rm -rf <string>
git push origin master
cat <string>
cd <string>
sudo apt-get update
cd <string>
cd ..
ls
git push origin
git push -u <string> main
top
curl -so- <URL>
apt-get update
journalctl
git status
git commit -m <string>
date
curl <string>
sudo apt purge <string>
diff <file>
sudo apt-get clean -y
ls
su root
unset <string>
sudo apt install <string>
exit
cd <string>
git pull
sudo add-apt-repository <string> [arch=<string> <URL>
cd ..
grep -E <string>
rm -r <string>
ssh <string>
docker ps -a
ls
git add <string>
git stash
git remote add origin <URL>
sudo start uwsgi
clear
ls
exit
vim
perl
sudo python <file>
ls
cd -
ls
git add -u
cd <string>
vi <file>
cd <string>
history
vim <file>
chmod +x <string>
cd <string>
git add <string>
time go run <file>
vim <file>
ls -a
ls
tee -a <string>
git commit -m <string>
git init
sudo apt-get install <string>
rm -rf <string>
cd <string>
cat <string>
cat <string>
exit <number>
npm run test
read -d <string>
cp <string>
pwd
git adog
vi <file>
cd <string>
vi <file>
grep -i <string> >files
do\
git add .
git branch 2> <directory>
fg
git status
npm i <string>
sudo dpkg -i <file>
mkdir <string>
npx <string>
sudo apt install <string>
git push
cd <directory>
sudo apt install <string>
vim <file>
sudo apt install <string>
vi <file>
cd <string>
cd
ls
sort -n
cd <directory>
cd ..
grep <string>
shutdown
vim <file>
git push
ls
git add .
ls
git add -A
git pull
sudo apt-get install <string>
cd..
sudo apt-get remove -y <string>
docker exec -it <string> bash
apt search <string>
curl -s <URL> -o <directory>
tail -f <directory>
cd <string>
ls
vim <file>
ls
rm <string>
git add .
npm i <string>
du
cat <string>
php <file>
python3 <file>
cd <directory>
screen -r
vi <file>
ls -ltr
git push
sed <directory>
git remote add origin <URL>
cd ..
ls
sudo chmod -R <number> <string>
cd <string>
ls
ls
ls
tmux
vi <file>
wget <URL>
ls
ls -l
find . -name <string> -type <string> -prune -exec <string> -rf <string>
git add .
clear
cat <string>
ls -l
ls
ls -la
sudo apt-get install -y <string>
git remote -v
cd <directory>
df
cd <string>
git commit -am <string>
xargs -0 -I <string> cat file <string>
find . -name <file>
vi <file>
ls
git add .
service apache2 reload
ls
sudo -i
read <string>
ls
bash
docker cp <string>
python3 <file>
nano <file>
cd <string>
ls
mkdir <string>
mkdir -p <string>
exit
sudo su -
git add .
ls
clear
ls
cd ..
sudo cp <string>
cd ..
cd <string>
cd <string>
fg
ls
ls
npm create vite@latest
sudo nano <directory>
grep <string>
su root
ls -la <directory>
sudo cp <string>
ls
ls
ls -alrt <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
sudo apt-get -y <string>
git fetch
sudo gem install <string>
cd <string>
apt update -yy
cd <directory>
mv <string>
cat <string>
ls
git remote add origin <URL>
cp -r <directory>
exit
sudo make install
ls -l
cd ..
git clone <URL>
apt install <string>
vim <file>
clear
ls
sudo add-apt-repository <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
cd ..
ls
vim <file>
sudo nano <directory>
git commit -m <string>
ls -la
git init
git init
docker images ls
git config --global <file> <file>
ls
uname -a
clear
read -p <string>
fg
ls
ls
grep <string>
ls
ls
npm --version
ls
chmod +x <string>
find . -type <string> -exec <string> <directory> {} +
cd ..
printf <string>
ls
sudo apt-cache search <string>
sudo python3 <file> install
find $dir -type <string>
git commit
rm -rf <string>
cd <directory>
git add .
rm <string>
node <file>
read -sp <string>
du -d <number> -xh <string>
sudo systemctl restart nginx
ls
git status
cd ..
mkdir <string>
umount <directory>
ssh dirlic@10.18.0.39 -p <number>
htop
sort -hr <string>
git add <string>
ls
ls
cd ..
man <string>
vi <file>
open .
git push -u <string> bryan-guner
clear
git clone <URL>
vim <file>
apt-get -y <string> <string>
make install
cd <directory>
git remote add origin <URL>
sudo systemctl stop <string>
nano <file>
docker-compose up -d --build
sudo lsof -i <string>
exit <number>
git clone <URL>
exit
mkdir <string>
sudo apt update
mv <string>
git reset --hard <string>
cd <directory>
cd <string>
cd <string>
git commit -m <string>
curl <URL> -u <string> -d <string> -d <string> -d <string>
cd <directory>
grep -r <string>
ls
python3.11 <file>
ls
cd ..
ls
exit
ps -aux
vi <file>
ls
vim <file>
code .
top
ls -alrt
ssh-add <directory>
cd <string>
sudo certbot --nginx -d <file>
cd ..
clear
vim <file>
sudo emacs <string>
sudo apt-get install <string>
rm <string>
gpasswd -a <string>
cd <directory>
ls
pbcopy
sudo apt -get <string>
clear
sudo vi <directory>
mkdir <string>
cat <string>
npm-recursive-install
git push
sed <directory>
git commit -m <string>
chmod +x <string>
vi <file>
cd <string>
ls
screen -r <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
vim <file>
grep -E <string>
ls
curl <string>
cd <string>
ls
ls -l
ls
cd <string>
find . -empty -type <string> -print -delete
source <string>
chmod <string>
clear
cat <string>
source <directory>
git log
git status
clear
ls
ls
setg RHOSTS.*
sudo sed -i <directory> <file>
ls -al
clear
ls
docker exec -it <string> bash
cd
su - <string>
git commit -m <string>
git fetch
mv <string>
npm i <string>
ls
git pull
sudo apt-get update
sudo stop uwsgi
cat <string>
ls
ls
git pull
sudo apt-get install <string>
vim <file>
sudo apt-get install -y <string>
git add .
cd <directory>
python3 <file>
ps # <string>
chmod u+x <string>
ps -aux
nohup python3 <file> <string>
ls
ls
vi <file>
reboot
cd <directory>
uname -r
cd <string>
ls
rm -f <string>
ls
pwd
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE <string>
git add .
ls -ltr
cd <string>
ls
ls
sudo pacman -S <string>
exit
ls
ls
grep -vE <string>
grep <string>
pwd
sudo apt upgrade -y
cat <string>
more
cd <string>
cd <directory>
cd ..
cut -d <directory> -f <number>
git push -u <string> master
git restore <file>
git commit -m <string>
clear
openssl rand -hex <number>
ls
cd <string>
rm -r <string>
clear
su - <string>
git commit
vim <file>
sudo apt-get dist-upgrade
ls
cd <string>
cd <directory>
git status
git commit -m <string>
ls
sysctl <string>
docker-compose up -d --build
git status
clear
ls
mv <string>
ssh-keygen -t <string> -b <number>
ps -auxwf
cd <directory>
cd ..
git push
sh <file>
git config <file> <file>
git add .
date <string>
ps -auxwf
npm install -D <string>
ls
cp <string>
ls
sudo python <file>
cd <string>
ls
cd <string>
cd
ls
ls
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
ls
git status
git add .
cd ..
git br -t <string>
ls
node <file>
vim <file>
ls
ls
cat <string>
cd <string>
mv <string>
cat auteurs -e
sudo apt-get update
git add .
find dir -iname <string>
rm <string>
npm test
cd
ls -al --time-style=<string>
lshw
ls
cd <directory>
cd <string>
rm <string>
ls
ip a
ls -la
grep -a -i -E --no-filename <string> */*.log*
cd <string>
ls -lah
ls
sudo systemctl start <string>
git config --global <file> <string>
exit
cd <string>
git add .
sudo sudo lvremove <directory>
pwd
git add --all
find . -empty -type <string> -print -delete
cd <string>
sudo shutdown now
ls
chmod
git commit -m <string>
rm <string>
python3.11 <file>
cd <string>
ls
fg
ls
cd <directory>
cd <string>
cat <string>
cd <directory>
ls
git commit -m <string>
shutdown -hP
ls
sudo pacman -Sy
sudo nala purge <string>
chsh -l
ls
done
grep <string>
ls
cd ..
code .
cat <string>
vi <file>
vim <file>
clear
vim <file>
git status
history
git branch
git commit
sudo apt install <string>
ls
ls
vi <file>
systemctl stop docker
vi <file>
ls -L
vim <file>
sudo apt-get autoclean
npm run build
sudo gem install <string>
cd <string>
sudo apt purge <string>
cd <string>
ls
ls
reboot
git diff
fg
git push -u <string> master
cd <string>
wget -q <URL> -O <file>
clear
npm start
git commit -m <string>
wget -q -O <file>
cd <directory>
git remote add origin <URL>
git st
read -r <string>
nano <file>
ls
cd <directory>
pkill <string>
vi <file>
cd <directory>
cd <string>
systemctl start <string>
rm <string>
git push -f <string> <string>
clear
sudo poweroff
cd ..
touch <string>
git add .
sudo apt install <string>
ls
ls
ls
ls
git checkout master
git init
docker rmi <string>
git init
git status
tmux a
clear
ls
sudo apt install <string>
df
cd <string>
sudo apt install <string>
code <string>
pkill <string>
vi <file>
git pull
sudo apt-get install <string>
fg
cd <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
code .
cd ..
ls
git add .
ls
git reset --hard <string>
exit
sudo gpg --dearmor -o <directory>
git commit -m <string>
cd <string>
sudo fdisk <directory>
git status
screen -r <string>
exit <number>
docker stop <string>
git rm -cached <string>
done
vim <file>
ls
exit
git commit -m <string>
git clone <URL>
cd <string>
rm -f <string>
ls
less
clear
git pull
ls
cd <string>
ls
git pull --no-edit
cd <directory>
fg
ls
ls
cp <string>
cd <string>
ls
vim <file>
ls
sudo apt install --install-recommends <string> -y
git pull origin development
cd <string>
tmux a
read -r <string>
ls
ls
sudo sed -i <directory>
cd <string>
git commit -m <string>
cd ..
git branch -m <string>
vi <file>
fg
ls
ls
cd ..
vi <file>
cat <string>
git branch -d <string>
clear
ls -R
clear
git status
vim <file>
git status
touch <string>
ls
vim <file>
eval <string>
sudo crontab -l
sudo apt show <string>
sudo apt-get install -y <string>
ls -la
ls
touch <string>
cd ..
ls
cd ..
rm <string>
cd ..
git pull
git merge
docker images
export <string>
ls
ls
ls -la
cd <string>
cd <string>
history
git diff
sudo apt-get install <string>
git diff
ls
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
git pull
sudo apt-get dist-upgrade -y
find . -name <file>
exit
sudo nano <string>
clear
clear
cd ..
ls -1
npm install <string>
vim <file>
ls
perl -ne <string>
find . -xtype <string>
let s:l=<number> - <string>
exit
docker-compose stop <string>
git push -u <string> master
git pull
ls
cd <string>
rm <string>
ls
ls
git add <string>
ls
git clone <URL>
code .
true
vi <file>
ls
git remote add origin <URL>
ls
cd <string>
cd <string>
less <string>
rm -fr <string>
ls
vim <file>
ls
git commit
cd ..
clear
unset <string>
ls
wget <URL>
cd <string>
cd <string>
git commit -m <string>
ls
cd <string>
ls
vim <file>
git merge develop
exit
git add .
nano <file>
cd
clear
ping <string>
sudo apk add <string>
cat <string>
ls
ls
cd ..
ls
cp -r <directory>
scp <string>
ls
sed -E -e <directory>
python3 <file>
ls -rf <directory>
systemctl restart <string>
git add <string>
cd <directory>
man -k <string>
mkdir -p <string>
cat <string>
python3 <file>
ls
vi <file>
rm -rf <string>
sudo xbps-install -Su
grep -Eh <string>
npm install <string>
sudo apt upgrade
clear
cat <string>
ls
clear
sudo pacman
ls
git status
ls
find <file> -exec <string> -c <string>
docker service create --mount <string>
rm -r <string>
clear
ls
ls -all
ls
sort
cd ..
exit <number>
git remote -v
history
docker ps
ls
exit
tail -f <string>
sed -E -e <directory>
kill -9 <string>
exit
vim <file>
docker rm -f <string>
exit
cd <string>
ls
grep -F <string>
sudo dnf install <string>
ls -ltr
git help
killall -KILL <string>
ssh <string>
rm <string>
git add .
git commit -am <string>
git clone <URL>
cd ..
sudo pacman -Scc
diff <file> <file>
ls -l
git push
python3 -m <string>
read <string>
cd <string>
cd ..
ls -la
git checkout master
sudo dpkg -R <string>
clear
ls=<string> -ld <string>
git pull
wget <URL>
sudo mysqld_safe --skip-grant-tables
git remote add origin <URL>
ls
git add .
git add .
wget -q <URL> -O <file>
git config --global <file> <file>
sudo docker rm corrade
tail -f <string>
cd <string>
git status
read -p <string>
vim <file>
source <string>
cat <string>
git status
vim <file>
cd <string>
git commit -m <string>
tail -1)"\
cd
diff <file> <file>
exit <number>
cd <string>
sudo dmidecode -s <string>
xrandr -q
systemctl --state=<string>
find . -name <file>
docker-compose up -d --build
ls
cat <string>
sudo apt install <string>
npm start
ls
su root
npm install
tail
env
git tag <string>
vim <file>
exit <number>
sudo vim <directory>
ls
clear
then\
ls
clear
cd <string>
sudo sed -i <directory>
ls -l
cd <string>
grep <string>
rm <string>
sudo flatpak --update
sed -i <directory>
sudo pip3 install <string>
cd <directory>
git pull
read -r <string>
bash
git stash pop --index <number>
git status
sudo shutdown -h <string>
sudo ldconfig
unzip <file>
ls
git add .
grep <string>
clear
bash
ls
ls
ls
sudo sed -i <directory> <file>
git clone --depth=<number> <URL>
sudo nmcli con mod <string> <string>
cp <string>
vim <file>
chmod +x <string>
shutdown -h <string>
ls
exit
ls
systemctl status <string>
cd <string>
sudo firewall-cmd --get-services
sudo docker rm corrade
ls
docker rmi -f <string>
tar -f
npm run test --force
source <file>
git clone <URL>
cd ..
cd ..
cut -d: -f1 <string>
cd <string>
find . -mtime <string>
exit <number>
cp <string>
cd <directory>
sed -i <string>
df -h
clear
vim <file>
ls
ls
cp <string>
git push
grep <string>
find . -empty -type <string> -print -delete
grep <string>
wget -q -O <file>
cd <string>
sed -i <string>
cd ..
git branch -M <string>
cd <directory>
git status
nano <file>
ls
rm <string>
unset <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd -
unset <string>
sudo sed -i <directory>
sudo vim <directory>
cd ..
git init
clear
cd <string>
cd <string>
git rev-list --all
cd <string>
wget --wait=<number> --level=<string> --limit-rate=<string> --recursive --page-requisites --user-agent=<string> --no-parent --convert-links --adjust-extension --no-clobber -e <string> <URL>
sudo apt-get update
cd ..
ls
less <string>
rm <string>
pwd
clear
git remote add origin <URL>
cd <string>
mv <string>
screen -rd <string>
git checkout <string>
cd <string>
cd <directory>
sudo sed -i <directory> <file>
ls
cd ..
yarn add <string>
sed -i <directory>
vi <file>
docker images -a <string>
ls
sleep <string>
sudo gedit <string>
git commit -m <string>
ls
local <string>
sudo dpkg -i <file>
python3 <file>
python <file> runserver 0.0.0.0:2016
git init
ls
sudo apt install <string>
ls
curl -fsSkL <URL>
sudo sysctl <string>
mv <string>
cd <directory>
cd <string>
sudo npm cache clean -f
grep -iC2 --color=<string> <string>
ls
sudo docker exec -it <string>
clear
ls
git push -u <string> master
ls
top
bash <file>
ls -R <string>
sudo -i
ls -lah <string>
sudo apt install <string>
source <directory>
vim <file>
grep <string>
vi <file>
npm start
find . -iname <file>
vim <file>
df -hP
vim <file>
sudo apt install python2.7 --fix-missing
journalctl -b -1 -e <string>
rm -f -- <string>
sudo flatpak override --filesystem=<file>
ssh <string>
git fetch origin\
ls
ip -o <string>
kubectl apply --filename <file>
ls
sed -I <string>
find $BASEDIR -maxdepth <number> -mindepth <number> -type <string>
cd <string>
wget -q -O <file>
git remote set-url origin <string>
cd <string>
grep -i <string>
vi <file>
ssh <string>
xargs -n1 <string> branch -d
rm <string>
pico <file>
git add .
sudo vim <directory>
sudo apt install <string>
apt-get install <string>
cd <string>
cd <string>
sudo vim <file>
git commit -m <string>
cd ..
docker volume create --name=<string>
git stash
cd <string>
wget <URL>
git status
ls
git clone <URL>
fg
ls
ls
git status
git branch -M <string>
cp <string>
mv <string>
git --abort
find . -name <string> -printf <string>
python3 -m <string> install --no-cache <string>
sudo sed -i <directory>
clear
curl -s -L <URL>
ls
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
git commit --allow-empty -m <string>
apt-get install -y <string>
cd <string>
done
ls
ls
ls
sudo pacman-mirrors -f8
head
git status
ls
docker start <string>
python3 <file>
ls
ls
ls
git remote -v
git pull
git pull -s <string> -X <string> <URL> -f
rm -f <string>
vi <file>
chmod +x <string>
cd <string>
cd <string>
exit
gsettings set <file>
git remote add origin <URL>
sudo apt-get update
cd
cp -r <directory>
cp <string>
git commit -m <string>
git remote remove <string>
cd <string>
strings <file>
bash
ls
bash <file>
ls
docker build -f <directory> -t <string>
ping <string>
fdisk <directory>
rm -rf <string>
exit <number>
ls
mv <string>
ls
sudo dpkg -i <file>
kubectl get pods -n <string>
ps --ppid <string>
exit
ls -lh <string>
find . -name <file> -type <string> -print -delete
git pull
git status
ls
done
mkdir -p <string>
git config --global <file> <string>
source <string>
cd <string>
chmod -options <string> # lets you change the read, write, and execute permissions on your files
gpg --recv-keys <string>
cd ..
git commit -m <string>
ls -la
ls
vi <file>
cp <string>
cp -r <directory>
wget --recursive <URL>
git bisect <string>
cd ..
sudo su
pwd
git push
sed -n <string>
cd <directory>
which <string>
cd <string>
cd ..
cd <string>
git pull origin development
ls
grep <string>
rm -f <string>
nano <file>
sudo -s -u <string> -H
git commit -m <string>
git status
ls
ls
sudo --help
sed <directory>
clear
npm run build
cd <string>
reset
rm <string>
cd <string>
python3.11 <file>
git push
ls
git remote -v
chmod +x <string>
git commit -m <string>
cd <string>
alias
killall
clear
tar zxf <file>
touch <file>
sudo usermod -G <string>
code .
ls
cd <string>
sleep <number>
ls
git pull
vim <file>
rm <string>
vim <file>
cd <directory>
git branch -all
ls
cd ..
ls
npm audit fix --force
cp <string>
pwd
clear
clear
git push -u <string> main
git add .
cd <string>
cd <string>
git add <string>
cd <string>
sudo systemctl enable <string>
clear
curl -sfL <string>
clear
touch <file>
python3.11 <file>
git add <string>
sudo sed -i <directory> <file>
git switch <string>
ls
clear
ls
uniq
jq
code <string>
vi -t <string>
sudo nice --3 <string> <string>
exit <number>
cat curl -L <URL>
vim <file>
cd <string>
git commit -m <string>
git add <string>
sudo apt update\
ls
cat <string>
vim <file>
mv <string>
sort -r <string>
ls
ls
wget -cO <string>
clear
ls
ls
cp <string>
git status
grep -r <string>
git rebase
wget <URL>
sudo apt-get update
git clone <URL>
sudo passwd <string>
pwd
cd ..
ls
cd <string>
ls
clear
git status
exit
cd <string>
mkdir <string>
git add <string>
exit
cd <string>
npm install
cd <string>
du -skh <string>
git commit -m <string>
ls
cat <string>
ls
git config --global <file> <file>
exit <number>
git status
cp <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
ls
exit
sudo service <string>
ssh -t <file> tmux new -As0
cd <string>
ls
vim <file>
ls
ls
cd <directory>
git commit -m <string>
dpkg -L <string>
cd ..
clear
ps -u <string> # lists your processes
vim <file>
cp <string>
cd <string>
sudo apt -y <string>
lsof -p <number>
git commit -m <string>
pwd
curl <string>
cd <string>
cd ..
cd <directory>
sudo mv <string>
shutdown
cd <string>
sudo rmmod <file>
git init
tmux
git commit -m <string>
find . -name <file> -type <string> -print -delete
sudo apt-get install <string>
wget <URL>
cd <string>
git
clear
curl --header <string>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
git init
exit <number>
cd <string>
ls
sync
gpg --fingerprint
ls
ls
ls
sudo apt update
cd <string>
cd ..
more <file>
cd <string>
git commit -m <string>
ls
vim <file>
eval <string>
ls
clear
cd <string>
ls
cd ..
bash
exit
cd ..
fg
sed >&2 -n <directory>
ls
git commit -m <string>
git commit -m <string>
git pull upstream <string>
rm -vrf <directory>
sudo gem install <string>
wget -O <file>
cd
top
curl <string>
time
mkdir <string>
grep -Ev <string>
docker compose <string>
vi <file>
clear
git remote add origin <URL>
cd ..
sudo dpkg-reconfigure <string>
bash <file>
ls
ls
git status
sudo certbot --nginx -d <file> -d <file>
clear
sudo systemctl start <string>
tar xvf <file>
ls
cd
ls
kill <number>
cd <string>
node
git branch -M <string>
vim <file>
clear
nano <file>
vim <file>
ls
git push -d <string>
git add .
cd <string>
export <string>
ps aux
ls
docker run -p <string> -itd --name <string>
fg
df -h
sed -e <directory>
git push origin master
ls
git reset HEAD^
git config --global <file> <file>
ps -eal
git add <string>
ls
sudo yum install <string>
npm install <string>
cp -r <directory>
git remote rm <string>
fsck -l
sudo reboot
ls
ls
cp -v -t <directory>
which <string>
exit
ls
git commit -am <string>
wget <URL>
ls
sed -E -e <directory>
sudo pacman -Syyu --noconfirm
mv * <directory> -u
grep <string>
git init
cd ..
cat <string>
vim <file>
cd <string>
cd <string>
npm install -g <string>
clear
git clone <URL>
ls
cd <directory>
read <string>
python3 <file>
tmux
ping <file> -c <number>
cd <string>
git push -u <string> main
ls
sudo vi <file>
read <string>
git restore --staged <string>
chmod <string>
sudo shutdown -n
git clone --depth=<number> <URL>
ls
git commit -m <string> --no-verify
grep <string>
cd ..
git push -u <string> main
vim -r <file>
rm <string>
cd <string>
pwd
lsblk
sudo nano <directory>
ls
npm run dev
ls
curl <string>
ls
grep -r <string> -l --null <string>
touch <string>
git push
cd ..
mv <string>
ls
git init
cd <string>
vim <file>
cd
cd ..
ls
cd
git help -g
sudo apt-cache search <string>
git add .
sudo systemctl disable <file>
vim <file>
git push
exit <number>
ls
su root
clear
npm i
cd <string>
cd <directory>
exit <number>
cd <string>
cd <string>
curl --user <string> -X <string> <string>
ls
git status
sudo nano <string>
cd ..
git commit -m <string>
clear
cd <directory>
sudo docker rm corrade
git gc --prune
git init
ls
python3 <file>
cd <string>
git branch
git checkout master
git clone <URL>
exit
ls
sort -t',' -k2,3 <string>
du -skh <string>
ls -ltr
cd <directory>
do\
clear
bash <file>
clear
sudo apt install --fix-broken -o <string>
git status
exit
cp <string>
nano <file>
cd <string>
git commit -m <string>
cd <directory>
ls
ls
grep -i <string>
ls
clear
cp -v <string> <directory>
find . -empty -type <string> -print -delete
ls
ls
vim <file>
chmod +x <string>
clear
git init
ls
clear
ls
ssh <string>
cd <directory>
ftp <string>
grep --color=<string> -- <string>
brew update
cd ..
less <string>
git status
cd <string>
git commit
vim <file>
python3 <file>
git commit -m <string>
vim <file>
sudo rdate -s <file>
history
pwd
git
cd ..
ls
cd <string>
wget <URL>
git init
diff -b <file>
sudo apt-get --assume-yes <string> <string>
git tag <string>
cd <directory>
git branch
vim <file>
git push
ping <string>
cd ..
sudo systemctl stop <string>
git hash-object -w <file>
cd <string>
rm <string>
read <string>
git remote add origin <URL>
sudo docker rmi <string>
ls
cd <string>
ls
vim
read -r -p <string>
ssh-keygen -A
sudo python <file>
make clean
cd <string>
brew install <string>
sudo ufw enable
cd ..
clear
cd <directory>
rm <string>
git merge <string>
git clone <URL>
git pull
ls
npm init -y
clear
wget <URL>
ls
cd
ls
exit
cd <directory>
sudo apt upgrade -y
vim <file>
htop
ls -t <string>
sudo dmidecode
git clone <URL>
sudo sgdisk --new=<string> --typecode=<string> --change-name=<string> <directory>
git push -u <string> main
fg
cd <directory>
pwd
ls
git clone <URL>
ls
su -s <string>
cd <directory>
cd <string>
npm install
clear
cd <directory>
man <string>
node --version
cat <string>
cp <string>
cd <string>
git push --set-upstream <string>
mv <string>
make clean
git push -u <string> master
rm -rf <string>
g++ -std=<string> <file> -o <string>
ls
mvn compile
wget <URL>
rm <string>
cd <directory>
npm start
sudo nano <directory>
ls
vim <file>
git config --global <file> <file>
sudo nano <file>
date
git status
clear
exit <number>
vim <file>
git add .
git add <string>
sudo chsh -s <directory>
git push
git clone <URL>
git commit -m <string>
ls
git push origin master
byobu --help
mkdir <string>
tr <string> <string>
cd - <string> <string>
git clone <URL>
nano <file>
git merge --continue
ls
vim <file>
codedown javascript > <file>
cd <string>
pwd
clear
npm login
git remote add origin <URL>
sleep <number>
history
wget <URL>
set <string>
git add .
rm <string>
cd <string>
cd <directory>
cat <string>
cd ..
sudo xbps-install -Su
vi <file>
xrandr --output <string> --connected
find . -mtime -2
cp -r <directory>
docker-compose up -d --build
ls
sudo rm -rf <directory> <directory>
ls
vim <file>
top
cd <string>
cd <string>
apt-get autoremove --purge
vim <file>
cd <directory>
sed -r <directory>
mv <string>
ls
ping <string>
git pull
find . -name <file>
docker ps -f <string> --format <string>
sudo apt-get update
exit <number>
git status
vi <file>
chmod -x <file>
grep -v <string>
cd <directory>
clear
vim <file>
sudo apt install <string>
sudo apt install
ls
ln -s <string>
cd <directory>
wget -q <URL> -O <file>
mkdir -p <string>
ps axfu
source <file>
cd <directory>
ls
bash <file>
git add <string>
npm install -D <string> postcss autoprefixer
cd
ls
mv <string>
docker ps
cd <directory>
exit
sudo chgrp -R <string>
cd <string>
ls
ls -al
sudo rm -r <string>
ls
source <file>
cd ..
cd
git status
cd <directory>
cd <string>
passwd
git push
cd ..
git remote add origin <URL>
read -p <string>
cd ..
cd <directory>
sed <directory>
ls
sudo apt upgrade -y
ls
fg
ls
zcat <file>
git push -u <string> master
vim <file>
tail -f <directory>
ssh -i <string>
ls
ls
ls
grep <string>
mkdir <string>
ls
python3 <file>
git add .
sudo vim <directory>
grep <string>
git status
ls
ps aux
git push -u <string> master
docker cp <string>
git remote add origin <URL>
mkdir <string>
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
ping <file>
grep -En <string>
vi <file>
vim <file>
mkdir -p <string>
git checkout -b <string>
git add <string>
git add <string>
nano <file>
git status
sudo vim <file>
git status
find . -iname <string> -print0
apt update
vim <file>
mv <string>
cat <string>
git clone <URL>
cd <string>
cd <string>
python3 <file>
clear
ls
exit
sudo sed -i <directory> <file>
ps aux
grep -c <string>
mkdir <string>
grep <string>
setg RHOSTS.*
rm <string>
cp <string>
vim <file>
npm -v
clear
code .
ps -ef
sudo su
sudo apt update
rm <string>
exit <number>
mkdir <string>
cd <string>
top
done\
cd <string>
git status
cp <string>
rm -rf <string>
sudo pip install -r <directory> -r <directory>
ls
vi <file>
vim <file>
rm -rf <string>
vim <file>
wget <URL>
fg
git status
cd..
read -r <string>
vim <file>
cd <directory>
xz -9 <file>
kill -9 <number>
curl <string>
node <file>
exit <number>
cd <string>
done
grep <string>
mv
git commit -am <string>
cd ..
wget -q -O <file>
read -s -n <number>
cd <string>
git push
docker-compose up -d
sed -i <string>
rm -f <string>
tr -cd <string>
clear
git commit -m <string>
ls
npm i <string>
sleep <string>
sudo tar -zxvf <file> -C <directory>
cd <directory>
sudo apt-key add -
curl -sSf <string>
git status
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
cd <string>
rm -r <string>
git add <string>
cd <directory>
git init
ls
ls
cat <string>
git remote add origin <URL>
cd <directory>
clear
source <file>
cd <string>
ls -a <string> <string>
clear
npm start
git add .
cd <directory>
git status
sort -u
vim <file>
ps
pwd
exit <number>
rm -ls
ls
mkdir <string>
cd <string>
lsblk
cd ..
sudo apt purge <string>
cd ..
rm <string>
exit <number>
git status
git remote add origin <URL>
cat <string>
git push -u <string> main
nano <file>
git add -A
ls
vim <file>
clear
exit
git pull origin master
ls
ls
ls -tr
clear
clear
bash
diff <file> <file>
ls
sudo start uwsgi
clear
cp -r <directory>
git push
ls -alrt
cp -v <string> <directory>
clear
grep -i <string>
ls
exit
uniq -c
ls
sudo sed -i <directory>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd <directory>
ls
sudo su -
sudo useradd -g <string> -p <string> -c <string>
cd <directory>
ls
git commit -a -m <string>
exit <number>
exit
ls
git branch -M <string>
ls
cd ..
mv <string>
done
rm -r <string>
vi <file>
cd ..
ls
cat <string>
ls
cd <directory>
ls
python3 <file>
git status
ls
vim
rm <string>
export <string>
rmdir <string>
grep <string>
curl -fsSL <URL>
mkdir -p <string>
sudo rsync -av --progress <directory>
fg
sleep <number>
git submodule update --init --recursive\
vi <file>
git push
sudo apt-get install <string>
vi <file>
xargs grep <string>
ls
free -h
cd <directory>
sudo rmdir <string>
ls <directory> -l
cd <string>
head -n1\
su -
git rev-parse --abbrev-ref <string> <directory>
watch -n <string>
npm i <string>
cd <directory>
exit
cd <string>
fg
read -rp <string> <string>
ls
export <string>
ls
cd ..
exit <number>
nano <file>
sudo dnf install <string>
sudo stop uwsgi
git push origin master --allow-unrelated-histories
cd ..
ls
ls
sudo apt-get update
ls -la
cd <directory>
docker-compose logs
sudo yum <string>
ls
ls
cd <string>
vim <file>
ls
cd <string>
exit
ssh -t <string>
grep -i <string> >files
read -r -p <string>
git add <string>
cd <directory>
git add <string>
ls
less <string>
git commit -m <string>
cd <string>
cd <directory>
grep -E <string>
sudo dnf install -y <string>
sed -i <string>
vi <file>
ls
cd ..
cd <string>
mkdir <string>
cd <string>
fg
chown <string>
sudo nvim <directory>
sudo pip install <string>
kill -9 <string>
ls
ls -la
find . -type <string> -exec <string> -i <directory>
sudo su
fg
tail
ls
cd
git clone <URL>
ip link <string>
sudo pacman -R <string>
cd <string>
ls
<directory> <directory>
exit
wget -O <file>
vim <file>
git pull
date
clear
vim
sudo node <file>
python3 <file>
cat <string>
ls
mkdir -p <string>
pacman -S <string>
cd <string>
ls
ls
cd <string>
rm <string>
man <string>
vi <file>
rm -r <string>
cd ..
vim <file>
ls
cat <string>
code .
sudo vim <directory>
cd <directory>
git remote add origin <URL>
done
cron -e
read <string>
git status
cd <string>
code <string>
ls
exit
ls
cpio -pdm <directory>
sudo start uwsgi
git add .
ls
cd ..
sudo chmod +x <string>
cd <string>
ls
cat <string>
ls
git commit -m <string>
vim <file>
ls
npm start
sudo apt install <string>
ping -c <string>
cd <directory>
docker exec -it <string> bash
cd <directory>
cd <string>
su
sudo pacman -Rcns <string>
sudo rm -r <string>
python3 --version
sudo a2enmod <string>
sed -e <directory> -e <directory>
npm start
cat <string>
vi <file>
head -c <string>
cd
sudo ls -a <directory>
ls
git init
sudo apt-get --purge <string>
grep <string>
exit
ssh -L <string>
vim <file>
ls
rm -rf <string>
vim
pwd
git clone <URL>
ls -la
clear
grep <string>
docker-compose up -d --build
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
cd <string>
ls
ls
vim <file>
clear
git status
git st
ls
git commit -am <string>
clear
date
nano <file>
ls
sudo dnf update
cd ..
less <string>
git add .
cd <string>
sudo reboot
sudo vi <directory>
cd <string>
cd <string>
chmod <number> <string>
ls -a
ls
sudo cd <directory>
git checkout -b <string>
ls
git init
cd <string>
docker-compose logs
clear
vim
wget <URL>
ls
npm run dev
which <string>
ls
sudo apt install <string>
vi <file>
git commit -m <string>
git push origin master
clear
git clone <URL>
sudo groupadd -f -r <string>
awk -F. <string>
git merge <string>
ls
exit
ls
ls
kubectl --namespace <string>
exit <number>
apt search <string>
git status
cd
touch <string>
ls
grep -i <string>
cd <directory>
git merge <string>
vi <file>
fg
git add -A
vim <file>
cat <string>
npm i
systemctl status <string>
git commit
cd <string>
exit
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
ls
cd <string>
more <file>
cd ..
sudo pacman -s <string>
less <string>
exit <number>
ls
ls
less <string>
sudo sed -i <directory> <file>
mvn compile
ls
cd <string>
git add .
docker network rm <string>
clear
git pull
ls
code <string>
cd <directory>
ls
sudo apt update
git reflog expire --expire=<string> --all
vim <file>
npm init -y
cd <string>
sudo light -A <number>
ps -A
chmod <number> -R <directory>
open .
source <string>
cd ..
ps -A
cp -rp <string>
ls
cd <directory>
cp -r <directory>
npm run test
cd ..
ls
vim <file>
nano <string>
sudo apt-add-repository <directory>
sudo rfkill <string>
git push --set-upstream <string> master
cd
find . -name <file> -type <string> -print -delete
exit
exit <number>
ls
mkdir <string>
vim <file>
alias <string>
wget <URL>
ls -al
vim <file>
sudo dnf search <string>
cd <string>
date <string>
mv <string>
clear
ls
git ls-files --others --exclude-standard --directory --no-empty-directory --error-unmatch -- <directory>
vi <file>
local <string>
sudo bash -c <string>
kill -HUP <string>
curl -v -X <string> --anyauth -u <string>
export <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
clear
cd <directory>
cd <string>
cd <string>
sudo vi <directory>
man <string>
wc -l
ssh
ls
fg
xargs kill -HUP
awk <string>
ps -u <string> # lists your processes
npm run build
cd <string>
ls
vi <file>
mkdir -p <string>
git commit -m <string>
cd <directory>
git rm -r --cached <directory>
bash
ls
nano <file>
mv <string>
cd <directory>
curl -sL <URL>
chmod -x <file>
node <file>
code .
ls
ls
ping <string>
ls
ls
systemctl status <string>
find . -empty -type <string> -print -delete
cd <string>
vi <file>
npm install --save <string>
cp <string>
ls
mount -o <string>
git add <string>
cd ..
ls
ls
sudo apt-get purge <string>
cat <string>
fg
python3
sudo dpkg-divert --local --divert <directory> --rename --add <directory>
screen -ls
sed -n <string>
sudo mkdir <directory>
ls -la
cd <string>
ls
ls
clear
rm <string>
cd
ls -la
python3
mkdir <string>
ping
ls
source <string>
cd <directory>
vi <file>
rm <string>
ls
cd <directory>
grep -i <string> >files
ps -l
cd <string>
ls -la
npx tailwindcss init -p
git checkout <string>
cd ..
exit <number>
ps -ef
git push origin
grep -a -i -E --no-filename <string>
xargs printf <string>
print <string>
git add <string>
cd <string>
git pull
grep <string> -r <string>
chmod <number> <string>
vim
cat <string>
mv <string>
sleep <number>
git pull origin development -f
read -rp <string> <string>
cd <directory>
code .
ls
docker ps
vim <file>
clear
exit
vim <file>
docker ps -a
exit
ls
docker-compose logs
git add .
cd <string>
exit <number>
sudo python3 <file>
git commit -m <string>
sleep <number>
clear
vim <file>
cd <string>
jq <string>
exit
sudo sed -i <directory> <file>
vim <file>
cd
cd ..
cd <directory>
git commit -m <string>
ls
setg RHOSTS.*
docker-compose -f <string>
cd <directory>
ls
ls
cd <directory>
awk <string>
sudo npm install express -g
apt update
cd ..
sudo deluser <string>
git branch main
ls
git pull origin master
apt-get autoremove -y
pacman -S <string>
sudo apt update
rm <string>
apt -y <string> build-essential <string>
ls
clear
git push
cd <string>
cd <string>
ls
pwd --help
cp <string>
fg
ls
mkdir <string>
exit
vi <file>
git init
git add <string>
grep -P <string>
vim
enable <string>
ls
clear
ls
cd <directory>
vim <file>
read -r <string>
tar xvf <file>
sed -i <directory>
touch <string>
pacman -S <string>
ip a
wget <URL>
cd <string>
ls
cd <string>
ls
gsutil -m <string> -r <directory>
ls
git status
cd <directory>
cp <string>
psql -h <string> -U <string> -d <string> -L <file> -a
git commit -m <string>
vim
cd <string>
clear
ssh-keygen -t <string>
head -n <number>
mkdir <string>
yarn add <string>
git push
git remote add origin <URL>
git push
git pull
docker exec -it <string>
vi <file>
sudo docker rm corrade
ls
git commit -m <string>
ls
git push -u <string> master
sudo mv <string>
nc <string>
git log
cd <string>
git commit -m <string>
ls
pipewire
exit <number>
cp <string>
sudo ntpdate -qd <file>
cp <string>
tail -n <string>
sudo yum install <string>
npm update -g <string>
ls
vim <file>
ssh <string>
ls
ls
cd ..
chmod u+x <string>
mv <string>
sudo sh <file>
cd <string>
cd <string>
cd <directory>
clear
which <string>
history -a
ls++ -
vim <file>
rm -rf <string>
cut -d',' -f2 <file>
vim <file>
clear
scp <string>
vi <file>
sudo reboot -h <string>
ls
git add .
exit <number>
clear
git init
cd <string>
clear
ls
ls
vim <file>
vim <file>
clear
clear
cd <string>
cd <string>
find . -size <string> -a -print -a -exec <string> -f <string> \
ps axfu
exit <number>
ls --help
curl -sS <string>
ls
sudo apt install <string>
cd ..
cd ..
ls
ls
ls
vim <file>
vim <file>
cd <directory>
npm
sudo mkdir <string>
chmod +x <string>
npm
exit <number>
exit <number>
clear
cd <string>
ls
ls
vim <file>
ls
git clone <URL>
ls
git clone <URL>
clear
wget -q -O <file>
python3 <file>
cd <string>
cd <directory>
less <string>
find . -name <string> -print
ls
git clone <URL>
rm <string>
cp <string>
fg
sudo git pull
mv <string>
ls
rm <string>
git add .
sh
ls
apt update
nano <file>
cd <string>
sudo apt-get update
git rev-parse --git-dir <string>
ls
cd <string>
mkdir <string>
sudo npm start
sudo -i
git add <string>
ls -l
cd ..
vim <file>
sudo sed -i <directory> <file>
ls
cd <string>
man <string>
ls
npm install
curl -sS <URL> -o <file>
cd <string>
ls
ls -la
cd <string>
python3 <file>
cp -r <directory>
reboot
ls
exit
unset <string>
sudo poweroff
vim <file>
cd <string>
systemctl start <string>
git add --all
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
sed -i -e <string>
ls
clear
git add .
cd <directory>
sleep <number>
sudo apt update
ls
ls
cd <directory>
mkdir <string>
git commit -m <string>
rm -rf <string>
git grep -l <string>
ls
sudo add-apt-repository <directory>
uname -a
git remote add origin <URL>
clear
cd ..
git status
git add .
git status
fg
docker commit <string>
vi <file>
git describe --tags --exact-match <string>
ln -s <string>
snap install <string>
clear
source <directory>
ls
cd ..
cd <string>
git add .
kubectl get pods --all-namespaces -l <string>
fg
ls
clear
ls
clear
cd..
cat <string>
sudo chmod a+rwx <directory>
ls
git pull
git commit
nano <file>
sudo vi <directory>
fg
npm install
ls
git status
cd
ls
cd <string>
sudo make
ls
cat <string>
rm <string>
git clone <URL>
sudo shutdown -r <string>
sudo make
clear
git status
clear
grep -rP <string>
cd <directory>
curl -fsSL <URL>
ls
cd <string>
chmod <number> <string>
cd <directory>
npm install <string>
ls
read <string>
ls++ -a
rm <string>
clear
git add .
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
npm start
vi <file>
ls
ls -l
cd
sudo zypper se <string>
ls
git pull
top -c
xrandr
ls -la <directory>
cat <string>
history
git add <string>
cd <string>
cp <string>
cd ..
git -f <string> <file>
mkdir <string>
curl <string>
cd <string>
sudo killall -9 <string>
git add .
sudo sed -i <directory> <file>
ls
wget -q -O - <URL>
ls
cd ..
cd <string>
tmux
ls
clear
git adog
ls --all
git commit -m <string>
ls
git commit -m <string>
grep <string>
sudo apk add <string>
cat <string>
ls
tail -f <string>
npm run dev
ls
git config --global <file> <string>
less -S <string>
ping <file>
grep <string>
ls
git pull
ls
cd <string>
cat <string>
git push origin master
git push origin
ls
exit <number>
git add .
tail -f <string>
ls
true
ls
ls
git commit -m <string>
sudo sgdisk --new=<string> --typecode=<string> --change-name=<string> <directory>
git checkout master
cd ..
git commit --amend --reset-author
cd <string>
unset <string>
sudo apt-get update
pwd
apt install <string>
cp <string>
ls
sudo apt-get update
tail -f <directory>
ls
git clone --depth=<number> <URL>
npm http GET <URL>
git status -s
git commit -m <string>
sudo mkdir <directory>
ls
exit
cp <string>
ls
git add .
ls -la
git add -A
sudo apt install <string>
clear
cp <string>
git status
du -sh
nano <file>
ls -a
git commit
vi <file>
git add .
vi <file>
clear
cd <directory>
fg
rm -r <string>
ls
awk <string>
cat <string>
sudo vi <file>
ls
bash
clear
vi <file>
git pull
ls
sudo systemctl restart <file>
sudo sudo apt-get install ufw
apt-get install iptables --fix-missing -y
npm start
chmod +x <string>
htop
rm <string>
python3 <file>
clear
sort -hn
cd <string>
clear
ls -la
git init
vi <file>
export <string>
sudo ufw allow <string>
git pull origin master
vi <file>
python3 <file>
service <string>
apt-get install <string>
exit
cd ..
ls -lah
cd <string>
ls
git add <string>
touch <string>
cd ..
service apache2 restart
git add <string>
git add.
cat <string>
cat <string>
read <string>
rm <string>
sed -e <string> -e <directory> -e <string> \
npm start
git push -u <string> master
git add -A
sudo apt-key fingerprint <string>
cat <string>
dpkg -l
ls
git clone <URL>
cd <string>
clear
clear
ls
yarn add <string>
cd <string>
ls
ls
cd <string>
ls
ls
apt-get -y -qq <string> <string>
sudo dnf install <string>
git commit --amend --reset-author
npm run coverage
grep <string>
ls
cp <string>
vi <file>
sudo ls <directory>
git push
fg
unzip -l
cd
ls -a
cd <directory>
ip a l
ping <string>
sudo sh <file>
ls
sudo chmod <number> <string>
cd <directory>
clear
ls
ls
git st
cd <string>
docker image ls
git restore <file>
sudo wgnord <string>
ls
sudo passwd <string>
ls
git pull
clear
ls
man <string>
cat <string>
mkdir <string>
brew update
curl <URL> -u <string> -d <string> -d <string> -d <string> -d <string>
clear
sudo cd <directory>
<directory> <string>
wget -q -O <file>
sudo systemctl start <string>
ls
ls -laN
git submodule update --init --recursive\
sudo add-apt-repository <directory>
exit <number>
git status
ls
cd ..
cd <string>
npm install querystring --save
cd <directory>
docker logs <string>
ls -lAF <string>
sudo port <string>
cd <string>
git pull
npm -v
curl -X <string> -d <string> -d <string>
git commit -m <string>
exit
ls
ls
cd <directory>
ls
vi <file>
cd ..
cd ..
ls
pwd
cd <string>
vim <file>
ls
git
docker ps
cat <string>
ps -auxwf
git remote remove origin
ls
python3 <file>
date <string>
docker start postgres-container
git add .
ls
cd <string>
vim <file>
ls
sudo visudo
ls -la
ls
ls
clear
git status
cd ..
cp <string>
cd ..
exit
cd <directory>
ls -alh
cd ..
vim <file>
cd <directory>
clear
clear
git co --ours <string>
cd <string>
sudo -H <string> install --upgrade <string>
rm -f <string>
vim <file>
ls
sudo pip install <string>
git add .
sudo apt update
git commit -m <string>
sudo dpkg -i <file>
apt-get install nano -y
ls
uname -a
git clone <URL>
ls
finger <user> # displays information about user
cd <directory>
ls
clear
vi <file>
ls
fg
codedown javascript > <file>
cd ..
ls
exit <number>
ls -lah
sudo chmod <number> <string>
rm -rf <string>
git status
export <string>
free -m
git add .
cd <string>
sleep <number>
cd <string>
cd ..
cd <string>
ssh -X <string>
ls
sudo usermod -aG <string> <string>
sudo poweroff
cd <string>
ls
less <string>
apt-get update
cat <string>
rm -f <string>
sudo pacman -Syu --noconfirm
git pull origin master
npm install -g <string>
git status
cd ..
docker-compose
exit
sudo apt-get install -y <string>
sh <file>
docker-compose up -d --build
npm i <string>
mkdir <string>
ls
ls
cd <directory>
wget <URL>
vim <file>
sudo vim <file>
ls
mv <string>
cd <string>
fg
nano <file>
sudo apt install <string>
rm <string>
sudo sed -i <directory> <file>
git rebase <directory>
pwd
git add <string>
sudo supervisorctl <string>
cd <directory>
bash <file>
ls
ls
mvn exec:java -Dexec.mainClass=<file>
ls
sudo snap install pycharm-professional --classic
cat <string>
ls
git push --help
uname -a
cd <string>
ls
clear
ls
xclip -i -sel <string>
docker build -t <string>
pwd
git log
git log
ls
ls -ltah <string>
pwd
sed <directory>
exit
find . -name <string> -type <string> -prune -exec <string> -rf <string>
sudo apt --fix-broken <string>
git add .
setg RHOSTS.*
chmod u+x <string>
history -c
git add .
date
cd <string>
wget -qO- <URL>
npm start
cd <string>
git status
ls
cd <string>
ls
sudo service nginx restart
exit <number>
cd <directory>
ls
cut -d <string> -f <string>
ls
cd ..
npm run dev
tail -n <string>
apt-get install <string>
more <file>
npm ls
grep -e <string>
cd <directory>
touch <string>
xargs -L1 <string>
cd <string>
<file> <file>
sudo pacman -Syyu
ls
cd <string>
git commit -m <string>
npm install <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
wget <URL>
cd <string>
ls
dir
npx create-react-app <string>
cd <directory>
exit
tar -xvzf <file>
ls
shutdown -h <string>
git commit -m <string>
cd ..
vim <file>
ls
wget -O <file>
sleep <string>
cd <string>
ls
ln -s <string>
nano <string>
ls -
curl --request <string> <string>
mkdir -p <string>
ls
ls
man <string>
ls
clear
git fetch
ls
vi <file>
clear
cd <string>
tail -f
cat <string>
ls
ls
wget <URL>
ls
git add .
git pull
git push
docker-compose up -d --build
ls
curl -o- <URL>
git init
vi <file>
export <string>
cd <string>
ls
sudo snap install <string>
docker images
docker build -t <string>
ps -ef
sudo vim <directory>
sleep <number>
git pull
ls
mvn -e <string>
ag -v <string>
vim
ls -R <string>
history -a
git stauts
ls
rmdir <string>
cd <directory>
nano <file>
git add -A
grep -i <string> >files
grep <string>
vim <file>
unset <string>
cd <string>
find . -iname <file>
git clone <URL>
ls
cd <string>
find . -name <file> -type <string> -print -delete
cd ..
cd ..
git log
cd
git replace --graft <string>
git push origin master
grep <string>
git branch -v
git push --delete <string>
cat <string>
cd ..
cd <string>
python3 -m <string> install <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
git config --global --edit
ls
yarn <string>
cd <string>
python3 <file>
clear
cd <directory>
mkdir <string>
nano
ls
cat <string>
docker images
git restore <file>
npm init
git brach -a
apt-cache show <string>
cd <string>
cd <string>
cd <string>
git commit -m <string>
ls
npm i
clear
cat <string>
vim <file>
cd <string>
exit
rm <string>
cd <string>
yarn add <string>
npm start
chmod +x <string>
ls
exit <number>
git add <string>
rm -rf -- <string>
sudo make install
fg
clear
sudo pacman -S <string>
cpio -p -d -v <string> <string>
ls
ls
nano <string>
ls
ls
cp -r <directory>
git push origin main
ls
git commit -m <string>
git add
awk <string>
then\
vi
ls
cd <string>
history
cd <directory>
git commit -m <string>
git add <string>
df
pwd
git push
ls
find . -name <file> -type <string> -print -delete
rm -rf <string>
cd ..
cd <string>
do\
grep -vn <directory>
cd ..
ls
df -lh
grep <string>
curl -sL <URL>
ls
ls
apt-get update
ls
cd
ls
cd <directory>
ls
screen -r <string>
cd <string>
git branch -a
clear
git push origin main
htop
rm -r <string>
npm install <string>
rm -r <string>
nano <file>
sudo usermod -aG <string> $USER
ls
fg
git status
chmod +x <string>
ls
cat <string>
git add .
cd <directory>
init <number>
npm run coverage
cd ..
wc -l
git init
sudo git push -u <string>
cd <string>
sudo vi <directory>
git commit -m <string>
su root
git init
cd ..
vi <file>
curl -fsSL <URL> -o <file>
sudo apt-get install <string>
git clone <URL>
cd ..
git commit -m <string>
find . -size <string> -a -exec <string> -f <string>
ls
ls
mv <string>
npm -i <string>
cd <string>
docker-compose logs
ls
sudo mv <string>
ls
sudo ip route <string>
sudo systemctl stop <file>
chmod <string>
exit
npm run watch
cd <string>
curl -u <string> -H <directory> -X <string> -d <string> <string> <string>
git stash
npm run test
ls -la
cd <string>
cd <string>
cd <string>
history
ls
git branch
ls
xrandr
git init
grep <string> -w <string>
ls
clear
exit
ls
read <string>
exit
git commit -a -m <string>
git push origin master
read <string>
cd <directory>
sed <directory>
ls
chmod <number> <string>
git add <string>
cd <string>
vi <file>
ls
git remote add origin <URL>
cat <string>
export <string>
cd ..
clear
exit <number>
chmod <string>
sudo dnf install <string>
cd <string>
rm --help
cd <string>
su root
vim <file>
sudo apt-key adv --keyserver <string> --recv-keys <string>
git push
ls -l
read -p <string>
git pull origin
docker ps -a
rm <string>
cd <string>
pwd
time <string>
vim <file>
sudo apt-get update
cd <string>
git rm <string>
ls
git clone <URL>
cd <string>
vim <file>
git add .
cd <directory>
clear
git config --global --edit
rm -f <string>
nano <file>
find -name <string>
sudo git clone <URL>
npm run start
ls
git status
ls
git remote rm <string>
ls
mkdir -p <string>
git status
rm <string>
tr <string>
ls
cd <string>
ls
git branch
cd <directory>
tmux source <file>
bash
ls
find $dir -type <string>
cd <string>
cd <string>
cd ..
ls
mv <string>
rm <string>
sudo apt update
less <string>
git log
npm update
wget --no-check-certificate --no-cookies - --header <string> oraclelicense=<string> <URL>
git init
ls
ls
nano <file>
ls
grep <string>
git clone <URL>
git push --tags <string>
vi <file>
sudo apt-get install <string>
cd ..
xargs -L1 -I'{}' <string> -rE <string>
cd <string>
read -r -p <string>
npm run test
python3.11 <file>
sudo find <directory> -xdev -type <string> -size <string>
wget -q -O- <URL>
git status
fg
ls
cd <directory>
cd <string>
pacman -S <string>
ls
python3
git config --global <file> <file>
cd <string>
git describe HEAD
cd <string>
mv <string>
git clone <URL>
done
cd <directory>
git add .
vim <file>
ls -al
docker exec -it <string> bash
vi
grep -n <string>
clear
exit <number>
git clone <URL>
sudo nvim
cd ..
cd <string>
sudo reboot
cd ..
cp -r <directory>
ls
git commit -m <string> --no-verify
cd ..
tar -xzf <string>
cd <string>
git status
docker tag
git merge <directory> --no-edit
clear
ls
cd <directory>
cat <string>
clear
cd <directory>
ps -ef
cd <string>
env
cd ..
ssh dirlic@10.18.0.39 -p <number>
exit
git status
git commit -m <string>
ls
rm -rf <string>
ls -a
cd ..
fg
ls
clear
exit
sudo add-apt-repository <directory>
mv <string>
cd <directory>
cp <string>
vim <file>
vim <file>
ls
chmod <number> <string>
find . -empty -type <string> -print -delete
ruby <string>
ps -ef
git commit -m <string>
mkdir <string>
ls
fg
vim <file>
docker exec -it <string> bash
ls
sed -e <directory>
tail -r <string>
git branch -M <string>
cd <string>
git add -
find -name <string> -prune
git commit -m <string>
cd <string>
sudo sed -i <directory> <file>
sed -e <directory>
fg
clear
cd ..
tmux a
wget -O <file>
git commit
ls -lrt
wget <URL>
git branch
udevadm info <directory>
ls -l
sudo docker run -d --restart <string> --network=<string> -p <string>
cd <directory>
ls -l
cd <directory>
cd <directory>
rsync -rt <string> --port=<number> <directory>
kubectl apply --filename <file>
cd <directory>
rm -r <string>
cd ..
cd <string>
git status
vim <file>
sudo sed -i <directory> <file>
date
ls -la
cd <directory>
fg
python3 --version
cd ..
mv <string>
rm -r <string>
grep <string>
cd <string>
sudo yum install <string>
cd <directory>
cd <directory>
python3 <file>
clear
cd <string>
cd <string>
git status
cd <string>
sort -n -r
vim <file>
which <string>
exit
time go run <file>
git config --add --global --rerere.enabled <string>
ls -la
terraform <string>
ls <directory> -R
npm install -g <string>
cd <string>
cd <string>
sed -e <directory>
chmod --reference=<string> <directory>
ls
vim <file>
more
exit <number>
vim
cd <directory>
nano <file>
git remote add origin <URL>
rm <string>
ls
ping <string>
exit
finger <user> # displays information about user
cd <string>
vim <file>
top
sort -nr
cd <directory>
cp <string>
sudo sed -i <directory> <file>
fg
exit <number>
git rebase -i <string>
ls
rm <string>
cp <string>
exit <number>
sudo apt-get install <string>
sudo yum remove -y <string>
rm -rf <string>
git push
systemctl daemon-reload
touch <file>
ls
ls
ls
cd <string>
ls
unzip -C <file>
ls
git add .
ls
git add <string>
npm run bench -- -c <file> -n <file>
cd <directory>
cd <string>
cat <string>
git rm <string>
git reset HEAD^
rm <string>
vim <file>
ls
sleep <number>
sudo apt install <string>
rm -f <string>
env
ps -auxwf
mkdir -p <string>
ls
git add <string>
cd <directory>
cd <string>
mv -v <string>
grep -n <string>
git add <string>
head -y <file>
node <file>
ls
ls
ssh dirlic@10.18.0.39 -p <number>
read -p <string>
clear
cp <string>
grep -v <string>
cp <string>
git push -u <string> master
git branch -M <string>
git checkout master
cd <string>
git commit -m <string>
vim <file>
git init
chmod +x <string>
git push
npm i <string>
mv <string>
cd <string>
ls
rm -rf <string>
vim <file>
sudo service <string>
ls
export <string>
npm run dev
sudo apt install <string>
clear
ls
git pull
code
sudo git pull
mkdir <string>
free -m
open <string>
ls
ls
cd ..
mkdir <string>
vi <file>
yarn add <string>
<directory> <directory>
sudo sed -i <directory> <file>
git stash
cd <directory>
man <string>
cd ..
git remote -v
tmux
mkdir <string>
cd ..
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
npm run dev
ls
sleep <number>
ls
more
cd <string>
find <directory> -type <string> -execdir <string>
rm -r <string>
sudo poweroff
apt-get -y <string>
cd <string>
wget
git commit -m <string>
sudo systemctl restart <string>
ls
cd <directory>
ls
ls
mkdir -p <string>
curl -G <directory>
cp -r <directory>
sudo pacman -S <string>
ls
git commit -m <string>
cd ..
sudo systemctl restart nginx
git pull origin master
sudo service <string>
mkdir <string>
cp <string>
clear
npm run test
cd <string>
cd <directory>
sleep <number>
rm <string>
grep <string>
ls
cd <string>
ls
ls
tar xvzf <file>
ls
find . -empty -type <string> -print -delete
done
ls
git add .
ls
cd <directory>
vim <file>
cd <string>
cd <string>
wget --header <string>
cd <string>
git add -A
history
sudo mkdir -p <directory>
git push
git config --global <file>
kubectl delete --filename <file>
ls
nc -U <directory>
ls
npm update
cd <string>
ls
git status
curl <string>
git push
nano <file>
ls
chown <string>
rm <string>
sudo docker run -it --name <string> --entrypoint <string> -u <string> --privileged --rm -v <directory>
git add .
cd <string>
locate
git status
exit
grep -F <string>
cd ..
service apache2 reload
vim <file>
cd <string>
cd <string>
git pull
cd <string>
cd <directory>
head
nano <string>
du -h
docker-compose up -d --build
ls
vi <file>
cd ..
git status
ls
sed -i <string>
exit <number>
exit
shutdown now
sed -i <directory>
jq <string>
cd <string>
rm -rf <string>
nano <string>
sudo nano <file>
vim <file>
unset -v <string>
npm -g <string> <string>
cd ..
unset -m <string>
cp <string>
git commit -m <string>
patch -p1 <string> <file>
sudo apt upgrade
ls
npm i <string>
git status
cat <string>
cd <string>
rm -rf <string>
ls
vim
cd <directory>
git init
rm -R <string>
killall <string>
fg
exit
grep -i <string> >files
sudo mount -a
ls
sudo sed <directory> <string>
su field
ls
npm install express-generator -g
ls
clear
git push origin master
cd <string>
git add .
cd <string>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
sort > <file>
mail -s <string>
ls
exit <number>
ls
bash <file>
sudo yum <string>
chmod u+x <string>
sudo rm -r <string>
ps aux
clear
docker-compose rm <string>
rm <string>
sudo npm install -g <string>
cd <string>
git remote -v
sudo apt-get install <string>
sudo python <file> --cascade=<file> <number>
cd <directory>
docker-compose down
history
ls
then cd <string>
exit
mv <string>
ls
cd <string>
unzip -o -d <string>
sudo pip install <string>
sudo docker ps -a
ls -al
cat <string>
touch <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE # @GUI
cd <string>
ls
mkdir <string>
sleep <number>
vi <file>
vim <file>
git fetch
sudo apt update
cd ..
ls
ls
ls
ls
rm -rf <string>
ls
sudo lvcreate -L <string>
man <string>
cd ..
sudo sed -i <directory>
mkdir -p <string>
history
telnet <string>
cd <string>
ls
nano <file>
docker push <directory>
sudo npm install semistandard -g
git branch --set-upstream-to <directory>
cd <string>
npm install
git commit -m <string>
git clone <URL>
cd <string>
rm <string>
ls
cp <string>
view <string>
clear
cat <string>
find . -type <string> -name <string> -exec <string> -rf <string>
ls
scp <string>
cd <directory>
cd
top
ls
git init
docker exec -it <string> bash
useradd -r -g <string>
npm i <string>
su - <string>
ls
wget <URL>
ls
git status
git push --set-upstream <string> master
cd ..
exit <number>
git push
clear
sudo apt-get install <string>
ls
sed <directory>
ls -la
ls
docker-php-ext-install -j$(nproc) <string>
git status
cd <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
chown -R <string>
ls
sudo bash
cd <string>
git clone <URL>
done
cat <string>
cd ..
docker-machine
cp -r <directory>
ls
ls
ls
vi <file>
clear
cd <string>
cd ..
cd <directory>
docker-compose logs
ls
git add <string>
sed -i -e <string>
ls
git push -u <string> bryan-guner
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
cd <string>
clear
git add <string>
ls
exit
ls -la
ls
ls
ssh -T <file>
ls
git push -u <string> main
wget -O <file>
ls
open .
git filter-branch --force --index-filter <string> --prune-empty --tag-name-filter <string> -- --all <string> push --all --force
ls
systemctl --type=<string> --state=<string>
wget <URL>
locate <string>
ls
exit
ping <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
cd <string>
sudo apt-get update
sudo apt purge --autoremove -y <string>
ls
clear
mv <string>
exit <number>
head -n <string>
cd <string>
clear
ls
vi <file>
cd <string>
hexdump -C <file>
clear
vi <file>
find <directory> -type <string> -name <string>
ls -alrt
cd <string>
cd ..
bash --version
ls
mkdir <string>
docker-compose up -d --build
git reset HEAD^
vi <file>
touch <file>
cd <string>
cd <string>
cd <string>
which <string>
sudo mkdir <directory>
vim <file>
ls
ls
date
git push -f
source <string>
rm <string>
ls -l
ls
pwd
read <string>
python3 <file>
rm -r <string>
nano <file>
cd ..
cd ..
cd ..
docker run -it --name <string>
sudo apt autoremove -y
rm -rf <string>
fg
sudo apt install <string>
sudo usermod -aG <string>
ls
ls
cd <directory>
sudo ln -s <directory>
uniq
exit <number>
exit <number>
git commit -m <string>
cp -R <string>
sudo apt install xpdf -y
git status
rm <string>
sudo apt-get purge nodejs npm
python3.5 -V
ls
chown <string>
sudo usermod -aG <string> <string>
date <string>
cd <string>
python3 <file>
ssh -4 -NL <string> -f <string>
clear
grep <string>
exit
wget --quiet -O - <URL>
vi <file>
cp <string>
git remote set-url origin <string>
cd <string>
tar -xvf <file>
sudo -i
sudo sed -i <directory>
git push
xargs -0 <string>
cd <string>
git commit -m <string>
sudo dnf install <string>
npm install --save <string>
cd ..
git add .
git diff
cd -
sudo apt -y <string>
vim <file>
find <directory> -iname <file> -type <string> -exec <string> -c <string>
ls
sleep <number>
df -h <string>
ls
clear
ls
git push
git log
python3 <file>
fg
cd <string>
git push
git add .
git status
ls
cd
pwd
ls
curl <string>
git config --global <file> <string>
vi <file>
git push -u <string> main
bash <file>
exit
git status
docker exec -it <string> bash
mv <string>
cp <string>
sudo sed -i <directory> <file>
exit
cd <string>
curl -fLo <file> --create-dirs <URL>
clear
git remote add origin <URL>
rm <string>
cd <string>
rm -rf <string>
git clone <URL>
vim <file>
vim <file>
ls
git clone <URL>
vim <file>
git diff
sh <file> -U
vim <file>
git rm --cached <directory> -f
cd <directory>
git add <string>
ls
ls
git branch -a
cd <directory>
cd <string>
vi <file>
grep <string>
rm <string>
sudo su
cd <string>
cd <string>
ls
npm i <string>
mv <string>
git add <string>
sed <directory>
git add .
cat <string>
ls -ltrd <string>
git push -u <string> main
sudo sed -i <directory> <file>
ls
ls
cd <directory>
curl -k <URL>
cd <directory>
scp <string>
nano <string>
ls
sudo apt upgrade python3
read -rp <string> <string>
mv <string>
git status
git status
uname -s
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
ls
cd <directory>
git add .
ls
cat <string>
git remote update
exit <number>
git checkout master
git bisect
python3 <file>
cd <string>
node <file>
sudo docker system <string>
ls
clear
cd ..
ls
cd <string>
pwd
git push origin master
grep <string>
git pull
clear
ls
ls
clear
ls
git clone <URL>
cd ..
su
cd <string>
git commit -m <string>
git rebase <string>
cd <directory>
ls # lists your files in current directory, ls <dir> to print files in a specific directory
vim <file>
rm <string>
cd ..
ls
cd <string>
ls
awk -F <string>
chmod +x <string>
clear
vi <file>
cd <string>
ls
grep <string>
git push -u <string> master -f
git cm -m <string>
chmod <number> <string>
ls
vi <file>
ls -l <string> lists your files in <string> , which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified
ls
rm <string>
rm <string>
npm run package
ls
cat <string>
cd ..
vi <file>
cd <string>
cd <string>
ls -a
pwd
cd <string>
sudo sed -i <directory>
sudo apt upgrade
ls
cp -r <directory>
git gc --aggressive --prune=<string> <string>
cd <string>
npx shadcn-ui@latest add <string>
git init
clear
exit
ls
cd <string>
git pull origin master
ls
mkdir -p <string>
git add .
ls
ls
g++ -std=<string> <file> -o <string>
git commit -m <string>
cd <string>
npm run start
bash
export <string>
git remote -v
cd ..
read -n <number> -s -p <string>
find . -exec <string>
ls
cat <string>
cd <string>
git
du -sh <directory>
sudo yum <string>
vim <file>
sudo apt-get autoclean
ls
read -r -a <string>
bash
tmux
ls
npm i -g <string>
clear
rm <directory> -rf
sudo python <file> --cascade=<file> <number>
cd ..
git commit -m <string>
ls -l
cd <string>
ls
ls
git status
sudo pacman -S <string>
git submodule add <URL>
nano <string>
vim <file>
cd <directory>
mkdir <string>
cd <string>
clear
ls
cat <string>
sudo find . -type <string> -exec <string>
dmesg
less <string>
ps -ef
ssh dirlic@10.18.0.39 -p <number>
cd <string>
git status
git add .
ls
npm install -g <string>
mv <string>
apt-get install -y -qq <string>
ls
ls -l
cd <directory>
ls -la
ip a
git pull
git push -u <string> master
git status
git commit -m <string>
less <string>
clear
reboot
exit
sudo xbps-install <string>
ls
ls
exit
ls
npm install
git remote add origin <URL>
ls
cd <string>
ls
git push
sudo npm start
find -name <string>
su - <string>
pacman -S <string>
cd <string>
ls -la <directory>
ls
clear
vi <file>
rm <string>
cd <string>
sudo python <file>
awk <string>
grep -v <string>
ls -lrt
cd <string>
su - -c <string>
nano <file>
cd ..
vi <file>
git push -u <string> main
cd ..
vim <file>
ls
<directory> <string>
rm <string>
cd <directory>
ls
ls
git status
cd <string>
vi <file>
uniq
chmod u+x <string>
setg RHOSTS <file>
exit
make clean
ls
cd <string>
ls
cd <string>
git status
sudo chmod -R <number> <string>
<directory> -m <file>
exit
cd <string>
grep -r <string>
python3 <file>
npm install -f
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
rm -r <string>
mv <string>
nc <file> <string>
find . -type <string> -name <string>
chmod +x <string>
vim <file>
ls
ls
cd <string>
sudo mv <string>
cd <directory>
git pull origin <string>
cd <string>
cd ..
ls
ls
git status
vi <file>
vi <file>
tail -f <directory>
sudo adduser <string>
date
chmod <number> <string>
ls
bash <file>
clear
sudo su
sed -i -e <string>
tmux source-file <file>
git rebase -i <string>
sudo apt-get install <string>
nano <file>
sudo shred -f -n <number>
cd
awk <string>
cd <string>
ls
sudo su
ls
ls
git add .
wget <URL>
mkdir <string>
git status
git add <string>
cd ..
scp <string>
udevadm info <directory>
sudo apt purge <string>
cd ..
ls
sudo pacman-mirrors --interactive --default
cd <directory>
docker-compose up -d --build
exit <number>
sed -e <directory> -e <directory>
cd <string>
cd <directory>
mv <string>
grep -v <string>
cd <string>
sudo vi <file>
ls ..
sudo pacman -Syu
sudo yum <string>
rm <string>
git add -A
exit <number>
ls
cat <string>
sudo apt-get update
cd <string>
sudo service <string>
man <string>
git pull
clear
cd <directory>
vi <file>
mkdir -p <string>
sudo apt update\
cat <string>
cd
npm start
git commit -m <string>
cd ..
cd <string>
tail -n200
read -rp <string> <string>
cd <string>
wget <URL>
ls
rm -r <string>
top
cd <directory>
grep <string>
python3 <file>
rm -rf <string>
vi <file>
git config --global <file>
sudo start uwsgi
fg
source <string>
fg
fg
mkdir -p -- <string>
git remote add origin <URL>
git status
ls
ls
cd ..
git commit -am <string>
pwd
ls
awk <string>
git pull
finger <user> # displays information about user
cd <string>
git add .
docker-compose -f <string>
sudo -i
cd ..
clear
ls
rm <string>
cd <string>
sudo npm audit fix --force
cp <string>
git push -u <string> main
git pull
ls
ls
apt-get install screen apt-utils -y
vim <file>
git status
ls
nano <file>
apt-get update
cat <string>
cd <string>
chmod +x <string>
cd <string>
exit <number>
ls
cd <string>
cd ..
ls -la
find . -empty -type <string> -print -delete
ls
sudo apt-get -y <string>
sudo cp -rf <string>
ls
pwd
git init\
sudo aptitude purge <string>
xargs kill -9
cd <string>
sudo sed -i <directory> <file>
env
sudo nano <directory>
cd <directory>
cd <directory>
cat <string>
ls
python3 <file>
grep -E <string>
fg
sed <directory>
ls
ls
head -n <number>
exit
clear
tmux
man <string>
pwd
sudo systemctl start <string>
cd <string>
clear
git revert <string>
cd
mkdir <string>
vim <file>
ls -r <string>
sed -i <directory>
sh <file>
cd ..
git push
rm -r <string>
cd <string>
git checkout <string>
fg
sudo -s
mv <string>
vim <file>
git status
python3 <file>
ls
curl -L <URL>
ssh <string>
xargs kill
apt-get autoremove --purge
cd ..
sudo rm -rf <string>
ls
git add .
vim <file>
clear
rm -rf <string>
clear
cd <string>
ls
cd <directory>
npm run test:watch
cd <string>
ls
git pull
docker images
egrep -ri <string>
sudo nano <directory>
ls
chmod +x <string>
sudo apt-get update
ls
curl -sS <string>
git init
git add --all
sed -i <directory>
sudo start uwsgi
rm -rf <string>
nano <string>
ls
cut -d <string> -f <number>
git co PTS-578_redirects_not_updating_automatically
git checkout <string>
cd <string>
chmod +x <string>
cd <string>
vim <file>
curl -fsSL <URL>
ls
nano <string>
docker-compose logs
ls -ltr
ls
ls
chmod <number> <string>
git commit -m"update"
find . -name <file>
export <string>
sudo dpkg -i <file>
rm <string>
tar xvf <file>
cp -r <directory>
rm -rvf <directory>
git commit -m <string>
sleep <number>
clear
pacman -S <string>
php -r <string>
git st
cd
cd <string>
clear
cd ..
exit
git log
find <directory> -name <string>
touch <string>
<directory> <string>
sudo sed -i <directory> <file>
vim <file>
sh
ls
git checkout <string>
npm run start
cd <string>
git stash
git clone <URL>
mvn compile
sudo
git checkout -b <string>
vim
ls -a <string> lists all files in <string> , including hidden files (name beginning with <string> )
sudo reboot
wget -qO - <URL>
ls
local <string>
sed <directory>
done
less <string>
sudo cp -r <string>
docker images -a
sudo node -v
sudo sed -i <directory> <file>
ls -alrt
ls++ -a
ls
vi <file>
fg
source <file>
ls
sudo apt-get -y <string>
git add.
git remote -v
source <file>
ls
sudo apt-get install <string>
sudo apt dist-upgrade
python3 <file>
cd <string>
exit
lsblk
sudo snap install android-studio --classic
ls
ls
git rebase <directory>
chmod <string>
bash --init-file <string>
fg
clear
sed -i <string>
cd ..
ls -lt
ls
ls
git commit -m <string>
cd ..
npm run start
sudo nano <string>
grep -v <string>
script/build.sh
npm ls <string>
clear
npm install
ls
cd
sudo pip3 <string>
awk <string>
cat <string>
find . -type <string> -a <string> -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -a -exec <string> -i <directory>
ls
git rebase -i <string>
docker push <directory>
sudo vim <file>
sudo cp <string>
top
ssh-add <directory>
read -rp <string> <string>
cd
ls
sudo python3 <file>
git pull origin development
sed -i -e <directory> -e <directory> -e <directory>
ls
exit
ls
cd <string>
git add .
clear
git commit -m <string>
cp <string>
git remote add -f <string>
apt-get remove wide-dhcpv6-client -y
ls
brew install <string>
cd <string>
git config --add <file>
git merge <string>
ls
fg
git pull origin development --no-ff
npm install
git add .
pwd
cd <string>
ls
cd ..
cp <string>
nano <file>
vim <file>
git clone <URL>
wget -q <URL> -O-
su
cd ..
ls
ls
chmod +x <string>
git add .
git init
cd ..
fg
sudo apt install <string>
file <string>
git add .
watch <string>
git fetch
unset color_prompt force_color_prompt
su root
cd <string>
git commit -m <string>
source <string>
man <string>
clear
vim <file>
touch <string>
cd <string>
nano <file>
exit
rm -r <string>
sudo git commit -m <file>
find . -name <string> -type <string> -print
ls
git commit -m <string>
git status
git status
vim <file>
sudo adduser arjun
grep -vE <string>
cd <string>
ls
docker-compose up -d --build
ls
ls -alF
git add .
cd ..
ls
vim <file>
pwd
ls
ls
vim <file>
rm -rf <string>
tar -xvf <file>
git add .
cat <string>
ls
grep -v <string>
ls
ls -l
uname -u
git status
ls
sed -e <directory> -e <directory>
docker run -p <string>
less <string>
docker build -t <string>
dir
ssh -i <string> remote_user@remote_host
ls
cd <directory>
find src
done
apt-get install tcpdump -y
cd ..
cd <string>
vim <file>
vim <file>
rm <string>
npm start
git branch -m <string>
kill
vi <file>
exit <number>
ls
ls -a
npm install --save <string>
rm <string>
cd <string>
git push origin
touch <file>
git add -A
vi <file>
git add <string>
exit <number>
top
ls
cd <string>
wget -SO <directory>
ls
git stash pop
chmod <number> <string>
code --in-process-gpu
cd <string>
ln -s <string>
cd
man <string>
ls
date
rm <string>
git status
clear
sudo python <file>
sleep <string>
ls
git status
ls
ls -la
pwd
ls
code <string>
vim <file>
cd <string>
git fetch upstream
rm -rf <string>
kubectl get -n <string>
rm -rf <string>
rm <string>
nano <file>
ls -l
ls
ls
ls
cd ..
git clone <URL>
npm install netlify-cli -g
read -p <string>
git add -v --dry-run <string>
sudo yum <string>
mvn clean <string>
file <string>
sleep --help <string>
nc <number> <number>
ls
mv <string>
sudo shutdown now
cat <string>
touch <file>
git clone <URL>
ls
pwd
cd <string>
exit
ls
sudo cp <string>
cd ..
export <string>
git add .
ls
git push -u <string> main
python3 <file>
setg RHOSTS <file>
pwd
cd <directory>
ls
ls
cd <string>
cat
sudo nmcli con mod <string> <string>
git add .
cd <directory>
cd <string>
ls
ls
git commit
cd <string>
mv <string>
rm -f <string>
reset
ls
sudo stop uwsgi
clear
ls
sudo apt-get install <string>
exit
git commit -m <string>
ls -a
nano <string>
sudo gem install <string>
git push --set-upstream <string> main
git commit -m <string>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
git init
cd <string>
git commit -m <string>
sudo systemctl stop <string>
git commit -v -a -m <string>
git init
sudo systemctl enable <string>
docker build -t <string>
vi <file>
ls
clear
head
git pull
clear
vi <file>
sudo apt update
cd <string>
<directory> <directory>
cp <string>
ls
vim <file>
sudo sysctl -p --system
git remote
clear
ls -l
vi <file>
ln -s <string>
ls -latr <directory>
ls
git remote add origin <URL>
npm run bench -- -c <file> -n <file>
cd ..
sudo chown -R <string>
sudo mkdir <directory>
sync
wget <URL>
vi <file>
rm <string>
cd <string>
ls
sudo umount <directory>
vim <file>
sudo make install
git add <string>
cd <string>
cd <directory>
byobu-tmux
rm -f <string>
gzip -c <file>
ip a
curl -fsSL <URL>
shutdown -h <string>
exit
make clean
exit
exit
ls
sudo vim <directory>
ls
ls
clear
ls
ls
git remote remove origin
git add .
vim <file>
fg
ls
cd ..
cd <directory>
git push
nano <string>
shuf -n <string>
grep -i -E -o --no-filename <string>
sudo apt upgrade -y
php -l -d <string>
git push
ls
ls
vim <file>
chmod +x <string>
vim <file>
clear
ls _build
ping <file>
journalctl -xeu <file>
git add <string>
ls
sudo df
cd ..
cd ..
ls -ltr
cd <string>
ln -s <string>
cd <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
sudo chmod <number> <directory>
git status
vim <file>
cd <string>
mv <string>
ls -m
git status
sudo python3 <file>
git status
exit <number>
cd <string>
mkdir <string>
clear
source <directory>
sudo dnf install <string>
cd ..
ls
sudo apt-get install -y <string>
grep <string>
npm run test
ls
git restore --source=<string> --staged --worktree --source-prefix=<string> <string>
exit
ls
curl <string>
ls
cd <string>
find . -type <string> -print0
mv <string>
cd
ls
git config --global <file> <file>
npm run test
git pull origin master
vi <file>
ls
less <string>
ls
exit
vim <file>
ls
vim
git commit --amend --reset-author
type <string>
cd <directory>
cd <directory>
ls
cd <string>
cd <string>
sudo pacman -S <string>
wget <URL>
cd <string>
vim <file>
ls
rm <string>
git status
ln -s <string>
git commit -m <string>
ls
git commit -m <string>
nano <file>
exit
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
git status
chmod u+x <string>
cd <directory>
cd <string>
sudo apt-get install <string>
clear
ls
ln -s <string>
sudo apt-get upgrade
cd <string>
vim <file>
sudo dpkg -i <file>
ls
cd ..
mkdir <string>
cd <directory>
ls
mkdir -p <string>
exit <number>
make clean
mkdir -p <string>
ls
cd..
bash <file>
fg
ls
cd <string>
ls
cat <string>
sudo chmod <number> <string>
cd <string>
cd <string>
ps aux
man -k <string>
git commit -m <string>
sudo apt-get install <string>
sudo mkfs.ext4 <string>
npm install pm2 -g
docker image <string>
git stash pop
docker container <string>
ls -lt
vi <file>
git commit -m <string>
sort
sudo apt-get -y <string>
clear
sudo mkdir -p <directory>
exit
cd ..
exit
git archive <string>
uniq
brew install <string>
ls
git push
cd <string>
git add .
nano <file>
ip help
tar -xzvf <file>
git pull
ls
python3 <file>
git commit -m <string>
kill -s <number> <number>
clear
fg
cd <directory>
git pull --ff-only <string>
cd <directory>
sudo nano <string>
service <string>
chmod <string>
cd <directory>
exit
sudo nano <directory>
ls
cd
ls # lists your files in current directory, ls <dir> to print files in a specific directory
cd <string>
ls -l
npm i -g <string>
export
npm install -g <string>
sudo nano <directory>
which <string>
bash <file>
exit
sudo -s -u <string> -H
git remote add origin <URL>
cd <string>
cd
git commit
cd <string>
grep -vE <string>
ls projects
python3 <file>
cd ..
cd <directory>
ls
<file> program
sudo pip3 install <string>
docker exec -it <string>
nano <file>
ls
cd <string>
ls
curl $PACKER -o <file>
fg
git remote add origin <URL>
sudo killall <string>
cd <string>
fg
ls
grep <string>
vi <file>
ls
awk --help
git push -u <string> master
ls
git add <string>
git push
cd ..
docker-compose logs
ls -la
cd <string>
cd <string>
docker rm <string>
git commit -am <string>
cd ..
exit
rm <string>
ssh dirlic@10.18.0.39 -p <number>
cd ..
cd
ls
curl -Lo <string>
git commit -m <string>
cut -f <number> -d <string>
cd
open <string>
ls -la
tail -f <directory>
ln -s <string>
less
cp -r <directory>
git checkout <string>
sed <directory>
jq <string>
sudo cp <string>
cd <directory>
apt-cache search <string>
sudo yum -y <string>
mvn compile
ls
cp <string>
cd ..
cd <string>
git add.
cp <string>
ls
man <string>
ls
vim <file>
cp -r <directory>
rm <string>
tar -zxvf <file>
codedown javascript > <file>
git clone <URL>
ls
clear
sudo systemctl status <string>
ls
unset color_prompt force_color_prompt
python <file> runserver 0.0.0.0:2016
ls
service apache2 reload
npx unlighthouse --site <URL> --urls <URL>
vim <file>
git commit -m <string>
clear
python3 <file>
git commit -m <string>
cp <string>
ssh <string>
vim <file>
cd <string>
ls
cd <string>
git add .
cd <string>
cp <string>
cd <string>
git commit-tree <string>
exit
git push origin <string>
git merge <string>
git status
find . -printf <string>
ls
sudo apt-get -y <string>
sudo apt -y <string> <string>
pwd
rm -rf <string>
cd <string>
git push -u <string> master
cd <string>
then\
screen
git remote -v
cd ..
ping <string>
find . -name <string> -type <string> -prune -exec <string> -rf <string> +
git clone <URL>
sudo netstat -tulpn
ls
sudo apt-get install <string>
cd ..
ls
clear
curl -Is <string>
sudo git fetch
source <file>
git add .
sudo apt install -y <string>
cd <string>
cp <string>
cd <string>
fg
git pull
sed -e <directory> -e <directory>
cd ..
ruby
wget <URL>
git add .
git commit -m <string>
ls
cd <string>
git push -u <string> master
rm <string>
find . -empty -type <string> -print -delete
clear
git init
cd <string>
touch <file>
dd <string>
ls
cd <string>
cd <string>
rm <string>
exit <number>
ls -alF
ls
cd <string>
apt-get install -y <string>
git commit -m <string>
grep <string>
rm -rf <string>
ls -l
mkdir <string>
docker push <directory>
sed <directory>
vi <file>
fg
grep <string>
sudo mkdir <directory>
ssh esther@10.18.0.41 -p <number>
git
sudo npm start
tar -zcf <file>
ls
pwd
vi <file>
then\
ls -latr
cd <string>
cd <string>
find $dir -type <string>
git add <string>
ls
ls
clear
git status
git remote -h
npm create vite@latest
mv <string>
git commit -m <string>
fg
done
<directory> <string>
cd <directory>
docker image ls
git checkout <string>
git push -f
rg <string>
git commit -m <string>
clear
vi <file>
cd
source <file>
git branch -M <string>
cd <string>
sudo mount <directory>
git add .
ls
cd <string>
ls
cd <directory>
kubectl rollout status deploy 3scale-kourier-control -n <string>
ls
vim <file>
git config <file> <string>
fg
clear
code .
exit
chmod +x <string>
cd <string>
cd <directory>
cd <string>
sudo stop uwsgi
grep <string>
kill -9 <number>
git stash
vi <file>
ls -la
mkdir <string>
ssh-keygen -q -N <string>
sed <directory>
cd
ls
sed <directory>
cd <string>
exit
npm install
history
git status
git log --diff-filter=<string> --summary
uniq
cat <string>
clear
ls -la
git init
sudo git svn <string>
cd <directory>
ls
mv <string>
export --help
ls -l
cd <string>
true <string>
ls -l
cd <directory>
cd <directory>
npm run devstart
man <string>
nano <string>
curl -so- <URL>
rm -rf <string>
cd <string>
touch <file>
rm <string>
sudo rm -rf <directory> <directory>
ls
git status
cd <string>
ls -la
sleep <number>
touch <file>
man <string>
ls
rm -f <string>
cd <directory>
<directory> <directory>
cd ..
git pull
sudo apt-get update
sed -i <string>
vim <file>
npm install
du
touch -a
git commit
git init
man <string>
cd <directory>
exit
git merge <string>
mkdir <string>
ls
find . -type <string> -name <string>
ls
git init
htop
sudo apt install <string>
sed <directory>
cp <string>
mkdir <string>
ls
rm -rf <string>
exit
vim <file>
sudo apt-get install -y <string>
cd <string>
ls
cd <string>
docker stop <string>
clear
npm run bench -- -c <file> -n <file>
sudo nohup rsync -avzhP --exclude <string> --exclude <string> --exclude <string> --exclude <string> --exclude <string> -e <string>
chmod +x <string>
git push --set-upstream <string>
clear
cut -d <string> -f <number>
clear
cd <string>
npm start
docker-compose up
cd <string>
ls
git status
halt
vi <file>
git status
npm install strapi@latest -g
git commit -m <string> --no-verify
git add .
git co HEAD .
git stash pop
vi <file>
ls
mv <string>
rm -rf <string>
mkdir <string>
cd ..
rm -rf <string>
sudo xrandr --output <string> --auto
fg
ls
git push
git pull
git commit -m <string>
vi <file>
find . \( -name <string> -o -name <string> -o -name <string> -o -name <string> \) -exec <string> -rf -- <string> +
pwd
tail <directory> -n <number>
cd <string>
cd <string>
cd
bash -x <string>
read -r <string>
ls -la
sudo sed -i <directory> <file>
mv <string>
view <string>
ls
cd ..
git add <string>
exit
git pull
git branch -m
ls
su
mkdir <string>
grep <string>
rm <string>
cd <string>
git status
exit
cd <string>
sudo nano <directory>
cd <directory>
ls
ls -1
cd <directory>
git diff -G"^[^ <string>
sudo lvcreate -l <string>
ps -ef
head -n <string>
exit
cat <string>
clear
find . -type <string> -newermt <string> -exec <string> -ch <string>
ls
chmod +x <string>
su - <string>
docker-machine create -d <string>
wget -N <URL>
git pull origin <string>
tail -f <string>
printf <string>
git push --set-upstream <string> master
cp -v <string>
git add <string>
git rebase -i <string>
ls
ls
pwd
vi <file>
cd ..
fg
set <string>
cd <directory>
sudo snap install intellij-idea-community --classic
local <string>
exit <number>
jq <string>
cd <string>
ls
read <string>
less <string>
cd <directory>
pwd
curl --silent --location <URL>
git --version
npm run
cd <directory>
git grep <string>
vi <file>
vi <file>
sudo apt-get upgrade -y
sudo ufw status
stat <file>
ls
ls
read <string>
git add -f <string>
cd <string>
clear
vim <file>
cd <directory>
sudo apt-get -s <string>
git status
clear
ls
grep <string>
ls
git branch -d <string>
ls -ltr
sudo pacman -S <string>
docker login --password
ls
top
git commit -vvv -a -m <string>
git add .
vim <file>
cd <directory>
git commit -m <string>
ls
cd
ls
vim <file>
sudo gedit <string>
mkdir <string>
sudo apt-get install <string>
git add .
cd ..
rm -rf <string>
cd <directory>
mkdir <string>
source <directory>
cd <directory>
git checkout -b <string>
git remote add origin <URL>
git commit -m <string>
ls
git push
mv <string>
cd <string>
fg
cd <string>
vi <file>
git br -r <string>
git push
npm i glob -f
ls
git add <string>
cd <string>
vim <file>
cd ..
ls
dmesg
git add .
cd <string>
cd <string>
sed <directory>
sudo kill -9 <number>
sudo apt-get install <string>
cp <string>
clear
ls -lh <string>
ls
tmux new -s <string>
sudo apt-get update
ls
docker container <string>
vim
sed -i <string>
ls -la <directory>
git add <string>
ls
man -k <string>
git commit -m <string>
ls
cd ..
sudo apt-get install <string>
sudo docker kill corrade
ls
curl -OJLZ <URL>
git push origin master
ls
npm install
ls
git pull
cd <string>
cat <string>
grep <string>
sudo apt-get -y <string>
vi <file>
cd ..
sudo apt-get install -y <string>
clear
ssh <string>
sudo journalctl -u <file>
sed -n <string>
read -p <string>
cat <string>
cd <string>
sudo apt install <string>
vim <file>
nohup node <file>
systemctl status <string>
git
cd <string>
ls
grep <string>
mkdir <string>
ls
ls -lt
ls -la
git clone <URL>
sudo make clean install
cd ..
cd <string>
curl -LO <string>
touch <file>
npx shadcn-ui@latest add <string>
cd <directory>
cd ..
cat <string>
mkdir <string>
ls
cd <directory>
docker-compose up -d --build
apt-get update
xargs docker rmi
clear
sed -n <string>
chown -R <string>
sudo docker run -d -P --name <string>
docker-compose --version
mv <string>
cd <directory>
ls
sudo systemctl restart nginx
sudo apt-key add -
touch <file>
clear
less -R <string>
git status
clear
sudo apt-cache search <string>
ls
pwd
ls
curl -T <directory> <string>
find . -name <file>
vim <file>
sudo pip install pycurl --upgrade
git config --global <file> <string>
grep <string>
ls
cd <string>
sudo apt-get -y <string>
git clone <URL>
pwd
shutdown
ls
sed <directory>
sudo chmod +x <string>
git clone <URL>
tmux
grep <string>
export <string>
cd <string>
unset <string>
rm <string>
vim
mkdir -p <string>
git remote add origin <URL>
python3 <file>
vim <file>
cd <directory>
cd <string>
yarn <string>
sudo lsof -ti:8888
cd <string>
ls
git commit --amend --reset-author
git commit -a -m <string>
sudo apt-get update
date
clear
vim <file>
mkdir -p <string>
mv <string>
vi <file>
npm start
<file> program
read <string>
fg
docker images --format <string>
python3 <file>
git log
screen -r <string>
ls
npm run prod
git status
git add <string>
journalctl
rm -rf <string>
sudo emacs <string>
clear
git push origin master
ls
docker ps
docker run -p <string> -p <string> -p <string> -v <file> -v <directory>
sudo usermod -aG <string> <string>
ls
sudo snap find <string>
git --global
ls
git add .
clear
more <file>
kill -9 <number>
rm -rf
ss
git status
ls -l
npm install
cat <string>
git init
apt-get update
sleep <string>
sudo reboot
rm -rf <string>
sudo apt-get update
source <string>
ls
read -p <string> -r <string>
ls -la
clear
rm -rf <string>
exit <number>
git commit -m <string>
git add <string>
ls -lhrt
git help <string>
setg RHOSTS <file>
cd <directory>
cd <string>
bash --version
rm -rf <string>
cd ..
cd <string>
sudo pip install <string>
cd <string>
git status
vim <file>
read -n <number> -p <string>
cd
git status
cd ..
ls -alrt <string>
cat <string>
cd <string>
cd <directory>
curl -s <string>
git clone <URL>
vim <file>
rm -f <string>
git st
ls -a
curl <string>
nano <file>
cd
curl <string>
cd ..
git config --global <file> <file>
mkdir <string>
ls
rm <string>
ls
vim <file>
fg
ls
git status
sudo alternatives --set <string> <directory>
cp <string>
python <file> runserver 0.0.0.0:2016
npm run watch
vim <file>
sudo cp <string>
ls
vi <file>
head -10
git commit -m <string>
cd ..
vi <file>
vi <file>
vi <file>
mkdir
git init\
ls
cd ..
kubectl apply -f <string>
ls
git pull
ln -s <string>
ls
sudo start uwsgi
ls
cd <directory>
cd <string>
sudo touch <directory>
git commit
ls
passwd
vim <file>
mkdir <string>
apt-transport-https \
vim <file>
mkdir <string>
ls
tmux save-buffer -
git pull
cd
python3 <file>
ls
grep -vn <directory>
cd <string>
ls
cd <string>
ls
git status
vim <file>
grep -rE <string>
cd <string>
cp -R <string>
npm i --global <string>
git add <string>
sudo apt-get install <string>
npm i <string>
cd <string>
ls
hostname
git remote -v
git status
git init
cd <string>
ls
ls -l
git merge <string>
docker push <directory>
git push origin
sudo chown <string>
nano <file>
vi <file>
cd ..
vi <file>
git add <string>
git stash pop
touch <file>
npm install -g <string>
sudo chmod <number> <string>
chgrp -R <string>
top
cd <string>
ssh dirlic@10.18.0.39 -p <number>
vim <file>
cat <string>
ls
sudo sed -i <directory> <file>
fg
curl -fsSL <URL>
git add -v --dry-run <string>
ssh <string>
git push
kill -9 <number>
cp <string>
cd ..
cd <directory>
exit
source <directory>
true
sudo apt-get install -y <string>
cd <string>
grep -vi <string>
yarn install
cd ..
ssh <string>
cd <string>
file <string>
service <string>
cd <string>
sudo docker run --rm --volume <directory>
git branch
ls
cd <string>
git add <string>
git push
mv <string>
cd ..
git add <string>
npm run make
cd <string>
fg
tail -f <string>
head -15 <string>
sudo ufw allow <string>
ls
ps aux
cd
sudo vim <directory>
exit
git push -u <string> master
touch <file>
sudo zypper install <string>
cd <string>
cd <string>
git clone <URL>
cd <directory>
ls
git add .
git commit -m <string>
apt-get install <string>
find dotfile -type <string> -name <string>
ls
ls
ls
ls
ls
grep <string>
git push
cat <string>
git rebase <string>
tmux kill-session -t <string>
exit
ls
git add .
clear
vim
clear
cd <directory>
git status
sudo apt remove <string>
sudo apt-get install <string>
git pull
ls
clear
cp -f <string>
pwd
history
cd
git add <string>
vi <file>
do\
sudo pacman -S <string> --noconfirm
cd <string>
ls
git init
lsof -i
git add <string>
git branch -d <string>
source <directory>
cat <string>
grep <string>
git status
sudo chmod <number> <directory>
ls
sudo nano <string>
yarn add <string>
git remote add origin <URL>
nc -l <number>
exit <number>
nano <file>
fg
cd ..
ls
sudo a2enmod <string>
ls
ls
git status
ls
mkdir <string>
ls
sudo apt install -f
vi <file>
sudo apt install <string>
cd <directory>
sudo yum <string>
sudo prime-select <string>
sudo python3 <file>
find . -name <file> -type <string> -print
cat <string>
grep <string>
clear
grep -i <string>
cd <directory>
pwd
clear
ls
cd <string>
python3 <file>
python3 <file>
service <string>
cd <string>
python3 <file> -- <string> @CAMERA=<string> @WE_BLUE
ls
ls
ls
export <string>
git add .
sudo pip install -r <file>
ls -al
ls
nano <file>
ls
exit
cd <directory>
cd <string>
sudo apt install <string>
cd <directory>
ls
cd -a <directory>
sudo dmidecode -t <number>
sudo apt install <string>
top
git status
read <string>
exit <number>
cd <directory>
history
docker run --name <string> --rm -p <string> -p <string>
ls
git clone
zip -FS -q -r <file>
wget <URL>
ls
ls
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
ls
chmod +x <string>
touch <string>
apt install <string>
ls
ls
sudo apt install <string>
git stash
cat <string>
python3 <file>
npx shadcn-ui@latest add <string>
chmod <number> <string>
ls
ls
cd <string>
rmdir <string>
clear
vi <file>
sudo apt-get update
ls
ls
sudo -s
read -r -s -p <string>
wget <URL>
cd ..
alias <string>
ln -s <string>
mkdir -p <string>
sudo cp -r <string>
ls
cp <string>
git add .
cd <string>
sudo cp <string>
touch <string>
ls
cd <string>
git commit -m <string>
cd <directory>
sudo make install
sh -c <string>
ls
git commit
cd <string>
mkdir <string>
sudo <directory> restart
cd <string>
cd <directory>
git init
cd <directory>
sudo nano <string>
cd <string>
ls
git status
ls
docker ps -a
cp -v <string>
sudo apt install -y <string>
ls
cd <string>
cp <string>
grep <string>
kubectl get <string>
open <string>
sudo rm -rf <string>
pwd
exit
wc -l <string>
ls
ls -la
kubectl <string>
cat <string>
git status
cd ..
git commit -m <string>
vim
python <file> runserver 0.0.0.0:2016
cd <directory>
ls
ls
fg
git clone <URL>
ls
cd <string>
cd <string>
openssl s_client -showcerts -connect <string>
sudo useradd -G <string>
git remote add origin <URL>
vim <file>
cd ..
rm -rf <string>
sudo pacman -S <string>
cd <string>
ls
code .
fg
git push -u <string> main
kill -SIGUSR1 <number>
tail <filename> # outputs the last lines of file (useful with -f <string> (default: <number> lines)
vi <file>
git commit -m <string>
git add <string>
ls
rm -f <string>
git pull
git commit -m <string>
sudo rm -rf <string>
cd ..
git status
ls
cd <string>
ls
git push origin <string>
grep -i <string> >files
git filter-branch -f --index-filter <string>
sudo rm -f <directory>
ls --help
cd ..
cd <string>
vi <file>
awk <string>
cd <string>
cd <string>
source <directory>
ls
cd <string>
git st
vi <file>
git push
vim <file>
rm <string>
git pull
kubectl get <string>
ls
exit <number>
ls
cd <string>
git add <string>
sort -nr
git push
sudo update-alternatives --install <directory>
exit <number>
git
apt-get install <string>
docker-compose logs
sudo yum install -y <string>
npm init -y
cd <string>
sudo apt dist-upgrade
find <directory> -iname <file> -type <string> -exec <string> -c <string> {} \
npm start --active-arch-only -- --resetCache <string>
npm i -g <string>
pwd
ls
git commit -m <string>
pwd # tells you where you currently are
ls
git checkout <string>
ls
git submodule init <string>
read -r <string>
wget -qO- <URL>
rm -r <string>
git config -l
cd <string>
ls
ls
find . -type <string> -printf <string>
sed -rn <directory> -O <file>
apt-get update
perl <file>
curl <string>
ls
npm install
git init
git status
ls
sudo pkill -u <string>
ls
npm http <number> <URL>
git checkout -b <string>
sudo sed -i <directory> <file>
sudo apt install
sudo udevadm trigger
git status
cd <string>
npm install --save <string> -session
sudo insmod <file>
git push -u <string> master
sh <file>
df
pwd
kubectl exec $POD -ti -- <string> -s <string> --max-time <number>
cd ..
ls
cd <string>
exit <number>
clear
cd ..
ls
mkdir -p <string>
ls
ls
ls
npm i <string>
vim <file>
clear
cd <directory>
uniq
sudo update-alternatives --install <directory>
mkdir <string>
docker-compose stop <string>
npm run start
ls -lrt
vim <file>
rm <string>
ls
cd <directory>
git branch -M <string>
ls
cp <string>
clear
git add <string>
ls
git push -f
sudo nano <file>
curl -s <string>
ls
npm run build
less <string>
read <string>
cd ..
snap
vi <file>
cd ..
python <file> runserver 0.0.0.0:2016
kill -9 <number>
exit <number>
rm -f <string>
clear
vim <file>
docker kill <string>
cd <directory>
cd <string>
cd <string>
ls
rm <string>
exit <number>
bash
cd ..
chmod u+x <string>
read -p <string>
clear
ls -la <directory>
rm <string>
sudo apt install nodejs -y
git commit -m <string>
cd <string>
cd ..
git pull
rm -r <string>
curl -Ls <URL>
cd <directory>
git checkout <string>
rm -r -f <string>
mkdir <string>
exit <number>
sudo apt -y <string>
cp -r <directory>
git commit -m <string>
xargs tar cvf <file> -
git merge <string>
clear
htop
git commit -m <string>
vim <file>
sudo nmcli <string>
cat <string>
cd <string>
rm <string>
cd <directory>
mkdir <string>
exit
git branch -v
uname -r
ls
rm <string>
sudo <directory> -k
git commit -m <string>
git checkout -b <string>
npm run build
rm -rf <string>
cd <string>
git commit -m <string>
ls
ls
chmod +x <string>
git status
git push
sudo service nginx reload
cd ..
curl -o- <URL>
git clone <URL>
ls
docker cp <string>
cd <string>
ls
ls
sudo visudo
sudo ln -s <directory>
rm <string>
hwclock --systohc
wget <URL>
sudo apt install <string>
git clone <URL>
git pull
tar xvf <file>
cd ..
ls
git add .
docker-compose logs
exit
git status
npm install
git push -u <string> main
ip a
sudo apt update
date
ls
nano <string>
exit <number>
clear
cd <string>
apt install -y <string>
curl -sL <URL>
cd <string>
sudo chmod +x <string>
git push
sudo du -sh <string>
diff -u <string>
vim <file>
ls
grep
git commit -m <string>
vi <file>
git remote -v
git pull origin main
ls
tmux a
read -p <string>
cd ..
sudo lvcreate -L <string> -s -n <string>
git init
ls
fg
ls
sudo chmod 700 <file>
fg
less
vim <file>
ls
ls
more <file>
ls
more <file>
sudo systemctl status <string>
ls
ls
cd ..
systemctl enable <string>
cp <string>
cd ..
npm install
git status
vim <file>
cd <string>
git push
git push -u <string> master
exit
ls
git add .
ls
git pull
ls -t
rm -rf <string>
sed -i <directory>
sudo userdel <string>
ls
ls
docker ps
cd <string>
sudo sed -i <directory>
pkill <string>
vim <file>
clear
ssh-keygen
git pull origin master
read -rp <string> <string>
ls
exit <number>
clear
git commit -a -m <string>
cd
code .
cd
curl <string>
cd
rm -f <string>
cd <string>
npm run start
read -rp <string> <string>
ls
chsh <string>
python3 <file>
sudo apt-get -y <string>
ls -la
cd <string>
vim <file>
tail -xx <string>
sudo pip3 install <string>
mkdir <string>
clear
python3 <file>
wget <URL>
cd <directory>
ls
date
ls -altr
clear
exit
sudo apt-get install <string>
ls
sudo docker ps
which <string>
exit
nano <string>
wget -O <file>
exit
less
cd ..
sudo pacman -S <string>
tail -100 <file>
systemctl restart <file>
ls
ls
ls
clear
cd <directory>
cp <string>
rm -rf <string>
git branch -a
cat <string>
ls
chmod +x <string>
grep -rn <string>
mv <string>
git status
grep -r <string>
sed -i -e <string>
sudo curl -fsSL <URL> -o <directory>
git status
vim <file>
cd <string>
cd ..
ls
ls
top
vim <file>
tar tvf -
ls
sudo vim <directory>
sudo make install
exit
sed -i <directory>
ls
sudo usermod -aG <string>
ls
clear
cd <string>
ps aux
sed -i <directory>
sudo sed -i <directory> <file>
npm run test
python3 <file>
cut -f <string> -d <string>
nano <file>
sudo chmod -R <number> <string>
git add .
ls
ls
vi <file>
chmod +x <string>
ping <string>
source <directory>
git commit -m <string>
sudo npm install
ls
ssh -T <file>
ls
curl -v -H <string>
sudo usermod -s <string>
docker rm <string>
touch <file>
ls
vim <file>
ls
exit <number>
ls
source <file>
cd <string>
git clone <URL>
apt list --installed
git init
rm -r <string>
clear
git push -u <string> master
cd <string>
ls
scp <string>
grep <string>
ls
git commit -m <string>
git pull
sudo cp <string>
apt-get update
clear
cd <directory>
ls
history
ls
cd ..
ls
sort -u
git commit -m <string>
npm init -y
ls
mkdir <string>
git push
sudo ntpdate <string>
mkdir -p <string>
exit <number>
sudo xbps-install -Su
cd <string>
free
sed <directory>
git remote add origin <URL>
clear
cd ..
vim <file>
cd <directory>
git gc
git add --all
ls
export <string>
rm -rf <string>
vi <file>
ip a
git status
ls
uname -a
ls
ls
git status
ls
more <file>
clear
sudo usermod -a -G <string>
apt-get install <string>
cd <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
cd <string>
exit
cat <string>
cd <string>
rm -rf <string>
ls
git commit -m <string>
cd <string>
apt-get clean
sudo -u <string> psql
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
telnet -tulpn
ls
grep <string>
ls
cd ..
vim <file>
man <string>
git diff <directory> -- <file>
git config --global <file> <string>
vi <file>
git add <string>
cd ..
cd <directory>
cd <string>
ls
cd <string>
sudo apt-get install <string>
exit
fg
cd <string>
vim <file>
git config --list
sudo ln -s <directory>
pwd
docker exec -it <string>
python3 <file>
read <string>
ls
ssh-keygen --help
ls -l
vim <file>
cd <string>
ls
grep <string>
git checkout <string>
sed -i <string>
cd <string>
vi
cd <string>
cd <string>
uname -r
fg
cd ..
sudo apt-key add -
sudo apt-get install <string>
python3 <file>
ls
<directory> <directory>
tmux attach
then\
cat <string>
sudo pmset -a <string> <number>
git reflog expire --expire=<string> --all
ls
ls
vi <file>
npm install -f
ls
systemctl status <string>
git commit -m <string>
cat <string>
ls
ls
ls
cd <string>
git commit -m <string>
git config --global <file>
git commit -m <string>
cd ..
tmux kill
rate=<string> -O - <directory>
rm -f <string>
git remote add origin <URL>
docker exec -e <string>
tmux
vim <file>
ls -la
vim <file>
git add <string>
vim <file>
su - <string>
git add -A
git add <string>
ls
xrandr --help
done
read -rsp <string>
cd ..
ls
sudo sed -i <directory>
cd ..
ls
vi <file>
find . -name <file>
exit
git clone <URL>
cd <directory>
ls -a
find . -name <file>
kubectl <string>
ls
code .
fg
cd <directory>
git push
rsync -a <string>
ls
ls
exit
vi <file>
rm -rf <string>
sudo cat <directory>
ls
sed <directory>
vim <file>
exit
sudo cp -R <directory>
wget <URL>
vim <file>
cd <directory>
fg
ls
systemctl --user <string>
source <file>
ls
apt-get install -y <string>
git format-patch -X <string> --stdout <string>
vim <file>
vi <file>
ls
export <string>
cd <string>
top
clear
usermod -aG <string> <string>
curl -s -o <file>
cd <string>
ls
git add .
clear
ls
sudo cp <string>
reboot
df -h
npm i
npm run dev
ls
git commit -m <string>
npm start
rm -r <string>
sh <file>
ls -la
git commit -m <string>
cd <directory>
mount -t <string> -o <string>
vim <file>
npm install
mv <string>
sed -i <string>
cd <string>
ps aux
ls
vim <file>
tail -f <directory>
rm -r <string>
sudo -i
ls
vim <file>
vi <file>
cat <string>
clear
cd <directory>
ls
ls -a
clear
ls -la
cd
sudo bash <file>
git merge <string>
ping <file>
chmod -x <file>
git status
git push
ls
cd <string>
clear
chmod <number> <string>
cd ..
ls
rm -f <string>
ls
sudo tune2fs -l <directory>
curl -o- <URL>
git commit -m <string>
screen -rd <string>
git clone <URL>
rm -r <string>
ls
find <directory> -name <string> -o -name <string> -exec <string> <string>
cd ..
git gc --aggressive --prune
npm start
sudo shutdown -r <string>
clear
yarn <string>
read <string>
cd <string>
apt-get install -y <string>
man <string>
npm install <string>
python3 <file>
cd <string>
wget <URL>
ls
cp <string>
chmod <number> <string>
ls
cd <string>
open <string>
sed <directory>
vi <file>
rmdir <string>
npm i <string>
ls
cd <string>
sed -i <string>
sudo apt-get install -y <string>
cd <string>
gpg --verify <file> <string>
cd <string>
nano <file>
npm start
touch <file>
clear
git commit -m <string>
ls
npm start
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
sudo ufw allow <string>
scp <string>
ls
bash
read -p <string>
grep <string>
ls
ls
ssh <string>
docker commit <string>
git commit -m <string>
sh
ls
git commit -m <string>
cd ..
cd ..
git checkout <directory> -f
sudo curl -L -o <directory>
git remote add origin <URL>
ls -la
sudo apt-get autoremove
ls
bash
docker-compose up -d --build
git add <string>
ls -lla
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
fg
ls
git pull
ssh <string>
cp -r <directory>
git remote -v
su root
ls
sudo gedit <string>
read -r <string>
clear
curl <URL> -sSf
ls
cd <string>
ls
mkdir <string>
mv <string>
sudo cat <file>
cd <directory>
ls
sudo systemctl status prometheus
grep <string>
git commit -m <string>
cd <directory>
cd <string>
git checkout <string>
ln -s <string>
<file> <file>
chmod <number> <string>
cat <string>
sed <directory>
exit <number>
cat <string>
cp <string>
sudo prime-select <string>
cd <directory>
ls
sudo nano <directory>
mkdir <string>
rm -r <string>
git commit -m <string>
sudo cp <string>
cd ..
cd ..
curl <string>
sudo rsync -av --progress <directory>
read -rp <string> <string>
python3 <file>
clear
git add <string>
vi <file>
ls
npm run test
reset
git add -A
git clone --depth <number> <URL>
git commit -am <string>
ls
ls
mkdir <string>
tmux source
cd ..
git switch <string>
cpio -p -d -v <directory>
git grep -q -iI <string>
wget -O <file>
sed <directory>
grep -v <string>
vi <file>
ps -aux
ls
pwd
vi <file>
git commit -m <string>
sudo find <directory> -name <string>
cd <directory>
python3
git push origin <string>
ls
then\
diff <file>
ls
ls
git status
history
ls
git add .
<directory> install --from-paths <string> --ignore-src -r -y
ls -l
ls
ls
vim <file>
ls
cd <directory>
vim <file>
vim <file>
cd <string>
git pull
cd <directory>
cd ..
sudo sed -i <directory> <file>
ps axfu
done
ls
git add <string>
brew install <string>
git status
ls
ls
sudo yum install git -y
cd <directory>
clear
vim <file>
set <string>
ls
chmod -x <file>
ls
cd <directory>
npm install npm install <directory> --force
cd <string>
ls
vi <file>
ls
git commit -m <string>
sudo start uwsgi
sudo apt install <string>
git clone <URL>
ip a l
sed -i -E <string>
python3 <file>
git clone <URL>
sudo xbps-remove <string>
more <file>
grep <string>
vim <file>
cd <string>
git co HEAD <directory>
sudo systemctl start <string>
pwd
print -P <string>
cd <string>
vim <file>
source <file>
cd <directory>
yarn install
pwd
cd <string>
ls
nano <string>
git status
cd ..
brew install --cask <string>
git init
ls
cd <string>
vim <file>
sudo apt remove --purge <string>
ls
grep -i <string>
grep <string>
history
git remote -v
git add -A -f -- <string>
vim <file>
ls
cp -r <directory>
cat <string>
exit <number>
npm run test
git merge develop
git commit -m <string>
grep -Eqi <string>
cd
ls
cd <directory>
vi <file>
ls
vi <file>
cd <directory>
vi <file>
source <string>
exit
rm -rf <string>
wget <URL>
cd <string>
ls
ls
sleep <number>
ls -r
ls
git config --global <file> <string>
ls -la
ls
grep -w <string>
cd <directory>
vim <file>
ls
du -skh <string>
find . -type <string> -mmin -60
clear
ls
git push
vim <file>
git pull
rm <string>
sudo pip install <string>
sudo service <string>
find . -empty -type <string> -print -delete
cd <string>
history
docker kill <string>
ls
git status
sudo chmod -R <number> <string>
clear
git pull origin master
cat <string>
sudo add-apt-repository <directory>
cp -v <string> <directory>
ls
python3 <file>
ls
cd <string>
git add <string>
ls
cd <string>
git add .
nano <file>
ls
<directory> <string>
git status
npm run start
clear
vim <file>
exit
cd ..
cd <string>
man <string>
clear
ls
ls
sed -i.bak <directory>
git remote -v
ls
find <directory> -name <string>
git remote add origin <URL>
yarn add -D <string>
mv <string>
fg
vim <file>
man <string>
sudo -H <string>
vi <file>
npx create-react-app <string>
then\
sudo <file> -v -w <string> -o <string>
cd ..
ls
exit
scp -p18082 <file>
git status
ls
exit <number>
ls
git push origin main
cd <string>
git push -u <string> master
git add <string>
touch <file>
ssh <string>
wget -r <URL>
clear
sudo gem install <string>
cd
git commit --amend
sudo chmod +x <string>
mkdir <string>
ls
ls
git add .
touch <file>
sed <directory>
rm <string>
fg
sudo cp -r <string>
sudo adduser <string>
chmod +x <string>
ls
chmod +x <string>
cd <directory>
cd <string>
ls
code .
cd <string>
tee -a <string>
cd ..
dir
ls -l
ls
git push -u <string> master
git add -A
git log
mv <string>
cd <directory>
python3 <file>
dmd-bootstrap -run <file>
git status
git push
cd <directory>
ls
vim <file>
git commit -m <string>
cd <string>
wget -O <file>
cd <directory>
clear
vim <file>
cd ..
git submodule add <URL>
rm -rf <string>
g++ -std=<string> <file> -o <string>
ls
chmod <number> <string>
cd
sudo apt-get update
cd <string>
exit
sudo sed -i <directory> <file>
vi <file>
sudo cd root
ls
exit
python3.11 <file>
sudo tcpdump <string>
git pull
ls
man <string>
cd <string>
ls
touch <string>
curl <string>
podman run <string>
git status
git config --global <file>
ls
exit <number>
git clone <URL>
read -r -p <string>
sudo nvim <directory>
sleep <number>
sort -R
killall <string>
mv <string>
cat <string>
cp <string>
sudo apt-get install <string>
ps -AZ
cat <string>
npm run coverage
docker tag <string>
cd <string>
sudo mount <directory>
vi <file>
git push heroku main
curl -L <URL>
ls
ls
ls
cat <string>
ls
exit <number>
ls -la
ls -l
git merge <string>
cd <string>
mv <string>
git stash
git init
vim <file>
ls
fg
sudo chown -R <string>
npm test
cd <directory>
ls
ls
mv <string>
cd <string>
ls
rm <string>
vi
cd <string>
ls
git pull
sudo netstat -ntulp
git push -u <string> master
ls
python3 <file>
cat <string>
cd <string>
vi <file>
sudo sed -i <directory>
cd ..
cd <string>
git config --global <file> <string>
history -w
cd ..
git push -u <string> master
sudo vi <directory>
ls
ps -f -u <string>
rm -rf <string>
sudo docker kill corrade
git push
cd <string>
sudo chsh -s <directory>
cd <string>
cd
mkdir <string>
vi <file>
chmod <number> <string>
git clone <URL>
apt-get install <string>
cd <string>
ls
ls
vi <file>
ls
exit
ls
vi <file>
git push
cd <string>
ls
ls
sudo luarocks install <string>
git status
cp <string>
sudo pacman -Ss <string>
<directory> <string>
git merge
cd <string>
git clone <URL>
clear
git log
wget <URL>
git status
git stash
cd <string>
exit
sed -i <string>
ls
mv <string>
git push
less <string>
cd <string>
python3 <file>
ls
ls
cd <string>
git commit -m <string>
more
git pull
cd
cd <string>
cd <string>
ls
ls
clear
read -r <string>
ls
du
sudo systemctl start <string>
grep <string>
ls -la <directory>
ls
ls
npm install <string>
cd <string>
fg
cd
cp <string>
cd ..
cd <string>
cd <string>
git status
rmdir <string>
printf <string>
git push -u <string> master
git checkout -b <string>
rm -r <string>
ls -la
git add .
ls
cd ..
<file> - <number>
done
clear
git push
wget $URL -qO -
sudo dnf install -y <string>
mv <string>
rm -r <string>
clear
tail -f <directory>
ls
cd ..
cd <string>
rmdir <string>
ls
sudo prime-select nvidia
mvn clean
cd <string>
sudo apt-get install <string>
cd ..
ls
cd <string>
git add .
yarn add <string>
sudo apt install <string>
ls
exit <number>
ls
nano <file>
less <string>
git status
git commit -m <string>
docker ps
cd ..
ls
brew services <string>
mv <string>
npm install <string>
fg
ls
find .
top
vim <file>
cut -f <string>
sed -r <directory>
grep -i <string>
cp <string>
grep <string>
python3 <file>
clear
xargs sed -i <directory>
ls
vim <file>
perl -i -pe <directory>
sudo stop uwsgi
cd <directory>
vi <file>
cat --help
clear
wget <URL>
clear
find . -type <string> -name <string> -print0
cd <string>
sudo -E <string> -
find -Es <string> -type <string> -regex <file>
python3 <file>
cd
exit
ls
git fetch -p <string>
fg
grep <string>
git add -A
ls
mv <string>
curl <string>
sudo mv <string>
cp <string>
docker push <directory>
mkdir <string>
git commit -m <string>
ls
git push -u <string> main
ls
read -r <string>
cd <string>
cd <string>
cd <string>
ls
ls
sudo make install
cd <string>
ls
ls -la <directory>
git add <string>
mkdir <string>
rm -r <string>
sleep <number>
touch <string>
cd ..
git status
cd ..
read -sp <string>
rm -r <string>
vim <file>
vi <file>
ls
cd ..
clear
ssh root@ -v
npm run test
python3 <file>
sed -i <string> -e <string>
vi <file>
sudo apt-get -y <string>
exit
exit <number>
<file> program
nano <file>
cp <string>
export <string>
grep <string>
rm -r <string>
python3 <file>
cat <string>
sleep <number>
ls
chmod +x <string>
egrep -ri <string>
ls
vi <file>
cat <string>
ps -a <string> selects all processes with a tty except session leaders
git init
git add .
git push
clear
exit
ls
cd <string>
git commit -m <string>
exit
python3 <file>
grep <string>
npm i
find -prune <directory>
sudo chown -R <string>
cd <directory>
cd <string>
apt-get update
git remote add origin <URL>
cd ..
cd ..
ls
nano <file>
read -p <string>
sudo apt-get install -y <string>
vim <file>
nano <file>
git st
ls -la
sudo docker kill corrade
mkdir <string>
ls
cd <string>
sed -i <directory>
sudo ufw status
git remote
sudo apt install <string>
finger <user> # displays information about user
cd <directory>
cd
cd ..
less
ls -alhd
xargs -n1 -P4 <string> a -mx=<number> <directory>
cd
cd <string>
fg
ls <directory> -l
fg
cd ..
ls
sudo apt-get install -y <string>
ls
cd <directory>
cd ..
clear
wget <URL>
vim <file>
ssh dirlic@10.18.0.39 -p <number>
cd <string>
date
sudo apt-get install <string>
nano <string>
cd <string>
ls
ls
ls
exit
cd <string>
cd <directory>
cd <string>
git status
exit
git status
vim
ls
sudo sed -i <directory>
cd <string>
ls
ls -al
cd.
ls
chmod <string>
ls
vim <file>
cd <string>
rm <string>
vim <file>
rm -r <string>
find . -name <file>
git push
exit <number>
cd ..
du -hs <string>
reset
ls
service apache2 reload
grep <string>
dpkg -l <string>
ls
vi <file>
test
docker ps
fg
sudo vim <directory>
vim <file>
ls
pkill <string>
cd <string>
sudo service nginx reload
cat <string>
ls
wget -q -O <file>
chmod -R <string>
pwd
cd <string>
unset <string>
git commit -m <string>
exit <number>
git diff
cd <string>
sed -i <string> -e <string>
find . -name <file> -type <string> -print -delete
git add .
docker-compose up -d --build
systemctl status <string>
npm install <string>
cd <string>
sudo service <string>
fg
curl -O <URL>
git status
date
cd -
ip a
tmux
vim <file>
sudo apt install <string>
cd <string>
sleep <number>
vim <file>
ls
egrep <string>
cd <string>
grep <string>
cd <string>
select(.status.containerStatuses[].name==<string> <string>
ls
rvm <string>
cd <directory>
wget -qcO <string>
sort
sleep <number>
cat <string>
alias
git branch
git submodule add <URL> -f
read -r <string>
ls
apt-cache search <string>
sudo apt-get install <string>
cd ..
git diff
sudo make install
source <directory>
bash <file>
ls
ls
chmod +x <string>
rm -rf <string>
cd <string>
sudo sed -i <directory> <file>
mkdir <string>
cd <directory>
ls -la
cd <string>
ls
cd ..
cd ..
ls
sudo journalctl -u <file>
ls
git init
grep --version
cd <string>
cd <directory>
sudo rm -rf <string>
ls -la <directory>
cut -d"/" -f <string>
ls
read
sudo pacman -Rcdns <string>
cd ..
read -r <string>
vi <file>
ls
exit
cd <directory>
cd <directory>
git status
cd <directory>
sudo python3 <file>
vi <file>
gpg --sign-key <string>
su - <string>
ls
cd <directory>
cd ..
print <string>
cd <directory>
cd <directory>
ls
sudo apt-get install <string>
cd ..
cd <string>
sh <file>
find -i <string>
ls
git push origin <string>
tail -f <directory>
git clone <URL>
vi <file>
exit
git commit -m <string>
cd <directory>
cd <directory>
git status
wget <URL>
diff --version
cd <directory>
ls
vim <file>
clear
ls
vim <file>
docker ps
rm <string>
cd <string>
sudo npm i prettier -g
exit
cd <string>
cd <string>
git rm --cached <string>
man <string>
git checkout
vim <file>
ps aux
source <directory>
ping -c <string>
service apache2 restart
sudo mysql -u <string> -p
ls
git pull
touch <file>
npx <string>
python3 <file>
cd ..
git grep -l <string>
apt list --installed <string>
cd <string>
cat <string>
ls
git status
cat <string>
git commit -m <string>
grep -Eio <string> <string>
git push -u <string> master
sort
cd <string>
tail -f <string>
grep -r <string>
docker run -v <directory> -v <directory> --rm -it <string>
ls -lah
git status
git diff
git status
touch <string>
sudo apt-get install -y <string>
git checkout <string>
cd <string>
git push -u <string> main
cd <directory>
apt-get update
vi <file>
git push
exec zsh
cd ..
cd
sudo userdel <string>
mvn clean <string>
done\
rm -rf <string>
cd ..
nano <file>
sed -e <directory> -e <directory>
cd ..
ls
ls
cp <string>
cd
ls
sleep <number>
git init
mv <string>
mkdir <string>
cd <directory>
ls
sudo ls <directory>
curl -X <string> -d <string>
pwd
sudo apt install <string>
sed -n <string>
ls
cd <string>
git commit -m <string>
exit
cat <string>
sudo apt-get full-upgrade -y
git add
sudo sed -i <directory> <file>
awk <string>
git co -t -b <string>
ip
vim <file>
cd <string>
chmod <string>
grep <string>
cd
rm <string>
unzip <file>
useradd <string>
do-release-upgrade
rmdir <string>
cd <directory>
npm run test
top
<file> - <number>
ls
cd <directory>
git commit -m <string>
git
exit
git checkout <string>
ls
sudo apt-get -u <string>
exit <number>
ls
kubectl <string>
sh <file>
ls
cd
ls
rm -r
grep -E <string>
file <string>
bash <file>
sudo dpkg-reconfigure console-setup
file <string>
ls
ls -l
cd <string>
ls
apt-get install <string>
git clone <URL>
exit
cd <string>
sudo chmod u+x <file>
git push -u <string> master
exit
git clone <URL>
fg
git clone
sudo apt update
npm install -g <string>
ls
rm
sudo apt upgrade
git push
ls
vim <file>
ls
git commit -a
vim <file>
sudo firewall-cmd --reload
ls
ls
npm run dev
rm <string>
cd <directory>
code <string>
sudo apt install <string>
ls
ls
which <string>
cd <directory>
docker pull <string>
git add .
cd ..
ls ..
grep <string>
cat <string>
python3 <file>
cat <string>
ls
wget <URL>
read -p <string>
grep -i <string> >files
sudo modprobe <string>
ls
cd <string>
sudo node <file>
npm install -g <string>
ls
ssh
exit
ls
sudo -u <string>
git pull
mkdir <string>
vi <file>
ls
ls
sleep <number>
ls
git add -A
apt-get install -y <string>
cat <string>
rm <string>
fg
mv <string>
npm run build --prod
sh <file>
sort -g
sudo addgroup
cd <directory>
tmux set-option -g <string>
sudo dnf install <string>
mkdir -p <string>
clear
sudo apt-get update
ls
npm i -D <string>
mkdir -p <string>
sudo <directory> <string>
git status
grep <string>
ls
ls -la <directory>
cd <string>
cat <string>
rm <string>
ls
cd <string>
ps -ef
npm install <string>
cd ..
wget <URL>
tar -cf <file>
npm start
journalctl -xe -b <number>
sudo prometheus --config.file=<file>
git pull
sudo apt install <string>
tail -f <string>
sudo ifconfig <string>
cd ..
grep <string>
fg
python3 <file>
vim <file>
curl -sL <URL>
git clone <URL>
rm temp -rf
cd <string>
git checkout <string>
cd <string>
sudo bash --rcfile <file> -c <string>
cd ..
sudo rm -rf <string>
sed -e <directory>
cd <string>
sudo apt install -y <string>
git push
mkdir <string>
sudo shutdown -r <string>
mv <string>
which <string>
cd <string>
ls
ls
read -rp <string> <string>
docker add -A
sudo apt install -y <string>
cd ..
ls -al
git push origin main
git log
exit <number>
git status
docker-compose up -d --build
clear
exit
git add .
cd <string>
sudo docker cp <file>
sudo git clone <URL>
git pull
mv <string>
cat <string>
df -h
mkdir <string>
vim <file>
ls
rm -r <string>
ls
cd <directory>
X :1&
git clone <URL>
fg
cd
code .
head -20
wc -l
git add -A
npm-recursive-install
cd <string>
git commit
sudo sed -i <directory> <file>
git push -u <string> master
vim <file>
docker rm <string>
tail -f <string>
sudo chown -R <string> -gn <string>
snap info <string>
cd <string>
rm -rf <string>
git push -u <string> master
clear
cd <directory>
grep -Eno <string>
git pull origin master
touch <string>
ls
ls -la
cd <string>
<file> <file>
fg
chmod +x <string>
git stash
vim <file>
clear
cd <string>
cat <string>
git add .
clear
pwd
git commit -m <string>
rm -r <string>
sudo sed -i <directory>
cd <directory>
git reset HEAD --
node <file>
clear
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
git pull origin master
vim
ls
cd <string>
pwd
git add <string>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
vim <file>
ls
ls
sudo ln -s <directory>
vim <file>
docker rm <string>
rm <string>
read <string>
touch <string>
awk <string>
git add .
ls -la
git checkout ${commit} -- <string>
exit
git pull origin development
egrep <string>
git status
rm <string>
vim <file>
clear
sudo rm -rf <string>
sudo resize2fs <directory>
ls
vim <file>
cd
exit
vim <file>
ls
unset <string>
grep <string>
sudo apt-get -y <string>
git push origin PTS-578_redirects_not_updating_automatically --force
python3 <file>
ls
sudo fail2ban-client <string>
su - <string>
ls
cd <directory>
sudo apt-mark <string>
docker images
cd ..
vim <file>
sudo subl <string>
ls
source <directory>
ls
npm run bench -- -c <file> -n <file>
touch <string>
exit
cd ..
ls
vim <file>
cd <string>
cd <string>
print <string>
cat <string>
vi <file>
rmdir <string>
ls
cd <string>
ls
ls
cd ..
exit
clear
head -n <string>
gzip <string>
cd <directory>
sudo apt-get update
git branch -d <string>
grep -i <string>
python3 <file>
exit <number>
vim <file>
done
sudo add-apt-repository -y <directory>
git add .
mkdir <string>
git remote add origin <URL>
vim <file>
vim <file>
sort -u
cat <string>
ls
ls
base64 -w <number>
grep <string>
cd <string>
ln -s <string>
npm run bench -- -c <file> -n <file>
clear
npm run bench -- -c <file> -n <file>
sudo systemctl status <string>
cd <string>
git remote -v
sudo tlp-stat -s
ls
git status
git rev-list --objects --all
ls -lh <string>
git push
grep <string>
curl -s <string>
pkill <string>
python3 <file>
ls
cd <string>
git rm -rf <string>
clear
ls
git push
git add .
cd <string>
fg
head -n20 <file>
tmux --version
cd ..
ls
ls
module <string>
cd <string>
vim <file>
sudo sed -i <directory>
cd <string>
docker images --no-trunc
python3 <file> --model-path <file> --conf <string> --img-size <number>
git status
npm start
apt-get update
bash <file>
telnet <string>
ls
cd <string>
sed -i <directory>
ls
sudo bash
vim <file>
cd ..
cd <directory>
git commit
git commit -m <string>
vim <file>
cd <string>
cd <string>
rm -rf <string>
perl -pe <string>
ls
wget -q <URL> -O-
git checkout <string>
git rm -r --cached <directory>
cd ..
cd
ls
ls
fg
docker push <directory>
cd ..
git rm --cached <string>
exit <number>
git pull origin master
grep <string>
unset
grep <string>
ls
ls
exit
cd <string>
cd
cd <directory>
ls
rm <string>
vi <file>
awk -F\" <string>
cd <string>
cd <directory>
vim <file>
sudo usermod -aG <string> $USER
ls -l
touch <string>
sed -n <string>
ls
cd <directory>
ls
find . -type <string> -exec <string> -i <directory>
ls
exit
ls -l
ls
exit
ls
rm <string>
git commit -m <string>
sudo apt upgrade
exit
find . -type <string> -mtime <string>
cd <string>
clear
clear
apt search <string>
vim <file>
sudo apt-get install <string>
vim <file>
read -s -n <number>
ls
ls
touch <string>
cd ..
ls
vim <file>
cp -r <directory>
tail -$2 <directory>
ls
wget
cd <string>
npm install
grep -rl <string>
chmod <number> <string>
clear
vi <file>
git restore --staged <string>
local -a
curl <string>
git clone <URL>
git branch
sleep <number>
git clone <URL>
cd <string>
git fetch
ls
cd <directory>
git status
exit
sudo dpkg --clear-selections
ls ..
ls
cd <string>
sudo apt update
history -r
ls
sudo install_name_tool -change <directory>
bash
python3 <file>
sed -i <directory>
ls
grep -i <string> >files
cd <string>
git init
cd <directory>
grep <string>
git commit -m <string>
rm <string>
git commit -m <string>
ls
git clone --depth <number> <URL>
grep -q <string>
git commit -m <string>
ls
sudo apt-get install <string>
cat <string>
rm -rf <string>
git add .
ls
ls -alF
git push
ls
ls -ltr
exit
sudo python3 <file>
nano <string>
docker-compose up -d --build
clear
git init
cd <string>
vim
sudo ln -s <directory>
more <file>
git commit -m <string>
git commit -m <string>
ls
grep <string>
apt-get install sysstat -y
ls
cd <string>
npx tailwindcss -i <file> -o <file> --watch
npm run coverage
sudo reboot now
done
rm <string>
ftp <string>
git remote add origin <URL>
ls
mv <string>
apt-cache policy <string>
chmod <number> <string>
cd <directory>
git commit -m <string>
top
cut -f <string> -d <string>
npm run package
ps -ef
git remote -v
curl -sSfL <URL>
clear
git push origin master
nano <file>
git add .
sudo pacman -S <string>
ls
grep <string>
ls
cat <string>
unset <string>
sudo apt install <string>
git checkout -b <string>
npm init -y
wget -cO <string>
ls -A
git push origin master
vim <file>
cd <string>
git pull
cat <string>
export <string>
ls -la
cat <string>
exit
sort -rh
mkdir <string>
xrandr --output <string> --auto
service <string>
git checkout master
diff <file>
unset -f <string>
sudo kill <number>
cat <string>
git checkout master
git init
node <file>
ls
ls
cat <string>
sudo pacman -Scc
touch <file>
sudo make
ls -lAF
exit
vi <file>
cd <string>
wget -O <file>
fg
exit <number>
clear
ls
cd <string>
cd ..
git config --global <file> <file>
ls
cd <string>
npm run pretty
vi <file>
cd <string>
cd <string>
done
sudo python3 <file> install
git clone --recursive <URL>
cd
cd <string>
ls
sudo dpkg -P <string>
ls
ls -altr
ls
sudo apt-get install <string>
sudo dnf install -y <string>
cp <string>
sudo apt install <string>
vim <file>
cd <directory>
screen -r
npm run test
ls
ls
git add <string>
git commit
cd <string>
print <string>
git flow <string>
ls
ls
source <string>
ls
sudo apt-get update
ls
git push
curl <string>
cd ..
git clone <URL>
ls
grep -i <string>
git init
mv <string>
<file> - <number>
ls
ls
ls
cd <string>
ssh -L <string> -N -f -l <string>
sync
cd <string>
sudo kill -9 <number>
ps -auxwf
rm <string>
code .
cd <string>
ls
npm run bench -- -c <file> -n <file>
sudo ltrace -f -p <number> -o <file>
git commit -m <string>
python -c <string>
mv <string>
cd ..
vim <file>
git grep -q -iI <string>
zgrep -i -E -o --no-filename <string>
sudo apt-get autoremove
ls
history
git push -u <string> master
ls -la
mv <string>
apt
source <directory>
vim <file>
ls
cd ..
chmod -options <string> # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)
git clone <URL>
rm <string>
cd <directory>
sudo cat <directory>
cd ..
ls
git pull origin master
exit <number>
sudo apt-key adv --keyserver <string> --recv <string>
cd ..
systemctl status <string>
openssl version -a
git push -u <string> main
cd ..
ls
vi <file>
ls
curl --connect-timeout <number> -Is <file>
git status
pwd
grep -f <string>
cd ..
cd <string>
git commit -m <string>
exit <number>
find . -name <file> -type <string> -exec <string> -i <directory> <directory> {} +
git status
ls
git add .
ps ax
cd <string>
ls
sed <directory>
sudo nginx
vi <file>
screen -r
tr <string> <string>
pkill <string>
grep <string>
rmdir <string>
vim <file>
git config --global <file> <string>
cd <string>
vim <file>
cd <string>
cd <string>
ls
ls
sudo apt update
history -a
docker start <string>
rm <string>
su
ls
ls
vi <file>
git pull
clear
clear
git status
ls
mv <string>
docker stop boost
npm start
cat <string>
ls
cd <directory>
docker rmi -f <string>
npm install
tail -n <number> -f <directory>
docker run -p <string> <string>
git add .
cd <string>
cd <string>
ps -ef
git branch -D <string>
sudo apt-get install <string>
ls
ls
ls
cd <directory>
ls
sudo visudo
sudo raspi-config
ls
ls
pwd
git commit -m <string>
cd <string>
git clone <URL>
ls
vi <file>
cd <string>
cd
nano <string>
cd <string>
pwd
clear
cd <string>
cd <string>
git add .
tail -f <directory>
local <string>
python3
cd
exit <number>
ls
rm -rf <string>
mkdir <string>
git push -u <string> main
cd <directory>
pwd
npm test
ls
python3 <file>
nc <number> <number>
ls
xargs -L1 -I'{}' <string> -rE <string>
git
git submodule add <URL>
git add .
clear
reboot
git add .
cd <string>
env
egrep <string>
clear
clear
cd <directory>
exit
sudo true
sed -i <string>
fg
cat --color <string>
cat <string>
clear
clear
ssh <string>
sudo reboot
cd <string>
docker exec -it <string> bash
mv <string>
sudo chmod u+x <file>
cd <string>
git push -u <string> master
cd <string>
docker-compose up
vim <file>
sudo reboot
uniq
clear
git config --global <file> <string>
rm -f <string>
cd
history -w
vim <file>
sudo install
source <string>
sudo gedit <string>
ls -lah
exit
ls
git commit -m <string>
ls
ls
cd
docker-compose up -d --build
cd <directory>
git commit -am <string>
git branch -M <string>
ps -e
git diff <string>
touch <string>
cp <string>
ls
git branch --show-current
clear
cd <string>
sudo vi <file>
sudo ntpdate -q <string>
git status
git status
ls
git config --global <file> <file>
cat <string>
ssh-add <directory>
clear
ls
cd <string>
sudo systemctl stop <string>
cd <string>
sudo stop uwsgi
sudo apt-get upgrade
cd <directory>
sudo rfkill <string>
git config --list --local
cd <string>
ls
git status
sort -o <file>
awk <string>
vi <file>
vi <file>
cd <directory>
sudo vi <directory>
ls
ls
cd ..
git init
vim <file>
ls
npm i
ssh-copy-id <string>
ls
open <string>
git remote -v
sudo git status
export <string>
clear
git commit -am <string>
nano <file>
fg
git config --global <file>
cd <directory>
ls
cd <directory>
cp <string>
chmod <number> <string>
ls
git remote remove <string>
ls
sudo make
git status
sleep <string>
xargs --null <string> -pi -e <directory>
wget -q -O - <URL>
grep -i <string> >files
ls
cat
ls
sudo pacman -Syu --noconfirm
ssh-keygen -t <string>
sudo node <file>
git remote add upstream <string>
git commit -m <string>
cd <string>
vim <file>
nano <file>
git clone <URL>
sleep <number>
cp -i <string>
python3 <file>
history # shows command line history
ls -lah
mvn exec:java -Dexec.mainClass=<file>
sudo nano <directory>
ls
sudo mysql
sudo apt-get --reinstall <string>
yay -S <string>
sudo restart <string>
ls
cd <directory>
clear
ls
git pull
vi <file>
ls
mkdir <string>
clear
git init
cat <string>
ls -C -b
rm -rf <string>
cd <string>
ls -lh
vim
ls -a
clear
cd <directory>
gzip --best <file>
cd <string>
code <string>
sudo start uwsgi
vim <file>
mkdir <string>
git add .
ls
read -rp <string> <string>
ls
find . -name <file> -type <string> -print -delete
cp -r <directory>
openssl x509 -outform <string>
ls
vi <file>
git checkout -
cd ..
git commit -m <string>
userdel -r <string>
date
cd
cd <string>
cd ..
exit
clear
docker volume <string>
nano <file>
du -h <directory>
clear
git commit -m <string>
ls
npm run devstart
cp <string>
cd <string>
git clone <URL>
sudo su
exit
grep <string>
grep -Eoi <string>
sudo apt-get install <string>
clear
git commit
ls
git init
vim <file>
egrep -r <string>
cp -r <directory>
ls
sudo umount <directory>
sudo systemctl enable <string>
top
python3 <file>
ls
ls -la <directory>
rm -r <string>
git --version
exit
mkdir <string>
sudo pip3 <string>
npm audit fix
ls++ -a
sudo pacman -Syyu
find -maxdepth <number> -type <string>
htop
kubectl get <string>
cd <directory>
ls
exit <number>
cd <string>
cd <string>
patch <file>
cp <string>
nano <file>
apt-get -y <string> <string>
git status
<directory> <string>
ls
ls
clear
python3 <file>
ls
clear
perl -nle <string>
clear
systemctl status <string>
ls
diff -u <string>
rm -rf <string>
docker-compose up -d
cd <directory>
rm -f <string>
cd <directory>
rm -r <string>
sudo apt-get install <string>
ls
ls
rm -r <string>
git remote add origin <URL>
ip a
cd <string>
git push -u <string> master
ls
cat <string>
cat <string>
git ls-remote <string>
done
npm i <string>
ls
git commit -m <string>
chmod u+x <string>
ls
cd <string>
cd
ls
cd <directory>
git pull origin main
make
chmod <string>
sudo su -
ssh-add <directory>
which <string>
history -c
ls
ls
vim <file>
ls
ls
ls
history
ls
ls -lh
cp -R <string>
cd ..
vim <file>
ls
git add <string>
ls
ls
cd <string>
cd <string>
git remote add origin <URL>
mv <string>
sudo apt install <string>
vi
git pull
git push
ls
grep -vx <string>
git
tar -zxf <file>
git status
cd <directory>
cd <directory>
zcat <file>
git cm -m <string>
git pull origin master
vim <file>
ls -a
git commit --amend --no-edit --no-verify
nano <file>
ls
df -h
git commit -m <string>
ls
sudo systemctl enable <string>
git add <string>
su root
clear
cd <string>
cd <directory>
sudo apt-get install <string>
ls -la
sudo apk add <string>
cd <string>
git stash apply <string>
python3 <file>
cat <string>
cp -r <directory>
rm -rf <string>
sudo docker rm corrade
find . -name <file>
cd ..
fg
read -s -p <string>
cd <string>
ls -l
git pull
clear
sudo yum install -y <string>
ls
cd <string>
git add <string>
exit
clear
ls
ls
npm run serve
psql -U <string> -h <string> nzdpu_wis
vi <file>
ls
git pull
cd <string>
sudo rm -rf <string>
ls
cp <string>
find . -empty -type <string> -print -delete
grep -i <string> >files
cd ..
exit
ls
cd ..
git status
curl -O <URL>
git commit -m <string>
cd <directory>
cd
ls
ls
cd ..
vim <file>
ls
git pull
bash
chown -R <string>
python3
ls
clear
python3 -version
sudo vim <directory>
cd ..
ls
sleep <number>
yarn add --dev <directory>
exit
rm <string>
git commit -m <string>
find <directory> -iname <file> -type <string> -exec <string> -c <string>
cd ..
find -name <string>
cp <string>
find . -name <file>
clear
ls
sudo vi <directory>
dpkg
ls
npm install -g <string>
cd <string>
ls
ls
git status
history -r
sed -e <directory>
cd <string>
done
vim <file>
ls
codedown javascript > <file>
df -h <string>
source <file>
ls -l
less
ls
rm -r <string>
exit
chmod u+x <string>
git add <string>
ssh <string>
cd <directory>
sudo docker rmi <string>
unset <string>
history
rm -r <string>
ls
npm install <string>
cd <string>
cd ..
cd <string>
clear
cd <string>
sudo -i
git status
git commit -m <string>
grep <string>
ls
find . -size <string> -a -print -a -exec <string> -f <string> \
clear
ls
nano <file>
git add .
ls
cd <string>
git push
ls
cd ..
cat <string>
cd <string>
sudo rm <directory> -rf
git diff
mkdir <string>
cd <string>
git clone <URL>
node <file>
cd
sudo ufw allow <string>
nano <file>
ls
ls
git init
cd <string>
sudo nmcli <string>
python3 <file>
cd <string>
wget <URL>
ls
cd <directory>
vi <file>
done
nano <string>
ssh -t <file> tmux new -As0
cd ..
git branch -a
vi <file>
ls
ls
ls
ls
ls
sudo npm install --save <string>
git status
ls
nano <string>
ls
cp -v <string> <directory>
git diff
history -a
setg RHOSTS <file>
docker run <string>
cp -r <directory>
ls
apt list --installed <string>
sudo apt purge <string>
sed -i <directory>
clear
rm <string>
ls
sudo shutdown now
du -H
ls
ls
git commit -m <string>
ls
git st
cd <directory>
ls -la
find . -type <string> -exec <string> -i <directory>
ls
git push
git add <string>
sudo apt-key adv --keyserver <string> --recv <string>
cd <directory>
sudo apt-get install <string>
cat <string>
systemctl status <string>
clear
exit
vim <file>
npm install <string>
cd ..
nano <string>
python3 <file>
mkdir <string>
sudo apt-get install <string>
vim <file>
cd <string>
git pull
cd ..
ls
cd <string>
ls
vi <file>
nano <file>
git clone <URL>
fg
ls
git status
sed <directory>
cd <string>
curl -X <string> -d <string> -d <string>
dpkg -S <string>
cd ..
ls
ls
cd <string>
git checkout <string>
git push
git push origin master
clear
docker-compose down <string>
cd ..
sudo modprobe <string>
cd <string>
sed <directory>
rm <string>
tar xvf <file>
cd ..
less <string>
cp -r <directory>
cd <string>
sudo reboot now
sed <directory>
git remote add origin <URL>
rm -r <string>
ls
less <string>
sudo docker run -d --restart <string> -v <directory> -v <directory> -v <directory> -v <directory> -p <string> --name <string> apl-corrade <directory> -l\:Corrade.exe.lock --no-daemon <file>
find . \( -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -name <file> -o -name <string> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> -o -name <file> \) -exec <string> -rf -- <string> +
sudo cat <file> <string>
do\
<directory> <directory>
ls
codedown javascript
vim <file>
npx create-react-app my-app --template <directory> --use-npm
ls -la
git status
sudo systemctl daemon-reload
cd ..
ls
npm install -g <string>
less <string>
then sh -c <directory>
git push -u -f <string>
sudo
sudo nano <file>
cd ..
cd ..
git add .
ls
git remote add origin <URL>
git init
git config --local <file>
grep -n <string>
mkdir <string>
ls
cd <string>
git tag <string>
mkdir <string>
sudo install -o <string> -g <string> -m <number>
mkdir <string>
cd <string>
tr <string>
git remote --v
df
clear
ls
ls
cd <directory>
vim <file>
vim <file>
sudo mv <string>
cp <string>
cd <string>
cd <string>
ls
wget <URL>
cd -
php artisan <string>
systemctl start <string>
curl -o- <URL>
read -p <string>
grep -i <string> >files
ls
then\
vim <file>
finger <user> # displays information about user
cat <string>
cat <string>
git commit -m <string>
git clone <URL>
fg
cp -r <directory>
exit <number>
curl <string>
git submodule update --init --recursive\
cd <string>
fg
ls
bash
ls
docker exec -it <string>
mv <string>
vim <file>
git push
sleep <number>
git add <string>
ls
vim <file>
bash
ls
history
ls
cd ..
git status
ls
rm <string>
cat <string>
vi <file>
git add <string>
npm run test
ls
sleep <number>
git remote -v
git status
ls
git merge <string>
cd <directory>
npm run bench -- -c <file> -n <file>
ls
git rebase <directory>
tmux set-option -g <string>
ls -r
grep <string>
git config --global <file>
cd <string>
ls
sudo apt install gnome-software-plugin-flatpak -y
sudo
cat <string>
touch <string>
cd
mv <string>
sudo systemctl daemon-reload
cd <string>
cd <directory>
git add <string>
screen -S <string>
cd <string>
vim <file>
xargs -0r <string> -p
mkdir <string>
ls
ls
cd <string>
ls
cd <string>
mv <string>
rm -rf <string>
sudo rm -rf <string>
sudo -s -u <string> -H
ls
cd <string>
cd <string>
docker run -d -p <string> <string>
yarn <string>
cat <string>
rake <string>
sed -e <directory> -e <directory>
df -h
git push
git commit -m <string>
ls
ls
git pull
ls
rm -f <string>
sudo vi <file>
sudo <file> -d
cd <string>
su -
ls
sudo udevadm control --reload-rules
ls
ls
npm run coverage
clear
git merge <string>
chmod <string>
cd <directory>
clear
git commit -m <string>
git push
cd <string>
git flow init -d
ls
git add <string>
cat <string>
cat <string>
clear
cd
gpg --verify <file> <string>
ls
git checkout <directory> -f
git commit -m <string> --no-verify
ls
pwd
code .
ls
ruby -e <string>
cd <directory>
sudo lvextend -l <string>
cd <directory>
cd <string>
clear
exit <number>
cd <directory>
python3
<directory> -m <file>
git push --set-upstream <string>
su root
ls
fg
sudo npm install <string>
git commit -m <string>
sed -r <directory>
sudo systemctl status prometheus
cat <string>
make -C <string>
cd ..
source <directory>
ls
cd <string>
sudo sh -c <string>
docker images
python3 <file>
sudo su
git pull
apt list --upgradable
shutdown
ssh dirlic@10.18.0.39 -p <number>
ls
ls
ls
git status
sudo pkill sxhkd
docker image ls
ls
systemctl list-units
vim <file>
head
cat <string>
clear
clear
sudo -E <string> -
clear
setg RHOSTS <file>
read -p <string>
git co PTS-578_redirects_not_updating_automatically
clear
uniq -c
clear
git pull origin master
chmod <number> <string>
nano <file>
grep <string>
chmod +x <string>
cd <string>
cd <string>
git commit -m <string>
grep <string>
git remote add origin <URL>
ls
vim <file>
wget <URL>
cd <string>
git add <string>
else\
vi <file>
npm install
touch
sudo start uwsgi
mkdir
ping <string>
grep -s -n --color <string>
mkdir <string>
git push
git add <string>
sudo ufw allow <string>
cd <directory>
sudo sed -i <directory>
ls -la
git clone <URL>
git push -u
chmod <number> <string>
rm -rd <string>
ls
sdiff -Wia <file>
pwd
vim <file>
exit
pwd
docker images
sudo sed <directory> <directory>
pwd
grep <string>
clear
script/build.sh
sed -nE <string>
ls
sudo apt-get update
df -h
npm run start
sudo apt-key add -
clear
ls -ltr
exit
cd <string>
git diff
rm -rf <string>
grep -i <string> >files
vi <file>
cd <string>
git commit -m <string>
cd <string>
mount -t <string> overlay -olowerdir=<directory> <directory>
npm install
g++ -std=<string> <file> -o <string>
cd <string>
su mv <file> <string>
sudo rm -r <string>
ls
apt-get -y <string> <string>
ls
cd <string>
vim <file>
python3 -m <string> venv
top
ls
npm install
rm -f <string>
ls
ls
cd
git please
python3 <file>
history
sudo apt install <string>
clear
wc -l
cd <string>
clear
sudo usermod -aG <string> <string>
vim <file>
vim <file>
cd <string>
cd
ls -a
git fetch
ls
mkdir <string>
git diff
sudo chmod -R <string>
fg
curl -sSL --fail <directory>
ls
man <string>
vim <file>
then\
vi <file>
git pull
xargs -L1
git remote add origin <URL>
npm i <directory> -f
git status
git push -u <string> master
ls
pwd
nano <file>
exit <number>
sudo apt upgrade
clear
docker stop
sudo apt install <string>
npm i
exit
cd <string>
git pull
vi <file>
ls
ssh <string>
git checkout <string>
git add <string>
ls
git rm --cached <directory> -f
head -n <string>
ls
git add .
git -push
cd <string>
git branch -M <string>
python3 --version
ls
npx <string>
ls
ls
npm install -g <string>
vi <file>
npm install -g <string>
vi <file>
clear
ls
rm <string>
python3 <file>
ls
sudo docker rm corrade
sudo -E <string> -
sudo rm -rf <string>
git commit
less <string>
rm <string>
clear
git remote add origin <URL>
ls
read -s -n <number>
rm -rf <string>
rm -f <string>
npm install -g <string>
cd ..
find
sudo su
cd <string>
ls
pwd
ls
clear
date
update-alternatives --install <directory>
ls
ps auxf
git status .
ls
chmod +x <string>
vim <file>
git pull
cd
docker exec -it <string> bash
rm -rf <string>
cd <string>
exit
cut -f <string> -d <string>
git switch main
cd <directory>
cd <string>
git clone <URL>
